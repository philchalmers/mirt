[{"path":"https://philchalmers.github.io/mirt/articles/mirt-vignettes.html","id":"mirt-vignette-files","dir":"Articles","previous_headings":"","what":"mirt Vignette Files","title":"","text":"access examples, vignettes, exercise files generated knitr please visit link.","code":""},{"path":"https://philchalmers.github.io/mirt/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Phil Chalmers. Author, maintainer. Joshua Pritikin. Contributor. Alexander Robitzsch. Contributor. Mateusz Zoltak. Contributor. KwonHyun Kim. Contributor. Carl F. Falk. Contributor. Adam Meade. Contributor. Lennart Schneider. Contributor. David King. Contributor. Chen-Wei Liu. Contributor. Ogreden Oguzhan. Contributor.","code":""},{"path":"https://philchalmers.github.io/mirt/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"R. Philip Chalmers (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":"@Article{,   title = {{mirt}: A Multidimensional Item Response Theory Package for the {R} Environment},   author = {R. Philip Chalmers},   journal = {Journal of Statistical Software},   year = {2012},   volume = {48},   number = {6},   pages = {1--29},   doi = {10.18637/jss.v048.i06}, }"},{"path":"https://philchalmers.github.io/mirt/index.html","id":"mirt-multidimensional-item-response-theory-in-r-","dir":"","previous_headings":"","what":"Multidimensional Item Response Theory","title":"Multidimensional Item Response Theory","text":"Analysis dichotomous polytomous response data using unidimensional multidimensional latent trait models Item Response Theory paradigm. Exploratory confirmatory models can estimated quadrature (EM) stochastic (MHRM) methods. Confirmatory bi-factor two-tier analyses available modeling item testlets. Multiple group analysis mixed effects designs also available detecting differential item functioning modeling item person covariates.","code":""},{"path":"https://philchalmers.github.io/mirt/index.html","id":"examples-and-evaluated-help-files-are-available-on-the-wiki","dir":"","previous_headings":"","what":"Examples and evaluated help files are available on the wiki","title":"Multidimensional Item Response Theory","text":"Various examples worked help files compiled using knitr package generate HTML output, available package wiki. User contributions welcome!","code":""},{"path":"https://philchalmers.github.io/mirt/index.html","id":"installing-from-source","dir":"","previous_headings":"","what":"Installing from source","title":"Multidimensional Item Response Theory","text":"’s recommended use development version package since likely date version CRAN. install package source: Obtain recent gcc, g++, gfortran compilers. Windows users can install Rtools suite Mac users download necessary tools Xcode suite related command line tools (found within Xcode’s Preference Pane Downloads/Components); Linux distributions already date compilers (can updated easily). Windows users include checkbox option installing Rtools path easier command line usage. Install devtools package (necessary). R, paste following console: Load devtools package (requires version 1.4+) install Github source code.","code":"install.packages('devtools') library('devtools') install_github('philchalmers/mirt')"},{"path":"https://philchalmers.github.io/mirt/index.html","id":"installing-from-source-via-git","dir":"","previous_headings":"Installing from source","what":"Installing from source via git","title":"Multidimensional Item Response Theory","text":"devtools approach work system, can download install repository directly. Obtain recent gcc, g++, gfortran compilers (see instructions). Install git command line tools. Open terminal/command-line tool. following code download repository code computer, install package directly using R tools (Windows users may also add R git path)","code":"git clone https://github.com/philchalmers/mirt R CMD INSTALL mirt"},{"path":"https://philchalmers.github.io/mirt/index.html","id":"special-mac-os-x-installation-instructions","dir":"","previous_headings":"Installing from source","what":"Special Mac OS X Installation Instructions","title":"Multidimensional Item Response Theory","text":"reported cases XCode install appropriate gfortran compilers correct location, therefore installed manually instead. accomplished inputing following instructions terminal:","code":"curl -O http://r.research.att.com/libs/gfortran-4.8.2-darwin13.tar.bz2 sudo tar fvxz gfortran-4.8.2-darwin13.tar.bz2 -C /"},{"path":"https://philchalmers.github.io/mirt/index.html","id":"licence","dir":"","previous_headings":"","what":"Licence","title":"Multidimensional Item Response Theory","text":"package free open source software, licensed GPL (>= 3).","code":""},{"path":"https://philchalmers.github.io/mirt/index.html","id":"bugs-and-questions","dir":"","previous_headings":"","what":"Bugs and Questions","title":"Multidimensional Item Response Theory","text":"Bug reports always welcome preferred way address bugs Github ‘issues’. Feel free submit issues feature requests site, ’ll address ASAP. Also, questions package, IRT general, feel free create ‘New Topic’ mirt-package Google group. Cheers!","code":""},{"path":"https://philchalmers.github.io/mirt/reference/ASVAB.html","id":null,"dir":"Reference","previous_headings":"","what":"Description of ASVAB data — ASVAB","title":"Description of ASVAB data — ASVAB","text":"Table counts extracted Mislvey (1985). Data 16 possible response patterns observed four items arithmetic reasoning test Armed Services Vocational Aptitude Battery (ASVAB), Form 8A, samples white males females black males females.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/ASVAB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Description of ASVAB data — ASVAB","text":"Mislevy, R. J. (1985). Estimation latent group effects. Journal American Statistical Association, 80, 993-997.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/ASVAB.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Description of ASVAB data — ASVAB","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/ASVAB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Description of ASVAB data — ASVAB","text":"","code":"data(ASVAB) datWM <- expand.table(subset(ASVAB, select=c(Item.1:Item.4, White_Male))) datWF <- expand.table(subset(ASVAB, select=c(Item.1:Item.4, White_Female))) datBM <- expand.table(subset(ASVAB, select=c(Item.1:Item.4, Black_Male))) datBF <- expand.table(subset(ASVAB, select=c(Item.1:Item.4, Black_Female)))  dat <- rbind(datWM, datWF, datBM, datBF) sex <- rep(c(\"Male\", \"Female\", \"Male\", \"Female\"),   times=c(nrow(datWM), nrow(datWF), nrow(datBM), nrow(datBF))) |> factor() color <- rep(c(\"White\", \"Black\"),   times=c(nrow(datWM) + nrow(datWF), nrow(datBM) + nrow(datBF))) |> factor() group <- sex:color  itemstats(dat, group=group) #> $`Female:Black` #> $`Female:Black`$overall #>    N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  145            1.462          1.014 0.046 0.087 0.176     0.921 #>  #> $`Female:Black`$itemstats #>          N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item.1 145 2 0.503 0.502   0.659         0.213      -0.078 #> Item.2 145 2 0.421 0.495   0.550         0.074       0.152 #> Item.3 145 2 0.283 0.452   0.501         0.064       0.164 #> Item.4 145 2 0.255 0.437   0.421        -0.011       0.256 #>  #> $`Female:Black`$proportions #>            0     1 #> Item.1 0.497 0.503 #> Item.2 0.579 0.421 #> Item.3 0.717 0.283 #> Item.4 0.745 0.255 #>  #>  #> $`Female:White` #> $`Female:White`$overall #>    N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  228            2.118          1.255 0.208 0.037 0.512     0.877 #>  #> $`Female:White`$itemstats #>          N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item.1 228 2 0.618 0.487   0.615         0.277       0.464 #> Item.2 228 2 0.605 0.490   0.642         0.312       0.432 #> Item.3 228 2 0.487 0.501   0.629         0.284       0.458 #> Item.4 228 2 0.408 0.493   0.662         0.339       0.408 #>  #> $`Female:White`$proportions #>            0     1 #> Item.1 0.382 0.618 #> Item.2 0.395 0.605 #> Item.3 0.513 0.487 #> Item.4 0.592 0.408 #>  #>  #> $`Male:Black` #> $`Male:Black`$overall #>    N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  140            1.443          1.027 0.051 0.102  0.18      0.93 #>  #> $`Male:Black`$itemstats #>          N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item.1 140 2 0.443 0.499   0.612         0.158       0.029 #> Item.2 140 2 0.400 0.492   0.587         0.133       0.071 #> Item.3 140 2 0.329 0.471   0.426        -0.037       0.304 #> Item.4 140 2 0.271 0.446   0.521         0.100       0.123 #>  #> $`Male:Black`$proportions #>            0     1 #> Item.1 0.557 0.443 #> Item.2 0.600 0.400 #> Item.3 0.671 0.329 #> Item.4 0.729 0.271 #>  #>  #> $`Male:White` #> $`Male:White`$overall #>    N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  263            2.475          1.361  0.34 0.075 0.673     0.779 #>  #> $`Male:White`$itemstats #>          N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item.1 263 2 0.741 0.439   0.705         0.475       0.596 #> Item.2 263 2 0.635 0.482   0.649         0.361       0.667 #> Item.3 263 2 0.593 0.492   0.734         0.481       0.588 #> Item.4 263 2 0.506 0.501   0.754         0.507       0.569 #>  #> $`Male:White`$proportions #>            0     1 #> Item.1 0.259 0.741 #> Item.2 0.365 0.635 #> Item.3 0.407 0.593 #> Item.4 0.494 0.506 #>  #>"},{"path":"https://philchalmers.github.io/mirt/reference/Attitude.html","id":null,"dir":"Reference","previous_headings":"","what":"Description of Attitude data — Attitude","title":"Description of Attitude data — Attitude","text":"Table counts extracted Andrich (1988). Data response patterns observed eight item survey.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/Attitude.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Description of Attitude data — Attitude","text":"items survey : Capital punishment one hideous practices time. state teach sacredness human life destroying . Capital punishment effective deterrent crime. believe capital punishment sure     necessary. think capital punishment necessary wish . find civilized way prevent crime must capital    punishment. Capital punishment justified act    deterrent crime. Capital punishment gives criminal deserves.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/Attitude.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Description of Attitude data — Attitude","text":"Andrich, D. (1988). Application Unfolding Model PIRT Type Measurement Attitude. Applied Psychological Measurement, 12, 33-51.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/Attitude.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Description of Attitude data — Attitude","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/Attitude.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Description of Attitude data — Attitude","text":"","code":"head(Attitude) #>   hideous state_teaching deterrent believe_not.necessary necessary_wish.not #> 1       0              1         1                     0                  0 #> 2       1              1         1                     0                  0 #> 3       0              1         1                     1                  0 #> 4       1              1         1                     1                  0 #> 5       0              1         1                     1                  1 #> 6       0              1         1                     1                  0 #>   must.have justified deserved freq #> 1         0         0        0    4 #> 2         0         0        0   10 #> 3         0         0        0    3 #> 4         0         0        0    8 #> 5         0         0        0    1 #> 6         0         1        0    1 df <- expand.table(Attitude) itemstats(df) #> $overall #>   N mean_total.score sd_total.score  ave.r  sd.r  alpha SEM.alpha #>  54            3.852          1.053 -0.064 0.524 -0.849     1.433 #>  #> $itemstats #>                        N K  mean    sd total.r total.r_if_rm alpha_if_rm #> hideous               54 2 0.444 0.502   0.056        -0.388      -0.340 #> state_teaching        54 2 0.648 0.482  -0.290        -0.616      -0.046 #> deterrent             54 2 0.667 0.476  -0.251        -0.587      -0.088 #> believe_not.necessary 54 2 0.463 0.503   0.523         0.053      -1.260 #> necessary_wish.not    54 2 0.481 0.504   0.669         0.249      -1.836 #> must.have             54 2 0.444 0.502   0.591         0.141      -1.499 #> justified             54 2 0.352 0.482   0.402        -0.061      -0.959 #> deserved              54 2 0.352 0.482   0.402        -0.061      -0.959 #>  #> $proportions #>                           0     1 #> hideous               0.556 0.444 #> state_teaching        0.352 0.648 #> deterrent             0.333 0.667 #> believe_not.necessary 0.537 0.463 #> necessary_wish.not    0.519 0.481 #> must.have             0.556 0.444 #> justified             0.648 0.352 #> deserved              0.648 0.352 #>   # \\donttest{  # estimate SSLM with estimated \" latitude of acceptance\" (rho) mod.rho <- mirt(df, 1, itemtype = 'sslm') #>  coef(mod.rho) #> $hideous #>     a1      d log_rho1 #> par  1 -0.929    0.089 #>  #> $state_teaching #>     a1      d log_rho1 #> par  1 -3.072    1.274 #>  #> $deterrent #>     a1      d log_rho1 #> par  1 -2.529    1.124 #>  #> $believe_not.necessary #>     a1      d log_rho1 #> par  1 -0.012   -0.236 #>  #> $necessary_wish.not #>     a1     d log_rho1 #> par  1 2.101    0.703 #>  #> $must.have #>     a1     d log_rho1 #> par  1 2.719    0.915 #>  #> $justified #>     a1     d log_rho1 #> par  1 2.278    0.605 #>  #> $deserved #>     a1     d log_rho1 #> par  1 8.142    2.032 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0      1 #>  coef(mod.rho, simplify=TRUE)  # slope-intercept-log_rho #> $items #>                       a1      d log_rho1 #> hideous                1 -0.929    0.089 #> state_teaching         1 -3.072    1.274 #> deterrent              1 -2.529    1.124 #> believe_not.necessary  1 -0.012   -0.236 #> necessary_wish.not     1  2.101    0.703 #> must.have              1  2.719    0.915 #> justified              1  2.278    0.605 #> deserved               1  8.142    2.032 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  coef(mod.rho, simplify=TRUE, IRTpars=TRUE)  # discrimination-difficulty-rho #> $items #>                       a      b  rho1 #> hideous               1  0.929 1.093 #> state_teaching        1  3.072 3.575 #> deterrent             1  2.529 3.076 #> believe_not.necessary 1  0.012 0.790 #> necessary_wish.not    1 -2.101 2.020 #> must.have             1 -2.719 2.497 #> justified             1 -2.278 1.830 #> deserved              1 -8.142 7.629 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  plot(mod.rho)  plot(mod.rho, type = 'trace')   # without estimating rho, and fixing to rho^2 = 1  (hence, #   log_rho = -exp(1) = -2.718282 in order to obtain (exp(exp(log_rho))) = 1) syntax <- \"Theta = 1-8            FIXED = (1-8, log_rho1)            START = (1-8, log_rho1, -2.71828)\" mod <- mirt(df, syntax, itemtype = 'sslm')  # model found in Andrich (1988) #>  coef(mod) #> $hideous #>     a1      d log_rho1 #> par  1 -0.622   -2.718 #>  #> $state_teaching #>     a1      d log_rho1 #> par  1 -0.517   -2.718 #>  #> $deterrent #>     a1      d log_rho1 #> par  1 -0.504   -2.718 #>  #> $believe_not.necessary #>     a1     d log_rho1 #> par  1 -0.05   -2.718 #>  #> $necessary_wish.not #>     a1     d log_rho1 #> par  1 0.783   -2.718 #>  #> $must.have #>     a1     d log_rho1 #> par  1 0.893   -2.718 #>  #> $justified #>     a1     d log_rho1 #> par  1 1.031   -2.718 #>  #> $deserved #>     a1     d log_rho1 #> par  1 1.099   -2.718 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0      1 #>  coef(mod, simplify=TRUE)  # slope-intercept-log_rho #> $items #>                       a1      d log_rho1 #> hideous                1 -0.622   -2.718 #> state_teaching         1 -0.517   -2.718 #> deterrent              1 -0.504   -2.718 #> believe_not.necessary  1 -0.050   -2.718 #> necessary_wish.not     1  0.783   -2.718 #> must.have              1  0.893   -2.718 #> justified              1  1.031   -2.718 #> deserved               1  1.099   -2.718 #>  #> $means #> Theta  #>     0  #>  #> $cov #>       Theta #> Theta     1 #>  coef(mod, simplify=TRUE, IRTpars=TRUE)  # discrimination-difficulty-rho #> $items #>                       a      b  rho1 #> hideous               1  0.622 0.066 #> state_teaching        1  0.517 0.066 #> deterrent             1  0.504 0.066 #> believe_not.necessary 1  0.050 0.066 #> necessary_wish.not    1 -0.783 0.066 #> must.have             1 -0.893 0.066 #> justified             1 -1.031 0.066 #> deserved              1 -1.099 0.066 #>  #> $means #> Theta  #>     0  #>  #> $cov #>       Theta #> Theta     1 #>  plot(mod)  plot(mod, type = 'trace') # notice that all curves have a fixed height of .5   # goodness of fit (less constrained model fits better) anova(mod, mod.rho) # original model fits much worse #>             AIC   SABIC      HQ     BIC   logLik      X2 df p #> mod     581.139 571.917 587.275 597.051 -282.569              #> mod.rho 422.326 403.882 434.599 454.149 -195.163 174.813  8 0 M2(mod) #>             M2 df p     RMSEA   RMSEA_5  RMSEA_95    SRMSR       TLI       CFI #> stats 271.0979 28 0 0.4047377 0.3582323 0.4451614 0.423321 0.3590415 0.3590415 M2(mod.rho) #>             M2 df          p  RMSEA    RMSEA_5 RMSEA_95      SRMSR       TLI #> stats 34.70944 20 0.02170751 0.1178 0.04456401 0.180314 0.07963288 0.9457034 #>             CFI #> stats 0.9612167 itemfit(mod, p.adjust='fdr') #>                    item   S_X2 df.S_X2 RMSEA.S_X2 p.S_X2 #> 1               hideous  9.192       4      0.156  0.075 #> 2        state_teaching 37.649       4      0.398  0.000 #> 3             deterrent 23.743       4      0.305  0.000 #> 4 believe_not.necessary  6.454       3      0.147  0.105 #> 5    necessary_wish.not 14.371       3      0.267  0.007 #> 6             must.have  8.953       3      0.193  0.048 #> 7             justified  4.967       4      0.068  0.291 #> 8              deserved 11.061       3      0.225  0.023 itemfit(mod.rho, p.adjust='fdr') #>                    item   S_X2 df.S_X2 RMSEA.S_X2 p.S_X2 #> 1               hideous  0.893       2      0.000  0.640 #> 2        state_teaching 12.861       2      0.320  0.013 #> 3             deterrent  1.824       1      0.125  0.301 #> 4 believe_not.necessary  0.310       1      0.000  0.640 #> 5    necessary_wish.not  2.816       1      0.185  0.249 #> 6             must.have  1.465       1      0.094  0.301 #> 7             justified  1.494       1      0.097  0.301 #> 8              deserved  6.713       2      0.211  0.139  # }"},{"path":"https://philchalmers.github.io/mirt/reference/Bock1997.html","id":null,"dir":"Reference","previous_headings":"","what":"Description of Bock 1997 data — Bock1997","title":"Description of Bock 1997 data — Bock1997","text":"3-item tabulated data set extracted Table 3 Chapter Two.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/Bock1997.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Description of Bock 1997 data — Bock1997","text":"Bock, R. D. (1997). Nominal Categories Model. van der Linden, W. J. & Hambleton, R. K. Handbook modern item response theory. New York: Springer.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/Bock1997.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Description of Bock 1997 data — Bock1997","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/Bock1997.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Description of Bock 1997 data — Bock1997","text":"","code":"# \\donttest{ dat <- expand.table(Bock1997) head(dat) #>   Item.1 Item.2 Item.3 #> 1      1      1      1 #> 2      1      1      1 #> 3      1      1      1 #> 4      1      1      1 #> 5      1      1      1 #> 6      1      1      1 itemstats(dat, use_ts=FALSE) #> $overall #>      N #> 1 2000 #>  #> $itemstats #>           N K  mean    sd #> Item.1 2000 4 2.443 1.070 #> Item.2 2000 4 2.666 0.957 #> Item.3 2000 4 2.780 1.059 #>  #> $proportions #>            1     2     3     4 #> Item.1 0.240 0.284 0.267 0.208 #> Item.2 0.122 0.314 0.340 0.224 #> Item.3 0.141 0.273 0.253 0.334 #>   mod <- mirt(dat, 1, 'nominal') #>   # reproduce table 3 in Bock (1997) fs <- round(fscores(mod, verbose = FALSE, full.scores = FALSE)[,c('F1','SE_F1')],2) fttd <- residuals(mod, type = 'exp') table <- data.frame(fttd[,-ncol(fttd)], fs) table #>    Item.1 Item.2 Item.3 freq        exp    F1 SE_F1 #> 1       1      1      1   50  46.444027 -1.72  0.68 #> 2       1      1      2   32  37.215496 -1.22  0.64 #> 3       1      1      3   15  18.069304 -0.95  0.62 #> 4       1      1      4   10   8.692424 -0.61  0.61 #> 5       1      2      1   54  59.965727 -1.38  0.65 #> 6       1      2      2   80  70.000273 -0.91  0.62 #> 7       1      2      3   40  41.674601 -0.65  0.61 #> 8       1      2      4   24  25.832371 -0.33  0.61 #> 9       1      3      1   27  28.065138 -1.07  0.63 #> 10      1      3      2   52  46.689631 -0.62  0.61 #> 11      1      3      3   33  33.847511 -0.37  0.61 #> 12      1      3      4   27  26.935712 -0.04  0.61 #> 13      1      4      1    4   3.940514 -0.63  0.61 #> 14      1      4      2   13  10.897962 -0.19  0.61 #> 15      1      4      3   10  10.571253  0.06  0.61 #> 16      1      4      4   10  12.283469  0.40  0.63 #> 17      2      1      1   27  20.191927 -1.29  0.64 #> 18      2      1      2   19  26.271170 -0.82  0.62 #> 19      2      1      3   11  16.603995 -0.57  0.61 #> 20      2      1      4   11  11.097212 -0.24  0.61 #> 21      2      2      1   30  36.068703 -0.98  0.63 #> 22      2      2      2   78  66.604897 -0.53  0.61 #> 23      2      2      3   69  51.217364 -0.28  0.61 #> 24      2      2      4   48  43.966108  0.05  0.61 #> 25      2      3      1   24  22.900098 -0.68  0.61 #> 26      2      3      2   48  59.345066 -0.25  0.61 #> 27      2      3      3   52  55.428529  0.01  0.61 #> 28      2      3      4   53  61.277297  0.34  0.62 #> 29      2      4      1    3   4.974192 -0.25  0.61 #> 30      2      4      2   21  21.301177  0.19  0.62 #> 31      2      4      3   20  26.765813  0.45  0.63 #> 32      2      4      4   54  43.946401  0.81  0.65 #> 33      3      1      1    9   7.040049 -0.96  0.62 #> 34      3      1      2   12  13.275569 -0.51  0.61 #> 35      3      1      3   13  10.330678 -0.26  0.61 #> 36      3      1      4    7   9.005107  0.06  0.61 #> 37      3      2      1   11  16.098345 -0.66  0.61 #> 38      3      2      2   29  42.609506 -0.23  0.61 #> 39      3      2      3   37  40.289025  0.03  0.61 #> 40      3      2      4   44  45.264883  0.36  0.62 #> 41      3      3      1   15  12.966052 -0.38  0.61 #> 42      3      3      2   62  47.984143  0.06  0.61 #> 43      3      3      3   60  55.255840  0.32  0.62 #> 44      3      3      4   88  80.660157  0.67  0.64 #> 45      3      4      1    4   3.999324  0.05  0.61 #> 46      3      4      2   27  24.639934  0.50  0.63 #> 47      3      4      3   43  38.630407  0.78  0.65 #> 48      3      4      4   73  85.862836  1.17  0.68 #> 49      4      1      1    4   2.538215 -0.75  0.62 #> 50      4      1      2    8   6.100809 -0.31  0.61 #> 51      4      1      3    7   5.455196 -0.06  0.61 #> 52      4      1      4    9   5.695962  0.27  0.62 #> 53      4      2      1    7   6.816068 -0.46  0.61 #> 54      4      2      2   21  22.926076 -0.02  0.61 #> 55      4      2      3   25  24.946447  0.23  0.62 #> 56      4      2      4   31  33.758294  0.58  0.64 #> 57      4      3      1    8   6.427237 -0.17  0.61 #> 58      4      3      2   23  30.276410  0.27  0.62 #> 59      4      3      3   35  40.293621  0.54  0.63 #> 60      4      3      4   73  71.523729  0.90  0.66 #> 61      4      4      1    4   2.513701  0.26  0.62 #> 62      4      4      2   21  19.940144  0.73  0.65 #> 63      4      4      3   36  36.579513  1.02  0.67 #> 64      4      4      4  105 101.211362  1.43  0.71  mod <- mirt(dat, 1, 'nominal') #>  coef(mod) #> $Item.1 #>       a1 ak0   ak1   ak2 ak3 d0    d1    d2     d3 #> par 0.79   0 1.269 2.304   3  0 0.673 0.538 -0.013 #>  #> $Item.2 #>        a1 ak0   ak1   ak2 ak3 d0    d1    d2    d3 #> par 0.898   0 0.859 1.717   3  0 1.452 1.636 0.647 #>  #> $Item.3 #>        a1 ak0   ak1   ak2 ak3 d0    d1    d2    d3 #> par 0.908   0 1.289 2.038   3  0 1.495 1.508 1.457 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0      1 #>    # }"},{"path":"https://philchalmers.github.io/mirt/reference/DIF.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential item functioning statistics — DIF","title":"Differential item functioning statistics — DIF","text":"function runs Wald likelihood-ratio approaches testing differential item functioning (DIF) two groups. primarily convenience wrapper multipleGroup function performing standard DIF procedures. Independent models can estimated parallel defining parallel object mirtCluster, help decrease run time. best results, baseline model contain set 'anchor' items freely estimated hyper-parameters focal groups.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/DIF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential item functioning statistics — DIF","text":"","code":"DIF(   MGmodel,   which.par,   scheme = \"add\",   items2test = 1:extract.mirt(MGmodel, \"nitems\"),   groups2test = \"all\",   seq_stat = \"SABIC\",   Wald = FALSE,   p.adjust = \"none\",   pairwise = FALSE,   return_models = FALSE,   return_seq_model = FALSE,   max_run = Inf,   plotdif = FALSE,   type = \"trace\",   simplify = TRUE,   verbose = TRUE,   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/DIF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential item functioning statistics — DIF","text":"MGmodel object returned multipleGroup used reference model .par character vector containing parameter names inspected DIF scheme type DIF analysis perform, either adding dropping constraints across   groups. can : 'add' parameters .par constrained item one time     items specified items2test. beneficial examining DIF     model parameters freely estimated across groups, inspecting differences via     Wald test 'drop' parameters .par freely estimated items     specified items2test. useful supplying overly restrictive model     attempting detect DIF slightly less restrictive model 'add_sequential' sequentially loop items tested, end     loop treat DIF tests satisfy seq_stat criteria invariant. loop     re-run remaining invariant items determine now displaying DIF     less constrained model, new invariant item found algorithm stops     returns items displayed DIF. Note DIF statistics relative final,     less constrained model includes DIF effects 'drop_sequential' sequentially loop items tested, end     loop treat items violate seq_stat criteria demonstrating DIF. loop     re-run, leaving items previously demonstrated DIF variable across groups,     remaining test items previously showed invariance re-tested. algorithm     stops items showing DIF found returns items displayed DIF.     Note DIF statistics relative final,     less constrained model includes DIF effects items2test numeric vector, character vector containing item names, indicating items tested DIF. models anchor items known, omit vector. example, items 1 2 anchors 10 item test, items2test = 3:10 work testing remaining items (important remember using sequential schemes) groups2test character vector indicating groups use DIF testing investigations. Default '', uses group information perform joint hypothesis tests DIF (two group setup result pair-wise tests). example, group names 'g1', 'g2' 'g3', DIF investigated group 'g1' 'g3' pass groups2test = c('g1', 'g3') seq_stat select statistic test sequential schemes. Potential values (descending order power) 'AIC', 'SABIC', 'HQ', 'BIC'. numeric value input ranges 0 1, 'p' value tested (e.g., seq_stat = .05 test difference p < .05 add scheme, p > .05 drop scheme), along specified p.adjust input Wald logical; perform Wald tests DIF instead likelihood ratio test? p.adjust string passed p.adjust function adjust p-values. Adjustments located adj_p element returned list pairwise logical; perform pairwise tests groups number groups greater 2? Useful quickly specified post-hoc tests return_models logical; return estimated model objects analysis? Default FALSE return_seq_model logical; last iteration sequential schemes, return fitted multiple-group model containing freely estimated parameters indicative DIF? generally useful scheme = 'add_sequential'. Default FALSE max_run number indicating maximum number cycles perform sequential searches. default perform search DIF found plotdif logical; create item plots items displaying DIF according seq_stat criteria? available 'add' type schemes type type plot argument passed plot(). Default 'trace', though another good option 'infotrace'. ease viewing, facet_item argument mirt's plot() function set TRUE simplify logical; simplify output returning data.frame object differences AIC, BIC, etc, well chi-squared test (X2) associated df p-values verbose logical print extra information console? ... additional arguments passed multipleGroup plot","code":""},{"path":"https://philchalmers.github.io/mirt/reference/DIF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential item functioning statistics — DIF","text":"mirt_df object information-based criteria DIF, though may changed   list output return_models simplify modified. well, silent   'DIF_coefficeints' attribute included view item parameter differences   groups","code":""},{"path":"https://philchalmers.github.io/mirt/reference/DIF.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential item functioning statistics — DIF","text":"Generally, pre-computed baseline model configured two estimation properties: 1) set 'anchor' items, anchor items various parameters constrained equal across groups, 2) contain freely estimated latent mean variance terms one group (-called 'reference' group). two properties help fix metric groups item parameter estimates contain latent distribution characteristics.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/DIF.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Differential item functioning statistics — DIF","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06 Chalmers, R. P., Counsell, ., Flora, D. B. (2016). might   make big DIF: Improved Differential Test Functioning statistics account   sampling variability. Educational Psychological Measurement, 76, 114-140.   doi:10.1177/0013164415584576","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/DIF.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Differential item functioning statistics — DIF","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/DIF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential item functioning statistics — DIF","text":"","code":"# \\donttest{  # simulate data where group 2 has a smaller slopes and more extreme intercepts set.seed(12345) a1 <- a2 <- matrix(abs(rnorm(15,1,.3)), ncol=1) d1 <- d2 <- matrix(rnorm(15,0,.7),ncol=1) a2[1:2, ] <- a1[1:2, ]/3 d1[c(1,3), ] <- d2[c(1,3), ]/4 head(data.frame(a.group1 = a1, a.group2 = a2, d.group1 = d1, d.group2 = d2)) #>    a.group1  a.group2    d.group1   d.group2 #> 1 1.1756586 0.3918862  0.14295747  0.5718299 #> 2 1.2128398 0.4042799 -0.62045026 -0.6204503 #> 3 0.9672090 0.9672090 -0.05802608 -0.2321043 #> 4 0.8639508 0.8639508  0.78449886  0.7844989 #> 5 1.1817662 1.1817662  0.20910659  0.2091066 #> 6 0.4546132 0.4546132  0.54573535  0.5457353 itemtype <- rep('2PL', nrow(a1)) N <- 1000 dataset1 <- simdata(a1, d1, N, itemtype) dataset2 <- simdata(a2, d2, N, itemtype, mu = .1, sigma = matrix(1.5)) dat <- rbind(dataset1, dataset2) group <- c(rep('D1', N), rep('D2', N))  #### no anchors, all items tested for DIF by adding item constrains one item at a time. # define a parallel cluster (optional) to help speed up internal functions if(interactive()) mirtCluster()  # Information matrix with Oakes' identity (not controlling for latent group differences) # NOTE: Without properly equating the groups the following example code is not testing for DIF,      # but instead reflects a combination of DIF + latent-trait distribution effects model <- multipleGroup(dat, 1, group, SE = TRUE) #>  #>  #> Calculating information matrix...  # Likelihood-ratio test for DIF (as well as model information) dif <- DIF(model, c('a1', 'd')) #> NOTE: No hyper-parameters were estimated in the DIF model.  #>       For effective DIF testing, freeing the focal group hyper-parameters is recommended. dif #>         groups converged     AIC   SABIC      HQ     BIC     X2 df     p #> Item_1   D1,D2      TRUE -34.621 -29.773 -30.507 -23.419 38.621  2     0 #> Item_2   D1,D2      TRUE -20.364 -15.516 -16.251  -9.162 24.364  2     0 #> Item_3   D1,D2      TRUE -10.101  -5.253  -5.988   1.101 14.101  2 0.001 #> Item_4   D1,D2      TRUE  -0.356   4.492   3.757  10.846  4.356  2 0.113 #> Item_5   D1,D2      TRUE   0.968   5.815   5.081  12.169  3.032  2  0.22 #> Item_6   D1,D2      TRUE   3.441   8.289   7.554  14.643  0.559  2 0.756 #> Item_7   D1,D2      TRUE   3.340   8.188   7.453  14.542   0.66  2 0.719 #> Item_8   D1,D2      TRUE  -2.371   2.477   1.742   8.831  6.371  2 0.041 #> Item_9   D1,D2      TRUE   0.546   5.393   4.659  11.748  3.454  2 0.178 #> Item_10  D1,D2      TRUE   3.215   8.062   7.328  14.416  0.785  2 0.675 #> Item_11  D1,D2      TRUE  -4.853  -0.006  -0.740   6.348  8.853  2 0.012 #> Item_12  D1,D2      TRUE   1.497   6.345   5.610  12.699  2.503  2 0.286 #> Item_13  D1,D2      TRUE   1.854   6.702   5.967  13.056  2.146  2 0.342 #> Item_14  D1,D2      TRUE  -4.350   0.498  -0.237   6.852   8.35  2 0.015 #> Item_15  D1,D2      TRUE   3.831   8.679   7.944  15.033  0.169  2 0.919  # function silently includes \"DIF_coefficients\" attribute to view # the IRT parameters post-completion extract.mirt(dif, \"DIF_coefficients\") #> $Item_1 #>           a1         d g u #> D1 0.7472578 0.3483822 0 1 #> D2 0.7472578 0.3483822 0 1 #>  #> $Item_2 #>           a1          d g u #> D1 0.8277687 -0.6535244 0 1 #> D2 0.8277687 -0.6535244 0 1 #>  #> $Item_3 #>          a1          d g u #> D1 1.213165 -0.1452843 0 1 #> D2 1.213165 -0.1452843 0 1 #>  #> $Item_4 #>          a1         d g u #> D1 1.017216 0.9327436 0 1 #> D2 1.017216 0.9327436 0 1 #>  #> $Item_5 #>          a1         d g u #> D1 1.216819 0.1966309 0 1 #> D2 1.216819 0.1966309 0 1 #>  #> $Item_6 #>           a1        d g u #> D1 0.5196433 0.652555 0 1 #> D2 0.5196433 0.652555 0 1 #>  #> $Item_7 #>          a1        d g u #> D1 1.348864 1.016455 0 1 #> D2 1.348864 1.016455 0 1 #>  #> $Item_8 #>          a1          d g u #> D1 1.089472 -0.3447219 0 1 #> D2 1.089472 -0.3447219 0 1 #>  #> $Item_9 #>          a1         d g u #> D1 0.993117 -1.006033 0 1 #> D2 0.993117 -1.006033 0 1 #>  #> $Item_10 #>          a1         d g u #> D1 0.791053 -1.099697 0 1 #> D2 0.791053 -1.099697 0 1 #>  #> $Item_11 #>          a1        d g u #> D1 1.053996 1.235564 0 1 #> D2 1.053996 1.235564 0 1 #>  #> $Item_12 #>          a1          d g u #> D1 1.593305 -0.1832728 0 1 #> D2 1.593305 -0.1832728 0 1 #>  #> $Item_13 #>          a1         d g u #> D1 1.389336 0.4619023 0 1 #> D2 1.389336 0.4619023 0 1 #>  #> $Item_14 #>          a1         d g u #> D1 1.294955 0.4870637 0 1 #> D2 1.294955 0.4870637 0 1 #>  #> $Item_15 #>           a1           d g u #> D1 0.8797218 -0.04575426 0 1 #> D2 0.8797218 -0.04575426 0 1 #>   # same as above, but using Wald tests with Benjamini & Hochberg adjustment DIF(model, c('a1', 'd'), Wald = TRUE, p.adjust = 'fdr') #> NOTE: No hyper-parameters were estimated in the DIF model.  #>       For effective DIF testing, freeing the focal group hyper-parameters is recommended. #>         groups      W df     p adj_p #> Item_1   D1,D2 36.513  2     0 0.000 #> Item_2   D1,D2 22.089  2     0 0.000 #> Item_3   D1,D2 13.444  2 0.001 0.006 #> Item_4   D1,D2  4.293  2 0.117 0.251 #> Item_5   D1,D2  3.009  2 0.222 0.370 #> Item_6   D1,D2  0.558  2 0.756 0.810 #> Item_7   D1,D2  0.658  2  0.72 0.810 #> Item_8   D1,D2  6.238  2 0.044 0.111 #> Item_9   D1,D2  3.438  2 0.179 0.336 #> Item_10  D1,D2  0.785  2 0.675 0.810 #> Item_11  D1,D2  8.621  2 0.013 0.050 #> Item_12  D1,D2  2.485  2 0.289 0.433 #> Item_13  D1,D2  2.133  2 0.344 0.469 #> Item_14  D1,D2  8.062  2 0.018 0.053 #> Item_15  D1,D2  0.168  2 0.919 0.919  # equate the groups by assuming the last 5 items have no DIF itemnames <- colnames(dat) model <- multipleGroup(dat, 1, group, SE = TRUE,    invariance = c(itemnames[11:ncol(dat)], 'free_means', 'free_var')) #>  #>  #> Calculating information matrix...  # test whether adding slopes and intercepts constraints results in DIF. Plot items showing DIF resulta1d <- DIF(model, c('a1', 'd'), plotdif = TRUE, items2test=1:10)  resulta1d #>         groups converged     AIC   SABIC      HQ     BIC    X2 df     p #> Item_1   D1,D2      TRUE -43.490 -38.642 -39.377 -32.288 47.49  2     0 #> Item_2   D1,D2      TRUE -33.840 -28.993 -29.727 -22.638 37.84  2     0 #> Item_3   D1,D2      TRUE  -5.497  -0.649  -1.384   5.705 9.497  2 0.009 #> Item_4   D1,D2      TRUE   2.395   7.242   6.508  13.596 1.605  2 0.448 #> Item_5   D1,D2      TRUE   3.140   7.988   7.253  14.342  0.86  2 0.651 #> Item_6   D1,D2      TRUE   1.122   5.970   5.235  12.324 2.878  2 0.237 #> Item_7   D1,D2      TRUE   3.083   7.931   7.196  14.285 0.917  2 0.632 #> Item_8   D1,D2      TRUE   2.857   7.705   6.970  14.059 1.143  2 0.565 #> Item_9   D1,D2      TRUE   3.674   8.521   7.787  14.875 0.326  2 0.849 #> Item_10  D1,D2      TRUE   3.154   8.001   7.267  14.355 0.846  2 0.655  # test whether adding only slope constraints results in DIF for all items DIF(model, 'a1', items2test=1:10) #>         groups converged     AIC   SABIC      HQ     BIC     X2 df     p #> Item_1   D1,D2      TRUE -20.871 -18.447 -18.815 -15.270 22.871  1     0 #> Item_2   D1,D2      TRUE -34.675 -32.252 -32.619 -29.075 36.675  1     0 #> Item_3   D1,D2      TRUE   0.435   2.859   2.492   6.036  1.565  1 0.211 #> Item_4   D1,D2      TRUE   1.980   4.404   4.036   7.581   0.02  1 0.887 #> Item_5   D1,D2      TRUE   1.754   4.178   3.811   7.355  0.246  1  0.62 #> Item_6   D1,D2      TRUE  -0.564   1.860   1.492   5.037  2.564  1 0.109 #> Item_7   D1,D2      TRUE   1.093   3.517   3.150   6.694  0.907  1 0.341 #> Item_8   D1,D2      TRUE   1.431   3.855   3.488   7.032  0.569  1 0.451 #> Item_9   D1,D2      TRUE   1.863   4.287   3.920   7.464  0.137  1 0.712 #> Item_10  D1,D2      TRUE   1.775   4.199   3.832   7.376  0.225  1 0.636  # Determine whether it's a1 or d parameter causing DIF (could be joint, however) (a1s <- DIF(model, 'a1', items2test = 1:3)) #>        groups converged     AIC   SABIC      HQ     BIC     X2 df     p #> Item_1  D1,D2      TRUE -20.871 -18.447 -18.815 -15.270 22.871  1     0 #> Item_2  D1,D2      TRUE -34.675 -32.252 -32.619 -29.075 36.675  1     0 #> Item_3  D1,D2      TRUE   0.435   2.859   2.492   6.036  1.565  1 0.211 (ds <- DIF(model, 'd', items2test = 1:3)) #>        groups converged     AIC   SABIC      HQ     BIC     X2 df     p #> Item_1  D1,D2      TRUE -18.568 -16.145 -16.512 -12.968 20.568  1     0 #> Item_2  D1,D2      TRUE   1.843   4.266   3.899   7.443  0.157  1 0.691 #> Item_3  D1,D2      TRUE  -6.229  -3.805  -4.173  -0.628  8.229  1 0.004  ### drop down approach (freely estimating parameters across groups) when ### specifying a highly constrained model with estimated latent parameters model_constrained <- multipleGroup(dat, 1, group,   invariance = c(colnames(dat), 'free_means', 'free_var')) #>  dropdown <- DIF(model_constrained, c('a1', 'd'), scheme = 'drop') dropdown #>         groups converged     AIC   SABIC      HQ     BIC     X2 df     p #> Item_1   D1,D2      TRUE -43.297 -38.450 -39.184 -32.096 47.297  2     0 #> Item_2   D1,D2      TRUE -32.642 -27.794 -28.529 -21.440 36.642  2     0 #> Item_3   D1,D2      TRUE -10.510  -5.662  -6.397   0.692  14.51  2 0.001 #> Item_4   D1,D2      TRUE   1.885   6.733   5.998  13.087  2.115  2 0.347 #> Item_5   D1,D2      TRUE   3.155   8.003   7.268  14.357  0.845  2 0.655 #> Item_6   D1,D2      TRUE   1.914   6.761   6.027  13.116  2.086  2 0.352 #> Item_7   D1,D2      TRUE   3.887   8.735   8.000  15.089  0.113  2 0.945 #> Item_8   D1,D2      TRUE   0.703   5.550   4.816  11.905  3.297  2 0.192 #> Item_9   D1,D2      TRUE   3.059   7.907   7.172  14.261  0.941  2 0.625 #> Item_10  D1,D2      TRUE   3.631   8.479   7.744  14.833  0.369  2 0.832 #> Item_11  D1,D2      TRUE  -0.765   4.083   3.348  10.437  4.765  2 0.092 #> Item_12  D1,D2      TRUE   3.511   8.359   7.624  14.713  0.489  2 0.783 #> Item_13  D1,D2      TRUE   3.416   8.263   7.529  14.618  0.584  2 0.747 #> Item_14  D1,D2      TRUE  -0.690   4.157   3.423  10.511   4.69  2 0.096 #> Item_15  D1,D2      TRUE   3.599   8.447   7.712  14.801  0.401  2 0.818  # View silent \"DIF_coefficients\" attribute extract.mirt(dropdown, \"DIF_coefficients\") #> $Item_1 #>           a1         d g u #> D1 1.0070333 0.1008689 0 1 #> D2 0.4519451 0.5696948 0 1 #>  #> $Item_2 #>           a1          d g u #> D1 1.2404964 -0.7051772 0 1 #> D2 0.4454868 -0.6639707 0 1 #>  #> $Item_3 #>           a1           d g u #> D1 0.9753304 -0.02503532 0 1 #> D2 1.3391630 -0.38511564 0 1 #>  #> $Item_4 #>           a1         d g u #> D1 0.8791819 0.8382862 0 1 #> D2 1.0156000 0.9950612 0 1 #>  #> $Item_5 #>          a1         d g u #> D1 1.121610 0.1289461 0 1 #> D2 1.174548 0.2229443 0 1 #>  #> $Item_6 #>           a1         d g u #> D1 0.5623518 0.6822046 0 1 #> D2 0.4157185 0.6026837 0 1 #>  #> $Item_7 #>          a1         d g u #> D1 1.283799 1.0057389 0 1 #> D2 1.237164 0.9681292 0 1 #>  #> $Item_8 #>           a1          d g u #> D1 0.8938398 -0.3260637 0 1 #> D2 1.1477262 -0.4254126 0 1 #>  #> $Item_9 #>           a1          d g u #> D1 0.8827366 -1.0565622 0 1 #> D2 0.9625327 -0.9928805 0 1 #>  #> $Item_10 #>           a1         d g u #> D1 0.7335219 -1.085299 0 1 #> D2 0.7456898 -1.154238 0 1 #>  #> $Item_11 #>           a1        d g u #> D1 0.8342628 1.189315 0 1 #> D2 1.1656520 1.241327 0 1 #>  #> $Item_12 #>          a1          d g u #> D1 1.476098 -0.2510092 0 1 #> D2 1.492375 -0.1714954 0 1 #>  #> $Item_13 #>          a1         d g u #> D1 1.236010 0.4387954 0 1 #> D2 1.358438 0.4178786 0 1 #>  #> $Item_14 #>          a1         d g u #> D1 1.042360 0.4541474 0 1 #> D2 1.400258 0.4556598 0 1 #>  #> $Item_15 #>           a1           d g u #> D1 0.8583058 -0.06114579 0 1 #> D2 0.7771780 -0.06825570 0 1 #>   ### sequential schemes (add constraints)  ### sequential searches using SABIC as the selection criteria # starting from completely different models stepup <- DIF(model, c('a1', 'd'), scheme = 'add_sequential',               items2test=1:10) #>  Checking for DIF in 3 more items #> Computing final DIF estimates... stepup #>        groups converged     AIC   SABIC      HQ     BIC     X2 df     p #> Item_1  D1,D2      TRUE -43.161 -38.314 -39.048 -31.959 47.161  2     0 #> Item_2  D1,D2      TRUE -34.224 -29.377 -30.111 -23.022 38.224  2     0 #> Item_3  D1,D2      TRUE  -7.368  -2.520  -3.255   3.834 11.368  2 0.003  # step down procedure for highly constrained model stepdown <- DIF(model_constrained, c('a1', 'd'), scheme = 'drop_sequential') #>  Checking for DIF in 12 more items #> Computing final DIF estimates... stepdown #>        groups converged     AIC   SABIC      HQ     BIC     X2 df     p #> Item_1  D1,D2      TRUE -43.161 -38.314 -39.048 -31.959 47.161  2     0 #> Item_2  D1,D2      TRUE -34.224 -29.377 -30.111 -23.022 38.224  2     0 #> Item_3  D1,D2      TRUE  -7.368  -2.520  -3.255   3.834 11.368  2 0.003  # view final MG model (only useful when scheme is 'add_sequential') updated_mod <- DIF(model, c('a1', 'd'), scheme = 'add_sequential',                return_seq_model=TRUE) #>  Checking for DIF in 3 more items #> Computing final DIF estimates... plot(updated_mod, type='trace')    ################################### # Multi-group example  a1 <- a2 <- a3 <- matrix(abs(rnorm(15,1,.3)), ncol=1) d1 <- d2 <- d3 <- matrix(rnorm(15,0,.7),ncol=1) a2[1:2, ] <- a1[1:2, ]/3 d3[c(1,3), ] <- d2[c(1,3), ]/4 head(data.frame(a.group1 = a1, a.group2 = a2, a.group3 = a3,                 d.group1 = d1, d.group2 = d2, d.group3 = d3)) #>    a.group1  a.group2  a.group3   d.group1   d.group2   d.group3 #> 1 0.9921262 0.3307087 0.9921262 -0.6923662 -0.6923662 -0.1730916 #> 2 0.6115843 0.2038614 0.6115843 -0.4398444 -0.4398444 -0.4398444 #> 3 1.0571399 1.0571399 1.0571399  0.5243734  0.5243734  0.1310934 #> 4 1.1508422 1.1508422 1.1508422 -1.0133952 -1.0133952 -1.0133952 #> 5 1.2447020 1.2447020 1.2447020 -0.4542548 -0.4542548 -0.4542548 #> 6 0.6518627 0.6518627 0.6518627  0.7766470  0.7766470  0.7766470 itemtype <- rep('2PL', nrow(a1)) N <- 1000 dataset1 <- simdata(a1, d1, N, itemtype) dataset2 <- simdata(a2, d2, N, itemtype, mu = .1, sigma = matrix(1.5)) dataset3 <- simdata(a3, d3, N, itemtype, mu = .2) dat <- rbind(dataset1, dataset2, dataset3) group <- gl(3, N, labels = c('g1', 'g2', 'g3'))  # equate the groups by assuming the last 5 items have no DIF itemnames <- colnames(dat) model <- multipleGroup(dat, group=group, SE=TRUE,    invariance = c(itemnames[11:ncol(dat)], 'free_means', 'free_var')) #>  #>  #> Calculating information matrix... coef(model, simplify=TRUE) #> $g1 #> $items #>            a1      d g u #> Item_1  0.982 -0.707 0 1 #> Item_2  0.571 -0.458 0 1 #> Item_3  0.991  0.557 0 1 #> Item_4  1.240 -1.133 0 1 #> Item_5  1.095 -0.475 0 1 #> Item_6  0.711  0.712 0 1 #> Item_7  0.952 -1.641 0 1 #> Item_8  0.709 -0.568 0 1 #> Item_9  1.131  0.736 0 1 #> Item_10 1.211  0.397 0 1 #> Item_11 1.089 -0.384 0 1 #> Item_12 0.523 -1.044 0 1 #> Item_13 0.983  0.345 0 1 #> Item_14 0.950  0.330 0 1 #> Item_15 1.292 -0.246 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  #>  #> $g2 #> $items #>            a1      d g u #> Item_1  0.286 -0.788 0 1 #> Item_2  0.080 -0.397 0 1 #> Item_3  0.898  0.505 0 1 #> Item_4  1.025 -0.994 0 1 #> Item_5  1.023 -0.364 0 1 #> Item_6  0.717  0.832 0 1 #> Item_7  1.100 -1.903 0 1 #> Item_8  0.783 -0.487 0 1 #> Item_9  0.956  0.820 0 1 #> Item_10 1.095  0.428 0 1 #> Item_11 1.089 -0.384 0 1 #> Item_12 0.523 -1.044 0 1 #> Item_13 0.983  0.345 0 1 #> Item_14 0.950  0.330 0 1 #> Item_15 1.292 -0.246 0 1 #>  #> $means #>    F1  #> 0.038  #>  #> $cov #>       F1 #> F1 1.653 #>  #>  #> $g3 #> $items #>            a1      d g u #> Item_1  1.029 -0.180 0 1 #> Item_2  0.766 -0.442 0 1 #> Item_3  1.175  0.171 0 1 #> Item_4  1.319 -1.101 0 1 #> Item_5  1.345 -0.567 0 1 #> Item_6  0.620  0.694 0 1 #> Item_7  1.073 -1.699 0 1 #> Item_8  0.842 -0.678 0 1 #> Item_9  1.227  0.945 0 1 #> Item_10 1.344  0.540 0 1 #> Item_11 1.089 -0.384 0 1 #> Item_12 0.523 -1.044 0 1 #> Item_13 0.983  0.345 0 1 #> Item_14 0.950  0.330 0 1 #> Item_15 1.292 -0.246 0 1 #>  #> $means #>    F1  #> 0.189  #>  #> $cov #>       F1 #> F1 0.893 #>  #>   # omnibus tests dif <- DIF(model, which.par = c('a1', 'd'), items2test=1:9) dif #>          groups converged      AIC   SABIC      HQ     BIC      X2 df     p #> Item_1 g1,g2,g3      TRUE -100.312 -88.996 -91.670 -76.286 108.312  4     0 #> Item_2 g1,g2,g3      TRUE  -39.696 -28.380 -31.054 -15.670  47.696  4     0 #> Item_3 g1,g2,g3      TRUE   -8.644   2.672  -0.002  15.382  16.644  4 0.002 #> Item_4 g1,g2,g3      TRUE    4.559  15.875  13.201  28.584   3.441  4 0.487 #> Item_5 g1,g2,g3      TRUE    3.087  14.402  11.728  27.112   4.913  4 0.296 #> Item_6 g1,g2,g3      TRUE    5.556  16.872  14.198  29.581   2.444  4 0.655 #> Item_7 g1,g2,g3      TRUE    4.844  16.160  13.486  28.869   3.156  4 0.532 #> Item_8 g1,g2,g3      TRUE    4.504  15.819  13.145  28.529   3.496  4 0.478 #> Item_9 g1,g2,g3      TRUE    2.263  13.578  10.904  26.288   5.737  4  0.22  # pairwise post-hoc tests for items flagged via omnibus tests dif.posthoc <- DIF(model, which.par = c('a1', 'd'), items2test=1:2,                    pairwise = TRUE) dif.posthoc #>     item groups converged     AIC   SABIC      HQ     BIC     X2 df     p #> 1 Item_1  g1,g2      TRUE -32.488 -26.830 -28.167 -20.475 36.488  2     0 #> 2 Item_2  g1,g2      TRUE -19.000 -13.342 -14.679  -6.988     23  2     0 #> 3 Item_1  g1,g3      TRUE -19.543 -13.885 -15.222  -7.530 23.543  2     0 #> 4 Item_2  g1,g3      TRUE   1.728   7.385   6.048  13.740  2.272  2 0.321 #> 5 Item_1  g2,g3      TRUE -90.300 -84.642 -85.979 -78.287   94.3  2     0 #> 6 Item_2  g2,g3      TRUE -36.756 -31.098 -32.435 -24.743 40.756  2     0  # further probing for df = 1 tests, this time with Wald tests DIF(model, which.par = c('a1'), items2test=1:2, pairwise = TRUE,     Wald=TRUE) #>     item groups      W df     p #> 1 Item_1  g1,g2 29.897  1     0 #> 2 Item_2  g1,g2 22.022  1     0 #> 3 Item_1  g1,g3  0.076  1 0.783 #> 4 Item_2  g1,g3  1.939  1 0.164 #> 5 Item_1  g2,g3 27.618  1     0 #> 6 Item_2  g2,g3 30.587  1     0 DIF(model, which.par = c('d'), items2test=1:2, pairwise = TRUE,     Wald=TRUE) #>     item groups      W df     p #> 1 Item_1  g1,g2  0.592  1 0.442 #> 2 Item_2  g1,g2  0.419  1 0.518 #> 3 Item_1  g1,g3 21.130  1     0 #> 4 Item_2  g1,g3  0.025  1 0.874 #> 5 Item_1  g2,g3 29.743  1     0 #> 6 Item_2  g2,g3  0.182  1  0.67  # }"},{"path":"https://philchalmers.github.io/mirt/reference/DRF.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Response Functioning statistics — DRF","title":"Differential Response Functioning statistics — DRF","text":"Function performs various omnibus differential item (DIF), bundle (DBF), test (DTF) functioning procedures object estimated multipleGroup(). compensatory non-compensatory statistics provided described Chalmers (2018), generally can interpreted IRT generalizations SIBTEST CSIBTEST statistics. hypothesis tests, measures require ACOV matrix computed fitted multiple-group model (otherwise, sets plausible draws posterior explicitly required).","code":""},{"path":"https://philchalmers.github.io/mirt/reference/DRF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Response Functioning statistics — DRF","text":"","code":"DRF(   mod,   draws = NULL,   focal_items = 1L:extract.mirt(mod, \"nitems\"),   param_set = NULL,   den.type = \"marginal\",   best_fitting = FALSE,   CI = 0.95,   npts = 1000,   quadpts = NULL,   theta_lim = c(-6, 6),   Theta_nodes = NULL,   plot = FALSE,   DIF = FALSE,   DIF.cats = FALSE,   groups2test = \"all\",   pairwise = FALSE,   simplify = TRUE,   p.adjust = \"none\",   par.strip.text = list(cex = 0.7),   par.settings = list(strip.background = list(col = \"#9ECAE1\"), strip.border = list(col =     \"black\")),   auto.key = list(space = \"right\", points = FALSE, lines = TRUE),   verbose = TRUE,   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/DRF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Response Functioning statistics — DRF","text":"mod multipleGroup object estimated 2 groups draws number indicating many draws take form suitable multiple imputation bootstrap estimate expected test scores (100 ). boot = FALSE, requires estimated parameter information matrix. Returns list containing bootstrap/imputation distribution null hypothesis test sDRF statistics focal_items character/numeric vector indicating items include DRF tests. default uses items (note including anchors focal items effect exactly equal across groups). Selecting fewer items result tests 'differential bundle functioning' param_set N x p matrix parameter values drawn posterior (e.g., using parametric sampling approach, bootstrap, MCMC). supplied, used compute DRF measures. Can much efficient pre-compute values DIF, DBF, DTF evaluated within model (especially using bootstrap method). See draw_parameters den.type character specifying density latent traits computed. Default 'marginal' include proportional information groups, 'focal' just focal group, 'reference' reference group best_fitting logical; use best fitting parametric distribution (Gaussian default) used time model estimation? result much fast computations, however results dependent upon underlying modelling assumptions. Default FALSE, uses empirical histogram approach CI range confidence interval using draws input npts number points use plotting. Default 1000 quadpts number quadrature nodes use constructing DRF statistics. Default extracted input model object theta_lim lower upper limits latent trait (theta) evaluated, used conjunction quadpts npts Theta_nodes optional matrix Theta values evaluated draws sDRF statistics. However, values averaged across, instead give bootstrap confidence intervals respective Theta nodes. Useful following large sDRF uDRF statistic, example, determine difference test curves large (still accounting sampling variability). Returns matrix observed variability plot logical; plot 'sDRF' functions evaluated sDBF sDTF values across integration grid , DIF = TRUE, selected items faceted plot individual items? plausible parameter sets obtained/supplied imputed confidence intervals included DIF logical; return list item-level imputation properties using DRF statistics? can generally used DIF detection method graphical display understanding DIF within item DIF.cats logical; DIF = TRUE, however computations performed item category probability functions rather score functions. useful understanding DIF polytomous items groups2test 2 groups investigated two groups used effect size comparisons? pairwise logical; perform pairwise computations applying multi-group settings simplify logical; attempt simplify output rather returning larger lists? p.adjust string passed p.adjust function adjust p-values. Adjustments located adj_pvals element returned list. applicable DIF = TRUE par.strip.text plotting argument passed lattice par.settings plotting argument passed lattice auto.key plotting argument passed lattice verbose logical; include additional information console? ... additional arguments passed lattice","code":""},{"path":"https://philchalmers.github.io/mirt/reference/DRF.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Response Functioning statistics — DRF","text":"effect sizes estimates DRF function $$sDRF = \\int [S(C|\\bm{\\Psi}^{(R)},\\theta) S(C|\\bm{\\Psi}^{(F)},\\theta)] f(\\theta)d\\theta,$$ $$uDRF = \\int |S(C|\\bm{\\Psi}^{(R)},\\theta) S(C|\\bm{\\Psi}^{(F)},\\theta)| f(\\theta)d\\theta,$$ $$dDRF = \\sqrt{\\int [S(C|\\bm{\\Psi}^{(R)},\\theta) S(C|\\bm{\\Psi}^{(F)},\\theta)]^2 f(\\theta)d\\theta}$$ \\(S(.)\\) scoring equations used evaluate model-implied difference focal reference group. \\(f(\\theta)\\) terms can either estimated posterior via empirical histogram approach (default), can use best fitting prior distribution obtain post-convergence (default Guassian distribution). Note , comparison Chalmers (2018), focal group leftmost scoring function reference group rightmost scoring function. largely keep consistent similar effect size statistics, SIBTEST, DFIT, Wainer's measures impact, etc, general can seen special-case estimators family.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/DRF.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Differential Response Functioning statistics — DRF","text":"Chalmers, R. P. (2018). Model-Based Measures Detecting Quantifying Response Bias.   Psychometrika, 83(3), 696-732. doi:10.1007/s11336-018-9626-9","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/DRF.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Differential Response Functioning statistics — DRF","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/DRF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Response Functioning statistics — DRF","text":"","code":"# \\donttest{  set.seed(1234) n <- 30 N <- 500  # only first 5 items as anchors model <- 'F = 1-30           CONSTRAINB = (1-5, a1), (1-5, d)'  a <- matrix(1, n) d <- matrix(rnorm(n), n) group <- c(rep('Group_1', N), rep('Group_2', N))  ## ------------- # groups completely equal dat1 <- simdata(a, d, N, itemtype = 'dich') dat2 <- simdata(a, d, N, itemtype = 'dich') dat <- rbind(dat1, dat2) mod <- multipleGroup(dat, model, group=group, SE=TRUE,                      invariance=c('free_means', 'free_var')) #>  #>  #> Calculating information matrix... plot(mod)  plot(mod, which.items = 6:10) #DBF  plot(mod, type = 'itemscore')  plot(mod, type = 'itemscore', which.items = 10:15)   # empirical histogram approach DRF(mod) #>            groups n_focal_items   sDRF  uDRF  dDRF #> 1 Group_1,Group_2            30 -0.326 0.326 0.328 DRF(mod, focal_items = 6:10) #DBF #>            groups n_focal_items   sDRF  uDRF  dDRF #> 1 Group_1,Group_2             5 -0.069 0.071 0.084 DRF(mod, DIF=TRUE) #>             groups    item   sDIF  uDIF  dDIF #> 1  Group_1,Group_2  Item_1  0.000 0.000 0.000 #> 2  Group_1,Group_2  Item_2  0.000 0.000 0.000 #> 3  Group_1,Group_2  Item_3  0.000 0.000 0.000 #> 4  Group_1,Group_2  Item_4  0.000 0.000 0.000 #> 5  Group_1,Group_2  Item_5  0.000 0.000 0.000 #> 6  Group_1,Group_2  Item_6  0.000 0.016 0.018 #> 7  Group_1,Group_2  Item_7 -0.026 0.026 0.028 #> 8  Group_1,Group_2  Item_8 -0.008 0.008 0.008 #> 9  Group_1,Group_2  Item_9 -0.026 0.026 0.028 #> 10 Group_1,Group_2 Item_10 -0.010 0.036 0.044 #> 11 Group_1,Group_2 Item_11 -0.056 0.059 0.065 #> 12 Group_1,Group_2 Item_12 -0.016 0.016 0.017 #> 13 Group_1,Group_2 Item_13 -0.015 0.022 0.025 #> 14 Group_1,Group_2 Item_14 -0.033 0.046 0.054 #> 15 Group_1,Group_2 Item_15 -0.045 0.045 0.047 #> 16 Group_1,Group_2 Item_16 -0.030 0.030 0.032 #> 17 Group_1,Group_2 Item_17  0.018 0.019 0.023 #> 18 Group_1,Group_2 Item_18  0.011 0.013 0.014 #> 19 Group_1,Group_2 Item_19 -0.045 0.094 0.117 #> 20 Group_1,Group_2 Item_20 -0.008 0.010 0.010 #> 21 Group_1,Group_2 Item_21 -0.070 0.070 0.073 #> 22 Group_1,Group_2 Item_22  0.017 0.020 0.024 #> 23 Group_1,Group_2 Item_23  0.036 0.064 0.078 #> 24 Group_1,Group_2 Item_24  0.040 0.040 0.042 #> 25 Group_1,Group_2 Item_25  0.002 0.018 0.021 #> 26 Group_1,Group_2 Item_26 -0.019 0.047 0.065 #> 27 Group_1,Group_2 Item_27 -0.049 0.049 0.052 #> 28 Group_1,Group_2 Item_28  0.027 0.029 0.031 #> 29 Group_1,Group_2 Item_29  0.007 0.025 0.029 #> 30 Group_1,Group_2 Item_30 -0.029 0.031 0.033 DRF(mod, DIF=TRUE, focal_items = 10:15) #>            groups    item   sDIF  uDIF  dDIF #> 1 Group_1,Group_2 Item_10 -0.010 0.036 0.044 #> 2 Group_1,Group_2 Item_11 -0.056 0.059 0.065 #> 3 Group_1,Group_2 Item_12 -0.016 0.016 0.017 #> 4 Group_1,Group_2 Item_13 -0.015 0.022 0.025 #> 5 Group_1,Group_2 Item_14 -0.033 0.046 0.054 #> 6 Group_1,Group_2 Item_15 -0.045 0.045 0.047  # Best-fitting Gaussian distributions DRF(mod, best_fitting=TRUE) #>            groups n_focal_items   sDRF  uDRF  dDRF #> 1 Group_1,Group_2            30 -0.326 0.326 0.328 DRF(mod, focal_items = 6:10, best_fitting=TRUE) #DBF #>            groups n_focal_items   sDRF  uDRF  dDRF #> 1 Group_1,Group_2             5 -0.069 0.071 0.084 DRF(mod, DIF=TRUE, best_fitting=TRUE) #>             groups    item   sDIF  uDIF  dDIF #> 1  Group_1,Group_2  Item_1  0.000 0.000 0.000 #> 2  Group_1,Group_2  Item_2  0.000 0.000 0.000 #> 3  Group_1,Group_2  Item_3  0.000 0.000 0.000 #> 4  Group_1,Group_2  Item_4  0.000 0.000 0.000 #> 5  Group_1,Group_2  Item_5  0.000 0.000 0.000 #> 6  Group_1,Group_2  Item_6  0.000 0.016 0.018 #> 7  Group_1,Group_2  Item_7 -0.026 0.026 0.028 #> 8  Group_1,Group_2  Item_8 -0.008 0.008 0.008 #> 9  Group_1,Group_2  Item_9 -0.026 0.026 0.028 #> 10 Group_1,Group_2 Item_10 -0.010 0.036 0.045 #> 11 Group_1,Group_2 Item_11 -0.056 0.059 0.065 #> 12 Group_1,Group_2 Item_12 -0.016 0.016 0.017 #> 13 Group_1,Group_2 Item_13 -0.015 0.023 0.025 #> 14 Group_1,Group_2 Item_14 -0.033 0.046 0.054 #> 15 Group_1,Group_2 Item_15 -0.045 0.045 0.047 #> 16 Group_1,Group_2 Item_16 -0.030 0.030 0.032 #> 17 Group_1,Group_2 Item_17  0.018 0.019 0.023 #> 18 Group_1,Group_2 Item_18  0.011 0.013 0.014 #> 19 Group_1,Group_2 Item_19 -0.045 0.094 0.118 #> 20 Group_1,Group_2 Item_20 -0.008 0.010 0.010 #> 21 Group_1,Group_2 Item_21 -0.070 0.070 0.073 #> 22 Group_1,Group_2 Item_22  0.017 0.020 0.024 #> 23 Group_1,Group_2 Item_23  0.036 0.064 0.078 #> 24 Group_1,Group_2 Item_24  0.040 0.040 0.042 #> 25 Group_1,Group_2 Item_25  0.002 0.019 0.021 #> 26 Group_1,Group_2 Item_26 -0.019 0.047 0.065 #> 27 Group_1,Group_2 Item_27 -0.049 0.049 0.052 #> 28 Group_1,Group_2 Item_28  0.027 0.029 0.031 #> 29 Group_1,Group_2 Item_29  0.007 0.025 0.028 #> 30 Group_1,Group_2 Item_30 -0.029 0.031 0.033 DRF(mod, DIF=TRUE, focal_items = 10:15, best_fitting=TRUE) #>            groups    item   sDIF  uDIF  dDIF #> 1 Group_1,Group_2 Item_10 -0.010 0.036 0.045 #> 2 Group_1,Group_2 Item_11 -0.056 0.059 0.065 #> 3 Group_1,Group_2 Item_12 -0.016 0.016 0.017 #> 4 Group_1,Group_2 Item_13 -0.015 0.023 0.025 #> 5 Group_1,Group_2 Item_14 -0.033 0.046 0.054 #> 6 Group_1,Group_2 Item_15 -0.045 0.045 0.047  DRF(mod, plot = TRUE)  DRF(mod, focal_items = 6:10, plot = TRUE) #DBF  DRF(mod, DIF=TRUE, plot = TRUE)  DRF(mod, DIF=TRUE, focal_items = 10:15, plot = TRUE)   if(interactive()) mirtCluster() DRF(mod, draws = 500) #>               groups n_focal_items   stat CI_2.5 CI_97.5    X2 df     p #> sDRF Group_1,Group_2            30 -0.326 -0.957   0.360 0.982  1 0.322 #> uDRF Group_1,Group_2            30  0.326  0.102   0.957 2.642  2 0.267 #> dDRF Group_1,Group_2            30  0.328  0.125   1.044                DRF(mod, draws = 500, best_fitting=TRUE) #>               groups n_focal_items   stat CI_2.5 CI_97.5    X2 df     p #> sDRF Group_1,Group_2            30 -0.326 -0.977   0.339 0.939  1 0.333 #> uDRF Group_1,Group_2            30  0.326  0.095   0.977 2.613  2 0.271 #> dDRF Group_1,Group_2            30  0.328  0.108   1.086                DRF(mod, draws = 500, plot=TRUE)   # pre-draw parameter set to save computations #  (more useful when using non-parametric bootstrap) param_set <- draw_parameters(mod, draws = 500) DRF(mod, focal_items = 6, param_set=param_set) #DIF test #>               groups n_focal_items  stat CI_2.5 CI_97.5    X2 df     p #> sDRF Group_1,Group_2             1 0.000 -0.058   0.066     0  1 0.998 #> uDRF Group_1,Group_2             1 0.016  0.007   0.085 0.766  2 0.682 #> dDRF Group_1,Group_2             1 0.018  0.008   0.098                DRF(mod, DIF=TRUE, param_set=param_set) #DIF test #> $sDIF #>             groups    item   sDIF CI_2.5 CI_97.5    X2 df     p #> 1  Group_1,Group_2  Item_1  0.000  0.000   0.000                #> 2  Group_1,Group_2  Item_2  0.000  0.000   0.000                #> 3  Group_1,Group_2  Item_3  0.000  0.000   0.000                #> 4  Group_1,Group_2  Item_4  0.000  0.000   0.000                #> 5  Group_1,Group_2  Item_5  0.000  0.000   0.000                #> 6  Group_1,Group_2  Item_6  0.000 -0.058   0.066     0  1 0.998 #> 7  Group_1,Group_2  Item_7 -0.026 -0.087   0.040 0.653  1 0.419 #> 8  Group_1,Group_2  Item_8 -0.008 -0.060   0.058 0.065  1 0.798 #> 9  Group_1,Group_2  Item_9 -0.026 -0.091   0.031 0.648  1 0.421 #> 10 Group_1,Group_2 Item_10 -0.010 -0.072   0.048 0.101  1 0.751 #> 11 Group_1,Group_2 Item_11 -0.056 -0.116   0.003 3.556  1 0.059 #> 12 Group_1,Group_2 Item_12 -0.016 -0.074   0.038 0.305  1 0.581 #> 13 Group_1,Group_2 Item_13 -0.015 -0.075   0.042 0.233  1 0.629 #> 14 Group_1,Group_2 Item_14 -0.033 -0.096   0.027 1.029  1  0.31 #> 15 Group_1,Group_2 Item_15 -0.045 -0.103   0.012 2.479  1 0.115 #> 16 Group_1,Group_2 Item_16 -0.030 -0.098   0.036 0.882  1 0.348 #> 17 Group_1,Group_2 Item_17  0.018 -0.042   0.079  0.31  1 0.578 #> 18 Group_1,Group_2 Item_18  0.011 -0.051   0.072 0.126  1 0.723 #> 19 Group_1,Group_2 Item_19 -0.045 -0.103   0.011 2.292  1  0.13 #> 20 Group_1,Group_2 Item_20 -0.008 -0.045   0.034  0.16  1 0.689 #> 21 Group_1,Group_2 Item_21 -0.070 -0.133  -0.006 4.678  1 0.031 #> 22 Group_1,Group_2 Item_22  0.017 -0.048   0.071 0.312  1 0.576 #> 23 Group_1,Group_2 Item_23  0.036 -0.031   0.098 1.292  1 0.256 #> 24 Group_1,Group_2 Item_24  0.040 -0.021   0.097 1.787  1 0.181 #> 25 Group_1,Group_2 Item_25  0.002 -0.062   0.061 0.004  1 0.949 #> 26 Group_1,Group_2 Item_26 -0.019 -0.075   0.037  0.47  1 0.493 #> 27 Group_1,Group_2 Item_27 -0.049 -0.111   0.014 2.298  1  0.13 #> 28 Group_1,Group_2 Item_28  0.027 -0.036   0.090 0.681  1 0.409 #> 29 Group_1,Group_2 Item_29  0.007 -0.057   0.073  0.05  1 0.823 #> 30 Group_1,Group_2 Item_30 -0.029 -0.092   0.022 1.001  1 0.317 #>  #> $uDIF #>             groups    item  uDIF CI_2.5 CI_97.5     X2 df     p #> 1  Group_1,Group_2  Item_1 0.000  0.000   0.000                 #> 2  Group_1,Group_2  Item_2 0.000  0.000   0.000                 #> 3  Group_1,Group_2  Item_3 0.000  0.000   0.000                 #> 4  Group_1,Group_2  Item_4 0.000  0.000   0.000                 #> 5  Group_1,Group_2  Item_5 0.000  0.000   0.000                 #> 6  Group_1,Group_2  Item_6 0.016  0.007   0.085  0.766  2 0.682 #> 7  Group_1,Group_2  Item_7 0.026  0.008   0.090  1.944  2 0.378 #> 8  Group_1,Group_2  Item_8 0.008  0.005   0.073  0.225  2 0.894 #> 9  Group_1,Group_2  Item_9 0.026  0.009   0.093  2.093  2 0.351 #> 10 Group_1,Group_2 Item_10 0.036  0.008   0.107  3.278  2 0.194 #> 11 Group_1,Group_2 Item_11 0.059  0.015   0.113 10.148  2 0.006 #> 12 Group_1,Group_2 Item_12 0.016  0.005   0.074  0.848  2 0.654 #> 13 Group_1,Group_2 Item_13 0.022  0.007   0.084  1.691  2 0.429 #> 14 Group_1,Group_2 Item_14 0.046  0.012   0.108  5.685  2 0.058 #> 15 Group_1,Group_2 Item_15 0.045  0.013   0.103  6.042  2 0.049 #> 16 Group_1,Group_2 Item_16 0.030  0.008   0.100  2.552  2 0.279 #> 17 Group_1,Group_2 Item_17 0.019  0.006   0.087  0.994  2 0.608 #> 18 Group_1,Group_2 Item_18 0.013  0.005   0.081  0.397  2  0.82 #> 19 Group_1,Group_2 Item_19 0.094  0.046   0.145 24.256  2     0 #> 20 Group_1,Group_2 Item_20 0.010  0.004   0.051  0.567  2 0.753 #> 21 Group_1,Group_2 Item_21 0.070  0.016   0.132 10.312  2 0.006 #> 22 Group_1,Group_2 Item_22 0.020  0.007   0.087  1.065  2 0.587 #> 23 Group_1,Group_2 Item_23 0.064  0.022   0.119  8.046  2 0.018 #> 24 Group_1,Group_2 Item_24 0.040  0.011   0.100  2.796  2 0.247 #> 25 Group_1,Group_2 Item_25 0.018  0.009   0.094  0.867  2 0.648 #> 26 Group_1,Group_2 Item_26 0.047  0.012   0.098   6.43  2  0.04 #> 27 Group_1,Group_2 Item_27 0.049  0.010   0.111  5.454  2 0.065 #> 28 Group_1,Group_2 Item_28 0.029  0.008   0.098  1.636  2 0.441 #> 29 Group_1,Group_2 Item_29 0.025  0.008   0.086  1.643  2  0.44 #> 30 Group_1,Group_2 Item_30 0.031  0.010   0.094  3.233  2 0.199 #>  #> $dDIF #>             groups    item  dDIF CI_2.5 CI_97.5 #> 1  Group_1,Group_2  Item_1 0.000  0.000   0.000 #> 2  Group_1,Group_2  Item_2 0.000  0.000   0.000 #> 3  Group_1,Group_2  Item_3 0.000  0.000   0.000 #> 4  Group_1,Group_2  Item_4 0.000  0.000   0.000 #> 5  Group_1,Group_2  Item_5 0.000  0.000   0.000 #> 6  Group_1,Group_2  Item_6 0.018  0.008   0.098 #> 7  Group_1,Group_2  Item_7 0.028  0.009   0.101 #> 8  Group_1,Group_2  Item_8 0.008  0.006   0.084 #> 9  Group_1,Group_2  Item_9 0.028  0.011   0.102 #> 10 Group_1,Group_2 Item_10 0.044  0.010   0.127 #> 11 Group_1,Group_2 Item_11 0.065  0.015   0.123 #> 12 Group_1,Group_2 Item_12 0.017  0.007   0.091 #> 13 Group_1,Group_2 Item_13 0.025  0.009   0.094 #> 14 Group_1,Group_2 Item_14 0.054  0.014   0.124 #> 15 Group_1,Group_2 Item_15 0.047  0.015   0.112 #> 16 Group_1,Group_2 Item_16 0.032  0.009   0.109 #> 17 Group_1,Group_2 Item_17 0.023  0.007   0.101 #> 18 Group_1,Group_2 Item_18 0.014  0.006   0.091 #> 19 Group_1,Group_2 Item_19 0.117  0.058   0.179 #> 20 Group_1,Group_2 Item_20 0.010  0.005   0.079 #> 21 Group_1,Group_2 Item_21 0.073  0.017   0.140 #> 22 Group_1,Group_2 Item_22 0.024  0.008   0.097 #> 23 Group_1,Group_2 Item_23 0.078  0.025   0.140 #> 24 Group_1,Group_2 Item_24 0.042  0.012   0.108 #> 25 Group_1,Group_2 Item_25 0.021  0.010   0.102 #> 26 Group_1,Group_2 Item_26 0.065  0.015   0.130 #> 27 Group_1,Group_2 Item_27 0.052  0.012   0.122 #> 28 Group_1,Group_2 Item_28 0.031  0.010   0.106 #> 29 Group_1,Group_2 Item_29 0.029  0.009   0.096 #> 30 Group_1,Group_2 Item_30 0.033  0.011   0.100 #>  DRF(mod, focal_items = 6:10, param_set=param_set) #DBF test #>               groups n_focal_items   stat CI_2.5 CI_97.5    X2 df     p #> sDRF Group_1,Group_2             5 -0.069 -0.242   0.119 0.569  1 0.451 #> uDRF Group_1,Group_2             5  0.071  0.018   0.249 2.027  2 0.363 #> dDRF Group_1,Group_2             5  0.084  0.023   0.285                DRF(mod, param_set=param_set) #DTF test #>               groups n_focal_items   stat CI_2.5 CI_97.5    X2 df     p #> sDRF Group_1,Group_2            30 -0.326 -1.036   0.404 0.876  1 0.349 #> uDRF Group_1,Group_2            30  0.326  0.099   1.047 2.482  2 0.289 #> dDRF Group_1,Group_2            30  0.328  0.128   1.130                 DRF(mod, focal_items = 6:10, draws=500) #DBF test #>               groups n_focal_items   stat CI_2.5 CI_97.5    X2 df     p #> sDRF Group_1,Group_2             5 -0.069 -0.239   0.094 0.658  1 0.417 #> uDRF Group_1,Group_2             5  0.071  0.020   0.254 2.142  2 0.343 #> dDRF Group_1,Group_2             5  0.084  0.023   0.295                DRF(mod, focal_items = 10:15, draws=500) #DBF test #>               groups n_focal_items   stat CI_2.5 CI_97.5    X2 df     p #> sDRF Group_1,Group_2             6 -0.175 -0.382   0.024 2.989  1 0.084 #> uDRF Group_1,Group_2             6  0.175  0.047   0.392 7.228  2 0.027 #> dDRF Group_1,Group_2             6  0.185  0.054   0.415                 DIFs <- DRF(mod, draws = 500, DIF=TRUE) print(DIFs) #> $sDIF #>             groups    item   sDIF CI_2.5 CI_97.5    X2 df     p #> 1  Group_1,Group_2  Item_1  0.000  0.000   0.000                #> 2  Group_1,Group_2  Item_2  0.000  0.000   0.000                #> 3  Group_1,Group_2  Item_3  0.000  0.000   0.000                #> 4  Group_1,Group_2  Item_4  0.000  0.000   0.000                #> 5  Group_1,Group_2  Item_5  0.000  0.000   0.000                #> 6  Group_1,Group_2  Item_6  0.000 -0.058   0.062     0  1 0.998 #> 7  Group_1,Group_2  Item_7 -0.026 -0.087   0.035 0.717  1 0.397 #> 8  Group_1,Group_2  Item_8 -0.008 -0.074   0.053 0.058  1 0.809 #> 9  Group_1,Group_2  Item_9 -0.026 -0.084   0.044 0.717  1 0.397 #> 10 Group_1,Group_2 Item_10 -0.010 -0.063   0.041 0.119  1  0.73 #> 11 Group_1,Group_2 Item_11 -0.056 -0.118   0.003 3.205  1 0.073 #> 12 Group_1,Group_2 Item_12 -0.016 -0.078   0.041 0.288  1 0.591 #> 13 Group_1,Group_2 Item_13 -0.015 -0.073   0.042 0.261  1 0.609 #> 14 Group_1,Group_2 Item_14 -0.033 -0.097   0.036 1.077  1 0.299 #> 15 Group_1,Group_2 Item_15 -0.045 -0.101   0.013 2.454  1 0.117 #> 16 Group_1,Group_2 Item_16 -0.030 -0.096   0.033 0.869  1 0.351 #> 17 Group_1,Group_2 Item_17  0.018 -0.041   0.076 0.317  1 0.573 #> 18 Group_1,Group_2 Item_18  0.011 -0.051   0.068 0.131  1 0.717 #> 19 Group_1,Group_2 Item_19 -0.045 -0.105   0.012 2.273  1 0.132 #> 20 Group_1,Group_2 Item_20 -0.008 -0.044   0.039  0.15  1 0.699 #> 21 Group_1,Group_2 Item_21 -0.070 -0.128  -0.007 5.598  1 0.018 #> 22 Group_1,Group_2 Item_22  0.017 -0.044   0.084 0.294  1 0.588 #> 23 Group_1,Group_2 Item_23  0.036 -0.027   0.100 1.299  1 0.254 #> 24 Group_1,Group_2 Item_24  0.040 -0.026   0.112 1.451  1 0.228 #> 25 Group_1,Group_2 Item_25  0.002 -0.064   0.061 0.004  1 0.948 #> 26 Group_1,Group_2 Item_26 -0.019 -0.069   0.032 0.457  1 0.499 #> 27 Group_1,Group_2 Item_27 -0.049 -0.108   0.015 2.687  1 0.101 #> 28 Group_1,Group_2 Item_28  0.027 -0.028   0.087 0.835  1 0.361 #> 29 Group_1,Group_2 Item_29  0.007 -0.058   0.072 0.053  1 0.819 #> 30 Group_1,Group_2 Item_30 -0.029 -0.088   0.029 0.946  1 0.331 #>  #> $uDIF #>             groups    item  uDIF CI_2.5 CI_97.5     X2 df     p #> 1  Group_1,Group_2  Item_1 0.000  0.000   0.000                 #> 2  Group_1,Group_2  Item_2 0.000  0.000   0.000                 #> 3  Group_1,Group_2  Item_3 0.000  0.000   0.000                 #> 4  Group_1,Group_2  Item_4 0.000  0.000   0.000                 #> 5  Group_1,Group_2  Item_5 0.000  0.000   0.000                 #> 6  Group_1,Group_2  Item_6 0.016  0.005   0.083  0.761  2 0.684 #> 7  Group_1,Group_2  Item_7 0.026  0.007   0.087  2.145  2 0.342 #> 8  Group_1,Group_2  Item_8 0.008  0.007   0.083  0.189  2  0.91 #> 9  Group_1,Group_2  Item_9 0.026  0.009   0.090  2.362  2 0.307 #> 10 Group_1,Group_2 Item_10 0.036  0.008   0.094  3.754  2 0.153 #> 11 Group_1,Group_2 Item_11 0.059  0.018   0.119  9.247  2  0.01 #> 12 Group_1,Group_2 Item_12 0.016  0.008   0.081  0.891  2  0.64 #> 13 Group_1,Group_2 Item_13 0.022  0.007   0.079  1.965  2 0.374 #> 14 Group_1,Group_2 Item_14 0.046  0.011   0.109  5.687  2 0.058 #> 15 Group_1,Group_2 Item_15 0.045  0.012   0.101  5.996  2  0.05 #> 16 Group_1,Group_2 Item_16 0.030  0.008   0.096  2.457  2 0.293 #> 17 Group_1,Group_2 Item_17 0.019  0.007   0.084  1.061  2 0.588 #> 18 Group_1,Group_2 Item_18 0.013  0.007   0.078  0.439  2 0.803 #> 19 Group_1,Group_2 Item_19 0.094  0.047   0.148 22.425  2     0 #> 20 Group_1,Group_2 Item_20 0.010  0.004   0.053  0.533  2 0.766 #> 21 Group_1,Group_2 Item_21 0.070  0.022   0.129 12.429  2 0.002 #> 22 Group_1,Group_2 Item_22 0.020  0.006   0.089  1.017  2 0.601 #> 23 Group_1,Group_2 Item_23 0.064  0.018   0.121  7.167  2 0.028 #> 24 Group_1,Group_2 Item_24 0.040  0.008   0.112  2.247  2 0.325 #> 25 Group_1,Group_2 Item_25 0.018  0.006   0.086  0.917  2 0.632 #> 26 Group_1,Group_2 Item_26 0.047  0.013   0.096  6.621  2 0.036 #> 27 Group_1,Group_2 Item_27 0.049  0.013   0.108  6.466  2 0.039 #> 28 Group_1,Group_2 Item_28 0.029  0.010   0.088  1.805  2 0.405 #> 29 Group_1,Group_2 Item_29 0.025  0.009   0.085  1.808  2 0.405 #> 30 Group_1,Group_2 Item_30 0.031  0.008   0.093  3.105  2 0.212 #>  #> $dDIF #>             groups    item  dDIF CI_2.5 CI_97.5 #> 1  Group_1,Group_2  Item_1 0.000  0.000   0.000 #> 2  Group_1,Group_2  Item_2 0.000  0.000   0.000 #> 3  Group_1,Group_2  Item_3 0.000  0.000   0.000 #> 4  Group_1,Group_2  Item_4 0.000  0.000   0.000 #> 5  Group_1,Group_2  Item_5 0.000  0.000   0.000 #> 6  Group_1,Group_2  Item_6 0.018  0.006   0.092 #> 7  Group_1,Group_2  Item_7 0.028  0.008   0.095 #> 8  Group_1,Group_2  Item_8 0.008  0.007   0.094 #> 9  Group_1,Group_2  Item_9 0.028  0.011   0.097 #> 10 Group_1,Group_2 Item_10 0.044  0.010   0.114 #> 11 Group_1,Group_2 Item_11 0.065  0.020   0.131 #> 12 Group_1,Group_2 Item_12 0.017  0.009   0.088 #> 13 Group_1,Group_2 Item_13 0.025  0.008   0.088 #> 14 Group_1,Group_2 Item_14 0.054  0.013   0.126 #> 15 Group_1,Group_2 Item_15 0.047  0.014   0.111 #> 16 Group_1,Group_2 Item_16 0.032  0.009   0.103 #> 17 Group_1,Group_2 Item_17 0.023  0.008   0.096 #> 18 Group_1,Group_2 Item_18 0.014  0.008   0.091 #> 19 Group_1,Group_2 Item_19 0.117  0.056   0.183 #> 20 Group_1,Group_2 Item_20 0.010  0.006   0.079 #> 21 Group_1,Group_2 Item_21 0.073  0.025   0.138 #> 22 Group_1,Group_2 Item_22 0.024  0.007   0.099 #> 23 Group_1,Group_2 Item_23 0.078  0.019   0.144 #> 24 Group_1,Group_2 Item_24 0.042  0.009   0.118 #> 25 Group_1,Group_2 Item_25 0.021  0.007   0.104 #> 26 Group_1,Group_2 Item_26 0.065  0.017   0.135 #> 27 Group_1,Group_2 Item_27 0.052  0.014   0.118 #> 28 Group_1,Group_2 Item_28 0.031  0.011   0.099 #> 29 Group_1,Group_2 Item_29 0.029  0.010   0.095 #> 30 Group_1,Group_2 Item_30 0.033  0.009   0.101 #>  DRF(mod, draws = 500, DIF=TRUE, plot=TRUE)   DIFs <- DRF(mod, draws = 500, DIF=TRUE, focal_items = 6:10) print(DIFs) #> $sDIF #>            groups    item   sDIF CI_2.5 CI_97.5    X2 df     p #> 1 Group_1,Group_2  Item_6  0.000 -0.066   0.064     0  1 0.998 #> 2 Group_1,Group_2  Item_7 -0.026 -0.083   0.040 0.696  1 0.404 #> 3 Group_1,Group_2  Item_8 -0.008 -0.074   0.045 0.062  1 0.804 #> 4 Group_1,Group_2  Item_9 -0.026 -0.089   0.037 0.739  1  0.39 #> 5 Group_1,Group_2 Item_10 -0.010 -0.070   0.045 0.113  1 0.737 #>  #> $uDIF #>            groups    item  uDIF CI_2.5 CI_97.5    X2 df     p #> 1 Group_1,Group_2  Item_6 0.016  0.006   0.081 0.786  2 0.675 #> 2 Group_1,Group_2  Item_7 0.026  0.007   0.090 2.051  2 0.359 #> 3 Group_1,Group_2  Item_8 0.008  0.007   0.080 0.215  2 0.898 #> 4 Group_1,Group_2  Item_9 0.026  0.007   0.089 2.358  2 0.308 #> 5 Group_1,Group_2 Item_10 0.036  0.008   0.093  3.28  2 0.194 #>  #> $dDIF #>            groups    item  dDIF CI_2.5 CI_97.5 #> 1 Group_1,Group_2  Item_6 0.018  0.007   0.092 #> 2 Group_1,Group_2  Item_7 0.028  0.008   0.100 #> 3 Group_1,Group_2  Item_8 0.008  0.008   0.090 #> 4 Group_1,Group_2  Item_9 0.028  0.009   0.096 #> 5 Group_1,Group_2 Item_10 0.044  0.009   0.121 #>  DRF(mod, draws = 500, DIF=TRUE, focal_items = 6:10, plot = TRUE)   DRF(mod, DIF=TRUE, focal_items = 6) #>            groups   item sDIF  uDIF  dDIF #> 1 Group_1,Group_2 Item_6    0 0.016 0.018 DRF(mod, draws=500, DIF=TRUE, focal_items = 6) #> $sDIF #>            groups   item sDIF CI_2.5 CI_97.5 X2 df     p #> 1 Group_1,Group_2 Item_6    0 -0.059   0.058  0  1 0.998 #>  #> $uDIF #>            groups   item  uDIF CI_2.5 CI_97.5    X2 df     p #> 1 Group_1,Group_2 Item_6 0.016  0.006   0.076 0.823  2 0.663 #>  #> $dDIF #>            groups   item  dDIF CI_2.5 CI_97.5 #> 1 Group_1,Group_2 Item_6 0.018  0.006   0.088 #>   # evaluate specific values for sDRF Theta_nodes <- matrix(seq(-6,6,length.out = 100))  sDTF <- DRF(mod, Theta_nodes=Theta_nodes) head(sDTF) #>         Theta  sDRF #> sDRF.1 -6.000 0.006 #> sDRF.2 -5.879 0.006 #> sDRF.3 -5.758 0.006 #> sDRF.4 -5.636 0.007 #> sDRF.5 -5.515 0.007 #> sDRF.6 -5.394 0.008 sDTF <- DRF(mod, Theta_nodes=Theta_nodes, draws=200) head(sDTF) #>         Theta  sDRF CI_2.5 CI_97.5 #> sDRF.1 -6.000 0.006 -0.076   0.185 #> sDRF.2 -5.879 0.006 -0.083   0.199 #> sDRF.3 -5.758 0.006 -0.090   0.214 #> sDRF.4 -5.636 0.007 -0.098   0.230 #> sDRF.5 -5.515 0.007 -0.107   0.242 #> sDRF.6 -5.394 0.008 -0.117   0.256  # sDIF (isolate single item) sDIF <- DRF(mod, Theta_nodes=Theta_nodes, focal_items=6) head(sDIF) #>         Theta  sDRF #> sDRF.1 -6.000 0.001 #> sDRF.2 -5.879 0.001 #> sDRF.3 -5.758 0.001 #> sDRF.4 -5.636 0.002 #> sDRF.5 -5.515 0.002 #> sDRF.6 -5.394 0.002 sDIF <- DRF(mod, Theta_nodes=Theta_nodes, focal_items = 6, draws=200) head(sDIF) #>         Theta  sDRF CI_2.5 CI_97.5 #> sDRF.1 -6.000 0.001 -0.005   0.013 #> sDRF.2 -5.879 0.001 -0.005   0.014 #> sDRF.3 -5.758 0.001 -0.006   0.015 #> sDRF.4 -5.636 0.002 -0.006   0.017 #> sDRF.5 -5.515 0.002 -0.007   0.018 #> sDRF.6 -5.394 0.002 -0.008   0.020  ## ------------- ## random slopes and intercepts for 15 items, and latent mean difference ##    (no systematic DTF should exist, but DIF will be present) set.seed(1234) dat1 <- simdata(a, d, N, itemtype = 'dich', mu=.50, sigma=matrix(1.5)) dat2 <- simdata(a + c(numeric(15), rnorm(n-15, 0, .25)),                 d + c(numeric(15), rnorm(n-15, 0, .5)), N, itemtype = 'dich') dat <- rbind(dat1, dat2) mod1 <- multipleGroup(dat, 1, group=group) #>  plot(mod1)  DRF(mod1) #does not account for group differences! Need anchors #> No hyper-parameters were estimated in the DIF model. For effective #>                 \tDRF testing freeing the focal group hyper-parameters is recommended. #>            groups n_focal_items  sDRF  uDRF  dDRF #> 1 Group_1,Group_2            30 -3.25 3.268 3.642  mod2 <- multipleGroup(dat, model, group=group, SE=TRUE,                       invariance=c('free_means', 'free_var')) #>  #>  #> Calculating information matrix... plot(mod2)   # significant DIF in multiple items.... # DIF(mod2, which.par=c('a1', 'd'), items2test=16:30) DRF(mod2) #>            groups n_focal_items   sDRF  uDRF dDRF #> 1 Group_1,Group_2            30 -0.421 0.421 0.51 DRF(mod2, draws=500) #non-sig DTF due to item cancellation #>               groups n_focal_items   stat CI_2.5 CI_97.5    X2 df     p #> sDRF Group_1,Group_2            30 -0.421 -1.085   0.273 1.529  1 0.216 #> uDRF Group_1,Group_2            30  0.421  0.135   1.093 4.801  2 0.091 #> dDRF Group_1,Group_2            30  0.510  0.188   1.244                 ## ------------- ## systematic differing slopes and intercepts (clear DTF) set.seed(1234) dat1 <- simdata(a, d, N, itemtype = 'dich', mu=.50, sigma=matrix(1.5)) dat2 <- simdata(a + c(numeric(15), rnorm(n-15, 1, .25)),                 d + c(numeric(15), rnorm(n-15, 1, .5)),                 N, itemtype = 'dich') dat <- rbind(dat1, dat2) mod3 <- multipleGroup(dat, model, group=group, SE=TRUE,                       invariance=c('free_means', 'free_var')) #>  #>  #> Calculating information matrix... plot(mod3) #visable DTF happening   # DIF(mod3, c('a1', 'd'), items2test=16:30) DRF(mod3) #unsigned bias. Signed bias (group 2 scores higher on average) #>            groups n_focal_items  sDRF  uDRF  dDRF #> 1 Group_1,Group_2            30 1.983 2.193 2.471 DRF(mod3, draws=500) #>               groups n_focal_items  stat CI_2.5 CI_97.5     X2 df p #> sDRF Group_1,Group_2            30 1.983  1.275   2.659 29.992  1 0 #> uDRF Group_1,Group_2            30 2.193  1.638   2.836 54.336  2 0 #> dDRF Group_1,Group_2            30 2.471  1.856   3.172             DRF(mod3, draws=500, plot=TRUE) #multiple DRF areas along Theta   # plot the DIF DRF(mod3, draws=500, DIF=TRUE, plot=TRUE)   # evaluate specific values for sDRF Theta_nodes <- matrix(seq(-6,6,length.out = 100)) sDTF <- DRF(mod3, Theta_nodes=Theta_nodes, draws=200) head(sDTF) #>         Theta   sDRF CI_2.5 CI_97.5 #> sDRF.1 -6.000 -0.012 -0.087   0.010 #> sDRF.2 -5.879 -0.014 -0.098   0.010 #> sDRF.3 -5.758 -0.016 -0.109   0.010 #> sDRF.4 -5.636 -0.019 -0.122   0.011 #> sDRF.5 -5.515 -0.022 -0.136   0.012 #> sDRF.6 -5.394 -0.026 -0.151   0.013  # DIF sDIF <- DRF(mod3, Theta_nodes=Theta_nodes, focal_items = 30, draws=200) head(sDIF) #>         Theta   sDRF CI_2.5 CI_97.5 #> sDRF.1 -6.000  0.000 -0.001       0 #> sDRF.2 -5.879  0.000 -0.002       0 #> sDRF.3 -5.758  0.000 -0.002       0 #> sDRF.4 -5.636  0.000 -0.002       0 #> sDRF.5 -5.515  0.000 -0.002       0 #> sDRF.6 -5.394 -0.001 -0.003       0  ## ---------------------------------------------------------------- # polytomous example # simulate data where group 2 has a different slopes/intercepts set.seed(4321) a1 <- a2 <- matrix(rlnorm(20,.2,.3)) a2[c(16:17, 19:20),] <- a1[c(16:17, 19:20),] + c(-.5, -.25, .25, .5)  # for the graded model, ensure that there is enough space between the intercepts, # otherwise closer categories will not be selected often diffs <- t(apply(matrix(runif(20*4, .3, 1), 20), 1, cumsum)) diffs <- -(diffs - rowMeans(diffs)) d1 <- d2 <- diffs + rnorm(20) rownames(d1) <- rownames(d2) <- paste0('Item.', 1:20) d2[16:20,] <- d1[16:20,] + matrix(c(-.5, -.5, -.5, -.5,                                     1, 0, 0, -1,                                     .5, .5, -.5, -.5,                                     1, .5, 0, -1,                                     .5, .5, .5, .5), byrow=TRUE, nrow=5)  tail(data.frame(a.group1 = a1, a.group2 = a2), 6) #>     a.group1  a.group2 #> 15 0.8465935 0.8465935 #> 16 1.9581395 1.4581395 #> 17 1.2486255 0.9986255 #> 18 0.8585293 0.8585293 #> 19 0.7584499 1.0084499 #> 20 0.9760766 1.4760766 list(d.group1 = d1[15:20,], d.group2 = d2[15:20,]) #> $d.group1 #>              [,1]       [,2]        [,3]          [,4] #> Item.15 2.0841033  1.2423287  0.38217647 -0.0009005437 #> Item.16 0.2454193 -0.2924192 -0.63521843 -1.5254133343 #> Item.17 1.3003614  0.5847340 -0.09046573 -0.9841542611 #> Item.18 1.5079114  0.6489106 -0.03799347 -0.3892116221 #> Item.19 1.3766077  0.4483499 -0.20715833 -0.8701328534 #> Item.20 0.1461006 -0.8364834 -1.32963653 -1.6894534436 #>  #> $d.group2 #>               [,1]       [,2]        [,3]          [,4] #> Item.15  2.0841033  1.2423287  0.38217647 -0.0009005437 #> Item.16 -0.2545807 -0.7924192 -1.13521843 -2.0254133343 #> Item.17  2.3003614  0.5847340 -0.09046573 -1.9841542611 #> Item.18  2.0079114  1.1489106 -0.53799347 -0.8892116221 #> Item.19  2.3766077  0.9483499 -0.20715833 -1.8701328534 #> Item.20  0.6461006 -0.3364834 -0.82963653 -1.1894534436 #>   itemtype <- rep('graded', nrow(a1)) N <- 600 dataset1 <- simdata(a1, d1, N, itemtype) dataset2 <- simdata(a2, d2, N, itemtype, mu = -.25, sigma = matrix(1.25)) dat <- rbind(dataset1, dataset2) group <- c(rep('D1', N), rep('D2', N))  # item 1-10 as anchors mod <- multipleGroup(dat, group=group, SE=TRUE,                      invariance=c(colnames(dat)[1:10], 'free_means', 'free_var')) #>  #>  #> Calculating information matrix... coef(mod, simplify=TRUE) #> $D1 #> $items #>            a1     d1     d2     d3     d4 #> Item_1  1.194  0.911  0.177 -0.462 -1.105 #> Item_2  1.320  0.787  0.362 -0.152 -0.951 #> Item_3  1.561  0.794  0.013 -0.973 -1.774 #> Item_4  1.491  1.977  1.304  0.284 -0.236 #> Item_5  1.249  1.435  0.351 -0.329 -1.273 #> Item_6  2.071  0.517  0.072 -0.564 -1.551 #> Item_7  1.333  0.157 -0.374 -0.848 -1.911 #> Item_8  1.304  1.117  0.512 -0.467 -0.868 #> Item_9  1.830  1.501  0.639 -0.176 -0.906 #> Item_10 1.073  1.485  0.567 -0.190 -0.812 #> Item_11 1.327  2.039  1.529  0.756 -0.283 #> Item_12 1.481 -0.268 -1.021 -1.534 -2.229 #> Item_13 0.812  0.641  0.086 -0.832 -1.977 #> Item_14 1.713  1.850  1.191  0.511 -0.262 #> Item_15 0.913  2.168  1.401  0.468  0.058 #> Item_16 2.245  0.286 -0.345 -0.728 -1.687 #> Item_17 1.233  1.357  0.673  0.057 -0.916 #> Item_18 0.983  1.515  0.625 -0.171 -0.564 #> Item_19 0.946  1.415  0.521 -0.227 -0.966 #> Item_20 0.847  0.181 -0.828 -1.245 -1.624 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  #>  #> $D2 #> $items #>            a1     d1     d2     d3     d4 #> Item_1  1.194  0.911  0.177 -0.462 -1.105 #> Item_2  1.320  0.787  0.362 -0.152 -0.951 #> Item_3  1.561  0.794  0.013 -0.973 -1.774 #> Item_4  1.491  1.977  1.304  0.284 -0.236 #> Item_5  1.249  1.435  0.351 -0.329 -1.273 #> Item_6  2.071  0.517  0.072 -0.564 -1.551 #> Item_7  1.333  0.157 -0.374 -0.848 -1.911 #> Item_8  1.304  1.117  0.512 -0.467 -0.868 #> Item_9  1.830  1.501  0.639 -0.176 -0.906 #> Item_10 1.073  1.485  0.567 -0.190 -0.812 #> Item_11 1.106  1.818  1.282  0.635 -0.498 #> Item_12 1.562 -0.249 -0.917 -1.667 -2.266 #> Item_13 0.853  0.595 -0.044 -1.057 -1.890 #> Item_14 2.147  2.155  1.311  0.566 -0.248 #> Item_15 0.889  2.101  1.164  0.343 -0.010 #> Item_16 1.622 -0.395 -0.979 -1.278 -2.255 #> Item_17 1.060  2.345  0.587 -0.113 -2.040 #> Item_18 0.923  1.860  1.099 -0.508 -0.793 #> Item_19 1.051  2.528  0.960 -0.227 -1.976 #> Item_20 1.456  0.690 -0.277 -0.806 -1.164 #>  #> $means #>     F1  #> -0.303  #>  #> $cov #>       F1 #> F1 1.147 #>  #>  plot(mod)  plot(mod, type='itemscore')   # DIF tests vis Wald method DIF(mod, items2test=11:20,    which.par=c('a1', paste0('d', 1:4)),    Wald=TRUE, p.adjust='holm') #>         groups       W df     p adj_p #> Item_11  D1,D2   5.854  5 0.321     1 #> Item_12  D1,D2   4.808  5  0.44     1 #> Item_13  D1,D2   6.854  5 0.232     1 #> Item_14  D1,D2   4.854  5 0.434     1 #> Item_15  D1,D2   3.861  5  0.57     1 #> Item_16  D1,D2  35.918  5     0     0 #> Item_17  D1,D2 121.671  5     0     0 #> Item_18  D1,D2  45.135  5     0     0 #> Item_19  D1,D2  96.182  5     0     0 #> Item_20  D1,D2  32.769  5     0     0  DRF(mod) #>   groups n_focal_items   sDRF  uDRF  dDRF #> 1  D1,D2            20 -0.195 0.329 0.382 DRF(mod, DIF=TRUE, focal_items=11:20) #>    groups    item   sDIF  uDIF  dDIF #> 1   D1,D2 Item_11 -0.080 0.119 0.131 #> 2   D1,D2 Item_12  0.011 0.024 0.031 #> 3   D1,D2 Item_13 -0.068 0.069 0.072 #> 4   D1,D2 Item_14 -0.010 0.121 0.134 #> 5   D1,D2 Item_15 -0.083 0.083 0.085 #> 6   D1,D2 Item_16 -0.393 0.402 0.522 #> 7   D1,D2 Item_17 -0.053 0.219 0.248 #> 8   D1,D2 Item_18  0.038 0.093 0.110 #> 9   D1,D2 Item_19  0.073 0.104 0.122 #> 10  D1,D2 Item_20  0.370 0.425 0.542 DRF(mod, DIF.cats=TRUE, focal_items=11:20) #>    groups    item cat   sDIF  uDIF  dDIF #> 1   D1,D2 Item_11   1  0.009 0.021 0.024 #> 2   D1,D2 Item_11   2  0.012 0.012 0.012 #> 3   D1,D2 Item_11   3 -0.010 0.015 0.018 #> 4   D1,D2 Item_11   4  0.032 0.032 0.034 #> 5   D1,D2 Item_11   5 -0.041 0.045 0.056 #> 6   D1,D2 Item_12   1 -0.004 0.008 0.010 #> 7   D1,D2 Item_12   2 -0.015 0.015 0.017 #> 8   D1,D2 Item_12   3  0.031 0.031 0.036 #> 9   D1,D2 Item_12   4 -0.013 0.013 0.015 #> 10  D1,D2 Item_12   5  0.001 0.005 0.008 #> 11  D1,D2 Item_13   1  0.012 0.012 0.015 #> 12  D1,D2 Item_13   2  0.017 0.017 0.018 #> 13  D1,D2 Item_13   3  0.010 0.013 0.016 #> 14  D1,D2 Item_13   4 -0.050 0.050 0.053 #> 15  D1,D2 Item_13   5  0.011 0.011 0.016 #> 16  D1,D2 Item_14   1 -0.002 0.028 0.034 #> 17  D1,D2 Item_14   2  0.011 0.018 0.023 #> 18  D1,D2 Item_14   3 -0.004 0.012 0.013 #> 19  D1,D2 Item_14   4 -0.010 0.013 0.015 #> 20  D1,D2 Item_14   5  0.004 0.034 0.037 #> 21  D1,D2 Item_15   1  0.006 0.006 0.006 #> 22  D1,D2 Item_15   2  0.033 0.033 0.034 #> 23  D1,D2 Item_15   3 -0.014 0.014 0.018 #> 24  D1,D2 Item_15   4 -0.011 0.011 0.012 #> 25  D1,D2 Item_15   5 -0.014 0.014 0.015 #> 26  D1,D2 Item_16   1  0.099 0.103 0.126 #> 27  D1,D2 Item_16   2  0.004 0.025 0.031 #> 28  D1,D2 Item_16   3 -0.008 0.017 0.021 #> 29  D1,D2 Item_16   4 -0.001 0.033 0.047 #> 30  D1,D2 Item_16   5 -0.095 0.095 0.144 #> 31  D1,D2 Item_17   1 -0.147 0.147 0.175 #> 32  D1,D2 Item_17   2  0.154 0.154 0.170 #> 33  D1,D2 Item_17   3  0.024 0.024 0.024 #> 34  D1,D2 Item_17   4  0.132 0.132 0.152 #> 35  D1,D2 Item_17   5 -0.162 0.162 0.191 #> 36  D1,D2 Item_18   1 -0.055 0.055 0.064 #> 37  D1,D2 Item_18   2 -0.039 0.040 0.043 #> 38  D1,D2 Item_18   3  0.162 0.162 0.164 #> 39  D1,D2 Item_18   4 -0.023 0.023 0.024 #> 40  D1,D2 Item_18   5 -0.044 0.044 0.049 #> 41  D1,D2 Item_19   1 -0.133 0.133 0.145 #> 42  D1,D2 Item_19   2  0.054 0.059 0.083 #> 43  D1,D2 Item_19   3  0.078 0.078 0.083 #> 44  D1,D2 Item_19   4  0.137 0.137 0.155 #> 45  D1,D2 Item_19   5 -0.138 0.138 0.149 #> 46  D1,D2 Item_20   1 -0.072 0.098 0.110 #> 47  D1,D2 Item_20   2 -0.038 0.040 0.056 #> 48  D1,D2 Item_20   3  0.016 0.024 0.028 #> 49  D1,D2 Item_20   4  0.000 0.011 0.015 #> 50  D1,D2 Item_20   5  0.095 0.102 0.146  ## ---------------------------------------------------------------- ### multidimensional DTF  set.seed(1234) n <- 50 N <- 1000  # only first 5 items as anchors within each dimension model <- 'F1 = 1-25           F2 = 26-50           COV = F1*F2           CONSTRAINB = (1-5, a1), (1-5, 26-30, d), (26-30, a2)'  a <- matrix(c(rep(1, 25), numeric(50), rep(1, 25)), n) d <- matrix(rnorm(n), n) group <- c(rep('Group_1', N), rep('Group_2', N)) Cov <- matrix(c(1, .5, .5, 1.5), 2) Mean <- c(0, 0.5)  # groups completely equal dat1 <- simdata(a, d, N, itemtype = 'dich', sigma = cov2cor(Cov)) dat2 <- simdata(a, d, N, itemtype = 'dich', sigma = Cov, mu = Mean) dat <- rbind(dat1, dat2) mod <- multipleGroup(dat, model, group=group, SE=TRUE,                      invariance=c('free_means', 'free_var')) #>  #>  #> Calculating information matrix... coef(mod, simplify=TRUE) #> $Group_1 #> $items #>            a1    a2      d g u #> Item_1  1.006 0.000 -1.208 0 1 #> Item_2  1.080 0.000  0.301 0 1 #> Item_3  0.833 0.000  1.126 0 1 #> Item_4  0.977 0.000 -2.342 0 1 #> Item_5  1.005 0.000  0.410 0 1 #> Item_6  0.864 0.000  0.428 0 1 #> Item_7  1.014 0.000 -0.495 0 1 #> Item_8  1.133 0.000 -0.472 0 1 #> Item_9  0.945 0.000 -0.585 0 1 #> Item_10 1.001 0.000 -0.787 0 1 #> Item_11 1.009 0.000 -0.390 0 1 #> Item_12 0.920 0.000 -1.061 0 1 #> Item_13 1.189 0.000 -0.711 0 1 #> Item_14 1.125 0.000  0.067 0 1 #> Item_15 1.122 0.000  0.896 0 1 #> Item_16 1.094 0.000 -0.203 0 1 #> Item_17 1.041 0.000 -0.479 0 1 #> Item_18 1.011 0.000 -0.849 0 1 #> Item_19 0.962 0.000 -0.768 0 1 #> Item_20 0.937 0.000  2.372 0 1 #> Item_21 0.935 0.000  0.082 0 1 #> Item_22 0.886 0.000 -0.482 0 1 #> Item_23 0.921 0.000 -0.443 0 1 #> Item_24 0.937 0.000  0.521 0 1 #> Item_25 0.959 0.000 -0.674 0 1 #> Item_26 0.000 0.999 -1.498 0 1 #> Item_27 0.000 0.978  0.590 0 1 #> Item_28 0.000 0.997 -1.035 0 1 #> Item_29 0.000 0.917 -0.055 0 1 #> Item_30 0.000 0.982 -0.970 0 1 #> Item_31 0.000 0.891  0.931 0 1 #> Item_32 0.000 0.863 -0.453 0 1 #> Item_33 0.000 1.140 -0.759 0 1 #> Item_34 0.000 0.943 -0.469 0 1 #> Item_35 0.000 1.289 -1.852 0 1 #> Item_36 0.000 0.791 -1.064 0 1 #> Item_37 0.000 0.980 -2.323 0 1 #> Item_38 0.000 1.051 -1.367 0 1 #> Item_39 0.000 1.097 -0.113 0 1 #> Item_40 0.000 0.908 -0.523 0 1 #> Item_41 0.000 1.059  1.708 0 1 #> Item_42 0.000 1.146 -1.078 0 1 #> Item_43 0.000 1.086 -0.967 0 1 #> Item_44 0.000 1.095 -0.415 0 1 #> Item_45 0.000 0.984 -1.066 0 1 #> Item_46 0.000 0.996 -0.726 0 1 #> Item_47 0.000 1.330 -1.037 0 1 #> Item_48 0.000 1.072 -1.148 0 1 #> Item_49 0.000 0.898 -0.429 0 1 #> Item_50 0.000 1.078 -0.525 0 1 #>  #> $means #> F1 F2  #>  0  0  #>  #> $cov #>       F1    F2 #> F1 1.000 0.453 #> F2 0.453 1.000 #>  #>  #> $Group_2 #> $items #>            a1    a2      d g u #> Item_1  1.006 0.000 -1.208 0 1 #> Item_2  1.080 0.000  0.301 0 1 #> Item_3  0.833 0.000  1.126 0 1 #> Item_4  0.977 0.000 -2.342 0 1 #> Item_5  1.005 0.000  0.410 0 1 #> Item_6  0.886 0.000  0.558 0 1 #> Item_7  0.967 0.000 -0.583 0 1 #> Item_8  0.988 0.000 -0.613 0 1 #> Item_9  0.962 0.000 -0.467 0 1 #> Item_10 0.865 0.000 -0.999 0 1 #> Item_11 1.076 0.000 -0.448 0 1 #> Item_12 1.145 0.000 -1.198 0 1 #> Item_13 0.991 0.000 -0.789 0 1 #> Item_14 1.039 0.000  0.070 0 1 #> Item_15 1.200 0.000  1.070 0 1 #> Item_16 0.989 0.000 -0.084 0 1 #> Item_17 0.995 0.000 -0.569 0 1 #> Item_18 0.932 0.000 -0.925 0 1 #> Item_19 0.866 0.000 -0.790 0 1 #> Item_20 1.122 0.000  2.463 0 1 #> Item_21 1.055 0.000  0.200 0 1 #> Item_22 1.107 0.000 -0.610 0 1 #> Item_23 0.992 0.000 -0.513 0 1 #> Item_24 0.992 0.000  0.388 0 1 #> Item_25 0.934 0.000 -0.794 0 1 #> Item_26 0.000 0.999 -1.498 0 1 #> Item_27 0.000 0.978  0.590 0 1 #> Item_28 0.000 0.997 -1.035 0 1 #> Item_29 0.000 0.917 -0.055 0 1 #> Item_30 0.000 0.982 -0.970 0 1 #> Item_31 0.000 1.015  0.962 0 1 #> Item_32 0.000 1.115 -0.595 0 1 #> Item_33 0.000 1.095 -0.874 0 1 #> Item_34 0.000 0.856 -0.486 0 1 #> Item_35 0.000 1.138 -1.636 0 1 #> Item_36 0.000 1.085 -1.353 0 1 #> Item_37 0.000 1.115 -2.169 0 1 #> Item_38 0.000 1.146 -1.450 0 1 #> Item_39 0.000 1.130 -0.441 0 1 #> Item_40 0.000 0.978 -0.632 0 1 #> Item_41 0.000 1.202  1.439 0 1 #> Item_42 0.000 0.942 -0.943 0 1 #> Item_43 0.000 1.033 -0.899 0 1 #> Item_44 0.000 1.144 -0.339 0 1 #> Item_45 0.000 0.844 -0.728 0 1 #> Item_46 0.000 1.068 -1.046 0 1 #> Item_47 0.000 0.952 -1.123 0 1 #> Item_48 0.000 1.018 -1.317 0 1 #> Item_49 0.000 0.881 -0.381 0 1 #> Item_50 0.000 1.092 -0.605 0 1 #>  #> $means #>    F1    F2  #> 0.072 0.505  #>  #> $cov #>       F1    F2 #> F1 1.068 0.518 #> F2 0.518 1.415 #>  #>  plot(mod, degrees = c(45,45))  DRF(mod) #>            groups n_focal_items   sDRF  uDRF  dDRF #> 1 Group_1,Group_2            50 -0.347 0.347 0.353  # some intercepts slightly higher in Group 2 d2 <- d d2[c(10:15, 31:35)] <- d2[c(10:15, 31:35)] + 1 dat1 <- simdata(a, d, N, itemtype = 'dich', sigma = cov2cor(Cov)) dat2 <- simdata(a, d2, N, itemtype = 'dich', sigma = Cov, mu = Mean) dat <- rbind(dat1, dat2) mod <- multipleGroup(dat, model, group=group, SE=TRUE,                      invariance=c('free_means', 'free_var')) #>  #>  #> Calculating information matrix... coef(mod, simplify=TRUE) #> $Group_1 #> $items #>            a1    a2      d g u #> Item_1  0.942 0.000 -1.195 0 1 #> Item_2  0.973 0.000  0.294 0 1 #> Item_3  0.833 0.000  1.131 0 1 #> Item_4  1.049 0.000 -2.575 0 1 #> Item_5  1.078 0.000  0.517 0 1 #> Item_6  0.919 0.000  0.456 0 1 #> Item_7  0.929 0.000 -0.473 0 1 #> Item_8  0.918 0.000 -0.554 0 1 #> Item_9  0.907 0.000 -0.582 0 1 #> Item_10 1.096 0.000 -0.821 0 1 #> Item_11 1.000 0.000 -0.483 0 1 #> Item_12 0.986 0.000 -1.016 0 1 #> Item_13 1.013 0.000 -0.870 0 1 #> Item_14 0.861 0.000  0.104 0 1 #> Item_15 1.097 0.000  0.908 0 1 #> Item_16 0.871 0.000 -0.119 0 1 #> Item_17 0.949 0.000 -0.417 0 1 #> Item_18 1.019 0.000 -0.987 0 1 #> Item_19 1.031 0.000 -0.962 0 1 #> Item_20 0.904 0.000  2.378 0 1 #> Item_21 1.177 0.000  0.061 0 1 #> Item_22 1.044 0.000 -0.551 0 1 #> Item_23 0.948 0.000 -0.510 0 1 #> Item_24 0.915 0.000  0.387 0 1 #> Item_25 0.901 0.000 -0.778 0 1 #> Item_26 0.000 0.979 -1.450 0 1 #> Item_27 0.000 0.999  0.603 0 1 #> Item_28 0.000 1.105 -1.108 0 1 #> Item_29 0.000 1.034  0.043 0 1 #> Item_30 0.000 0.974 -0.925 0 1 #> Item_31 0.000 0.982  1.258 0 1 #> Item_32 0.000 1.012 -0.407 0 1 #> Item_33 0.000 0.957 -0.619 0 1 #> Item_34 0.000 1.076 -0.548 0 1 #> Item_35 0.000 0.761 -1.608 0 1 #> Item_36 0.000 0.962 -1.091 0 1 #> Item_37 0.000 0.891 -2.076 0 1 #> Item_38 0.000 0.895 -1.162 0 1 #> Item_39 0.000 1.023 -0.260 0 1 #> Item_40 0.000 0.949 -0.394 0 1 #> Item_41 0.000 1.145  1.451 0 1 #> Item_42 0.000 1.037 -1.063 0 1 #> Item_43 0.000 0.891 -0.937 0 1 #> Item_44 0.000 0.929 -0.397 0 1 #> Item_45 0.000 0.987 -0.887 0 1 #> Item_46 0.000 0.955 -1.032 0 1 #> Item_47 0.000 0.888 -1.063 0 1 #> Item_48 0.000 1.058 -1.267 0 1 #> Item_49 0.000 0.969 -0.486 0 1 #> Item_50 0.000 1.086 -0.442 0 1 #>  #> $means #> F1 F2  #>  0  0  #>  #> $cov #>       F1    F2 #> F1 1.000 0.409 #> F2 0.409 1.000 #>  #>  #> $Group_2 #> $items #>            a1    a2      d g u #> Item_1  0.942 0.000 -1.195 0 1 #> Item_2  0.973 0.000  0.294 0 1 #> Item_3  0.833 0.000  1.131 0 1 #> Item_4  1.049 0.000 -2.575 0 1 #> Item_5  1.078 0.000  0.517 0 1 #> Item_6  0.903 0.000  0.610 0 1 #> Item_7  1.006 0.000 -0.476 0 1 #> Item_8  0.889 0.000 -0.501 0 1 #> Item_9  0.855 0.000 -0.604 0 1 #> Item_10 0.892 0.000  0.069 0 1 #> Item_11 0.931 0.000  0.498 0 1 #> Item_12 0.962 0.000  0.065 0 1 #> Item_13 0.845 0.000  0.311 0 1 #> Item_14 0.893 0.000  1.036 0 1 #> Item_15 0.998 0.000  1.919 0 1 #> Item_16 0.949 0.000 -0.155 0 1 #> Item_17 0.989 0.000 -0.545 0 1 #> Item_18 0.866 0.000 -0.945 0 1 #> Item_19 0.893 0.000 -0.872 0 1 #> Item_20 0.732 0.000  2.195 0 1 #> Item_21 0.854 0.000  0.059 0 1 #> Item_22 0.783 0.000 -0.498 0 1 #> Item_23 0.966 0.000 -0.561 0 1 #> Item_24 0.944 0.000  0.384 0 1 #> Item_25 0.940 0.000 -0.794 0 1 #> Item_26 0.000 0.979 -1.450 0 1 #> Item_27 0.000 0.999  0.603 0 1 #> Item_28 0.000 1.105 -1.108 0 1 #> Item_29 0.000 1.034  0.043 0 1 #> Item_30 0.000 0.974 -0.925 0 1 #> Item_31 0.000 0.998  1.989 0 1 #> Item_32 0.000 1.190  0.252 0 1 #> Item_33 0.000 1.064  0.076 0 1 #> Item_34 0.000 0.885  0.444 0 1 #> Item_35 0.000 1.065 -0.597 0 1 #> Item_36 0.000 1.080 -1.273 0 1 #> Item_37 0.000 1.034 -2.217 0 1 #> Item_38 0.000 1.040 -1.451 0 1 #> Item_39 0.000 1.160 -0.496 0 1 #> Item_40 0.000 1.015 -0.711 0 1 #> Item_41 0.000 0.946  1.416 0 1 #> Item_42 0.000 1.006 -1.144 0 1 #> Item_43 0.000 0.969 -0.818 0 1 #> Item_44 0.000 1.099 -0.322 0 1 #> Item_45 0.000 1.062 -1.103 0 1 #> Item_46 0.000 1.064 -0.951 0 1 #> Item_47 0.000 1.025 -1.122 0 1 #> Item_48 0.000 0.975 -1.194 0 1 #> Item_49 0.000 1.083 -0.461 0 1 #> Item_50 0.000 0.935 -0.512 0 1 #>  #> $means #>    F1    F2  #> 0.003 0.578  #>  #> $cov #>       F1    F2 #> F1 1.165 0.459 #> F2 0.459 1.340 #>  #>  plot(mod, degrees = c(45,45))   DRF(mod) #>            groups n_focal_items  sDRF  uDRF  dDRF #> 1 Group_1,Group_2            50 1.803 1.803 1.831 DRF(mod, draws = 500) #>               groups n_focal_items  stat CI_2.5 CI_97.5     X2 df p #> sDRF Group_1,Group_2            50 1.803  1.232   2.303 44.609  1 0 #> uDRF Group_1,Group_2            50 1.803  1.232   2.303 47.432  2 0 #> dDRF Group_1,Group_2            50 1.831  1.278   2.354              # }"},{"path":"https://philchalmers.github.io/mirt/reference/DTF.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential test functioning statistics — DTF","title":"Differential test functioning statistics — DTF","text":"Function performs various omnibus differential test functioning procedures object estimated multipleGroup(). latent means/covariances suspected differ input object contain set 'anchor' items ensure differential test features detected rather group differences. Returns signed (average area ) unsigned (total area) statistics, descriptives percent average bias group total scores statistic. grid Theta values passed, can evaluated well determine specific DTF location effects.  best results, baseline model contain set 'anchor' items freely estimated hyper-parameters focal groups. See DIF details.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/DTF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential test functioning statistics — DTF","text":"","code":"DTF(   mod,   draws = NULL,   CI = 0.95,   npts = 1000,   theta_lim = c(-6, 6),   Theta_nodes = NULL,   plot = \"none\",   auto.key = list(space = \"right\", points = FALSE, lines = TRUE),   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/DTF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential test functioning statistics — DTF","text":"mod multipleGroup object estimated 2 groups draws number indicating many draws take form suitable multiple imputation estimate expected test scores (usually 100 ). Returns list containing imputation distribution null hypothesis test sDTF statistic CI range confidence interval using draws input npts number points use integration. Default 1000 theta_lim lower upper limits latent trait (theta) evaluated, used conjunction npts Theta_nodes optional matrix Theta values evaluated draws sDTF statistic. However, values averaged across, instead give bootstrap confidence intervals respective Theta nodes. Useful following large uDTF/sDTF statistic determine difference test curves large (still accounting sampling variability). Returns matrix observed variability plot character vector indicating plot draw. Possible values 'none', 'func' test score functions, 'sDTF' evaluated sDTF values across integration grid. plot drawn imputed confidence envelopes auto.key logical; automatically generate key lattice plot? ... additional arguments passed lattice boot","code":""},{"path":"https://philchalmers.github.io/mirt/reference/DTF.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Differential test functioning statistics — DTF","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06 Chalmers, R. P., Counsell, ., Flora, D. B. (2016). might   make big DIF: Improved Differential Test Functioning statistics account   sampling variability. Educational Psychological Measurement, 76, 114-140.   doi:10.1177/0013164415584576","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/DTF.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Differential test functioning statistics — DTF","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/DTF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential test functioning statistics — DTF","text":"","code":"# \\donttest{ set.seed(1234) n <- 30 N <- 500  # only first 5 items as anchors model <- 'F = 1-30           CONSTRAINB = (1-5, a1), (1-5, d)'  a <- matrix(1, n) d <- matrix(rnorm(n), n) group <- c(rep('Group_1', N), rep('Group_2', N))  ## ------------- # groups completely equal dat1 <- simdata(a, d, N, itemtype = '2PL') dat2 <- simdata(a, d, N, itemtype = '2PL') dat <- rbind(dat1, dat2) mod <- multipleGroup(dat, model, group=group, SE=TRUE,                      invariance=c('free_means', 'free_var')) #>  #>  #> Calculating information matrix... plot(mod)   DTF(mod) #>    sDTF.score sDTF(%).score    uDTF.score uDTF(%).score  #>     0.1742369     0.5807896     0.1768800     0.5896002  if(interactive()) mirtCluster() DTF(mod, draws = 1000) #95% C.I. for sDTF containing 0. uDTF is very small #> $observed #>    sDTF.score sDTF(%).score    uDTF.score uDTF(%).score  #>     0.1742369     0.5807896     0.1768800     0.5896002  #>  #> $CIs #>         sDTF.score sDTF(%).score uDTF.score uDTF(%).score #> CI_97.5  0.4728808     1.5762695 0.76426586     2.5475529 #> CI_2.5  -0.1233808    -0.4112693 0.08050925     0.2683642 #>  #> $tests #> P(sDTF.score = 0)  #>         0.2723393  #>  DTF(mod, draws = 1000, plot='sDTF') #sDTF 95% C.I.'s across Theta always include 0   ## ------------- ## random slopes and intercepts for 15 items, and latent mean difference ##    (no systematic DTF should exist, but DIF will be present) set.seed(1234) dat1 <- simdata(a, d, N, itemtype = '2PL', mu=.50, sigma=matrix(1.5)) dat2 <- simdata(a + c(numeric(15), runif(n-15, -.2, .2)),                 d + c(numeric(15), runif(n-15, -.5, .5)), N, itemtype = '2PL') dat <- rbind(dat1, dat2) mod1 <- multipleGroup(dat, 1, group=group) #>  plot(mod1) #does not account for group differences! Need anchors   mod2 <- multipleGroup(dat, model, group=group, SE=TRUE,                       invariance=c('free_means', 'free_var')) #>  #>  #> Calculating information matrix... plot(mod2)   # significant DIF in multiple items.... # DIF(mod2, which.par=c('a1', 'd'), items2test=16:30) DTF(mod2) #>    sDTF.score sDTF(%).score    uDTF.score uDTF(%).score  #>     0.1937470     0.6458234     0.1944098     0.6480326  DTF(mod2, draws=1000) #non-sig DTF due to item cancellation #> $observed #>    sDTF.score sDTF(%).score    uDTF.score uDTF(%).score  #>     0.1937470     0.6458234     0.1944098     0.6480326  #>  #> $CIs #>         sDTF.score sDTF(%).score uDTF.score uDTF(%).score #> CI_97.5  0.4949249     1.6497498 0.66772934     2.2257645 #> CI_2.5  -0.0600406    -0.2001353 0.08150818     0.2716939 #>  #> $tests #> P(sDTF.score = 0)  #>         0.1694501  #>   ## ------------- ## systematic differing slopes and intercepts (clear DTF) dat1 <- simdata(a, d, N, itemtype = '2PL', mu=.50, sigma=matrix(1.5)) dat2 <- simdata(a + c(numeric(15), rnorm(n-15, 1, .25)), d + c(numeric(15), rnorm(n-15, 1, .5)),                 N, itemtype = '2PL') dat <- rbind(dat1, dat2) mod3 <- multipleGroup(dat, model, group=group, SE=TRUE,                       invariance=c('free_means', 'free_var')) #>  #>  #> Calculating information matrix... plot(mod3) #visable DTF happening   # DIF(mod3, c('a1', 'd'), items2test=16:30) DTF(mod3) #unsigned bias. Signed bias indicates group 2 scores generally higher on average #>    sDTF.score sDTF(%).score    uDTF.score uDTF(%).score  #>    -0.8317365    -2.7724550     1.0764408     3.5881361  DTF(mod3, draws=1000) #> $observed #>    sDTF.score sDTF(%).score    uDTF.score uDTF(%).score  #>    -0.8317365    -2.7724550     1.0764408     3.5881361  #>  #> $CIs #>         sDTF.score sDTF(%).score uDTF.score uDTF(%).score #> CI_97.5 -0.5503085     -1.834362  1.3842919      4.614306 #> CI_2.5  -1.1248651     -3.749550  0.7954752      2.651584 #>  #> $tests #> P(sDTF.score = 0)  #>      2.738111e-08  #>  DTF(mod3, draws=1000, plot='func')  DTF(mod3, draws=1000, plot='sDTF') #multiple DTF areas along Theta   # evaluate specific values for sDTF Theta_nodes <- matrix(seq(-6,6,length.out = 100)) sDTF <- DTF(mod3, Theta_nodes=Theta_nodes) head(sDTF) #>             Theta       sDTF #> score.1 -6.000000 0.03153791 #> score.2 -5.878788 0.03604196 #> score.3 -5.757576 0.04118184 #> score.4 -5.636364 0.04704370 #> score.5 -5.515152 0.05372403 #> score.6 -5.393939 0.06133041 sDTF <- DTF(mod3, Theta_nodes=Theta_nodes, draws=100) head(sDTF) #>             Theta       sDTF   CI_97.5      CI_2.5 #> score.1 -6.000000 0.03153791 0.1630118 -0.01734655 #> score.2 -5.878788 0.03604196 0.1785965 -0.01768471 #> score.3 -5.757576 0.04118184 0.1955885 -0.01792454 #> score.4 -5.636364 0.04704370 0.2140994 -0.01804610 #> score.5 -5.515152 0.05372403 0.2342469 -0.01802792 #> score.6 -5.393939 0.06133041 0.2561549 -0.01784738  # }"},{"path":"https://philchalmers.github.io/mirt/reference/DeltaMethod.html","id":null,"dir":"Reference","previous_headings":"","what":"Numerical derivative version of delta method — DeltaMethod","title":"Numerical derivative version of delta method — DeltaMethod","text":"Delta method using numerical derivatives (via numerical_deriv) provided function. Convenient target transformation function easier automate programmatically instead using explicit formula math expressions. Can also useful checking analytic results.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/DeltaMethod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Numerical derivative version of delta method — DeltaMethod","text":"","code":"DeltaMethod(fn, par, acov, ...)"},{"path":"https://philchalmers.github.io/mirt/reference/DeltaMethod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Numerical derivative version of delta method — DeltaMethod","text":"fn function specifying type transformation make new parameter interest. Must form fn(par, ...), simply fn(par), return numeric vector one element par numerical vector passed fn(par) (typically vector MLEs) acov numeric matrix ACOV MLEs ... additional arguments passed fn","code":""},{"path":"https://philchalmers.github.io/mirt/reference/DeltaMethod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Numerical derivative version of delta method — DeltaMethod","text":"returns list transformed parameters, ACOV,   SEs","code":""},{"path":"https://philchalmers.github.io/mirt/reference/DeltaMethod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Numerical derivative version of delta method — DeltaMethod","text":"","code":"# Slightly modified example from ?msm::deltamethod # Multiple linear regression, E(y) = alpha + beta1 x + beta2 g x <- 1:100 g <- rep(0:1, each=50) y <- rnorm(100, 4*x, 5) toy.lm <- lm(y ~ x + g) estmean <- coef(toy.lm) estvar <- vcov(toy.lm)  # Estimate of (1 / (b0 + b1)) and (1 / (b0 + b1 + b2)) 1 / (estmean[1] + estmean[2]) #> (Intercept)  #>   0.2355943  1 / (estmean[1] + estmean[2] + estmean[3]) #> (Intercept)  #>    0.158912   if (FALSE) { # \\dontrun{ ## Approximate standard error msm::deltamethod (~ 1 / (x1 + x2), estmean, estvar) msm::deltamethod (~ 1 / (x1 + x2 + x3), estmean, estvar) } # }  # with DeltaMethod fn <- function(par) 1 / sum(par[1:2]) fn2 <- function(par) 1 / sum(par[1:3]) DeltaMethod(fn, estmean, estvar)$se #> [1] 0.0615558 DeltaMethod(fn2, estmean, estvar)$se #> [1] 0.06784448  # index argument for easier flexibility fn <- function(par, index) 1 / sum(par[index]) DeltaMethod(fn, estmean, estvar, index=1:2)$se #> [1] 0.0615558 DeltaMethod(fn, estmean, estvar, index=1:3)$se #> [1] 0.06784448"},{"path":"https://philchalmers.github.io/mirt/reference/DiscreteClass-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Defines object returned mdirt.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/DiscreteClass-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"Call: function call Data: list data, sometimes different forms Options: list estimation options Fit: list fit information Model: list model-based information ParObjects: list S4 objects used estimation OptimInfo: list arguments optimization process Internals: list internal arguments secondary computations (inspecting       object generally required) vcov: matrix represented asymptotic covariance matrix parameter estimates time: data.frame indicating breakdown computation times seconds","code":""},{"path":"https://philchalmers.github.io/mirt/reference/DiscreteClass-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"print signature(x = \"DiscreteClass\") show signature(object = \"DiscreteClass\") anova signature(object = \"DiscreteClass\") coef signature(x = \"DiscreteClass\") summary signature(object = \"DiscreteClass\") residuals signature(object = \"DiscreteClass\")","code":""},{"path":"https://philchalmers.github.io/mirt/reference/DiscreteClass-class.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Class ","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/DiscreteClass-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class ","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/LSAT6.html","id":null,"dir":"Reference","previous_headings":"","what":"Description of LSAT6 data — LSAT6","title":"Description of LSAT6 data — LSAT6","text":"Data Thissen (1982); contains 5 dichotomously scored items obtained Law School Admissions Test, section 6.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/LSAT6.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Description of LSAT6 data — LSAT6","text":"Thissen, D. (1982). Marginal maximum likelihood estimation one-parameter logistic model. Psychometrika, 47, 175-186.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/LSAT6.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Description of LSAT6 data — LSAT6","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/LSAT6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Description of LSAT6 data — LSAT6","text":"","code":"# \\donttest{ dat <- expand.table(LSAT6) head(dat) #>   Item_1 Item_2 Item_3 Item_4 Item_5 #> 1      0      0      0      0      0 #> 2      0      0      0      0      0 #> 3      0      0      0      0      0 #> 4      0      0      0      0      1 #> 5      0      0      0      0      1 #> 6      0      0      0      0      1 itemstats(dat) #> $overall #>     N mean_total.score sd_total.score ave.r sd.r alpha SEM.alpha #>  1000            3.819          1.035 0.077 0.03 0.295     0.869 #>  #> $itemstats #>           N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item_1 1000 2 0.924 0.265   0.362         0.113       0.275 #> Item_2 1000 2 0.709 0.454   0.567         0.153       0.238 #> Item_3 1000 2 0.553 0.497   0.618         0.173       0.217 #> Item_4 1000 2 0.763 0.425   0.534         0.144       0.246 #> Item_5 1000 2 0.870 0.336   0.435         0.122       0.266 #>  #> $proportions #>            0     1 #> Item_1 0.076 0.924 #> Item_2 0.291 0.709 #> Item_3 0.447 0.553 #> Item_4 0.237 0.763 #> Item_5 0.130 0.870 #>   model <- 'F = 1-5          CONSTRAIN = (1-5, a1)' (mod <- mirt(dat, model)) #>  #>  #> Call: #> mirt(data = dat, model = model) #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 1e-04 tolerance after 12 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Log-likelihood = -2466.938 #> Estimated parameters: 6  #> AIC = 4945.875 #> BIC = 4975.322; SABIC = 4956.265 #> G2 (25) = 21.8, p = 0.6474 #> RMSEA = 0, CFI = NaN, TLI = NaN M2(mod) #>             M2 df         p RMSEA RMSEA_5   RMSEA_95      SRMSR      TLI CFI #> stats 5.292566  9 0.8080952     0       0 0.02254275 0.02242068 1.072511   1 itemfit(mod) #>     item  S_X2 df.S_X2 RMSEA.S_X2 p.S_X2 #> 1 Item_1 0.436       2          0  0.804 #> 2 Item_2 1.576       2          0  0.455 #> 3 Item_3 0.871       1          0  0.351 #> 4 Item_4 0.190       2          0  0.909 #> 5 Item_5 0.190       2          0  0.909 coef(mod, simplify=TRUE) #> $items #>           a1     d g u #> Item_1 0.755 2.730 0 1 #> Item_2 0.755 0.999 0 1 #> Item_3 0.755 0.240 0 1 #> Item_4 0.755 1.307 0 1 #> Item_5 0.755 2.100 0 1 #>  #> $means #> F  #> 0  #>  #> $cov #>   F #> F 1 #>   # equivalentely, but with a different parameterization mod2 <- mirt(dat, 1, itemtype = 'Rasch') #>  anova(mod, mod2) #equal #>           AIC    SABIC       HQ      BIC    logLik X2 df   p #> mod  4945.875 4956.265 4957.067 4975.322 -2466.938           #> mod2 4945.875 4956.266 4957.067 4975.322 -2466.938  0  0 NaN M2(mod2) #>             M2 df         p RMSEA RMSEA_5   RMSEA_95      SRMSR      TLI CFI #> stats 5.292803  9 0.8080735     0       0 0.02254395 0.02242588 1.072506   1 itemfit(mod2) #>     item  S_X2 df.S_X2 RMSEA.S_X2 p.S_X2 #> 1 Item_1 0.436       2          0  0.804 #> 2 Item_2 1.576       2          0  0.455 #> 3 Item_3 0.872       1          0  0.351 #> 4 Item_4 0.190       2          0  0.909 #> 5 Item_5 0.190       2          0  0.909 coef(mod2, simplify=TRUE) #> $items #>        a1     d g u #> Item_1  1 2.731 0 1 #> Item_2  1 0.999 0 1 #> Item_3  1 0.240 0 1 #> Item_4  1 1.307 0 1 #> Item_5  1 2.100 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>       F1 #> F1 0.572 #>  sqrt(coef(mod2)$GroupPars[2]) #latent SD equal to the slope in mod #> [1] 0.7561877  # }"},{"path":"https://philchalmers.github.io/mirt/reference/LSAT7.html","id":null,"dir":"Reference","previous_headings":"","what":"Description of LSAT7 data — LSAT7","title":"Description of LSAT7 data — LSAT7","text":"Data Bock & Lieberman (1970); contains 5 dichotomously scored items obtained Law School Admissions Test, section 7. Data ","code":""},{"path":"https://philchalmers.github.io/mirt/reference/LSAT7.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Description of LSAT7 data — LSAT7","text":"Bock, R. D., & Lieberman, M. (1970). Fitting response model n dichotomously scored items. Psychometrika, 35(2), 179-197. Bock, R. D., & Lieberman, M. (1970). Fitting response model n dichotomously scored items. Psychometrika, 35(2), 179-197.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/LSAT7.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Description of LSAT7 data — LSAT7","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/LSAT7.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Description of LSAT7 data — LSAT7","text":"","code":"# \\donttest{ dat <- expand.table(LSAT7) head(dat) #>   Item.1 Item.2 Item.3 Item.4 Item.5 #> 1      0      0      0      0      0 #> 2      0      0      0      0      0 #> 3      0      0      0      0      0 #> 4      0      0      0      0      0 #> 5      0      0      0      0      0 #> 6      0      0      0      0      0 itemstats(dat) #> $overall #>     N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  1000            3.707          1.199 0.143 0.052 0.453     0.886 #>  #> $itemstats #>           N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item.1 1000 2 0.828 0.378   0.530         0.246       0.396 #> Item.2 1000 2 0.658 0.475   0.600         0.247       0.394 #> Item.3 1000 2 0.772 0.420   0.611         0.313       0.345 #> Item.4 1000 2 0.606 0.489   0.592         0.223       0.415 #> Item.5 1000 2 0.843 0.364   0.461         0.175       0.438 #>  #> $proportions #>            0     1 #> Item.1 0.172 0.828 #> Item.2 0.342 0.658 #> Item.3 0.228 0.772 #> Item.4 0.394 0.606 #> Item.5 0.157 0.843 #>   (mod <- mirt(dat, 1)) #>  #>  #> Call: #> mirt(data = dat, model = 1) #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 1e-04 tolerance after 28 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Log-likelihood = -2658.805 #> Estimated parameters: 10  #> AIC = 5337.61 #> BIC = 5386.688; SABIC = 5354.927 #> G2 (21) = 31.7, p = 0.0628 #> RMSEA = 0.023, CFI = NaN, TLI = NaN coef(mod) #> $Item.1 #>        a1     d g u #> par 0.988 1.856 0 1 #>  #> $Item.2 #>        a1     d g u #> par 1.081 0.808 0 1 #>  #> $Item.3 #>        a1     d g u #> par 1.706 1.804 0 1 #>  #> $Item.4 #>        a1     d g u #> par 0.765 0.486 0 1 #>  #> $Item.5 #>        a1     d g u #> par 0.736 1.855 0 1 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0      1 #>  # }  # \\donttest{ dat <- expand.table(LSAT7) head(dat) #>   Item.1 Item.2 Item.3 Item.4 Item.5 #> 1      0      0      0      0      0 #> 2      0      0      0      0      0 #> 3      0      0      0      0      0 #> 4      0      0      0      0      0 #> 5      0      0      0      0      0 #> 6      0      0      0      0      0 itemstats(dat) #> $overall #>     N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  1000            3.707          1.199 0.143 0.052 0.453     0.886 #>  #> $itemstats #>           N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item.1 1000 2 0.828 0.378   0.530         0.246       0.396 #> Item.2 1000 2 0.658 0.475   0.600         0.247       0.394 #> Item.3 1000 2 0.772 0.420   0.611         0.313       0.345 #> Item.4 1000 2 0.606 0.489   0.592         0.223       0.415 #> Item.5 1000 2 0.843 0.364   0.461         0.175       0.438 #>  #> $proportions #>            0     1 #> Item.1 0.172 0.828 #> Item.2 0.342 0.658 #> Item.3 0.228 0.772 #> Item.4 0.394 0.606 #> Item.5 0.157 0.843 #>   (mod <- mirt(dat, 1)) #>  #>  #> Call: #> mirt(data = dat, model = 1) #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 1e-04 tolerance after 28 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Log-likelihood = -2658.805 #> Estimated parameters: 10  #> AIC = 5337.61 #> BIC = 5386.688; SABIC = 5354.927 #> G2 (21) = 31.7, p = 0.0628 #> RMSEA = 0.023, CFI = NaN, TLI = NaN coef(mod) #> $Item.1 #>        a1     d g u #> par 0.988 1.856 0 1 #>  #> $Item.2 #>        a1     d g u #> par 1.081 0.808 0 1 #>  #> $Item.3 #>        a1     d g u #> par 1.706 1.804 0 1 #>  #> $Item.4 #>        a1     d g u #> par 0.765 0.486 0 1 #>  #> $Item.5 #>        a1     d g u #> par 0.736 1.855 0 1 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0      1 #>  # }"},{"path":"https://philchalmers.github.io/mirt/reference/M2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the M2 model fit statistic — M2","title":"Compute the M2 model fit statistic — M2","text":"Computes M2 (Maydeu-Olivares & Joe, 2006) statistic data dichotomous, collapsed M2* statistic (collapsing univariate bivariate response categories; see Cai Hansen, 2013), hybrid C2 statistic collapses bivariate moments (Cai Monro, 2014). C2 variant mainly useful polytomous response models sufficient degrees freedom compute M2*. function also computes associated fit indices based fitting null model. Supports single multiple-group models. latent trait density approximated (e.g., Davidian curves, Empirical histograms, etc) passing use_dentype_estimate = TRUE use internally saved quadrature density components (applicable).","code":""},{"path":"https://philchalmers.github.io/mirt/reference/M2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the M2 model fit statistic — M2","text":"","code":"M2(   obj,   type = \"M2*\",   calcNull = TRUE,   quadpts = NULL,   theta_lim = c(-6, 6),   CI = 0.9,   residmat = FALSE,   QMC = FALSE,   suppress = 1,   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/M2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the M2 model fit statistic — M2","text":"obj estimated model object mirt package type type fit statistic compute. Options \"M2\", \"M2*\" univariate bivariate collapsed version M2 statistic (\"M2\" currently limited dichotomous response data ), \"C2\" hybrid M2 M2* bivariate moments collapsed calcNull logical; calculate statistics null model well? Allows statistics limited information TLI CFI. valid items suitable null model (e.g., created via createItem ) quadpts number quadrature points use estimation. NULL, suitable value chosen based rubric found fscores theta_lim lower upper range evaluate latent trait integral dimension CI numeric value 0 1 indicating range confidence interval RMSEA. Default returns 90% interval residmat logical; return residual matrix used compute SRMSR statistic? lower triangle residual correlation matrix returned (upper triangle filled NA's) QMC logical; use quasi-Monte Carlo integration? Useful higher dimensional models. quadpts specified, 5000 nodes used default suppress numeric value indicating parameter residual dependency combinations flag high. Absolute values standardized residuals greater value returned, values less value set NA. Must used conjunction argument residmat = TRUE ... additional arguments pass","code":""},{"path":"https://philchalmers.github.io/mirt/reference/M2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the M2 model fit statistic — M2","text":"Returns data.frame object M2-type statistic, along degrees freedom,   p-value, RMSEA (90% confidence interval), SRMSR group,   optionally TLI CFI model fit statistics calcNull = TRUE.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/M2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute the M2 model fit statistic — M2","text":"Cai, L. & Hansen, M. (2013). Limited-information goodness--fit testing hierarchical item factor models. British Journal Mathematical Statistical Psychology, 66, 245-276. Cai, L. & Monro, S. (2014). new statistic evaluating item response theory models ordinal data. National Center Research Evaluation, Standards, & Student Testing. Technical Report. Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06 Maydeu-Olivares, . & Joe, H. (2006). Limited information goodness--fit testing multidimensional contingency tables. Psychometrika, 71, 713-732.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/M2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute the M2 model fit statistic — M2","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/M2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the M2 model fit statistic — M2","text":"","code":"# \\donttest{ dat <- as.matrix(expand.table(LSAT7)) (mod1 <- mirt(dat, 1)) #>  #>  #> Call: #> mirt(data = dat, model = 1) #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 1e-04 tolerance after 28 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Log-likelihood = -2658.805 #> Estimated parameters: 10  #> AIC = 5337.61 #> BIC = 5386.688; SABIC = 5354.927 #> G2 (21) = 31.7, p = 0.0628 #> RMSEA = 0.023, CFI = NaN, TLI = NaN M2(mod1) #>             M2 df          p     RMSEA     RMSEA_5   RMSEA_95      SRMSR #> stats 11.93769  5 0.03565165 0.0372683 0.008950922 0.06496573 0.03195919 #>             TLI       CFI #> stats 0.9369332 0.9684666 resids <- M2(mod1, residmat=TRUE) #lower triangle of residual correlation matrix resids #>             Item.1      Item.2       Item.3       Item.4 Item.5 #> Item.1          NA          NA           NA           NA     NA #> Item.2 -0.02212010          NA           NA           NA     NA #> Item.3 -0.03265942  0.03335601           NA           NA     NA #> Item.4  0.05155184 -0.01642572 -0.012476892           NA     NA #> Item.5  0.05443241 -0.03867705 -0.001860395 7.235425e-05     NA summary(resids[lower.tri(resids)]) #>      Min.   1st Qu.    Median      Mean   3rd Qu.      Max.  #> -0.038677 -0.020697 -0.007169  0.001519  0.025035  0.054432   # M2 with missing data present dat[sample(1:prod(dim(dat)), 250)] <- NA mod2 <- mirt(dat, 1) #>  M2(mod2) #>             M2 df         p      RMSEA RMSEA_5   RMSEA_95      SRMSR       TLI #> stats 8.239687  5 0.1435113 0.02546735       0 0.05530946 0.03324067 0.9630427 #>             CFI #> stats 0.9815213  # C2 statistic (useful when polytomous IRT models have too few df) pmod <- mirt(Science, 1) #>  # This fails with too few df: # M2(pmod) # This, however, works: M2(pmod, type = 'C2') #>             M2 df           p     RMSEA    RMSEA_5  RMSEA_95      SRMSR #> stats 19.17929  2 6.84337e-05 0.1482174 0.09234204 0.2116368 0.07257313 #>             TLI       CFI #> stats 0.7300952 0.9100317  # }"},{"path":"https://philchalmers.github.io/mirt/reference/MDIFF.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute multidimensional difficulty index — MDIFF","title":"Compute multidimensional difficulty index — MDIFF","text":"Returns matrix containing MDIFF values (Reckase, 2009). supported items class 'dich' 'graded'.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/MDIFF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute multidimensional difficulty index — MDIFF","text":"","code":"MDIFF(x, which.items = NULL, group = NULL)"},{"path":"https://philchalmers.github.io/mirt/reference/MDIFF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute multidimensional difficulty index — MDIFF","text":"x object class 'SingleGroupClass', object class 'MultipleGroupClass' suitable group input supplied .items vector indicating items select. NULL used (default) MDISC computed items group group argument pass extract.group function. Required input object multiple-group model","code":""},{"path":"https://philchalmers.github.io/mirt/reference/MDIFF.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute multidimensional difficulty index — MDIFF","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06 Reckase, M. D. (2009). Multidimensional Item Response Theory. Springer.","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/MDIFF.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute multidimensional difficulty index — MDIFF","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/MDIFF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute multidimensional difficulty index — MDIFF","text":"","code":"# \\donttest{  mod <- mirt(Science, 2) #>  MDIFF(mod) #>           MDIFF_1    MDIFF_2   MDIFF_3 #> Comfort -3.892829 -2.1408175 1.1974522 #> Work    -1.806316 -0.5623950 1.4163829 #> Future  -2.486824 -1.0433836 0.9256248 #> Benefit -2.316311 -0.6940864 1.1869606  mod <- mirt(expand.table(LSAT7), 2) #>  MDIFF(mod) #>           MDIFF_1 #> Item.1 -1.2103317 #> Item.2 -0.7903550 #> Item.3 -0.8774211 #> Item.4 -0.6408189 #> Item.5 -2.4615861  # }"},{"path":"https://philchalmers.github.io/mirt/reference/MDISC.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute multidimensional discrimination index — MDISC","title":"Compute multidimensional discrimination index — MDISC","text":"Returns vector containing MDISC values item model input object (Reckase, 2009).","code":""},{"path":"https://philchalmers.github.io/mirt/reference/MDISC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute multidimensional discrimination index — MDISC","text":"","code":"MDISC(x, group = NULL)"},{"path":"https://philchalmers.github.io/mirt/reference/MDISC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute multidimensional discrimination index — MDISC","text":"x object class 'SingleGroupClass', object class 'MultipleGroupClass' suitable group input supplied group group argument pass extract.group function. Required input object multiple-group model","code":""},{"path":"https://philchalmers.github.io/mirt/reference/MDISC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute multidimensional discrimination index — MDISC","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06 Reckase, M. D. (2009). Multidimensional Item Response Theory. Springer.","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/MDISC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute multidimensional discrimination index — MDISC","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/MDISC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute multidimensional discrimination index — MDISC","text":"","code":"# \\donttest{  mod <- mirt(Science, 2) #>  MDISC(mod) #>  Comfort     Work   Future  Benefit  #> 1.338530 2.050473 1.875270 1.722043   # }"},{"path":"https://philchalmers.github.io/mirt/reference/MixedClass-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Defines object returned mixedmirt.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/MixedClass-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"Call: function call Data: list data, sometimes different forms Options: list estimation options Fit: list fit information Model: list model-based information ParObjects: list S4 objects used estimation OptimInfo: list arguments optimization process Internals: list internal arguments secondary computations (inspecting       object generally required) vcov: matrix represented asymptotic covariance matrix parameter estimates time: data.frame indicating breakdown computation times seconds","code":""},{"path":"https://philchalmers.github.io/mirt/reference/MixedClass-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"coef signature(object = \"MixedClass\") print signature(x = \"MixedClass\") residuals signature(object = \"MixedClass\") show signature(object = \"MixedClass\") summary signature(object = \"MixedClass\") logLik signature(object = \"MixedClass\") anova signature(object = \"MixedClass\")","code":""},{"path":"https://philchalmers.github.io/mirt/reference/MixedClass-class.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Class ","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/MixedClass-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class ","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/MixtureClass-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Defines object returned multipleGroup estimated mixture distributions.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/MixtureClass-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"Call: function call Data: list data, sometimes different forms Options: list estimation options Fit: list fit information Model: list model-based information ParObjects: list S4 objects used estimation OptimInfo: list arguments optimization process Internals: list internal arguments secondary computations (inspecting       object generally required) vcov: matrix represented asymptotic covariance matrix parameter estimates time: data.frame indicating breakdown computation times seconds","code":""},{"path":"https://philchalmers.github.io/mirt/reference/MixtureClass-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"coef signature(object = \"MixtureClass\") print signature(x = \"MixtureClass\") show signature(object = \"MixtureClass\") anova signature(object = \"MixtureClass\")","code":""},{"path":"https://philchalmers.github.io/mirt/reference/MixtureClass-class.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Class ","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/MixtureClass-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class ","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/MultipleGroupClass-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Defines object returned multipleGroup.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/MultipleGroupClass-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"Call: function call Data: list data, sometimes different forms Options: list estimation options Fit: list fit information Model: list model-based information ParObjects: list S4 objects used estimation OptimInfo: list arguments optimization process Internals: list internal arguments secondary computations (inspecting       object generally required) vcov: matrix represented asymptotic covariance matrix parameter estimates time: data.frame indicating breakdown computation times seconds","code":""},{"path":"https://philchalmers.github.io/mirt/reference/MultipleGroupClass-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"coef signature(object = \"MultipleGroupClass\") print signature(x = \"MultipleGroupClass\") show signature(object = \"MultipleGroupClass\") anova signature(object = \"MultipleGroupClass\")","code":""},{"path":"https://philchalmers.github.io/mirt/reference/MultipleGroupClass-class.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Class ","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/MultipleGroupClass-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class ","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/PLCI.mirt.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute profiled-likelihood (or posterior) confidence intervals — PLCI.mirt","title":"Compute profiled-likelihood (or posterior) confidence intervals — PLCI.mirt","text":"Computes profiled-likelihood based confidence intervals. Supports inclusion equality constraints. Object returns confidence intervals whether respective interval found.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/PLCI.mirt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute profiled-likelihood (or posterior) confidence intervals — PLCI.mirt","text":"","code":"PLCI.mirt(   mod,   parnum = NULL,   alpha = 0.05,   search_bound = TRUE,   step = 0.5,   lower = TRUE,   upper = TRUE,   inf2val = 30,   NealeMiller = FALSE,   verbose = TRUE,   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/PLCI.mirt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute profiled-likelihood (or posterior) confidence intervals — PLCI.mirt","text":"mod converged mirt model parnum numeric vector indicating parameters estimate. Use mod2values determine parameter numbers. NULL, possible parameters used alpha two-tailed alpha critical level search_bound logical; use fixed grid values around ML estimate determine suitable optimization bounds? Using much better behaviour setting fixed upper/lower bound values searching extreme ends step magnitude steps used search_bound TRUE. Smaller values create points search suitable bound (lower bound value visible mod2values). upper/lower bounds detected value adjusted accordingly lower logical; search lower CI? upper logical; search upper CI? inf2val numeric used change parameter bounds infinity finite number. Decreasing much may allow suitable bound located. Default 30 NealeMiller logical; use Neale Miller 1997 approximation? Default FALSE verbose logical; include additional information console? ... additional arguments pass estimation functions","code":""},{"path":"https://philchalmers.github.io/mirt/reference/PLCI.mirt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute profiled-likelihood (or posterior) confidence intervals — PLCI.mirt","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06 Chalmers, R. P., Pek, J., & Liu, Y. (2017). Profile-likelihood Confidence Intervals Item Response Theory Models. Multivariate Behavioral Research, 52, 533-550. doi:10.1080/00273171.2017.1329082 Neale, M. C. & Miller, M. B. (1997). use likelihood-based confidence intervals genetic models. Behavior Genetics, 27, 113-120.","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/PLCI.mirt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute profiled-likelihood (or posterior) confidence intervals — PLCI.mirt","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/PLCI.mirt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute profiled-likelihood (or posterior) confidence intervals — PLCI.mirt","text":"","code":"# \\donttest{ if(interactive()) mirtCluster() #use all available cores to estimate CI's in parallel dat <- expand.table(LSAT7) mod <- mirt(dat, 1) #>   result <- PLCI.mirt(mod) result #>      Item class parnam parnum     value lower_2.5 upper_97.5 lower_conv #> 1  Item.1  dich     a1      1 0.9879254 0.6705382  1.3819761       TRUE #> 2  Item.1  dich      d      2 1.8560605 1.6203325  2.1474211       TRUE #> 3  Item.2  dich     a1      5 1.0808847 0.7816287  1.4614714       TRUE #> 4  Item.2  dich      d      6 0.8079786 0.6373152  0.9994390       TRUE #> 5  Item.3  dich     a1      9 1.7058006 1.1965700  2.6063138       TRUE #> 6  Item.3  dich      d     10 1.8042187 1.4754050  2.3765517       TRUE #> 7  Item.4  dich     a1     13 0.7651853 0.5211915  1.0554405       TRUE #> 8  Item.4  dich      d     14 0.4859966 0.3417041  0.6365806       TRUE #> 9  Item.5  dich     a1     17 0.7357980 0.4551545  1.0555079       TRUE #> 10 Item.5  dich      d     18 1.8545127 1.6438380  2.0976038       TRUE #>    upper_conv #> 1        TRUE #> 2        TRUE #> 3        TRUE #> 4        TRUE #> 5        TRUE #> 6        TRUE #> 7        TRUE #> 8        TRUE #> 9        TRUE #> 10       TRUE   mod2 <- mirt(Science, 1) #>  result2 <- PLCI.mirt(mod2) result2 #>       Item  class parnam parnum      value  lower_2.5 upper_97.5 lower_conv #> 1  Comfort graded     a1      1  1.0417547  0.7008509   1.453043       TRUE #> 2  Comfort graded     d1      2  4.8641542  4.0112194   5.966782       TRUE #> 3  Comfort graded     d2      3  2.6399417  2.2332766   3.115799       TRUE #> 4  Comfort graded     d3      4 -1.4660135 -1.7996417  -1.171326       TRUE #> 5     Work graded     a1      5  1.2259618  0.8942261   1.620993       TRUE #> 6     Work graded     d1      6  2.9240027  2.4851419   3.430756       TRUE #> 7     Work graded     d2      7  0.9011651  0.6307977   1.195238       TRUE #> 8     Work graded     d3      8 -2.2665647 -2.6975967  -1.893557       TRUE #> 9   Future graded     a1      9  2.2933717  1.5687257   3.986967       TRUE #> 10  Future graded     d1     10  5.2339928  4.1279881   7.822343       TRUE #> 11  Future graded     d2     11  2.2137728  1.6589420   3.416513       TRUE #> 12  Future graded     d3     12 -1.9637062 -3.0256934  -1.453916       TRUE #> 13 Benefit graded     a1     13  1.0949151  0.7659052   1.501997       TRUE #> 14 Benefit graded     d1     14  3.3479196  2.8453841   3.940600       TRUE #> 15 Benefit graded     d2     15  0.9916289  0.7267311   1.282508       TRUE #> 16 Benefit graded     d3     16 -1.6882599 -2.0443917  -1.375841       TRUE #>    upper_conv #> 1        TRUE #> 2        TRUE #> 3        TRUE #> 4        TRUE #> 5        TRUE #> 6        TRUE #> 7        TRUE #> 8        TRUE #> 9        TRUE #> 10       TRUE #> 11       TRUE #> 12       TRUE #> 13       TRUE #> 14       TRUE #> 15       TRUE #> 16       TRUE  # only estimate CI's slopes sv <- mod2values(mod2) parnum <- sv$parnum[sv$name == 'a1'] result3 <- PLCI.mirt(mod2, parnum) result3 #>      Item  class parnam parnum    value lower_2.5 upper_97.5 lower_conv #> 1 Comfort graded     a1      1 1.041755 0.7008509   1.453043       TRUE #> 2    Work graded     a1      5 1.225962 0.8942261   1.620993       TRUE #> 3  Future graded     a1      9 2.293372 1.5687257   3.986967       TRUE #> 4 Benefit graded     a1     13 1.094915 0.7659052   1.501997       TRUE #>   upper_conv #> 1       TRUE #> 2       TRUE #> 3       TRUE #> 4       TRUE  # }"},{"path":"https://philchalmers.github.io/mirt/reference/RCI.html","id":null,"dir":"Reference","previous_headings":"","what":"Model-based Reliable Change Index — RCI","title":"Model-based Reliable Change Index — RCI","text":"Computes IRT version \"reliable change index\" (RCI) proposed Jacobson Traux (1991) modified use IRT information scores measurement error (see Jabrayilov, Emons, Sijtsma (2016)). Main benefit IRT approach inclusion response pattern information pre/post data score estimates, well conditional standard error measurement information. Models can specified separate unidimensional IRT models fitted via mirt (extracted multipleGroup via extract.group), two-dimensional model latent traits correspond two test administrations.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/RCI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model-based Reliable Change Index — RCI","text":"","code":"RCI(   mod_pre,   predat,   postdat,   mod_post = mod_pre,   cutoffs = NULL,   SEM.pre = NULL,   SEM.post = NULL,   Fisher = FALSE,   zero_cor = TRUE,   shiny = FALSE,   main = \"Test Scores\",   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/RCI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model-based Reliable Change Index — RCI","text":"mod_pre single-group model fitted mirt. supplied information extracted data input objects compute classical test theory version RCI statistics predat vector (one individual) matrix/data.frame   response data scored, individuals' responses   included exactly one row. total score information used instead   complete response matrix   matrix object exactly ncol = 1 columns   provided postdat predat, respect post/follow-  measurement. Ignored two-dimensional IRT model included. original RCI approach, matrix containing complete responses,   matrix one column containing total scores, can provided mod_post (optional) IRT model post-test different pre-test; otherwise, pre-test model used. Ignored two-dimensional model IRT included cutoffs optional vector length 2 indicating type cut-offs report (e.g., c(-1.96, 1.96) reflects 95 percent z-score type cut-) SEM.pre standard error measurement pretest. can used instead rxx.pre SD.pre SEM.post (optional) standard error measurement post-test. Using create pooled version SEM; otherwise, SEM.post = SEM.pre Fisher logical; use Fisher/expected information function compute SE terms? FALSE SE information extracted select fscores method (default). applicable unidimensional models zero_cor logical; supplied mod_pre two-factor model covariance/correlation latent traits forced 0? shiny logical; launch interactive shiny applications real-time scoring supplied total-scores response vectors? requires mod_pre (optional) mod_post inputs main main label use shiny=TRUE ... additional arguments passed fscores","code":""},{"path":"https://philchalmers.github.io/mirt/reference/RCI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Model-based Reliable Change Index — RCI","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06 Jacobson, N. S., & Truax, P. (1991). Clinical significance: statistical approach defining meaningful change psychotherapy research. Journal Consulting Clinical Psychology, 59, 12-19. Jabrayilov, R. , Emons, W. H. M., & Sijtsma, K. (2016). Comparison Classical Test Theory Item Response Theory Individual Change Assessment. Applied Psychological Measurement, 40 (8), 559-572.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/RCI.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Model-based Reliable Change Index — RCI","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/RCI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model-based Reliable Change Index — RCI","text":"","code":"# \\donttest{  # simulate some data N <- 1000 J <- 20     # number of items a <- matrix(rlnorm(J,.2,.3)) d <- rnorm(J)  theta <- matrix(rnorm(N)) dat_pre <- simdata(a, d, itemtype = '2PL', Theta = theta)  # first 3 cases decrease by 1/2 theta2 <- theta - c(1/2, 1/2, 1/2, numeric(N-3)) dat_post <- simdata(a, d, itemtype = '2PL', Theta = theta2)  mod <- mirt(dat_pre) #>   # all changes using fitted model from pre data RCI(mod, predat=dat_pre, postdat=dat_post) #>      pre.score post.score converged   diff    SE      z     p #> 1        1.714      1.970      TRUE  0.256 0.759  0.337 0.736 #> 2        1.406     -0.120      TRUE -1.526 0.582 -2.620 0.009 #> 3        0.960     -0.150      TRUE -1.111 0.536 -2.073 0.038 #> 4        0.302      0.202      TRUE -0.100 0.496 -0.202  0.84 #> 5       -0.973     -0.906      TRUE  0.067 0.548  0.122 0.903 #> 6       -0.797     -0.298      TRUE  0.499 0.508  0.983 0.326 #> 7        0.151     -0.466      TRUE -0.617 0.492 -1.253  0.21 #> 8        0.111      1.052      TRUE  0.940 0.547  1.721 0.085 #> 9       -1.367     -1.355      TRUE  0.013 0.626  0.020 0.984 #> 10      -0.946     -0.416      TRUE  0.530 0.521  1.016  0.31 #> 11      -1.876     -0.774      TRUE  1.101 0.646  1.705 0.088 #> 12       1.258      0.788      TRUE -0.470 0.599 -0.786 0.432 #> 13       0.342      0.038      TRUE -0.303 0.494 -0.615 0.539 #> 14       0.201     -0.033      TRUE -0.234 0.488 -0.480 0.631 #> 15       1.434      1.527      TRUE  0.094 0.683  0.137 0.891 #> 16      -1.862     -1.179      TRUE  0.683 0.671  1.018 0.309 #> 17       0.141     -0.291      TRUE -0.432 0.487 -0.886 0.376 #> 18       0.196      0.222      TRUE  0.026 0.493  0.054 0.957 #> 19       1.084      0.421      TRUE -0.663 0.560 -1.185 0.236 #> 20       0.912      0.037      TRUE -0.875 0.532 -1.644   0.1 #> 21      -0.526     -0.624      TRUE -0.098 0.504 -0.195 0.846 #> 22      -0.371      0.377      TRUE  0.748 0.497  1.503 0.133 #> 23      -1.486     -0.978      TRUE  0.508 0.606  0.838 0.402 #> 24      -0.742     -0.495      TRUE  0.247 0.509  0.484 0.628 #> 25       0.798      0.923      TRUE  0.124 0.568  0.219 0.827 #> 26      -0.207     -0.503      TRUE -0.296 0.491 -0.603 0.547 #> 27       1.265      1.233      TRUE -0.032 0.637 -0.051 0.959 #> 28      -1.011     -0.104      TRUE  0.907 0.523  1.736 0.083 #> 29       0.671      1.011      TRUE  0.340 0.567  0.600 0.549 #> 30      -1.045     -0.551      TRUE  0.494 0.534  0.925 0.355 #> 31      -1.481     -2.133      TRUE -0.651 0.737 -0.883 0.377 #> 32      -0.158     -0.636      TRUE -0.478 0.496 -0.963 0.335 #> 33       2.251      2.251      TRUE  0.000 0.846  0.000     1 #> 34      -0.255     -0.541      TRUE -0.286 0.493 -0.581 0.561 #> 35      -1.237     -1.002      TRUE  0.235 0.580  0.405 0.685 #> 36       0.789      1.120      TRUE  0.331 0.585  0.565 0.572 #> 37      -0.252     -0.135      TRUE  0.118 0.484  0.243 0.808 #> 38       1.078      0.586      TRUE -0.492 0.568 -0.867 0.386 #> 39      -0.022      0.480      TRUE  0.502 0.500  1.004 0.315 #> 40       1.691      1.629      TRUE -0.062 0.720 -0.086 0.931 #> 41       0.252     -0.130      TRUE -0.382 0.489 -0.782 0.434 #> 42       0.162     -0.282      TRUE -0.443 0.488 -0.909 0.363 #> 43      -0.287     -0.374      TRUE -0.087 0.488 -0.179 0.858 #> 44      -0.016      0.057      TRUE  0.074 0.484  0.152 0.879 #> 45      -0.406     -0.159      TRUE  0.247 0.487  0.507 0.612 #> 46      -0.363     -0.140      TRUE  0.223 0.486  0.458 0.647 #> 47      -0.548     -0.161      TRUE  0.387 0.492  0.786 0.432 #> 48      -0.657     -0.344      TRUE  0.313 0.500  0.626 0.531 #> 49      -0.642     -0.206      TRUE  0.436 0.497  0.877 0.381 #> 50      -0.390      0.102      TRUE  0.492 0.489  1.006 0.314 #> 51       0.676      1.310      TRUE  0.634 0.597  1.063 0.288 #> 52      -0.601     -0.481      TRUE  0.120 0.501  0.239 0.811 #> 53       1.972      0.685      TRUE -1.287 0.675 -1.906 0.057 #> 54      -0.606      0.133      TRUE  0.740 0.498  1.486 0.137 #> 55      -0.147     -0.157      TRUE -0.010 0.483 -0.022 0.983 #> 56      -0.400     -0.318      TRUE  0.082 0.489  0.167 0.867 #> 57      -0.246     -0.602      TRUE -0.356 0.496 -0.718 0.473 #> 58      -1.014     -1.271      TRUE -0.257 0.584 -0.440  0.66 #> 59       0.090     -0.219      TRUE -0.310 0.485 -0.638 0.523 #> 60       0.781      0.685      TRUE -0.096 0.548 -0.175 0.861 #> 61       0.477      0.424      TRUE -0.053 0.513 -0.103 0.918 #> 62       1.066      0.712      TRUE -0.354 0.574 -0.616 0.538 #> 63       0.419      0.486      TRUE  0.067 0.513  0.130 0.896 #> 64      -0.863     -0.870      TRUE -0.007 0.538 -0.012  0.99 #> 65      -0.866     -0.907      TRUE -0.041 0.540 -0.076  0.94 #> 66      -0.863     -1.125      TRUE -0.262 0.559 -0.470 0.639 #> 67       1.714      0.792      TRUE -0.922 0.650 -1.419 0.156 #> 68      -0.136     -0.445      TRUE -0.309 0.488 -0.633 0.527 #> 69       0.184     -0.046      TRUE -0.231 0.487 -0.473 0.636 #> 70       1.972      1.470      TRUE -0.502 0.735 -0.682 0.495 #> 71      -0.153     -0.738      TRUE -0.586 0.502 -1.166 0.244 #> 72       1.290      0.929      TRUE -0.361 0.612 -0.590 0.555 #> 73      -0.041      0.003      TRUE  0.044 0.484  0.090 0.928 #> 74       0.156      0.281      TRUE  0.125 0.494  0.252 0.801 #> 75       0.590      0.043      TRUE -0.547 0.507 -1.078 0.281 #> 76       0.818      0.796      TRUE -0.022 0.559 -0.039 0.969 #> 77      -0.693     -0.942      TRUE -0.249 0.532 -0.468  0.64 #> 78       0.237      0.147      TRUE -0.090 0.492 -0.182 0.855 #> 79       0.852     -0.057      TRUE -0.909 0.526 -1.727 0.084 #> 80       0.297      0.201      TRUE -0.097 0.495 -0.195 0.845 #> 81      -0.117     -0.324      TRUE -0.207 0.485 -0.426  0.67 #> 82       0.499      0.262      TRUE -0.236 0.507 -0.466 0.641 #> 83       0.297      0.112      TRUE -0.185 0.493 -0.375 0.707 #> 84      -0.821     -1.876      TRUE -1.055 0.648 -1.627 0.104 #> 85      -0.500     -0.136      TRUE  0.363 0.490  0.741 0.459 #> 86      -0.554      0.157      TRUE  0.711 0.496  1.434 0.152 #> 87      -1.099     -0.542      TRUE  0.557 0.539  1.033 0.302 #> 88      -0.200      0.099      TRUE  0.299 0.485  0.615 0.538 #> 89      -0.297     -0.068      TRUE  0.229 0.485  0.473 0.636 #> 90       0.372      0.170      TRUE -0.202 0.498 -0.406 0.685 #> 91      -0.634     -1.629      TRUE -0.995 0.604 -1.646   0.1 #> 92      -0.666     -0.443      TRUE  0.223 0.503  0.444 0.657 #> 93      -1.257     -0.891      TRUE  0.366 0.573  0.638 0.524 #> 94       0.197      0.503      TRUE  0.307 0.505  0.607 0.544 #> 95       1.648      1.090      TRUE -0.558 0.664 -0.840 0.401 #> 96      -0.162     -0.492      TRUE -0.329 0.490 -0.672 0.501 #> 97      -0.390      0.107      TRUE  0.497 0.489  1.017 0.309 #> 98      -0.520     -0.462      TRUE  0.058 0.497  0.117 0.907 #> 99       0.268      0.095      TRUE -0.173 0.492 -0.352 0.725 #> 100     -0.113     -0.109      TRUE  0.004 0.483  0.007 0.994 #> 101     -0.782     -0.793      TRUE -0.011 0.527 -0.021 0.983 #> 102      0.897      1.091      TRUE  0.194 0.590  0.329 0.743 #> 103     -0.105     -0.130      TRUE -0.025 0.483 -0.053 0.958 #> 104     -0.364      0.941      TRUE  1.305 0.537  2.431 0.015 #> 105     -1.638     -1.441      TRUE  0.198 0.666  0.297 0.767 #> 106     -0.453     -0.084      TRUE  0.369 0.489  0.756  0.45 #> 107      0.294      0.262      TRUE -0.033 0.497 -0.066 0.947 #> 108     -1.638     -1.503      TRUE  0.135 0.673  0.201 0.841 #> 109      0.567      0.431      TRUE -0.137 0.518 -0.263 0.792 #> 110     -0.501     -0.961      TRUE -0.460 0.525 -0.876 0.381 #> 111      0.754     -0.118      TRUE -0.872 0.518 -1.683 0.092 #> 112     -0.804     -0.828      TRUE -0.023 0.531 -0.044 0.965 #> 113      1.003      1.654      TRUE  0.652 0.658  0.990 0.322 #> 114     -1.492     -2.133      TRUE -0.640 0.738 -0.867 0.386 #> 115     -0.190      0.455      TRUE  0.646 0.498  1.295 0.195 #> 116      0.804      0.776      TRUE -0.028 0.556 -0.051  0.96 #> 117     -0.203     -0.434      TRUE -0.231 0.488 -0.473 0.636 #> 118     -0.684     -0.888      TRUE -0.204 0.528 -0.386   0.7 #> 119      0.478     -0.047      TRUE -0.525 0.500 -1.051 0.293 #> 120     -0.386     -1.201      TRUE -0.815 0.544 -1.497 0.134 #> 121     -0.165      0.462      TRUE  0.627 0.499  1.257 0.209 #> 122     -1.403     -0.744      TRUE  0.660 0.581  1.136 0.256 #> 123     -0.280     -0.537      TRUE -0.257 0.493 -0.521 0.602 #> 124     -1.451     -0.856      TRUE  0.595 0.593  1.003 0.316 #> 125      0.345      0.253      TRUE -0.092 0.499 -0.185 0.854 #> 126      1.234      1.972      TRUE  0.738 0.714  1.033 0.302 #> 127      0.603      0.776      TRUE  0.173 0.542  0.318  0.75 #> 128      0.656      0.738      TRUE  0.082 0.543  0.152 0.879 #> 129      0.685      0.722      TRUE  0.037 0.544  0.069 0.945 #> 130     -0.316      0.634      TRUE  0.949 0.511  1.857 0.063 #> 131      0.268      0.009      TRUE -0.260 0.490 -0.530 0.596 #> 132     -1.131     -1.242      TRUE -0.112 0.591 -0.189  0.85 #> 133      0.936      0.862      TRUE -0.075 0.574 -0.130 0.896 #> 134      1.707      1.955      TRUE  0.248 0.757  0.327 0.743 #> 135     -1.495     -0.960      TRUE  0.535 0.605  0.884 0.377 #> 136      0.386     -0.097      TRUE -0.484 0.495 -0.978 0.328 #> 137      0.428      0.471      TRUE  0.043 0.513  0.084 0.933 #> 138     -0.469     -1.073      TRUE -0.604 0.534 -1.131 0.258 #> 139      0.609      0.070      TRUE -0.539 0.509 -1.059 0.289 #> 140     -0.253     -0.848      TRUE -0.594 0.510 -1.164 0.244 #> 141      1.650      1.431      TRUE -0.218 0.695 -0.314 0.754 #> 142      0.860      0.826      TRUE -0.034 0.565 -0.061 0.952 #> 143     -0.471     -0.057      TRUE  0.415 0.489  0.847 0.397 #> 144      0.643     -0.130      TRUE -0.772 0.510 -1.515  0.13 #> 145     -1.411     -0.965      TRUE  0.446 0.596  0.749 0.454 #> 146     -1.736     -1.536      TRUE  0.200 0.689  0.290 0.772 #> 147     -0.848     -0.577      TRUE  0.271 0.520  0.521 0.602 #> 148     -0.279     -0.351      TRUE -0.072 0.487 -0.148 0.882 #> 149      0.510      0.886      TRUE  0.376 0.546  0.689 0.491 #> 150     -0.174     -0.160      TRUE  0.014 0.483  0.028 0.977 #> 151     -0.440     -0.313      TRUE  0.127 0.490  0.258 0.796 #> 152     -1.513     -1.876      TRUE -0.362 0.705 -0.514 0.607 #> 153     -1.120     -1.223      TRUE -0.103 0.588 -0.175 0.861 #> 154     -0.576     -0.927      TRUE -0.351 0.526 -0.669 0.504 #> 155      1.141      0.518      TRUE -0.623 0.570 -1.093 0.275 #> 156     -0.197      0.304      TRUE  0.501 0.491  1.019 0.308 #> 157      0.826      1.407      TRUE  0.581 0.617  0.942 0.346 #> 158     -0.111     -0.823      TRUE -0.712 0.508 -1.403 0.161 #> 159     -0.270     -0.091      TRUE  0.179 0.484  0.370 0.712 #> 160      1.481      0.197      TRUE -1.284 0.595 -2.159 0.031 #> 161      0.693     -0.442      TRUE -1.135 0.519 -2.189 0.029 #> 162     -0.416     -0.250      TRUE  0.166 0.488  0.340 0.734 #> 163     -1.237     -0.850      TRUE  0.387 0.569  0.681 0.496 #> 164      1.236     -0.394      TRUE -1.630 0.567 -2.875 0.004 #> 165     -0.030     -0.357      TRUE -0.327 0.486 -0.673 0.501 #> 166     -0.427     -0.285      TRUE  0.143 0.489  0.291 0.771 #> 167      1.077      1.036      TRUE -0.040 0.601 -0.067 0.947 #> 168      1.046      1.691      TRUE  0.645 0.666  0.968 0.333 #> 169     -1.220     -1.363      TRUE -0.143 0.612 -0.233 0.815 #> 170     -1.876     -1.638      TRUE  0.237 0.718  0.331 0.741 #> 171     -1.449     -2.133      TRUE -0.684 0.734 -0.931 0.352 #> 172      2.251      1.020      TRUE -1.231 0.731 -1.683 0.092 #> 173      0.054      0.386      TRUE  0.332 0.496  0.670 0.503 #> 174     -0.176     -1.199      TRUE -1.024 0.541 -1.893 0.058 #> 175     -0.798      0.984      TRUE  1.781 0.559  3.187 0.001 #> 176     -0.305     -0.533      TRUE -0.227 0.493 -0.461 0.645 #> 177      0.820      1.071      TRUE  0.250 0.583  0.430 0.667 #> 178     -1.645     -0.911      TRUE  0.735 0.621  1.182 0.237 #> 179      1.675      2.251      TRUE  0.576 0.787  0.732 0.464 #> 180     -0.043     -0.341      TRUE -0.297 0.486 -0.613  0.54 #> 181     -0.639     -0.688      TRUE -0.049 0.513 -0.096 0.923 #> 182     -1.247     -0.804      TRUE  0.442 0.567  0.781 0.435 #> 183      0.019     -0.488      TRUE -0.507 0.491 -1.033 0.301 #> 184     -0.346      0.020      TRUE  0.367 0.486  0.754 0.451 #> 185     -0.786     -1.155      TRUE -0.369 0.556 -0.662 0.508 #> 186     -0.537     -0.933      TRUE -0.396 0.524 -0.756  0.45 #> 187     -0.400     -1.088      TRUE -0.688 0.533 -1.290 0.197 #> 188     -0.069     -0.136      TRUE -0.067 0.483 -0.139  0.89 #> 189      1.306      0.482      TRUE -0.824 0.586 -1.408 0.159 #> 190     -1.299     -1.122      TRUE  0.177 0.596  0.297 0.767 #> 191      0.834      1.047      TRUE  0.213 0.581  0.366 0.714 #> 192     -0.534     -0.061      TRUE  0.473 0.492  0.962 0.336 #> 193     -0.013      0.406      TRUE  0.420 0.496  0.846 0.398 #> 194     -1.449     -0.607      TRUE  0.842 0.580  1.452 0.146 #> 195     -1.046     -1.390      TRUE -0.345 0.600 -0.575 0.565 #> 196      0.280     -0.244      TRUE -0.524 0.491 -1.068 0.286 #> 197     -0.719     -1.629      TRUE -0.910 0.608 -1.495 0.135 #> 198     -0.864     -1.645      TRUE -0.781 0.618 -1.263 0.206 #> 199      1.356      1.427      TRUE  0.071 0.665  0.107 0.915 #> 200     -0.813     -1.227      TRUE -0.414 0.565 -0.732 0.464 #> 201      0.455      0.406      TRUE -0.049 0.511 -0.096 0.923 #> 202      0.809      0.356      TRUE -0.453 0.532 -0.851 0.395 #> 203     -1.403     -1.384      TRUE  0.020 0.633  0.031 0.975 #> 204      0.082     -0.052      TRUE -0.133 0.485 -0.275 0.783 #> 205     -0.021      0.020      TRUE  0.041 0.484  0.085 0.932 #> 206      0.509      0.218      TRUE -0.291 0.506 -0.575 0.565 #> 207      1.331      1.628      TRUE  0.297 0.683  0.434 0.664 #> 208      0.824      1.009      TRUE  0.185 0.577  0.320 0.749 #> 209      1.662      1.707      TRUE  0.045 0.725  0.061 0.951 #> 210     -1.481     -2.133      TRUE -0.651 0.737 -0.883 0.377 #> 211     -0.151      0.141      TRUE  0.293 0.486  0.602 0.547 #> 212      0.268      0.477      TRUE  0.209 0.506  0.413  0.68 #> 213      1.175      0.763      TRUE -0.412 0.588 -0.700 0.484 #> 214     -1.554     -1.443      TRUE  0.111 0.656  0.170 0.865 #> 215     -1.395     -1.021      TRUE  0.374 0.598  0.626 0.532 #> 216      0.644      1.470      TRUE  0.826 0.612  1.350 0.177 #> 217      0.762      0.317      TRUE -0.445 0.527 -0.845 0.398 #> 218     -1.186     -0.858      TRUE  0.329 0.564  0.583  0.56 #> 219     -0.128     -0.455      TRUE -0.327 0.489 -0.669 0.503 #> 220     -2.133     -1.854      TRUE  0.279 0.778  0.358  0.72 #> 221      0.809      0.333      TRUE -0.476 0.531 -0.896  0.37 #> 222     -1.432     -1.660      TRUE -0.228 0.668 -0.341 0.733 #> 223     -0.774     -0.017      TRUE  0.757 0.505  1.500 0.133 #> 224     -0.236      0.910      TRUE  1.146 0.532  2.155 0.031 #> 225      0.411      0.628      TRUE  0.218 0.521  0.418 0.676 #> 226      0.741      0.542      TRUE -0.199 0.536 -0.372  0.71 #> 227      0.273      0.123      TRUE -0.150 0.492 -0.305 0.761 #> 228     -0.121     -0.127      TRUE -0.006 0.483 -0.013  0.99 #> 229      1.481      0.947      TRUE -0.534 0.634 -0.842   0.4 #> 230     -1.577     -1.495      TRUE  0.082 0.665  0.123 0.902 #> 231     -0.718     -0.224      TRUE  0.494 0.502  0.985 0.325 #> 232      0.073      0.782      TRUE  0.709 0.522  1.358 0.174 #> 233      0.424      0.548      TRUE  0.124 0.517  0.240  0.81 #> 234      0.424      1.400      TRUE  0.975 0.593  1.644   0.1 #> 235      0.510     -0.562      TRUE -1.071 0.511 -2.097 0.036 #> 236     -0.269     -0.372      TRUE -0.103 0.487 -0.211 0.833 #> 237     -0.318     -0.243      TRUE  0.075 0.486  0.155 0.877 #> 238     -0.579      0.279      TRUE  0.858 0.501  1.714 0.086 #> 239     -0.072     -0.135      TRUE -0.063 0.483 -0.130 0.896 #> 240     -0.539      0.226      TRUE  0.765 0.497  1.538 0.124 #> 241      1.353      1.662      TRUE  0.310 0.689  0.449 0.653 #> 242     -1.018     -1.260      TRUE -0.242 0.583 -0.414 0.679 #> 243     -1.793     -1.645      TRUE  0.148 0.708  0.209 0.834 #> 244     -1.305     -1.824      TRUE -0.519 0.677 -0.767 0.443 #> 245     -0.877     -0.782      TRUE  0.095 0.533  0.178 0.859 #> 246     -0.979     -1.136      TRUE -0.158 0.568 -0.278 0.781 #> 247      1.288      1.483      TRUE  0.195 0.664  0.293 0.769 #> 248      2.251      1.595      TRUE -0.656 0.779 -0.842   0.4 #> 249     -0.192     -0.129      TRUE  0.063 0.483  0.130 0.897 #> 250      0.804      1.461      TRUE  0.657 0.622  1.057 0.291 #> 251      0.843      0.406      TRUE -0.437 0.537 -0.814 0.416 #> 252     -0.204     -0.179      TRUE  0.025 0.483  0.053 0.958 #> 253     -0.379     -0.135      TRUE  0.244 0.486  0.502 0.616 #> 254      0.253      0.346      TRUE  0.093 0.499  0.186 0.852 #> 255      1.624      1.229      TRUE -0.395 0.674 -0.586 0.558 #> 256     -0.031      0.341      TRUE  0.372 0.493  0.755  0.45 #> 257      1.546      1.096      TRUE -0.450 0.653 -0.688 0.491 #> 258      0.004      0.183      TRUE  0.180 0.488  0.368 0.713 #> 259     -0.997     -1.336      TRUE -0.340 0.590 -0.576 0.564 #> 260      0.215      0.633      TRUE  0.417 0.514  0.812 0.417 #> 261      0.687      0.251      TRUE -0.436 0.519 -0.840 0.401 #> 262      0.779      0.500      TRUE -0.279 0.537 -0.519 0.604 #> 263      1.953      1.437      TRUE -0.517 0.730 -0.708 0.479 #> 264     -0.856     -0.750      TRUE  0.106 0.529  0.201 0.841 #> 265      1.482      1.433      TRUE -0.050 0.678 -0.073 0.942 #> 266     -0.179      0.385      TRUE  0.563 0.495  1.138 0.255 #> 267     -1.002     -0.592      TRUE  0.411 0.532  0.772  0.44 #> 268      0.860      0.373      TRUE -0.486 0.537 -0.905 0.365 #> 269     -0.348     -0.435      TRUE -0.087 0.491 -0.178 0.859 #> 270     -0.270      0.211      TRUE  0.481 0.489  0.983 0.326 #> 271     -1.862     -1.588      TRUE  0.274 0.711  0.385   0.7 #> 272     -0.369     -0.643      TRUE -0.274 0.500 -0.549 0.583 #> 273     -0.704     -0.665      TRUE  0.039 0.515  0.075  0.94 #> 274      1.431      1.112      TRUE -0.319 0.642 -0.496  0.62 #> 275      0.544      0.213      TRUE -0.331 0.508 -0.652 0.515 #> 276     -1.431     -1.876      TRUE -0.444 0.696 -0.638 0.523 #> 277     -0.233     -0.083      TRUE  0.151 0.483  0.312 0.755 #> 278     -1.633     -2.133      TRUE -0.500 0.753 -0.664 0.507 #> 279      0.208      0.290      TRUE  0.082 0.495  0.166 0.868 #> 280      1.163      1.427      TRUE  0.264 0.646  0.408 0.683 #> 281      0.988      1.280      TRUE  0.292 0.616  0.474 0.636 #> 282      0.796      1.009      TRUE  0.213 0.575  0.370 0.711 #> 283      1.019      1.064      TRUE  0.045 0.598  0.076  0.94 #> 284     -1.192     -1.861      TRUE -0.669 0.672 -0.996 0.319 #> 285      1.163      1.678      TRUE  0.515 0.674  0.764 0.445 #> 286      0.084     -0.365      TRUE -0.449 0.488 -0.920 0.358 #> 287      0.370      0.728      TRUE  0.358 0.526  0.680 0.496 #> 288      0.896      1.431      TRUE  0.535 0.625  0.856 0.392 #> 289      1.413      0.898      TRUE -0.514 0.623 -0.826 0.409 #> 290      0.878      0.408      TRUE -0.471 0.540 -0.871 0.384 #> 291      0.867      0.569      TRUE -0.299 0.548 -0.545 0.585 #> 292      0.083      0.002      TRUE -0.082 0.485 -0.168 0.866 #> 293     -2.133     -1.403      TRUE  0.729 0.730  0.999 0.318 #> 294      0.289     -0.243      TRUE -0.533 0.491 -1.084 0.278 #> 295     -1.058     -0.487      TRUE  0.571 0.533  1.070 0.284 #> 296      1.090      0.801      TRUE -0.290 0.583 -0.497 0.619 #> 297      1.574      1.297      TRUE -0.277 0.674 -0.411 0.681 #> 298     -0.235     -0.406      TRUE -0.171 0.488 -0.350 0.727 #> 299      1.635      0.461      TRUE -1.174 0.622 -1.887 0.059 #> 300     -2.133     -1.861      TRUE  0.272 0.779  0.349 0.727 #> 301     -0.984      0.084      TRUE  1.068 0.522  2.046 0.041 #> 302     -0.068     -0.273      TRUE -0.204 0.484 -0.422 0.673 #> 303     -0.845     -1.609      TRUE -0.764 0.612 -1.248 0.212 #> 304      1.972      1.476      TRUE -0.496 0.736 -0.675   0.5 #> 305      0.125     -0.538      TRUE -0.663 0.494 -1.340  0.18 #> 306      0.785      1.022      TRUE  0.237 0.576  0.412 0.681 #> 307     -0.048      0.324      TRUE  0.372 0.492  0.757 0.449 #> 308      0.251     -0.111      TRUE -0.362 0.489 -0.739  0.46 #> 309     -0.114     -0.508      TRUE -0.394 0.491 -0.803 0.422 #> 310     -0.238     -0.745      TRUE -0.507 0.503 -1.007 0.314 #> 311      0.837      0.901      TRUE  0.064 0.569  0.113  0.91 #> 312      1.010      0.146      TRUE -0.865 0.543 -1.592 0.111 #> 313     -0.809     -1.004      TRUE -0.194 0.544 -0.357 0.721 #> 314      0.255      0.215      TRUE -0.040 0.494 -0.081 0.935 #> 315     -0.380     -0.574      TRUE -0.194 0.497 -0.389 0.697 #> 316     -0.088      0.094      TRUE  0.182 0.485  0.376 0.707 #> 317     -0.480      0.272      TRUE  0.752 0.496  1.514  0.13 #> 318     -1.821     -0.874      TRUE  0.947 0.643  1.471 0.141 #> 319      0.011      0.000      TRUE -0.011 0.484 -0.023 0.982 #> 320      0.465      0.106      TRUE -0.358 0.501 -0.716 0.474 #> 321      0.483     -0.025      TRUE -0.508 0.500 -1.016  0.31 #> 322      0.603     -0.292      TRUE -0.895 0.509 -1.760 0.078 #> 323     -1.793     -1.495      TRUE  0.298 0.692  0.431 0.666 #> 324      0.575      0.654      TRUE  0.080 0.532  0.150 0.881 #> 325      0.496      0.624      TRUE  0.127 0.525  0.242 0.808 #> 326      0.683      0.552      TRUE -0.131 0.533 -0.246 0.806 #> 327     -0.578     -0.635      TRUE -0.057 0.507 -0.113  0.91 #> 328     -0.132      0.314      TRUE  0.447 0.491  0.909 0.364 #> 329      0.525      0.555      TRUE  0.030 0.523  0.058 0.954 #> 330     -0.648      0.534      TRUE  1.181 0.516  2.288 0.022 #> 331      0.358      0.783      TRUE  0.425 0.530  0.802 0.423 #> 332     -0.182     -0.859      TRUE -0.677 0.511 -1.326 0.185 #> 333      0.575      0.305      TRUE -0.269 0.513 -0.525   0.6 #> 334      0.543      0.792      TRUE  0.249 0.540  0.461 0.645 #> 335     -0.068      0.230      TRUE  0.297 0.488  0.608 0.543 #> 336      0.018     -0.276      TRUE -0.294 0.485 -0.606 0.545 #> 337      0.468      0.446      TRUE -0.022 0.513 -0.042 0.966 #> 338      1.082      0.610      TRUE -0.472 0.569 -0.828 0.408 #> 339     -0.797     -0.082      TRUE  0.715 0.506  1.413 0.158 #> 340      1.350      1.084      TRUE -0.266 0.631 -0.421 0.674 #> 341      0.407      0.718      TRUE  0.311 0.527  0.590 0.555 #> 342     -0.607     -0.720      TRUE -0.113 0.513 -0.220 0.826 #> 343     -0.949     -0.043      TRUE  0.906 0.517  1.751  0.08 #> 344     -0.688     -1.058      TRUE -0.370 0.542 -0.683 0.495 #> 345     -0.748     -0.283      TRUE  0.465 0.504  0.923 0.356 #> 346      0.379     -0.363      TRUE -0.742 0.497 -1.492 0.136 #> 347      0.169      0.343      TRUE  0.175 0.496  0.352 0.725 #> 348     -0.444      0.075      TRUE  0.518 0.490  1.058  0.29 #> 349     -0.861     -0.613      TRUE  0.249 0.522  0.477 0.634 #> 350      0.235      0.299      TRUE  0.064 0.497  0.129 0.897 #> 351     -0.268     -0.238      TRUE  0.030 0.485  0.063  0.95 #> 352      1.610      1.046      TRUE -0.564 0.656 -0.859  0.39 #> 353     -0.267      0.103      TRUE  0.369 0.486  0.760 0.447 #> 354     -0.962     -1.295      TRUE -0.333 0.583 -0.571 0.568 #> 355      0.393      1.483      TRUE  1.090 0.601  1.813  0.07 #> 356      1.016      0.671      TRUE -0.344 0.567 -0.607 0.544 #> 357     -0.203      0.359      TRUE  0.562 0.494  1.139 0.255 #> 358      0.033     -0.544      TRUE -0.577 0.493 -1.171 0.242 #> 359     -1.876     -1.197      TRUE  0.679 0.674  1.007 0.314 #> 360     -0.026      0.341      TRUE  0.368 0.493  0.746 0.455 #> 361     -0.752     -0.800      TRUE -0.048 0.526 -0.091 0.927 #> 362      0.706      0.838      TRUE  0.133 0.554  0.239 0.811 #> 363     -0.154      0.351      TRUE  0.505 0.493  1.024 0.306 #> 364      0.552      0.863      TRUE  0.311 0.546  0.569 0.569 #> 365     -0.232     -1.007      TRUE -0.775 0.523 -1.482 0.138 #> 366      1.229      1.309      TRUE  0.080 0.641  0.124 0.901 #> 367     -0.901     -1.513      TRUE -0.612 0.604 -1.015  0.31 #> 368      0.350     -0.035      TRUE -0.385 0.493 -0.781 0.435 #> 369     -1.293     -0.073      TRUE  1.220 0.551  2.214 0.027 #> 370      0.279      0.458      TRUE  0.179 0.505  0.354 0.723 #> 371      0.786      1.531      TRUE  0.745 0.628  1.187 0.235 #> 372     -0.170      0.296      TRUE  0.467 0.491  0.950 0.342 #> 373     -0.479     -0.199      TRUE  0.280 0.490  0.571 0.568 #> 374     -1.039     -0.627      TRUE  0.412 0.537  0.767 0.443 #> 375      0.097     -0.872      TRUE -0.970 0.513 -1.889 0.059 #> 376      1.252      0.813      TRUE -0.438 0.600 -0.731 0.465 #> 377      1.041      1.017      TRUE -0.023 0.596 -0.039 0.969 #> 378      0.526      0.448      TRUE -0.078 0.517 -0.152  0.88 #> 379     -2.133     -1.409      TRUE  0.723 0.730  0.990 0.322 #> 380     -0.630     -0.446      TRUE  0.184 0.501  0.367 0.714 #> 381     -0.659     -0.404      TRUE  0.254 0.502  0.507 0.612 #> 382     -0.538     -0.527      TRUE  0.012 0.500  0.023 0.982 #> 383     -0.701     -0.207      TRUE  0.494 0.500  0.987 0.324 #> 384     -1.109     -1.071      TRUE  0.038 0.573  0.065 0.948 #> 385     -1.214     -0.948      TRUE  0.265 0.573  0.463 0.643 #> 386     -1.577     -0.660      TRUE  0.917 0.598  1.533 0.125 #> 387     -0.237     -0.039      TRUE  0.198 0.484  0.409 0.682 #> 388      1.970      0.778      TRUE -1.192 0.680 -1.753  0.08 #> 389     -1.189     -0.742      TRUE  0.447 0.557  0.803 0.422 #> 390     -2.133     -1.492      TRUE  0.641 0.738  0.868 0.385 #> 391      1.056      0.679      TRUE -0.378 0.571 -0.661 0.509 #> 392      0.174     -1.067      TRUE -1.240 0.531 -2.335  0.02 #> 393     -1.005     -0.480      TRUE  0.525 0.528  0.995  0.32 #> 394     -1.459     -1.685      TRUE -0.226 0.674 -0.335 0.738 #> 395     -0.321      0.380      TRUE  0.701 0.497  1.412 0.158 #> 396      0.515      0.275      TRUE -0.240 0.509 -0.472 0.637 #> 397      0.900      0.892      TRUE -0.008 0.573 -0.013 0.989 #> 398     -1.495     -0.944      TRUE  0.551 0.604  0.911 0.362 #> 399      0.493     -0.680      TRUE -1.173 0.516 -2.275 0.023 #> 400      0.846     -0.109      TRUE -0.955 0.526 -1.817 0.069 #> 401     -0.437     -0.204      TRUE  0.233 0.488  0.478 0.633 #> 402     -1.117     -1.387      TRUE -0.270 0.605 -0.446 0.655 #> 403     -0.021      0.116      TRUE  0.137 0.486  0.283 0.777 #> 404      1.379      1.433      TRUE  0.053 0.668  0.080 0.936 #> 405     -1.876     -1.013      TRUE  0.862 0.660  1.306 0.192 #> 406     -1.097     -1.481      TRUE -0.384 0.614 -0.625 0.532 #> 407     -0.404     -0.073      TRUE  0.332 0.487  0.681 0.496 #> 408     -0.429      0.098      TRUE  0.527 0.490  1.076 0.282 #> 409      0.251      0.492      TRUE  0.241 0.506  0.477 0.634 #> 410     -0.212     -0.655      TRUE -0.443 0.498 -0.891 0.373 #> 411     -0.305     -1.038      TRUE -0.732 0.527 -1.390 0.164 #> 412      0.920      0.138      TRUE -0.782 0.535 -1.463 0.143 #> 413     -0.810     -1.296      TRUE -0.486 0.572 -0.848 0.396 #> 414      1.101      1.420      TRUE  0.319 0.640  0.498 0.618 #> 415      0.082      0.805      TRUE  0.723 0.524  1.380 0.167 #> 416      0.750      0.364      TRUE -0.385 0.528 -0.730 0.465 #> 417      0.665      0.872      TRUE  0.206 0.554  0.373 0.709 #> 418     -0.836     -0.634      TRUE  0.202 0.521  0.387 0.699 #> 419     -0.834     -0.041      TRUE  0.794 0.509  1.560 0.119 #> 420      0.134      0.592      TRUE  0.458 0.509  0.899 0.368 #> 421     -1.249     -1.645      TRUE -0.397 0.648 -0.612  0.54 #> 422      1.434      1.435      TRUE  0.001 0.673  0.002 0.998 #> 423      0.034      0.274      TRUE  0.240 0.491  0.489 0.625 #> 424      0.928      0.478      TRUE -0.451 0.548 -0.823 0.411 #> 425      1.093     -0.256      TRUE -1.348 0.549 -2.454 0.014 #> 426      0.826      1.069      TRUE  0.243 0.583  0.418 0.676 #> 427      0.155     -0.483      TRUE -0.638 0.493 -1.295 0.195 #> 428     -0.260      0.130      TRUE  0.390 0.487  0.802 0.423 #> 429      0.404      0.520      TRUE  0.116 0.514  0.226 0.822 #> 430     -0.198      0.085      TRUE  0.282 0.485  0.582  0.56 #> 431      1.015      0.756      TRUE -0.258 0.573 -0.451 0.652 #> 432     -1.876     -1.108      TRUE  0.768 0.667  1.151  0.25 #> 433     -1.189     -1.331      TRUE -0.142 0.605 -0.234 0.815 #> 434      0.276      0.784      TRUE  0.508 0.527  0.964 0.335 #> 435     -1.446     -1.143      TRUE  0.303 0.614  0.494 0.622 #> 436     -0.471      0.163      TRUE  0.634 0.493  1.287 0.198 #> 437     -1.418     -2.133      TRUE -0.714 0.731 -0.977 0.328 #> 438      0.564      0.693      TRUE  0.129 0.534  0.241 0.809 #> 439      1.592      0.623      TRUE -0.969 0.625 -1.549 0.121 #> 440     -0.591      0.379      TRUE  0.970 0.505  1.920 0.055 #> 441      0.763      0.389      TRUE -0.374 0.530 -0.705 0.481 #> 442     -1.090     -0.748      TRUE  0.342 0.548  0.625 0.532 #> 443      0.058     -0.020      TRUE -0.078 0.484 -0.161 0.872 #> 444      1.635      1.499      TRUE -0.136 0.701 -0.194 0.846 #> 445      1.379      1.211      TRUE -0.168 0.646 -0.260 0.795 #> 446      1.172      1.299      TRUE  0.127 0.634  0.201 0.841 #> 447     -2.133     -2.133      TRUE  0.000 0.814  0.000     1 #> 448      0.171     -0.076      TRUE -0.248 0.487 -0.509 0.611 #> 449     -1.035     -0.602      TRUE  0.433 0.536  0.808 0.419 #> 450     -1.710     -0.945      TRUE  0.765 0.632  1.210 0.226 #> 451      1.946      1.587      TRUE -0.359 0.743 -0.483 0.629 #> 452     -0.348     -0.893      TRUE -0.544 0.515 -1.056 0.291 #> 453     -0.248      0.158      TRUE  0.406 0.487  0.833 0.405 #> 454     -0.865     -0.051      TRUE  0.814 0.511  1.594 0.111 #> 455      1.527      1.389      TRUE -0.138 0.678 -0.204 0.839 #> 456      0.432      0.178      TRUE -0.254 0.501 -0.507 0.612 #> 457     -0.794     -0.264      TRUE  0.530 0.507  1.046 0.296 #> 458     -1.586     -0.841      TRUE  0.745 0.609  1.223 0.221 #> 459     -1.878     -1.587      TRUE  0.290 0.713  0.407 0.684 #> 460      1.909      1.652      TRUE -0.256 0.746 -0.344 0.731 #> 461      0.889      1.301      TRUE  0.412 0.610  0.675   0.5 #> 462      1.341      0.591      TRUE -0.750 0.595 -1.260 0.208 #> 463      0.457      0.746      TRUE  0.289 0.532  0.544 0.587 #> 464      0.713      0.733      TRUE  0.020 0.547  0.037 0.971 #> 465     -0.649     -0.029      TRUE  0.620 0.497  1.247 0.212 #> 466     -0.197     -0.976      TRUE -0.780 0.520 -1.500 0.134 #> 467      1.252      1.003      TRUE -0.248 0.615 -0.404 0.686 #> 468     -1.250     -1.442      TRUE -0.192 0.623 -0.308 0.758 #> 469     -1.629     -0.540      TRUE  1.089 0.601  1.813  0.07 #> 470      0.715     -0.029      TRUE -0.744 0.515 -1.445 0.149 #> 471     -0.998     -0.921      TRUE  0.076 0.551  0.139  0.89 #> 472     -0.582     -0.500      TRUE  0.081 0.501  0.163 0.871 #> 473      2.251      1.953      TRUE -0.297 0.815 -0.365 0.715 #> 474     -0.482     -0.279      TRUE  0.203 0.491  0.414 0.679 #> 475     -1.862     -1.629      TRUE  0.233 0.716  0.326 0.745 #> 476      0.921      0.585      TRUE -0.336 0.553 -0.608 0.543 #> 477      1.069      0.020      TRUE -1.050 0.547 -1.919 0.055 #> 478      1.009      0.246      TRUE -0.763 0.546 -1.398 0.162 #> 479      0.217      0.042      TRUE -0.175 0.489 -0.358  0.72 #> 480      0.994      0.881      TRUE -0.113 0.580 -0.194 0.846 #> 481     -0.312     -0.421      TRUE -0.109 0.489 -0.223 0.823 #> 482      0.909      0.378      TRUE -0.532 0.542 -0.981 0.326 #> 483      1.066      1.160      TRUE  0.095 0.611  0.155 0.877 #> 484      0.335      0.294      TRUE -0.041 0.500 -0.081 0.935 #> 485      0.277      0.171      TRUE -0.106 0.494 -0.215  0.83 #> 486     -0.893     -0.448      TRUE  0.445 0.518  0.858 0.391 #> 487     -0.054      0.407      TRUE  0.461 0.496  0.930 0.353 #> 488      0.350      0.643      TRUE  0.293 0.520  0.563 0.573 #> 489      1.205      1.483      TRUE  0.278 0.656  0.424 0.671 #> 490     -0.380     -0.342      TRUE  0.038 0.489  0.077 0.939 #> 491      1.913      1.691      TRUE -0.222 0.750 -0.296 0.767 #> 492     -0.964     -0.877      TRUE  0.087 0.545  0.160 0.873 #> 493      1.943      1.129      TRUE -0.814 0.702 -1.160 0.246 #> 494     -0.324     -0.101      TRUE  0.224 0.485  0.461 0.645 #> 495      0.035      0.922      TRUE  0.887 0.533  1.664 0.096 #> 496     -0.703     -0.681      TRUE  0.022 0.516  0.043 0.966 #> 497      0.352     -0.369      TRUE -0.720 0.496 -1.452 0.147 #> 498     -1.276     -0.186      TRUE  1.090 0.549  1.984 0.047 #> 499     -0.250     -0.190      TRUE  0.060 0.484  0.124 0.902 #> 500     -0.481      0.225      TRUE  0.706 0.495  1.426 0.154 #> 501      0.372      1.213      TRUE  0.841 0.571  1.474  0.14 #> 502      0.379     -0.077      TRUE -0.456 0.494 -0.921 0.357 #> 503     -2.133     -1.854      TRUE  0.279 0.778  0.358  0.72 #> 504     -1.143     -0.860      TRUE  0.283 0.560  0.504 0.614 #> 505     -1.026     -0.657      TRUE  0.369 0.537  0.686 0.493 #> 506      0.167      0.142      TRUE -0.025 0.489 -0.051 0.959 #> 507      1.540      1.252      TRUE -0.289 0.667 -0.433 0.665 #> 508      0.578      0.763      TRUE  0.185 0.540  0.342 0.733 #> 509     -0.724     -0.547      TRUE  0.177 0.510  0.347 0.728 #> 510     -0.371      0.078      TRUE  0.448 0.488  0.919 0.358 #> 511     -0.788      0.044      TRUE  0.832 0.506  1.642 0.101 #> 512     -0.383     -0.007      TRUE  0.376 0.487  0.772  0.44 #> 513     -0.862     -0.715      TRUE  0.147 0.528  0.279  0.78 #> 514     -0.802     -0.158      TRUE  0.644 0.506  1.272 0.203 #> 515     -0.100      0.190      TRUE  0.291 0.487  0.597 0.551 #> 516      1.452      1.364      TRUE -0.088 0.668 -0.132 0.895 #> 517      0.649      0.480      TRUE -0.169 0.526 -0.321 0.748 #> 518     -0.306      0.930      TRUE  1.237 0.535  2.313 0.021 #> 519      0.535      0.813      TRUE  0.278 0.541  0.514 0.607 #> 520      0.522     -0.375      TRUE -0.897 0.505 -1.776 0.076 #> 521      0.695      0.308      TRUE -0.386 0.522 -0.741 0.459 #> 522     -0.637     -1.638      TRUE -1.001 0.606 -1.653 0.098 #> 523      1.331      0.928      TRUE -0.403 0.617 -0.653 0.514 #> 524      0.546      0.643      TRUE  0.098 0.529  0.185 0.854 #> 525      0.704      0.739      TRUE  0.035 0.546  0.064 0.949 #> 526      1.209      0.427      TRUE -0.782 0.573 -1.365 0.172 #> 527      0.379     -0.010      TRUE -0.389 0.495 -0.786 0.432 #> 528      0.838      1.211      TRUE  0.374 0.597  0.625 0.532 #> 529      0.593      0.194      TRUE -0.399 0.511 -0.780 0.435 #> 530      0.020      0.090      TRUE  0.070 0.485  0.145 0.885 #> 531      0.203     -0.429      TRUE -0.632 0.492 -1.283   0.2 #> 532      2.251      2.251      TRUE  0.000 0.846  0.000     1 #> 533      1.245      0.443      TRUE -0.803 0.577 -1.391 0.164 #> 534     -0.528     -0.402      TRUE  0.127 0.495  0.255 0.798 #> 535      1.972      1.662      TRUE -0.310 0.754 -0.411 0.681 #> 536      0.332      0.387      TRUE  0.056 0.504  0.110 0.912 #> 537     -0.121     -0.518      TRUE -0.397 0.491 -0.809 0.419 #> 538     -0.691     -0.914      TRUE -0.223 0.530 -0.421 0.674 #> 539     -0.274     -0.317      TRUE -0.043 0.486 -0.088  0.93 #> 540      0.243      0.334      TRUE  0.091 0.498  0.183 0.855 #> 541     -1.086     -0.472      TRUE  0.614 0.535  1.148 0.251 #> 542     -1.503     -1.315      TRUE  0.188 0.637  0.295 0.768 #> 543     -0.783     -0.861      TRUE -0.078 0.532 -0.146 0.884 #> 544      0.389      0.053      TRUE -0.336 0.496 -0.678 0.498 #> 545     -0.874     -0.738      TRUE  0.136 0.530  0.256 0.798 #> 546      0.255     -0.022      TRUE -0.276 0.490 -0.565 0.572 #> 547      0.775      0.411      TRUE -0.365 0.532 -0.686 0.493 #> 548      0.621      1.013      TRUE  0.392 0.564  0.695 0.487 #> 549      0.400     -0.168      TRUE -0.568 0.495 -1.147 0.251 #> 550      0.238      0.260      TRUE  0.021 0.495  0.043 0.966 #> 551     -0.351     -1.496      TRUE -1.145 0.578 -1.981 0.048 #> 552      0.730      0.617      TRUE -0.113 0.540 -0.209 0.834 #> 553      0.138      0.902      TRUE  0.764 0.533  1.434 0.152 #> 554      0.582      0.407      TRUE -0.175 0.518 -0.338 0.736 #> 555     -1.418     -1.367      TRUE  0.052 0.632  0.082 0.935 #> 556     -0.275      0.317      TRUE  0.592 0.493  1.201  0.23 #> 557      0.015      0.366      TRUE  0.351 0.494  0.711 0.477 #> 558     -0.275      0.369      TRUE  0.644 0.495  1.300 0.193 #> 559      0.223      0.337      TRUE  0.114 0.498  0.229 0.819 #> 560      1.953      1.654      TRUE -0.299 0.751 -0.398  0.69 #> 561      0.361      0.280      TRUE -0.081 0.501 -0.161 0.872 #> 562      0.330     -0.254      TRUE -0.584 0.493 -1.185 0.236 #> 563     -1.228     -0.661      TRUE  0.567 0.557  1.018 0.309 #> 564     -1.058     -2.133      TRUE -1.075 0.701 -1.532 0.125 #> 565      0.741      0.497      TRUE -0.244 0.534 -0.458 0.647 #> 566     -1.165     -1.023      TRUE  0.142 0.574  0.247 0.805 #> 567      1.542      1.147      TRUE -0.395 0.657 -0.600 0.548 #> 568     -1.165     -1.363      TRUE -0.198 0.607 -0.326 0.744 #> 569      1.449      1.913      TRUE  0.464 0.726  0.639 0.523 #> 570      0.106     -0.181      TRUE -0.287 0.485 -0.592 0.554 #> 571      0.962      0.430      TRUE -0.532 0.549 -0.969 0.332 #> 572     -0.139     -0.427      TRUE -0.288 0.488 -0.590 0.555 #> 573      0.981      1.413      TRUE  0.432 0.629  0.686 0.493 #> 574     -0.474      0.294      TRUE  0.767 0.497  1.544 0.123 #> 575     -0.743     -1.588      TRUE -0.846 0.604 -1.400 0.161 #> 576      0.103      0.741      TRUE  0.638 0.519  1.229 0.219 #> 577      0.463      0.418      TRUE -0.045 0.512 -0.088  0.93 #> 578      1.481      0.628      TRUE -0.853 0.613 -1.393 0.164 #> 579     -0.748     -0.130      TRUE  0.618 0.503  1.230 0.219 #> 580      0.257      1.455      TRUE  1.197 0.594  2.017 0.044 #> 581      0.236     -0.064      TRUE -0.301 0.489 -0.615 0.538 #> 582     -0.637      0.411      TRUE  1.049 0.509  2.059 0.039 #> 583      0.094      0.433      TRUE  0.339 0.499  0.680 0.497 #> 584      1.215      1.517      TRUE  0.302 0.661  0.457 0.647 #> 585     -0.304     -0.499      TRUE -0.194 0.492 -0.395 0.693 #> 586     -0.435     -0.073      TRUE  0.362 0.488  0.741 0.458 #> 587      0.315      0.181      TRUE -0.134 0.496 -0.270 0.787 #> 588     -0.147     -0.331      TRUE -0.184 0.485 -0.379 0.705 #> 589     -0.121     -0.801      TRUE -0.680 0.506 -1.344 0.179 #> 590      0.676      0.559      TRUE -0.117 0.532 -0.220 0.825 #> 591      0.901      0.639      TRUE -0.261 0.555 -0.471 0.637 #> 592      1.913      1.036      TRUE -0.877 0.691 -1.269 0.205 #> 593     -0.701     -0.253      TRUE  0.449 0.501  0.895 0.371 #> 594     -0.922     -1.165      TRUE -0.242 0.566 -0.428 0.669 #> 595     -1.004     -0.647      TRUE  0.357 0.535  0.667 0.505 #> 596     -1.060     -1.065      TRUE -0.005 0.568 -0.009 0.993 #> 597     -0.914     -1.003      TRUE -0.088 0.551 -0.160 0.873 #> 598     -0.097     -0.722      TRUE -0.625 0.501 -1.247 0.213 #> 599     -0.118      0.737      TRUE  0.855 0.517  1.654 0.098 #> 600     -0.269      0.290      TRUE  0.560 0.492  1.138 0.255 #> 601     -0.051      0.470      TRUE  0.521 0.499  1.044 0.296 #> 602      0.229      0.035      TRUE -0.194 0.489 -0.396 0.692 #> 603      0.730     -0.024      TRUE -0.754 0.517 -1.461 0.144 #> 604      0.195      0.251      TRUE  0.056 0.494  0.113  0.91 #> 605     -1.398     -1.004      TRUE  0.394 0.597  0.659  0.51 #> 606      0.921      0.746      TRUE -0.175 0.564 -0.310 0.757 #> 607     -1.645     -1.876      TRUE -0.230 0.719 -0.320 0.749 #> 608     -1.379     -1.598      TRUE -0.219 0.655 -0.335 0.738 #> 609     -0.672     -0.803      TRUE -0.131 0.521 -0.251 0.802 #> 610      1.000      0.050      TRUE -0.950 0.541 -1.757 0.079 #> 611     -0.460     -0.658      TRUE -0.197 0.503 -0.392 0.695 #> 612      0.731      1.691      TRUE  0.960 0.643  1.492 0.136 #> 613     -0.333      0.703      TRUE  1.036 0.516  2.007 0.045 #> 614      1.628      0.936      TRUE -0.692 0.650 -1.065 0.287 #> 615     -0.274     -0.716      TRUE -0.442 0.502 -0.880 0.379 #> 616      0.386      0.085      TRUE -0.301 0.496 -0.607 0.544 #> 617     -0.730     -1.334      TRUE -0.604 0.572 -1.057 0.291 #> 618     -0.234     -0.437      TRUE -0.203 0.489 -0.414 0.679 #> 619     -1.232     -1.502      TRUE -0.270 0.629 -0.430 0.667 #> 620     -0.462     -1.092      TRUE -0.629 0.536 -1.175  0.24 #> 621     -0.197      0.066      TRUE  0.264 0.485  0.544 0.586 #> 622      1.224      1.218      TRUE -0.006 0.631 -0.009 0.993 #> 623     -0.952     -1.432      TRUE -0.481 0.597 -0.805 0.421 #> 624      0.552      0.836      TRUE  0.284 0.544  0.522 0.602 #> 625      0.293      0.176      TRUE -0.116 0.495 -0.235 0.814 #> 626      0.716      0.549      TRUE -0.166 0.535 -0.311 0.756 #> 627     -0.985     -0.284      TRUE  0.702 0.522  1.345 0.179 #> 628     -0.589     -0.347      TRUE  0.242 0.497  0.487 0.626 #> 629      0.885     -0.024      TRUE -0.909 0.529 -1.717 0.086 #> 630     -1.492     -1.331      TRUE  0.161 0.637  0.252 0.801 #> 631     -1.367     -1.336      TRUE  0.031 0.624  0.050  0.96 #> 632     -0.279     -0.738      TRUE -0.459 0.503 -0.912 0.362 #> 633     -0.351     -0.966      TRUE -0.614 0.521 -1.179 0.239 #> 634      0.462      1.675      TRUE  1.213 0.627  1.934 0.053 #> 635      1.049      0.838      TRUE -0.211 0.582 -0.362 0.717 #> 636     -0.067      0.125      TRUE  0.191 0.485  0.394 0.693 #> 637     -1.318     -1.331      TRUE -0.013 0.618 -0.021 0.983 #> 638      0.704      0.759      TRUE  0.055 0.548  0.100  0.92 #> 639     -0.050     -0.640      TRUE -0.590 0.497 -1.187 0.235 #> 640     -1.609     -0.909      TRUE  0.700 0.616  1.136 0.256 #> 641      0.910      1.482      TRUE  0.572 0.632  0.906 0.365 #> 642     -0.929     -1.645      TRUE -0.716 0.623 -1.150  0.25 #> 643      0.375      0.565      TRUE  0.190 0.516  0.368 0.713 #> 644     -0.030     -0.471      TRUE -0.441 0.489 -0.902 0.367 #> 645     -1.407     -1.070      TRUE  0.337 0.603  0.559 0.576 #> 646     -1.002     -1.645      TRUE -0.644 0.628 -1.025 0.305 #> 647     -1.471     -0.696      TRUE  0.774 0.587  1.320 0.187 #> 648      0.116     -0.240      TRUE -0.356 0.486 -0.732 0.464 #> 649     -0.181     -0.067      TRUE  0.113 0.483  0.235 0.814 #> 650      1.453      1.254      TRUE -0.199 0.658 -0.302 0.763 #> 651     -0.322      0.054      TRUE  0.376 0.486  0.774 0.439 #> 652     -0.192     -0.175      TRUE  0.017 0.483  0.035 0.972 #> 653      1.345      1.379      TRUE  0.034 0.659  0.052 0.959 #> 654      0.965      0.397      TRUE -0.568 0.547 -1.037   0.3 #> 655      0.880      1.972      TRUE  1.091 0.687  1.589 0.112 #> 656     -0.197      0.812      TRUE  1.008 0.523  1.928 0.054 #> 657      0.507      0.640      TRUE  0.133 0.527  0.252 0.801 #> 658     -0.456      0.369      TRUE  0.825 0.500  1.651 0.099 #> 659      0.111      0.217      TRUE  0.105 0.490  0.214  0.83 #> 660      0.526      0.093      TRUE -0.433 0.504 -0.858 0.391 #> 661     -0.484     -0.488      TRUE -0.004 0.497 -0.009 0.993 #> 662     -0.289     -0.752      TRUE -0.462 0.505 -0.917 0.359 #> 663     -0.383     -0.813      TRUE -0.430 0.511 -0.842   0.4 #> 664      0.586     -0.004      TRUE -0.590 0.506 -1.166 0.244 #> 665      1.407      1.835      TRUE  0.428 0.714  0.600 0.549 #> 666     -0.147     -0.641      TRUE -0.493 0.497 -0.993 0.321 #> 667     -1.346     -1.312      TRUE  0.034 0.619  0.055 0.956 #> 668      1.019      0.311      TRUE -0.708 0.549 -1.290 0.197 #> 669     -0.522     -0.349      TRUE  0.173 0.494  0.351 0.726 #> 670      0.242      0.450      TRUE  0.208 0.504  0.413 0.679 #> 671      0.602      0.536      TRUE -0.066 0.526 -0.125 0.901 #> 672      1.255      2.251      TRUE  0.996 0.749  1.329 0.184 #> 673      0.594     -0.166      TRUE -0.760 0.507 -1.500 0.134 #> 674      0.757      1.190      TRUE  0.433 0.590  0.735 0.463 #> 675     -0.478     -1.432      TRUE -0.954 0.573 -1.664 0.096 #> 676     -0.020     -0.632      TRUE -0.612 0.497 -1.232 0.218 #> 677      0.100      0.436      TRUE  0.336 0.499  0.673 0.501 #> 678     -0.399     -0.212      TRUE  0.186 0.487  0.383 0.702 #> 679     -1.058     -0.412      TRUE  0.646 0.531  1.216 0.224 #> 680     -1.485     -1.023      TRUE  0.461 0.609  0.758 0.449 #> 681      0.618     -0.023      TRUE -0.642 0.508 -1.262 0.207 #> 682     -0.911      0.454      TRUE  1.366 0.529  2.583  0.01 #> 683     -0.943     -0.748      TRUE  0.195 0.536  0.365 0.715 #> 684     -0.153     -0.451      TRUE -0.297 0.489 -0.609 0.543 #> 685      0.573      0.336      TRUE -0.236 0.514 -0.459 0.646 #> 686      1.455      1.943      TRUE  0.489 0.730  0.669 0.503 #> 687      0.087      0.394      TRUE  0.308 0.497  0.619 0.536 #> 688     -0.881      0.082      TRUE  0.963 0.514  1.875 0.061 #> 689     -0.626     -1.032      TRUE -0.405 0.536 -0.756  0.45 #> 690     -1.139     -0.756      TRUE  0.383 0.553  0.693 0.488 #> 691      0.306      0.724      TRUE  0.418 0.524  0.798 0.425 #> 692     -0.600     -1.586      TRUE -0.986 0.597 -1.651 0.099 #> 693     -0.375      0.047      TRUE  0.422 0.487  0.867 0.386 #> 694      0.473      0.095      TRUE -0.378 0.501 -0.754 0.451 #> 695      0.439      1.029      TRUE  0.590 0.555  1.063 0.288 #> 696      1.005      1.040      TRUE  0.035 0.595  0.059 0.953 #> 697      1.188      0.386      TRUE -0.802 0.569 -1.410 0.159 #> 698     -1.365     -1.360      TRUE  0.005 0.626  0.009 0.993 #> 699      0.120      0.897      TRUE  0.777 0.532  1.459 0.144 #> 700      0.318      0.863      TRUE  0.544 0.535  1.017 0.309 #> 701     -1.233     -1.258      TRUE -0.024 0.602 -0.040 0.968 #> 702      2.251      2.251      TRUE  0.000 0.846  0.000     1 #> 703     -0.510      0.053      TRUE  0.563 0.492  1.144 0.252 #> 704     -0.246      0.674      TRUE  0.920 0.513  1.794 0.073 #> 705     -0.700     -0.621      TRUE  0.079 0.512  0.154 0.877 #> 706     -1.511     -1.302      TRUE  0.209 0.636  0.329 0.742 #> 707      0.660      1.191      TRUE  0.532 0.583  0.912 0.362 #> 708     -0.753     -0.508      TRUE  0.244 0.511  0.479 0.632 #> 709     -0.247     -0.295      TRUE -0.048 0.485 -0.098 0.922 #> 710      0.946      1.648      TRUE  0.702 0.653  1.075 0.282 #> 711     -1.351     -1.710      TRUE -0.359 0.666 -0.539  0.59 #> 712     -0.675     -0.852      TRUE -0.177 0.525 -0.338 0.736 #> 713     -0.774     -1.044      TRUE -0.271 0.546 -0.496  0.62 #> 714      0.994      1.190      TRUE  0.196 0.608  0.323 0.747 #> 715      0.364      0.165      TRUE -0.198 0.497 -0.399  0.69 #> 716     -0.221     -0.748      TRUE -0.527 0.503 -1.047 0.295 #> 717     -0.917     -1.552      TRUE -0.635 0.610 -1.042 0.297 #> 718     -1.316     -0.954      TRUE  0.362 0.584  0.619 0.536 #> 719     -1.452     -0.519      TRUE  0.933 0.577  1.618 0.106 #> 720     -1.091     -0.700      TRUE  0.391 0.546  0.717 0.473 #> 721      0.115      0.341      TRUE  0.226 0.495  0.456 0.648 #> 722      1.150      0.604      TRUE -0.545 0.576 -0.947 0.344 #> 723     -1.331     -1.588      TRUE -0.257 0.649 -0.397 0.692 #> 724      0.350     -0.218      TRUE -0.568 0.494 -1.151  0.25 #> 725      1.288      0.920      TRUE -0.368 0.612 -0.602 0.547 #> 726     -0.385     -0.273      TRUE  0.112 0.488  0.230 0.818 #> 727     -0.237     -0.068      TRUE  0.169 0.484  0.349 0.727 #> 728      1.148      0.463      TRUE -0.686 0.568 -1.207 0.227 #> 729      0.274      0.899      TRUE  0.625 0.537  1.164 0.244 #> 730     -0.951     -0.291      TRUE  0.660 0.519  1.272 0.203 #> 731     -0.694     -0.765      TRUE -0.071 0.520 -0.136 0.892 #> 732     -0.998     -1.260      TRUE -0.262 0.582 -0.450 0.653 #> 733     -0.256     -0.708      TRUE -0.452 0.501 -0.902 0.367 #> 734      1.626      1.972      TRUE  0.346 0.750  0.461 0.645 #> 735      0.051      0.112      TRUE  0.061 0.486  0.125   0.9 #> 736      0.096      0.421      TRUE  0.324 0.498  0.651 0.515 #> 737      1.656      2.251      TRUE  0.595 0.785  0.758 0.449 #> 738      0.272     -0.694      TRUE -0.966 0.506 -1.907 0.056 #> 739      1.389      1.258      TRUE -0.131 0.651 -0.202  0.84 #> 740     -1.185     -0.865      TRUE  0.320 0.564  0.567 0.571 #> 741      1.104      0.817      TRUE -0.287 0.585 -0.490 0.624 #> 742     -0.185     -0.140      TRUE  0.046 0.483  0.094 0.925 #> 743     -0.131     -0.676      TRUE -0.545 0.498 -1.094 0.274 #> 744      1.233      0.388      TRUE -0.845 0.574 -1.474  0.14 #> 745      0.780      0.590      TRUE -0.191 0.542 -0.352 0.725 #> 746     -0.401     -0.644      TRUE -0.242 0.501 -0.484 0.628 #> 747     -0.958     -0.052      TRUE  0.906 0.518  1.748  0.08 #> 748     -1.267     -1.689      TRUE -0.422 0.655 -0.644  0.52 #> 749     -0.809     -0.426      TRUE  0.383 0.511  0.749 0.454 #> 750      1.388      0.537      TRUE -0.851 0.597 -1.424 0.154 #> 751      1.039      0.947      TRUE -0.092 0.590 -0.156 0.876 #> 752     -0.873     -0.645      TRUE  0.228 0.525  0.435 0.664 #> 753      0.054      0.368      TRUE  0.314 0.495  0.635 0.526 #> 754      1.211      0.546      TRUE -0.665 0.579 -1.150  0.25 #> 755      0.403      0.377      TRUE -0.026 0.507 -0.051 0.959 #> 756      0.477      0.660      TRUE  0.183 0.527  0.348 0.728 #> 757      0.786     -0.051      TRUE -0.837 0.521 -1.607 0.108 #> 758      0.230      0.796      TRUE  0.566 0.527  1.075 0.282 #> 759     -1.689     -2.133      TRUE -0.444 0.759 -0.584 0.559 #> 760      0.546      1.315      TRUE  0.769 0.590  1.304 0.192 #> 761      1.398      1.943      TRUE  0.546 0.725  0.752 0.452 #> 762     -1.050     -1.094      TRUE -0.044 0.570 -0.078 0.938 #> 763      0.088     -0.505      TRUE -0.593 0.492 -1.205 0.228 #> 764      1.031      0.858      TRUE -0.173 0.582 -0.297 0.766 #> 765      0.042      0.302      TRUE  0.261 0.492  0.530 0.596 #> 766     -1.401     -1.627      TRUE -0.225 0.660 -0.341 0.733 #> 767      1.008      0.958      TRUE -0.050 0.588 -0.085 0.932 #> 768      0.830      0.473      TRUE -0.356 0.539 -0.661 0.509 #> 769      1.013      0.691      TRUE -0.323 0.568 -0.568  0.57 #> 770     -0.479     -1.255      TRUE -0.776 0.553 -1.405  0.16 #> 771     -0.433     -1.192      TRUE -0.759 0.545 -1.394 0.163 #> 772      0.939      0.778      TRUE -0.160 0.568 -0.283 0.778 #> 773      0.150      0.295      TRUE  0.145 0.494  0.293  0.77 #> 774     -1.588     -1.862      TRUE -0.274 0.711 -0.385   0.7 #> 775     -1.295     -0.605      TRUE  0.690 0.562  1.228 0.219 #> 776      1.087      1.207      TRUE  0.119 0.617  0.193 0.847 #> 777      0.733     -0.209      TRUE -0.942 0.517 -1.822 0.068 #> 778      0.778      0.789      TRUE  0.011 0.555  0.020 0.984 #> 779      0.808      0.567      TRUE -0.242 0.543 -0.446 0.656 #> 780      0.606      0.012      TRUE -0.594 0.508 -1.169 0.242 #> 781      0.687      0.170      TRUE -0.517 0.517 -1.002 0.316 #> 782     -0.809      0.563      TRUE  1.372 0.528  2.601 0.009 #> 783      0.268      0.415      TRUE  0.147 0.503  0.293 0.769 #> 784     -0.424     -0.242      TRUE  0.182 0.488  0.373 0.709 #> 785      1.459      1.152      TRUE -0.307 0.649 -0.473 0.636 #> 786      0.191      0.045      TRUE -0.146 0.488 -0.299 0.765 #> 787      0.403      0.141      TRUE -0.262 0.498 -0.525 0.599 #> 788     -0.539     -0.191      TRUE  0.348 0.492  0.708 0.479 #> 789     -1.439     -1.627      TRUE -0.187 0.664 -0.282 0.778 #> 790     -1.736     -1.300      TRUE  0.436 0.664  0.656 0.512 #> 791     -1.336     -0.285      TRUE  1.051 0.557  1.887 0.059 #> 792      0.858      1.046      TRUE  0.188 0.583  0.323 0.747 #> 793     -0.993     -0.467      TRUE  0.526 0.527  0.999 0.318 #> 794      0.828      1.307      TRUE  0.479 0.607  0.789  0.43 #> 795      1.013      0.538      TRUE -0.475 0.559 -0.849 0.396 #> 796     -0.323     -0.472      TRUE -0.149 0.491 -0.304 0.761 #> 797     -0.558     -1.119      TRUE -0.561 0.542 -1.036   0.3 #> 798     -0.556     -0.604      TRUE -0.047 0.504 -0.094 0.925 #> 799      0.116     -0.123      TRUE -0.239 0.485 -0.493 0.622 #> 800     -0.155      0.220      TRUE  0.375 0.488  0.768 0.442 #> 801     -0.631     -1.284      TRUE -0.653 0.562 -1.163 0.245 #> 802     -0.420     -1.459      TRUE -1.040 0.575 -1.809  0.07 #> 803     -0.146     -0.121      TRUE  0.025 0.483  0.053 0.958 #> 804      1.320      0.787      TRUE -0.532 0.605 -0.880 0.379 #> 805     -0.598     -0.409      TRUE  0.189 0.499  0.379 0.705 #> 806      0.749      0.563      TRUE -0.186 0.538 -0.346 0.729 #> 807     -0.713      0.396      TRUE  1.109 0.513  2.163 0.031 #> 808     -0.561     -0.246      TRUE  0.315 0.494  0.639 0.523 #> 809      1.482      1.382      TRUE -0.100 0.673 -0.149 0.882 #> 810     -1.365     -0.660      TRUE  0.705 0.572  1.233 0.218 #> 811      1.035      1.486      TRUE  0.451 0.642  0.703 0.482 #> 812      0.053      0.095      TRUE  0.041 0.486  0.085 0.933 #> 813     -0.428     -1.645      TRUE -1.218 0.600 -2.031 0.042 #> 814      0.435      0.622      TRUE  0.187 0.522  0.359  0.72 #> 815     -0.318     -0.056      TRUE  0.262 0.485  0.540 0.589 #> 816     -0.273     -0.448      TRUE -0.175 0.490 -0.358 0.721 #> 817      1.041     -0.706      TRUE -1.747 0.559 -3.125 0.002 #> 818      0.108      0.189      TRUE  0.081 0.489  0.165 0.869 #> 819     -0.085      0.660      TRUE  0.745 0.511  1.459 0.145 #> 820     -0.566     -0.836      TRUE -0.270 0.518 -0.522 0.602 #> 821      0.455      0.427      TRUE -0.028 0.512 -0.054 0.957 #> 822     -0.163      0.496      TRUE  0.659 0.501  1.316 0.188 #> 823     -1.139     -1.117      TRUE  0.022 0.580  0.037  0.97 #> 824      1.382      1.691      TRUE  0.309 0.695  0.445 0.657 #> 825     -0.600     -0.701      TRUE -0.101 0.511 -0.197 0.844 #> 826     -0.806     -0.478      TRUE  0.329 0.513  0.641 0.521 #> 827      0.879      0.730      TRUE -0.148 0.559 -0.266 0.791 #> 828     -1.219     -0.412      TRUE  0.807 0.547  1.476  0.14 #> 829     -1.225     -1.329      TRUE -0.104 0.609 -0.171 0.864 #> 830      2.251      1.221      TRUE -1.029 0.746 -1.379 0.168 #> 831     -0.259     -0.839      TRUE -0.580 0.510 -1.138 0.255 #> 832      0.500      1.441      TRUE  0.941 0.601  1.565 0.118 #> 833      0.840      0.970      TRUE  0.131 0.575  0.227  0.82 #> 834      1.077      1.403      TRUE  0.327 0.636  0.513 0.608 #> 835     -0.578     -0.846      TRUE -0.268 0.520 -0.515 0.606 #> 836      1.234      1.145      TRUE -0.089 0.625 -0.143 0.887 #> 837     -0.229     -0.177      TRUE  0.053 0.484  0.109 0.913 #> 838      0.014      1.194      TRUE  1.180 0.560  2.108 0.035 #> 839     -0.100      0.305      TRUE  0.405 0.491  0.825  0.41 #> 840      1.207      1.266      TRUE  0.059 0.634  0.092 0.926 #> 841      0.806      0.971      TRUE  0.165 0.573  0.289 0.773 #> 842      0.451      0.358      TRUE -0.093 0.508 -0.183 0.855 #> 843      1.013      1.078      TRUE  0.065 0.599  0.109 0.913 #> 844     -0.058     -0.353      TRUE -0.294 0.486 -0.606 0.544 #> 845      0.221     -0.099      TRUE -0.320 0.488 -0.655 0.513 #> 846      0.114      0.463      TRUE  0.349 0.501  0.697 0.486 #> 847     -0.330     -0.571      TRUE -0.241 0.496 -0.486 0.627 #> 848     -0.461     -1.397      TRUE -0.936 0.568 -1.646   0.1 #> 849     -0.883     -0.892      TRUE -0.009 0.540 -0.017 0.986 #> 850      1.913      1.113      TRUE -0.799 0.697 -1.147 0.251 #> 851      0.872      0.853      TRUE -0.019 0.568 -0.033 0.973 #> 852      0.494     -0.364      TRUE -0.858 0.503 -1.705 0.088 #> 853     -0.079      0.008      TRUE  0.087 0.483  0.179 0.858 #> 854     -0.475     -0.220      TRUE  0.255 0.490  0.520 0.603 #> 855     -0.148     -0.304      TRUE -0.156 0.485 -0.322 0.747 #> 856      0.442      0.549      TRUE  0.106 0.518  0.206 0.837 #> 857      0.031     -0.432      TRUE -0.463 0.489 -0.946 0.344 #> 858      0.520     -0.123      TRUE -0.643 0.502 -1.281   0.2 #> 859      0.007      0.026      TRUE  0.018 0.484  0.038  0.97 #> 860     -0.936     -0.471      TRUE  0.465 0.522  0.890 0.374 #> 861     -0.997     -1.183      TRUE -0.186 0.574 -0.324 0.746 #> 862      0.455      0.660      TRUE  0.205 0.526  0.390 0.696 #> 863     -1.265     -0.726      TRUE  0.538 0.564  0.954  0.34 #> 864     -0.363     -0.956      TRUE -0.593 0.521 -1.139 0.255 #> 865      0.074      0.378      TRUE  0.304 0.496  0.614 0.539 #> 866      0.482      0.477      TRUE -0.005 0.516 -0.010 0.992 #> 867     -0.050     -0.009      TRUE  0.041 0.483  0.084 0.933 #> 868      0.435      0.509      TRUE  0.074 0.515  0.144 0.885 #> 869     -0.075     -0.572      TRUE -0.497 0.493 -1.008 0.313 #> 870      0.613      0.563      TRUE -0.050 0.528 -0.095 0.924 #> 871      0.563      0.482      TRUE -0.081 0.521 -0.155 0.877 #> 872     -0.196     -0.026      TRUE  0.169 0.483  0.350 0.726 #> 873     -1.876     -1.854      TRUE  0.022 0.744  0.029 0.977 #> 874     -0.394      0.301      TRUE  0.695 0.495  1.405  0.16 #> 875      0.727      1.040      TRUE  0.313 0.573  0.547 0.585 #> 876     -0.108     -0.295      TRUE -0.187 0.484 -0.386 0.699 #> 877      1.165      1.296      TRUE  0.131 0.633  0.206 0.837 #> 878      0.629      0.789      TRUE  0.160 0.545  0.293 0.769 #> 879     -0.390     -0.092      TRUE  0.298 0.487  0.612  0.54 #> 880     -0.691     -1.325      TRUE -0.633 0.569 -1.113 0.266 #> 881     -0.745     -1.503      TRUE -0.758 0.593 -1.279 0.201 #> 882     -0.548     -0.050      TRUE  0.498 0.492  1.012 0.311 #> 883      0.196      0.117      TRUE -0.078 0.490 -0.160 0.873 #> 884     -0.735     -0.782      TRUE -0.047 0.523 -0.091 0.928 #> 885      0.730      0.629      TRUE -0.101 0.541 -0.187 0.852 #> 886     -1.062     -0.461      TRUE  0.601 0.533  1.128 0.259 #> 887     -1.097     -0.144      TRUE  0.953 0.530  1.796 0.073 #> 888     -0.074     -0.490      TRUE -0.415 0.490 -0.848 0.396 #> 889     -1.638     -0.667      TRUE  0.971 0.607  1.600  0.11 #> 890      0.941      0.240      TRUE -0.701 0.539 -1.300 0.193 #> 891     -0.018     -0.610      TRUE -0.592 0.495 -1.195 0.232 #> 892      0.188      0.162      TRUE -0.026 0.491 -0.053 0.958 #> 893      1.411      1.249      TRUE -0.162 0.653 -0.248 0.804 #> 894      0.318      0.314      TRUE -0.003 0.500 -0.007 0.995 #> 895     -0.233      0.079      TRUE  0.312 0.485  0.643  0.52 #> 896      1.000      0.554      TRUE -0.445 0.559 -0.797 0.425 #> 897      1.345      1.205      TRUE -0.140 0.642 -0.218 0.827 #> 898     -0.526     -0.170      TRUE  0.356 0.491  0.725 0.468 #> 899     -0.024     -0.351      TRUE -0.326 0.486 -0.672 0.502 #> 900     -0.598     -0.895      TRUE -0.297 0.524 -0.567 0.571 #> 901     -0.600     -0.714      TRUE -0.114 0.512 -0.223 0.824 #> 902      1.254      1.972      TRUE  0.718 0.716  1.004 0.316 #> 903      1.261      1.943      TRUE  0.682 0.713  0.957 0.339 #> 904      0.351     -0.065      TRUE -0.416 0.493 -0.844 0.399 #> 905     -0.637     -0.612      TRUE  0.026 0.508  0.050  0.96 #> 906      1.880      2.251      TRUE  0.371 0.807  0.459 0.646 #> 907      0.911      0.285      TRUE -0.626 0.538 -1.164 0.245 #> 908     -0.016     -0.820      TRUE -0.803 0.508 -1.582 0.114 #> 909     -1.645     -2.133      TRUE -0.487 0.754 -0.646 0.518 #> 910      1.420      0.067      TRUE -1.353 0.585 -2.311 0.021 #> 911     -1.644     -2.133      TRUE -0.488 0.754 -0.647 0.517 #> 912      2.251      1.425      TRUE -0.825 0.764 -1.080  0.28 #> 913     -1.081     -1.503      TRUE -0.422 0.616 -0.686 0.493 #> 914      1.152      1.361      TRUE  0.208 0.639  0.326 0.744 #> 915      0.771      1.055      TRUE  0.284 0.578  0.491 0.623 #> 916      1.599      0.643      TRUE -0.956 0.627 -1.525 0.127 #> 917      1.040      1.413      TRUE  0.373 0.634  0.588 0.557 #> 918      0.986      1.519      TRUE  0.533 0.641  0.831 0.406 #> 919      0.638      0.057      TRUE -0.581 0.511 -1.137 0.255 #> 920      0.248     -0.197      TRUE -0.444 0.489 -0.908 0.364 #> 921     -0.914     -1.408      TRUE -0.494 0.592 -0.835 0.404 #> 922     -0.454      0.094      TRUE  0.547 0.491  1.116 0.264 #> 923      0.330      0.111      TRUE -0.219 0.494 -0.442 0.658 #> 924      1.650      1.589      TRUE -0.062 0.711 -0.087 0.931 #> 925     -0.898     -0.861      TRUE  0.037 0.539  0.069 0.945 #> 926      1.972      1.814      TRUE -0.158 0.770 -0.205 0.838 #> 927     -0.490     -0.761      TRUE -0.271 0.510 -0.532 0.595 #> 928     -0.261     -1.052      TRUE -0.791 0.527 -1.500 0.134 #> 929      0.965      1.972      TRUE  1.007 0.693  1.454 0.146 #> 930      0.869     -0.077      TRUE -0.946 0.528 -1.794 0.073 #> 931      0.353      0.208      TRUE -0.145 0.498 -0.291 0.771 #> 932      0.358      0.091      TRUE -0.267 0.495 -0.540 0.589 #> 933      0.426      0.718      TRUE  0.291 0.528  0.551 0.581 #> 934     -0.155     -0.759      TRUE -0.604 0.504 -1.199 0.231 #> 935      0.768      0.876      TRUE  0.108 0.562  0.192 0.848 #> 936     -0.530     -0.519      TRUE  0.011 0.500  0.021 0.983 #> 937     -0.749     -0.721      TRUE  0.028 0.520  0.054 0.957 #> 938     -0.231     -0.155      TRUE  0.076 0.484  0.158 0.875 #> 939     -1.279     -1.645      TRUE -0.367 0.651 -0.564 0.573 #> 940      0.243      0.142      TRUE -0.101 0.492 -0.205 0.838 #> 941      0.559      0.936      TRUE  0.377 0.553  0.682 0.495 #> 942      0.670      0.744      TRUE  0.075 0.544  0.137 0.891 #> 943      0.261     -0.270      TRUE -0.531 0.491 -1.083 0.279 #> 944      0.843      0.495      TRUE -0.348 0.542 -0.642 0.521 #> 945      0.042      0.335      TRUE  0.293 0.493  0.593 0.553 #> 946      0.263      0.241      TRUE -0.022 0.495 -0.045 0.964 #> 947      0.355     -0.018      TRUE -0.373 0.494 -0.755  0.45 #> 948      0.052      0.581      TRUE  0.529 0.507  1.043 0.297 #> 949     -1.795     -1.470      TRUE  0.325 0.689  0.472 0.637 #> 950     -0.394      0.473      TRUE  0.867 0.503  1.724 0.085 #> 951     -0.390     -0.468      TRUE -0.078 0.493 -0.159 0.874 #> 952      0.982      0.348      TRUE -0.633 0.547 -1.158 0.247 #> 953     -0.554     -1.070      TRUE -0.516 0.537 -0.961 0.337 #> 954     -1.586     -0.702      TRUE  0.884 0.602  1.470 0.142 #> 955     -0.619     -0.916      TRUE -0.297 0.527 -0.564 0.573 #> 956     -1.292     -1.290      TRUE  0.002 0.611  0.004 0.997 #> 957     -0.987     -0.726      TRUE  0.261 0.538  0.484 0.628 #> 958     -0.629     -0.651      TRUE -0.023 0.510 -0.044 0.965 #> 959      0.723      1.451      TRUE  0.728 0.615  1.183 0.237 #> 960     -0.701     -0.579      TRUE  0.122 0.510  0.239 0.811 #> 961     -1.264     -1.638      TRUE -0.374 0.648 -0.577 0.564 #> 962      0.443      0.162      TRUE -0.281 0.501 -0.560 0.576 #> 963     -0.730     -1.011      TRUE -0.280 0.540 -0.519 0.603 #> 964      1.458      0.276      TRUE -1.182 0.594 -1.988 0.047 #> 965     -0.922     -0.508      TRUE  0.414 0.522  0.793 0.428 #> 966      0.580      1.124      TRUE  0.544 0.572  0.951 0.341 #> 967      1.076      1.167      TRUE  0.091 0.613  0.149 0.882 #> 968      0.439     -0.218      TRUE -0.657 0.498 -1.320 0.187 #> 969      0.935      0.495      TRUE -0.440 0.549 -0.801 0.423 #> 970      0.737      1.210      TRUE  0.473 0.590  0.801 0.423 #> 971     -0.743     -0.472      TRUE  0.271 0.509  0.534 0.594 #> 972      1.208      1.205      TRUE -0.003 0.628 -0.004 0.996 #> 973     -1.259     -1.821      TRUE -0.562 0.672 -0.836 0.403 #> 974     -0.829     -0.870      TRUE -0.042 0.535 -0.078 0.938 #> 975     -0.389     -1.197      TRUE -0.809 0.544 -1.487 0.137 #> 976      0.547      0.480      TRUE -0.067 0.520 -0.129 0.897 #> 977     -0.060      0.378      TRUE  0.438 0.494  0.886 0.375 #> 978     -1.503     -0.950      TRUE  0.553 0.606  0.913 0.361 #> 979     -1.418     -0.196      TRUE  1.222 0.566  2.159 0.031 #> 980     -0.032     -0.002      TRUE  0.030 0.484  0.062 0.951 #> 981     -0.993     -1.649      TRUE -0.656 0.627 -1.046 0.295 #> 982     -0.526     -1.183      TRUE -0.657 0.547 -1.202 0.229 #> 983      1.334      0.407      TRUE -0.928 0.585 -1.585 0.113 #> 984      1.506      1.064      TRUE -0.443 0.646 -0.685 0.494 #> 985      1.254      0.239      TRUE -1.015 0.570 -1.779 0.075 #> 986     -0.725     -1.319      TRUE -0.594 0.570 -1.042 0.297 #> 987      0.685      0.698      TRUE  0.013 0.542  0.024 0.981 #> 988      0.141     -0.361      TRUE -0.502 0.489 -1.027 0.304 #> 989     -1.366      0.469      TRUE  1.835 0.573  3.201 0.001 #> 990     -0.193      0.204      TRUE  0.397 0.488  0.814 0.416 #> 991      0.140     -0.560      TRUE -0.700 0.496 -1.413 0.158 #> 992      0.246      0.044      TRUE -0.202 0.490 -0.411 0.681 #> 993     -0.439     -0.614      TRUE -0.176 0.500 -0.351 0.726 #> 994     -1.649     -1.018      TRUE  0.631 0.629  1.003 0.316 #> 995      0.107     -0.521      TRUE -0.628 0.493 -1.273 0.203 #> 996     -0.003     -0.821      TRUE -0.818 0.508 -1.611 0.107 #> 997     -0.394     -0.621      TRUE -0.227 0.499 -0.454  0.65 #> 998      0.065      0.413      TRUE  0.348 0.497  0.699 0.485 #> 999      0.198     -0.517      TRUE -0.715 0.495 -1.443 0.149 #> 1000    -1.854     -1.519      TRUE  0.335 0.702  0.477 0.633  # single response pattern change using EAP information RCI(mod, predat=dat_pre[1,], postdat=dat_post[1,]) #>   pre.score post.score converged  diff    SE     z     p #> 1     1.714       1.97      TRUE 0.256 0.759 0.337 0.736  # WLE estimator with Fisher information for SE (see Jabrayilov et al. 2016) RCI(mod, predat = dat_pre[1,], postdat = dat_post[1,],     method = 'WLE', Fisher = TRUE) #>   pre.score post.score converged  diff    SE     z     p #> 1     2.161      2.769      TRUE 0.609 1.199 0.508 0.612  # multiple respondents RCI(mod, predat = dat_pre[1:6,], postdat = dat_post[1:6,]) #>   pre.score post.score converged   diff    SE      z     p #> 1     1.714      1.970      TRUE  0.256 0.759  0.337 0.736 #> 2     1.406     -0.120      TRUE -1.526 0.582 -2.620 0.009 #> 3     0.960     -0.150      TRUE -1.111 0.536 -2.073 0.038 #> 4     0.302      0.202      TRUE -0.100 0.496 -0.202  0.84 #> 5    -0.973     -0.906      TRUE  0.067 0.548  0.122 0.903 #> 6    -0.797     -0.298      TRUE  0.499 0.508  0.983 0.326  # include large-sample z-type cutoffs RCI(mod, predat = dat_pre[1:6,], postdat = dat_post[1:6,],     cutoffs = c(-1.96, 1.96)) #>   pre.score post.score converged   diff    SE      z     p cut_decision #> 1     1.714      1.970      TRUE  0.256 0.759  0.337 0.736    unchanged #> 2     1.406     -0.120      TRUE -1.526 0.582 -2.620 0.009    decreased #> 3     0.960     -0.150      TRUE -1.111 0.536 -2.073 0.038    decreased #> 4     0.302      0.202      TRUE -0.100 0.496 -0.202  0.84    unchanged #> 5    -0.973     -0.906      TRUE  0.067 0.548  0.122 0.903    unchanged #> 6    -0.797     -0.298      TRUE  0.499 0.508  0.983 0.326    unchanged  ###### # CTT version by omitting IRT model     # Requires either sample or population SEM's as input (istats <- itemstats(dat_pre)$overall) #>     N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  1000            9.785          4.846 0.214 0.065 0.846     1.901 SEM.alpha <- istats$SEM.alpha    # SEM estimate of dat_pre  # assumes SEM.post = SEM.pre RCI(predat = dat_pre, postdat = dat_post, SEM.pre=SEM.alpha) #>      pre.score post.score diff    SE      z     p #> 1           18         19    1 2.688  0.372  0.71 #> 2           18          9   -9 2.688 -3.349 0.001 #> 3           15          9   -6 2.688 -2.232 0.026 #> 4           11         10   -1 2.688 -0.372  0.71 #> 5            4          5    1 2.688  0.372  0.71 #> 6            4          8    4 2.688  1.488 0.137 #> 7           11          8   -3 2.688 -1.116 0.264 #> 8           11         15    4 2.688  1.488 0.137 #> 9            3          3    0 2.688  0.000     1 #> 10           4          8    4 2.688  1.488 0.137 #> 11           1          5    4 2.688  1.488 0.137 #> 12          16         14   -2 2.688 -0.744 0.457 #> 13          12         10   -2 2.688 -0.744 0.457 #> 14          11         10   -1 2.688 -0.372  0.71 #> 15          17         18    1 2.688  0.372  0.71 #> 16           1          4    3 2.688  1.116 0.264 #> 17          10          8   -2 2.688 -0.744 0.457 #> 18          12         11   -1 2.688 -0.372  0.71 #> 19          15         12   -3 2.688 -1.116 0.264 #> 20          16         10   -6 2.688 -2.232 0.026 #> 21           7          6   -1 2.688 -0.372  0.71 #> 22           7         12    5 2.688  1.860 0.063 #> 23           2          4    2 2.688  0.744 0.457 #> 24           5          7    2 2.688  0.744 0.457 #> 25          14         15    1 2.688  0.372  0.71 #> 26           9          6   -3 2.688 -1.116 0.264 #> 27          17         17    0 2.688  0.000     1 #> 28           4          9    5 2.688  1.860 0.063 #> 29          14         16    2 2.688  0.744 0.457 #> 30           4          7    3 2.688  1.116 0.264 #> 31           2          0   -2 2.688 -0.744 0.457 #> 32           9          6   -3 2.688 -1.116 0.264 #> 33          20         20    0 2.688  0.000     1 #> 34           9          6   -3 2.688 -1.116 0.264 #> 35           3          4    1 2.688  0.372  0.71 #> 36          14         15    1 2.688  0.372  0.71 #> 37           8          9    1 2.688  0.372  0.71 #> 38          15         13   -2 2.688 -0.744 0.457 #> 39           9         12    3 2.688  1.116 0.264 #> 40          18         18    0 2.688  0.000     1 #> 41          11         10   -1 2.688 -0.372  0.71 #> 42          12          9   -3 2.688 -1.116 0.264 #> 43           8          7   -1 2.688 -0.372  0.71 #> 44          10         11    1 2.688  0.372  0.71 #> 45           7         10    3 2.688  1.116 0.264 #> 46           8          9    1 2.688  0.372  0.71 #> 47           6          8    2 2.688  0.744 0.457 #> 48           6          7    1 2.688  0.372  0.71 #> 49           6          8    2 2.688  0.744 0.457 #> 50           8         11    3 2.688  1.116 0.264 #> 51          13         17    4 2.688  1.488 0.137 #> 52           6          6    0 2.688  0.000     1 #> 53          19         13   -6 2.688 -2.232 0.026 #> 54           6         11    5 2.688  1.860 0.063 #> 55           9          8   -1 2.688 -0.372  0.71 #> 56           7          8    1 2.688  0.372  0.71 #> 57           9          6   -3 2.688 -1.116 0.264 #> 58           3          3    0 2.688  0.000     1 #> 59          10          8   -2 2.688 -0.744 0.457 #> 60          14         14    0 2.688  0.000     1 #> 61          12         12    0 2.688  0.000     1 #> 62          15         14   -1 2.688 -0.372  0.71 #> 63          13         12   -1 2.688 -0.372  0.71 #> 64           5          5    0 2.688  0.000     1 #> 65           5          4   -1 2.688 -0.372  0.71 #> 66           5          4   -1 2.688 -0.372  0.71 #> 67          18         14   -4 2.688 -1.488 0.137 #> 68           9          8   -1 2.688 -0.372  0.71 #> 69          11          9   -2 2.688 -0.744 0.457 #> 70          19         17   -2 2.688 -0.744 0.457 #> 71           9          5   -4 2.688 -1.488 0.137 #> 72          16         15   -1 2.688 -0.372  0.71 #> 73          10          9   -1 2.688 -0.372  0.71 #> 74          11         11    0 2.688  0.000     1 #> 75          14         10   -4 2.688 -1.488 0.137 #> 76          14         15    1 2.688  0.372  0.71 #> 77           5          4   -1 2.688 -0.372  0.71 #> 78          11          9   -2 2.688 -0.744 0.457 #> 79          15         10   -5 2.688 -1.860 0.063 #> 80          11         11    0 2.688  0.000     1 #> 81          10          8   -2 2.688 -0.744 0.457 #> 82          12         12    0 2.688  0.000     1 #> 83          11         11    0 2.688  0.000     1 #> 84           5          1   -4 2.688 -1.488 0.137 #> 85           7          9    2 2.688  0.744 0.457 #> 86           7         10    3 2.688  1.116 0.264 #> 87           3          7    4 2.688  1.488 0.137 #> 88           9         11    2 2.688  0.744 0.457 #> 89           8          9    1 2.688  0.372  0.71 #> 90          12         11   -1 2.688 -0.372  0.71 #> 91           6          1   -5 2.688 -1.860 0.063 #> 92           6          8    2 2.688  0.744 0.457 #> 93           3          5    2 2.688  0.744 0.457 #> 94          12         12    0 2.688  0.000     1 #> 95          18         16   -2 2.688 -0.744 0.457 #> 96           9          7   -2 2.688 -0.744 0.457 #> 97           8         11    3 2.688  1.116 0.264 #> 98           7          7    0 2.688  0.000     1 #> 99          12         11   -1 2.688 -0.372  0.71 #> 100         10         10    0 2.688  0.000     1 #> 101          5          5    0 2.688  0.000     1 #> 102         14         15    1 2.688  0.372  0.71 #> 103          9          9    0 2.688  0.000     1 #> 104          8         15    7 2.688  2.604 0.009 #> 105          2          3    1 2.688  0.372  0.71 #> 106          7         10    3 2.688  1.116 0.264 #> 107         12         12    0 2.688  0.000     1 #> 108          2          2    0 2.688  0.000     1 #> 109         14         13   -1 2.688 -0.372  0.71 #> 110          6          4   -2 2.688 -0.744 0.457 #> 111         15         10   -5 2.688 -1.860 0.063 #> 112          5          5    0 2.688  0.000     1 #> 113         15         18    3 2.688  1.116 0.264 #> 114          2          0   -2 2.688 -0.744 0.457 #> 115          9         12    3 2.688  1.116 0.264 #> 116         14         14    0 2.688  0.000     1 #> 117         10          7   -3 2.688 -1.116 0.264 #> 118          6          5   -1 2.688 -0.372  0.71 #> 119         12          9   -3 2.688 -1.116 0.264 #> 120          7          3   -4 2.688 -1.488 0.137 #> 121          9         12    3 2.688  1.116 0.264 #> 122          2          6    4 2.688  1.488 0.137 #> 123          9          6   -3 2.688 -1.116 0.264 #> 124          2          5    3 2.688  1.116 0.264 #> 125         12         12    0 2.688  0.000     1 #> 126         16         19    3 2.688  1.116 0.264 #> 127         13         14    1 2.688  0.372  0.71 #> 128         13         14    1 2.688  0.372  0.71 #> 129         14         15    1 2.688  0.372  0.71 #> 130          7         14    7 2.688  2.604 0.009 #> 131         10         11    1 2.688  0.372  0.71 #> 132          3          3    0 2.688  0.000     1 #> 133         15         15    0 2.688  0.000     1 #> 134         18         19    1 2.688  0.372  0.71 #> 135          2          5    3 2.688  1.116 0.264 #> 136         12         10   -2 2.688 -0.744 0.457 #> 137         12         14    2 2.688  0.744 0.457 #> 138          6          3   -3 2.688 -1.116 0.264 #> 139         13          9   -4 2.688 -1.488 0.137 #> 140          8          5   -3 2.688 -1.116 0.264 #> 141         18         17   -1 2.688 -0.372  0.71 #> 142         15         15    0 2.688  0.000     1 #> 143          7          9    2 2.688  0.744 0.457 #> 144         14         10   -4 2.688 -1.488 0.137 #> 145          3          5    2 2.688  0.744 0.457 #> 146          1          2    1 2.688  0.372  0.71 #> 147          5          6    1 2.688  0.372  0.71 #> 148          8          8    0 2.688  0.000     1 #> 149         13         15    2 2.688  0.744 0.457 #> 150          9          9    0 2.688  0.000     1 #> 151          8          9    1 2.688  0.372  0.71 #> 152          2          1   -1 2.688 -0.372  0.71 #> 153          3          3    0 2.688  0.000     1 #> 154          7          5   -2 2.688 -0.744 0.457 #> 155         16         13   -3 2.688 -1.116 0.264 #> 156          9         12    3 2.688  1.116 0.264 #> 157         15         17    2 2.688  0.744 0.457 #> 158         10          5   -5 2.688 -1.860 0.063 #> 159          8         10    2 2.688  0.744 0.457 #> 160         17         11   -6 2.688 -2.232 0.026 #> 161         14          8   -6 2.688 -2.232 0.026 #> 162          8          8    0 2.688  0.000     1 #> 163          3          5    2 2.688  0.744 0.457 #> 164         16          8   -8 2.688 -2.976 0.003 #> 165          9          7   -2 2.688 -0.744 0.457 #> 166          7          8    1 2.688  0.372  0.71 #> 167         15         15    0 2.688  0.000     1 #> 168         15         18    3 2.688  1.116 0.264 #> 169          3          2   -1 2.688 -0.372  0.71 #> 170          1          2    1 2.688  0.372  0.71 #> 171          2          0   -2 2.688 -0.744 0.457 #> 172         20         15   -5 2.688 -1.860 0.063 #> 173         10         12    2 2.688  0.744 0.457 #> 174          9          3   -6 2.688 -2.232 0.026 #> 175          5         15   10 2.688  3.721     0 #> 176          9          7   -2 2.688 -0.744 0.457 #> 177         15         16    1 2.688  0.372  0.71 #> 178          2          5    3 2.688  1.116 0.264 #> 179         18         20    2 2.688  0.744 0.457 #> 180         10          8   -2 2.688 -0.744 0.457 #> 181          6          6    0 2.688  0.000     1 #> 182          3          5    2 2.688  0.744 0.457 #> 183          9          7   -2 2.688 -0.744 0.457 #> 184          7         10    3 2.688  1.116 0.264 #> 185          6          3   -3 2.688 -1.116 0.264 #> 186          7          5   -2 2.688 -0.744 0.457 #> 187          7          4   -3 2.688 -1.116 0.264 #> 188         10          9   -1 2.688 -0.372  0.71 #> 189         17         12   -5 2.688 -1.860 0.063 #> 190          2          4    2 2.688  0.744 0.457 #> 191         16         15   -1 2.688 -0.372  0.71 #> 192          6          9    3 2.688  1.116 0.264 #> 193         10         13    3 2.688  1.116 0.264 #> 194          2          7    5 2.688  1.860 0.063 #> 195          5          3   -2 2.688 -0.744 0.457 #> 196         12          8   -4 2.688 -1.488 0.137 #> 197          5          1   -4 2.688 -1.488 0.137 #> 198          5          2   -3 2.688 -1.116 0.264 #> 199         17         17    0 2.688  0.000     1 #> 200          4          2   -2 2.688 -0.744 0.457 #> 201         13         13    0 2.688  0.000     1 #> 202         14         12   -2 2.688 -0.744 0.457 #> 203          2          2    0 2.688  0.000     1 #> 204         11          9   -2 2.688 -0.744 0.457 #> 205         10         11    1 2.688  0.372  0.71 #> 206         13         11   -2 2.688 -0.744 0.457 #> 207         17         18    1 2.688  0.372  0.71 #> 208         14         15    1 2.688  0.372  0.71 #> 209         18         18    0 2.688  0.000     1 #> 210          2          0   -2 2.688 -0.744 0.457 #> 211          9         11    2 2.688  0.744 0.457 #> 212         10         12    2 2.688  0.744 0.457 #> 213         16         14   -2 2.688 -0.744 0.457 #> 214          2          2    0 2.688  0.000     1 #> 215          3          4    1 2.688  0.372  0.71 #> 216         15         17    2 2.688  0.744 0.457 #> 217         14         12   -2 2.688 -0.744 0.457 #> 218          3          5    2 2.688  0.744 0.457 #> 219          9          8   -1 2.688 -0.372  0.71 #> 220          0          1    1 2.688  0.372  0.71 #> 221         14         12   -2 2.688 -0.744 0.457 #> 222          2          1   -1 2.688 -0.372  0.71 #> 223          5         10    5 2.688  1.860 0.063 #> 224          8         15    7 2.688  2.604 0.009 #> 225         12         14    2 2.688  0.744 0.457 #> 226         14         14    0 2.688  0.000     1 #> 227         11         11    0 2.688  0.000     1 #> 228          9          9    0 2.688  0.000     1 #> 229         17         15   -2 2.688 -0.744 0.457 #> 230          2          2    0 2.688  0.000     1 #> 231          6          9    3 2.688  1.116 0.264 #> 232          9         14    5 2.688  1.860 0.063 #> 233         13         13    0 2.688  0.000     1 #> 234         13         17    4 2.688  1.488 0.137 #> 235         13          6   -7 2.688 -2.604 0.009 #> 236          8          8    0 2.688  0.000     1 #> 237          8          9    1 2.688  0.372  0.71 #> 238          6         12    6 2.688  2.232 0.026 #> 239          9          9    0 2.688  0.000     1 #> 240          7         12    5 2.688  1.860 0.063 #> 241         18         18    0 2.688  0.000     1 #> 242          4          3   -1 2.688 -0.372  0.71 #> 243          1          2    1 2.688  0.372  0.71 #> 244          3          1   -2 2.688 -0.744 0.457 #> 245          6          5   -1 2.688 -0.372  0.71 #> 246          4          4    0 2.688  0.000     1 #> 247         17         17    0 2.688  0.000     1 #> 248         20         18   -2 2.688 -0.744 0.457 #> 249          8         10    2 2.688  0.744 0.457 #> 250         15         18    3 2.688  1.116 0.264 #> 251         15         13   -2 2.688 -0.744 0.457 #> 252          8          8    0 2.688  0.000     1 #> 253          8          8    0 2.688  0.000     1 #> 254         11         13    2 2.688  0.744 0.457 #> 255         18         16   -2 2.688 -0.744 0.457 #> 256         10         11    1 2.688  0.372  0.71 #> 257         18         16   -2 2.688 -0.744 0.457 #> 258         10         11    1 2.688  0.372  0.71 #> 259          4          3   -1 2.688 -0.372  0.71 #> 260         11         14    3 2.688  1.116 0.264 #> 261         14         11   -3 2.688 -1.116 0.264 #> 262         14         13   -1 2.688 -0.372  0.71 #> 263         19         17   -2 2.688 -0.744 0.457 #> 264          4          6    2 2.688  0.744 0.457 #> 265         17         17    0 2.688  0.000     1 #> 266          9         12    3 2.688  1.116 0.264 #> 267          4          7    3 2.688  1.116 0.264 #> 268         15         12   -3 2.688 -1.116 0.264 #> 269          7          7    0 2.688  0.000     1 #> 270          8         11    3 2.688  1.116 0.264 #> 271          1          2    1 2.688  0.372  0.71 #> 272          8          6   -2 2.688 -0.744 0.457 #> 273          6          6    0 2.688  0.000     1 #> 274         17         16   -1 2.688 -0.372  0.71 #> 275         13         11   -2 2.688 -0.744 0.457 #> 276          2          1   -1 2.688 -0.372  0.71 #> 277          9         10    1 2.688  0.372  0.71 #> 278          2          0   -2 2.688 -0.744 0.457 #> 279         11         13    2 2.688  0.744 0.457 #> 280         17         17    0 2.688  0.000     1 #> 281         16         16    0 2.688  0.000     1 #> 282         14         15    1 2.688  0.372  0.71 #> 283         15         16    1 2.688  0.372  0.71 #> 284          4          1   -3 2.688 -1.116 0.264 #> 285         17         18    1 2.688  0.372  0.71 #> 286         10          7   -3 2.688 -1.116 0.264 #> 287         12         15    3 2.688  1.116 0.264 #> 288         15         17    2 2.688  0.744 0.457 #> 289         17         15   -2 2.688 -0.744 0.457 #> 290         14         11   -3 2.688 -1.116 0.264 #> 291         15         12   -3 2.688 -1.116 0.264 #> 292         10         10    0 2.688  0.000     1 #> 293          0          2    2 2.688  0.744 0.457 #> 294         12          8   -4 2.688 -1.488 0.137 #> 295          4          7    3 2.688  1.116 0.264 #> 296         15         15    0 2.688  0.000     1 #> 297         18         17   -1 2.688 -0.372  0.71 #> 298          9          7   -2 2.688 -0.744 0.457 #> 299         18         12   -6 2.688 -2.232 0.026 #> 300          0          1    1 2.688  0.372  0.71 #> 301          4         11    7 2.688  2.604 0.009 #> 302         10          8   -2 2.688 -0.744 0.457 #> 303          5          2   -3 2.688 -1.116 0.264 #> 304         19         17   -2 2.688 -0.744 0.457 #> 305         11          6   -5 2.688 -1.860 0.063 #> 306         15         15    0 2.688  0.000     1 #> 307         10         12    2 2.688  0.744 0.457 #> 308         11          8   -3 2.688 -1.116 0.264 #> 309         10          7   -3 2.688 -1.116 0.264 #> 310          8          6   -2 2.688 -0.744 0.457 #> 311         14         15    1 2.688  0.372  0.71 #> 312         16         11   -5 2.688 -1.860 0.063 #> 313          6          4   -2 2.688 -0.744 0.457 #> 314         11         11    0 2.688  0.000     1 #> 315          7          7    0 2.688  0.000     1 #> 316          9         11    2 2.688  0.744 0.457 #> 317          7         11    4 2.688  1.488 0.137 #> 318          1          5    4 2.688  1.488 0.137 #> 319         10          9   -1 2.688 -0.372  0.71 #> 320         13         10   -3 2.688 -1.116 0.264 #> 321         13         10   -3 2.688 -1.116 0.264 #> 322         13          9   -4 2.688 -1.488 0.137 #> 323          1          2    1 2.688  0.372  0.71 #> 324         13         13    0 2.688  0.000     1 #> 325         13         13    0 2.688  0.000     1 #> 326         13         13    0 2.688  0.000     1 #> 327          7          6   -1 2.688 -0.372  0.71 #> 328          9         12    3 2.688  1.116 0.264 #> 329         13         13    0 2.688  0.000     1 #> 330          6         14    8 2.688  2.976 0.003 #> 331         12         14    2 2.688  0.744 0.457 #> 332          9          5   -4 2.688 -1.488 0.137 #> 333         13         12   -1 2.688 -0.372  0.71 #> 334         13         14    1 2.688  0.372  0.71 #> 335          9         11    2 2.688  0.744 0.457 #> 336         10          9   -1 2.688 -0.372  0.71 #> 337         12         13    1 2.688  0.372  0.71 #> 338         16         14   -2 2.688 -0.744 0.457 #> 339          6         10    4 2.688  1.488 0.137 #> 340         17         15   -2 2.688 -0.744 0.457 #> 341         12         14    2 2.688  0.744 0.457 #> 342          6          5   -1 2.688 -0.372  0.71 #> 343          5          9    4 2.688  1.488 0.137 #> 344          5          4   -1 2.688 -0.372  0.71 #> 345          6          9    3 2.688  1.116 0.264 #> 346         12          8   -4 2.688 -1.488 0.137 #> 347         12         13    1 2.688  0.372  0.71 #> 348          8         11    3 2.688  1.116 0.264 #> 349          5          6    1 2.688  0.372  0.71 #> 350         11         12    1 2.688  0.372  0.71 #> 351          9          7   -2 2.688 -0.744 0.457 #> 352         18         16   -2 2.688 -0.744 0.457 #> 353          9         11    2 2.688  0.744 0.457 #> 354          4          3   -1 2.688 -0.372  0.71 #> 355         12         17    5 2.688  1.860 0.063 #> 356         16         15   -1 2.688 -0.372  0.71 #> 357          9         13    4 2.688  1.488 0.137 #> 358         10          7   -3 2.688 -1.116 0.264 #> 359          1          3    2 2.688  0.744 0.457 #> 360         10         12    2 2.688  0.744 0.457 #> 361          5          5    0 2.688  0.000     1 #> 362         13         15    2 2.688  0.744 0.457 #> 363          9         12    3 2.688  1.116 0.264 #> 364         13         14    1 2.688  0.372  0.71 #> 365          9          5   -4 2.688 -1.488 0.137 #> 366         17         17    0 2.688  0.000     1 #> 367          4          2   -2 2.688 -0.744 0.457 #> 368         12          9   -3 2.688 -1.116 0.264 #> 369          3         10    7 2.688  2.604 0.009 #> 370         12         12    0 2.688  0.000     1 #> 371         14         18    4 2.688  1.488 0.137 #> 372         10         11    1 2.688  0.372  0.71 #> 373          7          9    2 2.688  0.744 0.457 #> 374          4          6    2 2.688  0.744 0.457 #> 375         10          5   -5 2.688 -1.860 0.063 #> 376         16         14   -2 2.688 -0.744 0.457 #> 377         15         15    0 2.688  0.000     1 #> 378         13         12   -1 2.688 -0.372  0.71 #> 379          0          3    3 2.688  1.116 0.264 #> 380          7          8    1 2.688  0.372  0.71 #> 381          6          7    1 2.688  0.372  0.71 #> 382          6          6    0 2.688  0.000     1 #> 383          6          8    2 2.688  0.744 0.457 #> 384          4          4    0 2.688  0.000     1 #> 385          3          4    1 2.688  0.372  0.71 #> 386          2          7    5 2.688  1.860 0.063 #> 387          9          9    0 2.688  0.000     1 #> 388         19         14   -5 2.688 -1.860 0.063 #> 389          3          6    3 2.688  1.116 0.264 #> 390          0          2    2 2.688  0.744 0.457 #> 391         15         14   -1 2.688 -0.372  0.71 #> 392         11          4   -7 2.688 -2.604 0.009 #> 393          5          6    1 2.688  0.372  0.71 #> 394          2          1   -1 2.688 -0.372  0.71 #> 395          7         13    6 2.688  2.232 0.026 #> 396         13         11   -2 2.688 -0.744 0.457 #> 397         15         14   -1 2.688 -0.372  0.71 #> 398          2          4    2 2.688  0.744 0.457 #> 399         13          6   -7 2.688 -2.604 0.009 #> 400         15          9   -6 2.688 -2.232 0.026 #> 401          7          8    1 2.688  0.372  0.71 #> 402          3          3    0 2.688  0.000     1 #> 403          9         12    3 2.688  1.116 0.264 #> 404         17         17    0 2.688  0.000     1 #> 405          1          4    3 2.688  1.116 0.264 #> 406          4          2   -2 2.688 -0.744 0.457 #> 407          7         10    3 2.688  1.116 0.264 #> 408          7         11    4 2.688  1.488 0.137 #> 409         12         12    0 2.688  0.000     1 #> 410          8          6   -2 2.688 -0.744 0.457 #> 411          8          4   -4 2.688 -1.488 0.137 #> 412         14         11   -3 2.688 -1.116 0.264 #> 413          5          3   -2 2.688 -0.744 0.457 #> 414         16         17    1 2.688  0.372  0.71 #> 415         11         15    4 2.688  1.488 0.137 #> 416         15         12   -3 2.688 -1.116 0.264 #> 417         14         15    1 2.688  0.372  0.71 #> 418          5          6    1 2.688  0.372  0.71 #> 419          5         10    5 2.688  1.860 0.063 #> 420         10         13    3 2.688  1.116 0.264 #> 421          3          2   -1 2.688 -0.372  0.71 #> 422         17         17    0 2.688  0.000     1 #> 423         11         11    0 2.688  0.000     1 #> 424         14         13   -1 2.688 -0.372  0.71 #> 425         16          9   -7 2.688 -2.604 0.009 #> 426         15         16    1 2.688  0.372  0.71 #> 427         11          7   -4 2.688 -1.488 0.137 #> 428          8         11    3 2.688  1.116 0.264 #> 429         13         13    0 2.688  0.000     1 #> 430         10         10    0 2.688  0.000     1 #> 431         15         14   -1 2.688 -0.372  0.71 #> 432          1          4    3 2.688  1.116 0.264 #> 433          3          3    0 2.688  0.000     1 #> 434         11         15    4 2.688  1.488 0.137 #> 435          3          4    1 2.688  0.372  0.71 #> 436          6         11    5 2.688  1.860 0.063 #> 437          2          0   -2 2.688 -0.744 0.457 #> 438         13         14    1 2.688  0.372  0.71 #> 439         18         14   -4 2.688 -1.488 0.137 #> 440          6         13    7 2.688  2.604 0.009 #> 441         14         12   -2 2.688 -0.744 0.457 #> 442          4          5    1 2.688  0.372  0.71 #> 443         10          9   -1 2.688 -0.372  0.71 #> 444         18         18    0 2.688  0.000     1 #> 445         17         16   -1 2.688 -0.372  0.71 #> 446         16         17    1 2.688  0.372  0.71 #> 447          0          0    0 2.688  0.000     1 #> 448         12         10   -2 2.688 -0.744 0.457 #> 449          4          7    3 2.688  1.116 0.264 #> 450          1          4    3 2.688  1.116 0.264 #> 451         19         18   -1 2.688 -0.372  0.71 #> 452          8          5   -3 2.688 -1.116 0.264 #> 453          8         11    3 2.688  1.116 0.264 #> 454          5          9    4 2.688  1.488 0.137 #> 455         18         17   -1 2.688 -0.372  0.71 #> 456         12         11   -1 2.688 -0.372  0.71 #> 457          5          9    4 2.688  1.488 0.137 #> 458          2          5    3 2.688  1.116 0.264 #> 459          1          2    1 2.688  0.372  0.71 #> 460         19         18   -1 2.688 -0.372  0.71 #> 461         15         17    2 2.688  0.744 0.457 #> 462         17         13   -4 2.688 -1.488 0.137 #> 463         13         15    2 2.688  0.744 0.457 #> 464         14         14    0 2.688  0.000     1 #> 465          6          9    3 2.688  1.116 0.264 #> 466          9          5   -4 2.688 -1.488 0.137 #> 467         16         15   -1 2.688 -0.372  0.71 #> 468          3          2   -1 2.688 -0.372  0.71 #> 469          1          7    6 2.688  2.232 0.026 #> 470         13         10   -3 2.688 -1.116 0.264 #> 471          5          4   -1 2.688 -0.372  0.71 #> 472          6          7    1 2.688  0.372  0.71 #> 473         20         19   -1 2.688 -0.372  0.71 #> 474          7          9    2 2.688  0.744 0.457 #> 475          1          1    0 2.688  0.000     1 #> 476         15         13   -2 2.688 -0.744 0.457 #> 477         16         11   -5 2.688 -1.860 0.063 #> 478         16         12   -4 2.688 -1.488 0.137 #> 479         11         10   -1 2.688 -0.372  0.71 #> 480         15         16    1 2.688  0.372  0.71 #> 481          7          8    1 2.688  0.372  0.71 #> 482         15         12   -3 2.688 -1.116 0.264 #> 483         15         16    1 2.688  0.372  0.71 #> 484         12         11   -1 2.688 -0.372  0.71 #> 485         12         10   -2 2.688 -0.744 0.457 #> 486          5          8    3 2.688  1.116 0.264 #> 487          8         12    4 2.688  1.488 0.137 #> 488         11         13    2 2.688  0.744 0.457 #> 489         16         17    1 2.688  0.372  0.71 #> 490          7          8    1 2.688  0.372  0.71 #> 491         19         18   -1 2.688 -0.372  0.71 #> 492          4          5    1 2.688  0.372  0.71 #> 493         19         16   -3 2.688 -1.116 0.264 #> 494          8          9    1 2.688  0.372  0.71 #> 495         10         15    5 2.688  1.860 0.063 #> 496          6          7    1 2.688  0.372  0.71 #> 497         11          8   -3 2.688 -1.116 0.264 #> 498          3          9    6 2.688  2.232 0.026 #> 499          8          8    0 2.688  0.000     1 #> 500          7         11    4 2.688  1.488 0.137 #> 501         13         16    3 2.688  1.116 0.264 #> 502         11         10   -1 2.688 -0.372  0.71 #> 503          0          1    1 2.688  0.372  0.71 #> 504          4          5    1 2.688  0.372  0.71 #> 505          4          6    2 2.688  0.744 0.457 #> 506         12         10   -2 2.688 -0.744 0.457 #> 507         18         16   -2 2.688 -0.744 0.457 #> 508         13         14    1 2.688  0.372  0.71 #> 509          5          7    2 2.688  0.744 0.457 #> 510          8         10    2 2.688  0.744 0.457 #> 511          6         10    4 2.688  1.488 0.137 #> 512          7          9    2 2.688  0.744 0.457 #> 513          5          5    0 2.688  0.000     1 #> 514          5         10    5 2.688  1.860 0.063 #> 515          9         11    2 2.688  0.744 0.457 #> 516         17         17    0 2.688  0.000     1 #> 517         14         13   -1 2.688 -0.372  0.71 #> 518          8         15    7 2.688  2.604 0.009 #> 519         14         14    0 2.688  0.000     1 #> 520         13          8   -5 2.688 -1.860 0.063 #> 521         14         12   -2 2.688 -0.744 0.457 #> 522          6          2   -4 2.688 -1.488 0.137 #> 523         17         14   -3 2.688 -1.116 0.264 #> 524         13         13    0 2.688  0.000     1 #> 525         14         14    0 2.688  0.000     1 #> 526         16         12   -4 2.688 -1.488 0.137 #> 527         12         10   -2 2.688 -0.744 0.457 #> 528         15         16    1 2.688  0.372  0.71 #> 529         13         10   -3 2.688 -1.116 0.264 #> 530          9         10    1 2.688  0.372  0.71 #> 531         12          7   -5 2.688 -1.860 0.063 #> 532         20         20    0 2.688  0.000     1 #> 533         17         12   -5 2.688 -1.860 0.063 #> 534          6          8    2 2.688  0.744 0.457 #> 535         19         18   -1 2.688 -0.372  0.71 #> 536         12         12    0 2.688  0.000     1 #> 537         10          7   -3 2.688 -1.116 0.264 #> 538          6          4   -2 2.688 -0.744 0.457 #> 539          8          8    0 2.688  0.000     1 #> 540         10         12    2 2.688  0.744 0.457 #> 541          4          7    3 2.688  1.116 0.264 #> 542          2          2    0 2.688  0.000     1 #> 543          6          5   -1 2.688 -0.372  0.71 #> 544         12         10   -2 2.688 -0.744 0.457 #> 545          4          5    1 2.688  0.372  0.71 #> 546         11         10   -1 2.688 -0.372  0.71 #> 547         14         12   -2 2.688 -0.744 0.457 #> 548         13         15    2 2.688  0.744 0.457 #> 549         12          9   -3 2.688 -1.116 0.264 #> 550         11         11    0 2.688  0.000     1 #> 551          8          2   -6 2.688 -2.232 0.026 #> 552         14         15    1 2.688  0.372  0.71 #> 553         11         14    3 2.688  1.116 0.264 #> 554         13         12   -1 2.688 -0.372  0.71 #> 555          2          3    1 2.688  0.372  0.71 #> 556          9         13    4 2.688  1.488 0.137 #> 557         10         11    1 2.688  0.372  0.71 #> 558          8         12    4 2.688  1.488 0.137 #> 559         11         12    1 2.688  0.372  0.71 #> 560         19         18   -1 2.688 -0.372  0.71 #> 561         12         12    0 2.688  0.000     1 #> 562         12          8   -4 2.688 -1.488 0.137 #> 563          3          6    3 2.688  1.116 0.264 #> 564          4          0   -4 2.688 -1.488 0.137 #> 565         14         14    0 2.688  0.000     1 #> 566          3          4    1 2.688  0.372  0.71 #> 567         18         16   -2 2.688 -0.744 0.457 #> 568          3          2   -1 2.688 -0.372  0.71 #> 569         17         19    2 2.688  0.744 0.457 #> 570         10          8   -2 2.688 -0.744 0.457 #> 571         16         13   -3 2.688 -1.116 0.264 #> 572          8          8    0 2.688  0.000     1 #> 573         15         17    2 2.688  0.744 0.457 #> 574          7         12    5 2.688  1.860 0.063 #> 575          6          2   -4 2.688 -1.488 0.137 #> 576         11         14    3 2.688  1.116 0.264 #> 577         13         12   -1 2.688 -0.372  0.71 #> 578         17         14   -3 2.688 -1.116 0.264 #> 579          5          9    4 2.688  1.488 0.137 #> 580         12         17    5 2.688  1.860 0.063 #> 581         11         10   -1 2.688 -0.372  0.71 #> 582          6         12    6 2.688  2.232 0.026 #> 583         11         13    2 2.688  0.744 0.457 #> 584         16         18    2 2.688  0.744 0.457 #> 585          8          6   -2 2.688 -0.744 0.457 #> 586          7          9    2 2.688  0.744 0.457 #> 587         12         11   -1 2.688 -0.372  0.71 #> 588          9          7   -2 2.688 -0.744 0.457 #> 589          9          6   -3 2.688 -1.116 0.264 #> 590         14         13   -1 2.688 -0.372  0.71 #> 591         15         15    0 2.688  0.000     1 #> 592         19         15   -4 2.688 -1.488 0.137 #> 593          6          7    1 2.688  0.372  0.71 #> 594          4          3   -1 2.688 -0.372  0.71 #> 595          4          6    2 2.688  0.744 0.457 #> 596          4          3   -1 2.688 -0.372  0.71 #> 597          4          4    0 2.688  0.000     1 #> 598         10          6   -4 2.688 -1.488 0.137 #> 599          8         14    6 2.688  2.232 0.026 #> 600          9         12    3 2.688  1.116 0.264 #> 601         10         12    2 2.688  0.744 0.457 #> 602         12          9   -3 2.688 -1.116 0.264 #> 603         13          9   -4 2.688 -1.488 0.137 #> 604         11         11    0 2.688  0.000     1 #> 605          2          4    2 2.688  0.744 0.457 #> 606         16         14   -2 2.688 -0.744 0.457 #> 607          2          1   -1 2.688 -0.372  0.71 #> 608          3          2   -1 2.688 -0.372  0.71 #> 609          6          4   -2 2.688 -0.744 0.457 #> 610         15         11   -4 2.688 -1.488 0.137 #> 611          7          6   -1 2.688 -0.372  0.71 #> 612         14         18    4 2.688  1.488 0.137 #> 613          7         14    7 2.688  2.604 0.009 #> 614         18         14   -4 2.688 -1.488 0.137 #> 615          9          6   -3 2.688 -1.116 0.264 #> 616         11         11    0 2.688  0.000     1 #> 617          6          2   -4 2.688 -1.488 0.137 #> 618         10          7   -3 2.688 -1.116 0.264 #> 619          3          2   -1 2.688 -0.372  0.71 #> 620          8          4   -4 2.688 -1.488 0.137 #> 621          8         10    2 2.688  0.744 0.457 #> 622         16         16    0 2.688  0.000     1 #> 623          4          2   -2 2.688 -0.744 0.457 #> 624         13         15    2 2.688  0.744 0.457 #> 625         11         11    0 2.688  0.000     1 #> 626         14         13   -1 2.688 -0.372  0.71 #> 627          4          8    4 2.688  1.488 0.137 #> 628          6          8    2 2.688  0.744 0.457 #> 629         15          9   -6 2.688 -2.232 0.026 #> 630          2          3    1 2.688  0.372  0.71 #> 631          2          3    1 2.688  0.372  0.71 #> 632          8          6   -2 2.688 -0.744 0.457 #> 633          8          4   -4 2.688 -1.488 0.137 #> 634         12         18    6 2.688  2.232 0.026 #> 635         15         15    0 2.688  0.000     1 #> 636         10         10    0 2.688  0.000     1 #> 637          3          3    0 2.688  0.000     1 #> 638         14         15    1 2.688  0.372  0.71 #> 639          9          6   -3 2.688 -1.116 0.264 #> 640          2          5    3 2.688  1.116 0.264 #> 641         14         17    3 2.688  1.116 0.264 #> 642          4          2   -2 2.688 -0.744 0.457 #> 643         12         13    1 2.688  0.372  0.71 #> 644         10          7   -3 2.688 -1.116 0.264 #> 645          3          4    1 2.688  0.372  0.71 #> 646          4          2   -2 2.688 -0.744 0.457 #> 647          2          6    4 2.688  1.488 0.137 #> 648         11          8   -3 2.688 -1.116 0.264 #> 649         10         10    0 2.688  0.000     1 #> 650         17         17    0 2.688  0.000     1 #> 651          8         10    2 2.688  0.744 0.457 #> 652          8          9    1 2.688  0.372  0.71 #> 653         17         17    0 2.688  0.000     1 #> 654         15         13   -2 2.688 -0.744 0.457 #> 655         14         19    5 2.688  1.860 0.063 #> 656         10         14    4 2.688  1.488 0.137 #> 657         12         13    1 2.688  0.372  0.71 #> 658          7         12    5 2.688  1.860 0.063 #> 659         11         12    1 2.688  0.372  0.71 #> 660         13         10   -3 2.688 -1.116 0.264 #> 661          7          7    0 2.688  0.000     1 #> 662          8          6   -2 2.688 -0.744 0.457 #> 663          7          5   -2 2.688 -0.744 0.457 #> 664         14         10   -4 2.688 -1.488 0.137 #> 665         17         19    2 2.688  0.744 0.457 #> 666          9          6   -3 2.688 -1.116 0.264 #> 667          3          3    0 2.688  0.000     1 #> 668         15         11   -4 2.688 -1.488 0.137 #> 669          7          8    1 2.688  0.372  0.71 #> 670         12         12    0 2.688  0.000     1 #> 671         13         13    0 2.688  0.000     1 #> 672         16         20    4 2.688  1.488 0.137 #> 673         13          9   -4 2.688 -1.488 0.137 #> 674         14         16    2 2.688  0.744 0.457 #> 675          7          2   -5 2.688 -1.860 0.063 #> 676         10          6   -4 2.688 -1.488 0.137 #> 677         10         12    2 2.688  0.744 0.457 #> 678          8          9    1 2.688  0.372  0.71 #> 679          4          7    3 2.688  1.116 0.264 #> 680          2          4    2 2.688  0.744 0.457 #> 681         13         10   -3 2.688 -1.116 0.264 #> 682          5         12    7 2.688  2.604 0.009 #> 683          5          6    1 2.688  0.372  0.71 #> 684         10          7   -3 2.688 -1.116 0.264 #> 685         13         12   -1 2.688 -0.372  0.71 #> 686         17         19    2 2.688  0.744 0.457 #> 687         11         12    1 2.688  0.372  0.71 #> 688          4         10    6 2.688  2.232 0.026 #> 689          6          4   -2 2.688 -0.744 0.457 #> 690          3          5    2 2.688  0.744 0.457 #> 691         11         14    3 2.688  1.116 0.264 #> 692          7          2   -5 2.688 -1.860 0.063 #> 693          8         10    2 2.688  0.744 0.457 #> 694         13         11   -2 2.688 -0.744 0.457 #> 695         13         16    3 2.688  1.116 0.264 #> 696         16         15   -1 2.688 -0.372  0.71 #> 697         16         12   -4 2.688 -1.488 0.137 #> 698          3          3    0 2.688  0.000     1 #> 699         12         15    3 2.688  1.116 0.264 #> 700         12         16    4 2.688  1.488 0.137 #> 701          3          3    0 2.688  0.000     1 #> 702         20         20    0 2.688  0.000     1 #> 703          7         10    3 2.688  1.116 0.264 #> 704          9         13    4 2.688  1.488 0.137 #> 705          5          7    2 2.688  0.744 0.457 #> 706          2          2    0 2.688  0.000     1 #> 707         13         16    3 2.688  1.116 0.264 #> 708          5          7    2 2.688  0.744 0.457 #> 709          8          7   -1 2.688 -0.372  0.71 #> 710         15         18    3 2.688  1.116 0.264 #> 711          3          1   -2 2.688 -0.744 0.457 #> 712          5          5    0 2.688  0.000     1 #> 713          5          3   -2 2.688 -0.744 0.457 #> 714         15         16    1 2.688  0.372  0.71 #> 715         12         10   -2 2.688 -0.744 0.457 #> 716          9          6   -3 2.688 -1.116 0.264 #> 717          5          2   -3 2.688 -1.116 0.264 #> 718          3          4    1 2.688  0.372  0.71 #> 719          2          6    4 2.688  1.488 0.137 #> 720          4          6    2 2.688  0.744 0.457 #> 721         10         12    2 2.688  0.744 0.457 #> 722         16         14   -2 2.688 -0.744 0.457 #> 723          3          2   -1 2.688 -0.372  0.71 #> 724         13          8   -5 2.688 -1.860 0.063 #> 725         17         15   -2 2.688 -0.744 0.457 #> 726          8          8    0 2.688  0.000     1 #> 727          8         10    2 2.688  0.744 0.457 #> 728         16         12   -4 2.688 -1.488 0.137 #> 729         11         15    4 2.688  1.488 0.137 #> 730          4          8    4 2.688  1.488 0.137 #> 731          5          6    1 2.688  0.372  0.71 #> 732          4          3   -1 2.688 -0.372  0.71 #> 733          8          6   -2 2.688 -0.744 0.457 #> 734         18         19    1 2.688  0.372  0.71 #> 735         10         11    1 2.688  0.372  0.71 #> 736         10         12    2 2.688  0.744 0.457 #> 737         18         20    2 2.688  0.744 0.457 #> 738         11          5   -6 2.688 -2.232 0.026 #> 739         17         17    0 2.688  0.000     1 #> 740          3          5    2 2.688  0.744 0.457 #> 741         15         15    0 2.688  0.000     1 #> 742          8          9    1 2.688  0.372  0.71 #> 743          9          5   -4 2.688 -1.488 0.137 #> 744         16         13   -3 2.688 -1.116 0.264 #> 745         14         13   -1 2.688 -0.372  0.71 #> 746          8          6   -2 2.688 -0.744 0.457 #> 747          5          9    4 2.688  1.488 0.137 #> 748          3          1   -2 2.688 -0.744 0.457 #> 749          6          7    1 2.688  0.372  0.71 #> 750         17         13   -4 2.688 -1.488 0.137 #> 751         15         15    0 2.688  0.000     1 #> 752          5          6    1 2.688  0.372  0.71 #> 753          9         11    2 2.688  0.744 0.457 #> 754         16         14   -2 2.688 -0.744 0.457 #> 755         12         12    0 2.688  0.000     1 #> 756         12         14    2 2.688  0.744 0.457 #> 757         14          9   -5 2.688 -1.860 0.063 #> 758         12         15    3 2.688  1.116 0.264 #> 759          1          0   -1 2.688 -0.372  0.71 #> 760         13         17    4 2.688  1.488 0.137 #> 761         17         19    2 2.688  0.744 0.457 #> 762          4          4    0 2.688  0.000     1 #> 763         10          7   -3 2.688 -1.116 0.264 #> 764         15         15    0 2.688  0.000     1 #> 765         10         12    2 2.688  0.744 0.457 #> 766          2          2    0 2.688  0.000     1 #> 767         16         16    0 2.688  0.000     1 #> 768         14         13   -1 2.688 -0.372  0.71 #> 769         15         15    0 2.688  0.000     1 #> 770          7          3   -4 2.688 -1.488 0.137 #> 771          7          3   -4 2.688 -1.488 0.137 #> 772         15         14   -1 2.688 -0.372  0.71 #> 773         11         12    1 2.688  0.372  0.71 #> 774          2          1   -1 2.688 -0.372  0.71 #> 775          3          7    4 2.688  1.488 0.137 #> 776         16         16    0 2.688  0.000     1 #> 777         14          9   -5 2.688 -1.860 0.063 #> 778         14         14    0 2.688  0.000     1 #> 779         14         13   -1 2.688 -0.372  0.71 #> 780         13          9   -4 2.688 -1.488 0.137 #> 781         13         11   -2 2.688 -0.744 0.457 #> 782          5         13    8 2.688  2.976 0.003 #> 783         13         12   -1 2.688 -0.372  0.71 #> 784          8          7   -1 2.688 -0.372  0.71 #> 785         17         16   -1 2.688 -0.372  0.71 #> 786         10         11    1 2.688  0.372  0.71 #> 787         12         10   -2 2.688 -0.744 0.457 #> 788          7          9    2 2.688  0.744 0.457 #> 789          2          2    0 2.688  0.000     1 #> 790          1          3    2 2.688  0.744 0.457 #> 791          3          8    5 2.688  1.860 0.063 #> 792         14         16    2 2.688  0.744 0.457 #> 793          4          7    3 2.688  1.116 0.264 #> 794         15         17    2 2.688  0.744 0.457 #> 795         15         13   -2 2.688 -0.744 0.457 #> 796          7          8    1 2.688  0.372  0.71 #> 797          6          4   -2 2.688 -0.744 0.457 #> 798          7          6   -1 2.688 -0.372  0.71 #> 799         11          8   -3 2.688 -1.116 0.264 #> 800          8         12    4 2.688  1.488 0.137 #> 801          6          3   -3 2.688 -1.116 0.264 #> 802          7          2   -5 2.688 -1.860 0.063 #> 803          9          9    0 2.688  0.000     1 #> 804         17         14   -3 2.688 -1.116 0.264 #> 805          6          7    1 2.688  0.372  0.71 #> 806         14         13   -1 2.688 -0.372  0.71 #> 807          6         13    7 2.688  2.604 0.009 #> 808          7          9    2 2.688  0.744 0.457 #> 809         17         17    0 2.688  0.000     1 #> 810          3          6    3 2.688  1.116 0.264 #> 811         15         18    3 2.688  1.116 0.264 #> 812         10         10    0 2.688  0.000     1 #> 813          7          2   -5 2.688 -1.860 0.063 #> 814         13         14    1 2.688  0.372  0.71 #> 815          8         10    2 2.688  0.744 0.457 #> 816          7          7    0 2.688  0.000     1 #> 817         15          5  -10 2.688 -3.721     0 #> 818         11         11    0 2.688  0.000     1 #> 819          8         14    6 2.688  2.232 0.026 #> 820          7          5   -2 2.688 -0.744 0.457 #> 821         12         12    0 2.688  0.000     1 #> 822         10         13    3 2.688  1.116 0.264 #> 823          3          3    0 2.688  0.000     1 #> 824         17         18    1 2.688  0.372  0.71 #> 825          7          6   -1 2.688 -0.372  0.71 #> 826          5          7    2 2.688  0.744 0.457 #> 827         15         14   -1 2.688 -0.372  0.71 #> 828          3          7    4 2.688  1.488 0.137 #> 829          4          3   -1 2.688 -0.372  0.71 #> 830         20         17   -3 2.688 -1.116 0.264 #> 831          8          5   -3 2.688 -1.116 0.264 #> 832         13         18    5 2.688  1.860 0.063 #> 833         15         15    0 2.688  0.000     1 #> 834         16         17    1 2.688  0.372  0.71 #> 835          6          6    0 2.688  0.000     1 #> 836         16         16    0 2.688  0.000     1 #> 837          9          9    0 2.688  0.000     1 #> 838         10         16    6 2.688  2.232 0.026 #> 839         10         11    1 2.688  0.372  0.71 #> 840         16         17    1 2.688  0.372  0.71 #> 841         15         15    0 2.688  0.000     1 #> 842         13         13    0 2.688  0.000     1 #> 843         15         16    1 2.688  0.372  0.71 #> 844         10          7   -3 2.688 -1.116 0.264 #> 845         12          9   -3 2.688 -1.116 0.264 #> 846         12         12    0 2.688  0.000     1 #> 847          8          7   -1 2.688 -0.372  0.71 #> 848          7          3   -4 2.688 -1.488 0.137 #> 849          5          5    0 2.688  0.000     1 #> 850         19         16   -3 2.688 -1.116 0.264 #> 851         15         15    0 2.688  0.000     1 #> 852         13          8   -5 2.688 -1.860 0.063 #> 853          9         10    1 2.688  0.372  0.71 #> 854          8          8    0 2.688  0.000     1 #> 855          9          9    0 2.688  0.000     1 #> 856         12         13    1 2.688  0.372  0.71 #> 857         10          7   -3 2.688 -1.116 0.264 #> 858         13         10   -3 2.688 -1.116 0.264 #> 859         10          9   -1 2.688 -0.372  0.71 #> 860          5          8    3 2.688  1.116 0.264 #> 861          5          3   -2 2.688 -0.744 0.457 #> 862         13         14    1 2.688  0.372  0.71 #> 863          3          6    3 2.688  1.116 0.264 #> 864          8          4   -4 2.688 -1.488 0.137 #> 865         10         13    3 2.688  1.116 0.264 #> 866         12         12    0 2.688  0.000     1 #> 867          9         10    1 2.688  0.372  0.71 #> 868         11         13    2 2.688  0.744 0.457 #> 869         10          7   -3 2.688 -1.116 0.264 #> 870         13         13    0 2.688  0.000     1 #> 871         14         13   -1 2.688 -0.372  0.71 #> 872          8         10    2 2.688  0.744 0.457 #> 873          1          1    0 2.688  0.000     1 #> 874          7         13    6 2.688  2.232 0.026 #> 875         14         16    2 2.688  0.744 0.457 #> 876          9          8   -1 2.688 -0.372  0.71 #> 877         16         16    0 2.688  0.000     1 #> 878         14         15    1 2.688  0.372  0.71 #> 879          8         10    2 2.688  0.744 0.457 #> 880          6          2   -4 2.688 -1.488 0.137 #> 881          5          2   -3 2.688 -1.116 0.264 #> 882          6         10    4 2.688  1.488 0.137 #> 883         11         11    0 2.688  0.000     1 #> 884          6          5   -1 2.688 -0.372  0.71 #> 885         14         14    0 2.688  0.000     1 #> 886          3          7    4 2.688  1.488 0.137 #> 887          3          9    6 2.688  2.232 0.026 #> 888         10          7   -3 2.688 -1.116 0.264 #> 889          2          6    4 2.688  1.488 0.137 #> 890         15         11   -4 2.688 -1.488 0.137 #> 891         10          6   -4 2.688 -1.488 0.137 #> 892         10         10    0 2.688  0.000     1 #> 893         17         16   -1 2.688 -0.372  0.71 #> 894         11         12    1 2.688  0.372  0.71 #> 895          9         11    2 2.688  0.744 0.457 #> 896         15         13   -2 2.688 -0.744 0.457 #> 897         17         16   -1 2.688 -0.372  0.71 #> 898          7          9    2 2.688  0.744 0.457 #> 899         10          8   -2 2.688 -0.744 0.457 #> 900          6          5   -1 2.688 -0.372  0.71 #> 901          7          6   -1 2.688 -0.372  0.71 #> 902         16         19    3 2.688  1.116 0.264 #> 903         16         19    3 2.688  1.116 0.264 #> 904         12          9   -3 2.688 -1.116 0.264 #> 905          6          7    1 2.688  0.372  0.71 #> 906         19         20    1 2.688  0.372  0.71 #> 907         15         11   -4 2.688 -1.488 0.137 #> 908         10          5   -5 2.688 -1.860 0.063 #> 909          2          0   -2 2.688 -0.744 0.457 #> 910         18         10   -8 2.688 -2.976 0.003 #> 911          2          0   -2 2.688 -0.744 0.457 #> 912         20         17   -3 2.688 -1.116 0.264 #> 913          4          2   -2 2.688 -0.744 0.457 #> 914         16         17    1 2.688  0.372  0.71 #> 915         14         15    1 2.688  0.372  0.71 #> 916         18         13   -5 2.688 -1.860 0.063 #> 917         16         17    1 2.688  0.372  0.71 #> 918         15         18    3 2.688  1.116 0.264 #> 919         13         10   -3 2.688 -1.116 0.264 #> 920         11          8   -3 2.688 -1.116 0.264 #> 921          4          2   -2 2.688 -0.744 0.457 #> 922          6         10    4 2.688  1.488 0.137 #> 923         12         11   -1 2.688 -0.372  0.71 #> 924         18         18    0 2.688  0.000     1 #> 925          5          5    0 2.688  0.000     1 #> 926         19         19    0 2.688  0.000     1 #> 927          7          5   -2 2.688 -0.744 0.457 #> 928          9          3   -6 2.688 -2.232 0.026 #> 929         15         19    4 2.688  1.488 0.137 #> 930         15          9   -6 2.688 -2.232 0.026 #> 931         11         11    0 2.688  0.000     1 #> 932         12         10   -2 2.688 -0.744 0.457 #> 933         12         13    1 2.688  0.372  0.71 #> 934          9          6   -3 2.688 -1.116 0.264 #> 935         14         14    0 2.688  0.000     1 #> 936          6          7    1 2.688  0.372  0.71 #> 937          6          6    0 2.688  0.000     1 #> 938          8         10    2 2.688  0.744 0.457 #> 939          3          2   -1 2.688 -0.372  0.71 #> 940         11         10   -1 2.688 -0.372  0.71 #> 941         12         15    3 2.688  1.116 0.264 #> 942         13         14    1 2.688  0.372  0.71 #> 943         12          8   -4 2.688 -1.488 0.137 #> 944         15         13   -2 2.688 -0.744 0.457 #> 945         11         12    1 2.688  0.372  0.71 #> 946         11         11    0 2.688  0.000     1 #> 947         11         10   -1 2.688 -0.372  0.71 #> 948         10         13    3 2.688  1.116 0.264 #> 949          1          2    1 2.688  0.372  0.71 #> 950          7         12    5 2.688  1.860 0.063 #> 951          8          6   -2 2.688 -0.744 0.457 #> 952         15         12   -3 2.688 -1.116 0.264 #> 953          7          4   -3 2.688 -1.116 0.264 #> 954          2          6    4 2.688  1.488 0.137 #> 955          6          5   -1 2.688 -0.372  0.71 #> 956          3          3    0 2.688  0.000     1 #> 957          5          5    0 2.688  0.000     1 #> 958          6          6    0 2.688  0.000     1 #> 959         13         17    4 2.688  1.488 0.137 #> 960          6          7    1 2.688  0.372  0.71 #> 961          3          2   -1 2.688 -0.372  0.71 #> 962         12         11   -1 2.688 -0.372  0.71 #> 963          6          4   -2 2.688 -0.744 0.457 #> 964         17         12   -5 2.688 -1.860 0.063 #> 965          5          7    2 2.688  0.744 0.457 #> 966         13         16    3 2.688  1.116 0.264 #> 967         15         16    1 2.688  0.372  0.71 #> 968         12          9   -3 2.688 -1.116 0.264 #> 969         15         13   -2 2.688 -0.744 0.457 #> 970         14         16    2 2.688  0.744 0.457 #> 971          6          7    1 2.688  0.372  0.71 #> 972         16         16    0 2.688  0.000     1 #> 973          3          1   -2 2.688 -0.744 0.457 #> 974          5          5    0 2.688  0.000     1 #> 975          7          3   -4 2.688 -1.488 0.137 #> 976         13         13    0 2.688  0.000     1 #> 977         10         12    2 2.688  0.744 0.457 #> 978          2          4    2 2.688  0.744 0.457 #> 979          2          9    7 2.688  2.604 0.009 #> 980         10          9   -1 2.688 -0.372  0.71 #> 981          4          1   -3 2.688 -1.116 0.264 #> 982          7          4   -3 2.688 -1.116 0.264 #> 983         17         12   -5 2.688 -1.860 0.063 #> 984         18         16   -2 2.688 -0.744 0.457 #> 985         16         11   -5 2.688 -1.860 0.063 #> 986          5          3   -2 2.688 -0.744 0.457 #> 987         13         14    1 2.688  0.372  0.71 #> 988         11          8   -3 2.688 -1.116 0.264 #> 989          2         12   10 2.688  3.721     0 #> 990          9         11    2 2.688  0.744 0.457 #> 991         11          6   -5 2.688 -1.860 0.063 #> 992         11         10   -1 2.688 -0.372  0.71 #> 993          8          6   -2 2.688 -0.744 0.457 #> 994          1          4    3 2.688  1.116 0.264 #> 995         10          7   -3 2.688 -1.116 0.264 #> 996         11          5   -6 2.688 -2.232 0.026 #> 997          7          6   -1 2.688 -0.372  0.71 #> 998         10         12    2 2.688  0.744 0.457 #> 999         11          7   -4 2.688 -1.488 0.137 #> 1000         1          2    1 2.688  0.372  0.71  # include cutoffs RCI(predat = dat_pre, postdat = dat_post, SEM.pre=SEM.alpha,     cutoffs=c(-1.96, 1.96)) #>      pre.score post.score diff    SE      z     p cut_decision #> 1           18         19    1 2.688  0.372  0.71    unchanged #> 2           18          9   -9 2.688 -3.349 0.001    decreased #> 3           15          9   -6 2.688 -2.232 0.026    decreased #> 4           11         10   -1 2.688 -0.372  0.71    unchanged #> 5            4          5    1 2.688  0.372  0.71    unchanged #> 6            4          8    4 2.688  1.488 0.137    unchanged #> 7           11          8   -3 2.688 -1.116 0.264    unchanged #> 8           11         15    4 2.688  1.488 0.137    unchanged #> 9            3          3    0 2.688  0.000     1    unchanged #> 10           4          8    4 2.688  1.488 0.137    unchanged #> 11           1          5    4 2.688  1.488 0.137    unchanged #> 12          16         14   -2 2.688 -0.744 0.457    unchanged #> 13          12         10   -2 2.688 -0.744 0.457    unchanged #> 14          11         10   -1 2.688 -0.372  0.71    unchanged #> 15          17         18    1 2.688  0.372  0.71    unchanged #> 16           1          4    3 2.688  1.116 0.264    unchanged #> 17          10          8   -2 2.688 -0.744 0.457    unchanged #> 18          12         11   -1 2.688 -0.372  0.71    unchanged #> 19          15         12   -3 2.688 -1.116 0.264    unchanged #> 20          16         10   -6 2.688 -2.232 0.026    decreased #> 21           7          6   -1 2.688 -0.372  0.71    unchanged #> 22           7         12    5 2.688  1.860 0.063    unchanged #> 23           2          4    2 2.688  0.744 0.457    unchanged #> 24           5          7    2 2.688  0.744 0.457    unchanged #> 25          14         15    1 2.688  0.372  0.71    unchanged #> 26           9          6   -3 2.688 -1.116 0.264    unchanged #> 27          17         17    0 2.688  0.000     1    unchanged #> 28           4          9    5 2.688  1.860 0.063    unchanged #> 29          14         16    2 2.688  0.744 0.457    unchanged #> 30           4          7    3 2.688  1.116 0.264    unchanged #> 31           2          0   -2 2.688 -0.744 0.457    unchanged #> 32           9          6   -3 2.688 -1.116 0.264    unchanged #> 33          20         20    0 2.688  0.000     1    unchanged #> 34           9          6   -3 2.688 -1.116 0.264    unchanged #> 35           3          4    1 2.688  0.372  0.71    unchanged #> 36          14         15    1 2.688  0.372  0.71    unchanged #> 37           8          9    1 2.688  0.372  0.71    unchanged #> 38          15         13   -2 2.688 -0.744 0.457    unchanged #> 39           9         12    3 2.688  1.116 0.264    unchanged #> 40          18         18    0 2.688  0.000     1    unchanged #> 41          11         10   -1 2.688 -0.372  0.71    unchanged #> 42          12          9   -3 2.688 -1.116 0.264    unchanged #> 43           8          7   -1 2.688 -0.372  0.71    unchanged #> 44          10         11    1 2.688  0.372  0.71    unchanged #> 45           7         10    3 2.688  1.116 0.264    unchanged #> 46           8          9    1 2.688  0.372  0.71    unchanged #> 47           6          8    2 2.688  0.744 0.457    unchanged #> 48           6          7    1 2.688  0.372  0.71    unchanged #> 49           6          8    2 2.688  0.744 0.457    unchanged #> 50           8         11    3 2.688  1.116 0.264    unchanged #> 51          13         17    4 2.688  1.488 0.137    unchanged #> 52           6          6    0 2.688  0.000     1    unchanged #> 53          19         13   -6 2.688 -2.232 0.026    decreased #> 54           6         11    5 2.688  1.860 0.063    unchanged #> 55           9          8   -1 2.688 -0.372  0.71    unchanged #> 56           7          8    1 2.688  0.372  0.71    unchanged #> 57           9          6   -3 2.688 -1.116 0.264    unchanged #> 58           3          3    0 2.688  0.000     1    unchanged #> 59          10          8   -2 2.688 -0.744 0.457    unchanged #> 60          14         14    0 2.688  0.000     1    unchanged #> 61          12         12    0 2.688  0.000     1    unchanged #> 62          15         14   -1 2.688 -0.372  0.71    unchanged #> 63          13         12   -1 2.688 -0.372  0.71    unchanged #> 64           5          5    0 2.688  0.000     1    unchanged #> 65           5          4   -1 2.688 -0.372  0.71    unchanged #> 66           5          4   -1 2.688 -0.372  0.71    unchanged #> 67          18         14   -4 2.688 -1.488 0.137    unchanged #> 68           9          8   -1 2.688 -0.372  0.71    unchanged #> 69          11          9   -2 2.688 -0.744 0.457    unchanged #> 70          19         17   -2 2.688 -0.744 0.457    unchanged #> 71           9          5   -4 2.688 -1.488 0.137    unchanged #> 72          16         15   -1 2.688 -0.372  0.71    unchanged #> 73          10          9   -1 2.688 -0.372  0.71    unchanged #> 74          11         11    0 2.688  0.000     1    unchanged #> 75          14         10   -4 2.688 -1.488 0.137    unchanged #> 76          14         15    1 2.688  0.372  0.71    unchanged #> 77           5          4   -1 2.688 -0.372  0.71    unchanged #> 78          11          9   -2 2.688 -0.744 0.457    unchanged #> 79          15         10   -5 2.688 -1.860 0.063    unchanged #> 80          11         11    0 2.688  0.000     1    unchanged #> 81          10          8   -2 2.688 -0.744 0.457    unchanged #> 82          12         12    0 2.688  0.000     1    unchanged #> 83          11         11    0 2.688  0.000     1    unchanged #> 84           5          1   -4 2.688 -1.488 0.137    unchanged #> 85           7          9    2 2.688  0.744 0.457    unchanged #> 86           7         10    3 2.688  1.116 0.264    unchanged #> 87           3          7    4 2.688  1.488 0.137    unchanged #> 88           9         11    2 2.688  0.744 0.457    unchanged #> 89           8          9    1 2.688  0.372  0.71    unchanged #> 90          12         11   -1 2.688 -0.372  0.71    unchanged #> 91           6          1   -5 2.688 -1.860 0.063    unchanged #> 92           6          8    2 2.688  0.744 0.457    unchanged #> 93           3          5    2 2.688  0.744 0.457    unchanged #> 94          12         12    0 2.688  0.000     1    unchanged #> 95          18         16   -2 2.688 -0.744 0.457    unchanged #> 96           9          7   -2 2.688 -0.744 0.457    unchanged #> 97           8         11    3 2.688  1.116 0.264    unchanged #> 98           7          7    0 2.688  0.000     1    unchanged #> 99          12         11   -1 2.688 -0.372  0.71    unchanged #> 100         10         10    0 2.688  0.000     1    unchanged #> 101          5          5    0 2.688  0.000     1    unchanged #> 102         14         15    1 2.688  0.372  0.71    unchanged #> 103          9          9    0 2.688  0.000     1    unchanged #> 104          8         15    7 2.688  2.604 0.009    increased #> 105          2          3    1 2.688  0.372  0.71    unchanged #> 106          7         10    3 2.688  1.116 0.264    unchanged #> 107         12         12    0 2.688  0.000     1    unchanged #> 108          2          2    0 2.688  0.000     1    unchanged #> 109         14         13   -1 2.688 -0.372  0.71    unchanged #> 110          6          4   -2 2.688 -0.744 0.457    unchanged #> 111         15         10   -5 2.688 -1.860 0.063    unchanged #> 112          5          5    0 2.688  0.000     1    unchanged #> 113         15         18    3 2.688  1.116 0.264    unchanged #> 114          2          0   -2 2.688 -0.744 0.457    unchanged #> 115          9         12    3 2.688  1.116 0.264    unchanged #> 116         14         14    0 2.688  0.000     1    unchanged #> 117         10          7   -3 2.688 -1.116 0.264    unchanged #> 118          6          5   -1 2.688 -0.372  0.71    unchanged #> 119         12          9   -3 2.688 -1.116 0.264    unchanged #> 120          7          3   -4 2.688 -1.488 0.137    unchanged #> 121          9         12    3 2.688  1.116 0.264    unchanged #> 122          2          6    4 2.688  1.488 0.137    unchanged #> 123          9          6   -3 2.688 -1.116 0.264    unchanged #> 124          2          5    3 2.688  1.116 0.264    unchanged #> 125         12         12    0 2.688  0.000     1    unchanged #> 126         16         19    3 2.688  1.116 0.264    unchanged #> 127         13         14    1 2.688  0.372  0.71    unchanged #> 128         13         14    1 2.688  0.372  0.71    unchanged #> 129         14         15    1 2.688  0.372  0.71    unchanged #> 130          7         14    7 2.688  2.604 0.009    increased #> 131         10         11    1 2.688  0.372  0.71    unchanged #> 132          3          3    0 2.688  0.000     1    unchanged #> 133         15         15    0 2.688  0.000     1    unchanged #> 134         18         19    1 2.688  0.372  0.71    unchanged #> 135          2          5    3 2.688  1.116 0.264    unchanged #> 136         12         10   -2 2.688 -0.744 0.457    unchanged #> 137         12         14    2 2.688  0.744 0.457    unchanged #> 138          6          3   -3 2.688 -1.116 0.264    unchanged #> 139         13          9   -4 2.688 -1.488 0.137    unchanged #> 140          8          5   -3 2.688 -1.116 0.264    unchanged #> 141         18         17   -1 2.688 -0.372  0.71    unchanged #> 142         15         15    0 2.688  0.000     1    unchanged #> 143          7          9    2 2.688  0.744 0.457    unchanged #> 144         14         10   -4 2.688 -1.488 0.137    unchanged #> 145          3          5    2 2.688  0.744 0.457    unchanged #> 146          1          2    1 2.688  0.372  0.71    unchanged #> 147          5          6    1 2.688  0.372  0.71    unchanged #> 148          8          8    0 2.688  0.000     1    unchanged #> 149         13         15    2 2.688  0.744 0.457    unchanged #> 150          9          9    0 2.688  0.000     1    unchanged #> 151          8          9    1 2.688  0.372  0.71    unchanged #> 152          2          1   -1 2.688 -0.372  0.71    unchanged #> 153          3          3    0 2.688  0.000     1    unchanged #> 154          7          5   -2 2.688 -0.744 0.457    unchanged #> 155         16         13   -3 2.688 -1.116 0.264    unchanged #> 156          9         12    3 2.688  1.116 0.264    unchanged #> 157         15         17    2 2.688  0.744 0.457    unchanged #> 158         10          5   -5 2.688 -1.860 0.063    unchanged #> 159          8         10    2 2.688  0.744 0.457    unchanged #> 160         17         11   -6 2.688 -2.232 0.026    decreased #> 161         14          8   -6 2.688 -2.232 0.026    decreased #> 162          8          8    0 2.688  0.000     1    unchanged #> 163          3          5    2 2.688  0.744 0.457    unchanged #> 164         16          8   -8 2.688 -2.976 0.003    decreased #> 165          9          7   -2 2.688 -0.744 0.457    unchanged #> 166          7          8    1 2.688  0.372  0.71    unchanged #> 167         15         15    0 2.688  0.000     1    unchanged #> 168         15         18    3 2.688  1.116 0.264    unchanged #> 169          3          2   -1 2.688 -0.372  0.71    unchanged #> 170          1          2    1 2.688  0.372  0.71    unchanged #> 171          2          0   -2 2.688 -0.744 0.457    unchanged #> 172         20         15   -5 2.688 -1.860 0.063    unchanged #> 173         10         12    2 2.688  0.744 0.457    unchanged #> 174          9          3   -6 2.688 -2.232 0.026    decreased #> 175          5         15   10 2.688  3.721     0    increased #> 176          9          7   -2 2.688 -0.744 0.457    unchanged #> 177         15         16    1 2.688  0.372  0.71    unchanged #> 178          2          5    3 2.688  1.116 0.264    unchanged #> 179         18         20    2 2.688  0.744 0.457    unchanged #> 180         10          8   -2 2.688 -0.744 0.457    unchanged #> 181          6          6    0 2.688  0.000     1    unchanged #> 182          3          5    2 2.688  0.744 0.457    unchanged #> 183          9          7   -2 2.688 -0.744 0.457    unchanged #> 184          7         10    3 2.688  1.116 0.264    unchanged #> 185          6          3   -3 2.688 -1.116 0.264    unchanged #> 186          7          5   -2 2.688 -0.744 0.457    unchanged #> 187          7          4   -3 2.688 -1.116 0.264    unchanged #> 188         10          9   -1 2.688 -0.372  0.71    unchanged #> 189         17         12   -5 2.688 -1.860 0.063    unchanged #> 190          2          4    2 2.688  0.744 0.457    unchanged #> 191         16         15   -1 2.688 -0.372  0.71    unchanged #> 192          6          9    3 2.688  1.116 0.264    unchanged #> 193         10         13    3 2.688  1.116 0.264    unchanged #> 194          2          7    5 2.688  1.860 0.063    unchanged #> 195          5          3   -2 2.688 -0.744 0.457    unchanged #> 196         12          8   -4 2.688 -1.488 0.137    unchanged #> 197          5          1   -4 2.688 -1.488 0.137    unchanged #> 198          5          2   -3 2.688 -1.116 0.264    unchanged #> 199         17         17    0 2.688  0.000     1    unchanged #> 200          4          2   -2 2.688 -0.744 0.457    unchanged #> 201         13         13    0 2.688  0.000     1    unchanged #> 202         14         12   -2 2.688 -0.744 0.457    unchanged #> 203          2          2    0 2.688  0.000     1    unchanged #> 204         11          9   -2 2.688 -0.744 0.457    unchanged #> 205         10         11    1 2.688  0.372  0.71    unchanged #> 206         13         11   -2 2.688 -0.744 0.457    unchanged #> 207         17         18    1 2.688  0.372  0.71    unchanged #> 208         14         15    1 2.688  0.372  0.71    unchanged #> 209         18         18    0 2.688  0.000     1    unchanged #> 210          2          0   -2 2.688 -0.744 0.457    unchanged #> 211          9         11    2 2.688  0.744 0.457    unchanged #> 212         10         12    2 2.688  0.744 0.457    unchanged #> 213         16         14   -2 2.688 -0.744 0.457    unchanged #> 214          2          2    0 2.688  0.000     1    unchanged #> 215          3          4    1 2.688  0.372  0.71    unchanged #> 216         15         17    2 2.688  0.744 0.457    unchanged #> 217         14         12   -2 2.688 -0.744 0.457    unchanged #> 218          3          5    2 2.688  0.744 0.457    unchanged #> 219          9          8   -1 2.688 -0.372  0.71    unchanged #> 220          0          1    1 2.688  0.372  0.71    unchanged #> 221         14         12   -2 2.688 -0.744 0.457    unchanged #> 222          2          1   -1 2.688 -0.372  0.71    unchanged #> 223          5         10    5 2.688  1.860 0.063    unchanged #> 224          8         15    7 2.688  2.604 0.009    increased #> 225         12         14    2 2.688  0.744 0.457    unchanged #> 226         14         14    0 2.688  0.000     1    unchanged #> 227         11         11    0 2.688  0.000     1    unchanged #> 228          9          9    0 2.688  0.000     1    unchanged #> 229         17         15   -2 2.688 -0.744 0.457    unchanged #> 230          2          2    0 2.688  0.000     1    unchanged #> 231          6          9    3 2.688  1.116 0.264    unchanged #> 232          9         14    5 2.688  1.860 0.063    unchanged #> 233         13         13    0 2.688  0.000     1    unchanged #> 234         13         17    4 2.688  1.488 0.137    unchanged #> 235         13          6   -7 2.688 -2.604 0.009    decreased #> 236          8          8    0 2.688  0.000     1    unchanged #> 237          8          9    1 2.688  0.372  0.71    unchanged #> 238          6         12    6 2.688  2.232 0.026    increased #> 239          9          9    0 2.688  0.000     1    unchanged #> 240          7         12    5 2.688  1.860 0.063    unchanged #> 241         18         18    0 2.688  0.000     1    unchanged #> 242          4          3   -1 2.688 -0.372  0.71    unchanged #> 243          1          2    1 2.688  0.372  0.71    unchanged #> 244          3          1   -2 2.688 -0.744 0.457    unchanged #> 245          6          5   -1 2.688 -0.372  0.71    unchanged #> 246          4          4    0 2.688  0.000     1    unchanged #> 247         17         17    0 2.688  0.000     1    unchanged #> 248         20         18   -2 2.688 -0.744 0.457    unchanged #> 249          8         10    2 2.688  0.744 0.457    unchanged #> 250         15         18    3 2.688  1.116 0.264    unchanged #> 251         15         13   -2 2.688 -0.744 0.457    unchanged #> 252          8          8    0 2.688  0.000     1    unchanged #> 253          8          8    0 2.688  0.000     1    unchanged #> 254         11         13    2 2.688  0.744 0.457    unchanged #> 255         18         16   -2 2.688 -0.744 0.457    unchanged #> 256         10         11    1 2.688  0.372  0.71    unchanged #> 257         18         16   -2 2.688 -0.744 0.457    unchanged #> 258         10         11    1 2.688  0.372  0.71    unchanged #> 259          4          3   -1 2.688 -0.372  0.71    unchanged #> 260         11         14    3 2.688  1.116 0.264    unchanged #> 261         14         11   -3 2.688 -1.116 0.264    unchanged #> 262         14         13   -1 2.688 -0.372  0.71    unchanged #> 263         19         17   -2 2.688 -0.744 0.457    unchanged #> 264          4          6    2 2.688  0.744 0.457    unchanged #> 265         17         17    0 2.688  0.000     1    unchanged #> 266          9         12    3 2.688  1.116 0.264    unchanged #> 267          4          7    3 2.688  1.116 0.264    unchanged #> 268         15         12   -3 2.688 -1.116 0.264    unchanged #> 269          7          7    0 2.688  0.000     1    unchanged #> 270          8         11    3 2.688  1.116 0.264    unchanged #> 271          1          2    1 2.688  0.372  0.71    unchanged #> 272          8          6   -2 2.688 -0.744 0.457    unchanged #> 273          6          6    0 2.688  0.000     1    unchanged #> 274         17         16   -1 2.688 -0.372  0.71    unchanged #> 275         13         11   -2 2.688 -0.744 0.457    unchanged #> 276          2          1   -1 2.688 -0.372  0.71    unchanged #> 277          9         10    1 2.688  0.372  0.71    unchanged #> 278          2          0   -2 2.688 -0.744 0.457    unchanged #> 279         11         13    2 2.688  0.744 0.457    unchanged #> 280         17         17    0 2.688  0.000     1    unchanged #> 281         16         16    0 2.688  0.000     1    unchanged #> 282         14         15    1 2.688  0.372  0.71    unchanged #> 283         15         16    1 2.688  0.372  0.71    unchanged #> 284          4          1   -3 2.688 -1.116 0.264    unchanged #> 285         17         18    1 2.688  0.372  0.71    unchanged #> 286         10          7   -3 2.688 -1.116 0.264    unchanged #> 287         12         15    3 2.688  1.116 0.264    unchanged #> 288         15         17    2 2.688  0.744 0.457    unchanged #> 289         17         15   -2 2.688 -0.744 0.457    unchanged #> 290         14         11   -3 2.688 -1.116 0.264    unchanged #> 291         15         12   -3 2.688 -1.116 0.264    unchanged #> 292         10         10    0 2.688  0.000     1    unchanged #> 293          0          2    2 2.688  0.744 0.457    unchanged #> 294         12          8   -4 2.688 -1.488 0.137    unchanged #> 295          4          7    3 2.688  1.116 0.264    unchanged #> 296         15         15    0 2.688  0.000     1    unchanged #> 297         18         17   -1 2.688 -0.372  0.71    unchanged #> 298          9          7   -2 2.688 -0.744 0.457    unchanged #> 299         18         12   -6 2.688 -2.232 0.026    decreased #> 300          0          1    1 2.688  0.372  0.71    unchanged #> 301          4         11    7 2.688  2.604 0.009    increased #> 302         10          8   -2 2.688 -0.744 0.457    unchanged #> 303          5          2   -3 2.688 -1.116 0.264    unchanged #> 304         19         17   -2 2.688 -0.744 0.457    unchanged #> 305         11          6   -5 2.688 -1.860 0.063    unchanged #> 306         15         15    0 2.688  0.000     1    unchanged #> 307         10         12    2 2.688  0.744 0.457    unchanged #> 308         11          8   -3 2.688 -1.116 0.264    unchanged #> 309         10          7   -3 2.688 -1.116 0.264    unchanged #> 310          8          6   -2 2.688 -0.744 0.457    unchanged #> 311         14         15    1 2.688  0.372  0.71    unchanged #> 312         16         11   -5 2.688 -1.860 0.063    unchanged #> 313          6          4   -2 2.688 -0.744 0.457    unchanged #> 314         11         11    0 2.688  0.000     1    unchanged #> 315          7          7    0 2.688  0.000     1    unchanged #> 316          9         11    2 2.688  0.744 0.457    unchanged #> 317          7         11    4 2.688  1.488 0.137    unchanged #> 318          1          5    4 2.688  1.488 0.137    unchanged #> 319         10          9   -1 2.688 -0.372  0.71    unchanged #> 320         13         10   -3 2.688 -1.116 0.264    unchanged #> 321         13         10   -3 2.688 -1.116 0.264    unchanged #> 322         13          9   -4 2.688 -1.488 0.137    unchanged #> 323          1          2    1 2.688  0.372  0.71    unchanged #> 324         13         13    0 2.688  0.000     1    unchanged #> 325         13         13    0 2.688  0.000     1    unchanged #> 326         13         13    0 2.688  0.000     1    unchanged #> 327          7          6   -1 2.688 -0.372  0.71    unchanged #> 328          9         12    3 2.688  1.116 0.264    unchanged #> 329         13         13    0 2.688  0.000     1    unchanged #> 330          6         14    8 2.688  2.976 0.003    increased #> 331         12         14    2 2.688  0.744 0.457    unchanged #> 332          9          5   -4 2.688 -1.488 0.137    unchanged #> 333         13         12   -1 2.688 -0.372  0.71    unchanged #> 334         13         14    1 2.688  0.372  0.71    unchanged #> 335          9         11    2 2.688  0.744 0.457    unchanged #> 336         10          9   -1 2.688 -0.372  0.71    unchanged #> 337         12         13    1 2.688  0.372  0.71    unchanged #> 338         16         14   -2 2.688 -0.744 0.457    unchanged #> 339          6         10    4 2.688  1.488 0.137    unchanged #> 340         17         15   -2 2.688 -0.744 0.457    unchanged #> 341         12         14    2 2.688  0.744 0.457    unchanged #> 342          6          5   -1 2.688 -0.372  0.71    unchanged #> 343          5          9    4 2.688  1.488 0.137    unchanged #> 344          5          4   -1 2.688 -0.372  0.71    unchanged #> 345          6          9    3 2.688  1.116 0.264    unchanged #> 346         12          8   -4 2.688 -1.488 0.137    unchanged #> 347         12         13    1 2.688  0.372  0.71    unchanged #> 348          8         11    3 2.688  1.116 0.264    unchanged #> 349          5          6    1 2.688  0.372  0.71    unchanged #> 350         11         12    1 2.688  0.372  0.71    unchanged #> 351          9          7   -2 2.688 -0.744 0.457    unchanged #> 352         18         16   -2 2.688 -0.744 0.457    unchanged #> 353          9         11    2 2.688  0.744 0.457    unchanged #> 354          4          3   -1 2.688 -0.372  0.71    unchanged #> 355         12         17    5 2.688  1.860 0.063    unchanged #> 356         16         15   -1 2.688 -0.372  0.71    unchanged #> 357          9         13    4 2.688  1.488 0.137    unchanged #> 358         10          7   -3 2.688 -1.116 0.264    unchanged #> 359          1          3    2 2.688  0.744 0.457    unchanged #> 360         10         12    2 2.688  0.744 0.457    unchanged #> 361          5          5    0 2.688  0.000     1    unchanged #> 362         13         15    2 2.688  0.744 0.457    unchanged #> 363          9         12    3 2.688  1.116 0.264    unchanged #> 364         13         14    1 2.688  0.372  0.71    unchanged #> 365          9          5   -4 2.688 -1.488 0.137    unchanged #> 366         17         17    0 2.688  0.000     1    unchanged #> 367          4          2   -2 2.688 -0.744 0.457    unchanged #> 368         12          9   -3 2.688 -1.116 0.264    unchanged #> 369          3         10    7 2.688  2.604 0.009    increased #> 370         12         12    0 2.688  0.000     1    unchanged #> 371         14         18    4 2.688  1.488 0.137    unchanged #> 372         10         11    1 2.688  0.372  0.71    unchanged #> 373          7          9    2 2.688  0.744 0.457    unchanged #> 374          4          6    2 2.688  0.744 0.457    unchanged #> 375         10          5   -5 2.688 -1.860 0.063    unchanged #> 376         16         14   -2 2.688 -0.744 0.457    unchanged #> 377         15         15    0 2.688  0.000     1    unchanged #> 378         13         12   -1 2.688 -0.372  0.71    unchanged #> 379          0          3    3 2.688  1.116 0.264    unchanged #> 380          7          8    1 2.688  0.372  0.71    unchanged #> 381          6          7    1 2.688  0.372  0.71    unchanged #> 382          6          6    0 2.688  0.000     1    unchanged #> 383          6          8    2 2.688  0.744 0.457    unchanged #> 384          4          4    0 2.688  0.000     1    unchanged #> 385          3          4    1 2.688  0.372  0.71    unchanged #> 386          2          7    5 2.688  1.860 0.063    unchanged #> 387          9          9    0 2.688  0.000     1    unchanged #> 388         19         14   -5 2.688 -1.860 0.063    unchanged #> 389          3          6    3 2.688  1.116 0.264    unchanged #> 390          0          2    2 2.688  0.744 0.457    unchanged #> 391         15         14   -1 2.688 -0.372  0.71    unchanged #> 392         11          4   -7 2.688 -2.604 0.009    decreased #> 393          5          6    1 2.688  0.372  0.71    unchanged #> 394          2          1   -1 2.688 -0.372  0.71    unchanged #> 395          7         13    6 2.688  2.232 0.026    increased #> 396         13         11   -2 2.688 -0.744 0.457    unchanged #> 397         15         14   -1 2.688 -0.372  0.71    unchanged #> 398          2          4    2 2.688  0.744 0.457    unchanged #> 399         13          6   -7 2.688 -2.604 0.009    decreased #> 400         15          9   -6 2.688 -2.232 0.026    decreased #> 401          7          8    1 2.688  0.372  0.71    unchanged #> 402          3          3    0 2.688  0.000     1    unchanged #> 403          9         12    3 2.688  1.116 0.264    unchanged #> 404         17         17    0 2.688  0.000     1    unchanged #> 405          1          4    3 2.688  1.116 0.264    unchanged #> 406          4          2   -2 2.688 -0.744 0.457    unchanged #> 407          7         10    3 2.688  1.116 0.264    unchanged #> 408          7         11    4 2.688  1.488 0.137    unchanged #> 409         12         12    0 2.688  0.000     1    unchanged #> 410          8          6   -2 2.688 -0.744 0.457    unchanged #> 411          8          4   -4 2.688 -1.488 0.137    unchanged #> 412         14         11   -3 2.688 -1.116 0.264    unchanged #> 413          5          3   -2 2.688 -0.744 0.457    unchanged #> 414         16         17    1 2.688  0.372  0.71    unchanged #> 415         11         15    4 2.688  1.488 0.137    unchanged #> 416         15         12   -3 2.688 -1.116 0.264    unchanged #> 417         14         15    1 2.688  0.372  0.71    unchanged #> 418          5          6    1 2.688  0.372  0.71    unchanged #> 419          5         10    5 2.688  1.860 0.063    unchanged #> 420         10         13    3 2.688  1.116 0.264    unchanged #> 421          3          2   -1 2.688 -0.372  0.71    unchanged #> 422         17         17    0 2.688  0.000     1    unchanged #> 423         11         11    0 2.688  0.000     1    unchanged #> 424         14         13   -1 2.688 -0.372  0.71    unchanged #> 425         16          9   -7 2.688 -2.604 0.009    decreased #> 426         15         16    1 2.688  0.372  0.71    unchanged #> 427         11          7   -4 2.688 -1.488 0.137    unchanged #> 428          8         11    3 2.688  1.116 0.264    unchanged #> 429         13         13    0 2.688  0.000     1    unchanged #> 430         10         10    0 2.688  0.000     1    unchanged #> 431         15         14   -1 2.688 -0.372  0.71    unchanged #> 432          1          4    3 2.688  1.116 0.264    unchanged #> 433          3          3    0 2.688  0.000     1    unchanged #> 434         11         15    4 2.688  1.488 0.137    unchanged #> 435          3          4    1 2.688  0.372  0.71    unchanged #> 436          6         11    5 2.688  1.860 0.063    unchanged #> 437          2          0   -2 2.688 -0.744 0.457    unchanged #> 438         13         14    1 2.688  0.372  0.71    unchanged #> 439         18         14   -4 2.688 -1.488 0.137    unchanged #> 440          6         13    7 2.688  2.604 0.009    increased #> 441         14         12   -2 2.688 -0.744 0.457    unchanged #> 442          4          5    1 2.688  0.372  0.71    unchanged #> 443         10          9   -1 2.688 -0.372  0.71    unchanged #> 444         18         18    0 2.688  0.000     1    unchanged #> 445         17         16   -1 2.688 -0.372  0.71    unchanged #> 446         16         17    1 2.688  0.372  0.71    unchanged #> 447          0          0    0 2.688  0.000     1    unchanged #> 448         12         10   -2 2.688 -0.744 0.457    unchanged #> 449          4          7    3 2.688  1.116 0.264    unchanged #> 450          1          4    3 2.688  1.116 0.264    unchanged #> 451         19         18   -1 2.688 -0.372  0.71    unchanged #> 452          8          5   -3 2.688 -1.116 0.264    unchanged #> 453          8         11    3 2.688  1.116 0.264    unchanged #> 454          5          9    4 2.688  1.488 0.137    unchanged #> 455         18         17   -1 2.688 -0.372  0.71    unchanged #> 456         12         11   -1 2.688 -0.372  0.71    unchanged #> 457          5          9    4 2.688  1.488 0.137    unchanged #> 458          2          5    3 2.688  1.116 0.264    unchanged #> 459          1          2    1 2.688  0.372  0.71    unchanged #> 460         19         18   -1 2.688 -0.372  0.71    unchanged #> 461         15         17    2 2.688  0.744 0.457    unchanged #> 462         17         13   -4 2.688 -1.488 0.137    unchanged #> 463         13         15    2 2.688  0.744 0.457    unchanged #> 464         14         14    0 2.688  0.000     1    unchanged #> 465          6          9    3 2.688  1.116 0.264    unchanged #> 466          9          5   -4 2.688 -1.488 0.137    unchanged #> 467         16         15   -1 2.688 -0.372  0.71    unchanged #> 468          3          2   -1 2.688 -0.372  0.71    unchanged #> 469          1          7    6 2.688  2.232 0.026    increased #> 470         13         10   -3 2.688 -1.116 0.264    unchanged #> 471          5          4   -1 2.688 -0.372  0.71    unchanged #> 472          6          7    1 2.688  0.372  0.71    unchanged #> 473         20         19   -1 2.688 -0.372  0.71    unchanged #> 474          7          9    2 2.688  0.744 0.457    unchanged #> 475          1          1    0 2.688  0.000     1    unchanged #> 476         15         13   -2 2.688 -0.744 0.457    unchanged #> 477         16         11   -5 2.688 -1.860 0.063    unchanged #> 478         16         12   -4 2.688 -1.488 0.137    unchanged #> 479         11         10   -1 2.688 -0.372  0.71    unchanged #> 480         15         16    1 2.688  0.372  0.71    unchanged #> 481          7          8    1 2.688  0.372  0.71    unchanged #> 482         15         12   -3 2.688 -1.116 0.264    unchanged #> 483         15         16    1 2.688  0.372  0.71    unchanged #> 484         12         11   -1 2.688 -0.372  0.71    unchanged #> 485         12         10   -2 2.688 -0.744 0.457    unchanged #> 486          5          8    3 2.688  1.116 0.264    unchanged #> 487          8         12    4 2.688  1.488 0.137    unchanged #> 488         11         13    2 2.688  0.744 0.457    unchanged #> 489         16         17    1 2.688  0.372  0.71    unchanged #> 490          7          8    1 2.688  0.372  0.71    unchanged #> 491         19         18   -1 2.688 -0.372  0.71    unchanged #> 492          4          5    1 2.688  0.372  0.71    unchanged #> 493         19         16   -3 2.688 -1.116 0.264    unchanged #> 494          8          9    1 2.688  0.372  0.71    unchanged #> 495         10         15    5 2.688  1.860 0.063    unchanged #> 496          6          7    1 2.688  0.372  0.71    unchanged #> 497         11          8   -3 2.688 -1.116 0.264    unchanged #> 498          3          9    6 2.688  2.232 0.026    increased #> 499          8          8    0 2.688  0.000     1    unchanged #> 500          7         11    4 2.688  1.488 0.137    unchanged #> 501         13         16    3 2.688  1.116 0.264    unchanged #> 502         11         10   -1 2.688 -0.372  0.71    unchanged #> 503          0          1    1 2.688  0.372  0.71    unchanged #> 504          4          5    1 2.688  0.372  0.71    unchanged #> 505          4          6    2 2.688  0.744 0.457    unchanged #> 506         12         10   -2 2.688 -0.744 0.457    unchanged #> 507         18         16   -2 2.688 -0.744 0.457    unchanged #> 508         13         14    1 2.688  0.372  0.71    unchanged #> 509          5          7    2 2.688  0.744 0.457    unchanged #> 510          8         10    2 2.688  0.744 0.457    unchanged #> 511          6         10    4 2.688  1.488 0.137    unchanged #> 512          7          9    2 2.688  0.744 0.457    unchanged #> 513          5          5    0 2.688  0.000     1    unchanged #> 514          5         10    5 2.688  1.860 0.063    unchanged #> 515          9         11    2 2.688  0.744 0.457    unchanged #> 516         17         17    0 2.688  0.000     1    unchanged #> 517         14         13   -1 2.688 -0.372  0.71    unchanged #> 518          8         15    7 2.688  2.604 0.009    increased #> 519         14         14    0 2.688  0.000     1    unchanged #> 520         13          8   -5 2.688 -1.860 0.063    unchanged #> 521         14         12   -2 2.688 -0.744 0.457    unchanged #> 522          6          2   -4 2.688 -1.488 0.137    unchanged #> 523         17         14   -3 2.688 -1.116 0.264    unchanged #> 524         13         13    0 2.688  0.000     1    unchanged #> 525         14         14    0 2.688  0.000     1    unchanged #> 526         16         12   -4 2.688 -1.488 0.137    unchanged #> 527         12         10   -2 2.688 -0.744 0.457    unchanged #> 528         15         16    1 2.688  0.372  0.71    unchanged #> 529         13         10   -3 2.688 -1.116 0.264    unchanged #> 530          9         10    1 2.688  0.372  0.71    unchanged #> 531         12          7   -5 2.688 -1.860 0.063    unchanged #> 532         20         20    0 2.688  0.000     1    unchanged #> 533         17         12   -5 2.688 -1.860 0.063    unchanged #> 534          6          8    2 2.688  0.744 0.457    unchanged #> 535         19         18   -1 2.688 -0.372  0.71    unchanged #> 536         12         12    0 2.688  0.000     1    unchanged #> 537         10          7   -3 2.688 -1.116 0.264    unchanged #> 538          6          4   -2 2.688 -0.744 0.457    unchanged #> 539          8          8    0 2.688  0.000     1    unchanged #> 540         10         12    2 2.688  0.744 0.457    unchanged #> 541          4          7    3 2.688  1.116 0.264    unchanged #> 542          2          2    0 2.688  0.000     1    unchanged #> 543          6          5   -1 2.688 -0.372  0.71    unchanged #> 544         12         10   -2 2.688 -0.744 0.457    unchanged #> 545          4          5    1 2.688  0.372  0.71    unchanged #> 546         11         10   -1 2.688 -0.372  0.71    unchanged #> 547         14         12   -2 2.688 -0.744 0.457    unchanged #> 548         13         15    2 2.688  0.744 0.457    unchanged #> 549         12          9   -3 2.688 -1.116 0.264    unchanged #> 550         11         11    0 2.688  0.000     1    unchanged #> 551          8          2   -6 2.688 -2.232 0.026    decreased #> 552         14         15    1 2.688  0.372  0.71    unchanged #> 553         11         14    3 2.688  1.116 0.264    unchanged #> 554         13         12   -1 2.688 -0.372  0.71    unchanged #> 555          2          3    1 2.688  0.372  0.71    unchanged #> 556          9         13    4 2.688  1.488 0.137    unchanged #> 557         10         11    1 2.688  0.372  0.71    unchanged #> 558          8         12    4 2.688  1.488 0.137    unchanged #> 559         11         12    1 2.688  0.372  0.71    unchanged #> 560         19         18   -1 2.688 -0.372  0.71    unchanged #> 561         12         12    0 2.688  0.000     1    unchanged #> 562         12          8   -4 2.688 -1.488 0.137    unchanged #> 563          3          6    3 2.688  1.116 0.264    unchanged #> 564          4          0   -4 2.688 -1.488 0.137    unchanged #> 565         14         14    0 2.688  0.000     1    unchanged #> 566          3          4    1 2.688  0.372  0.71    unchanged #> 567         18         16   -2 2.688 -0.744 0.457    unchanged #> 568          3          2   -1 2.688 -0.372  0.71    unchanged #> 569         17         19    2 2.688  0.744 0.457    unchanged #> 570         10          8   -2 2.688 -0.744 0.457    unchanged #> 571         16         13   -3 2.688 -1.116 0.264    unchanged #> 572          8          8    0 2.688  0.000     1    unchanged #> 573         15         17    2 2.688  0.744 0.457    unchanged #> 574          7         12    5 2.688  1.860 0.063    unchanged #> 575          6          2   -4 2.688 -1.488 0.137    unchanged #> 576         11         14    3 2.688  1.116 0.264    unchanged #> 577         13         12   -1 2.688 -0.372  0.71    unchanged #> 578         17         14   -3 2.688 -1.116 0.264    unchanged #> 579          5          9    4 2.688  1.488 0.137    unchanged #> 580         12         17    5 2.688  1.860 0.063    unchanged #> 581         11         10   -1 2.688 -0.372  0.71    unchanged #> 582          6         12    6 2.688  2.232 0.026    increased #> 583         11         13    2 2.688  0.744 0.457    unchanged #> 584         16         18    2 2.688  0.744 0.457    unchanged #> 585          8          6   -2 2.688 -0.744 0.457    unchanged #> 586          7          9    2 2.688  0.744 0.457    unchanged #> 587         12         11   -1 2.688 -0.372  0.71    unchanged #> 588          9          7   -2 2.688 -0.744 0.457    unchanged #> 589          9          6   -3 2.688 -1.116 0.264    unchanged #> 590         14         13   -1 2.688 -0.372  0.71    unchanged #> 591         15         15    0 2.688  0.000     1    unchanged #> 592         19         15   -4 2.688 -1.488 0.137    unchanged #> 593          6          7    1 2.688  0.372  0.71    unchanged #> 594          4          3   -1 2.688 -0.372  0.71    unchanged #> 595          4          6    2 2.688  0.744 0.457    unchanged #> 596          4          3   -1 2.688 -0.372  0.71    unchanged #> 597          4          4    0 2.688  0.000     1    unchanged #> 598         10          6   -4 2.688 -1.488 0.137    unchanged #> 599          8         14    6 2.688  2.232 0.026    increased #> 600          9         12    3 2.688  1.116 0.264    unchanged #> 601         10         12    2 2.688  0.744 0.457    unchanged #> 602         12          9   -3 2.688 -1.116 0.264    unchanged #> 603         13          9   -4 2.688 -1.488 0.137    unchanged #> 604         11         11    0 2.688  0.000     1    unchanged #> 605          2          4    2 2.688  0.744 0.457    unchanged #> 606         16         14   -2 2.688 -0.744 0.457    unchanged #> 607          2          1   -1 2.688 -0.372  0.71    unchanged #> 608          3          2   -1 2.688 -0.372  0.71    unchanged #> 609          6          4   -2 2.688 -0.744 0.457    unchanged #> 610         15         11   -4 2.688 -1.488 0.137    unchanged #> 611          7          6   -1 2.688 -0.372  0.71    unchanged #> 612         14         18    4 2.688  1.488 0.137    unchanged #> 613          7         14    7 2.688  2.604 0.009    increased #> 614         18         14   -4 2.688 -1.488 0.137    unchanged #> 615          9          6   -3 2.688 -1.116 0.264    unchanged #> 616         11         11    0 2.688  0.000     1    unchanged #> 617          6          2   -4 2.688 -1.488 0.137    unchanged #> 618         10          7   -3 2.688 -1.116 0.264    unchanged #> 619          3          2   -1 2.688 -0.372  0.71    unchanged #> 620          8          4   -4 2.688 -1.488 0.137    unchanged #> 621          8         10    2 2.688  0.744 0.457    unchanged #> 622         16         16    0 2.688  0.000     1    unchanged #> 623          4          2   -2 2.688 -0.744 0.457    unchanged #> 624         13         15    2 2.688  0.744 0.457    unchanged #> 625         11         11    0 2.688  0.000     1    unchanged #> 626         14         13   -1 2.688 -0.372  0.71    unchanged #> 627          4          8    4 2.688  1.488 0.137    unchanged #> 628          6          8    2 2.688  0.744 0.457    unchanged #> 629         15          9   -6 2.688 -2.232 0.026    decreased #> 630          2          3    1 2.688  0.372  0.71    unchanged #> 631          2          3    1 2.688  0.372  0.71    unchanged #> 632          8          6   -2 2.688 -0.744 0.457    unchanged #> 633          8          4   -4 2.688 -1.488 0.137    unchanged #> 634         12         18    6 2.688  2.232 0.026    increased #> 635         15         15    0 2.688  0.000     1    unchanged #> 636         10         10    0 2.688  0.000     1    unchanged #> 637          3          3    0 2.688  0.000     1    unchanged #> 638         14         15    1 2.688  0.372  0.71    unchanged #> 639          9          6   -3 2.688 -1.116 0.264    unchanged #> 640          2          5    3 2.688  1.116 0.264    unchanged #> 641         14         17    3 2.688  1.116 0.264    unchanged #> 642          4          2   -2 2.688 -0.744 0.457    unchanged #> 643         12         13    1 2.688  0.372  0.71    unchanged #> 644         10          7   -3 2.688 -1.116 0.264    unchanged #> 645          3          4    1 2.688  0.372  0.71    unchanged #> 646          4          2   -2 2.688 -0.744 0.457    unchanged #> 647          2          6    4 2.688  1.488 0.137    unchanged #> 648         11          8   -3 2.688 -1.116 0.264    unchanged #> 649         10         10    0 2.688  0.000     1    unchanged #> 650         17         17    0 2.688  0.000     1    unchanged #> 651          8         10    2 2.688  0.744 0.457    unchanged #> 652          8          9    1 2.688  0.372  0.71    unchanged #> 653         17         17    0 2.688  0.000     1    unchanged #> 654         15         13   -2 2.688 -0.744 0.457    unchanged #> 655         14         19    5 2.688  1.860 0.063    unchanged #> 656         10         14    4 2.688  1.488 0.137    unchanged #> 657         12         13    1 2.688  0.372  0.71    unchanged #> 658          7         12    5 2.688  1.860 0.063    unchanged #> 659         11         12    1 2.688  0.372  0.71    unchanged #> 660         13         10   -3 2.688 -1.116 0.264    unchanged #> 661          7          7    0 2.688  0.000     1    unchanged #> 662          8          6   -2 2.688 -0.744 0.457    unchanged #> 663          7          5   -2 2.688 -0.744 0.457    unchanged #> 664         14         10   -4 2.688 -1.488 0.137    unchanged #> 665         17         19    2 2.688  0.744 0.457    unchanged #> 666          9          6   -3 2.688 -1.116 0.264    unchanged #> 667          3          3    0 2.688  0.000     1    unchanged #> 668         15         11   -4 2.688 -1.488 0.137    unchanged #> 669          7          8    1 2.688  0.372  0.71    unchanged #> 670         12         12    0 2.688  0.000     1    unchanged #> 671         13         13    0 2.688  0.000     1    unchanged #> 672         16         20    4 2.688  1.488 0.137    unchanged #> 673         13          9   -4 2.688 -1.488 0.137    unchanged #> 674         14         16    2 2.688  0.744 0.457    unchanged #> 675          7          2   -5 2.688 -1.860 0.063    unchanged #> 676         10          6   -4 2.688 -1.488 0.137    unchanged #> 677         10         12    2 2.688  0.744 0.457    unchanged #> 678          8          9    1 2.688  0.372  0.71    unchanged #> 679          4          7    3 2.688  1.116 0.264    unchanged #> 680          2          4    2 2.688  0.744 0.457    unchanged #> 681         13         10   -3 2.688 -1.116 0.264    unchanged #> 682          5         12    7 2.688  2.604 0.009    increased #> 683          5          6    1 2.688  0.372  0.71    unchanged #> 684         10          7   -3 2.688 -1.116 0.264    unchanged #> 685         13         12   -1 2.688 -0.372  0.71    unchanged #> 686         17         19    2 2.688  0.744 0.457    unchanged #> 687         11         12    1 2.688  0.372  0.71    unchanged #> 688          4         10    6 2.688  2.232 0.026    increased #> 689          6          4   -2 2.688 -0.744 0.457    unchanged #> 690          3          5    2 2.688  0.744 0.457    unchanged #> 691         11         14    3 2.688  1.116 0.264    unchanged #> 692          7          2   -5 2.688 -1.860 0.063    unchanged #> 693          8         10    2 2.688  0.744 0.457    unchanged #> 694         13         11   -2 2.688 -0.744 0.457    unchanged #> 695         13         16    3 2.688  1.116 0.264    unchanged #> 696         16         15   -1 2.688 -0.372  0.71    unchanged #> 697         16         12   -4 2.688 -1.488 0.137    unchanged #> 698          3          3    0 2.688  0.000     1    unchanged #> 699         12         15    3 2.688  1.116 0.264    unchanged #> 700         12         16    4 2.688  1.488 0.137    unchanged #> 701          3          3    0 2.688  0.000     1    unchanged #> 702         20         20    0 2.688  0.000     1    unchanged #> 703          7         10    3 2.688  1.116 0.264    unchanged #> 704          9         13    4 2.688  1.488 0.137    unchanged #> 705          5          7    2 2.688  0.744 0.457    unchanged #> 706          2          2    0 2.688  0.000     1    unchanged #> 707         13         16    3 2.688  1.116 0.264    unchanged #> 708          5          7    2 2.688  0.744 0.457    unchanged #> 709          8          7   -1 2.688 -0.372  0.71    unchanged #> 710         15         18    3 2.688  1.116 0.264    unchanged #> 711          3          1   -2 2.688 -0.744 0.457    unchanged #> 712          5          5    0 2.688  0.000     1    unchanged #> 713          5          3   -2 2.688 -0.744 0.457    unchanged #> 714         15         16    1 2.688  0.372  0.71    unchanged #> 715         12         10   -2 2.688 -0.744 0.457    unchanged #> 716          9          6   -3 2.688 -1.116 0.264    unchanged #> 717          5          2   -3 2.688 -1.116 0.264    unchanged #> 718          3          4    1 2.688  0.372  0.71    unchanged #> 719          2          6    4 2.688  1.488 0.137    unchanged #> 720          4          6    2 2.688  0.744 0.457    unchanged #> 721         10         12    2 2.688  0.744 0.457    unchanged #> 722         16         14   -2 2.688 -0.744 0.457    unchanged #> 723          3          2   -1 2.688 -0.372  0.71    unchanged #> 724         13          8   -5 2.688 -1.860 0.063    unchanged #> 725         17         15   -2 2.688 -0.744 0.457    unchanged #> 726          8          8    0 2.688  0.000     1    unchanged #> 727          8         10    2 2.688  0.744 0.457    unchanged #> 728         16         12   -4 2.688 -1.488 0.137    unchanged #> 729         11         15    4 2.688  1.488 0.137    unchanged #> 730          4          8    4 2.688  1.488 0.137    unchanged #> 731          5          6    1 2.688  0.372  0.71    unchanged #> 732          4          3   -1 2.688 -0.372  0.71    unchanged #> 733          8          6   -2 2.688 -0.744 0.457    unchanged #> 734         18         19    1 2.688  0.372  0.71    unchanged #> 735         10         11    1 2.688  0.372  0.71    unchanged #> 736         10         12    2 2.688  0.744 0.457    unchanged #> 737         18         20    2 2.688  0.744 0.457    unchanged #> 738         11          5   -6 2.688 -2.232 0.026    decreased #> 739         17         17    0 2.688  0.000     1    unchanged #> 740          3          5    2 2.688  0.744 0.457    unchanged #> 741         15         15    0 2.688  0.000     1    unchanged #> 742          8          9    1 2.688  0.372  0.71    unchanged #> 743          9          5   -4 2.688 -1.488 0.137    unchanged #> 744         16         13   -3 2.688 -1.116 0.264    unchanged #> 745         14         13   -1 2.688 -0.372  0.71    unchanged #> 746          8          6   -2 2.688 -0.744 0.457    unchanged #> 747          5          9    4 2.688  1.488 0.137    unchanged #> 748          3          1   -2 2.688 -0.744 0.457    unchanged #> 749          6          7    1 2.688  0.372  0.71    unchanged #> 750         17         13   -4 2.688 -1.488 0.137    unchanged #> 751         15         15    0 2.688  0.000     1    unchanged #> 752          5          6    1 2.688  0.372  0.71    unchanged #> 753          9         11    2 2.688  0.744 0.457    unchanged #> 754         16         14   -2 2.688 -0.744 0.457    unchanged #> 755         12         12    0 2.688  0.000     1    unchanged #> 756         12         14    2 2.688  0.744 0.457    unchanged #> 757         14          9   -5 2.688 -1.860 0.063    unchanged #> 758         12         15    3 2.688  1.116 0.264    unchanged #> 759          1          0   -1 2.688 -0.372  0.71    unchanged #> 760         13         17    4 2.688  1.488 0.137    unchanged #> 761         17         19    2 2.688  0.744 0.457    unchanged #> 762          4          4    0 2.688  0.000     1    unchanged #> 763         10          7   -3 2.688 -1.116 0.264    unchanged #> 764         15         15    0 2.688  0.000     1    unchanged #> 765         10         12    2 2.688  0.744 0.457    unchanged #> 766          2          2    0 2.688  0.000     1    unchanged #> 767         16         16    0 2.688  0.000     1    unchanged #> 768         14         13   -1 2.688 -0.372  0.71    unchanged #> 769         15         15    0 2.688  0.000     1    unchanged #> 770          7          3   -4 2.688 -1.488 0.137    unchanged #> 771          7          3   -4 2.688 -1.488 0.137    unchanged #> 772         15         14   -1 2.688 -0.372  0.71    unchanged #> 773         11         12    1 2.688  0.372  0.71    unchanged #> 774          2          1   -1 2.688 -0.372  0.71    unchanged #> 775          3          7    4 2.688  1.488 0.137    unchanged #> 776         16         16    0 2.688  0.000     1    unchanged #> 777         14          9   -5 2.688 -1.860 0.063    unchanged #> 778         14         14    0 2.688  0.000     1    unchanged #> 779         14         13   -1 2.688 -0.372  0.71    unchanged #> 780         13          9   -4 2.688 -1.488 0.137    unchanged #> 781         13         11   -2 2.688 -0.744 0.457    unchanged #> 782          5         13    8 2.688  2.976 0.003    increased #> 783         13         12   -1 2.688 -0.372  0.71    unchanged #> 784          8          7   -1 2.688 -0.372  0.71    unchanged #> 785         17         16   -1 2.688 -0.372  0.71    unchanged #> 786         10         11    1 2.688  0.372  0.71    unchanged #> 787         12         10   -2 2.688 -0.744 0.457    unchanged #> 788          7          9    2 2.688  0.744 0.457    unchanged #> 789          2          2    0 2.688  0.000     1    unchanged #> 790          1          3    2 2.688  0.744 0.457    unchanged #> 791          3          8    5 2.688  1.860 0.063    unchanged #> 792         14         16    2 2.688  0.744 0.457    unchanged #> 793          4          7    3 2.688  1.116 0.264    unchanged #> 794         15         17    2 2.688  0.744 0.457    unchanged #> 795         15         13   -2 2.688 -0.744 0.457    unchanged #> 796          7          8    1 2.688  0.372  0.71    unchanged #> 797          6          4   -2 2.688 -0.744 0.457    unchanged #> 798          7          6   -1 2.688 -0.372  0.71    unchanged #> 799         11          8   -3 2.688 -1.116 0.264    unchanged #> 800          8         12    4 2.688  1.488 0.137    unchanged #> 801          6          3   -3 2.688 -1.116 0.264    unchanged #> 802          7          2   -5 2.688 -1.860 0.063    unchanged #> 803          9          9    0 2.688  0.000     1    unchanged #> 804         17         14   -3 2.688 -1.116 0.264    unchanged #> 805          6          7    1 2.688  0.372  0.71    unchanged #> 806         14         13   -1 2.688 -0.372  0.71    unchanged #> 807          6         13    7 2.688  2.604 0.009    increased #> 808          7          9    2 2.688  0.744 0.457    unchanged #> 809         17         17    0 2.688  0.000     1    unchanged #> 810          3          6    3 2.688  1.116 0.264    unchanged #> 811         15         18    3 2.688  1.116 0.264    unchanged #> 812         10         10    0 2.688  0.000     1    unchanged #> 813          7          2   -5 2.688 -1.860 0.063    unchanged #> 814         13         14    1 2.688  0.372  0.71    unchanged #> 815          8         10    2 2.688  0.744 0.457    unchanged #> 816          7          7    0 2.688  0.000     1    unchanged #> 817         15          5  -10 2.688 -3.721     0    decreased #> 818         11         11    0 2.688  0.000     1    unchanged #> 819          8         14    6 2.688  2.232 0.026    increased #> 820          7          5   -2 2.688 -0.744 0.457    unchanged #> 821         12         12    0 2.688  0.000     1    unchanged #> 822         10         13    3 2.688  1.116 0.264    unchanged #> 823          3          3    0 2.688  0.000     1    unchanged #> 824         17         18    1 2.688  0.372  0.71    unchanged #> 825          7          6   -1 2.688 -0.372  0.71    unchanged #> 826          5          7    2 2.688  0.744 0.457    unchanged #> 827         15         14   -1 2.688 -0.372  0.71    unchanged #> 828          3          7    4 2.688  1.488 0.137    unchanged #> 829          4          3   -1 2.688 -0.372  0.71    unchanged #> 830         20         17   -3 2.688 -1.116 0.264    unchanged #> 831          8          5   -3 2.688 -1.116 0.264    unchanged #> 832         13         18    5 2.688  1.860 0.063    unchanged #> 833         15         15    0 2.688  0.000     1    unchanged #> 834         16         17    1 2.688  0.372  0.71    unchanged #> 835          6          6    0 2.688  0.000     1    unchanged #> 836         16         16    0 2.688  0.000     1    unchanged #> 837          9          9    0 2.688  0.000     1    unchanged #> 838         10         16    6 2.688  2.232 0.026    increased #> 839         10         11    1 2.688  0.372  0.71    unchanged #> 840         16         17    1 2.688  0.372  0.71    unchanged #> 841         15         15    0 2.688  0.000     1    unchanged #> 842         13         13    0 2.688  0.000     1    unchanged #> 843         15         16    1 2.688  0.372  0.71    unchanged #> 844         10          7   -3 2.688 -1.116 0.264    unchanged #> 845         12          9   -3 2.688 -1.116 0.264    unchanged #> 846         12         12    0 2.688  0.000     1    unchanged #> 847          8          7   -1 2.688 -0.372  0.71    unchanged #> 848          7          3   -4 2.688 -1.488 0.137    unchanged #> 849          5          5    0 2.688  0.000     1    unchanged #> 850         19         16   -3 2.688 -1.116 0.264    unchanged #> 851         15         15    0 2.688  0.000     1    unchanged #> 852         13          8   -5 2.688 -1.860 0.063    unchanged #> 853          9         10    1 2.688  0.372  0.71    unchanged #> 854          8          8    0 2.688  0.000     1    unchanged #> 855          9          9    0 2.688  0.000     1    unchanged #> 856         12         13    1 2.688  0.372  0.71    unchanged #> 857         10          7   -3 2.688 -1.116 0.264    unchanged #> 858         13         10   -3 2.688 -1.116 0.264    unchanged #> 859         10          9   -1 2.688 -0.372  0.71    unchanged #> 860          5          8    3 2.688  1.116 0.264    unchanged #> 861          5          3   -2 2.688 -0.744 0.457    unchanged #> 862         13         14    1 2.688  0.372  0.71    unchanged #> 863          3          6    3 2.688  1.116 0.264    unchanged #> 864          8          4   -4 2.688 -1.488 0.137    unchanged #> 865         10         13    3 2.688  1.116 0.264    unchanged #> 866         12         12    0 2.688  0.000     1    unchanged #> 867          9         10    1 2.688  0.372  0.71    unchanged #> 868         11         13    2 2.688  0.744 0.457    unchanged #> 869         10          7   -3 2.688 -1.116 0.264    unchanged #> 870         13         13    0 2.688  0.000     1    unchanged #> 871         14         13   -1 2.688 -0.372  0.71    unchanged #> 872          8         10    2 2.688  0.744 0.457    unchanged #> 873          1          1    0 2.688  0.000     1    unchanged #> 874          7         13    6 2.688  2.232 0.026    increased #> 875         14         16    2 2.688  0.744 0.457    unchanged #> 876          9          8   -1 2.688 -0.372  0.71    unchanged #> 877         16         16    0 2.688  0.000     1    unchanged #> 878         14         15    1 2.688  0.372  0.71    unchanged #> 879          8         10    2 2.688  0.744 0.457    unchanged #> 880          6          2   -4 2.688 -1.488 0.137    unchanged #> 881          5          2   -3 2.688 -1.116 0.264    unchanged #> 882          6         10    4 2.688  1.488 0.137    unchanged #> 883         11         11    0 2.688  0.000     1    unchanged #> 884          6          5   -1 2.688 -0.372  0.71    unchanged #> 885         14         14    0 2.688  0.000     1    unchanged #> 886          3          7    4 2.688  1.488 0.137    unchanged #> 887          3          9    6 2.688  2.232 0.026    increased #> 888         10          7   -3 2.688 -1.116 0.264    unchanged #> 889          2          6    4 2.688  1.488 0.137    unchanged #> 890         15         11   -4 2.688 -1.488 0.137    unchanged #> 891         10          6   -4 2.688 -1.488 0.137    unchanged #> 892         10         10    0 2.688  0.000     1    unchanged #> 893         17         16   -1 2.688 -0.372  0.71    unchanged #> 894         11         12    1 2.688  0.372  0.71    unchanged #> 895          9         11    2 2.688  0.744 0.457    unchanged #> 896         15         13   -2 2.688 -0.744 0.457    unchanged #> 897         17         16   -1 2.688 -0.372  0.71    unchanged #> 898          7          9    2 2.688  0.744 0.457    unchanged #> 899         10          8   -2 2.688 -0.744 0.457    unchanged #> 900          6          5   -1 2.688 -0.372  0.71    unchanged #> 901          7          6   -1 2.688 -0.372  0.71    unchanged #> 902         16         19    3 2.688  1.116 0.264    unchanged #> 903         16         19    3 2.688  1.116 0.264    unchanged #> 904         12          9   -3 2.688 -1.116 0.264    unchanged #> 905          6          7    1 2.688  0.372  0.71    unchanged #> 906         19         20    1 2.688  0.372  0.71    unchanged #> 907         15         11   -4 2.688 -1.488 0.137    unchanged #> 908         10          5   -5 2.688 -1.860 0.063    unchanged #> 909          2          0   -2 2.688 -0.744 0.457    unchanged #> 910         18         10   -8 2.688 -2.976 0.003    decreased #> 911          2          0   -2 2.688 -0.744 0.457    unchanged #> 912         20         17   -3 2.688 -1.116 0.264    unchanged #> 913          4          2   -2 2.688 -0.744 0.457    unchanged #> 914         16         17    1 2.688  0.372  0.71    unchanged #> 915         14         15    1 2.688  0.372  0.71    unchanged #> 916         18         13   -5 2.688 -1.860 0.063    unchanged #> 917         16         17    1 2.688  0.372  0.71    unchanged #> 918         15         18    3 2.688  1.116 0.264    unchanged #> 919         13         10   -3 2.688 -1.116 0.264    unchanged #> 920         11          8   -3 2.688 -1.116 0.264    unchanged #> 921          4          2   -2 2.688 -0.744 0.457    unchanged #> 922          6         10    4 2.688  1.488 0.137    unchanged #> 923         12         11   -1 2.688 -0.372  0.71    unchanged #> 924         18         18    0 2.688  0.000     1    unchanged #> 925          5          5    0 2.688  0.000     1    unchanged #> 926         19         19    0 2.688  0.000     1    unchanged #> 927          7          5   -2 2.688 -0.744 0.457    unchanged #> 928          9          3   -6 2.688 -2.232 0.026    decreased #> 929         15         19    4 2.688  1.488 0.137    unchanged #> 930         15          9   -6 2.688 -2.232 0.026    decreased #> 931         11         11    0 2.688  0.000     1    unchanged #> 932         12         10   -2 2.688 -0.744 0.457    unchanged #> 933         12         13    1 2.688  0.372  0.71    unchanged #> 934          9          6   -3 2.688 -1.116 0.264    unchanged #> 935         14         14    0 2.688  0.000     1    unchanged #> 936          6          7    1 2.688  0.372  0.71    unchanged #> 937          6          6    0 2.688  0.000     1    unchanged #> 938          8         10    2 2.688  0.744 0.457    unchanged #> 939          3          2   -1 2.688 -0.372  0.71    unchanged #> 940         11         10   -1 2.688 -0.372  0.71    unchanged #> 941         12         15    3 2.688  1.116 0.264    unchanged #> 942         13         14    1 2.688  0.372  0.71    unchanged #> 943         12          8   -4 2.688 -1.488 0.137    unchanged #> 944         15         13   -2 2.688 -0.744 0.457    unchanged #> 945         11         12    1 2.688  0.372  0.71    unchanged #> 946         11         11    0 2.688  0.000     1    unchanged #> 947         11         10   -1 2.688 -0.372  0.71    unchanged #> 948         10         13    3 2.688  1.116 0.264    unchanged #> 949          1          2    1 2.688  0.372  0.71    unchanged #> 950          7         12    5 2.688  1.860 0.063    unchanged #> 951          8          6   -2 2.688 -0.744 0.457    unchanged #> 952         15         12   -3 2.688 -1.116 0.264    unchanged #> 953          7          4   -3 2.688 -1.116 0.264    unchanged #> 954          2          6    4 2.688  1.488 0.137    unchanged #> 955          6          5   -1 2.688 -0.372  0.71    unchanged #> 956          3          3    0 2.688  0.000     1    unchanged #> 957          5          5    0 2.688  0.000     1    unchanged #> 958          6          6    0 2.688  0.000     1    unchanged #> 959         13         17    4 2.688  1.488 0.137    unchanged #> 960          6          7    1 2.688  0.372  0.71    unchanged #> 961          3          2   -1 2.688 -0.372  0.71    unchanged #> 962         12         11   -1 2.688 -0.372  0.71    unchanged #> 963          6          4   -2 2.688 -0.744 0.457    unchanged #> 964         17         12   -5 2.688 -1.860 0.063    unchanged #> 965          5          7    2 2.688  0.744 0.457    unchanged #> 966         13         16    3 2.688  1.116 0.264    unchanged #> 967         15         16    1 2.688  0.372  0.71    unchanged #> 968         12          9   -3 2.688 -1.116 0.264    unchanged #> 969         15         13   -2 2.688 -0.744 0.457    unchanged #> 970         14         16    2 2.688  0.744 0.457    unchanged #> 971          6          7    1 2.688  0.372  0.71    unchanged #> 972         16         16    0 2.688  0.000     1    unchanged #> 973          3          1   -2 2.688 -0.744 0.457    unchanged #> 974          5          5    0 2.688  0.000     1    unchanged #> 975          7          3   -4 2.688 -1.488 0.137    unchanged #> 976         13         13    0 2.688  0.000     1    unchanged #> 977         10         12    2 2.688  0.744 0.457    unchanged #> 978          2          4    2 2.688  0.744 0.457    unchanged #> 979          2          9    7 2.688  2.604 0.009    increased #> 980         10          9   -1 2.688 -0.372  0.71    unchanged #> 981          4          1   -3 2.688 -1.116 0.264    unchanged #> 982          7          4   -3 2.688 -1.116 0.264    unchanged #> 983         17         12   -5 2.688 -1.860 0.063    unchanged #> 984         18         16   -2 2.688 -0.744 0.457    unchanged #> 985         16         11   -5 2.688 -1.860 0.063    unchanged #> 986          5          3   -2 2.688 -0.744 0.457    unchanged #> 987         13         14    1 2.688  0.372  0.71    unchanged #> 988         11          8   -3 2.688 -1.116 0.264    unchanged #> 989          2         12   10 2.688  3.721     0    increased #> 990          9         11    2 2.688  0.744 0.457    unchanged #> 991         11          6   -5 2.688 -1.860 0.063    unchanged #> 992         11         10   -1 2.688 -0.372  0.71    unchanged #> 993          8          6   -2 2.688 -0.744 0.457    unchanged #> 994          1          4    3 2.688  1.116 0.264    unchanged #> 995         10          7   -3 2.688 -1.116 0.264    unchanged #> 996         11          5   -6 2.688 -2.232 0.026    decreased #> 997          7          6   -1 2.688 -0.372  0.71    unchanged #> 998         10         12    2 2.688  0.744 0.457    unchanged #> 999         11          7   -4 2.688 -1.488 0.137    unchanged #> 1000         1          2    1 2.688  0.372  0.71    unchanged  # allows SEM.post != SEM.pre (istats.post <- itemstats(dat_post)$overall) #>     N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  1000            9.745          4.774 0.206 0.063  0.84      1.91 SEM.alpha.post <- istats.post$SEM.alpha  RCI(predat = dat_pre, postdat = dat_post,    SEM.pre=SEM.alpha, SEM.post=SEM.alpha.post) #>      pre.score post.score diff    SE      z     p #> 1           18         19    1 2.694  0.371 0.711 #> 2           18          9   -9 2.694 -3.340 0.001 #> 3           15          9   -6 2.694 -2.227 0.026 #> 4           11         10   -1 2.694 -0.371 0.711 #> 5            4          5    1 2.694  0.371 0.711 #> 6            4          8    4 2.694  1.485 0.138 #> 7           11          8   -3 2.694 -1.113 0.266 #> 8           11         15    4 2.694  1.485 0.138 #> 9            3          3    0 2.694  0.000     1 #> 10           4          8    4 2.694  1.485 0.138 #> 11           1          5    4 2.694  1.485 0.138 #> 12          16         14   -2 2.694 -0.742 0.458 #> 13          12         10   -2 2.694 -0.742 0.458 #> 14          11         10   -1 2.694 -0.371 0.711 #> 15          17         18    1 2.694  0.371 0.711 #> 16           1          4    3 2.694  1.113 0.266 #> 17          10          8   -2 2.694 -0.742 0.458 #> 18          12         11   -1 2.694 -0.371 0.711 #> 19          15         12   -3 2.694 -1.113 0.266 #> 20          16         10   -6 2.694 -2.227 0.026 #> 21           7          6   -1 2.694 -0.371 0.711 #> 22           7         12    5 2.694  1.856 0.063 #> 23           2          4    2 2.694  0.742 0.458 #> 24           5          7    2 2.694  0.742 0.458 #> 25          14         15    1 2.694  0.371 0.711 #> 26           9          6   -3 2.694 -1.113 0.266 #> 27          17         17    0 2.694  0.000     1 #> 28           4          9    5 2.694  1.856 0.063 #> 29          14         16    2 2.694  0.742 0.458 #> 30           4          7    3 2.694  1.113 0.266 #> 31           2          0   -2 2.694 -0.742 0.458 #> 32           9          6   -3 2.694 -1.113 0.266 #> 33          20         20    0 2.694  0.000     1 #> 34           9          6   -3 2.694 -1.113 0.266 #> 35           3          4    1 2.694  0.371 0.711 #> 36          14         15    1 2.694  0.371 0.711 #> 37           8          9    1 2.694  0.371 0.711 #> 38          15         13   -2 2.694 -0.742 0.458 #> 39           9         12    3 2.694  1.113 0.266 #> 40          18         18    0 2.694  0.000     1 #> 41          11         10   -1 2.694 -0.371 0.711 #> 42          12          9   -3 2.694 -1.113 0.266 #> 43           8          7   -1 2.694 -0.371 0.711 #> 44          10         11    1 2.694  0.371 0.711 #> 45           7         10    3 2.694  1.113 0.266 #> 46           8          9    1 2.694  0.371 0.711 #> 47           6          8    2 2.694  0.742 0.458 #> 48           6          7    1 2.694  0.371 0.711 #> 49           6          8    2 2.694  0.742 0.458 #> 50           8         11    3 2.694  1.113 0.266 #> 51          13         17    4 2.694  1.485 0.138 #> 52           6          6    0 2.694  0.000     1 #> 53          19         13   -6 2.694 -2.227 0.026 #> 54           6         11    5 2.694  1.856 0.063 #> 55           9          8   -1 2.694 -0.371 0.711 #> 56           7          8    1 2.694  0.371 0.711 #> 57           9          6   -3 2.694 -1.113 0.266 #> 58           3          3    0 2.694  0.000     1 #> 59          10          8   -2 2.694 -0.742 0.458 #> 60          14         14    0 2.694  0.000     1 #> 61          12         12    0 2.694  0.000     1 #> 62          15         14   -1 2.694 -0.371 0.711 #> 63          13         12   -1 2.694 -0.371 0.711 #> 64           5          5    0 2.694  0.000     1 #> 65           5          4   -1 2.694 -0.371 0.711 #> 66           5          4   -1 2.694 -0.371 0.711 #> 67          18         14   -4 2.694 -1.485 0.138 #> 68           9          8   -1 2.694 -0.371 0.711 #> 69          11          9   -2 2.694 -0.742 0.458 #> 70          19         17   -2 2.694 -0.742 0.458 #> 71           9          5   -4 2.694 -1.485 0.138 #> 72          16         15   -1 2.694 -0.371 0.711 #> 73          10          9   -1 2.694 -0.371 0.711 #> 74          11         11    0 2.694  0.000     1 #> 75          14         10   -4 2.694 -1.485 0.138 #> 76          14         15    1 2.694  0.371 0.711 #> 77           5          4   -1 2.694 -0.371 0.711 #> 78          11          9   -2 2.694 -0.742 0.458 #> 79          15         10   -5 2.694 -1.856 0.063 #> 80          11         11    0 2.694  0.000     1 #> 81          10          8   -2 2.694 -0.742 0.458 #> 82          12         12    0 2.694  0.000     1 #> 83          11         11    0 2.694  0.000     1 #> 84           5          1   -4 2.694 -1.485 0.138 #> 85           7          9    2 2.694  0.742 0.458 #> 86           7         10    3 2.694  1.113 0.266 #> 87           3          7    4 2.694  1.485 0.138 #> 88           9         11    2 2.694  0.742 0.458 #> 89           8          9    1 2.694  0.371 0.711 #> 90          12         11   -1 2.694 -0.371 0.711 #> 91           6          1   -5 2.694 -1.856 0.063 #> 92           6          8    2 2.694  0.742 0.458 #> 93           3          5    2 2.694  0.742 0.458 #> 94          12         12    0 2.694  0.000     1 #> 95          18         16   -2 2.694 -0.742 0.458 #> 96           9          7   -2 2.694 -0.742 0.458 #> 97           8         11    3 2.694  1.113 0.266 #> 98           7          7    0 2.694  0.000     1 #> 99          12         11   -1 2.694 -0.371 0.711 #> 100         10         10    0 2.694  0.000     1 #> 101          5          5    0 2.694  0.000     1 #> 102         14         15    1 2.694  0.371 0.711 #> 103          9          9    0 2.694  0.000     1 #> 104          8         15    7 2.694  2.598 0.009 #> 105          2          3    1 2.694  0.371 0.711 #> 106          7         10    3 2.694  1.113 0.266 #> 107         12         12    0 2.694  0.000     1 #> 108          2          2    0 2.694  0.000     1 #> 109         14         13   -1 2.694 -0.371 0.711 #> 110          6          4   -2 2.694 -0.742 0.458 #> 111         15         10   -5 2.694 -1.856 0.063 #> 112          5          5    0 2.694  0.000     1 #> 113         15         18    3 2.694  1.113 0.266 #> 114          2          0   -2 2.694 -0.742 0.458 #> 115          9         12    3 2.694  1.113 0.266 #> 116         14         14    0 2.694  0.000     1 #> 117         10          7   -3 2.694 -1.113 0.266 #> 118          6          5   -1 2.694 -0.371 0.711 #> 119         12          9   -3 2.694 -1.113 0.266 #> 120          7          3   -4 2.694 -1.485 0.138 #> 121          9         12    3 2.694  1.113 0.266 #> 122          2          6    4 2.694  1.485 0.138 #> 123          9          6   -3 2.694 -1.113 0.266 #> 124          2          5    3 2.694  1.113 0.266 #> 125         12         12    0 2.694  0.000     1 #> 126         16         19    3 2.694  1.113 0.266 #> 127         13         14    1 2.694  0.371 0.711 #> 128         13         14    1 2.694  0.371 0.711 #> 129         14         15    1 2.694  0.371 0.711 #> 130          7         14    7 2.694  2.598 0.009 #> 131         10         11    1 2.694  0.371 0.711 #> 132          3          3    0 2.694  0.000     1 #> 133         15         15    0 2.694  0.000     1 #> 134         18         19    1 2.694  0.371 0.711 #> 135          2          5    3 2.694  1.113 0.266 #> 136         12         10   -2 2.694 -0.742 0.458 #> 137         12         14    2 2.694  0.742 0.458 #> 138          6          3   -3 2.694 -1.113 0.266 #> 139         13          9   -4 2.694 -1.485 0.138 #> 140          8          5   -3 2.694 -1.113 0.266 #> 141         18         17   -1 2.694 -0.371 0.711 #> 142         15         15    0 2.694  0.000     1 #> 143          7          9    2 2.694  0.742 0.458 #> 144         14         10   -4 2.694 -1.485 0.138 #> 145          3          5    2 2.694  0.742 0.458 #> 146          1          2    1 2.694  0.371 0.711 #> 147          5          6    1 2.694  0.371 0.711 #> 148          8          8    0 2.694  0.000     1 #> 149         13         15    2 2.694  0.742 0.458 #> 150          9          9    0 2.694  0.000     1 #> 151          8          9    1 2.694  0.371 0.711 #> 152          2          1   -1 2.694 -0.371 0.711 #> 153          3          3    0 2.694  0.000     1 #> 154          7          5   -2 2.694 -0.742 0.458 #> 155         16         13   -3 2.694 -1.113 0.266 #> 156          9         12    3 2.694  1.113 0.266 #> 157         15         17    2 2.694  0.742 0.458 #> 158         10          5   -5 2.694 -1.856 0.063 #> 159          8         10    2 2.694  0.742 0.458 #> 160         17         11   -6 2.694 -2.227 0.026 #> 161         14          8   -6 2.694 -2.227 0.026 #> 162          8          8    0 2.694  0.000     1 #> 163          3          5    2 2.694  0.742 0.458 #> 164         16          8   -8 2.694 -2.969 0.003 #> 165          9          7   -2 2.694 -0.742 0.458 #> 166          7          8    1 2.694  0.371 0.711 #> 167         15         15    0 2.694  0.000     1 #> 168         15         18    3 2.694  1.113 0.266 #> 169          3          2   -1 2.694 -0.371 0.711 #> 170          1          2    1 2.694  0.371 0.711 #> 171          2          0   -2 2.694 -0.742 0.458 #> 172         20         15   -5 2.694 -1.856 0.063 #> 173         10         12    2 2.694  0.742 0.458 #> 174          9          3   -6 2.694 -2.227 0.026 #> 175          5         15   10 2.694  3.712     0 #> 176          9          7   -2 2.694 -0.742 0.458 #> 177         15         16    1 2.694  0.371 0.711 #> 178          2          5    3 2.694  1.113 0.266 #> 179         18         20    2 2.694  0.742 0.458 #> 180         10          8   -2 2.694 -0.742 0.458 #> 181          6          6    0 2.694  0.000     1 #> 182          3          5    2 2.694  0.742 0.458 #> 183          9          7   -2 2.694 -0.742 0.458 #> 184          7         10    3 2.694  1.113 0.266 #> 185          6          3   -3 2.694 -1.113 0.266 #> 186          7          5   -2 2.694 -0.742 0.458 #> 187          7          4   -3 2.694 -1.113 0.266 #> 188         10          9   -1 2.694 -0.371 0.711 #> 189         17         12   -5 2.694 -1.856 0.063 #> 190          2          4    2 2.694  0.742 0.458 #> 191         16         15   -1 2.694 -0.371 0.711 #> 192          6          9    3 2.694  1.113 0.266 #> 193         10         13    3 2.694  1.113 0.266 #> 194          2          7    5 2.694  1.856 0.063 #> 195          5          3   -2 2.694 -0.742 0.458 #> 196         12          8   -4 2.694 -1.485 0.138 #> 197          5          1   -4 2.694 -1.485 0.138 #> 198          5          2   -3 2.694 -1.113 0.266 #> 199         17         17    0 2.694  0.000     1 #> 200          4          2   -2 2.694 -0.742 0.458 #> 201         13         13    0 2.694  0.000     1 #> 202         14         12   -2 2.694 -0.742 0.458 #> 203          2          2    0 2.694  0.000     1 #> 204         11          9   -2 2.694 -0.742 0.458 #> 205         10         11    1 2.694  0.371 0.711 #> 206         13         11   -2 2.694 -0.742 0.458 #> 207         17         18    1 2.694  0.371 0.711 #> 208         14         15    1 2.694  0.371 0.711 #> 209         18         18    0 2.694  0.000     1 #> 210          2          0   -2 2.694 -0.742 0.458 #> 211          9         11    2 2.694  0.742 0.458 #> 212         10         12    2 2.694  0.742 0.458 #> 213         16         14   -2 2.694 -0.742 0.458 #> 214          2          2    0 2.694  0.000     1 #> 215          3          4    1 2.694  0.371 0.711 #> 216         15         17    2 2.694  0.742 0.458 #> 217         14         12   -2 2.694 -0.742 0.458 #> 218          3          5    2 2.694  0.742 0.458 #> 219          9          8   -1 2.694 -0.371 0.711 #> 220          0          1    1 2.694  0.371 0.711 #> 221         14         12   -2 2.694 -0.742 0.458 #> 222          2          1   -1 2.694 -0.371 0.711 #> 223          5         10    5 2.694  1.856 0.063 #> 224          8         15    7 2.694  2.598 0.009 #> 225         12         14    2 2.694  0.742 0.458 #> 226         14         14    0 2.694  0.000     1 #> 227         11         11    0 2.694  0.000     1 #> 228          9          9    0 2.694  0.000     1 #> 229         17         15   -2 2.694 -0.742 0.458 #> 230          2          2    0 2.694  0.000     1 #> 231          6          9    3 2.694  1.113 0.266 #> 232          9         14    5 2.694  1.856 0.063 #> 233         13         13    0 2.694  0.000     1 #> 234         13         17    4 2.694  1.485 0.138 #> 235         13          6   -7 2.694 -2.598 0.009 #> 236          8          8    0 2.694  0.000     1 #> 237          8          9    1 2.694  0.371 0.711 #> 238          6         12    6 2.694  2.227 0.026 #> 239          9          9    0 2.694  0.000     1 #> 240          7         12    5 2.694  1.856 0.063 #> 241         18         18    0 2.694  0.000     1 #> 242          4          3   -1 2.694 -0.371 0.711 #> 243          1          2    1 2.694  0.371 0.711 #> 244          3          1   -2 2.694 -0.742 0.458 #> 245          6          5   -1 2.694 -0.371 0.711 #> 246          4          4    0 2.694  0.000     1 #> 247         17         17    0 2.694  0.000     1 #> 248         20         18   -2 2.694 -0.742 0.458 #> 249          8         10    2 2.694  0.742 0.458 #> 250         15         18    3 2.694  1.113 0.266 #> 251         15         13   -2 2.694 -0.742 0.458 #> 252          8          8    0 2.694  0.000     1 #> 253          8          8    0 2.694  0.000     1 #> 254         11         13    2 2.694  0.742 0.458 #> 255         18         16   -2 2.694 -0.742 0.458 #> 256         10         11    1 2.694  0.371 0.711 #> 257         18         16   -2 2.694 -0.742 0.458 #> 258         10         11    1 2.694  0.371 0.711 #> 259          4          3   -1 2.694 -0.371 0.711 #> 260         11         14    3 2.694  1.113 0.266 #> 261         14         11   -3 2.694 -1.113 0.266 #> 262         14         13   -1 2.694 -0.371 0.711 #> 263         19         17   -2 2.694 -0.742 0.458 #> 264          4          6    2 2.694  0.742 0.458 #> 265         17         17    0 2.694  0.000     1 #> 266          9         12    3 2.694  1.113 0.266 #> 267          4          7    3 2.694  1.113 0.266 #> 268         15         12   -3 2.694 -1.113 0.266 #> 269          7          7    0 2.694  0.000     1 #> 270          8         11    3 2.694  1.113 0.266 #> 271          1          2    1 2.694  0.371 0.711 #> 272          8          6   -2 2.694 -0.742 0.458 #> 273          6          6    0 2.694  0.000     1 #> 274         17         16   -1 2.694 -0.371 0.711 #> 275         13         11   -2 2.694 -0.742 0.458 #> 276          2          1   -1 2.694 -0.371 0.711 #> 277          9         10    1 2.694  0.371 0.711 #> 278          2          0   -2 2.694 -0.742 0.458 #> 279         11         13    2 2.694  0.742 0.458 #> 280         17         17    0 2.694  0.000     1 #> 281         16         16    0 2.694  0.000     1 #> 282         14         15    1 2.694  0.371 0.711 #> 283         15         16    1 2.694  0.371 0.711 #> 284          4          1   -3 2.694 -1.113 0.266 #> 285         17         18    1 2.694  0.371 0.711 #> 286         10          7   -3 2.694 -1.113 0.266 #> 287         12         15    3 2.694  1.113 0.266 #> 288         15         17    2 2.694  0.742 0.458 #> 289         17         15   -2 2.694 -0.742 0.458 #> 290         14         11   -3 2.694 -1.113 0.266 #> 291         15         12   -3 2.694 -1.113 0.266 #> 292         10         10    0 2.694  0.000     1 #> 293          0          2    2 2.694  0.742 0.458 #> 294         12          8   -4 2.694 -1.485 0.138 #> 295          4          7    3 2.694  1.113 0.266 #> 296         15         15    0 2.694  0.000     1 #> 297         18         17   -1 2.694 -0.371 0.711 #> 298          9          7   -2 2.694 -0.742 0.458 #> 299         18         12   -6 2.694 -2.227 0.026 #> 300          0          1    1 2.694  0.371 0.711 #> 301          4         11    7 2.694  2.598 0.009 #> 302         10          8   -2 2.694 -0.742 0.458 #> 303          5          2   -3 2.694 -1.113 0.266 #> 304         19         17   -2 2.694 -0.742 0.458 #> 305         11          6   -5 2.694 -1.856 0.063 #> 306         15         15    0 2.694  0.000     1 #> 307         10         12    2 2.694  0.742 0.458 #> 308         11          8   -3 2.694 -1.113 0.266 #> 309         10          7   -3 2.694 -1.113 0.266 #> 310          8          6   -2 2.694 -0.742 0.458 #> 311         14         15    1 2.694  0.371 0.711 #> 312         16         11   -5 2.694 -1.856 0.063 #> 313          6          4   -2 2.694 -0.742 0.458 #> 314         11         11    0 2.694  0.000     1 #> 315          7          7    0 2.694  0.000     1 #> 316          9         11    2 2.694  0.742 0.458 #> 317          7         11    4 2.694  1.485 0.138 #> 318          1          5    4 2.694  1.485 0.138 #> 319         10          9   -1 2.694 -0.371 0.711 #> 320         13         10   -3 2.694 -1.113 0.266 #> 321         13         10   -3 2.694 -1.113 0.266 #> 322         13          9   -4 2.694 -1.485 0.138 #> 323          1          2    1 2.694  0.371 0.711 #> 324         13         13    0 2.694  0.000     1 #> 325         13         13    0 2.694  0.000     1 #> 326         13         13    0 2.694  0.000     1 #> 327          7          6   -1 2.694 -0.371 0.711 #> 328          9         12    3 2.694  1.113 0.266 #> 329         13         13    0 2.694  0.000     1 #> 330          6         14    8 2.694  2.969 0.003 #> 331         12         14    2 2.694  0.742 0.458 #> 332          9          5   -4 2.694 -1.485 0.138 #> 333         13         12   -1 2.694 -0.371 0.711 #> 334         13         14    1 2.694  0.371 0.711 #> 335          9         11    2 2.694  0.742 0.458 #> 336         10          9   -1 2.694 -0.371 0.711 #> 337         12         13    1 2.694  0.371 0.711 #> 338         16         14   -2 2.694 -0.742 0.458 #> 339          6         10    4 2.694  1.485 0.138 #> 340         17         15   -2 2.694 -0.742 0.458 #> 341         12         14    2 2.694  0.742 0.458 #> 342          6          5   -1 2.694 -0.371 0.711 #> 343          5          9    4 2.694  1.485 0.138 #> 344          5          4   -1 2.694 -0.371 0.711 #> 345          6          9    3 2.694  1.113 0.266 #> 346         12          8   -4 2.694 -1.485 0.138 #> 347         12         13    1 2.694  0.371 0.711 #> 348          8         11    3 2.694  1.113 0.266 #> 349          5          6    1 2.694  0.371 0.711 #> 350         11         12    1 2.694  0.371 0.711 #> 351          9          7   -2 2.694 -0.742 0.458 #> 352         18         16   -2 2.694 -0.742 0.458 #> 353          9         11    2 2.694  0.742 0.458 #> 354          4          3   -1 2.694 -0.371 0.711 #> 355         12         17    5 2.694  1.856 0.063 #> 356         16         15   -1 2.694 -0.371 0.711 #> 357          9         13    4 2.694  1.485 0.138 #> 358         10          7   -3 2.694 -1.113 0.266 #> 359          1          3    2 2.694  0.742 0.458 #> 360         10         12    2 2.694  0.742 0.458 #> 361          5          5    0 2.694  0.000     1 #> 362         13         15    2 2.694  0.742 0.458 #> 363          9         12    3 2.694  1.113 0.266 #> 364         13         14    1 2.694  0.371 0.711 #> 365          9          5   -4 2.694 -1.485 0.138 #> 366         17         17    0 2.694  0.000     1 #> 367          4          2   -2 2.694 -0.742 0.458 #> 368         12          9   -3 2.694 -1.113 0.266 #> 369          3         10    7 2.694  2.598 0.009 #> 370         12         12    0 2.694  0.000     1 #> 371         14         18    4 2.694  1.485 0.138 #> 372         10         11    1 2.694  0.371 0.711 #> 373          7          9    2 2.694  0.742 0.458 #> 374          4          6    2 2.694  0.742 0.458 #> 375         10          5   -5 2.694 -1.856 0.063 #> 376         16         14   -2 2.694 -0.742 0.458 #> 377         15         15    0 2.694  0.000     1 #> 378         13         12   -1 2.694 -0.371 0.711 #> 379          0          3    3 2.694  1.113 0.266 #> 380          7          8    1 2.694  0.371 0.711 #> 381          6          7    1 2.694  0.371 0.711 #> 382          6          6    0 2.694  0.000     1 #> 383          6          8    2 2.694  0.742 0.458 #> 384          4          4    0 2.694  0.000     1 #> 385          3          4    1 2.694  0.371 0.711 #> 386          2          7    5 2.694  1.856 0.063 #> 387          9          9    0 2.694  0.000     1 #> 388         19         14   -5 2.694 -1.856 0.063 #> 389          3          6    3 2.694  1.113 0.266 #> 390          0          2    2 2.694  0.742 0.458 #> 391         15         14   -1 2.694 -0.371 0.711 #> 392         11          4   -7 2.694 -2.598 0.009 #> 393          5          6    1 2.694  0.371 0.711 #> 394          2          1   -1 2.694 -0.371 0.711 #> 395          7         13    6 2.694  2.227 0.026 #> 396         13         11   -2 2.694 -0.742 0.458 #> 397         15         14   -1 2.694 -0.371 0.711 #> 398          2          4    2 2.694  0.742 0.458 #> 399         13          6   -7 2.694 -2.598 0.009 #> 400         15          9   -6 2.694 -2.227 0.026 #> 401          7          8    1 2.694  0.371 0.711 #> 402          3          3    0 2.694  0.000     1 #> 403          9         12    3 2.694  1.113 0.266 #> 404         17         17    0 2.694  0.000     1 #> 405          1          4    3 2.694  1.113 0.266 #> 406          4          2   -2 2.694 -0.742 0.458 #> 407          7         10    3 2.694  1.113 0.266 #> 408          7         11    4 2.694  1.485 0.138 #> 409         12         12    0 2.694  0.000     1 #> 410          8          6   -2 2.694 -0.742 0.458 #> 411          8          4   -4 2.694 -1.485 0.138 #> 412         14         11   -3 2.694 -1.113 0.266 #> 413          5          3   -2 2.694 -0.742 0.458 #> 414         16         17    1 2.694  0.371 0.711 #> 415         11         15    4 2.694  1.485 0.138 #> 416         15         12   -3 2.694 -1.113 0.266 #> 417         14         15    1 2.694  0.371 0.711 #> 418          5          6    1 2.694  0.371 0.711 #> 419          5         10    5 2.694  1.856 0.063 #> 420         10         13    3 2.694  1.113 0.266 #> 421          3          2   -1 2.694 -0.371 0.711 #> 422         17         17    0 2.694  0.000     1 #> 423         11         11    0 2.694  0.000     1 #> 424         14         13   -1 2.694 -0.371 0.711 #> 425         16          9   -7 2.694 -2.598 0.009 #> 426         15         16    1 2.694  0.371 0.711 #> 427         11          7   -4 2.694 -1.485 0.138 #> 428          8         11    3 2.694  1.113 0.266 #> 429         13         13    0 2.694  0.000     1 #> 430         10         10    0 2.694  0.000     1 #> 431         15         14   -1 2.694 -0.371 0.711 #> 432          1          4    3 2.694  1.113 0.266 #> 433          3          3    0 2.694  0.000     1 #> 434         11         15    4 2.694  1.485 0.138 #> 435          3          4    1 2.694  0.371 0.711 #> 436          6         11    5 2.694  1.856 0.063 #> 437          2          0   -2 2.694 -0.742 0.458 #> 438         13         14    1 2.694  0.371 0.711 #> 439         18         14   -4 2.694 -1.485 0.138 #> 440          6         13    7 2.694  2.598 0.009 #> 441         14         12   -2 2.694 -0.742 0.458 #> 442          4          5    1 2.694  0.371 0.711 #> 443         10          9   -1 2.694 -0.371 0.711 #> 444         18         18    0 2.694  0.000     1 #> 445         17         16   -1 2.694 -0.371 0.711 #> 446         16         17    1 2.694  0.371 0.711 #> 447          0          0    0 2.694  0.000     1 #> 448         12         10   -2 2.694 -0.742 0.458 #> 449          4          7    3 2.694  1.113 0.266 #> 450          1          4    3 2.694  1.113 0.266 #> 451         19         18   -1 2.694 -0.371 0.711 #> 452          8          5   -3 2.694 -1.113 0.266 #> 453          8         11    3 2.694  1.113 0.266 #> 454          5          9    4 2.694  1.485 0.138 #> 455         18         17   -1 2.694 -0.371 0.711 #> 456         12         11   -1 2.694 -0.371 0.711 #> 457          5          9    4 2.694  1.485 0.138 #> 458          2          5    3 2.694  1.113 0.266 #> 459          1          2    1 2.694  0.371 0.711 #> 460         19         18   -1 2.694 -0.371 0.711 #> 461         15         17    2 2.694  0.742 0.458 #> 462         17         13   -4 2.694 -1.485 0.138 #> 463         13         15    2 2.694  0.742 0.458 #> 464         14         14    0 2.694  0.000     1 #> 465          6          9    3 2.694  1.113 0.266 #> 466          9          5   -4 2.694 -1.485 0.138 #> 467         16         15   -1 2.694 -0.371 0.711 #> 468          3          2   -1 2.694 -0.371 0.711 #> 469          1          7    6 2.694  2.227 0.026 #> 470         13         10   -3 2.694 -1.113 0.266 #> 471          5          4   -1 2.694 -0.371 0.711 #> 472          6          7    1 2.694  0.371 0.711 #> 473         20         19   -1 2.694 -0.371 0.711 #> 474          7          9    2 2.694  0.742 0.458 #> 475          1          1    0 2.694  0.000     1 #> 476         15         13   -2 2.694 -0.742 0.458 #> 477         16         11   -5 2.694 -1.856 0.063 #> 478         16         12   -4 2.694 -1.485 0.138 #> 479         11         10   -1 2.694 -0.371 0.711 #> 480         15         16    1 2.694  0.371 0.711 #> 481          7          8    1 2.694  0.371 0.711 #> 482         15         12   -3 2.694 -1.113 0.266 #> 483         15         16    1 2.694  0.371 0.711 #> 484         12         11   -1 2.694 -0.371 0.711 #> 485         12         10   -2 2.694 -0.742 0.458 #> 486          5          8    3 2.694  1.113 0.266 #> 487          8         12    4 2.694  1.485 0.138 #> 488         11         13    2 2.694  0.742 0.458 #> 489         16         17    1 2.694  0.371 0.711 #> 490          7          8    1 2.694  0.371 0.711 #> 491         19         18   -1 2.694 -0.371 0.711 #> 492          4          5    1 2.694  0.371 0.711 #> 493         19         16   -3 2.694 -1.113 0.266 #> 494          8          9    1 2.694  0.371 0.711 #> 495         10         15    5 2.694  1.856 0.063 #> 496          6          7    1 2.694  0.371 0.711 #> 497         11          8   -3 2.694 -1.113 0.266 #> 498          3          9    6 2.694  2.227 0.026 #> 499          8          8    0 2.694  0.000     1 #> 500          7         11    4 2.694  1.485 0.138 #> 501         13         16    3 2.694  1.113 0.266 #> 502         11         10   -1 2.694 -0.371 0.711 #> 503          0          1    1 2.694  0.371 0.711 #> 504          4          5    1 2.694  0.371 0.711 #> 505          4          6    2 2.694  0.742 0.458 #> 506         12         10   -2 2.694 -0.742 0.458 #> 507         18         16   -2 2.694 -0.742 0.458 #> 508         13         14    1 2.694  0.371 0.711 #> 509          5          7    2 2.694  0.742 0.458 #> 510          8         10    2 2.694  0.742 0.458 #> 511          6         10    4 2.694  1.485 0.138 #> 512          7          9    2 2.694  0.742 0.458 #> 513          5          5    0 2.694  0.000     1 #> 514          5         10    5 2.694  1.856 0.063 #> 515          9         11    2 2.694  0.742 0.458 #> 516         17         17    0 2.694  0.000     1 #> 517         14         13   -1 2.694 -0.371 0.711 #> 518          8         15    7 2.694  2.598 0.009 #> 519         14         14    0 2.694  0.000     1 #> 520         13          8   -5 2.694 -1.856 0.063 #> 521         14         12   -2 2.694 -0.742 0.458 #> 522          6          2   -4 2.694 -1.485 0.138 #> 523         17         14   -3 2.694 -1.113 0.266 #> 524         13         13    0 2.694  0.000     1 #> 525         14         14    0 2.694  0.000     1 #> 526         16         12   -4 2.694 -1.485 0.138 #> 527         12         10   -2 2.694 -0.742 0.458 #> 528         15         16    1 2.694  0.371 0.711 #> 529         13         10   -3 2.694 -1.113 0.266 #> 530          9         10    1 2.694  0.371 0.711 #> 531         12          7   -5 2.694 -1.856 0.063 #> 532         20         20    0 2.694  0.000     1 #> 533         17         12   -5 2.694 -1.856 0.063 #> 534          6          8    2 2.694  0.742 0.458 #> 535         19         18   -1 2.694 -0.371 0.711 #> 536         12         12    0 2.694  0.000     1 #> 537         10          7   -3 2.694 -1.113 0.266 #> 538          6          4   -2 2.694 -0.742 0.458 #> 539          8          8    0 2.694  0.000     1 #> 540         10         12    2 2.694  0.742 0.458 #> 541          4          7    3 2.694  1.113 0.266 #> 542          2          2    0 2.694  0.000     1 #> 543          6          5   -1 2.694 -0.371 0.711 #> 544         12         10   -2 2.694 -0.742 0.458 #> 545          4          5    1 2.694  0.371 0.711 #> 546         11         10   -1 2.694 -0.371 0.711 #> 547         14         12   -2 2.694 -0.742 0.458 #> 548         13         15    2 2.694  0.742 0.458 #> 549         12          9   -3 2.694 -1.113 0.266 #> 550         11         11    0 2.694  0.000     1 #> 551          8          2   -6 2.694 -2.227 0.026 #> 552         14         15    1 2.694  0.371 0.711 #> 553         11         14    3 2.694  1.113 0.266 #> 554         13         12   -1 2.694 -0.371 0.711 #> 555          2          3    1 2.694  0.371 0.711 #> 556          9         13    4 2.694  1.485 0.138 #> 557         10         11    1 2.694  0.371 0.711 #> 558          8         12    4 2.694  1.485 0.138 #> 559         11         12    1 2.694  0.371 0.711 #> 560         19         18   -1 2.694 -0.371 0.711 #> 561         12         12    0 2.694  0.000     1 #> 562         12          8   -4 2.694 -1.485 0.138 #> 563          3          6    3 2.694  1.113 0.266 #> 564          4          0   -4 2.694 -1.485 0.138 #> 565         14         14    0 2.694  0.000     1 #> 566          3          4    1 2.694  0.371 0.711 #> 567         18         16   -2 2.694 -0.742 0.458 #> 568          3          2   -1 2.694 -0.371 0.711 #> 569         17         19    2 2.694  0.742 0.458 #> 570         10          8   -2 2.694 -0.742 0.458 #> 571         16         13   -3 2.694 -1.113 0.266 #> 572          8          8    0 2.694  0.000     1 #> 573         15         17    2 2.694  0.742 0.458 #> 574          7         12    5 2.694  1.856 0.063 #> 575          6          2   -4 2.694 -1.485 0.138 #> 576         11         14    3 2.694  1.113 0.266 #> 577         13         12   -1 2.694 -0.371 0.711 #> 578         17         14   -3 2.694 -1.113 0.266 #> 579          5          9    4 2.694  1.485 0.138 #> 580         12         17    5 2.694  1.856 0.063 #> 581         11         10   -1 2.694 -0.371 0.711 #> 582          6         12    6 2.694  2.227 0.026 #> 583         11         13    2 2.694  0.742 0.458 #> 584         16         18    2 2.694  0.742 0.458 #> 585          8          6   -2 2.694 -0.742 0.458 #> 586          7          9    2 2.694  0.742 0.458 #> 587         12         11   -1 2.694 -0.371 0.711 #> 588          9          7   -2 2.694 -0.742 0.458 #> 589          9          6   -3 2.694 -1.113 0.266 #> 590         14         13   -1 2.694 -0.371 0.711 #> 591         15         15    0 2.694  0.000     1 #> 592         19         15   -4 2.694 -1.485 0.138 #> 593          6          7    1 2.694  0.371 0.711 #> 594          4          3   -1 2.694 -0.371 0.711 #> 595          4          6    2 2.694  0.742 0.458 #> 596          4          3   -1 2.694 -0.371 0.711 #> 597          4          4    0 2.694  0.000     1 #> 598         10          6   -4 2.694 -1.485 0.138 #> 599          8         14    6 2.694  2.227 0.026 #> 600          9         12    3 2.694  1.113 0.266 #> 601         10         12    2 2.694  0.742 0.458 #> 602         12          9   -3 2.694 -1.113 0.266 #> 603         13          9   -4 2.694 -1.485 0.138 #> 604         11         11    0 2.694  0.000     1 #> 605          2          4    2 2.694  0.742 0.458 #> 606         16         14   -2 2.694 -0.742 0.458 #> 607          2          1   -1 2.694 -0.371 0.711 #> 608          3          2   -1 2.694 -0.371 0.711 #> 609          6          4   -2 2.694 -0.742 0.458 #> 610         15         11   -4 2.694 -1.485 0.138 #> 611          7          6   -1 2.694 -0.371 0.711 #> 612         14         18    4 2.694  1.485 0.138 #> 613          7         14    7 2.694  2.598 0.009 #> 614         18         14   -4 2.694 -1.485 0.138 #> 615          9          6   -3 2.694 -1.113 0.266 #> 616         11         11    0 2.694  0.000     1 #> 617          6          2   -4 2.694 -1.485 0.138 #> 618         10          7   -3 2.694 -1.113 0.266 #> 619          3          2   -1 2.694 -0.371 0.711 #> 620          8          4   -4 2.694 -1.485 0.138 #> 621          8         10    2 2.694  0.742 0.458 #> 622         16         16    0 2.694  0.000     1 #> 623          4          2   -2 2.694 -0.742 0.458 #> 624         13         15    2 2.694  0.742 0.458 #> 625         11         11    0 2.694  0.000     1 #> 626         14         13   -1 2.694 -0.371 0.711 #> 627          4          8    4 2.694  1.485 0.138 #> 628          6          8    2 2.694  0.742 0.458 #> 629         15          9   -6 2.694 -2.227 0.026 #> 630          2          3    1 2.694  0.371 0.711 #> 631          2          3    1 2.694  0.371 0.711 #> 632          8          6   -2 2.694 -0.742 0.458 #> 633          8          4   -4 2.694 -1.485 0.138 #> 634         12         18    6 2.694  2.227 0.026 #> 635         15         15    0 2.694  0.000     1 #> 636         10         10    0 2.694  0.000     1 #> 637          3          3    0 2.694  0.000     1 #> 638         14         15    1 2.694  0.371 0.711 #> 639          9          6   -3 2.694 -1.113 0.266 #> 640          2          5    3 2.694  1.113 0.266 #> 641         14         17    3 2.694  1.113 0.266 #> 642          4          2   -2 2.694 -0.742 0.458 #> 643         12         13    1 2.694  0.371 0.711 #> 644         10          7   -3 2.694 -1.113 0.266 #> 645          3          4    1 2.694  0.371 0.711 #> 646          4          2   -2 2.694 -0.742 0.458 #> 647          2          6    4 2.694  1.485 0.138 #> 648         11          8   -3 2.694 -1.113 0.266 #> 649         10         10    0 2.694  0.000     1 #> 650         17         17    0 2.694  0.000     1 #> 651          8         10    2 2.694  0.742 0.458 #> 652          8          9    1 2.694  0.371 0.711 #> 653         17         17    0 2.694  0.000     1 #> 654         15         13   -2 2.694 -0.742 0.458 #> 655         14         19    5 2.694  1.856 0.063 #> 656         10         14    4 2.694  1.485 0.138 #> 657         12         13    1 2.694  0.371 0.711 #> 658          7         12    5 2.694  1.856 0.063 #> 659         11         12    1 2.694  0.371 0.711 #> 660         13         10   -3 2.694 -1.113 0.266 #> 661          7          7    0 2.694  0.000     1 #> 662          8          6   -2 2.694 -0.742 0.458 #> 663          7          5   -2 2.694 -0.742 0.458 #> 664         14         10   -4 2.694 -1.485 0.138 #> 665         17         19    2 2.694  0.742 0.458 #> 666          9          6   -3 2.694 -1.113 0.266 #> 667          3          3    0 2.694  0.000     1 #> 668         15         11   -4 2.694 -1.485 0.138 #> 669          7          8    1 2.694  0.371 0.711 #> 670         12         12    0 2.694  0.000     1 #> 671         13         13    0 2.694  0.000     1 #> 672         16         20    4 2.694  1.485 0.138 #> 673         13          9   -4 2.694 -1.485 0.138 #> 674         14         16    2 2.694  0.742 0.458 #> 675          7          2   -5 2.694 -1.856 0.063 #> 676         10          6   -4 2.694 -1.485 0.138 #> 677         10         12    2 2.694  0.742 0.458 #> 678          8          9    1 2.694  0.371 0.711 #> 679          4          7    3 2.694  1.113 0.266 #> 680          2          4    2 2.694  0.742 0.458 #> 681         13         10   -3 2.694 -1.113 0.266 #> 682          5         12    7 2.694  2.598 0.009 #> 683          5          6    1 2.694  0.371 0.711 #> 684         10          7   -3 2.694 -1.113 0.266 #> 685         13         12   -1 2.694 -0.371 0.711 #> 686         17         19    2 2.694  0.742 0.458 #> 687         11         12    1 2.694  0.371 0.711 #> 688          4         10    6 2.694  2.227 0.026 #> 689          6          4   -2 2.694 -0.742 0.458 #> 690          3          5    2 2.694  0.742 0.458 #> 691         11         14    3 2.694  1.113 0.266 #> 692          7          2   -5 2.694 -1.856 0.063 #> 693          8         10    2 2.694  0.742 0.458 #> 694         13         11   -2 2.694 -0.742 0.458 #> 695         13         16    3 2.694  1.113 0.266 #> 696         16         15   -1 2.694 -0.371 0.711 #> 697         16         12   -4 2.694 -1.485 0.138 #> 698          3          3    0 2.694  0.000     1 #> 699         12         15    3 2.694  1.113 0.266 #> 700         12         16    4 2.694  1.485 0.138 #> 701          3          3    0 2.694  0.000     1 #> 702         20         20    0 2.694  0.000     1 #> 703          7         10    3 2.694  1.113 0.266 #> 704          9         13    4 2.694  1.485 0.138 #> 705          5          7    2 2.694  0.742 0.458 #> 706          2          2    0 2.694  0.000     1 #> 707         13         16    3 2.694  1.113 0.266 #> 708          5          7    2 2.694  0.742 0.458 #> 709          8          7   -1 2.694 -0.371 0.711 #> 710         15         18    3 2.694  1.113 0.266 #> 711          3          1   -2 2.694 -0.742 0.458 #> 712          5          5    0 2.694  0.000     1 #> 713          5          3   -2 2.694 -0.742 0.458 #> 714         15         16    1 2.694  0.371 0.711 #> 715         12         10   -2 2.694 -0.742 0.458 #> 716          9          6   -3 2.694 -1.113 0.266 #> 717          5          2   -3 2.694 -1.113 0.266 #> 718          3          4    1 2.694  0.371 0.711 #> 719          2          6    4 2.694  1.485 0.138 #> 720          4          6    2 2.694  0.742 0.458 #> 721         10         12    2 2.694  0.742 0.458 #> 722         16         14   -2 2.694 -0.742 0.458 #> 723          3          2   -1 2.694 -0.371 0.711 #> 724         13          8   -5 2.694 -1.856 0.063 #> 725         17         15   -2 2.694 -0.742 0.458 #> 726          8          8    0 2.694  0.000     1 #> 727          8         10    2 2.694  0.742 0.458 #> 728         16         12   -4 2.694 -1.485 0.138 #> 729         11         15    4 2.694  1.485 0.138 #> 730          4          8    4 2.694  1.485 0.138 #> 731          5          6    1 2.694  0.371 0.711 #> 732          4          3   -1 2.694 -0.371 0.711 #> 733          8          6   -2 2.694 -0.742 0.458 #> 734         18         19    1 2.694  0.371 0.711 #> 735         10         11    1 2.694  0.371 0.711 #> 736         10         12    2 2.694  0.742 0.458 #> 737         18         20    2 2.694  0.742 0.458 #> 738         11          5   -6 2.694 -2.227 0.026 #> 739         17         17    0 2.694  0.000     1 #> 740          3          5    2 2.694  0.742 0.458 #> 741         15         15    0 2.694  0.000     1 #> 742          8          9    1 2.694  0.371 0.711 #> 743          9          5   -4 2.694 -1.485 0.138 #> 744         16         13   -3 2.694 -1.113 0.266 #> 745         14         13   -1 2.694 -0.371 0.711 #> 746          8          6   -2 2.694 -0.742 0.458 #> 747          5          9    4 2.694  1.485 0.138 #> 748          3          1   -2 2.694 -0.742 0.458 #> 749          6          7    1 2.694  0.371 0.711 #> 750         17         13   -4 2.694 -1.485 0.138 #> 751         15         15    0 2.694  0.000     1 #> 752          5          6    1 2.694  0.371 0.711 #> 753          9         11    2 2.694  0.742 0.458 #> 754         16         14   -2 2.694 -0.742 0.458 #> 755         12         12    0 2.694  0.000     1 #> 756         12         14    2 2.694  0.742 0.458 #> 757         14          9   -5 2.694 -1.856 0.063 #> 758         12         15    3 2.694  1.113 0.266 #> 759          1          0   -1 2.694 -0.371 0.711 #> 760         13         17    4 2.694  1.485 0.138 #> 761         17         19    2 2.694  0.742 0.458 #> 762          4          4    0 2.694  0.000     1 #> 763         10          7   -3 2.694 -1.113 0.266 #> 764         15         15    0 2.694  0.000     1 #> 765         10         12    2 2.694  0.742 0.458 #> 766          2          2    0 2.694  0.000     1 #> 767         16         16    0 2.694  0.000     1 #> 768         14         13   -1 2.694 -0.371 0.711 #> 769         15         15    0 2.694  0.000     1 #> 770          7          3   -4 2.694 -1.485 0.138 #> 771          7          3   -4 2.694 -1.485 0.138 #> 772         15         14   -1 2.694 -0.371 0.711 #> 773         11         12    1 2.694  0.371 0.711 #> 774          2          1   -1 2.694 -0.371 0.711 #> 775          3          7    4 2.694  1.485 0.138 #> 776         16         16    0 2.694  0.000     1 #> 777         14          9   -5 2.694 -1.856 0.063 #> 778         14         14    0 2.694  0.000     1 #> 779         14         13   -1 2.694 -0.371 0.711 #> 780         13          9   -4 2.694 -1.485 0.138 #> 781         13         11   -2 2.694 -0.742 0.458 #> 782          5         13    8 2.694  2.969 0.003 #> 783         13         12   -1 2.694 -0.371 0.711 #> 784          8          7   -1 2.694 -0.371 0.711 #> 785         17         16   -1 2.694 -0.371 0.711 #> 786         10         11    1 2.694  0.371 0.711 #> 787         12         10   -2 2.694 -0.742 0.458 #> 788          7          9    2 2.694  0.742 0.458 #> 789          2          2    0 2.694  0.000     1 #> 790          1          3    2 2.694  0.742 0.458 #> 791          3          8    5 2.694  1.856 0.063 #> 792         14         16    2 2.694  0.742 0.458 #> 793          4          7    3 2.694  1.113 0.266 #> 794         15         17    2 2.694  0.742 0.458 #> 795         15         13   -2 2.694 -0.742 0.458 #> 796          7          8    1 2.694  0.371 0.711 #> 797          6          4   -2 2.694 -0.742 0.458 #> 798          7          6   -1 2.694 -0.371 0.711 #> 799         11          8   -3 2.694 -1.113 0.266 #> 800          8         12    4 2.694  1.485 0.138 #> 801          6          3   -3 2.694 -1.113 0.266 #> 802          7          2   -5 2.694 -1.856 0.063 #> 803          9          9    0 2.694  0.000     1 #> 804         17         14   -3 2.694 -1.113 0.266 #> 805          6          7    1 2.694  0.371 0.711 #> 806         14         13   -1 2.694 -0.371 0.711 #> 807          6         13    7 2.694  2.598 0.009 #> 808          7          9    2 2.694  0.742 0.458 #> 809         17         17    0 2.694  0.000     1 #> 810          3          6    3 2.694  1.113 0.266 #> 811         15         18    3 2.694  1.113 0.266 #> 812         10         10    0 2.694  0.000     1 #> 813          7          2   -5 2.694 -1.856 0.063 #> 814         13         14    1 2.694  0.371 0.711 #> 815          8         10    2 2.694  0.742 0.458 #> 816          7          7    0 2.694  0.000     1 #> 817         15          5  -10 2.694 -3.712     0 #> 818         11         11    0 2.694  0.000     1 #> 819          8         14    6 2.694  2.227 0.026 #> 820          7          5   -2 2.694 -0.742 0.458 #> 821         12         12    0 2.694  0.000     1 #> 822         10         13    3 2.694  1.113 0.266 #> 823          3          3    0 2.694  0.000     1 #> 824         17         18    1 2.694  0.371 0.711 #> 825          7          6   -1 2.694 -0.371 0.711 #> 826          5          7    2 2.694  0.742 0.458 #> 827         15         14   -1 2.694 -0.371 0.711 #> 828          3          7    4 2.694  1.485 0.138 #> 829          4          3   -1 2.694 -0.371 0.711 #> 830         20         17   -3 2.694 -1.113 0.266 #> 831          8          5   -3 2.694 -1.113 0.266 #> 832         13         18    5 2.694  1.856 0.063 #> 833         15         15    0 2.694  0.000     1 #> 834         16         17    1 2.694  0.371 0.711 #> 835          6          6    0 2.694  0.000     1 #> 836         16         16    0 2.694  0.000     1 #> 837          9          9    0 2.694  0.000     1 #> 838         10         16    6 2.694  2.227 0.026 #> 839         10         11    1 2.694  0.371 0.711 #> 840         16         17    1 2.694  0.371 0.711 #> 841         15         15    0 2.694  0.000     1 #> 842         13         13    0 2.694  0.000     1 #> 843         15         16    1 2.694  0.371 0.711 #> 844         10          7   -3 2.694 -1.113 0.266 #> 845         12          9   -3 2.694 -1.113 0.266 #> 846         12         12    0 2.694  0.000     1 #> 847          8          7   -1 2.694 -0.371 0.711 #> 848          7          3   -4 2.694 -1.485 0.138 #> 849          5          5    0 2.694  0.000     1 #> 850         19         16   -3 2.694 -1.113 0.266 #> 851         15         15    0 2.694  0.000     1 #> 852         13          8   -5 2.694 -1.856 0.063 #> 853          9         10    1 2.694  0.371 0.711 #> 854          8          8    0 2.694  0.000     1 #> 855          9          9    0 2.694  0.000     1 #> 856         12         13    1 2.694  0.371 0.711 #> 857         10          7   -3 2.694 -1.113 0.266 #> 858         13         10   -3 2.694 -1.113 0.266 #> 859         10          9   -1 2.694 -0.371 0.711 #> 860          5          8    3 2.694  1.113 0.266 #> 861          5          3   -2 2.694 -0.742 0.458 #> 862         13         14    1 2.694  0.371 0.711 #> 863          3          6    3 2.694  1.113 0.266 #> 864          8          4   -4 2.694 -1.485 0.138 #> 865         10         13    3 2.694  1.113 0.266 #> 866         12         12    0 2.694  0.000     1 #> 867          9         10    1 2.694  0.371 0.711 #> 868         11         13    2 2.694  0.742 0.458 #> 869         10          7   -3 2.694 -1.113 0.266 #> 870         13         13    0 2.694  0.000     1 #> 871         14         13   -1 2.694 -0.371 0.711 #> 872          8         10    2 2.694  0.742 0.458 #> 873          1          1    0 2.694  0.000     1 #> 874          7         13    6 2.694  2.227 0.026 #> 875         14         16    2 2.694  0.742 0.458 #> 876          9          8   -1 2.694 -0.371 0.711 #> 877         16         16    0 2.694  0.000     1 #> 878         14         15    1 2.694  0.371 0.711 #> 879          8         10    2 2.694  0.742 0.458 #> 880          6          2   -4 2.694 -1.485 0.138 #> 881          5          2   -3 2.694 -1.113 0.266 #> 882          6         10    4 2.694  1.485 0.138 #> 883         11         11    0 2.694  0.000     1 #> 884          6          5   -1 2.694 -0.371 0.711 #> 885         14         14    0 2.694  0.000     1 #> 886          3          7    4 2.694  1.485 0.138 #> 887          3          9    6 2.694  2.227 0.026 #> 888         10          7   -3 2.694 -1.113 0.266 #> 889          2          6    4 2.694  1.485 0.138 #> 890         15         11   -4 2.694 -1.485 0.138 #> 891         10          6   -4 2.694 -1.485 0.138 #> 892         10         10    0 2.694  0.000     1 #> 893         17         16   -1 2.694 -0.371 0.711 #> 894         11         12    1 2.694  0.371 0.711 #> 895          9         11    2 2.694  0.742 0.458 #> 896         15         13   -2 2.694 -0.742 0.458 #> 897         17         16   -1 2.694 -0.371 0.711 #> 898          7          9    2 2.694  0.742 0.458 #> 899         10          8   -2 2.694 -0.742 0.458 #> 900          6          5   -1 2.694 -0.371 0.711 #> 901          7          6   -1 2.694 -0.371 0.711 #> 902         16         19    3 2.694  1.113 0.266 #> 903         16         19    3 2.694  1.113 0.266 #> 904         12          9   -3 2.694 -1.113 0.266 #> 905          6          7    1 2.694  0.371 0.711 #> 906         19         20    1 2.694  0.371 0.711 #> 907         15         11   -4 2.694 -1.485 0.138 #> 908         10          5   -5 2.694 -1.856 0.063 #> 909          2          0   -2 2.694 -0.742 0.458 #> 910         18         10   -8 2.694 -2.969 0.003 #> 911          2          0   -2 2.694 -0.742 0.458 #> 912         20         17   -3 2.694 -1.113 0.266 #> 913          4          2   -2 2.694 -0.742 0.458 #> 914         16         17    1 2.694  0.371 0.711 #> 915         14         15    1 2.694  0.371 0.711 #> 916         18         13   -5 2.694 -1.856 0.063 #> 917         16         17    1 2.694  0.371 0.711 #> 918         15         18    3 2.694  1.113 0.266 #> 919         13         10   -3 2.694 -1.113 0.266 #> 920         11          8   -3 2.694 -1.113 0.266 #> 921          4          2   -2 2.694 -0.742 0.458 #> 922          6         10    4 2.694  1.485 0.138 #> 923         12         11   -1 2.694 -0.371 0.711 #> 924         18         18    0 2.694  0.000     1 #> 925          5          5    0 2.694  0.000     1 #> 926         19         19    0 2.694  0.000     1 #> 927          7          5   -2 2.694 -0.742 0.458 #> 928          9          3   -6 2.694 -2.227 0.026 #> 929         15         19    4 2.694  1.485 0.138 #> 930         15          9   -6 2.694 -2.227 0.026 #> 931         11         11    0 2.694  0.000     1 #> 932         12         10   -2 2.694 -0.742 0.458 #> 933         12         13    1 2.694  0.371 0.711 #> 934          9          6   -3 2.694 -1.113 0.266 #> 935         14         14    0 2.694  0.000     1 #> 936          6          7    1 2.694  0.371 0.711 #> 937          6          6    0 2.694  0.000     1 #> 938          8         10    2 2.694  0.742 0.458 #> 939          3          2   -1 2.694 -0.371 0.711 #> 940         11         10   -1 2.694 -0.371 0.711 #> 941         12         15    3 2.694  1.113 0.266 #> 942         13         14    1 2.694  0.371 0.711 #> 943         12          8   -4 2.694 -1.485 0.138 #> 944         15         13   -2 2.694 -0.742 0.458 #> 945         11         12    1 2.694  0.371 0.711 #> 946         11         11    0 2.694  0.000     1 #> 947         11         10   -1 2.694 -0.371 0.711 #> 948         10         13    3 2.694  1.113 0.266 #> 949          1          2    1 2.694  0.371 0.711 #> 950          7         12    5 2.694  1.856 0.063 #> 951          8          6   -2 2.694 -0.742 0.458 #> 952         15         12   -3 2.694 -1.113 0.266 #> 953          7          4   -3 2.694 -1.113 0.266 #> 954          2          6    4 2.694  1.485 0.138 #> 955          6          5   -1 2.694 -0.371 0.711 #> 956          3          3    0 2.694  0.000     1 #> 957          5          5    0 2.694  0.000     1 #> 958          6          6    0 2.694  0.000     1 #> 959         13         17    4 2.694  1.485 0.138 #> 960          6          7    1 2.694  0.371 0.711 #> 961          3          2   -1 2.694 -0.371 0.711 #> 962         12         11   -1 2.694 -0.371 0.711 #> 963          6          4   -2 2.694 -0.742 0.458 #> 964         17         12   -5 2.694 -1.856 0.063 #> 965          5          7    2 2.694  0.742 0.458 #> 966         13         16    3 2.694  1.113 0.266 #> 967         15         16    1 2.694  0.371 0.711 #> 968         12          9   -3 2.694 -1.113 0.266 #> 969         15         13   -2 2.694 -0.742 0.458 #> 970         14         16    2 2.694  0.742 0.458 #> 971          6          7    1 2.694  0.371 0.711 #> 972         16         16    0 2.694  0.000     1 #> 973          3          1   -2 2.694 -0.742 0.458 #> 974          5          5    0 2.694  0.000     1 #> 975          7          3   -4 2.694 -1.485 0.138 #> 976         13         13    0 2.694  0.000     1 #> 977         10         12    2 2.694  0.742 0.458 #> 978          2          4    2 2.694  0.742 0.458 #> 979          2          9    7 2.694  2.598 0.009 #> 980         10          9   -1 2.694 -0.371 0.711 #> 981          4          1   -3 2.694 -1.113 0.266 #> 982          7          4   -3 2.694 -1.113 0.266 #> 983         17         12   -5 2.694 -1.856 0.063 #> 984         18         16   -2 2.694 -0.742 0.458 #> 985         16         11   -5 2.694 -1.856 0.063 #> 986          5          3   -2 2.694 -0.742 0.458 #> 987         13         14    1 2.694  0.371 0.711 #> 988         11          8   -3 2.694 -1.113 0.266 #> 989          2         12   10 2.694  3.712     0 #> 990          9         11    2 2.694  0.742 0.458 #> 991         11          6   -5 2.694 -1.856 0.063 #> 992         11         10   -1 2.694 -0.371 0.711 #> 993          8          6   -2 2.694 -0.742 0.458 #> 994          1          4    3 2.694  1.113 0.266 #> 995         10          7   -3 2.694 -1.113 0.266 #> 996         11          5   -6 2.694 -2.227 0.026 #> 997          7          6   -1 2.694 -0.371 0.711 #> 998         10         12    2 2.694  0.742 0.458 #> 999         11          7   -4 2.694 -1.485 0.138 #> 1000         1          2    1 2.694  0.371 0.711  # Supplying only the total scores TS_pre <- matrix(rowSums(dat_pre)) TS_post <- matrix(rowSums(dat_post)) RCI(predat = TS_pre, postdat = TS_post,    SEM.pre=SEM.alpha, SEM.post=SEM.alpha.post) #>      pre.score post.score diff    SE      z     p #> 1           18         19    1 2.694  0.371 0.711 #> 2           18          9   -9 2.694 -3.340 0.001 #> 3           15          9   -6 2.694 -2.227 0.026 #> 4           11         10   -1 2.694 -0.371 0.711 #> 5            4          5    1 2.694  0.371 0.711 #> 6            4          8    4 2.694  1.485 0.138 #> 7           11          8   -3 2.694 -1.113 0.266 #> 8           11         15    4 2.694  1.485 0.138 #> 9            3          3    0 2.694  0.000     1 #> 10           4          8    4 2.694  1.485 0.138 #> 11           1          5    4 2.694  1.485 0.138 #> 12          16         14   -2 2.694 -0.742 0.458 #> 13          12         10   -2 2.694 -0.742 0.458 #> 14          11         10   -1 2.694 -0.371 0.711 #> 15          17         18    1 2.694  0.371 0.711 #> 16           1          4    3 2.694  1.113 0.266 #> 17          10          8   -2 2.694 -0.742 0.458 #> 18          12         11   -1 2.694 -0.371 0.711 #> 19          15         12   -3 2.694 -1.113 0.266 #> 20          16         10   -6 2.694 -2.227 0.026 #> 21           7          6   -1 2.694 -0.371 0.711 #> 22           7         12    5 2.694  1.856 0.063 #> 23           2          4    2 2.694  0.742 0.458 #> 24           5          7    2 2.694  0.742 0.458 #> 25          14         15    1 2.694  0.371 0.711 #> 26           9          6   -3 2.694 -1.113 0.266 #> 27          17         17    0 2.694  0.000     1 #> 28           4          9    5 2.694  1.856 0.063 #> 29          14         16    2 2.694  0.742 0.458 #> 30           4          7    3 2.694  1.113 0.266 #> 31           2          0   -2 2.694 -0.742 0.458 #> 32           9          6   -3 2.694 -1.113 0.266 #> 33          20         20    0 2.694  0.000     1 #> 34           9          6   -3 2.694 -1.113 0.266 #> 35           3          4    1 2.694  0.371 0.711 #> 36          14         15    1 2.694  0.371 0.711 #> 37           8          9    1 2.694  0.371 0.711 #> 38          15         13   -2 2.694 -0.742 0.458 #> 39           9         12    3 2.694  1.113 0.266 #> 40          18         18    0 2.694  0.000     1 #> 41          11         10   -1 2.694 -0.371 0.711 #> 42          12          9   -3 2.694 -1.113 0.266 #> 43           8          7   -1 2.694 -0.371 0.711 #> 44          10         11    1 2.694  0.371 0.711 #> 45           7         10    3 2.694  1.113 0.266 #> 46           8          9    1 2.694  0.371 0.711 #> 47           6          8    2 2.694  0.742 0.458 #> 48           6          7    1 2.694  0.371 0.711 #> 49           6          8    2 2.694  0.742 0.458 #> 50           8         11    3 2.694  1.113 0.266 #> 51          13         17    4 2.694  1.485 0.138 #> 52           6          6    0 2.694  0.000     1 #> 53          19         13   -6 2.694 -2.227 0.026 #> 54           6         11    5 2.694  1.856 0.063 #> 55           9          8   -1 2.694 -0.371 0.711 #> 56           7          8    1 2.694  0.371 0.711 #> 57           9          6   -3 2.694 -1.113 0.266 #> 58           3          3    0 2.694  0.000     1 #> 59          10          8   -2 2.694 -0.742 0.458 #> 60          14         14    0 2.694  0.000     1 #> 61          12         12    0 2.694  0.000     1 #> 62          15         14   -1 2.694 -0.371 0.711 #> 63          13         12   -1 2.694 -0.371 0.711 #> 64           5          5    0 2.694  0.000     1 #> 65           5          4   -1 2.694 -0.371 0.711 #> 66           5          4   -1 2.694 -0.371 0.711 #> 67          18         14   -4 2.694 -1.485 0.138 #> 68           9          8   -1 2.694 -0.371 0.711 #> 69          11          9   -2 2.694 -0.742 0.458 #> 70          19         17   -2 2.694 -0.742 0.458 #> 71           9          5   -4 2.694 -1.485 0.138 #> 72          16         15   -1 2.694 -0.371 0.711 #> 73          10          9   -1 2.694 -0.371 0.711 #> 74          11         11    0 2.694  0.000     1 #> 75          14         10   -4 2.694 -1.485 0.138 #> 76          14         15    1 2.694  0.371 0.711 #> 77           5          4   -1 2.694 -0.371 0.711 #> 78          11          9   -2 2.694 -0.742 0.458 #> 79          15         10   -5 2.694 -1.856 0.063 #> 80          11         11    0 2.694  0.000     1 #> 81          10          8   -2 2.694 -0.742 0.458 #> 82          12         12    0 2.694  0.000     1 #> 83          11         11    0 2.694  0.000     1 #> 84           5          1   -4 2.694 -1.485 0.138 #> 85           7          9    2 2.694  0.742 0.458 #> 86           7         10    3 2.694  1.113 0.266 #> 87           3          7    4 2.694  1.485 0.138 #> 88           9         11    2 2.694  0.742 0.458 #> 89           8          9    1 2.694  0.371 0.711 #> 90          12         11   -1 2.694 -0.371 0.711 #> 91           6          1   -5 2.694 -1.856 0.063 #> 92           6          8    2 2.694  0.742 0.458 #> 93           3          5    2 2.694  0.742 0.458 #> 94          12         12    0 2.694  0.000     1 #> 95          18         16   -2 2.694 -0.742 0.458 #> 96           9          7   -2 2.694 -0.742 0.458 #> 97           8         11    3 2.694  1.113 0.266 #> 98           7          7    0 2.694  0.000     1 #> 99          12         11   -1 2.694 -0.371 0.711 #> 100         10         10    0 2.694  0.000     1 #> 101          5          5    0 2.694  0.000     1 #> 102         14         15    1 2.694  0.371 0.711 #> 103          9          9    0 2.694  0.000     1 #> 104          8         15    7 2.694  2.598 0.009 #> 105          2          3    1 2.694  0.371 0.711 #> 106          7         10    3 2.694  1.113 0.266 #> 107         12         12    0 2.694  0.000     1 #> 108          2          2    0 2.694  0.000     1 #> 109         14         13   -1 2.694 -0.371 0.711 #> 110          6          4   -2 2.694 -0.742 0.458 #> 111         15         10   -5 2.694 -1.856 0.063 #> 112          5          5    0 2.694  0.000     1 #> 113         15         18    3 2.694  1.113 0.266 #> 114          2          0   -2 2.694 -0.742 0.458 #> 115          9         12    3 2.694  1.113 0.266 #> 116         14         14    0 2.694  0.000     1 #> 117         10          7   -3 2.694 -1.113 0.266 #> 118          6          5   -1 2.694 -0.371 0.711 #> 119         12          9   -3 2.694 -1.113 0.266 #> 120          7          3   -4 2.694 -1.485 0.138 #> 121          9         12    3 2.694  1.113 0.266 #> 122          2          6    4 2.694  1.485 0.138 #> 123          9          6   -3 2.694 -1.113 0.266 #> 124          2          5    3 2.694  1.113 0.266 #> 125         12         12    0 2.694  0.000     1 #> 126         16         19    3 2.694  1.113 0.266 #> 127         13         14    1 2.694  0.371 0.711 #> 128         13         14    1 2.694  0.371 0.711 #> 129         14         15    1 2.694  0.371 0.711 #> 130          7         14    7 2.694  2.598 0.009 #> 131         10         11    1 2.694  0.371 0.711 #> 132          3          3    0 2.694  0.000     1 #> 133         15         15    0 2.694  0.000     1 #> 134         18         19    1 2.694  0.371 0.711 #> 135          2          5    3 2.694  1.113 0.266 #> 136         12         10   -2 2.694 -0.742 0.458 #> 137         12         14    2 2.694  0.742 0.458 #> 138          6          3   -3 2.694 -1.113 0.266 #> 139         13          9   -4 2.694 -1.485 0.138 #> 140          8          5   -3 2.694 -1.113 0.266 #> 141         18         17   -1 2.694 -0.371 0.711 #> 142         15         15    0 2.694  0.000     1 #> 143          7          9    2 2.694  0.742 0.458 #> 144         14         10   -4 2.694 -1.485 0.138 #> 145          3          5    2 2.694  0.742 0.458 #> 146          1          2    1 2.694  0.371 0.711 #> 147          5          6    1 2.694  0.371 0.711 #> 148          8          8    0 2.694  0.000     1 #> 149         13         15    2 2.694  0.742 0.458 #> 150          9          9    0 2.694  0.000     1 #> 151          8          9    1 2.694  0.371 0.711 #> 152          2          1   -1 2.694 -0.371 0.711 #> 153          3          3    0 2.694  0.000     1 #> 154          7          5   -2 2.694 -0.742 0.458 #> 155         16         13   -3 2.694 -1.113 0.266 #> 156          9         12    3 2.694  1.113 0.266 #> 157         15         17    2 2.694  0.742 0.458 #> 158         10          5   -5 2.694 -1.856 0.063 #> 159          8         10    2 2.694  0.742 0.458 #> 160         17         11   -6 2.694 -2.227 0.026 #> 161         14          8   -6 2.694 -2.227 0.026 #> 162          8          8    0 2.694  0.000     1 #> 163          3          5    2 2.694  0.742 0.458 #> 164         16          8   -8 2.694 -2.969 0.003 #> 165          9          7   -2 2.694 -0.742 0.458 #> 166          7          8    1 2.694  0.371 0.711 #> 167         15         15    0 2.694  0.000     1 #> 168         15         18    3 2.694  1.113 0.266 #> 169          3          2   -1 2.694 -0.371 0.711 #> 170          1          2    1 2.694  0.371 0.711 #> 171          2          0   -2 2.694 -0.742 0.458 #> 172         20         15   -5 2.694 -1.856 0.063 #> 173         10         12    2 2.694  0.742 0.458 #> 174          9          3   -6 2.694 -2.227 0.026 #> 175          5         15   10 2.694  3.712     0 #> 176          9          7   -2 2.694 -0.742 0.458 #> 177         15         16    1 2.694  0.371 0.711 #> 178          2          5    3 2.694  1.113 0.266 #> 179         18         20    2 2.694  0.742 0.458 #> 180         10          8   -2 2.694 -0.742 0.458 #> 181          6          6    0 2.694  0.000     1 #> 182          3          5    2 2.694  0.742 0.458 #> 183          9          7   -2 2.694 -0.742 0.458 #> 184          7         10    3 2.694  1.113 0.266 #> 185          6          3   -3 2.694 -1.113 0.266 #> 186          7          5   -2 2.694 -0.742 0.458 #> 187          7          4   -3 2.694 -1.113 0.266 #> 188         10          9   -1 2.694 -0.371 0.711 #> 189         17         12   -5 2.694 -1.856 0.063 #> 190          2          4    2 2.694  0.742 0.458 #> 191         16         15   -1 2.694 -0.371 0.711 #> 192          6          9    3 2.694  1.113 0.266 #> 193         10         13    3 2.694  1.113 0.266 #> 194          2          7    5 2.694  1.856 0.063 #> 195          5          3   -2 2.694 -0.742 0.458 #> 196         12          8   -4 2.694 -1.485 0.138 #> 197          5          1   -4 2.694 -1.485 0.138 #> 198          5          2   -3 2.694 -1.113 0.266 #> 199         17         17    0 2.694  0.000     1 #> 200          4          2   -2 2.694 -0.742 0.458 #> 201         13         13    0 2.694  0.000     1 #> 202         14         12   -2 2.694 -0.742 0.458 #> 203          2          2    0 2.694  0.000     1 #> 204         11          9   -2 2.694 -0.742 0.458 #> 205         10         11    1 2.694  0.371 0.711 #> 206         13         11   -2 2.694 -0.742 0.458 #> 207         17         18    1 2.694  0.371 0.711 #> 208         14         15    1 2.694  0.371 0.711 #> 209         18         18    0 2.694  0.000     1 #> 210          2          0   -2 2.694 -0.742 0.458 #> 211          9         11    2 2.694  0.742 0.458 #> 212         10         12    2 2.694  0.742 0.458 #> 213         16         14   -2 2.694 -0.742 0.458 #> 214          2          2    0 2.694  0.000     1 #> 215          3          4    1 2.694  0.371 0.711 #> 216         15         17    2 2.694  0.742 0.458 #> 217         14         12   -2 2.694 -0.742 0.458 #> 218          3          5    2 2.694  0.742 0.458 #> 219          9          8   -1 2.694 -0.371 0.711 #> 220          0          1    1 2.694  0.371 0.711 #> 221         14         12   -2 2.694 -0.742 0.458 #> 222          2          1   -1 2.694 -0.371 0.711 #> 223          5         10    5 2.694  1.856 0.063 #> 224          8         15    7 2.694  2.598 0.009 #> 225         12         14    2 2.694  0.742 0.458 #> 226         14         14    0 2.694  0.000     1 #> 227         11         11    0 2.694  0.000     1 #> 228          9          9    0 2.694  0.000     1 #> 229         17         15   -2 2.694 -0.742 0.458 #> 230          2          2    0 2.694  0.000     1 #> 231          6          9    3 2.694  1.113 0.266 #> 232          9         14    5 2.694  1.856 0.063 #> 233         13         13    0 2.694  0.000     1 #> 234         13         17    4 2.694  1.485 0.138 #> 235         13          6   -7 2.694 -2.598 0.009 #> 236          8          8    0 2.694  0.000     1 #> 237          8          9    1 2.694  0.371 0.711 #> 238          6         12    6 2.694  2.227 0.026 #> 239          9          9    0 2.694  0.000     1 #> 240          7         12    5 2.694  1.856 0.063 #> 241         18         18    0 2.694  0.000     1 #> 242          4          3   -1 2.694 -0.371 0.711 #> 243          1          2    1 2.694  0.371 0.711 #> 244          3          1   -2 2.694 -0.742 0.458 #> 245          6          5   -1 2.694 -0.371 0.711 #> 246          4          4    0 2.694  0.000     1 #> 247         17         17    0 2.694  0.000     1 #> 248         20         18   -2 2.694 -0.742 0.458 #> 249          8         10    2 2.694  0.742 0.458 #> 250         15         18    3 2.694  1.113 0.266 #> 251         15         13   -2 2.694 -0.742 0.458 #> 252          8          8    0 2.694  0.000     1 #> 253          8          8    0 2.694  0.000     1 #> 254         11         13    2 2.694  0.742 0.458 #> 255         18         16   -2 2.694 -0.742 0.458 #> 256         10         11    1 2.694  0.371 0.711 #> 257         18         16   -2 2.694 -0.742 0.458 #> 258         10         11    1 2.694  0.371 0.711 #> 259          4          3   -1 2.694 -0.371 0.711 #> 260         11         14    3 2.694  1.113 0.266 #> 261         14         11   -3 2.694 -1.113 0.266 #> 262         14         13   -1 2.694 -0.371 0.711 #> 263         19         17   -2 2.694 -0.742 0.458 #> 264          4          6    2 2.694  0.742 0.458 #> 265         17         17    0 2.694  0.000     1 #> 266          9         12    3 2.694  1.113 0.266 #> 267          4          7    3 2.694  1.113 0.266 #> 268         15         12   -3 2.694 -1.113 0.266 #> 269          7          7    0 2.694  0.000     1 #> 270          8         11    3 2.694  1.113 0.266 #> 271          1          2    1 2.694  0.371 0.711 #> 272          8          6   -2 2.694 -0.742 0.458 #> 273          6          6    0 2.694  0.000     1 #> 274         17         16   -1 2.694 -0.371 0.711 #> 275         13         11   -2 2.694 -0.742 0.458 #> 276          2          1   -1 2.694 -0.371 0.711 #> 277          9         10    1 2.694  0.371 0.711 #> 278          2          0   -2 2.694 -0.742 0.458 #> 279         11         13    2 2.694  0.742 0.458 #> 280         17         17    0 2.694  0.000     1 #> 281         16         16    0 2.694  0.000     1 #> 282         14         15    1 2.694  0.371 0.711 #> 283         15         16    1 2.694  0.371 0.711 #> 284          4          1   -3 2.694 -1.113 0.266 #> 285         17         18    1 2.694  0.371 0.711 #> 286         10          7   -3 2.694 -1.113 0.266 #> 287         12         15    3 2.694  1.113 0.266 #> 288         15         17    2 2.694  0.742 0.458 #> 289         17         15   -2 2.694 -0.742 0.458 #> 290         14         11   -3 2.694 -1.113 0.266 #> 291         15         12   -3 2.694 -1.113 0.266 #> 292         10         10    0 2.694  0.000     1 #> 293          0          2    2 2.694  0.742 0.458 #> 294         12          8   -4 2.694 -1.485 0.138 #> 295          4          7    3 2.694  1.113 0.266 #> 296         15         15    0 2.694  0.000     1 #> 297         18         17   -1 2.694 -0.371 0.711 #> 298          9          7   -2 2.694 -0.742 0.458 #> 299         18         12   -6 2.694 -2.227 0.026 #> 300          0          1    1 2.694  0.371 0.711 #> 301          4         11    7 2.694  2.598 0.009 #> 302         10          8   -2 2.694 -0.742 0.458 #> 303          5          2   -3 2.694 -1.113 0.266 #> 304         19         17   -2 2.694 -0.742 0.458 #> 305         11          6   -5 2.694 -1.856 0.063 #> 306         15         15    0 2.694  0.000     1 #> 307         10         12    2 2.694  0.742 0.458 #> 308         11          8   -3 2.694 -1.113 0.266 #> 309         10          7   -3 2.694 -1.113 0.266 #> 310          8          6   -2 2.694 -0.742 0.458 #> 311         14         15    1 2.694  0.371 0.711 #> 312         16         11   -5 2.694 -1.856 0.063 #> 313          6          4   -2 2.694 -0.742 0.458 #> 314         11         11    0 2.694  0.000     1 #> 315          7          7    0 2.694  0.000     1 #> 316          9         11    2 2.694  0.742 0.458 #> 317          7         11    4 2.694  1.485 0.138 #> 318          1          5    4 2.694  1.485 0.138 #> 319         10          9   -1 2.694 -0.371 0.711 #> 320         13         10   -3 2.694 -1.113 0.266 #> 321         13         10   -3 2.694 -1.113 0.266 #> 322         13          9   -4 2.694 -1.485 0.138 #> 323          1          2    1 2.694  0.371 0.711 #> 324         13         13    0 2.694  0.000     1 #> 325         13         13    0 2.694  0.000     1 #> 326         13         13    0 2.694  0.000     1 #> 327          7          6   -1 2.694 -0.371 0.711 #> 328          9         12    3 2.694  1.113 0.266 #> 329         13         13    0 2.694  0.000     1 #> 330          6         14    8 2.694  2.969 0.003 #> 331         12         14    2 2.694  0.742 0.458 #> 332          9          5   -4 2.694 -1.485 0.138 #> 333         13         12   -1 2.694 -0.371 0.711 #> 334         13         14    1 2.694  0.371 0.711 #> 335          9         11    2 2.694  0.742 0.458 #> 336         10          9   -1 2.694 -0.371 0.711 #> 337         12         13    1 2.694  0.371 0.711 #> 338         16         14   -2 2.694 -0.742 0.458 #> 339          6         10    4 2.694  1.485 0.138 #> 340         17         15   -2 2.694 -0.742 0.458 #> 341         12         14    2 2.694  0.742 0.458 #> 342          6          5   -1 2.694 -0.371 0.711 #> 343          5          9    4 2.694  1.485 0.138 #> 344          5          4   -1 2.694 -0.371 0.711 #> 345          6          9    3 2.694  1.113 0.266 #> 346         12          8   -4 2.694 -1.485 0.138 #> 347         12         13    1 2.694  0.371 0.711 #> 348          8         11    3 2.694  1.113 0.266 #> 349          5          6    1 2.694  0.371 0.711 #> 350         11         12    1 2.694  0.371 0.711 #> 351          9          7   -2 2.694 -0.742 0.458 #> 352         18         16   -2 2.694 -0.742 0.458 #> 353          9         11    2 2.694  0.742 0.458 #> 354          4          3   -1 2.694 -0.371 0.711 #> 355         12         17    5 2.694  1.856 0.063 #> 356         16         15   -1 2.694 -0.371 0.711 #> 357          9         13    4 2.694  1.485 0.138 #> 358         10          7   -3 2.694 -1.113 0.266 #> 359          1          3    2 2.694  0.742 0.458 #> 360         10         12    2 2.694  0.742 0.458 #> 361          5          5    0 2.694  0.000     1 #> 362         13         15    2 2.694  0.742 0.458 #> 363          9         12    3 2.694  1.113 0.266 #> 364         13         14    1 2.694  0.371 0.711 #> 365          9          5   -4 2.694 -1.485 0.138 #> 366         17         17    0 2.694  0.000     1 #> 367          4          2   -2 2.694 -0.742 0.458 #> 368         12          9   -3 2.694 -1.113 0.266 #> 369          3         10    7 2.694  2.598 0.009 #> 370         12         12    0 2.694  0.000     1 #> 371         14         18    4 2.694  1.485 0.138 #> 372         10         11    1 2.694  0.371 0.711 #> 373          7          9    2 2.694  0.742 0.458 #> 374          4          6    2 2.694  0.742 0.458 #> 375         10          5   -5 2.694 -1.856 0.063 #> 376         16         14   -2 2.694 -0.742 0.458 #> 377         15         15    0 2.694  0.000     1 #> 378         13         12   -1 2.694 -0.371 0.711 #> 379          0          3    3 2.694  1.113 0.266 #> 380          7          8    1 2.694  0.371 0.711 #> 381          6          7    1 2.694  0.371 0.711 #> 382          6          6    0 2.694  0.000     1 #> 383          6          8    2 2.694  0.742 0.458 #> 384          4          4    0 2.694  0.000     1 #> 385          3          4    1 2.694  0.371 0.711 #> 386          2          7    5 2.694  1.856 0.063 #> 387          9          9    0 2.694  0.000     1 #> 388         19         14   -5 2.694 -1.856 0.063 #> 389          3          6    3 2.694  1.113 0.266 #> 390          0          2    2 2.694  0.742 0.458 #> 391         15         14   -1 2.694 -0.371 0.711 #> 392         11          4   -7 2.694 -2.598 0.009 #> 393          5          6    1 2.694  0.371 0.711 #> 394          2          1   -1 2.694 -0.371 0.711 #> 395          7         13    6 2.694  2.227 0.026 #> 396         13         11   -2 2.694 -0.742 0.458 #> 397         15         14   -1 2.694 -0.371 0.711 #> 398          2          4    2 2.694  0.742 0.458 #> 399         13          6   -7 2.694 -2.598 0.009 #> 400         15          9   -6 2.694 -2.227 0.026 #> 401          7          8    1 2.694  0.371 0.711 #> 402          3          3    0 2.694  0.000     1 #> 403          9         12    3 2.694  1.113 0.266 #> 404         17         17    0 2.694  0.000     1 #> 405          1          4    3 2.694  1.113 0.266 #> 406          4          2   -2 2.694 -0.742 0.458 #> 407          7         10    3 2.694  1.113 0.266 #> 408          7         11    4 2.694  1.485 0.138 #> 409         12         12    0 2.694  0.000     1 #> 410          8          6   -2 2.694 -0.742 0.458 #> 411          8          4   -4 2.694 -1.485 0.138 #> 412         14         11   -3 2.694 -1.113 0.266 #> 413          5          3   -2 2.694 -0.742 0.458 #> 414         16         17    1 2.694  0.371 0.711 #> 415         11         15    4 2.694  1.485 0.138 #> 416         15         12   -3 2.694 -1.113 0.266 #> 417         14         15    1 2.694  0.371 0.711 #> 418          5          6    1 2.694  0.371 0.711 #> 419          5         10    5 2.694  1.856 0.063 #> 420         10         13    3 2.694  1.113 0.266 #> 421          3          2   -1 2.694 -0.371 0.711 #> 422         17         17    0 2.694  0.000     1 #> 423         11         11    0 2.694  0.000     1 #> 424         14         13   -1 2.694 -0.371 0.711 #> 425         16          9   -7 2.694 -2.598 0.009 #> 426         15         16    1 2.694  0.371 0.711 #> 427         11          7   -4 2.694 -1.485 0.138 #> 428          8         11    3 2.694  1.113 0.266 #> 429         13         13    0 2.694  0.000     1 #> 430         10         10    0 2.694  0.000     1 #> 431         15         14   -1 2.694 -0.371 0.711 #> 432          1          4    3 2.694  1.113 0.266 #> 433          3          3    0 2.694  0.000     1 #> 434         11         15    4 2.694  1.485 0.138 #> 435          3          4    1 2.694  0.371 0.711 #> 436          6         11    5 2.694  1.856 0.063 #> 437          2          0   -2 2.694 -0.742 0.458 #> 438         13         14    1 2.694  0.371 0.711 #> 439         18         14   -4 2.694 -1.485 0.138 #> 440          6         13    7 2.694  2.598 0.009 #> 441         14         12   -2 2.694 -0.742 0.458 #> 442          4          5    1 2.694  0.371 0.711 #> 443         10          9   -1 2.694 -0.371 0.711 #> 444         18         18    0 2.694  0.000     1 #> 445         17         16   -1 2.694 -0.371 0.711 #> 446         16         17    1 2.694  0.371 0.711 #> 447          0          0    0 2.694  0.000     1 #> 448         12         10   -2 2.694 -0.742 0.458 #> 449          4          7    3 2.694  1.113 0.266 #> 450          1          4    3 2.694  1.113 0.266 #> 451         19         18   -1 2.694 -0.371 0.711 #> 452          8          5   -3 2.694 -1.113 0.266 #> 453          8         11    3 2.694  1.113 0.266 #> 454          5          9    4 2.694  1.485 0.138 #> 455         18         17   -1 2.694 -0.371 0.711 #> 456         12         11   -1 2.694 -0.371 0.711 #> 457          5          9    4 2.694  1.485 0.138 #> 458          2          5    3 2.694  1.113 0.266 #> 459          1          2    1 2.694  0.371 0.711 #> 460         19         18   -1 2.694 -0.371 0.711 #> 461         15         17    2 2.694  0.742 0.458 #> 462         17         13   -4 2.694 -1.485 0.138 #> 463         13         15    2 2.694  0.742 0.458 #> 464         14         14    0 2.694  0.000     1 #> 465          6          9    3 2.694  1.113 0.266 #> 466          9          5   -4 2.694 -1.485 0.138 #> 467         16         15   -1 2.694 -0.371 0.711 #> 468          3          2   -1 2.694 -0.371 0.711 #> 469          1          7    6 2.694  2.227 0.026 #> 470         13         10   -3 2.694 -1.113 0.266 #> 471          5          4   -1 2.694 -0.371 0.711 #> 472          6          7    1 2.694  0.371 0.711 #> 473         20         19   -1 2.694 -0.371 0.711 #> 474          7          9    2 2.694  0.742 0.458 #> 475          1          1    0 2.694  0.000     1 #> 476         15         13   -2 2.694 -0.742 0.458 #> 477         16         11   -5 2.694 -1.856 0.063 #> 478         16         12   -4 2.694 -1.485 0.138 #> 479         11         10   -1 2.694 -0.371 0.711 #> 480         15         16    1 2.694  0.371 0.711 #> 481          7          8    1 2.694  0.371 0.711 #> 482         15         12   -3 2.694 -1.113 0.266 #> 483         15         16    1 2.694  0.371 0.711 #> 484         12         11   -1 2.694 -0.371 0.711 #> 485         12         10   -2 2.694 -0.742 0.458 #> 486          5          8    3 2.694  1.113 0.266 #> 487          8         12    4 2.694  1.485 0.138 #> 488         11         13    2 2.694  0.742 0.458 #> 489         16         17    1 2.694  0.371 0.711 #> 490          7          8    1 2.694  0.371 0.711 #> 491         19         18   -1 2.694 -0.371 0.711 #> 492          4          5    1 2.694  0.371 0.711 #> 493         19         16   -3 2.694 -1.113 0.266 #> 494          8          9    1 2.694  0.371 0.711 #> 495         10         15    5 2.694  1.856 0.063 #> 496          6          7    1 2.694  0.371 0.711 #> 497         11          8   -3 2.694 -1.113 0.266 #> 498          3          9    6 2.694  2.227 0.026 #> 499          8          8    0 2.694  0.000     1 #> 500          7         11    4 2.694  1.485 0.138 #> 501         13         16    3 2.694  1.113 0.266 #> 502         11         10   -1 2.694 -0.371 0.711 #> 503          0          1    1 2.694  0.371 0.711 #> 504          4          5    1 2.694  0.371 0.711 #> 505          4          6    2 2.694  0.742 0.458 #> 506         12         10   -2 2.694 -0.742 0.458 #> 507         18         16   -2 2.694 -0.742 0.458 #> 508         13         14    1 2.694  0.371 0.711 #> 509          5          7    2 2.694  0.742 0.458 #> 510          8         10    2 2.694  0.742 0.458 #> 511          6         10    4 2.694  1.485 0.138 #> 512          7          9    2 2.694  0.742 0.458 #> 513          5          5    0 2.694  0.000     1 #> 514          5         10    5 2.694  1.856 0.063 #> 515          9         11    2 2.694  0.742 0.458 #> 516         17         17    0 2.694  0.000     1 #> 517         14         13   -1 2.694 -0.371 0.711 #> 518          8         15    7 2.694  2.598 0.009 #> 519         14         14    0 2.694  0.000     1 #> 520         13          8   -5 2.694 -1.856 0.063 #> 521         14         12   -2 2.694 -0.742 0.458 #> 522          6          2   -4 2.694 -1.485 0.138 #> 523         17         14   -3 2.694 -1.113 0.266 #> 524         13         13    0 2.694  0.000     1 #> 525         14         14    0 2.694  0.000     1 #> 526         16         12   -4 2.694 -1.485 0.138 #> 527         12         10   -2 2.694 -0.742 0.458 #> 528         15         16    1 2.694  0.371 0.711 #> 529         13         10   -3 2.694 -1.113 0.266 #> 530          9         10    1 2.694  0.371 0.711 #> 531         12          7   -5 2.694 -1.856 0.063 #> 532         20         20    0 2.694  0.000     1 #> 533         17         12   -5 2.694 -1.856 0.063 #> 534          6          8    2 2.694  0.742 0.458 #> 535         19         18   -1 2.694 -0.371 0.711 #> 536         12         12    0 2.694  0.000     1 #> 537         10          7   -3 2.694 -1.113 0.266 #> 538          6          4   -2 2.694 -0.742 0.458 #> 539          8          8    0 2.694  0.000     1 #> 540         10         12    2 2.694  0.742 0.458 #> 541          4          7    3 2.694  1.113 0.266 #> 542          2          2    0 2.694  0.000     1 #> 543          6          5   -1 2.694 -0.371 0.711 #> 544         12         10   -2 2.694 -0.742 0.458 #> 545          4          5    1 2.694  0.371 0.711 #> 546         11         10   -1 2.694 -0.371 0.711 #> 547         14         12   -2 2.694 -0.742 0.458 #> 548         13         15    2 2.694  0.742 0.458 #> 549         12          9   -3 2.694 -1.113 0.266 #> 550         11         11    0 2.694  0.000     1 #> 551          8          2   -6 2.694 -2.227 0.026 #> 552         14         15    1 2.694  0.371 0.711 #> 553         11         14    3 2.694  1.113 0.266 #> 554         13         12   -1 2.694 -0.371 0.711 #> 555          2          3    1 2.694  0.371 0.711 #> 556          9         13    4 2.694  1.485 0.138 #> 557         10         11    1 2.694  0.371 0.711 #> 558          8         12    4 2.694  1.485 0.138 #> 559         11         12    1 2.694  0.371 0.711 #> 560         19         18   -1 2.694 -0.371 0.711 #> 561         12         12    0 2.694  0.000     1 #> 562         12          8   -4 2.694 -1.485 0.138 #> 563          3          6    3 2.694  1.113 0.266 #> 564          4          0   -4 2.694 -1.485 0.138 #> 565         14         14    0 2.694  0.000     1 #> 566          3          4    1 2.694  0.371 0.711 #> 567         18         16   -2 2.694 -0.742 0.458 #> 568          3          2   -1 2.694 -0.371 0.711 #> 569         17         19    2 2.694  0.742 0.458 #> 570         10          8   -2 2.694 -0.742 0.458 #> 571         16         13   -3 2.694 -1.113 0.266 #> 572          8          8    0 2.694  0.000     1 #> 573         15         17    2 2.694  0.742 0.458 #> 574          7         12    5 2.694  1.856 0.063 #> 575          6          2   -4 2.694 -1.485 0.138 #> 576         11         14    3 2.694  1.113 0.266 #> 577         13         12   -1 2.694 -0.371 0.711 #> 578         17         14   -3 2.694 -1.113 0.266 #> 579          5          9    4 2.694  1.485 0.138 #> 580         12         17    5 2.694  1.856 0.063 #> 581         11         10   -1 2.694 -0.371 0.711 #> 582          6         12    6 2.694  2.227 0.026 #> 583         11         13    2 2.694  0.742 0.458 #> 584         16         18    2 2.694  0.742 0.458 #> 585          8          6   -2 2.694 -0.742 0.458 #> 586          7          9    2 2.694  0.742 0.458 #> 587         12         11   -1 2.694 -0.371 0.711 #> 588          9          7   -2 2.694 -0.742 0.458 #> 589          9          6   -3 2.694 -1.113 0.266 #> 590         14         13   -1 2.694 -0.371 0.711 #> 591         15         15    0 2.694  0.000     1 #> 592         19         15   -4 2.694 -1.485 0.138 #> 593          6          7    1 2.694  0.371 0.711 #> 594          4          3   -1 2.694 -0.371 0.711 #> 595          4          6    2 2.694  0.742 0.458 #> 596          4          3   -1 2.694 -0.371 0.711 #> 597          4          4    0 2.694  0.000     1 #> 598         10          6   -4 2.694 -1.485 0.138 #> 599          8         14    6 2.694  2.227 0.026 #> 600          9         12    3 2.694  1.113 0.266 #> 601         10         12    2 2.694  0.742 0.458 #> 602         12          9   -3 2.694 -1.113 0.266 #> 603         13          9   -4 2.694 -1.485 0.138 #> 604         11         11    0 2.694  0.000     1 #> 605          2          4    2 2.694  0.742 0.458 #> 606         16         14   -2 2.694 -0.742 0.458 #> 607          2          1   -1 2.694 -0.371 0.711 #> 608          3          2   -1 2.694 -0.371 0.711 #> 609          6          4   -2 2.694 -0.742 0.458 #> 610         15         11   -4 2.694 -1.485 0.138 #> 611          7          6   -1 2.694 -0.371 0.711 #> 612         14         18    4 2.694  1.485 0.138 #> 613          7         14    7 2.694  2.598 0.009 #> 614         18         14   -4 2.694 -1.485 0.138 #> 615          9          6   -3 2.694 -1.113 0.266 #> 616         11         11    0 2.694  0.000     1 #> 617          6          2   -4 2.694 -1.485 0.138 #> 618         10          7   -3 2.694 -1.113 0.266 #> 619          3          2   -1 2.694 -0.371 0.711 #> 620          8          4   -4 2.694 -1.485 0.138 #> 621          8         10    2 2.694  0.742 0.458 #> 622         16         16    0 2.694  0.000     1 #> 623          4          2   -2 2.694 -0.742 0.458 #> 624         13         15    2 2.694  0.742 0.458 #> 625         11         11    0 2.694  0.000     1 #> 626         14         13   -1 2.694 -0.371 0.711 #> 627          4          8    4 2.694  1.485 0.138 #> 628          6          8    2 2.694  0.742 0.458 #> 629         15          9   -6 2.694 -2.227 0.026 #> 630          2          3    1 2.694  0.371 0.711 #> 631          2          3    1 2.694  0.371 0.711 #> 632          8          6   -2 2.694 -0.742 0.458 #> 633          8          4   -4 2.694 -1.485 0.138 #> 634         12         18    6 2.694  2.227 0.026 #> 635         15         15    0 2.694  0.000     1 #> 636         10         10    0 2.694  0.000     1 #> 637          3          3    0 2.694  0.000     1 #> 638         14         15    1 2.694  0.371 0.711 #> 639          9          6   -3 2.694 -1.113 0.266 #> 640          2          5    3 2.694  1.113 0.266 #> 641         14         17    3 2.694  1.113 0.266 #> 642          4          2   -2 2.694 -0.742 0.458 #> 643         12         13    1 2.694  0.371 0.711 #> 644         10          7   -3 2.694 -1.113 0.266 #> 645          3          4    1 2.694  0.371 0.711 #> 646          4          2   -2 2.694 -0.742 0.458 #> 647          2          6    4 2.694  1.485 0.138 #> 648         11          8   -3 2.694 -1.113 0.266 #> 649         10         10    0 2.694  0.000     1 #> 650         17         17    0 2.694  0.000     1 #> 651          8         10    2 2.694  0.742 0.458 #> 652          8          9    1 2.694  0.371 0.711 #> 653         17         17    0 2.694  0.000     1 #> 654         15         13   -2 2.694 -0.742 0.458 #> 655         14         19    5 2.694  1.856 0.063 #> 656         10         14    4 2.694  1.485 0.138 #> 657         12         13    1 2.694  0.371 0.711 #> 658          7         12    5 2.694  1.856 0.063 #> 659         11         12    1 2.694  0.371 0.711 #> 660         13         10   -3 2.694 -1.113 0.266 #> 661          7          7    0 2.694  0.000     1 #> 662          8          6   -2 2.694 -0.742 0.458 #> 663          7          5   -2 2.694 -0.742 0.458 #> 664         14         10   -4 2.694 -1.485 0.138 #> 665         17         19    2 2.694  0.742 0.458 #> 666          9          6   -3 2.694 -1.113 0.266 #> 667          3          3    0 2.694  0.000     1 #> 668         15         11   -4 2.694 -1.485 0.138 #> 669          7          8    1 2.694  0.371 0.711 #> 670         12         12    0 2.694  0.000     1 #> 671         13         13    0 2.694  0.000     1 #> 672         16         20    4 2.694  1.485 0.138 #> 673         13          9   -4 2.694 -1.485 0.138 #> 674         14         16    2 2.694  0.742 0.458 #> 675          7          2   -5 2.694 -1.856 0.063 #> 676         10          6   -4 2.694 -1.485 0.138 #> 677         10         12    2 2.694  0.742 0.458 #> 678          8          9    1 2.694  0.371 0.711 #> 679          4          7    3 2.694  1.113 0.266 #> 680          2          4    2 2.694  0.742 0.458 #> 681         13         10   -3 2.694 -1.113 0.266 #> 682          5         12    7 2.694  2.598 0.009 #> 683          5          6    1 2.694  0.371 0.711 #> 684         10          7   -3 2.694 -1.113 0.266 #> 685         13         12   -1 2.694 -0.371 0.711 #> 686         17         19    2 2.694  0.742 0.458 #> 687         11         12    1 2.694  0.371 0.711 #> 688          4         10    6 2.694  2.227 0.026 #> 689          6          4   -2 2.694 -0.742 0.458 #> 690          3          5    2 2.694  0.742 0.458 #> 691         11         14    3 2.694  1.113 0.266 #> 692          7          2   -5 2.694 -1.856 0.063 #> 693          8         10    2 2.694  0.742 0.458 #> 694         13         11   -2 2.694 -0.742 0.458 #> 695         13         16    3 2.694  1.113 0.266 #> 696         16         15   -1 2.694 -0.371 0.711 #> 697         16         12   -4 2.694 -1.485 0.138 #> 698          3          3    0 2.694  0.000     1 #> 699         12         15    3 2.694  1.113 0.266 #> 700         12         16    4 2.694  1.485 0.138 #> 701          3          3    0 2.694  0.000     1 #> 702         20         20    0 2.694  0.000     1 #> 703          7         10    3 2.694  1.113 0.266 #> 704          9         13    4 2.694  1.485 0.138 #> 705          5          7    2 2.694  0.742 0.458 #> 706          2          2    0 2.694  0.000     1 #> 707         13         16    3 2.694  1.113 0.266 #> 708          5          7    2 2.694  0.742 0.458 #> 709          8          7   -1 2.694 -0.371 0.711 #> 710         15         18    3 2.694  1.113 0.266 #> 711          3          1   -2 2.694 -0.742 0.458 #> 712          5          5    0 2.694  0.000     1 #> 713          5          3   -2 2.694 -0.742 0.458 #> 714         15         16    1 2.694  0.371 0.711 #> 715         12         10   -2 2.694 -0.742 0.458 #> 716          9          6   -3 2.694 -1.113 0.266 #> 717          5          2   -3 2.694 -1.113 0.266 #> 718          3          4    1 2.694  0.371 0.711 #> 719          2          6    4 2.694  1.485 0.138 #> 720          4          6    2 2.694  0.742 0.458 #> 721         10         12    2 2.694  0.742 0.458 #> 722         16         14   -2 2.694 -0.742 0.458 #> 723          3          2   -1 2.694 -0.371 0.711 #> 724         13          8   -5 2.694 -1.856 0.063 #> 725         17         15   -2 2.694 -0.742 0.458 #> 726          8          8    0 2.694  0.000     1 #> 727          8         10    2 2.694  0.742 0.458 #> 728         16         12   -4 2.694 -1.485 0.138 #> 729         11         15    4 2.694  1.485 0.138 #> 730          4          8    4 2.694  1.485 0.138 #> 731          5          6    1 2.694  0.371 0.711 #> 732          4          3   -1 2.694 -0.371 0.711 #> 733          8          6   -2 2.694 -0.742 0.458 #> 734         18         19    1 2.694  0.371 0.711 #> 735         10         11    1 2.694  0.371 0.711 #> 736         10         12    2 2.694  0.742 0.458 #> 737         18         20    2 2.694  0.742 0.458 #> 738         11          5   -6 2.694 -2.227 0.026 #> 739         17         17    0 2.694  0.000     1 #> 740          3          5    2 2.694  0.742 0.458 #> 741         15         15    0 2.694  0.000     1 #> 742          8          9    1 2.694  0.371 0.711 #> 743          9          5   -4 2.694 -1.485 0.138 #> 744         16         13   -3 2.694 -1.113 0.266 #> 745         14         13   -1 2.694 -0.371 0.711 #> 746          8          6   -2 2.694 -0.742 0.458 #> 747          5          9    4 2.694  1.485 0.138 #> 748          3          1   -2 2.694 -0.742 0.458 #> 749          6          7    1 2.694  0.371 0.711 #> 750         17         13   -4 2.694 -1.485 0.138 #> 751         15         15    0 2.694  0.000     1 #> 752          5          6    1 2.694  0.371 0.711 #> 753          9         11    2 2.694  0.742 0.458 #> 754         16         14   -2 2.694 -0.742 0.458 #> 755         12         12    0 2.694  0.000     1 #> 756         12         14    2 2.694  0.742 0.458 #> 757         14          9   -5 2.694 -1.856 0.063 #> 758         12         15    3 2.694  1.113 0.266 #> 759          1          0   -1 2.694 -0.371 0.711 #> 760         13         17    4 2.694  1.485 0.138 #> 761         17         19    2 2.694  0.742 0.458 #> 762          4          4    0 2.694  0.000     1 #> 763         10          7   -3 2.694 -1.113 0.266 #> 764         15         15    0 2.694  0.000     1 #> 765         10         12    2 2.694  0.742 0.458 #> 766          2          2    0 2.694  0.000     1 #> 767         16         16    0 2.694  0.000     1 #> 768         14         13   -1 2.694 -0.371 0.711 #> 769         15         15    0 2.694  0.000     1 #> 770          7          3   -4 2.694 -1.485 0.138 #> 771          7          3   -4 2.694 -1.485 0.138 #> 772         15         14   -1 2.694 -0.371 0.711 #> 773         11         12    1 2.694  0.371 0.711 #> 774          2          1   -1 2.694 -0.371 0.711 #> 775          3          7    4 2.694  1.485 0.138 #> 776         16         16    0 2.694  0.000     1 #> 777         14          9   -5 2.694 -1.856 0.063 #> 778         14         14    0 2.694  0.000     1 #> 779         14         13   -1 2.694 -0.371 0.711 #> 780         13          9   -4 2.694 -1.485 0.138 #> 781         13         11   -2 2.694 -0.742 0.458 #> 782          5         13    8 2.694  2.969 0.003 #> 783         13         12   -1 2.694 -0.371 0.711 #> 784          8          7   -1 2.694 -0.371 0.711 #> 785         17         16   -1 2.694 -0.371 0.711 #> 786         10         11    1 2.694  0.371 0.711 #> 787         12         10   -2 2.694 -0.742 0.458 #> 788          7          9    2 2.694  0.742 0.458 #> 789          2          2    0 2.694  0.000     1 #> 790          1          3    2 2.694  0.742 0.458 #> 791          3          8    5 2.694  1.856 0.063 #> 792         14         16    2 2.694  0.742 0.458 #> 793          4          7    3 2.694  1.113 0.266 #> 794         15         17    2 2.694  0.742 0.458 #> 795         15         13   -2 2.694 -0.742 0.458 #> 796          7          8    1 2.694  0.371 0.711 #> 797          6          4   -2 2.694 -0.742 0.458 #> 798          7          6   -1 2.694 -0.371 0.711 #> 799         11          8   -3 2.694 -1.113 0.266 #> 800          8         12    4 2.694  1.485 0.138 #> 801          6          3   -3 2.694 -1.113 0.266 #> 802          7          2   -5 2.694 -1.856 0.063 #> 803          9          9    0 2.694  0.000     1 #> 804         17         14   -3 2.694 -1.113 0.266 #> 805          6          7    1 2.694  0.371 0.711 #> 806         14         13   -1 2.694 -0.371 0.711 #> 807          6         13    7 2.694  2.598 0.009 #> 808          7          9    2 2.694  0.742 0.458 #> 809         17         17    0 2.694  0.000     1 #> 810          3          6    3 2.694  1.113 0.266 #> 811         15         18    3 2.694  1.113 0.266 #> 812         10         10    0 2.694  0.000     1 #> 813          7          2   -5 2.694 -1.856 0.063 #> 814         13         14    1 2.694  0.371 0.711 #> 815          8         10    2 2.694  0.742 0.458 #> 816          7          7    0 2.694  0.000     1 #> 817         15          5  -10 2.694 -3.712     0 #> 818         11         11    0 2.694  0.000     1 #> 819          8         14    6 2.694  2.227 0.026 #> 820          7          5   -2 2.694 -0.742 0.458 #> 821         12         12    0 2.694  0.000     1 #> 822         10         13    3 2.694  1.113 0.266 #> 823          3          3    0 2.694  0.000     1 #> 824         17         18    1 2.694  0.371 0.711 #> 825          7          6   -1 2.694 -0.371 0.711 #> 826          5          7    2 2.694  0.742 0.458 #> 827         15         14   -1 2.694 -0.371 0.711 #> 828          3          7    4 2.694  1.485 0.138 #> 829          4          3   -1 2.694 -0.371 0.711 #> 830         20         17   -3 2.694 -1.113 0.266 #> 831          8          5   -3 2.694 -1.113 0.266 #> 832         13         18    5 2.694  1.856 0.063 #> 833         15         15    0 2.694  0.000     1 #> 834         16         17    1 2.694  0.371 0.711 #> 835          6          6    0 2.694  0.000     1 #> 836         16         16    0 2.694  0.000     1 #> 837          9          9    0 2.694  0.000     1 #> 838         10         16    6 2.694  2.227 0.026 #> 839         10         11    1 2.694  0.371 0.711 #> 840         16         17    1 2.694  0.371 0.711 #> 841         15         15    0 2.694  0.000     1 #> 842         13         13    0 2.694  0.000     1 #> 843         15         16    1 2.694  0.371 0.711 #> 844         10          7   -3 2.694 -1.113 0.266 #> 845         12          9   -3 2.694 -1.113 0.266 #> 846         12         12    0 2.694  0.000     1 #> 847          8          7   -1 2.694 -0.371 0.711 #> 848          7          3   -4 2.694 -1.485 0.138 #> 849          5          5    0 2.694  0.000     1 #> 850         19         16   -3 2.694 -1.113 0.266 #> 851         15         15    0 2.694  0.000     1 #> 852         13          8   -5 2.694 -1.856 0.063 #> 853          9         10    1 2.694  0.371 0.711 #> 854          8          8    0 2.694  0.000     1 #> 855          9          9    0 2.694  0.000     1 #> 856         12         13    1 2.694  0.371 0.711 #> 857         10          7   -3 2.694 -1.113 0.266 #> 858         13         10   -3 2.694 -1.113 0.266 #> 859         10          9   -1 2.694 -0.371 0.711 #> 860          5          8    3 2.694  1.113 0.266 #> 861          5          3   -2 2.694 -0.742 0.458 #> 862         13         14    1 2.694  0.371 0.711 #> 863          3          6    3 2.694  1.113 0.266 #> 864          8          4   -4 2.694 -1.485 0.138 #> 865         10         13    3 2.694  1.113 0.266 #> 866         12         12    0 2.694  0.000     1 #> 867          9         10    1 2.694  0.371 0.711 #> 868         11         13    2 2.694  0.742 0.458 #> 869         10          7   -3 2.694 -1.113 0.266 #> 870         13         13    0 2.694  0.000     1 #> 871         14         13   -1 2.694 -0.371 0.711 #> 872          8         10    2 2.694  0.742 0.458 #> 873          1          1    0 2.694  0.000     1 #> 874          7         13    6 2.694  2.227 0.026 #> 875         14         16    2 2.694  0.742 0.458 #> 876          9          8   -1 2.694 -0.371 0.711 #> 877         16         16    0 2.694  0.000     1 #> 878         14         15    1 2.694  0.371 0.711 #> 879          8         10    2 2.694  0.742 0.458 #> 880          6          2   -4 2.694 -1.485 0.138 #> 881          5          2   -3 2.694 -1.113 0.266 #> 882          6         10    4 2.694  1.485 0.138 #> 883         11         11    0 2.694  0.000     1 #> 884          6          5   -1 2.694 -0.371 0.711 #> 885         14         14    0 2.694  0.000     1 #> 886          3          7    4 2.694  1.485 0.138 #> 887          3          9    6 2.694  2.227 0.026 #> 888         10          7   -3 2.694 -1.113 0.266 #> 889          2          6    4 2.694  1.485 0.138 #> 890         15         11   -4 2.694 -1.485 0.138 #> 891         10          6   -4 2.694 -1.485 0.138 #> 892         10         10    0 2.694  0.000     1 #> 893         17         16   -1 2.694 -0.371 0.711 #> 894         11         12    1 2.694  0.371 0.711 #> 895          9         11    2 2.694  0.742 0.458 #> 896         15         13   -2 2.694 -0.742 0.458 #> 897         17         16   -1 2.694 -0.371 0.711 #> 898          7          9    2 2.694  0.742 0.458 #> 899         10          8   -2 2.694 -0.742 0.458 #> 900          6          5   -1 2.694 -0.371 0.711 #> 901          7          6   -1 2.694 -0.371 0.711 #> 902         16         19    3 2.694  1.113 0.266 #> 903         16         19    3 2.694  1.113 0.266 #> 904         12          9   -3 2.694 -1.113 0.266 #> 905          6          7    1 2.694  0.371 0.711 #> 906         19         20    1 2.694  0.371 0.711 #> 907         15         11   -4 2.694 -1.485 0.138 #> 908         10          5   -5 2.694 -1.856 0.063 #> 909          2          0   -2 2.694 -0.742 0.458 #> 910         18         10   -8 2.694 -2.969 0.003 #> 911          2          0   -2 2.694 -0.742 0.458 #> 912         20         17   -3 2.694 -1.113 0.266 #> 913          4          2   -2 2.694 -0.742 0.458 #> 914         16         17    1 2.694  0.371 0.711 #> 915         14         15    1 2.694  0.371 0.711 #> 916         18         13   -5 2.694 -1.856 0.063 #> 917         16         17    1 2.694  0.371 0.711 #> 918         15         18    3 2.694  1.113 0.266 #> 919         13         10   -3 2.694 -1.113 0.266 #> 920         11          8   -3 2.694 -1.113 0.266 #> 921          4          2   -2 2.694 -0.742 0.458 #> 922          6         10    4 2.694  1.485 0.138 #> 923         12         11   -1 2.694 -0.371 0.711 #> 924         18         18    0 2.694  0.000     1 #> 925          5          5    0 2.694  0.000     1 #> 926         19         19    0 2.694  0.000     1 #> 927          7          5   -2 2.694 -0.742 0.458 #> 928          9          3   -6 2.694 -2.227 0.026 #> 929         15         19    4 2.694  1.485 0.138 #> 930         15          9   -6 2.694 -2.227 0.026 #> 931         11         11    0 2.694  0.000     1 #> 932         12         10   -2 2.694 -0.742 0.458 #> 933         12         13    1 2.694  0.371 0.711 #> 934          9          6   -3 2.694 -1.113 0.266 #> 935         14         14    0 2.694  0.000     1 #> 936          6          7    1 2.694  0.371 0.711 #> 937          6          6    0 2.694  0.000     1 #> 938          8         10    2 2.694  0.742 0.458 #> 939          3          2   -1 2.694 -0.371 0.711 #> 940         11         10   -1 2.694 -0.371 0.711 #> 941         12         15    3 2.694  1.113 0.266 #> 942         13         14    1 2.694  0.371 0.711 #> 943         12          8   -4 2.694 -1.485 0.138 #> 944         15         13   -2 2.694 -0.742 0.458 #> 945         11         12    1 2.694  0.371 0.711 #> 946         11         11    0 2.694  0.000     1 #> 947         11         10   -1 2.694 -0.371 0.711 #> 948         10         13    3 2.694  1.113 0.266 #> 949          1          2    1 2.694  0.371 0.711 #> 950          7         12    5 2.694  1.856 0.063 #> 951          8          6   -2 2.694 -0.742 0.458 #> 952         15         12   -3 2.694 -1.113 0.266 #> 953          7          4   -3 2.694 -1.113 0.266 #> 954          2          6    4 2.694  1.485 0.138 #> 955          6          5   -1 2.694 -0.371 0.711 #> 956          3          3    0 2.694  0.000     1 #> 957          5          5    0 2.694  0.000     1 #> 958          6          6    0 2.694  0.000     1 #> 959         13         17    4 2.694  1.485 0.138 #> 960          6          7    1 2.694  0.371 0.711 #> 961          3          2   -1 2.694 -0.371 0.711 #> 962         12         11   -1 2.694 -0.371 0.711 #> 963          6          4   -2 2.694 -0.742 0.458 #> 964         17         12   -5 2.694 -1.856 0.063 #> 965          5          7    2 2.694  0.742 0.458 #> 966         13         16    3 2.694  1.113 0.266 #> 967         15         16    1 2.694  0.371 0.711 #> 968         12          9   -3 2.694 -1.113 0.266 #> 969         15         13   -2 2.694 -0.742 0.458 #> 970         14         16    2 2.694  0.742 0.458 #> 971          6          7    1 2.694  0.371 0.711 #> 972         16         16    0 2.694  0.000     1 #> 973          3          1   -2 2.694 -0.742 0.458 #> 974          5          5    0 2.694  0.000     1 #> 975          7          3   -4 2.694 -1.485 0.138 #> 976         13         13    0 2.694  0.000     1 #> 977         10         12    2 2.694  0.742 0.458 #> 978          2          4    2 2.694  0.742 0.458 #> 979          2          9    7 2.694  2.598 0.009 #> 980         10          9   -1 2.694 -0.371 0.711 #> 981          4          1   -3 2.694 -1.113 0.266 #> 982          7          4   -3 2.694 -1.113 0.266 #> 983         17         12   -5 2.694 -1.856 0.063 #> 984         18         16   -2 2.694 -0.742 0.458 #> 985         16         11   -5 2.694 -1.856 0.063 #> 986          5          3   -2 2.694 -0.742 0.458 #> 987         13         14    1 2.694  0.371 0.711 #> 988         11          8   -3 2.694 -1.113 0.266 #> 989          2         12   10 2.694  3.712     0 #> 990          9         11    2 2.694  0.742 0.458 #> 991         11          6   -5 2.694 -1.856 0.063 #> 992         11         10   -1 2.694 -0.371 0.711 #> 993          8          6   -2 2.694 -0.742 0.458 #> 994          1          4    3 2.694  1.113 0.266 #> 995         10          7   -3 2.694 -1.113 0.266 #> 996         11          5   -6 2.694 -2.227 0.026 #> 997          7          6   -1 2.694 -0.371 0.711 #> 998         10         12    2 2.694  0.742 0.458 #> 999         11          7   -4 2.694 -1.485 0.138 #> 1000         1          2    1 2.694  0.371 0.711  ######  # interactive shiny interfaces for live scoring mod_pre <- mirt(Science) #>   # (optional) setup mod_post to have medium effect size change (d = 0.5) sv <- mod2values(mod_pre) sv$value[sv$name == 'MEAN_1'] <- 0.5 mod_post <- mirt(Science, pars=sv, TOL=NA)  # only use pre-test model for scoring if(interactive()){     RCI(mod_pre=mod_pre, shiny=TRUE)      # use both pre-test and post-test models for including empirical priors     RCI(mod_pre=mod_pre, mod_post=mod_post, shiny=TRUE,         main='Perceptions of Science and Technology')  }   ############################ # Example where individuals take completely different item set pre-post #   but prior calibration has been performed to equate the items  dat <- key2binary(SAT12,   key = c(1,4,5,2,3,1,2,1,3,1,2,4,2,1,5,3,4,4,1,4,3,3,4,1,3,5,1,3,1,5,4,5))  mod <- mirt(dat) #>   # with N=5 individuals under investigation predat <- postdat <- dat[1:5,] predat[, 17:32] <- NA postdat[, 1:16] <- NA  head(predat) #>      Item.1 Item.2 Item.3 Item.4 Item.5 Item.6 Item.7 Item.8 Item.9 Item.10 #> [1,]      1      1      1      1      1      1      1      1      1       1 #> [2,]      0      1      0      0      1      0      1      0      1       1 #> [3,]      1      1      1      0      1      0      1      0      1       0 #> [4,]      0      1      0      1      1      0      1      0      1       0 #> [5,]      0      1      1      1      1      0      1      1      0       0 #>      Item.11 Item.12 Item.13 Item.14 Item.15 Item.16 Item.17 Item.18 Item.19 #> [1,]       1       1       1       1       1       1      NA      NA      NA #> [2,]       1       0       1       1       1       0      NA      NA      NA #> [3,]       1       0       0       1       1       0      NA      NA      NA #> [4,]       1       1       1       1       1       0      NA      NA      NA #> [5,]       1       1       1       1       1       0      NA      NA      NA #>      Item.20 Item.21 Item.22 Item.23 Item.24 Item.25 Item.26 Item.27 Item.28 #> [1,]      NA      NA      NA      NA      NA      NA      NA      NA      NA #> [2,]      NA      NA      NA      NA      NA      NA      NA      NA      NA #> [3,]      NA      NA      NA      NA      NA      NA      NA      NA      NA #> [4,]      NA      NA      NA      NA      NA      NA      NA      NA      NA #> [5,]      NA      NA      NA      NA      NA      NA      NA      NA      NA #>      Item.29 Item.30 Item.31 Item.32 #> [1,]      NA      NA      NA      NA #> [2,]      NA      NA      NA      NA #> [3,]      NA      NA      NA      NA #> [4,]      NA      NA      NA      NA #> [5,]      NA      NA      NA      NA head(postdat) #>      Item.1 Item.2 Item.3 Item.4 Item.5 Item.6 Item.7 Item.8 Item.9 Item.10 #> [1,]     NA     NA     NA     NA     NA     NA     NA     NA     NA      NA #> [2,]     NA     NA     NA     NA     NA     NA     NA     NA     NA      NA #> [3,]     NA     NA     NA     NA     NA     NA     NA     NA     NA      NA #> [4,]     NA     NA     NA     NA     NA     NA     NA     NA     NA      NA #> [5,]     NA     NA     NA     NA     NA     NA     NA     NA     NA      NA #>      Item.11 Item.12 Item.13 Item.14 Item.15 Item.16 Item.17 Item.18 Item.19 #> [1,]      NA      NA      NA      NA      NA      NA       1       1       1 #> [2,]      NA      NA      NA      NA      NA      NA       1       0       1 #> [3,]      NA      NA      NA      NA      NA      NA       1       0       0 #> [4,]      NA      NA      NA      NA      NA      NA       1       0       0 #> [5,]      NA      NA      NA      NA      NA      NA       1       0       1 #>      Item.20 Item.21 Item.22 Item.23 Item.24 Item.25 Item.26 Item.27 Item.28 #> [1,]       1       1       1       1       1       1       1       1       1 #> [2,]       1       1       1       0       1       0       0       1       0 #> [3,]       1       1       1       0       1       1       0       1       1 #> [4,]       1       1       0       0       0       0       0       1       1 #> [5,]       1       1       1       0       1       0       1       1       1 #>      Item.29 Item.30 Item.31 Item.32 #> [1,]       1       1       1       1 #> [2,]       0       0       1       0 #> [3,]       0       0       1       0 #> [4,]       0       0       1       0 #> [5,]       1       0       1       0  RCI(mod, predat, postdat) #>   pre.score post.score converged   diff    SE      z     p #> 1     2.206      1.808      TRUE -0.398 0.951 -0.419 0.675 #> 2     0.373     -0.344      TRUE -0.717 0.720 -0.995  0.32 #> 3     0.303     -0.115      TRUE -0.419 0.728 -0.575 0.566 #> 4     0.295     -0.864      TRUE -1.159 0.699 -1.658 0.097 #> 5     0.670      0.513      TRUE -0.157 0.772 -0.203 0.839  ###### # Two-dimensional IRT model for each time point, 20 items (no DIF)  J <- 20 N <- 500 slopes <- rlnorm(J, .2, .2) a <- matrix(c(slopes, numeric(J*2), slopes),J*2) ints <- rnorm(J) d <- matrix(c(ints, ints), ncol=1) data.frame(a=a, d=d) #>          a.1       a.2           d #> 1  1.1552393 0.0000000 -0.63265649 #> 2  0.7725387 0.0000000 -0.23498495 #> 3  1.1911807 0.0000000 -0.23365145 #> 4  1.5201541 0.0000000 -0.09858223 #> 5  1.1752077 0.0000000  0.83519448 #> 6  1.0858223 0.0000000 -0.43051228 #> 7  1.6628731 0.0000000  0.41443651 #> 8  1.1012075 0.0000000  1.41245283 #> 9  1.0354140 0.0000000  0.84976955 #> 10 1.3580607 0.0000000  0.17070288 #> 11 0.9164153 0.0000000 -0.24230045 #> 12 1.1904205 0.0000000 -1.66708924 #> 13 1.5486689 0.0000000 -1.74009514 #> 14 1.1839185 0.0000000  0.84319987 #> 15 1.2910372 0.0000000 -1.96094872 #> 16 1.3247273 0.0000000 -0.33889244 #> 17 1.3673442 0.0000000  1.84475886 #> 18 1.2868859 0.0000000  0.51631728 #> 19 0.9999844 0.0000000 -0.73065644 #> 20 1.1269914 0.0000000  1.68359583 #> 21 0.0000000 1.1552393 -0.63265649 #> 22 0.0000000 0.7725387 -0.23498495 #> 23 0.0000000 1.1911807 -0.23365145 #> 24 0.0000000 1.5201541 -0.09858223 #> 25 0.0000000 1.1752077  0.83519448 #> 26 0.0000000 1.0858223 -0.43051228 #> 27 0.0000000 1.6628731  0.41443651 #> 28 0.0000000 1.1012075  1.41245283 #> 29 0.0000000 1.0354140  0.84976955 #> 30 0.0000000 1.3580607  0.17070288 #> 31 0.0000000 0.9164153 -0.24230045 #> 32 0.0000000 1.1904205 -1.66708924 #> 33 0.0000000 1.5486689 -1.74009514 #> 34 0.0000000 1.1839185  0.84319987 #> 35 0.0000000 1.2910372 -1.96094872 #> 36 0.0000000 1.3247273 -0.33889244 #> 37 0.0000000 1.3673442  1.84475886 #> 38 0.0000000 1.2868859  0.51631728 #> 39 0.0000000 0.9999844 -0.73065644 #> 40 0.0000000 1.1269914  1.68359583  # mean effects across time mu <- c(0, -1/2) sigma <- matrix(c(1, .7, .7, 1), 2,2)  dat <- simdata(a, d, N, mu=mu, sigma=sigma, itemtype = '2PL')  # build equality constraints across time points constr <- NULL for(i in (1:J)){     constr <- c(constr, paste0(\"(\", i, ',', i+J, \",a1,a2)\"))     constr <- c(constr, paste0(\"(\", i, ',', i+J, \",d)\")) } constr <- paste0(constr, collapse=',')  # define model where item parameters constrained over time, and # latent trait has potential scale-location changes (e.g., regression to the # mean effects) model <- sprintf(\"                   thetapre = 1-%i,                   thetapost = %i-%i,                   COV = thetapre*thetapost, thetapost*thetapost                   MEAN = thetapost                   CONSTRAIN = %s\", J, J+1, 2*J, constr) cat(model) #>  #>                   thetapre = 1-20, #>                   thetapost = 21-40, #>                   COV = thetapre*thetapost, thetapost*thetapost #>                   MEAN = thetapost #>                   CONSTRAIN = (1,21,a1,a2),(1,21,d),(2,22,a1,a2),(2,22,d),(3,23,a1,a2),(3,23,d),(4,24,a1,a2),(4,24,d),(5,25,a1,a2),(5,25,d),(6,26,a1,a2),(6,26,d),(7,27,a1,a2),(7,27,d),(8,28,a1,a2),(8,28,d),(9,29,a1,a2),(9,29,d),(10,30,a1,a2),(10,30,d),(11,31,a1,a2),(11,31,d),(12,32,a1,a2),(12,32,d),(13,33,a1,a2),(13,33,d),(14,34,a1,a2),(14,34,d),(15,35,a1,a2),(15,35,d),(16,36,a1,a2),(16,36,d),(17,37,a1,a2),(17,37,d),(18,38,a1,a2),(18,38,d),(19,39,a1,a2),(19,39,d),(20,40,a1,a2),(20,40,d)  # fit the model to calibration data mod <- mirt(dat, model = model, SE=TRUE) #>  #>  #> Calculating information matrix... coef(mod, printSE=TRUE) #> $Item_1 #>        a1 a2      d logit(g) logit(u) #> par 1.252  0 -0.639     -999      999 #> SE  0.117 NA  0.097       NA       NA #>  #> $Item_2 #>        a1 a2      d logit(g) logit(u) #> par 0.702  0 -0.268     -999      999 #> SE  0.084 NA  0.077       NA       NA #>  #> $Item_3 #>        a1 a2      d logit(g) logit(u) #> par 1.210  0 -0.210     -999      999 #> SE  0.112 NA  0.094       NA       NA #>  #> $Item_4 #>        a1 a2      d logit(g) logit(u) #> par 1.608  0 -0.178     -999      999 #> SE  0.140 NA  0.110       NA       NA #>  #> $Item_5 #>        a1 a2     d logit(g) logit(u) #> par 1.237  0 0.770     -999      999 #> SE  0.116 NA 0.103       NA       NA #>  #> $Item_6 #>        a1 a2      d logit(g) logit(u) #> par 1.296  0 -0.445     -999      999 #> SE  0.118 NA  0.097       NA       NA #>  #> $Item_7 #>        a1 a2     d logit(g) logit(u) #> par 1.856  0 0.377     -999      999 #> SE  0.161 NA 0.124       NA       NA #>  #> $Item_8 #>        a1 a2     d logit(g) logit(u) #> par 1.125  0 1.368     -999      999 #> SE  0.115 NA 0.113       NA       NA #>  #> $Item_9 #>        a1 a2     d logit(g) logit(u) #> par 0.961  0 0.717     -999      999 #> SE  0.099 NA 0.092       NA       NA #>  #> $Item_10 #>        a1 a2     d logit(g) logit(u) #> par 1.517  0 0.150     -999      999 #> SE  0.133 NA 0.107       NA       NA #>  #> $Item_11 #>        a1 a2      d logit(g) logit(u) #> par 0.855  0 -0.271     -999      999 #> SE  0.092 NA  0.081       NA       NA #>  #> $Item_12 #>        a1 a2      d logit(g) logit(u) #> par 1.056  0 -1.475     -999      999 #> SE  0.115 NA  0.104       NA       NA #>  #> $Item_13 #>        a1 a2      d logit(g) logit(u) #> par 1.745  0 -2.061     -999      999 #> SE  0.173 NA  0.157       NA       NA #>  #> $Item_14 #>        a1 a2     d logit(g) logit(u) #> par 1.333  0 0.860     -999      999 #> SE  0.123 NA 0.109       NA       NA #>  #> $Item_15 #>        a1 a2      d logit(g) logit(u) #> par 1.488  0 -2.028     -999      999 #> SE  0.153 NA  0.142       NA       NA #>  #> $Item_16 #>        a1 a2      d logit(g) logit(u) #> par 1.409  0 -0.359     -999      999 #> SE  0.125 NA  0.102       NA       NA #>  #> $Item_17 #>        a1 a2     d logit(g) logit(u) #> par 1.378  0 1.715     -999      999 #> SE  0.136 NA 0.135       NA       NA #>  #> $Item_18 #>        a1 a2     d logit(g) logit(u) #> par 1.202  0 0.321     -999      999 #> SE  0.111 NA 0.096       NA       NA #>  #> $Item_19 #>        a1 a2      d logit(g) logit(u) #> par 1.061  0 -0.807     -999      999 #> SE  0.106 NA  0.092       NA       NA #>  #> $Item_20 #>        a1 a2     d logit(g) logit(u) #> par 1.146  0 1.724     -999      999 #> SE  0.121 NA 0.126       NA       NA #>  #> $Item_21 #>     a1    a2      d logit(g) logit(u) #> par  0 1.252 -0.639     -999      999 #> SE  NA 0.117  0.097       NA       NA #>  #> $Item_22 #>     a1    a2      d logit(g) logit(u) #> par  0 0.702 -0.268     -999      999 #> SE  NA 0.084  0.077       NA       NA #>  #> $Item_23 #>     a1    a2      d logit(g) logit(u) #> par  0 1.210 -0.210     -999      999 #> SE  NA 0.112  0.094       NA       NA #>  #> $Item_24 #>     a1    a2      d logit(g) logit(u) #> par  0 1.608 -0.178     -999      999 #> SE  NA 0.140  0.110       NA       NA #>  #> $Item_25 #>     a1    a2     d logit(g) logit(u) #> par  0 1.237 0.770     -999      999 #> SE  NA 0.116 0.103       NA       NA #>  #> $Item_26 #>     a1    a2      d logit(g) logit(u) #> par  0 1.296 -0.445     -999      999 #> SE  NA 0.118  0.097       NA       NA #>  #> $Item_27 #>     a1    a2     d logit(g) logit(u) #> par  0 1.856 0.377     -999      999 #> SE  NA 0.161 0.124       NA       NA #>  #> $Item_28 #>     a1    a2     d logit(g) logit(u) #> par  0 1.125 1.368     -999      999 #> SE  NA 0.115 0.113       NA       NA #>  #> $Item_29 #>     a1    a2     d logit(g) logit(u) #> par  0 0.961 0.717     -999      999 #> SE  NA 0.099 0.092       NA       NA #>  #> $Item_30 #>     a1    a2     d logit(g) logit(u) #> par  0 1.517 0.150     -999      999 #> SE  NA 0.133 0.107       NA       NA #>  #> $Item_31 #>     a1    a2      d logit(g) logit(u) #> par  0 0.855 -0.271     -999      999 #> SE  NA 0.092  0.081       NA       NA #>  #> $Item_32 #>     a1    a2      d logit(g) logit(u) #> par  0 1.056 -1.475     -999      999 #> SE  NA 0.115  0.104       NA       NA #>  #> $Item_33 #>     a1    a2      d logit(g) logit(u) #> par  0 1.745 -2.061     -999      999 #> SE  NA 0.173  0.157       NA       NA #>  #> $Item_34 #>     a1    a2     d logit(g) logit(u) #> par  0 1.333 0.860     -999      999 #> SE  NA 0.123 0.109       NA       NA #>  #> $Item_35 #>     a1    a2      d logit(g) logit(u) #> par  0 1.488 -2.028     -999      999 #> SE  NA 0.153  0.142       NA       NA #>  #> $Item_36 #>     a1    a2      d logit(g) logit(u) #> par  0 1.409 -0.359     -999      999 #> SE  NA 0.125  0.102       NA       NA #>  #> $Item_37 #>     a1    a2     d logit(g) logit(u) #> par  0 1.378 1.715     -999      999 #> SE  NA 0.136 0.135       NA       NA #>  #> $Item_38 #>     a1    a2     d logit(g) logit(u) #> par  0 1.202 0.321     -999      999 #> SE  NA 0.111 0.096       NA       NA #>  #> $Item_39 #>     a1    a2      d logit(g) logit(u) #> par  0 1.061 -0.807     -999      999 #> SE  NA 0.106  0.092       NA       NA #>  #> $Item_40 #>     a1    a2     d logit(g) logit(u) #> par  0 1.146 1.724     -999      999 #> SE  NA 0.121 0.126       NA       NA #>  #> $GroupPars #>     MEAN_1 MEAN_2 COV_11 COV_21 COV_22 #> par      0 -0.519      1  0.691  0.971 #> SE      NA  0.049     NA  0.047  0.096 #>  coef(mod, simplify=TRUE) #> $items #>            a1    a2      d g u #> Item_1  1.252 0.000 -0.639 0 1 #> Item_2  0.702 0.000 -0.268 0 1 #> Item_3  1.210 0.000 -0.210 0 1 #> Item_4  1.608 0.000 -0.178 0 1 #> Item_5  1.237 0.000  0.770 0 1 #> Item_6  1.296 0.000 -0.445 0 1 #> Item_7  1.856 0.000  0.377 0 1 #> Item_8  1.125 0.000  1.368 0 1 #> Item_9  0.961 0.000  0.717 0 1 #> Item_10 1.517 0.000  0.150 0 1 #> Item_11 0.855 0.000 -0.271 0 1 #> Item_12 1.056 0.000 -1.475 0 1 #> Item_13 1.745 0.000 -2.061 0 1 #> Item_14 1.333 0.000  0.860 0 1 #> Item_15 1.488 0.000 -2.028 0 1 #> Item_16 1.409 0.000 -0.359 0 1 #> Item_17 1.378 0.000  1.715 0 1 #> Item_18 1.202 0.000  0.321 0 1 #> Item_19 1.061 0.000 -0.807 0 1 #> Item_20 1.146 0.000  1.724 0 1 #> Item_21 0.000 1.252 -0.639 0 1 #> Item_22 0.000 0.702 -0.268 0 1 #> Item_23 0.000 1.210 -0.210 0 1 #> Item_24 0.000 1.608 -0.178 0 1 #> Item_25 0.000 1.237  0.770 0 1 #> Item_26 0.000 1.296 -0.445 0 1 #> Item_27 0.000 1.856  0.377 0 1 #> Item_28 0.000 1.125  1.368 0 1 #> Item_29 0.000 0.961  0.717 0 1 #> Item_30 0.000 1.517  0.150 0 1 #> Item_31 0.000 0.855 -0.271 0 1 #> Item_32 0.000 1.056 -1.475 0 1 #> Item_33 0.000 1.745 -2.061 0 1 #> Item_34 0.000 1.333  0.860 0 1 #> Item_35 0.000 1.488 -2.028 0 1 #> Item_36 0.000 1.409 -0.359 0 1 #> Item_37 0.000 1.378  1.715 0 1 #> Item_38 0.000 1.202  0.321 0 1 #> Item_39 0.000 1.061 -0.807 0 1 #> Item_40 0.000 1.146  1.724 0 1 #>  #> $means #>  thetapre thetapost  #>     0.000    -0.519  #>  #> $cov #>           thetapre thetapost #> thetapre     1.000     0.691 #> thetapost    0.691     0.971 #>  summary(mod) #>         thetapre thetapost    h2 #> Item_1     0.592           0.351 #> Item_2     0.381           0.145 #> Item_3     0.579           0.336 #> Item_4     0.687           0.472 #> Item_5     0.588           0.346 #> Item_6     0.606           0.367 #> Item_7     0.737           0.543 #> Item_8     0.551           0.304 #> Item_9     0.492           0.242 #> Item_10    0.665           0.443 #> Item_11    0.449           0.202 #> Item_12    0.527           0.278 #> Item_13    0.716           0.512 #> Item_14    0.617           0.380 #> Item_15    0.658           0.433 #> Item_16    0.638           0.407 #> Item_17    0.629           0.396 #> Item_18    0.577           0.333 #> Item_19    0.529           0.280 #> Item_20    0.558           0.312 #> Item_21              0.587 0.344 #> Item_22              0.377 0.142 #> Item_23              0.574 0.329 #> Item_24              0.682 0.465 #> Item_25              0.582 0.339 #> Item_26              0.600 0.360 #> Item_27              0.732 0.536 #> Item_28              0.546 0.298 #> Item_29              0.486 0.236 #> Item_30              0.660 0.435 #> Item_31              0.444 0.197 #> Item_32              0.522 0.272 #> Item_33              0.711 0.505 #> Item_34              0.611 0.374 #> Item_35              0.653 0.426 #> Item_36              0.632 0.400 #> Item_37              0.624 0.389 #> Item_38              0.571 0.326 #> Item_39              0.524 0.274 #> Item_40              0.553 0.306 #>  #>         SE.thetapre SE.thetapost #> Item_1        0.036              #> Item_2        0.039              #> Item_3        0.036              #> Item_4        0.032              #> Item_5        0.036              #> Item_6        0.035              #> Item_7        0.029              #> Item_8        0.039              #> Item_9        0.038              #> Item_10       0.033              #> Item_11       0.039              #> Item_12       0.041              #> Item_13       0.035              #> Item_14       0.035              #> Item_15       0.038              #> Item_16       0.034              #> Item_17       0.037              #> Item_18       0.036              #> Item_19       0.038              #> Item_20       0.041              #> Item_21                    0.036 #> Item_22                    0.039 #> Item_23                    0.036 #> Item_24                    0.032 #> Item_25                    0.036 #> Item_26                    0.035 #> Item_27                    0.029 #> Item_28                    0.039 #> Item_29                    0.038 #> Item_30                    0.033 #> Item_31                    0.038 #> Item_32                    0.041 #> Item_33                    0.035 #> Item_34                    0.035 #> Item_35                    0.038 #> Item_36                    0.034 #> Item_37                    0.038 #> Item_38                    0.036 #> Item_39                    0.038 #> Item_40                    0.041 #>  #> SS loadings:  7.081 6.954  #> Proportion Var:  0.177 0.174  #>  #> Factor correlations:  #>  #>           thetapre thetapost #> thetapre     1.000           #> thetapost    0.701         1  # test data Theta <- cbind(c(0, 1, 2), c(0,1,2)) nochange <- simdata(a, d, itemtype = '2PL', Theta = Theta) change <- simdata(a, d, itemtype = '2PL', Theta = Theta +                       cbind(0, c(-1, -1, -1)))  # total score differences data.frame(pre=rowSums(nochange[,1:J]),            post=rowSums(nochange[,1:J + J])) #>   pre post #> 1  10    8 #> 2  12   15 #> 3  18   18 data.frame(pre=rowSums(change[,1:J]),            post=rowSums(change[,1:J + J])) #>   pre post #> 1  12    5 #> 2  14   10 #> 3  19   17   RCI(mod, predat = nochange) #>   pre.score post.score converged   diff    SE      z     p #> 1    -0.052     -0.483      TRUE -0.431 0.524 -0.822 0.411 #> 2     0.412      0.943      TRUE  0.531 0.542  0.978 0.328 #> 3     1.673      1.367      TRUE -0.306 0.641 -0.478 0.633 RCI(mod, predat = change) #>   pre.score post.score converged   diff    SE      z     p #> 1     0.215     -1.063      TRUE -1.278 0.554 -2.305 0.021 #> 2     0.871     -0.080      TRUE -0.951 0.536 -1.776 0.076 #> 3     1.867      1.210      TRUE -0.657 0.651 -1.009 0.313  # }"},{"path":"https://philchalmers.github.io/mirt/reference/RMSD_DIF.html","id":null,"dir":"Reference","previous_headings":"","what":"RMSD effect size statistic to quantify category-level DIF — RMSD_DIF","title":"RMSD effect size statistic to quantify category-level DIF — RMSD_DIF","text":"function computes set RMSD \"badness--fit\" statistics investing DIF across set grouping variables. first step, (potentially highly constrained) multiple group model fitted, second step item (person) parameters estimated based examines across groups. Category level DIF assessed based well pseudo-table counts match (constrained) probability functions implied original multiple group model (also weighing across implied density function latent traits). RSMD fit poor, indicating non-ignorable DIF, multiple-group model adjusted better account large response bias due using pooled model. See Lee von Davier (2020) Buchholz Hartig (2019) details.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/RMSD_DIF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RMSD effect size statistic to quantify category-level DIF — RMSD_DIF","text":"","code":"RMSD_DIF(pooled_mod, flag = 0, probfun = TRUE, dentype = \"norm\")"},{"path":"https://philchalmers.github.io/mirt/reference/RMSD_DIF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RMSD effect size statistic to quantify category-level DIF — RMSD_DIF","text":"pooled_mod multiple-group model (used compute model-implied probability goodness--fit test) single-group model computing RMSD goodness--fit values relative model-implied information flag numeric value used cut-help flag larger RMSD values (e.g., flag = .03 highlight categories RMSD values greater .03) probfun logical; use probability functions compute RMSD? FALSE, expected score functions integrated instead, may useful collapsing across categories polytomous items dentype density use latent trait. Can 'norm' use normal Gaussian density mean/variance extracted model object(default), 'snorm' standard normal distribution, 'empirical' use density estimate obtained via E-table","code":""},{"path":"https://philchalmers.github.io/mirt/reference/RMSD_DIF.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"RMSD effect size statistic to quantify category-level DIF — RMSD_DIF","text":"function generally designed work multiple-group models, however single-group model passed return RMSD information regarding observed vs expected response functions.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/RMSD_DIF.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"RMSD effect size statistic to quantify category-level DIF — RMSD_DIF","text":"Buchholz, J., Hartig, J. (2019). Comparing Attitudes Across Groups: IRT-Based Item-Fit Statistic   Analysis Measurement Invariance. Applied Psychological Measurement, 43(3), 241-250.   doi:10.1177/0146621617748323 Lee, S. S., von Davier, M. (2020). Improving measurement properties PISA home   possessions scale partial invariance modeling.   Psychological test assessment modeling, 62(1):55-83.","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/RMSD_DIF.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"RMSD effect size statistic to quantify category-level DIF — RMSD_DIF","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/RMSD_DIF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RMSD effect size statistic to quantify category-level DIF — RMSD_DIF","text":"","code":"# \\donttest{  #----- generate some data set.seed(12345) a <- a2 <- matrix(abs(rnorm(15,1,.3)), ncol=1) d <- d2 <- matrix(rnorm(15,0,.7),ncol=1)  # item 1 has DIF d2[1] <- d[1] - .5 a2[1] <- a[1] + 1  itemtype <- rep('2PL', nrow(a)) N <- 1000 dataset1 <- simdata(a, d, N, itemtype) dataset2 <- simdata(a2, d2, N, itemtype) dat <- rbind(dataset1, dataset2) group <- c(rep('D1', N), rep('D2', N))  #-----  # fully pooled model pooled_mod <- multipleGroup(dat, 1, group=group,    invariance = c(colnames(dat), 'free_mean', 'free_var')) #>  coef(pooled_mod, simplify=TRUE) #> $D1 #> $items #>            a1      d g u #> Item_1  1.440  0.358 0 1 #> Item_2  1.136 -0.590 0 1 #> Item_3  0.996 -0.237 0 1 #> Item_4  0.902  0.921 0 1 #> Item_5  1.060  0.153 0 1 #> Item_6  0.440  0.637 0 1 #> Item_7  1.170  1.023 0 1 #> Item_8  0.904 -0.353 0 1 #> Item_9  0.875 -0.978 0 1 #> Item_10 0.665 -1.120 0 1 #> Item_11 0.939  1.243 0 1 #> Item_12 1.336 -0.194 0 1 #> Item_13 1.249  0.481 0 1 #> Item_14 1.050  0.444 0 1 #> Item_15 0.778 -0.064 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  #>  #> $D2 #> $items #>            a1      d g u #> Item_1  1.440  0.358 0 1 #> Item_2  1.136 -0.590 0 1 #> Item_3  0.996 -0.237 0 1 #> Item_4  0.902  0.921 0 1 #> Item_5  1.060  0.153 0 1 #> Item_6  0.440  0.637 0 1 #> Item_7  1.170  1.023 0 1 #> Item_8  0.904 -0.353 0 1 #> Item_9  0.875 -0.978 0 1 #> Item_10 0.665 -1.120 0 1 #> Item_11 0.939  1.243 0 1 #> Item_12 1.336 -0.194 0 1 #> Item_13 1.249  0.481 0 1 #> Item_14 1.050  0.444 0 1 #> Item_15 0.778 -0.064 0 1 #>  #> $means #>    F1  #> -0.08  #>  #> $cov #>       F1 #> F1 1.167 #>  #>   RMSD_DIF(pooled_mod) #>  #>  #> $D1 #>           P.0   P.1 #> Item_1  0.056 0.056 #> Item_2  0.018 0.018 #> Item_3  0.014 0.014 #> Item_4  0.019 0.019 #> Item_5  0.010 0.010 #> Item_6  0.021 0.021 #> Item_7  0.016 0.016 #> Item_8  0.017 0.017 #> Item_9  0.019 0.019 #> Item_10 0.018 0.018 #> Item_11 0.013 0.013 #> Item_12 0.014 0.014 #> Item_13 0.018 0.018 #> Item_14 0.009 0.009 #> Item_15 0.011 0.011 #>  #> $D2 #>           P.0   P.1 #> Item_1  0.053 0.053 #> Item_2  0.021 0.021 #> Item_3  0.013 0.013 #> Item_4  0.016 0.016 #> Item_5  0.008 0.008 #> Item_6  0.022 0.022 #> Item_7  0.017 0.017 #> Item_8  0.016 0.016 #> Item_9  0.017 0.017 #> Item_10 0.014 0.014 #> Item_11 0.021 0.021 #> Item_12 0.013 0.013 #> Item_13 0.011 0.011 #> Item_14 0.004 0.004 #> Item_15 0.014 0.014 #>  RMSD_DIF(pooled_mod, dentype = 'empirical') #>  #>  #> $D1 #>           P.0   P.1 #> Item_1  0.056 0.056 #> Item_2  0.018 0.018 #> Item_3  0.014 0.014 #> Item_4  0.019 0.019 #> Item_5  0.010 0.010 #> Item_6  0.021 0.021 #> Item_7  0.016 0.016 #> Item_8  0.017 0.017 #> Item_9  0.019 0.019 #> Item_10 0.018 0.018 #> Item_11 0.013 0.013 #> Item_12 0.014 0.014 #> Item_13 0.018 0.018 #> Item_14 0.009 0.009 #> Item_15 0.011 0.011 #>  #> $D2 #>           P.0   P.1 #> Item_1  0.052 0.052 #> Item_2  0.021 0.021 #> Item_3  0.013 0.013 #> Item_4  0.016 0.016 #> Item_5  0.009 0.009 #> Item_6  0.022 0.022 #> Item_7  0.017 0.017 #> Item_8  0.016 0.016 #> Item_9  0.017 0.017 #> Item_10 0.014 0.014 #> Item_11 0.021 0.021 #> Item_12 0.013 0.013 #> Item_13 0.011 0.011 #> Item_14 0.004 0.004 #> Item_15 0.014 0.014 #>  RMSD_DIF(pooled_mod, flag = .03) #>  #>  #> $D1 #>           P.0   P.1 #> Item_1  0.056 0.056 #> Item_2     NA    NA #> Item_3     NA    NA #> Item_4     NA    NA #> Item_5     NA    NA #> Item_6     NA    NA #> Item_7     NA    NA #> Item_8     NA    NA #> Item_9     NA    NA #> Item_10    NA    NA #> Item_11    NA    NA #> Item_12    NA    NA #> Item_13    NA    NA #> Item_14    NA    NA #> Item_15    NA    NA #>  #> $D2 #>           P.0   P.1 #> Item_1  0.053 0.053 #> Item_2     NA    NA #> Item_3     NA    NA #> Item_4     NA    NA #> Item_5     NA    NA #> Item_6     NA    NA #> Item_7     NA    NA #> Item_8     NA    NA #> Item_9     NA    NA #> Item_10    NA    NA #> Item_11    NA    NA #> Item_12    NA    NA #> Item_13    NA    NA #> Item_14    NA    NA #> Item_15    NA    NA #>   # more freely estimated model (item 1 has 2 parameters estimated) MGmod <- multipleGroup(dat, 1, group=group,                        invariance = c(colnames(dat)[-1], 'free_mean', 'free_var')) #>  coef(MGmod, simplify=TRUE) #> $D1 #> $items #>            a1      d g u #> Item_1  1.071  0.525 0 1 #> Item_2  1.178 -0.615 0 1 #> Item_3  1.031 -0.258 0 1 #> Item_4  0.933  0.902 0 1 #> Item_5  1.099  0.130 0 1 #> Item_6  0.455  0.627 0 1 #> Item_7  1.217  1.001 0 1 #> Item_8  0.926 -0.372 0 1 #> Item_9  0.905 -0.997 0 1 #> Item_10 0.692 -1.136 0 1 #> Item_11 0.967  1.222 0 1 #> Item_12 1.373 -0.222 0 1 #> Item_13 1.302  0.456 0 1 #> Item_14 1.079  0.421 0 1 #> Item_15 0.804 -0.080 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  #>  #> $D2 #> $items #>            a1      d g u #> Item_1  2.100  0.083 0 1 #> Item_2  1.178 -0.615 0 1 #> Item_3  1.031 -0.258 0 1 #> Item_4  0.933  0.902 0 1 #> Item_5  1.099  0.130 0 1 #> Item_6  0.455  0.627 0 1 #> Item_7  1.217  1.001 0 1 #> Item_8  0.926 -0.372 0 1 #> Item_9  0.905 -0.997 0 1 #> Item_10 0.692 -1.136 0 1 #> Item_11 0.967  1.222 0 1 #> Item_12 1.373 -0.222 0 1 #> Item_13 1.302  0.456 0 1 #> Item_14 1.079  0.421 0 1 #> Item_15 0.804 -0.080 0 1 #>  #> $means #>     F1  #> -0.036  #>  #> $cov #>       F1 #> F1 1.033 #>  #>   # RMSD in item.1 now reduced (MG model accounts for DIF) RMSD_DIF(MGmod) #>  #>  #> $D1 #>           P.0   P.1 #> Item_1  0.007 0.007 #> Item_2  0.015 0.015 #> Item_3  0.017 0.017 #> Item_4  0.015 0.015 #> Item_5  0.009 0.009 #> Item_6  0.020 0.020 #> Item_7  0.010 0.010 #> Item_8  0.020 0.020 #> Item_9  0.017 0.017 #> Item_10 0.018 0.018 #> Item_11 0.017 0.017 #> Item_12 0.010 0.010 #> Item_13 0.017 0.017 #> Item_14 0.013 0.013 #> Item_15 0.011 0.011 #>  #> $D2 #>           P.0   P.1 #> Item_1  0.005 0.005 #> Item_2  0.020 0.020 #> Item_3  0.018 0.018 #> Item_4  0.011 0.011 #> Item_5  0.007 0.007 #> Item_6  0.022 0.022 #> Item_7  0.011 0.011 #> Item_8  0.017 0.017 #> Item_9  0.016 0.016 #> Item_10 0.016 0.016 #> Item_11 0.022 0.022 #> Item_12 0.008 0.008 #> Item_13 0.006 0.006 #> Item_14 0.009 0.009 #> Item_15 0.014 0.014 #>  RMSD_DIF(MGmod, flag = .03) #>  #>  #> $D1 #>         P.0 P.1 #> Item_1   NA  NA #> Item_2   NA  NA #> Item_3   NA  NA #> Item_4   NA  NA #> Item_5   NA  NA #> Item_6   NA  NA #> Item_7   NA  NA #> Item_8   NA  NA #> Item_9   NA  NA #> Item_10  NA  NA #> Item_11  NA  NA #> Item_12  NA  NA #> Item_13  NA  NA #> Item_14  NA  NA #> Item_15  NA  NA #>  #> $D2 #>         P.0 P.1 #> Item_1   NA  NA #> Item_2   NA  NA #> Item_3   NA  NA #> Item_4   NA  NA #> Item_5   NA  NA #> Item_6   NA  NA #> Item_7   NA  NA #> Item_8   NA  NA #> Item_9   NA  NA #> Item_10  NA  NA #> Item_11  NA  NA #> Item_12  NA  NA #> Item_13  NA  NA #> Item_14  NA  NA #> Item_15  NA  NA #>   ################# # NA placeholders included when groups do not respond to specific items  a1 <- a2 <- rlnorm(20) d <- d2 <- rnorm(20) # item 5 contains DIF a2[5] <- a1[5] + 1 d2[5] <- d[5] - 1/2 g <- rbeta(20, 5, 17)  dat1 <- simdata(a1, d, guess = g, N=1000, itemtype = '3PL') dat1[, 11:13] <- NA  # items 11:13 items NA for g1 dat2 <- simdata(a2, d2, guess = g, N=1000, itemtype = '3PL',    mu=1/4, sigma=matrix(.75)) dat2[,1:3] <- NA # items 1:3 items NA for g2 dat <- rbind(dat1, dat2) group <- c(rep('g1', 1000), rep('g2', 1000))  mod <- multipleGroup(dat, \"Theta = 1-20                             PRIOR = (1-20, g, norm, -1, 0.5)\",                      group=group, itemtype='3PL',                      invariance = c(colnames(dat), 'free_mean', 'free_var')) #>  coef(mod, simplify = TRUE) #> $g1 #> $items #>             a1      d     g u #> Item_1   0.958  0.962 0.281 1 #> Item_2   0.476 -1.243 0.223 1 #> Item_3   1.459 -1.321 0.331 1 #> Item_4   1.685  0.851 0.227 1 #> Item_5   3.014 -0.148 0.264 1 #> Item_6   0.436 -1.155 0.254 1 #> Item_7   2.134 -2.246 0.145 1 #> Item_8   0.532  0.633 0.262 1 #> Item_9   1.011  0.449 0.258 1 #> Item_10  2.458 -0.681 0.176 1 #> Item_11  1.398 -0.124 0.252 1 #> Item_12  0.180  0.329 0.269 1 #> Item_13  0.809  0.736 0.292 1 #> Item_14  0.674  0.518 0.270 1 #> Item_15  2.931 -1.035 0.280 1 #> Item_16  0.418  0.595 0.256 1 #> Item_17  0.413 -0.241 0.253 1 #> Item_18  2.136  0.899 0.287 1 #> Item_19 -0.208 -2.328 0.277 1 #> Item_20  0.538 -0.132 0.262 1 #>  #> $means #> Theta  #>     0  #>  #> $cov #>       Theta #> Theta     1 #>  #>  #> $g2 #> $items #>             a1      d     g u #> Item_1   0.958  0.962 0.281 1 #> Item_2   0.476 -1.243 0.223 1 #> Item_3   1.459 -1.321 0.331 1 #> Item_4   1.685  0.851 0.227 1 #> Item_5   3.014 -0.148 0.264 1 #> Item_6   0.436 -1.155 0.254 1 #> Item_7   2.134 -2.246 0.145 1 #> Item_8   0.532  0.633 0.262 1 #> Item_9   1.011  0.449 0.258 1 #> Item_10  2.458 -0.681 0.176 1 #> Item_11  1.398 -0.124 0.252 1 #> Item_12  0.180  0.329 0.269 1 #> Item_13  0.809  0.736 0.292 1 #> Item_14  0.674  0.518 0.270 1 #> Item_15  2.931 -1.035 0.280 1 #> Item_16  0.418  0.595 0.256 1 #> Item_17  0.413 -0.241 0.253 1 #> Item_18  2.136  0.899 0.287 1 #> Item_19 -0.208 -2.328 0.277 1 #> Item_20  0.538 -0.132 0.262 1 #>  #> $means #> Theta  #> 0.294  #>  #> $cov #>       Theta #> Theta 0.744 #>  #>   RMSD_DIF(mod) #>  #>  #> $g1 #>           P.0   P.1 #> Item_1  0.004 0.004 #> Item_2  0.020 0.020 #> Item_3  0.009 0.009 #> Item_4  0.014 0.014 #> Item_5  0.028 0.028 #> Item_6  0.018 0.018 #> Item_7  0.019 0.019 #> Item_8  0.017 0.017 #> Item_9  0.016 0.016 #> Item_10 0.006 0.006 #> Item_11    NA    NA #> Item_12    NA    NA #> Item_13    NA    NA #> Item_14 0.009 0.009 #> Item_15 0.013 0.013 #> Item_16 0.020 0.020 #> Item_17 0.023 0.023 #> Item_18 0.004 0.004 #> Item_19 0.027 0.027 #> Item_20 0.009 0.009 #>  #> $g2 #>           P.0   P.1 #> Item_1     NA    NA #> Item_2     NA    NA #> Item_3     NA    NA #> Item_4  0.014 0.014 #> Item_5  0.029 0.029 #> Item_6  0.014 0.014 #> Item_7  0.020 0.020 #> Item_8  0.019 0.019 #> Item_9  0.018 0.018 #> Item_10 0.011 0.011 #> Item_11 0.005 0.005 #> Item_12 0.007 0.007 #> Item_13 0.014 0.014 #> Item_14 0.006 0.006 #> Item_15 0.014 0.014 #> Item_16 0.026 0.026 #> Item_17 0.023 0.023 #> Item_18 0.008 0.008 #> Item_19 0.014 0.014 #> Item_20 0.010 0.010 #>  RMSD_DIF(mod, flag = .03) #>  #>  #> $g1 #>         P.0 P.1 #> Item_1   NA  NA #> Item_2   NA  NA #> Item_3   NA  NA #> Item_4   NA  NA #> Item_5   NA  NA #> Item_6   NA  NA #> Item_7   NA  NA #> Item_8   NA  NA #> Item_9   NA  NA #> Item_10  NA  NA #> Item_11  NA  NA #> Item_12  NA  NA #> Item_13  NA  NA #> Item_14  NA  NA #> Item_15  NA  NA #> Item_16  NA  NA #> Item_17  NA  NA #> Item_18  NA  NA #> Item_19  NA  NA #> Item_20  NA  NA #>  #> $g2 #>         P.0 P.1 #> Item_1   NA  NA #> Item_2   NA  NA #> Item_3   NA  NA #> Item_4   NA  NA #> Item_5   NA  NA #> Item_6   NA  NA #> Item_7   NA  NA #> Item_8   NA  NA #> Item_9   NA  NA #> Item_10  NA  NA #> Item_11  NA  NA #> Item_12  NA  NA #> Item_13  NA  NA #> Item_14  NA  NA #> Item_15  NA  NA #> Item_16  NA  NA #> Item_17  NA  NA #> Item_18  NA  NA #> Item_19  NA  NA #> Item_20  NA  NA #>   ################# # Single group model (GOF only) mod <- mirt(dat) #>  RMSD_DIF(mod) #>  #>           P.0   P.1 #> Item_1  0.019 0.019 #> Item_2  0.014 0.014 #> Item_3  0.027 0.027 #> Item_4  0.009 0.009 #> Item_5  0.013 0.013 #> Item_6  0.004 0.004 #> Item_7  0.011 0.011 #> Item_8  0.005 0.005 #> Item_9  0.016 0.016 #> Item_10 0.013 0.013 #> Item_11 0.005 0.005 #> Item_12 0.014 0.014 #> Item_13 0.024 0.024 #> Item_14 0.006 0.006 #> Item_15 0.019 0.019 #> Item_16 0.010 0.010 #> Item_17 0.005 0.005 #> Item_18 0.013 0.013 #> Item_19 0.013 0.013 #> Item_20 0.003 0.003 RMSD_DIF(mod, probfun=FALSE) #>  #>         S(theta) #> Item_1     0.019 #> Item_2     0.014 #> Item_3     0.027 #> Item_4     0.009 #> Item_5     0.013 #> Item_6     0.004 #> Item_7     0.011 #> Item_8     0.005 #> Item_9     0.016 #> Item_10    0.013 #> Item_11    0.005 #> Item_12    0.014 #> Item_13    0.024 #> Item_14    0.006 #> Item_15    0.019 #> Item_16    0.010 #> Item_17    0.005 #> Item_18    0.013 #> Item_19    0.013 #> Item_20    0.003  # polytomous mod2 <- mirt(Science) #>  RMSD_DIF(mod2) #>  #>           P.1   P.2   P.3   P.4 #> Comfort 0.023 0.019 0.024 0.014 #> Work    0.019 0.014 0.026 0.028 #> Future  0.013 0.012 0.005 0.004 #> Benefit 0.033 0.038 0.026 0.021 RMSD_DIF(mod2, probfun=FALSE) #>  #>         S(theta) #> Comfort    0.042 #> Work       0.057 #> Future     0.015 #> Benefit    0.049  ################# # polytomous DIF example set.seed(12345) a <- a2 <- matrix(rlnorm(20,.2,.3))  # for the graded model, ensure that there is enough space between the intercepts, # otherwise closer categories will not be selected often (minimum distance of 0.3 here) diffs <- t(apply(matrix(runif(20*4, .3, 1), 20), 1, cumsum)) diffs <- -(diffs - rowMeans(diffs)) d <- d2 <- diffs + rnorm(20)  # item 1 has slope + dif for first intercept parameter d2[1] <- d[1] - .5 a2[1] <- a[1] + 1  itemtype <- rep('graded', nrow(a)) N <- 1000 dataset1 <- simdata(a, d, N, itemtype) dataset2 <- simdata(a2, d2, N, itemtype) dat <- rbind(dataset1, dataset2) group <- c(rep('D1', N), rep('D2', N))  #-----  # fully pooled model pooled_mod <- multipleGroup(dat, 1, group=group,          invariance = c(colnames(dat), 'free_mean', 'free_var')) #>  coef(pooled_mod, simplify=TRUE) #> $D1 #> $items #>            a1     d1     d2     d3     d4 #> Item_1  1.708  1.205  0.527 -0.453 -0.948 #> Item_2  1.517 -0.518 -0.992 -1.653 -2.434 #> Item_3  1.187  1.757  0.681  0.375 -0.638 #> Item_4  1.167  2.719  1.868  1.539  0.808 #> Item_5  1.410  0.485 -0.466 -0.867 -1.581 #> Item_6  0.683 -0.984 -1.396 -1.940 -2.910 #> Item_7  1.387  2.128  1.234  0.341 -0.386 #> Item_8  0.985  2.332  1.994  1.374  0.440 #> Item_9  1.043  1.597  0.850  0.024 -0.373 #> Item_10 0.906 -0.284 -1.281 -1.573 -2.038 #> Item_11 1.128  1.269  0.470 -0.460 -1.184 #> Item_12 2.016  0.268 -0.318 -1.128 -1.716 #> Item_13 1.356 -0.202 -0.835 -1.233 -2.016 #> Item_14 1.261  3.169  2.582  1.916  1.334 #> Item_15 0.928  2.307  1.957  1.151  0.268 #> Item_16 1.479  2.080  1.345  0.682 -0.305 #> Item_17 0.815  2.163  1.208  0.410 -0.557 #> Item_18 1.113  0.333 -0.481 -1.357 -2.072 #> Item_19 1.604  1.256  0.584  0.240 -0.145 #> Item_20 1.333  1.876  1.439  0.858  0.241 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  #>  #> $D2 #> $items #>            a1     d1     d2     d3     d4 #> Item_1  1.708  1.205  0.527 -0.453 -0.948 #> Item_2  1.517 -0.518 -0.992 -1.653 -2.434 #> Item_3  1.187  1.757  0.681  0.375 -0.638 #> Item_4  1.167  2.719  1.868  1.539  0.808 #> Item_5  1.410  0.485 -0.466 -0.867 -1.581 #> Item_6  0.683 -0.984 -1.396 -1.940 -2.910 #> Item_7  1.387  2.128  1.234  0.341 -0.386 #> Item_8  0.985  2.332  1.994  1.374  0.440 #> Item_9  1.043  1.597  0.850  0.024 -0.373 #> Item_10 0.906 -0.284 -1.281 -1.573 -2.038 #> Item_11 1.128  1.269  0.470 -0.460 -1.184 #> Item_12 2.016  0.268 -0.318 -1.128 -1.716 #> Item_13 1.356 -0.202 -0.835 -1.233 -2.016 #> Item_14 1.261  3.169  2.582  1.916  1.334 #> Item_15 0.928  2.307  1.957  1.151  0.268 #> Item_16 1.479  2.080  1.345  0.682 -0.305 #> Item_17 0.815  2.163  1.208  0.410 -0.557 #> Item_18 1.113  0.333 -0.481 -1.357 -2.072 #> Item_19 1.604  1.256  0.584  0.240 -0.145 #> Item_20 1.333  1.876  1.439  0.858  0.241 #>  #> $means #>     F1  #> -0.022  #>  #> $cov #>       F1 #> F1 1.182 #>  #>   # Item_1 fits poorly in several categories (RMSD > .05) RMSD_DIF(pooled_mod) #>  #>  #> $D1 #>           P.1   P.2   P.3   P.4   P.5 #> Item_1  0.088 0.057 0.024 0.023 0.037 #> Item_2  0.014 0.008 0.010 0.011 0.012 #> Item_3  0.019 0.019 0.015 0.017 0.027 #> Item_4  0.024 0.010 0.010 0.014 0.028 #> Item_5  0.030 0.017 0.006 0.023 0.021 #> Item_6  0.010 0.015 0.015 0.019 0.016 #> Item_7  0.016 0.015 0.020 0.015 0.019 #> Item_8  0.014 0.008 0.012 0.021 0.022 #> Item_9  0.019 0.031 0.022 0.014 0.028 #> Item_10 0.025 0.015 0.010 0.011 0.032 #> Item_11 0.012 0.017 0.015 0.011 0.015 #> Item_12 0.013 0.011 0.021 0.013 0.018 #> Item_13 0.023 0.013 0.018 0.021 0.014 #> Item_14 0.009 0.011 0.005 0.022 0.029 #> Item_15 0.015 0.011 0.016 0.010 0.028 #> Item_16 0.016 0.025 0.020 0.022 0.012 #> Item_17 0.025 0.015 0.020 0.023 0.031 #> Item_18 0.016 0.015 0.017 0.016 0.023 #> Item_19 0.019 0.022 0.016 0.013 0.013 #> Item_20 0.033 0.011 0.012 0.012 0.025 #>  #> $D2 #>           P.1   P.2   P.3   P.4   P.5 #> Item_1  0.101 0.059 0.036 0.018 0.040 #> Item_2  0.007 0.013 0.005 0.012 0.011 #> Item_3  0.035 0.028 0.017 0.030 0.016 #> Item_4  0.011 0.020 0.012 0.011 0.027 #> Item_5  0.017 0.017 0.010 0.013 0.016 #> Item_6  0.026 0.011 0.007 0.016 0.014 #> Item_7  0.017 0.013 0.017 0.019 0.020 #> Item_8  0.021 0.016 0.016 0.017 0.030 #> Item_9  0.019 0.016 0.014 0.015 0.020 #> Item_10 0.020 0.014 0.014 0.018 0.028 #> Item_11 0.018 0.021 0.017 0.013 0.019 #> Item_12 0.013 0.010 0.022 0.007 0.015 #> Item_13 0.018 0.013 0.013 0.012 0.017 #> Item_14 0.026 0.007 0.023 0.012 0.008 #> Item_15 0.019 0.010 0.014 0.017 0.023 #> Item_16 0.015 0.019 0.019 0.018 0.013 #> Item_17 0.017 0.018 0.028 0.024 0.012 #> Item_18 0.024 0.022 0.025 0.017 0.028 #> Item_19 0.027 0.017 0.014 0.009 0.024 #> Item_20 0.025 0.013 0.014 0.011 0.018 #>  RMSD_DIF(pooled_mod, flag = .05) #>  #>  #> $D1 #>           P.1   P.2 P.3 P.4 P.5 #> Item_1  0.088 0.057  NA  NA  NA #> Item_2     NA    NA  NA  NA  NA #> Item_3     NA    NA  NA  NA  NA #> Item_4     NA    NA  NA  NA  NA #> Item_5     NA    NA  NA  NA  NA #> Item_6     NA    NA  NA  NA  NA #> Item_7     NA    NA  NA  NA  NA #> Item_8     NA    NA  NA  NA  NA #> Item_9     NA    NA  NA  NA  NA #> Item_10    NA    NA  NA  NA  NA #> Item_11    NA    NA  NA  NA  NA #> Item_12    NA    NA  NA  NA  NA #> Item_13    NA    NA  NA  NA  NA #> Item_14    NA    NA  NA  NA  NA #> Item_15    NA    NA  NA  NA  NA #> Item_16    NA    NA  NA  NA  NA #> Item_17    NA    NA  NA  NA  NA #> Item_18    NA    NA  NA  NA  NA #> Item_19    NA    NA  NA  NA  NA #> Item_20    NA    NA  NA  NA  NA #>  #> $D2 #>           P.1   P.2 P.3 P.4 P.5 #> Item_1  0.101 0.059  NA  NA  NA #> Item_2     NA    NA  NA  NA  NA #> Item_3     NA    NA  NA  NA  NA #> Item_4     NA    NA  NA  NA  NA #> Item_5     NA    NA  NA  NA  NA #> Item_6     NA    NA  NA  NA  NA #> Item_7     NA    NA  NA  NA  NA #> Item_8     NA    NA  NA  NA  NA #> Item_9     NA    NA  NA  NA  NA #> Item_10    NA    NA  NA  NA  NA #> Item_11    NA    NA  NA  NA  NA #> Item_12    NA    NA  NA  NA  NA #> Item_13    NA    NA  NA  NA  NA #> Item_14    NA    NA  NA  NA  NA #> Item_15    NA    NA  NA  NA  NA #> Item_16    NA    NA  NA  NA  NA #> Item_17    NA    NA  NA  NA  NA #> Item_18    NA    NA  NA  NA  NA #> Item_19    NA    NA  NA  NA  NA #> Item_20    NA    NA  NA  NA  NA #>  RMSD_DIF(pooled_mod, flag = .1, probfun = FALSE) # use expected score function #>  #>  #> $D1 #>         S(theta) #> Item_1     0.184 #> Item_2        NA #> Item_3        NA #> Item_4     0.106 #> Item_5        NA #> Item_6        NA #> Item_7        NA #> Item_8        NA #> Item_9        NA #> Item_10       NA #> Item_11       NA #> Item_12       NA #> Item_13       NA #> Item_14       NA #> Item_15       NA #> Item_16       NA #> Item_17    0.101 #> Item_18       NA #> Item_19       NA #> Item_20    0.102 #>  #> $D2 #>         S(theta) #> Item_1     0.211 #> Item_2        NA #> Item_3        NA #> Item_4        NA #> Item_5        NA #> Item_6        NA #> Item_7        NA #> Item_8        NA #> Item_9        NA #> Item_10       NA #> Item_11       NA #> Item_12       NA #> Item_13       NA #> Item_14       NA #> Item_15       NA #> Item_16       NA #> Item_17       NA #> Item_18       NA #> Item_19       NA #> Item_20       NA #>   # more freely estimated model (item 1 has more parameters estimated) MGmod <- multipleGroup(dat, 1, group=group,                        invariance = c(colnames(dat)[-1], 'free_mean', 'free_var')) #>  coef(MGmod, simplify=TRUE) #> $D1 #> $items #>            a1     d1     d2     d3     d4 #> Item_1  1.293  1.471  0.527 -0.408 -0.925 #> Item_2  1.553 -0.527 -1.000 -1.659 -2.439 #> Item_3  1.226  1.754  0.675  0.368 -0.647 #> Item_4  1.201  2.716  1.864  1.535  0.802 #> Item_5  1.447  0.476 -0.475 -0.876 -1.590 #> Item_6  0.702 -0.989 -1.400 -1.944 -2.915 #> Item_7  1.426  2.122  1.227  0.333 -0.395 #> Item_8  1.009  2.325  1.987  1.368  0.433 #> Item_9  1.076  1.593  0.846  0.018 -0.380 #> Item_10 0.936 -0.290 -1.289 -1.581 -2.047 #> Item_11 1.157  1.261  0.463 -0.467 -1.191 #> Item_12 2.070  0.255 -0.331 -1.141 -1.728 #> Item_13 1.392 -0.211 -0.844 -1.242 -2.025 #> Item_14 1.290  3.158  2.571  1.906  1.324 #> Item_15 0.952  2.301  1.951  1.145  0.262 #> Item_16 1.516  2.070  1.334  0.671 -0.314 #> Item_17 0.835  2.158  1.202  0.405 -0.562 #> Item_18 1.141  0.326 -0.487 -1.363 -2.078 #> Item_19 1.643  1.245  0.573  0.230 -0.155 #> Item_20 1.371  1.869  1.432  0.851  0.234 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  #>  #> $D2 #> $items #>            a1     d1     d2     d3     d4 #> Item_1  2.523  0.906  0.520 -0.587 -1.079 #> Item_2  1.553 -0.527 -1.000 -1.659 -2.439 #> Item_3  1.226  1.754  0.675  0.368 -0.647 #> Item_4  1.201  2.716  1.864  1.535  0.802 #> Item_5  1.447  0.476 -0.475 -0.876 -1.590 #> Item_6  0.702 -0.989 -1.400 -1.944 -2.915 #> Item_7  1.426  2.122  1.227  0.333 -0.395 #> Item_8  1.009  2.325  1.987  1.368  0.433 #> Item_9  1.076  1.593  0.846  0.018 -0.380 #> Item_10 0.936 -0.290 -1.289 -1.581 -2.047 #> Item_11 1.157  1.261  0.463 -0.467 -1.191 #> Item_12 2.070  0.255 -0.331 -1.141 -1.728 #> Item_13 1.392 -0.211 -0.844 -1.242 -2.025 #> Item_14 1.290  3.158  2.571  1.906  1.324 #> Item_15 0.952  2.301  1.951  1.145  0.262 #> Item_16 1.516  2.070  1.334  0.671 -0.314 #> Item_17 0.835  2.158  1.202  0.405 -0.562 #> Item_18 1.141  0.326 -0.487 -1.363 -2.078 #> Item_19 1.643  1.245  0.573  0.230 -0.155 #> Item_20 1.371  1.869  1.432  0.851  0.234 #>  #> $means #>     F1  #> -0.009  #>  #> $cov #>       F1 #> F1 1.071 #>  #>   # RMSDs in Item_1 now reduced (MG model better accounts for DIF) RMSD_DIF(MGmod) #>  #>  #> $D1 #>           P.1   P.2   P.3   P.4   P.5 #> Item_1  0.007 0.019 0.017 0.016 0.010 #> Item_2  0.016 0.009 0.009 0.011 0.015 #> Item_3  0.016 0.018 0.014 0.018 0.025 #> Item_4  0.021 0.010 0.010 0.014 0.022 #> Item_5  0.028 0.017 0.007 0.022 0.022 #> Item_6  0.009 0.016 0.015 0.018 0.015 #> Item_7  0.016 0.013 0.021 0.015 0.018 #> Item_8  0.012 0.008 0.012 0.022 0.021 #> Item_9  0.016 0.029 0.023 0.014 0.025 #> Item_10 0.023 0.015 0.010 0.011 0.031 #> Item_11 0.016 0.018 0.015 0.011 0.015 #> Item_12 0.010 0.010 0.022 0.012 0.020 #> Item_13 0.019 0.011 0.017 0.021 0.016 #> Item_14 0.012 0.010 0.005 0.023 0.032 #> Item_15 0.015 0.011 0.016 0.011 0.028 #> Item_16 0.013 0.024 0.020 0.022 0.015 #> Item_17 0.024 0.015 0.019 0.024 0.030 #> Item_18 0.019 0.016 0.017 0.016 0.020 #> Item_19 0.021 0.022 0.016 0.013 0.013 #> Item_20 0.029 0.011 0.012 0.012 0.022 #>  #> $D2 #>           P.1   P.2   P.3   P.4   P.5 #> Item_1  0.026 0.003 0.019 0.007 0.010 #> Item_2  0.008 0.013 0.004 0.012 0.014 #> Item_3  0.032 0.027 0.016 0.031 0.014 #> Item_4  0.009 0.019 0.011 0.011 0.023 #> Item_5  0.021 0.017 0.010 0.014 0.017 #> Item_6  0.026 0.012 0.007 0.016 0.014 #> Item_7  0.020 0.013 0.019 0.018 0.018 #> Item_8  0.021 0.015 0.017 0.017 0.026 #> Item_9  0.017 0.015 0.015 0.015 0.019 #> Item_10 0.018 0.014 0.014 0.018 0.027 #> Item_11 0.020 0.021 0.017 0.013 0.017 #> Item_12 0.010 0.010 0.022 0.007 0.017 #> Item_13 0.015 0.012 0.013 0.013 0.014 #> Item_14 0.028 0.007 0.022 0.013 0.009 #> Item_15 0.018 0.010 0.015 0.017 0.024 #> Item_16 0.014 0.019 0.018 0.017 0.016 #> Item_17 0.017 0.017 0.028 0.025 0.013 #> Item_18 0.029 0.022 0.025 0.019 0.025 #> Item_19 0.027 0.016 0.015 0.010 0.024 #> Item_20 0.019 0.013 0.014 0.012 0.014 #>  RMSD_DIF(MGmod, flag = .05) #>  #>  #> $D1 #>         P.1 P.2 P.3 P.4 P.5 #> Item_1   NA  NA  NA  NA  NA #> Item_2   NA  NA  NA  NA  NA #> Item_3   NA  NA  NA  NA  NA #> Item_4   NA  NA  NA  NA  NA #> Item_5   NA  NA  NA  NA  NA #> Item_6   NA  NA  NA  NA  NA #> Item_7   NA  NA  NA  NA  NA #> Item_8   NA  NA  NA  NA  NA #> Item_9   NA  NA  NA  NA  NA #> Item_10  NA  NA  NA  NA  NA #> Item_11  NA  NA  NA  NA  NA #> Item_12  NA  NA  NA  NA  NA #> Item_13  NA  NA  NA  NA  NA #> Item_14  NA  NA  NA  NA  NA #> Item_15  NA  NA  NA  NA  NA #> Item_16  NA  NA  NA  NA  NA #> Item_17  NA  NA  NA  NA  NA #> Item_18  NA  NA  NA  NA  NA #> Item_19  NA  NA  NA  NA  NA #> Item_20  NA  NA  NA  NA  NA #>  #> $D2 #>         P.1 P.2 P.3 P.4 P.5 #> Item_1   NA  NA  NA  NA  NA #> Item_2   NA  NA  NA  NA  NA #> Item_3   NA  NA  NA  NA  NA #> Item_4   NA  NA  NA  NA  NA #> Item_5   NA  NA  NA  NA  NA #> Item_6   NA  NA  NA  NA  NA #> Item_7   NA  NA  NA  NA  NA #> Item_8   NA  NA  NA  NA  NA #> Item_9   NA  NA  NA  NA  NA #> Item_10  NA  NA  NA  NA  NA #> Item_11  NA  NA  NA  NA  NA #> Item_12  NA  NA  NA  NA  NA #> Item_13  NA  NA  NA  NA  NA #> Item_14  NA  NA  NA  NA  NA #> Item_15  NA  NA  NA  NA  NA #> Item_16  NA  NA  NA  NA  NA #> Item_17  NA  NA  NA  NA  NA #> Item_18  NA  NA  NA  NA  NA #> Item_19  NA  NA  NA  NA  NA #> Item_20  NA  NA  NA  NA  NA #>  RMSD_DIF(MGmod, probfun = FALSE, flag = .1) # use expected score function #>  #>  #> $D1 #>         S(theta) #> Item_1        NA #> Item_2        NA #> Item_3        NA #> Item_4        NA #> Item_5        NA #> Item_6        NA #> Item_7        NA #> Item_8        NA #> Item_9        NA #> Item_10       NA #> Item_11       NA #> Item_12       NA #> Item_13       NA #> Item_14       NA #> Item_15       NA #> Item_16       NA #> Item_17    0.104 #> Item_18       NA #> Item_19       NA #> Item_20       NA #>  #> $D2 #>         S(theta) #> Item_1        NA #> Item_2        NA #> Item_3        NA #> Item_4        NA #> Item_5        NA #> Item_6        NA #> Item_7        NA #> Item_8        NA #> Item_9        NA #> Item_10       NA #> Item_11       NA #> Item_12       NA #> Item_13       NA #> Item_14       NA #> Item_15       NA #> Item_16       NA #> Item_17       NA #> Item_18       NA #> Item_19       NA #> Item_20       NA #>   # }"},{"path":"https://philchalmers.github.io/mirt/reference/SAT12.html","id":null,"dir":"Reference","previous_headings":"","what":"Description of SAT12 data — SAT12","title":"Description of SAT12 data — SAT12","text":"Data obtained TESTFACT (Woods et al., 2003) manual, 32 response pattern scored items grade 12 science assessment test (SAT) measuring topics chemistry, biology, physics. scoring key data [1, 4, 5, 2, 3, 1, 2, 1, 3, 1, 2, 4, 2, 1, 5, 3, 4, 4, 1, 4, 3, 3, 4, 1, 3, 5, 1, 3, 1, 5, 4, 5], respectively. However, careful analysis using nominal response model suggests scoring key item 32 may incorrect, changed 5 3.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/SAT12.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Description of SAT12 data — SAT12","text":"Wood, R., Wilson, D. T., Gibbons, R. D., Schilling, S. G., Muraki, E., & Bock, R. D. (2003). TESTFACT 4 Windows: Test Scoring, Item Statistics, Full-information Item Factor Analysis [Computer software]. Lincolnwood, IL: Scientific Software International.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/SAT12.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Description of SAT12 data — SAT12","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/SAT12.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Description of SAT12 data — SAT12","text":"","code":"# \\donttest{  itemstats(SAT12, use_ts = FALSE) #> $overall #>     N #> 1 600 #>  #> $itemstats #>           N K  mean    sd #> Item.1  600 6 2.497 1.188 #> Item.2  600 6 3.385 1.356 #> Item.3  600 6 3.212 1.534 #> Item.4  600 6 2.762 1.370 #> Item.5  600 6 2.868 0.911 #> Item.6  600 5 2.358 1.135 #> Item.7  600 6 2.422 0.908 #> Item.8  600 6 2.925 1.370 #> Item.9  600 5 2.907 0.567 #> Item.10 600 6 2.320 1.490 #> Item.11 600 5 2.017 0.199 #> Item.12 600 6 3.642 1.184 #> Item.13 600 5 2.317 0.956 #> Item.14 600 6 1.798 1.432 #> Item.15 600 6 4.535 1.087 #> Item.16 600 6 3.368 1.135 #> Item.17 600 5 3.968 0.343 #> Item.18 600 6 3.020 1.514 #> Item.19 600 5 1.900 1.053 #> Item.20 600 6 3.870 0.483 #> Item.21 600 6 2.937 0.554 #> Item.22 600 5 2.985 0.442 #> Item.23 600 6 2.755 1.437 #> Item.24 600 6 1.502 1.037 #> Item.25 600 6 2.740 1.380 #> Item.26 600 6 3.923 1.265 #> Item.27 600 6 1.240 0.766 #> Item.28 600 6 3.262 0.937 #> Item.29 600 6 2.285 1.306 #> Item.30 600 6 3.703 1.553 #> Item.31 600 6 3.788 0.899 #> Item.32 600 6 3.023 1.303 #>  #> $proportions #>             1     2     3     4     5     8 #> Item.1  0.283 0.203 0.267 0.232 0.013 0.002 #> Item.2  0.212 0.022 0.070 0.568 0.127 0.002 #> Item.3  0.165 0.183 0.260 0.098 0.280 0.013 #> Item.4  0.165 0.378 0.148 0.172 0.128 0.008 #> Item.5  0.093 0.143 0.620 0.093 0.048 0.002 #> Item.6  0.160 0.582 0.107 0.043 0.108    NA #> Item.7  0.025 0.760 0.007 0.190 0.017 0.002 #> Item.8  0.202 0.205 0.207 0.250 0.133 0.003 #> Item.9  0.065 0.010 0.885 0.033 0.007    NA #> Item.10 0.422 0.215 0.165 0.028 0.167 0.003 #> Item.11 0.003 0.983 0.008 0.003 0.002    NA #> Item.12 0.072 0.082 0.218 0.415 0.205 0.008 #> Item.13 0.110 0.662 0.070 0.118 0.040    NA #> Item.14 0.723 0.027 0.108 0.022 0.117 0.003 #> Item.15 0.035 0.062 0.060 0.025 0.817 0.002 #> Item.16 0.070 0.105 0.413 0.215 0.195 0.002 #> Item.17 0.008 0.005 0.010 0.963 0.013    NA #> Item.18 0.303 0.033 0.165 0.352 0.142 0.005 #> Item.19 0.548 0.053 0.358 0.030 0.010    NA #> Item.20 0.012 0.002 0.105 0.873 0.007 0.002 #> Item.21 0.050 0.008 0.915 0.013 0.012 0.002 #> Item.22 0.028 0.005 0.935 0.017 0.015    NA #> Item.23 0.290 0.177 0.128 0.313 0.087 0.005 #> Item.24 0.728 0.162 0.042 0.022 0.045 0.002 #> Item.25 0.240 0.170 0.375 0.065 0.142 0.008 #> Item.26 0.020 0.227 0.030 0.262 0.460 0.002 #> Item.27 0.862 0.093 0.012 0.020 0.010 0.003 #> Item.28 0.082 0.010 0.530 0.337 0.037 0.005 #> Item.29 0.340 0.295 0.205 0.085 0.067 0.008 #> Item.30 0.150 0.110 0.107 0.183 0.440 0.010 #> Item.31 0.075 0.020 0.012 0.833 0.058 0.002 #> Item.32 0.125 0.183 0.443 0.075 0.162 0.012 #>   # score the data (missing scored as 0) head(SAT12) #>   Item.1 Item.2 Item.3 Item.4 Item.5 Item.6 Item.7 Item.8 Item.9 Item.10 #> 1      1      4      5      2      3      1      2      1      3       1 #> 2      3      4      2      8      3      3      2      8      3       1 #> 3      1      4      5      4      3      2      2      3      3       2 #> 4      2      4      4      2      3      3      2      4      3       2 #> 5      2      4      5      2      3      2      2      1      1       2 #> 6      1      4      3      1      3      2      2      3      3       1 #>   Item.11 Item.12 Item.13 Item.14 Item.15 Item.16 Item.17 Item.18 Item.19 #> 1       2       4       2       1       5       3       4       4       1 #> 2       2       8       2       1       5       2       4       1       1 #> 3       2       1       3       1       5       5       4       1       3 #> 4       2       4       2       1       5       2       4       1       3 #> 5       2       4       2       1       5       4       4       5       1 #> 6       2       3       2       1       5       5       4       4       1 #>   Item.20 Item.21 Item.22 Item.23 Item.24 Item.25 Item.26 Item.27 Item.28 #> 1       4       3       3       4       1       3       5       1       3 #> 2       4       3       3       8       1       8       4       1       4 #> 3       4       3       3       1       1       3       4       1       3 #> 4       4       3       1       5       2       5       4       1       3 #> 5       4       3       3       3       1       1       5       1       3 #> 6       4       3       3       4       1       1       4       1       4 #>   Item.29 Item.30 Item.31 Item.32 #> 1       1       5       4       5 #> 2       5       8       4       8 #> 3       4       4       4       1 #> 4       4       2       4       2 #> 5       1       2       4       1 #> 6       2       3       4       3 dat <- key2binary(SAT12,     key = c(1,4,5,2,3,1,2,1,3,1,2,4,2,1,5,3,4,4,1,4,3,3,4,1,3,5,1,3,1,5,4,5)) head(dat) #>      Item.1 Item.2 Item.3 Item.4 Item.5 Item.6 Item.7 Item.8 Item.9 Item.10 #> [1,]      1      1      1      1      1      1      1      1      1       1 #> [2,]      0      1      0      0      1      0      1      0      1       1 #> [3,]      1      1      1      0      1      0      1      0      1       0 #> [4,]      0      1      0      1      1      0      1      0      1       0 #> [5,]      0      1      1      1      1      0      1      1      0       0 #> [6,]      1      1      0      0      1      0      1      0      1       1 #>      Item.11 Item.12 Item.13 Item.14 Item.15 Item.16 Item.17 Item.18 Item.19 #> [1,]       1       1       1       1       1       1       1       1       1 #> [2,]       1       0       1       1       1       0       1       0       1 #> [3,]       1       0       0       1       1       0       1       0       0 #> [4,]       1       1       1       1       1       0       1       0       0 #> [5,]       1       1       1       1       1       0       1       0       1 #> [6,]       1       0       1       1       1       0       1       1       1 #>      Item.20 Item.21 Item.22 Item.23 Item.24 Item.25 Item.26 Item.27 Item.28 #> [1,]       1       1       1       1       1       1       1       1       1 #> [2,]       1       1       1       0       1       0       0       1       0 #> [3,]       1       1       1       0       1       1       0       1       1 #> [4,]       1       1       0       0       0       0       0       1       1 #> [5,]       1       1       1       0       1       0       1       1       1 #> [6,]       1       1       1       1       1       0       0       1       0 #>      Item.29 Item.30 Item.31 Item.32 #> [1,]       1       1       1       1 #> [2,]       0       0       1       0 #> [3,]       0       0       1       0 #> [4,]       0       0       1       0 #> [5,]       1       0       1       0 #> [6,]       0       0       1       0 itemstats(dat) #> $overall #>    N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  600           18.202          5.054 0.108 0.075 0.798     2.272 #>  #> $itemstats #>           N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item.1  600 2 0.283 0.451   0.380         0.300       0.793 #> Item.2  600 2 0.568 0.496   0.539         0.464       0.785 #> Item.3  600 2 0.280 0.449   0.446         0.371       0.789 #> Item.4  600 2 0.378 0.485   0.325         0.235       0.796 #> Item.5  600 2 0.620 0.486   0.424         0.340       0.791 #> Item.6  600 2 0.160 0.367   0.414         0.351       0.791 #> Item.7  600 2 0.760 0.427   0.366         0.289       0.793 #> Item.8  600 2 0.202 0.402   0.307         0.233       0.795 #> Item.9  600 2 0.885 0.319   0.189         0.127       0.798 #> Item.10 600 2 0.422 0.494   0.465         0.383       0.789 #> Item.11 600 2 0.983 0.128   0.181         0.156       0.797 #> Item.12 600 2 0.415 0.493   0.173         0.076       0.803 #> Item.13 600 2 0.662 0.474   0.438         0.358       0.790 #> Item.14 600 2 0.723 0.448   0.411         0.333       0.791 #> Item.15 600 2 0.817 0.387   0.393         0.325       0.792 #> Item.16 600 2 0.413 0.493   0.367         0.278       0.794 #> Item.17 600 2 0.963 0.188   0.238         0.202       0.796 #> Item.18 600 2 0.352 0.478   0.576         0.508       0.783 #> Item.19 600 2 0.548 0.498   0.401         0.314       0.792 #> Item.20 600 2 0.873 0.333   0.376         0.318       0.792 #> Item.21 600 2 0.915 0.279   0.190         0.136       0.798 #> Item.22 600 2 0.935 0.247   0.284         0.238       0.795 #> Item.23 600 2 0.313 0.464   0.338         0.253       0.795 #> Item.24 600 2 0.728 0.445   0.422         0.346       0.791 #> Item.25 600 2 0.375 0.485   0.383         0.297       0.793 #> Item.26 600 2 0.460 0.499   0.562         0.489       0.783 #> Item.27 600 2 0.862 0.346   0.425         0.367       0.791 #> Item.28 600 2 0.530 0.500   0.465         0.383       0.789 #> Item.29 600 2 0.340 0.474   0.407         0.324       0.791 #> Item.30 600 2 0.440 0.497   0.255         0.159       0.799 #> Item.31 600 2 0.833 0.373   0.479         0.419       0.788 #> Item.32 600 2 0.162 0.368   0.110         0.037       0.802 #>  #> $proportions #>             0     1 #> Item.1  0.717 0.283 #> Item.2  0.432 0.568 #> Item.3  0.720 0.280 #> Item.4  0.622 0.378 #> Item.5  0.380 0.620 #> Item.6  0.840 0.160 #> Item.7  0.240 0.760 #> Item.8  0.798 0.202 #> Item.9  0.115 0.885 #> Item.10 0.578 0.422 #> Item.11 0.017 0.983 #> Item.12 0.585 0.415 #> Item.13 0.338 0.662 #> Item.14 0.277 0.723 #> Item.15 0.183 0.817 #> Item.16 0.587 0.413 #> Item.17 0.037 0.963 #> Item.18 0.648 0.352 #> Item.19 0.452 0.548 #> Item.20 0.127 0.873 #> Item.21 0.085 0.915 #> Item.22 0.065 0.935 #> Item.23 0.687 0.313 #> Item.24 0.272 0.728 #> Item.25 0.625 0.375 #> Item.26 0.540 0.460 #> Item.27 0.138 0.862 #> Item.28 0.470 0.530 #> Item.29 0.660 0.340 #> Item.30 0.560 0.440 #> Item.31 0.167 0.833 #> Item.32 0.838 0.162 #>   # score the data, missing (value of 8) treated as NA SAT12missing <- SAT12 SAT12missing[SAT12missing == 8] <- NA dat <- key2binary(SAT12missing,     key = c(1,4,5,2,3,1,2,1,3,1,2,4,2,1,5,3,4,4,1,4,3,3,4,1,3,5,1,3,1,5,4,5)) head(dat) #>      Item.1 Item.2 Item.3 Item.4 Item.5 Item.6 Item.7 Item.8 Item.9 Item.10 #> [1,]      1      1      1      1      1      1      1      1      1       1 #> [2,]      0      1      0     NA      1      0      1     NA      1       1 #> [3,]      1      1      1      0      1      0      1      0      1       0 #> [4,]      0      1      0      1      1      0      1      0      1       0 #> [5,]      0      1      1      1      1      0      1      1      0       0 #> [6,]      1      1      0      0      1      0      1      0      1       1 #>      Item.11 Item.12 Item.13 Item.14 Item.15 Item.16 Item.17 Item.18 Item.19 #> [1,]       1       1       1       1       1       1       1       1       1 #> [2,]       1      NA       1       1       1       0       1       0       1 #> [3,]       1       0       0       1       1       0       1       0       0 #> [4,]       1       1       1       1       1       0       1       0       0 #> [5,]       1       1       1       1       1       0       1       0       1 #> [6,]       1       0       1       1       1       0       1       1       1 #>      Item.20 Item.21 Item.22 Item.23 Item.24 Item.25 Item.26 Item.27 Item.28 #> [1,]       1       1       1       1       1       1       1       1       1 #> [2,]       1       1       1      NA       1      NA       0       1       0 #> [3,]       1       1       1       0       1       1       0       1       1 #> [4,]       1       1       0       0       0       0       0       1       1 #> [5,]       1       1       1       0       1       0       1       1       1 #> [6,]       1       1       1       1       1       0       0       1       0 #>      Item.29 Item.30 Item.31 Item.32 #> [1,]       1       1       1       1 #> [2,]       0      NA       1      NA #> [3,]       0       0       1       0 #> [4,]       0       0       1       0 #> [5,]       1       0       1       0 #> [6,]       0       0       1       0  # potentially better scoring for item 32 (based on nominal model finding) dat <- key2binary(SAT12,     key = c(1,4,5,2,3,1,2,1,3,1,2,4,2,1,5,3,4,4,1,4,3,3,4,1,3,5,1,3,1,5,4,3)) # }"},{"path":"https://philchalmers.github.io/mirt/reference/SIBTEST.html","id":null,"dir":"Reference","previous_headings":"","what":"(Generalized) Simultaneous Item Bias Test (SIBTEST) — SIBTEST","title":"(Generalized) Simultaneous Item Bias Test (SIBTEST) — SIBTEST","text":"Classical test theory approach detecting unidirectional bidirectional (one crossing location) DIF. family statistics intended unidimensional tests, applies regression-corrected matched-total score approach quantify response bias two groups. Can used DIF, DBF, DTF testing two discrete groups.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/SIBTEST.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Generalized) Simultaneous Item Bias Test (SIBTEST) — SIBTEST","text":"","code":"SIBTEST(   dat,   group,   suspect_set,   match_set,   focal_name = unique(group)[2],   guess_correction = 0,   Jmin = 5,   na.rm = FALSE,   randomize = FALSE,   C = cbind(1, -diag(length(unique(group)) - 1L)),   pairwise = FALSE,   DIF = FALSE,   p.adjust.method = \"none\",   permute = 1000,   pk_focal = FALSE,   correction = TRUE,   remove_cross = FALSE,   details = FALSE,   plot = \"none\",   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/SIBTEST.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Generalized) Simultaneous Item Bias Test (SIBTEST) — SIBTEST","text":"dat integer-based dataset tested, containing dichotomous polytomous responses group (factor) vector indicating group membership length number rows dat suspect_set integer vector indicating items inspect SIBTEST. Including one value perform DIF test, including one perform simultaneous bundle test (DBF); including non-matched items perform DTF. missing, simultaneous test using items listed match_set used (.e., DTF) match_set integer vector indicating items use items matched (.e., contain DIF). analogous 'anchor' items likelihood method locate DIF. missing, items items found suspect_set used focal_name name focal group; e.g., 'focal'. specified one selected automatically using unique(group)[2] guess_correction vector numbers 0 1 indicating much correct items guessing. length ncol(dat) Jmin minimum number observations required splitting data focal reference groups conditioned matched set na.rm logical; remove rows dat missing values? TRUE, rows missing data removed, well corresponding elements group input randomize logical; perform crossing test non-compensatory bias using Li Stout's (1996) permutation approach? Default FALSE, uses ad-hoc mixed degrees freedom method suggested Chalmers (2018) C contrast matrix use pooled testing two groups. Default uses effects coding approach, last group (last column matrix) treated reference group, column associated respective name via unique(group) (.e., first column coefficient unique(group)[1], second column unique(group)[2], ) pairwise logical; perform pairwise comparisons multi-group applications? DIF logical; elements suspect_set treated one time test DIF? Use logical treat items part match_set unless input provided explicitly. Default FALSE allow DBF DTF tests p.adjust.method character input dictating method use p.adjust. studying two groups. Default present p-value adjustments permute number permutations perform randomize = TRUE. Default 1000 pk_focal logical; using group weights focal group instead total sample? Default FALSE per Shealy Stout's recommendation correction logical; apply composite correction difference focal composite scores using true-score regression technique? Default TRUE, reflecting Shealy Stout's linear extrapolation method remove_cross logical; remove subtest information associated approximate crossing location? TRUE reflects CSIBTEST definition Li Stout (1996); FALSE, reflects version CSIBTEST utilized Chalmers (2018). applicable two-group settings (multi-group fixed FALSE) details logical; return data.frame containing details required compute SIBTEST? plot character input indicating type plot construct. Options 'none' (default), 'observed' scaled focal subtest scores matched subtest scores, 'weights' proportion weights used (.e., proportion observations matched score), 'difference' difference scaled focal subtest scores matched subtest scores, 'wdifference' conditional differences multiplied respective weight. Note last plot reflects components used SIBTEST, therefore sum plotted observations equal beta coefficient SIBTEST ... additional plotting arguments passed","code":""},{"path":"https://philchalmers.github.io/mirt/reference/SIBTEST.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Generalized) Simultaneous Item Bias Test (SIBTEST) — SIBTEST","text":"data.frame type object containing SIBTEST results. Note   beta coefficient (G)CSIBTEST reported absolute values   reflect sum respective area information   estimated crossing locations","code":""},{"path":"https://philchalmers.github.io/mirt/reference/SIBTEST.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Generalized) Simultaneous Item Bias Test (SIBTEST) — SIBTEST","text":"SIBTEST similar Mantel-Haenszel approach detecting DIF uses regression correction based KR-20/coefficient alpha reliability index correct observed differences latent trait distributions equal. Function supports standard SIBTEST dichotomous polytomous data (compensatory) supports crossing DIF testing (.e., non-compensatory/non-uniform) using asymptotic sampling distribution version Crossing-SIBTEST (CSIBTEST) statistic described Chalmers (2018) permutation method described Li Stout (1996). function also supports multi-group generalizations (GSIBTEST GCSIBTEST) proposed Chalmers Zheng (2023), users may specify alternative contrast matrices evaluate specific comparisons groups well perform joint hypothesis tests.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/SIBTEST.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"(Generalized) Simultaneous Item Bias Test (SIBTEST) — SIBTEST","text":"Chalmers, R. P. (2018). Improving Crossing-SIBTEST statistic detecting non-uniform DIF. Psychometrika, 83, 2, 376-386. Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06 Chalmers, R. P. & Zheng, G. (2023). Multi-group Generalizations SIBTEST Crossing-SIBTEST. Applied Measurement Education, 36(2), 171-191, doi:10.1080/08957347.2023.2201703 . Chang, H. H., Mazzeo, J. & Roussos, L. (1996). DIF Polytomously Scored Items: Adaptation   SIBTEST Procedure. Journal Educational Measurement, 33, 333-353. Li, H.-H. & Stout, W. (1996). new procedure detection crossing DIF. Psychometrika, 61, 647-677. Shealy, R. & Stout, W. (1993). model-based standardization approach separates true   bias/DIF group ability differences detect test bias/DTF well item bias/DIF.   Psychometrika, 58, 159-194.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/SIBTEST.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"(Generalized) Simultaneous Item Bias Test (SIBTEST) — SIBTEST","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/SIBTEST.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"(Generalized) Simultaneous Item Bias Test (SIBTEST) — SIBTEST","text":"","code":"# \\donttest{  set.seed(1234) n <- 30 N <- 500 a <- matrix(1, n) d <- matrix(rnorm(n), n) group <- c(rep('reference', N), rep('focal', N*2))  ## ------------- # groups completely equal dat1 <- simdata(a, d, N, itemtype = 'dich') dat2 <- simdata(a, d, N*2, itemtype = 'dich') dat <- rbind(dat1, dat2)  # DIF (all other items as anchors) SIBTEST(dat, group, suspect_set = 6) #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST        focal            29             1 -0.014 0.027 0.265  1 0.606 #> CSIBTEST       focal            29             1  0.015    NA 0.331  2 0.848  # Some plots depicting the above tests SIBTEST(dat, group, suspect_set = 6, plot = 'observed')  SIBTEST(dat, group, suspect_set = 6, plot = 'weights')  SIBTEST(dat, group, suspect_set = 6, plot = 'wdifference')   # Include CSIBTEST with randomization method SIBTEST(dat, group, suspect_set = 6, randomize = TRUE) #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST        focal            29             1 -0.014 0.027 0.265  1 0.606 #> CSIBTEST       focal            29             1  0.015 0.027          0.827  # remove crossing-location (identical to Li and Stout 1996 definition of CSIBTEST) SIBTEST(dat, group, suspect_set = 6, randomize = TRUE, remove_cross=TRUE) #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST        focal            29             1 -0.014 0.027 0.265  1 0.606 #> CSIBTEST       focal            29             1  0.016 0.026          0.781  # DIF (specific anchors) SIBTEST(dat, group, match_set = 1:5, suspect_set = 6) #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST        focal             5             1 -0.008 0.028 0.078  1 0.781 #> CSIBTEST       focal             5             1  0.004    NA 0.105  2 0.949 SIBTEST(dat, group, match_set = 1:5, suspect_set = 6, randomize=TRUE) #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST        focal             5             1 -0.008 0.028 0.078  1 0.781 #> CSIBTEST       focal             5             1  0.004 0.028              1  # DBF (all and specific anchors, respectively) SIBTEST(dat, group, suspect_set = 11:30) #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df    p #> SIBTEST        focal            10            20 0.053 0.165 0.102  1 0.75 #> CSIBTEST       focal            10            20 0.053    NA 0.102  1 0.75 SIBTEST(dat, group, match_set = 1:5, suspect_set = 11:30) #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df   p #> SIBTEST        focal             5            20 0.166 0.197 0.708  1 0.4 #> CSIBTEST       focal             5            20 0.166    NA 0.708  1 0.4  # DTF SIBTEST(dat, group, suspect_set = 11:30) #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df    p #> SIBTEST        focal            10            20 0.053 0.165 0.102  1 0.75 #> CSIBTEST       focal            10            20 0.053    NA 0.102  1 0.75 SIBTEST(dat, group, match_set = 1:10) #equivalent #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df    p #> SIBTEST        focal            10            20 0.053 0.165 0.102  1 0.75 #> CSIBTEST       focal            10            20 0.053    NA 0.102  1 0.75  # different hyper pars dat1 <- simdata(a, d, N, itemtype = 'dich') dat2 <- simdata(a, d, N*2, itemtype = 'dich', mu = .5, sigma = matrix(1.5)) dat <- rbind(dat1, dat2) SIBTEST(dat, group, 6:30) #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST        focal             5            25 0.115 0.249 0.214  1 0.644 #> CSIBTEST       focal             5            25 0.419    NA 2.966  2 0.227 SIBTEST(dat, group, 11:30) #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST        focal            10            20 0.098 0.171 0.333  1 0.564 #> CSIBTEST       focal            10            20 0.321    NA 3.603  2 0.165  # DIF testing with anchors 1 through 5 SIBTEST(dat, group, 6, match_set = 1:5) #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST        focal             5             1 0.012 0.027  0.18  1 0.671 #> CSIBTEST       focal             5             1 0.030    NA 1.246  2 0.536 SIBTEST(dat, group, 7, match_set = 1:5) #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST        focal             5             1 -0.011 0.029 0.148  1   0.7 #> CSIBTEST       focal             5             1  0.038    NA 1.764  2 0.414 SIBTEST(dat, group, 8, match_set = 1:5) #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST        focal             5             1 -0.026 0.028 0.824  1 0.364 #> CSIBTEST       focal             5             1  0.026    NA 0.824  1 0.364  # DIF testing with all other items as anchors SIBTEST(dat, group, 6) #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST        focal            29             1 -0.003 0.027 0.012  1 0.913 #> CSIBTEST       focal            29             1  0.014    NA 0.261  2 0.878 SIBTEST(dat, group, 7) #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST        focal            29             1 -0.014 0.028 0.241  1 0.623 #> CSIBTEST       focal            29             1  0.032    NA 1.311  2 0.519 SIBTEST(dat, group, 8) #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST        focal            29             1 -0.045 0.026 2.883  1 0.089 #> CSIBTEST       focal            29             1  0.045    NA 2.883  1 0.089  ## ------------- ## systematic differing slopes and intercepts (clear DTF) dat1 <- simdata(a, d, N, itemtype = 'dich') dat2 <- simdata(a + c(numeric(15), rnorm(n-15, 1, .25)), d + c(numeric(15), rnorm(n-15, 1, 1)),   N*2, itemtype = 'dich') dat <- rbind(dat1, dat2) SIBTEST(dat, group, 6:30) #>          focal_group n_matched_set n_suspect_set   beta    SE     X2 df p #> SIBTEST        focal             5            25 -2.334 0.264 78.065  1 0 #> CSIBTEST       focal             5            25  2.334    NA 78.065  1 0 SIBTEST(dat, group, 11:30) #>          focal_group n_matched_set n_suspect_set   beta    SE      X2 df p #> SIBTEST        focal            10            20 -2.376 0.179 176.396  1 0 #> CSIBTEST       focal            10            20  2.376    NA 176.396  1 0  # Some plots depicting the above tests SIBTEST(dat, group, suspect_set = 11:30, plot = 'observed')  SIBTEST(dat, group, suspect_set = 11:30, plot = 'weights')  SIBTEST(dat, group, suspect_set = 11:30, plot = 'wdifference')   # DIF testing using valid anchors SIBTEST(dat, group, suspect_set = 6, match_set = 1:5) #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST        focal             5             1 -0.013 0.028 0.209  1 0.648 #> CSIBTEST       focal             5             1  0.060    NA 5.276  2 0.071 SIBTEST(dat, group, suspect_set = 7, match_set = 1:5) #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST        focal             5             1 0.011 0.027  0.17  1  0.68 #> CSIBTEST       focal             5             1 0.006    NA 0.173  2 0.917 SIBTEST(dat, group, suspect_set = 30, match_set = 1:5) #>          focal_group n_matched_set n_suspect_set   beta    SE      X2 df p #> SIBTEST        focal             5             1 -0.335 0.026 166.911  1 0 #> CSIBTEST       focal             5             1  0.335    NA 166.911  1 0  # test DIF using specific match_set SIBTEST(dat, group, suspect_set = 6:30, match_set = 1:5, DIF=TRUE) #> $Item_6 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST        focal             5             1 -0.013 0.028 0.209  1 0.648 #> CSIBTEST       focal             5             1  0.060    NA 5.276  2 0.071 #>  #> $Item_7 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST        focal             5             1 0.011 0.027  0.17  1  0.68 #> CSIBTEST       focal             5             1 0.006    NA 0.173  2 0.917 #>  #> $Item_8 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df    p #> SIBTEST        focal             5             1 -0.007 0.028 0.071  1 0.79 #> CSIBTEST       focal             5             1  0.007    NA 0.071  1 0.79 #>  #> $Item_9 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST        focal             5             1 0.004 0.027 0.022  1 0.882 #> CSIBTEST       focal             5             1 0.020    NA 0.562  2 0.755 #>  #> $Item_10 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST        focal             5             1 0.031 0.027 1.309  1 0.253 #> CSIBTEST       focal             5             1 0.018    NA 1.314  2 0.518 #>  #> $Item_11 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST        focal             5             1 0.032 0.028 1.292  1 0.256 #> CSIBTEST       focal             5             1 0.032    NA 1.292  1 0.256 #>  #> $Item_12 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST        focal             5             1 0.018 0.026 0.448  1 0.503 #> CSIBTEST       focal             5             1 0.010    NA 0.457  2 0.796 #>  #> $Item_13 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST        focal             5             1 0.000 0.027     0  1  0.99 #> CSIBTEST       focal             5             1 0.029    NA 1.135  2 0.567 #>  #> $Item_14 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST        focal             5             1 0.004 0.028 0.024  1 0.876 #> CSIBTEST       focal             5             1 0.005    NA 0.032  2 0.984 #>  #> $Item_15 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST        focal             5             1 -0.008 0.027 0.091  1 0.763 #> CSIBTEST       focal             5             1  0.012    NA 1.273  2 0.529 #>  #> $Item_16 #>          focal_group n_matched_set n_suspect_set   beta    SE     X2 df p #> SIBTEST        focal             5             1 -0.194 0.028 48.949  1 0 #> CSIBTEST       focal             5             1  0.194    NA 48.949  1 0 #>  #> $Item_17 #>          focal_group n_matched_set n_suspect_set   beta    SE      X2 df p #> SIBTEST        focal             5             1 -0.381 0.026 207.053  1 0 #> CSIBTEST       focal             5             1  0.381    NA 207.053  1 0 #>  #> $Item_18 #>          focal_group n_matched_set n_suspect_set   beta    SE     X2 df p #> SIBTEST        focal             5             1 -0.122 0.027 20.077  1 0 #> CSIBTEST       focal             5             1  0.122    NA 20.077  1 0 #>  #> $Item_19 #>          focal_group n_matched_set n_suspect_set  beta    SE     X2 df p #> SIBTEST        focal             5             1 0.206 0.025 67.462  1 0 #> CSIBTEST       focal             5             1 0.206    NA 67.462  1 0 #>  #> $Item_20 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST        focal             5             1 0.006 0.018 0.104  1 0.747 #> CSIBTEST       focal             5             1 0.010    NA  0.64  2 0.726 #>  #> $Item_21 #>          focal_group n_matched_set n_suspect_set   beta    SE      X2 df p #> SIBTEST        focal             5             1 -0.288 0.026 120.661  1 0 #> CSIBTEST       focal             5             1  0.288    NA 120.661  1 0 #>  #> $Item_22 #>          focal_group n_matched_set n_suspect_set   beta    SE     X2 df p #> SIBTEST        focal             5             1 -0.259 0.027 89.969  1 0 #> CSIBTEST       focal             5             1  0.259    NA 89.969  1 0 #>  #> $Item_23 #>          focal_group n_matched_set n_suspect_set   beta    SE     X2 df p #> SIBTEST        focal             5             1 -0.235 0.028 72.731  1 0 #> CSIBTEST       focal             5             1  0.235    NA 72.731  1 0 #>  #> $Item_24 #>          focal_group n_matched_set n_suspect_set beta    SE    X2 df     p #> SIBTEST        focal             5             1 0.06 0.027 4.759  1 0.029 #> CSIBTEST       focal             5             1 0.06    NA 4.759  1 0.029 #>  #> $Item_25 #>          focal_group n_matched_set n_suspect_set  beta    SE      X2 df p #> SIBTEST        focal             5             1 -0.38 0.026 209.695  1 0 #> CSIBTEST       focal             5             1  0.38    NA 209.695  1 0 #>  #> $Item_26 #>          focal_group n_matched_set n_suspect_set   beta    SE     X2 df p #> SIBTEST        focal             5             1 -0.196 0.025 60.776  1 0 #> CSIBTEST       focal             5             1  0.196    NA 60.776  1 0 #>  #> $Item_27 #>          focal_group n_matched_set n_suspect_set  beta    SE     X2 df p #> SIBTEST        focal             5             1 0.152 0.027 30.646  1 0 #> CSIBTEST       focal             5             1 0.152    NA 30.646  1 0 #>  #> $Item_28 #>          focal_group n_matched_set n_suspect_set   beta    SE      X2 df p #> SIBTEST        focal             5             1 -0.311 0.026 138.049  1 0 #> CSIBTEST       focal             5             1  0.311    NA 138.049  1 0 #>  #> $Item_29 #>          focal_group n_matched_set n_suspect_set   beta    SE     X2 df p #> SIBTEST        focal             5             1 -0.129 0.027 22.567  1 0 #> CSIBTEST       focal             5             1  0.129    NA 22.567  1 0 #>  #> $Item_30 #>          focal_group n_matched_set n_suspect_set   beta    SE      X2 df p #> SIBTEST        focal             5             1 -0.335 0.026 166.911  1 0 #> CSIBTEST       focal             5             1  0.335    NA 166.911  1 0 #>   # test DIF using all-other-as-anchors method (not typically recommended) SIBTEST(dat, group, suspect_set = 1:30, DIF=TRUE) #> $Item_1 #>          focal_group n_matched_set n_suspect_set  beta    SE     X2 df p #> SIBTEST        focal            29             1 0.127 0.028 20.939  1 0 #> CSIBTEST       focal            29             1 0.127    NA 20.939  1 0 #>  #> $Item_2 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST        focal            29             1 0.048 0.029 2.801  1 0.094 #> CSIBTEST       focal            29             1 0.089    NA 9.376  2 0.009 #>  #> $Item_3 #>          focal_group n_matched_set n_suspect_set  beta    SE   X2 df     p #> SIBTEST        focal            29             1 0.013 0.026 0.25  1 0.617 #> CSIBTEST       focal            29             1 0.013    NA 0.25  1 0.617 #>  #> $Item_4 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST        focal            29             1 0.067 0.023 8.472  1 0.004 #> CSIBTEST       focal            29             1 0.067    NA 8.472  1 0.004 #>  #> $Item_5 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST        focal            29             1 0.054 0.028  3.78  1 0.052 #> CSIBTEST       focal            29             1 0.071    NA 6.524  2 0.038 #>  #> $Item_6 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST        focal            29             1 0.045 0.027 2.839  1 0.092 #> CSIBTEST       focal            29             1 0.047    NA 3.679  2 0.159 #>  #> $Item_7 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST        focal            29             1 0.082 0.028 8.455  1 0.004 #> CSIBTEST       focal            29             1 0.085    NA 9.148  2  0.01 #>  #> $Item_8 #>          focal_group n_matched_set n_suspect_set  beta    SE     X2 df     p #> SIBTEST        focal            29             1 0.088 0.028 10.042  1 0.002 #> CSIBTEST       focal            29             1 0.108    NA 15.424  2     0 #>  #> $Item_9 #>          focal_group n_matched_set n_suspect_set  beta    SE     X2 df     p #> SIBTEST        focal            29             1 0.082 0.029  8.256  1 0.004 #> CSIBTEST       focal            29             1 0.099    NA 12.193  2 0.002 #>  #> $Item_10 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST        focal            29             1 0.076 0.028 7.264  1 0.007 #> CSIBTEST       focal            29             1 0.076    NA 7.264  1 0.007 #>  #> $Item_11 #>          focal_group n_matched_set n_suspect_set  beta    SE     X2 df     p #> SIBTEST        focal            29             1 0.096 0.028 12.036  1 0.001 #> CSIBTEST       focal            29             1 0.114    NA 17.072  2     0 #>  #> $Item_12 #>          focal_group n_matched_set n_suspect_set  beta    SE     X2 df p #> SIBTEST        focal            29             1 0.105 0.027 14.678  1 0 #> CSIBTEST       focal            29             1 0.105    NA 14.678  1 0 #>  #> $Item_13 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST        focal            29             1 0.057 0.028 4.098  1 0.043 #> CSIBTEST       focal            29             1 0.057    NA 4.098  1 0.043 #>  #> $Item_14 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST        focal            29             1 0.082 0.026 9.589  1 0.002 #> CSIBTEST       focal            29             1 0.082    NA 9.589  1 0.002 #>  #> $Item_15 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST        focal            29             1 0.023 0.026 0.779  1 0.378 #> CSIBTEST       focal            29             1 0.023    NA 0.779  1 0.378 #>  #> $Item_16 #>          focal_group n_matched_set n_suspect_set   beta    SE     X2 df     p #> SIBTEST        focal            29             1 -0.092 0.028  10.83  1 0.001 #> CSIBTEST       focal            29             1  0.094    NA 11.373  2 0.003 #>  #> $Item_17 #>          focal_group n_matched_set n_suspect_set   beta    SE      X2 df p #> SIBTEST        focal            29             1 -0.328 0.028 137.581  1 0 #> CSIBTEST       focal            29             1  0.328    NA 137.581  1 0 #>  #> $Item_18 #>          focal_group n_matched_set n_suspect_set   beta    SE     X2 df     p #> SIBTEST        focal            29             1 -0.037 0.026  2.017  1 0.155 #> CSIBTEST       focal            29             1  0.094    NA 14.977  2 0.001 #>  #> $Item_19 #>          focal_group n_matched_set n_suspect_set  beta    SE     X2 df p #> SIBTEST        focal            29             1 0.315 0.033 93.742  1 0 #> CSIBTEST       focal            29             1 0.315    NA 93.742  1 0 #>  #> $Item_20 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST        focal            29             1 0.069 0.023 8.926  1 0.003 #> CSIBTEST       focal            29             1 0.069    NA 8.926  1 0.003 #>  #> $Item_21 #>          focal_group n_matched_set n_suspect_set   beta    SE     X2 df p #> SIBTEST        focal            29             1 -0.225 0.025 80.654  1 0 #> CSIBTEST       focal            29             1  0.225    NA 80.654  1 0 #>  #> $Item_22 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df p #> SIBTEST        focal            29             1 -0.186 0.027 48.41  1 0 #> CSIBTEST       focal            29             1  0.186    NA 48.41  1 0 #>  #> $Item_23 #>          focal_group n_matched_set n_suspect_set  beta    SE     X2 df p #> SIBTEST        focal            29             1 -0.14 0.028 24.643  1 0 #> CSIBTEST       focal            29             1  0.14    NA 24.643  1 0 #>  #> $Item_24 #>          focal_group n_matched_set n_suspect_set  beta    SE     X2 df p #> SIBTEST        focal            29             1 0.146 0.026 30.882  1 0 #> CSIBTEST       focal            29             1 0.159    NA 40.395  2 0 #>  #> $Item_25 #>          focal_group n_matched_set n_suspect_set   beta    SE      X2 df p #> SIBTEST        focal            29             1 -0.311 0.027 133.904  1 0 #> CSIBTEST       focal            29             1  0.311    NA 133.904  1 0 #>  #> $Item_26 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST        focal            29             1 -0.07 0.025 8.026  1 0.005 #> CSIBTEST       focal            29             1  0.07    NA 8.026  1 0.005 #>  #> $Item_27 #>          focal_group n_matched_set n_suspect_set  beta    SE     X2 df p #> SIBTEST        focal            29             1 0.269 0.029 86.816  1 0 #> CSIBTEST       focal            29             1 0.269    NA 86.816  1 0 #>  #> $Item_28 #>          focal_group n_matched_set n_suspect_set   beta    SE     X2 df p #> SIBTEST        focal            29             1 -0.237 0.027 74.759  1 0 #> CSIBTEST       focal            29             1  0.237    NA 74.759  1 0 #>  #> $Item_29 #>          focal_group n_matched_set n_suspect_set   beta    SE     X2 df     p #> SIBTEST        focal            29             1 -0.036 0.027  1.744  1 0.187 #> CSIBTEST       focal            29             1  0.105    NA 14.901  2 0.001 #>  #> $Item_30 #>          focal_group n_matched_set n_suspect_set   beta    SE     X2 df p #> SIBTEST        focal            29             1 -0.264 0.028 87.158  1 0 #> CSIBTEST       focal            29             1  0.264    NA 87.158  1 0 #>   # randomization method is fairly poor when smaller matched-set used SIBTEST(dat, group, suspect_set = 30, match_set = 1:5, randomize=TRUE) #>          focal_group n_matched_set n_suspect_set   beta    SE      X2 df     p #> SIBTEST        focal             5             1 -0.335 0.026 166.911  1     0 #> CSIBTEST       focal             5             1  0.335 0.026            0.253 SIBTEST(dat, group, suspect_set = 30, randomize=TRUE) #>          focal_group n_matched_set n_suspect_set   beta    SE     X2 df p #> SIBTEST        focal            29             1 -0.264 0.028 87.158  1 0 #> CSIBTEST       focal            29             1  0.264 0.028           0  ## ---------------------------------- # three group SIBTEST test set.seed(1234) n <- 30 N <- 1000 a <- matrix(1, n) d <- matrix(rnorm(n), n) group <- c(rep('group1', N), rep('group2', N), rep('group3', N))  # groups completely equal dat1 <- simdata(a, d, N, itemtype = 'dich') dat2 <- simdata(a, d, N, itemtype = 'dich') dat3 <- simdata(a, d, N, itemtype = 'dich') dat <- rbind(dat1, dat2, dat3)  # omnibus test using effects-coding contrast matrix (default) SIBTEST(dat, group, suspect_set = 6) #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1 -0.005 -0.005 0.084  2 0.959 #> GCSIBTEST            29             1  0.004  0.016 1.027          SIBTEST(dat, group, suspect_set = 6, randomize=TRUE) #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1 -0.005 -0.005 0.084  2 0.959 #> GCSIBTEST            29             1  0.004  0.016 1.027    0.847  # explicit contrasts SIBTEST(dat, group, suspect_set = 6, randomize=TRUE,         C = matrix(c(1,-1,0), 1)) #>           n_matched_set n_suspect_set   beta    X2 df     p #> GSIBTEST             29             1 -0.003  0.02  1 0.888 #> GCSIBTEST            29             1  0.002 0.009    0.957  # test all items for DIF SIBTEST(dat, group, suspect_set = 1:ncol(dat), DIF=TRUE) #> $Item_1 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1  0.017  0.001 1.008  2 0.604 #> GCSIBTEST            29             1  0.022  0.031 7.502          #>  #> $Item_2 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1 -0.046 -0.022 4.695  2 0.096 #> GCSIBTEST            29             1  0.038  0.026 3.452          #>  #> $Item_3 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1 -0.001 -0.002 0.009  2 0.996 #> GCSIBTEST            29             1  0.003  0.008 0.298          #>  #> $Item_4 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1  0.002 -0.005 0.193  2 0.908 #> GCSIBTEST            29             1  0.012  0.006 0.609          #>  #> $Item_5 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1  0.028  0.015 1.807  2 0.405 #> GCSIBTEST            29             1  0.028  0.029 7.164          #>  #> $Item_6 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1 -0.005 -0.005 0.084  2 0.959 #> GCSIBTEST            29             1  0.004  0.016 1.027          #>  #> $Item_7 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1 -0.007  0.015 1.134  2 0.567 #> GCSIBTEST            29             1  0.012  0.015 0.564          #>  #> $Item_8 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1  0.001  0.007 0.147  2 0.929 #> GCSIBTEST            29             1  0.019  0.011 0.835          #>  #> $Item_9 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1  0.046  0.002 6.347  2 0.042 #> GCSIBTEST            29             1  0.037  0.031 3.719          #>  #> $Item_10 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1 -0.004  0.002 0.084  2 0.959 #> GCSIBTEST            29             1  0.036  0.014 3.326          #>  #> $Item_11 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1 -0.017 -0.015 0.788  2 0.674 #> GCSIBTEST            29             1  0.017  0.017 2.736          #>  #> $Item_12 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1  0.026  0.024  2.02  2 0.364 #> GCSIBTEST            29             1  0.035  0.023 3.074          #>  #> $Item_13 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1 -0.005      0 0.088  2 0.957 #> GCSIBTEST            29             1  0.016      0 0.769          #>  #> $Item_14 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1  0.000  0.005 0.085  2 0.959 #> GCSIBTEST            29             1  0.022  0.031 2.229          #>  #> $Item_15 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1  0.013  0.025 1.558  2 0.459 #> GCSIBTEST            29             1  0.011  0.041 4.631          #>  #> $Item_16 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1 -0.003 -0.033 2.934  2 0.231 #> GCSIBTEST            29             1  0.021  0.033 2.469          #>  #> $Item_17 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1  0.001  0.001 0.002  2 0.999 #> GCSIBTEST            29             1  0.002  0.006 0.088          #>  #> $Item_18 #>           n_matched_set n_suspect_set beta_1 beta_2     X2 df     p #> GSIBTEST             29             1  -0.06 -0.023  8.761  2 0.013 #> GCSIBTEST            29             1   0.06  0.004 10.588          #>  #> $Item_19 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1 -0.005 -0.025 1.591  2 0.451 #> GCSIBTEST            29             1  0.029  0.010 4.078          #>  #> $Item_20 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1  0.011  0.002 0.583  2 0.747 #> GCSIBTEST            29             1  0.011  0.014 2.621          #>  #> $Item_21 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1  0.013  0.031 2.247  2 0.325 #> GCSIBTEST            29             1  0.032  0.031  8.87          #>  #> $Item_22 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1  0.010 -0.019 1.868  2 0.393 #> GCSIBTEST            29             1  0.012  0.019 0.792          #>  #> $Item_23 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1 -0.007 -0.018 0.745  2 0.689 #> GCSIBTEST            29             1  0.030  0.018 5.375          #>  #> $Item_24 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1  0.006  0.020 0.891  2 0.641 #> GCSIBTEST            29             1  0.016  0.025  3.57          #>  #> $Item_25 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1 -0.027  0.015 3.923  2 0.141 #> GCSIBTEST            29             1  0.027  0.019 1.697          #>  #> $Item_26 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1  0.010  0.010 0.434  2 0.805 #> GCSIBTEST            29             1  0.017  0.005 1.637          #>  #> $Item_27 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1  0.023  0.016 1.272  2 0.529 #> GCSIBTEST            29             1  0.023  0.017 1.288          #>  #> $Item_28 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1 -0.003  0.003 0.087  2 0.957 #> GCSIBTEST            29             1  0.001  0.016 0.844          #>  #> $Item_29 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df    p #> GSIBTEST             29             1 -0.007 -0.027  1.69  2 0.43 #> GCSIBTEST            29             1  0.031  0.027 2.472         #>  #> $Item_30 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1  0.013 -0.011 1.391  2 0.499 #> GCSIBTEST            29             1  0.012  0.020 2.593          #>  SIBTEST(dat, group, suspect_set = 16:ncol(dat), DIF=TRUE,         match_set = 1:15) # specific anchors #> $Item_16 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             15             1 -0.003 -0.035 3.407  2 0.182 #> GCSIBTEST            15             1  0.018  0.035 6.656          #>  #> $Item_17 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df p #> GSIBTEST             15             1  0.000   0.00     0  2 1 #> GCSIBTEST            15             1  0.019   0.03 2.148      #>  #> $Item_18 #>           n_matched_set n_suspect_set beta_1 beta_2     X2 df     p #> GSIBTEST             15             1 -0.064 -0.027 10.021  2 0.007 #> GCSIBTEST            15             1  0.064  0.010  11.28          #>  #> $Item_19 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             15             1 -0.013 -0.029 1.915  2 0.384 #> GCSIBTEST            15             1  0.015  0.027 4.362          #>  #> $Item_20 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             15             1   0.01 -0.002 0.817  2 0.665 #> GCSIBTEST            15             1   0.01  0.008  0.54          #>  #> $Item_21 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             15             1  0.015  0.022 1.116  2 0.572 #> GCSIBTEST            15             1  0.035  0.022 2.729          #>  #> $Item_22 #>           n_matched_set n_suspect_set beta_1 beta_2   X2 df     p #> GSIBTEST             15             1  0.005 -0.026 2.51  2 0.285 #> GCSIBTEST            15             1  0.005  0.026 2.51          #>  #> $Item_23 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             15             1 -0.008 -0.022 1.108  2 0.575 #> GCSIBTEST            15             1  0.007  0.022 2.045          #>  #> $Item_24 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df    p #> GSIBTEST             15             1  0.003  0.016 0.686  2 0.71 #> GCSIBTEST            15             1  0.018  0.023 3.804         #>  #> $Item_25 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             15             1 -0.033  0.007 4.161  2 0.125 #> GCSIBTEST            15             1  0.033  0.007 4.161          #>  #> $Item_26 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             15             1  0.011  0.007 0.338  2 0.845 #> GCSIBTEST            15             1  0.011  0.005 0.729          #>  #> $Item_27 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             15             1  0.021  0.009  0.98  2 0.613 #> GCSIBTEST            15             1  0.023  0.018 1.286          #>  #> $Item_28 #>           n_matched_set n_suspect_set beta_1 beta_2     X2 df     p #> GSIBTEST             15             1 -0.009 -0.003  0.235  2 0.889 #> GCSIBTEST            15             1  0.035  0.028 10.697          #>  #> $Item_29 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             15             1 -0.007 -0.032 2.394  2 0.302 #> GCSIBTEST            15             1  0.018  0.032 5.554          #>  #> $Item_30 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             15             1  0.013 -0.012 1.558  2 0.459 #> GCSIBTEST            15             1  0.013  0.028 1.872          #>   # post-hoc between two groups only pick <- group %in% c('group1', 'group2') SIBTEST(subset(dat, pick), group[pick], suspect_set = 1:ncol(dat), DIF=TRUE) #> $Item_1 #>          focal_group n_matched_set n_suspect_set  beta   SE    X2 df     p #> SIBTEST       group2            29             1 0.023 0.02 1.399  1 0.237 #> CSIBTEST      group2            29             1 0.027   NA  1.95  2 0.377 #>  #> $Item_2 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group2            29             1 -0.045 0.021 4.628  1 0.031 #> CSIBTEST      group2            29             1  0.041    NA 4.639  2 0.098 #>  #> $Item_3 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df    p #> SIBTEST       group2            29             1 0.003 0.021 0.027  1 0.87 #> CSIBTEST      group2            29             1 0.003    NA 0.027  1 0.87 #>  #> $Item_4 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group2            29             1 -0.002 0.015 0.018  1 0.894 #> CSIBTEST      group2            29             1  0.015    NA 1.744  2 0.418 #>  #> $Item_5 #>          focal_group n_matched_set n_suspect_set beta    SE    X2 df     p #> SIBTEST       group2            29             1 0.03 0.021 1.979  1 0.159 #> CSIBTEST      group2            29             1 0.03    NA 1.979  1 0.159 #>  #> $Item_6 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group2            29             1 -0.002 0.021 0.005  1 0.942 #> CSIBTEST      group2            29             1  0.003    NA 0.029  2 0.986 #>  #> $Item_7 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group2            29             1 -0.005 0.021  0.06  1 0.807 #> CSIBTEST      group2            29             1  0.012    NA 0.342  2 0.843 #>  #> $Item_8 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df    p #> SIBTEST       group2            29             1 -0.002 0.021  0.01  1 0.92 #> CSIBTEST      group2            29             1  0.019    NA 1.123  2 0.57 #>  #> $Item_9 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df    p #> SIBTEST       group2            29             1 0.045 0.021 4.696  1 0.03 #> CSIBTEST      group2            29             1 0.035    NA  4.82  2 0.09 #>  #> $Item_10 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group2            29             1 -0.007 0.021 0.121  1 0.728 #> CSIBTEST      group2            29             1  0.036    NA 3.296  2 0.192 #>  #> $Item_11 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df    p #> SIBTEST       group2            29             1 -0.017 0.021 0.624  1 0.43 #> CSIBTEST      group2            29             1  0.017    NA 0.624  1 0.43 #>  #> $Item_12 #>          focal_group n_matched_set n_suspect_set  beta   SE    X2 df     p #> SIBTEST       group2            29             1 0.026 0.02 1.733  1 0.188 #> CSIBTEST      group2            29             1 0.037   NA 3.391  2 0.183 #>  #> $Item_13 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group2            29             1 -0.002 0.021 0.009  1 0.925 #> CSIBTEST      group2            29             1  0.019    NA 1.139  2 0.566 #>  #> $Item_14 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group2            29             1 -0.001 0.022 0.001  1 0.973 #> CSIBTEST      group2            29             1  0.022    NA 1.108  2 0.575 #>  #> $Item_15 #>          focal_group n_matched_set n_suspect_set  beta   SE    X2 df     p #> SIBTEST       group2            29             1 0.012 0.02 0.357  1  0.55 #> CSIBTEST      group2            29             1 0.010   NA 0.358  2 0.836 #>  #> $Item_16 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group2            29             1 -0.005 0.022 0.064  1 0.801 #> CSIBTEST      group2            29             1  0.016    NA 0.547  2 0.761 #>  #> $Item_17 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group2            29             1 0.002 0.021 0.011  1 0.916 #> CSIBTEST      group2            29             1 0.003    NA 0.025  2 0.987 #>  #> $Item_18 #>          focal_group n_matched_set n_suspect_set   beta   SE    X2 df     p #> SIBTEST       group2            29             1 -0.059 0.02 8.584  1 0.003 #> CSIBTEST      group2            29             1  0.059   NA 8.584  1 0.003 #>  #> $Item_19 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group2            29             1 -0.01 0.021 0.248  1 0.619 #> CSIBTEST      group2            29             1  0.02    NA 1.031  2 0.597 #>  #> $Item_20 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group2            29             1 0.018 0.017 1.224  1 0.268 #> CSIBTEST      group2            29             1 0.018    NA 1.224  1 0.268 #>  #> $Item_21 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group2            29             1 0.012 0.021 0.338  1 0.561 #> CSIBTEST      group2            29             1 0.030    NA  2.06  2 0.357 #>  #> $Item_22 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group2            29             1 0.008 0.021 0.141  1 0.707 #> CSIBTEST      group2            29             1 0.008    NA 0.171  2 0.918 #>  #> $Item_23 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group2            29             1 -0.007 0.021 0.126  1 0.723 #> CSIBTEST      group2            29             1  0.031    NA 2.224  2 0.329 #>  #> $Item_24 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group2            29             1 0.007 0.022 0.105  1 0.746 #> CSIBTEST      group2            29             1 0.012    NA 0.578  2 0.749 #>  #> $Item_25 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group2            29             1 -0.026 0.021 1.468  1 0.226 #> CSIBTEST      group2            29             1  0.026    NA 1.468  1 0.226 #>  #> $Item_26 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group2            29             1 0.009 0.018 0.219  1  0.64 #> CSIBTEST      group2            29             1 0.019    NA 3.558  2 0.169 #>  #> $Item_27 #>          focal_group n_matched_set n_suspect_set  beta    SE   X2 df     p #> SIBTEST       group2            29             1 0.018 0.021 0.73  1 0.393 #> CSIBTEST      group2            29             1 0.018    NA 0.73  1 0.393 #>  #> $Item_28 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group2            29             1 -0.002 0.019 0.015  1 0.903 #> CSIBTEST      group2            29             1  0.000    NA 0.017  2 0.991 #>  #> $Item_29 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df    p #> SIBTEST       group2            29             1 -0.010 0.021 0.206  1 0.65 #> CSIBTEST      group2            29             1  0.029    NA 1.883  2 0.39 #>  #> $Item_30 #>          focal_group n_matched_set n_suspect_set  beta   SE    X2 df     p #> SIBTEST       group2            29             1 0.012 0.02 0.348  1 0.555 #> CSIBTEST      group2            29             1 0.012   NA 0.402  2 0.818 #>   # post-hoc pairwise comparison for all groups SIBTEST(dat, group, suspect_set = 1:ncol(dat), DIF=TRUE, pairwise = TRUE) #> $group1_group2 #> $group1_group2$Item_1 #>          focal_group n_matched_set n_suspect_set  beta   SE    X2 df     p #> SIBTEST       group2            29             1 0.023 0.02 1.399  1 0.237 #> CSIBTEST      group2            29             1 0.027   NA  1.95  2 0.377 #>  #> $group1_group2$Item_2 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group2            29             1 -0.045 0.021 4.628  1 0.031 #> CSIBTEST      group2            29             1  0.041    NA 4.639  2 0.098 #>  #> $group1_group2$Item_3 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df    p #> SIBTEST       group2            29             1 0.003 0.021 0.027  1 0.87 #> CSIBTEST      group2            29             1 0.003    NA 0.027  1 0.87 #>  #> $group1_group2$Item_4 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group2            29             1 -0.002 0.015 0.018  1 0.894 #> CSIBTEST      group2            29             1  0.015    NA 1.744  2 0.418 #>  #> $group1_group2$Item_5 #>          focal_group n_matched_set n_suspect_set beta    SE    X2 df     p #> SIBTEST       group2            29             1 0.03 0.021 1.979  1 0.159 #> CSIBTEST      group2            29             1 0.03    NA 1.979  1 0.159 #>  #> $group1_group2$Item_6 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group2            29             1 -0.002 0.021 0.005  1 0.942 #> CSIBTEST      group2            29             1  0.003    NA 0.029  2 0.986 #>  #> $group1_group2$Item_7 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group2            29             1 -0.005 0.021  0.06  1 0.807 #> CSIBTEST      group2            29             1  0.012    NA 0.342  2 0.843 #>  #> $group1_group2$Item_8 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df    p #> SIBTEST       group2            29             1 -0.002 0.021  0.01  1 0.92 #> CSIBTEST      group2            29             1  0.019    NA 1.123  2 0.57 #>  #> $group1_group2$Item_9 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df    p #> SIBTEST       group2            29             1 0.045 0.021 4.696  1 0.03 #> CSIBTEST      group2            29             1 0.035    NA  4.82  2 0.09 #>  #> $group1_group2$Item_10 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group2            29             1 -0.007 0.021 0.121  1 0.728 #> CSIBTEST      group2            29             1  0.036    NA 3.296  2 0.192 #>  #> $group1_group2$Item_11 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df    p #> SIBTEST       group2            29             1 -0.017 0.021 0.624  1 0.43 #> CSIBTEST      group2            29             1  0.017    NA 0.624  1 0.43 #>  #> $group1_group2$Item_12 #>          focal_group n_matched_set n_suspect_set  beta   SE    X2 df     p #> SIBTEST       group2            29             1 0.026 0.02 1.733  1 0.188 #> CSIBTEST      group2            29             1 0.037   NA 3.391  2 0.183 #>  #> $group1_group2$Item_13 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group2            29             1 -0.002 0.021 0.009  1 0.925 #> CSIBTEST      group2            29             1  0.019    NA 1.139  2 0.566 #>  #> $group1_group2$Item_14 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group2            29             1 -0.001 0.022 0.001  1 0.973 #> CSIBTEST      group2            29             1  0.022    NA 1.108  2 0.575 #>  #> $group1_group2$Item_15 #>          focal_group n_matched_set n_suspect_set  beta   SE    X2 df     p #> SIBTEST       group2            29             1 0.012 0.02 0.357  1  0.55 #> CSIBTEST      group2            29             1 0.010   NA 0.358  2 0.836 #>  #> $group1_group2$Item_16 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group2            29             1 -0.005 0.022 0.064  1 0.801 #> CSIBTEST      group2            29             1  0.016    NA 0.547  2 0.761 #>  #> $group1_group2$Item_17 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group2            29             1 0.002 0.021 0.011  1 0.916 #> CSIBTEST      group2            29             1 0.003    NA 0.025  2 0.987 #>  #> $group1_group2$Item_18 #>          focal_group n_matched_set n_suspect_set   beta   SE    X2 df     p #> SIBTEST       group2            29             1 -0.059 0.02 8.584  1 0.003 #> CSIBTEST      group2            29             1  0.059   NA 8.584  1 0.003 #>  #> $group1_group2$Item_19 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group2            29             1 -0.01 0.021 0.248  1 0.619 #> CSIBTEST      group2            29             1  0.02    NA 1.031  2 0.597 #>  #> $group1_group2$Item_20 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group2            29             1 0.018 0.017 1.224  1 0.268 #> CSIBTEST      group2            29             1 0.018    NA 1.224  1 0.268 #>  #> $group1_group2$Item_21 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group2            29             1 0.012 0.021 0.338  1 0.561 #> CSIBTEST      group2            29             1 0.030    NA  2.06  2 0.357 #>  #> $group1_group2$Item_22 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group2            29             1 0.008 0.021 0.141  1 0.707 #> CSIBTEST      group2            29             1 0.008    NA 0.171  2 0.918 #>  #> $group1_group2$Item_23 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group2            29             1 -0.007 0.021 0.126  1 0.723 #> CSIBTEST      group2            29             1  0.031    NA 2.224  2 0.329 #>  #> $group1_group2$Item_24 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group2            29             1 0.007 0.022 0.105  1 0.746 #> CSIBTEST      group2            29             1 0.012    NA 0.578  2 0.749 #>  #> $group1_group2$Item_25 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group2            29             1 -0.026 0.021 1.468  1 0.226 #> CSIBTEST      group2            29             1  0.026    NA 1.468  1 0.226 #>  #> $group1_group2$Item_26 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group2            29             1 0.009 0.018 0.219  1  0.64 #> CSIBTEST      group2            29             1 0.019    NA 3.558  2 0.169 #>  #> $group1_group2$Item_27 #>          focal_group n_matched_set n_suspect_set  beta    SE   X2 df     p #> SIBTEST       group2            29             1 0.018 0.021 0.73  1 0.393 #> CSIBTEST      group2            29             1 0.018    NA 0.73  1 0.393 #>  #> $group1_group2$Item_28 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group2            29             1 -0.002 0.019 0.015  1 0.903 #> CSIBTEST      group2            29             1  0.000    NA 0.017  2 0.991 #>  #> $group1_group2$Item_29 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df    p #> SIBTEST       group2            29             1 -0.010 0.021 0.206  1 0.65 #> CSIBTEST      group2            29             1  0.029    NA 1.883  2 0.39 #>  #> $group1_group2$Item_30 #>          focal_group n_matched_set n_suspect_set  beta   SE    X2 df     p #> SIBTEST       group2            29             1 0.012 0.02 0.348  1 0.555 #> CSIBTEST      group2            29             1 0.012   NA 0.402  2 0.818 #>  #>  #> $group1_group3 #> $group1_group3$Item_1 #>          focal_group n_matched_set n_suspect_set  beta   SE    X2 df     p #> SIBTEST       group3            29             1 0.002 0.02 0.006  1 0.937 #> CSIBTEST      group3            29             1 0.032   NA 4.561  2 0.102 #>  #> $group1_group3$Item_2 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group3            29             1 -0.022 0.021 1.079  1 0.299 #> CSIBTEST      group3            29             1  0.024    NA 1.265  2 0.531 #>  #> $group1_group3$Item_3 #>          focal_group n_matched_set n_suspect_set   beta   SE    X2 df     p #> SIBTEST       group3            29             1 -0.003 0.02 0.021  1 0.886 #> CSIBTEST      group3            29             1  0.009   NA  0.21  2   0.9 #>  #> $group1_group3$Item_4 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group3            29             1 -0.003 0.016 0.043  1 0.836 #> CSIBTEST      group3            29             1  0.004    NA 0.079  2 0.961 #>  #> $group1_group3$Item_5 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group3            29             1 0.019 0.021 0.757  1 0.384 #> CSIBTEST      group3            29             1 0.033    NA  2.45  2 0.294 #>  #> $group1_group3$Item_6 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group3            29             1 -0.006 0.021 0.079  1 0.779 #> CSIBTEST      group3            29             1  0.017    NA 0.819  2 0.664 #>  #> $group1_group3$Item_7 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group3            29             1 0.016 0.021 0.589  1 0.443 #> CSIBTEST      group3            29             1 0.016    NA 0.589  1 0.443 #>  #> $group1_group3$Item_8 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group3            29             1 0.007 0.021 0.103  1 0.748 #> CSIBTEST      group3            29             1 0.010    NA  0.26  2 0.878 #>  #> $group1_group3$Item_9 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group3            29             1 0.002 0.021 0.013  1 0.911 #> CSIBTEST      group3            29             1 0.032    NA   2.8  2 0.247 #>  #> $group1_group3$Item_10 #>          focal_group n_matched_set n_suspect_set  beta   SE    X2 df     p #> SIBTEST       group3            29             1 0.002 0.02  0.01  1 0.919 #> CSIBTEST      group3            29             1 0.015   NA 0.974  2 0.615 #>  #> $group1_group3$Item_11 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group3            29             1 -0.014 0.021 0.447  1 0.504 #> CSIBTEST      group3            29             1  0.014    NA 1.612  2 0.447 #>  #> $group1_group3$Item_12 #>          focal_group n_matched_set n_suspect_set  beta   SE    X2 df     p #> SIBTEST       group3            29             1 0.024 0.02 1.397  1 0.237 #> CSIBTEST      group3            29             1 0.023   NA 1.453  2 0.484 #>  #> $group1_group3$Item_13 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group3            29             1 -0.006 0.021 0.092  1 0.762 #> CSIBTEST      group3            29             1  0.000    NA 0.126  2 0.939 #>  #> $group1_group3$Item_14 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group3            29             1 0.004 0.021 0.032  1 0.859 #> CSIBTEST      group3            29             1 0.032    NA 2.534  2 0.282 #>  #> $group1_group3$Item_15 #>          focal_group n_matched_set n_suspect_set  beta   SE    X2 df     p #> SIBTEST       group3            29             1 0.023 0.02 1.367  1 0.242 #> CSIBTEST      group3            29             1 0.040   NA 5.532  2 0.063 #>  #> $group1_group3$Item_16 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group3            29             1 -0.034 0.021 2.489  1 0.115 #> CSIBTEST      group3            29             1  0.034    NA 2.489  1 0.115 #>  #> $group1_group3$Item_17 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group3            29             1 0.000 0.021     0  1 0.985 #> CSIBTEST      group3            29             1 0.007    NA 0.141  2 0.932 #>  #> $group1_group3$Item_18 #>          focal_group n_matched_set n_suspect_set   beta   SE    X2 df     p #> SIBTEST       group3            29             1 -0.022 0.02 1.216  1  0.27 #> CSIBTEST      group3            29             1  0.001   NA  2.58  2 0.275 #>  #> $group1_group3$Item_19 #>          focal_group n_matched_set n_suspect_set   beta   SE    X2 df     p #> SIBTEST       group3            29             1 -0.025 0.02 1.525  1 0.217 #> CSIBTEST      group3            29             1  0.010   NA 1.879  2 0.391 #>  #> $group1_group3$Item_20 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group3            29             1 0.003 0.015 0.034  1 0.854 #> CSIBTEST      group3            29             1 0.014    NA 1.113  2 0.573 #>  #> $group1_group3$Item_21 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group3            29             1 0.031 0.021 2.216  1 0.137 #> CSIBTEST      group3            29             1 0.031    NA 2.216  1 0.137 #>  #> $group1_group3$Item_22 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group3            29             1 -0.018 0.021 0.676  1 0.411 #> CSIBTEST      group3            29             1  0.018    NA 0.676  1 0.411 #>  #> $group1_group3$Item_23 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group3            29             1 -0.019 0.021 0.823  1 0.364 #> CSIBTEST      group3            29             1  0.019    NA 0.823  1 0.364 #>  #> $group1_group3$Item_24 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group3            29             1 0.018 0.021  0.75  1 0.386 #> CSIBTEST      group3            29             1 0.026    NA 1.727  2 0.422 #>  #> $group1_group3$Item_25 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group3            29             1 0.013 0.021 0.392  1 0.532 #> CSIBTEST      group3            29             1 0.018    NA 0.746  2 0.689 #>  #> $group1_group3$Item_26 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group3            29             1 0.010 0.018 0.304  1 0.581 #> CSIBTEST      group3            29             1 0.005    NA 0.325  2  0.85 #>  #> $group1_group3$Item_27 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group3            29             1 0.017 0.021 0.649  1 0.421 #> CSIBTEST      group3            29             1 0.025    NA 1.722  2 0.423 #>  #> $group1_group3$Item_28 #>          focal_group n_matched_set n_suspect_set  beta   SE    X2 df     p #> SIBTEST       group3            29             1 0.001 0.02 0.003  1 0.954 #> CSIBTEST      group3            29             1 0.009   NA 0.349  2  0.84 #>  #> $group1_group3$Item_29 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group3            29             1 -0.028 0.021 1.764  1 0.184 #> CSIBTEST      group3            29             1  0.028    NA 1.764  1 0.184 #>  #> $group1_group3$Item_30 #>          focal_group n_matched_set n_suspect_set   beta   SE    X2 df     p #> SIBTEST       group3            29             1 -0.011 0.02 0.316  1 0.574 #> CSIBTEST      group3            29             1  0.025   NA 1.705  2 0.426 #>  #>  #> $group2_group3 #> $group2_group3$Item_1 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group3            29             1 -0.020 0.019 1.056  1 0.304 #> CSIBTEST      group3            29             1  0.003    NA 1.628  2 0.443 #>  #> $group2_group3$Item_2 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group3            29             1 0.023 0.021 1.233  1 0.267 #> CSIBTEST      group3            29             1 0.023    NA 1.233  1 0.267 #>  #> $group2_group3$Item_3 #>          focal_group n_matched_set n_suspect_set  beta   SE    X2 df     p #> SIBTEST       group3            29             1 0.000 0.02     0  1 0.993 #> CSIBTEST      group3            29             1 0.003   NA 0.122  2 0.941 #>  #> $group2_group3$Item_4 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group3            29             1 0.005 0.015  0.12  1 0.729 #> CSIBTEST      group3            29             1 0.001    NA 0.339  2 0.844 #>  #> $group2_group3$Item_5 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group3            29             1 -0.01 0.021  0.23  1 0.631 #> CSIBTEST      group3            29             1  0.00    NA 0.241  2 0.886 #>  #> $group2_group3$Item_6 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group3            29             1 -0.006 0.021 0.078  1 0.779 #> CSIBTEST      group3            29             1  0.006    NA 0.078  1 0.779 #>  #> $group2_group3$Item_7 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group3            29             1 0.019 0.021 0.791  1 0.374 #> CSIBTEST      group3            29             1 0.019    NA 0.791  1 0.374 #>  #> $group2_group3$Item_8 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group3            29             1 0.007 0.021 0.102  1  0.75 #> CSIBTEST      group3            29             1 0.013    NA  0.84  2 0.657 #>  #> $group2_group3$Item_9 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group3            29             1 -0.045 0.021 4.764  1 0.029 #> CSIBTEST      group3            29             1  0.045    NA 4.764  1 0.029 #>  #> $group2_group3$Item_10 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group3            29             1 0.008 0.021 0.139  1 0.709 #> CSIBTEST      group3            29             1 0.014    NA 0.468  2 0.791 #>  #> $group2_group3$Item_11 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group3            29             1 -0.001 0.021 0.001  1 0.978 #> CSIBTEST      group3            29             1  0.017    NA 0.866  2 0.648 #>  #> $group2_group3$Item_12 #>          focal_group n_matched_set n_suspect_set  beta   SE    X2 df     p #> SIBTEST       group3            29             1 0.000 0.02     0  1 0.991 #> CSIBTEST      group3            29             1 0.002   NA 0.007  2 0.996 #>  #> $group2_group3$Item_13 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group3            29             1 0.002 0.021 0.014  1 0.907 #> CSIBTEST      group3            29             1 0.008    NA 0.204  2 0.903 #>  #> $group2_group3$Item_14 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group3            29             1 0.005 0.021 0.051  1 0.822 #> CSIBTEST      group3            29             1 0.011    NA 1.915  2 0.384 #>  #> $group2_group3$Item_15 #>          focal_group n_matched_set n_suspect_set  beta   SE    X2 df     p #> SIBTEST       group3            29             1 0.011 0.02 0.335  1 0.563 #> CSIBTEST      group3            29             1 0.049   NA 6.682  2 0.035 #>  #> $group2_group3$Item_16 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group3            29             1 -0.031 0.021 2.131  1 0.144 #> CSIBTEST      group3            29             1  0.029    NA 2.194  2 0.334 #>  #> $group2_group3$Item_17 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group3            29             1 -0.004 0.021 0.029  1 0.864 #> CSIBTEST      group3            29             1  0.001    NA  0.03  2 0.985 #>  #> $group2_group3$Item_18 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group3            29             1 0.038 0.021 3.351  1 0.067 #> CSIBTEST      group3            29             1 0.038    NA 3.351  1 0.067 #>  #> $group2_group3$Item_19 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group3            29             1 -0.021 0.021  1.06  1 0.303 #> CSIBTEST      group3            29             1  0.006    NA 3.523  2 0.172 #>  #> $group2_group3$Item_20 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group3            29             1 -0.017 0.017 0.992  1 0.319 #> CSIBTEST      group3            29             1  0.017    NA 0.992  1 0.319 #>  #> $group2_group3$Item_21 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group3            29             1 0.016 0.021 0.578  1 0.447 #> CSIBTEST      group3            29             1 0.034    NA 4.188  2 0.123 #>  #> $group2_group3$Item_22 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group3            29             1 -0.033 0.021 2.372  1 0.124 #> CSIBTEST      group3            29             1  0.033    NA 2.372  1 0.124 #>  #> $group2_group3$Item_23 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group3            29             1 -0.009 0.021 0.178  1 0.673 #> CSIBTEST      group3            29             1  0.024    NA 1.949  2 0.377 #>  #> $group2_group3$Item_24 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group3            29             1 0.008 0.022 0.151  1 0.698 #> CSIBTEST      group3            29             1 0.018    NA 0.683  2 0.711 #>  #> $group2_group3$Item_25 #>          focal_group n_matched_set n_suspect_set  beta   SE    X2 df     p #> SIBTEST       group3            29             1 0.043 0.02 4.495  1 0.034 #> CSIBTEST      group3            29             1 0.043   NA 4.495  1 0.034 #>  #> $group2_group3$Item_26 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group3            29             1 -0.003 0.019 0.025  1 0.875 #> CSIBTEST      group3            29             1  0.023    NA  3.11  2 0.211 #>  #> $group2_group3$Item_27 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group3            29             1 -0.002 0.021 0.007  1 0.933 #> CSIBTEST      group3            29             1  0.013    NA 0.373  2  0.83 #>  #> $group2_group3$Item_28 #>          focal_group n_matched_set n_suspect_set  beta   SE    X2 df     p #> SIBTEST       group3            29             1 0.002 0.02 0.013  1 0.909 #> CSIBTEST      group3            29             1 0.008   NA 0.354  2 0.838 #>  #> $group2_group3$Item_29 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group3            29             1 -0.018 0.022 0.722  1 0.395 #> CSIBTEST      group3            29             1  0.026    NA 1.466  2 0.481 #>  #> $group2_group3$Item_30 #>          focal_group n_matched_set n_suspect_set   beta   SE    X2 df     p #> SIBTEST       group3            29             1 -0.029 0.02 1.973  1  0.16 #> CSIBTEST      group3            29             1  0.032   NA 2.615  2 0.271 #>  #>   ## systematic differing slopes and intercepts dat2 <- simdata(a + c(numeric(15), .5,.5,.5,.5,.5, numeric(10)),         d + c(numeric(15), 0,.6,.7,.8,.9, numeric(10)),         N, itemtype = 'dich') dat <- rbind(dat1, dat2, dat3)  SIBTEST(dat, group, suspect_set = 16) #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1  0.008 -0.034 4.642  2 0.098 #> GCSIBTEST            29             1  0.059  0.034 8.205          SIBTEST(dat, group, suspect_set = 16, randomize=TRUE) #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1  0.008 -0.034 4.642  2 0.098 #> GCSIBTEST            29             1  0.059  0.034 8.205    0.125  SIBTEST(dat, group, suspect_set = 19) #>           n_matched_set n_suspect_set beta_1 beta_2     X2 df p #> GSIBTEST             29             1 -0.136 -0.025 52.967  2 0 #> GCSIBTEST            29             1  0.130  0.009 61.401      SIBTEST(dat, group, suspect_set = 19, randomize=TRUE) #>           n_matched_set n_suspect_set beta_1 beta_2     X2 df p #> GSIBTEST             29             1 -0.136 -0.025 52.967  2 0 #> GCSIBTEST            29             1  0.130  0.009 61.401    0  SIBTEST(dat, group, suspect_set = c(16, 19), DIF=TRUE) #> $Item_16 #>           n_matched_set n_suspect_set beta_1 beta_2    X2 df     p #> GSIBTEST             29             1  0.008 -0.034 4.642  2 0.098 #> GCSIBTEST            29             1  0.059  0.034 8.205          #>  #> $Item_19 #>           n_matched_set n_suspect_set beta_1 beta_2     X2 df p #> GSIBTEST             29             1 -0.136 -0.025 52.967  2 0 #> GCSIBTEST            29             1  0.130  0.009 61.401      #>  SIBTEST(dat, group, suspect_set = c(16, 19), DIF=TRUE, pairwise=TRUE) #> $group1_group2 #> $group1_group2$Item_16 #>          focal_group n_matched_set n_suspect_set  beta    SE    X2 df     p #> SIBTEST       group2            29             1 0.008 0.021 0.154  1 0.695 #> CSIBTEST      group2            29             1 0.057    NA 9.536  2 0.008 #>  #> $group1_group2$Item_19 #>          focal_group n_matched_set n_suspect_set   beta    SE     X2 df p #> SIBTEST       group2            29             1 -0.138 0.021 45.595  1 0 #> CSIBTEST      group2            29             1  0.141    NA 47.776  2 0 #>  #>  #> $group1_group3 #> $group1_group3$Item_16 #>          focal_group n_matched_set n_suspect_set   beta    SE    X2 df     p #> SIBTEST       group3            29             1 -0.034 0.021 2.489  1 0.115 #> CSIBTEST      group3            29             1  0.034    NA 2.489  1 0.115 #>  #> $group1_group3$Item_19 #>          focal_group n_matched_set n_suspect_set   beta   SE    X2 df     p #> SIBTEST       group3            29             1 -0.025 0.02 1.525  1 0.217 #> CSIBTEST      group3            29             1  0.010   NA 1.879  2 0.391 #>  #>  #> $group2_group3 #> $group2_group3$Item_16 #>          focal_group n_matched_set n_suspect_set   beta   SE    X2 df     p #> SIBTEST       group3            29             1 -0.039 0.02 3.721  1 0.054 #> CSIBTEST      group3            29             1  0.040   NA 4.185  2 0.123 #>  #> $group2_group3$Item_19 #>          focal_group n_matched_set n_suspect_set  beta   SE     X2 df p #> SIBTEST       group3            29             1 0.112 0.02 30.503  1 0 #> CSIBTEST      group3            29             1 0.118   NA 37.348  2 0 #>  #>    # }"},{"path":"https://philchalmers.github.io/mirt/reference/SLF.html","id":null,"dir":"Reference","previous_headings":"","what":"Social Life Feelings Data — SLF","title":"Social Life Feelings Data — SLF","text":"5-item data set analyzed Bartholomew (1998). Data contains dichotomous responses (endorsement vs non-endorsement) 1490 German respondents five statements perceptions social life.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/SLF.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Social Life Feelings Data — SLF","text":"Bartholomew, D., J. (1998). Scaling unobservable constructs social science. Journal Royal Statistical Society - Series C, 47, 1-13.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/SLF.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Social Life Feelings Data — SLF","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/SLF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Social Life Feelings Data — SLF","text":"","code":"# \\donttest{ # tabular format data(SLF) SLF #>    social1 social2 social3 social4 social5 freq #> 1        0       0       0       0       0  156 #> 2        0       0       0       0       1   26 #> 3        0       0       0       1       0   14 #> 4        0       0       0       1       1    9 #> 5        0       0       1       0       0  127 #> 6        0       0       1       0       1   26 #> 7        0       0       1       1       0   66 #> 8        0       0       1       1       1   16 #> 9        0       1       0       0       0  174 #> 10       0       1       0       0       1   35 #> 11       0       1       0       1       0   36 #> 12       0       1       0       1       1   13 #> 13       0       1       1       0       0  208 #> 14       0       1       1       0       1   65 #> 15       0       1       1       1       0  195 #> 16       0       1       1       1       1  129 #> 17       1       0       0       0       0    8 #> 18       1       0       0       0       1    2 #> 19       1       0       0       1       0    1 #> 20       1       0       0       1       1    3 #> 21       1       0       1       0       0    4 #> 22       1       0       1       0       1    4 #> 23       1       0       1       1       0   18 #> 24       1       0       1       1       1    9 #> 25       1       1       0       0       0    8 #> 26       1       1       0       0       1    2 #> 27       1       1       0       1       0    5 #> 28       1       1       0       1       1    3 #> 29       1       1       1       0       0   19 #> 30       1       1       1       0       1   10 #> 31       1       1       1       1       0   31 #> 32       1       1       1       1       1   68  # full dataset full <- expand.table(SLF) itemstats(full) #> $overall #>     N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  1490            2.166          1.324 0.187 0.076 0.536     0.902 #>  #> $itemstats #>            N K  mean    sd total.r total.r_if_rm alpha_if_rm #> social1 1490 2 0.131 0.337   0.482         0.251       0.510 #> social2 1490 2 0.672 0.470   0.550         0.227       0.527 #> social3 1490 2 0.668 0.471   0.632         0.335       0.458 #> social4 1490 2 0.413 0.493   0.702         0.420       0.397 #> social5 1490 2 0.282 0.450   0.578         0.281       0.493 #>  #> $proportions #>             0     1 #> social1 0.869 0.131 #> social2 0.328 0.672 #> social3 0.332 0.668 #> social4 0.587 0.413 #> social5 0.718 0.282 #>   mod <- mirt(full) #>  plot(mod, type = 'trace')   # }"},{"path":"https://philchalmers.github.io/mirt/reference/Science.html","id":null,"dir":"Reference","previous_headings":"","what":"Description of Science data — Science","title":"Description of Science data — Science","text":"4-item data set borrowed ltm package R, first example grm() function. See complete documentation therein, well Karlheinz Melich (1992).","code":""},{"path":"https://philchalmers.github.io/mirt/reference/Science.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Description of Science data — Science","text":"Karlheinz, R. Melich, . (1992). Euro-Barometer 38.1: Consumer Protection Perceptions Science Technology. INRA (Europe), Brussels. [computer file]","code":""},{"path":"https://philchalmers.github.io/mirt/reference/Science.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Description of Science data — Science","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/Science.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Description of Science data — Science","text":"","code":"# \\donttest{ itemstats(Science) #> $overall #>    N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  392           11.668          2.003 0.275 0.098 0.598      1.27 #>  #> $itemstats #>           N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Comfort 392 4 3.120 0.588   0.596         0.352       0.552 #> Work    392 4 2.722 0.807   0.666         0.332       0.567 #> Future  392 4 2.990 0.757   0.748         0.488       0.437 #> Benefit 392 4 2.837 0.802   0.684         0.363       0.541 #>  #> $proportions #>             1     2     3     4 #> Comfort 0.013 0.082 0.679 0.227 #> Work    0.084 0.250 0.526 0.140 #> Future  0.036 0.184 0.536 0.245 #> Benefit 0.054 0.255 0.492 0.199 #>   mod <- mirt(Science, 1) #>  plot(mod, type = 'trace')  # }"},{"path":"https://philchalmers.github.io/mirt/reference/SingleGroupClass-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Defines object returned mirt model exploratory.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/SingleGroupClass-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"Call: function call Data: list data, sometimes different forms Options: list estimation options Fit: list fit information Model: list model-based information ParObjects: list S4 objects used estimation OptimInfo: list arguments optimization process Internals: list internal arguments secondary computations (inspecting       object generally required) vcov: matrix represented asymptotic covariance matrix parameter estimates time: data.frame indicating breakdown computation times seconds","code":""},{"path":"https://philchalmers.github.io/mirt/reference/SingleGroupClass-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"anova signature(object = \"SingleGroupClass\") coef signature(object = \"SingleGroupClass\") plot signature(x = \"SingleGroupClass\", y = \"missing\") print signature(x = \"SingleGroupClass\") residuals signature(object = \"SingleGroupClass\") show signature(object = \"SingleGroupClass\") summary signature(object = \"SingleGroupClass\")","code":""},{"path":"https://philchalmers.github.io/mirt/reference/SingleGroupClass-class.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Class ","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/SingleGroupClass-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class ","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/anova-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare nested models with likelihood-based statistics — anova-method","title":"Compare nested models with likelihood-based statistics — anova-method","text":"Compare nested models using likelihood ratio test (X2), Akaike Information Criterion (AIC), Bayesian Information Criterion (BIC), Sample-Size Adjusted BIC (SABIC), Hannan-Quinn (HQ) Criterion. given sequence objects, anova tests models one another order specified. Note object inputs ordered terms constrained model least constrained.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/anova-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare nested models with likelihood-based statistics — anova-method","text":"","code":"# S4 method for class 'SingleGroupClass' anova(   object,   object2,   ...,   bounded = FALSE,   mix = 0.5,   frame = 1,   verbose = FALSE )"},{"path":"https://philchalmers.github.io/mirt/reference/anova-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare nested models with likelihood-based statistics — anova-method","text":"object object class SingleGroupClass, MultipleGroupClass, MixedClass, reflecting constrained model fitted object2 second model estimated mirt package estimation methods ... additional less constrained model objects compared sequentially previous model bounded logical; two models comparing bounded parameter (e.g., comparing single 2PL 3PL model 1 df)? TRUE 50:50 mix chi-squared distributions used obtain p-value mix proportion chi-squared mixtures. Default 0.5 frame (internal parameter standard use) verbose (deprecated argument)","code":""},{"path":"https://philchalmers.github.io/mirt/reference/anova-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare nested models with likelihood-based statistics — anova-method","text":"data.frame/mirt_df object","code":""},{"path":"https://philchalmers.github.io/mirt/reference/anova-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compare nested models with likelihood-based statistics — anova-method","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/anova-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare nested models with likelihood-based statistics — anova-method","text":"","code":"# \\donttest{ x <- mirt(Science, 1) #>  x2 <- mirt(Science, 2) #>  anova(x, x2) #>         AIC    SABIC       HQ      BIC    logLik     X2 df     p #> x  3249.739 3262.512 3274.922 3313.279 -1608.870                 #> x2 3241.938 3257.106 3271.843 3317.392 -1601.969 13.801  3 0.003  # compare three models sequentially (X2 not always meaningful) x3 <- mirt(Science, 1, 'gpcm') #>  x4 <- mirt(Science, 1, 'nominal') #>  anova(x, x2, x3, x4) #>         AIC    SABIC       HQ      BIC    logLik      X2 df     p #> x  3249.739 3262.512 3274.922 3313.279 -1608.870                  #> x2 3241.938 3257.106 3271.843 3317.392 -1601.969  13.801  3 0.003 #> x3 3257.366 3270.139 3282.549 3320.906 -1612.683 -21.428 -3   NaN #> x4 3264.910 3284.069 3302.684 3360.220 -1608.455   8.456  8  0.39  # in isolation anova(x) #>        AIC    SABIC       HQ      BIC   logLik #> x 3249.739 3262.512 3274.922 3313.279 -1608.87  # with priors on first model model <- \"Theta = 1-4           PRIOR = (1-4, a1, lnorm, 0, 10)\" xp <- mirt(Science, model) #>  anova(xp, x2) #>         AIC    SABIC       HQ      BIC    logLik   logPost df #> xp 3249.829 3262.602 3275.012 3313.369 -1608.914 -1622.881 NA #> x2 3241.938 3257.106 3271.843 3317.392 -1601.969 -1601.969  3 anova(xp) #>         AIC    SABIC       HQ      BIC    logLik   logPost #> xp 3249.829 3262.602 3275.012 3313.369 -1608.914 -1622.881  # bounded parameter dat <- expand.table(LSAT7) mod <- mirt(dat, 1) #>  mod2 <- mirt(dat, 1, itemtype = c(rep('2PL', 4), '3PL')) #>  anova(mod, mod2) #unbounded test #>           AIC    SABIC       HQ      BIC    logLik    X2 df    p #> mod  5337.610 5354.927 5356.263 5386.688 -2658.805               #> mod2 5339.587 5358.636 5360.106 5393.573 -2658.794 0.023  1 0.88 anova(mod, mod2, bounded = TRUE) #bounded #>           AIC    SABIC       HQ      BIC    logLik    X2 df    p #> mod  5337.610 5354.927 5356.263 5386.688 -2658.805               #> mod2 5339.587 5358.636 5360.106 5393.573 -2658.794 0.023  1 0.44  # priors model <- 'F = 1-5           PRIOR = (5, g, norm, -1, 1)' mod1b <- mirt(dat, model, itemtype = c(rep('2PL', 4), '3PL')) #>  anova(mod1b) #>            AIC   SABIC       HQ      BIC    logLik   logPost #> mod1b 5339.571 5358.62 5360.089 5393.557 -2658.786 -2659.705  model2 <- 'F = 1-5           PRIOR = (1-5, g, norm, -1, 1)' mod2b <- mirt(dat, model2, itemtype = '3PL') #>  anova(mod1b, mod2b) #>            AIC    SABIC       HQ      BIC    logLik   logPost df #> mod1b 5339.571 5358.620 5360.089 5393.557 -2658.786 -2659.705 NA #> mod2b 5348.306 5374.282 5376.286 5421.923 -2659.153 -2664.008  4  # }"},{"path":"https://philchalmers.github.io/mirt/reference/areainfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate the area under a selection of information curves — areainfo","title":"Function to calculate the area under a selection of information curves — areainfo","text":"Compute area test item information function definite integral range.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/areainfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate the area under a selection of information curves — areainfo","text":"","code":"areainfo(   x,   theta_lim,   which.items = 1:extract.mirt(x, \"nitems\"),   group = NULL,   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/areainfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate the area under a selection of information curves — areainfo","text":"x object class 'SingleGroupClass', object class 'MultipleGroupClass' suitable group input supplied theta_lim range integration computed .items integer vector indicating items include expected information function. Default uses possible items group group argument pass extract.group function. Required input object multiple-group model ... additional arguments passed integrate","code":""},{"path":"https://philchalmers.github.io/mirt/reference/areainfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to calculate the area under a selection of information curves — areainfo","text":"data.frame lower upper integration range, information area   within range (Info), information area range -10 10 (Total.Info), proportion   total information given integration range (Info.Proportion), number items included (nitems)","code":""},{"path":"https://philchalmers.github.io/mirt/reference/areainfo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Function to calculate the area under a selection of information curves — areainfo","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/areainfo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to calculate the area under a selection of information curves — areainfo","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/areainfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to calculate the area under a selection of information curves — areainfo","text":"","code":"dat <- expand.table(LSAT7) mod <- mirt(dat, 1) #>   areainfo(mod, c(-2,0), which.items = 1) #item 1 #>  LowerBound UpperBound      Info TotalInfo Proportion nitems #>          -2          0 0.3899825 0.9879254  0.3947489      1 # \\donttest{ areainfo(mod, c(-2,0), which.items = 1:3) #items 1 to 3 #>  LowerBound UpperBound     Info TotalInfo Proportion nitems #>          -2          0 2.095673  3.774611  0.5552023      3 areainfo(mod, c(-2,0)) # all items (total test information) #>  LowerBound UpperBound     Info TotalInfo Proportion nitems #>          -2          0 2.568988  5.275594  0.4869571      5  # plot the area area <- areainfo(mod, c(-2,0)) Theta <- matrix(seq(-3,3, length.out=1000)) info <- testinfo(mod, Theta) plot(info ~ Theta, type = 'l')  pick <- Theta >= -2 & Theta <=0 polygon(c(-2, Theta[pick], 0), c(0, info[pick], 0), col='lightblue') text(x = 2, y = 0.5, labels = paste(\"Total Information:\", round(area$TotalInfo, 3),            \"\\n\\nInformation in (-2, 0):\", round(area$Info, 3),            paste(\"(\", round(100 * area$Proportion, 2), \"%)\", sep = \"\")), cex = 1.2)   # }"},{"path":"https://philchalmers.github.io/mirt/reference/averageMI.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse values from multiple imputation draws — averageMI","title":"Collapse values from multiple imputation draws — averageMI","text":"function computes updated parameter standard error estimates using multiple imputation methodology. Given set parameter estimates associated standard errors function returns weighted average overall within variability due multiple imputations according Rubin's (1987) methodology.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/averageMI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse values from multiple imputation draws — averageMI","text":"","code":"averageMI(par, SEpar, as.data.frame = TRUE)"},{"path":"https://philchalmers.github.io/mirt/reference/averageMI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse values from multiple imputation draws — averageMI","text":"par list containing parameter estimates computed imputed datasets SEpar list containing standard errors associated par .data.frame logical; return data.frame instead list? Default TRUE","code":""},{"path":"https://philchalmers.github.io/mirt/reference/averageMI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapse values from multiple imputation draws — averageMI","text":"returns list data.frame containing updated averaged parameter estimates,   standard errors, t-values associated degrees freedom two tailed p-values","code":""},{"path":"https://philchalmers.github.io/mirt/reference/averageMI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Collapse values from multiple imputation draws — averageMI","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06 Rubin, D.B. (1987) Multiple Imputation Nonresponse Surveys. Wiley & Sons, New York.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/averageMI.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Collapse values from multiple imputation draws — averageMI","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/averageMI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collapse values from multiple imputation draws — averageMI","text":"","code":"# \\donttest{  # simulate data set.seed(1234) N <- 1000  # covariates X1 <- rnorm(N); X2 <- rnorm(N) covdata <- data.frame(X1, X2) Theta <- matrix(0.5 * X1 + -1 * X2 + rnorm(N, sd = 0.5))  # items and response data a <- matrix(1, 20); d <- matrix(rnorm(20)) dat <- simdata(a, d, 1000, itemtype = '2PL', Theta=Theta)  mod1 <- mirt(dat, 1, 'Rasch', covdata=covdata, formula = ~ X1 + X2) #>  coef(mod1, simplify=TRUE) #> $items #>         a1      d g u #> Item_1   1 -0.409 0 1 #> Item_2   1  0.491 0 1 #> Item_3   1  0.313 0 1 #> Item_4   1  1.965 0 1 #> Item_5   1  1.753 0 1 #> Item_6   1 -0.246 0 1 #> Item_7   1 -1.077 0 1 #> Item_8   1  0.533 0 1 #> Item_9   1 -1.232 0 1 #> Item_10  1  0.603 0 1 #> Item_11  1 -0.404 0 1 #> Item_12  1  1.238 0 1 #> Item_13  1  1.033 0 1 #> Item_14  1  1.524 0 1 #> Item_15  1 -0.548 0 1 #> Item_16  1  2.075 0 1 #> Item_17  1 -0.695 0 1 #> Item_18  1 -1.200 0 1 #> Item_19  1  0.121 0 1 #> Item_20  1  0.523 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>       F1 #> F1 0.215 #>  #> $lr.betas #>                 F1 #> (Intercept)  0.000 #> X1           0.527 #> X2          -1.036 #>   # draw plausible values for secondary analyses pv <- fscores(mod1, plausible.draws = 10) pvmods <- lapply(pv, function(x, covdata) lm(x ~ covdata$X1 + covdata$X2),                  covdata=covdata)  # compute Rubin's multiple imputation average so <- lapply(pvmods, summary) par <- lapply(so, function(x) x$coefficients[, 'Estimate']) SEpar <- lapply(so, function(x) x$coefficients[, 'Std. Error']) averageMI(par, SEpar) #>                par SEpar       t      df     p #> (Intercept)  0.003 0.016   0.209 198.552 0.209 #> covdata$X1   0.528 0.018  28.554  63.384     0 #> covdata$X2  -1.037 0.021 -49.311  35.705     0  # }"},{"path":"https://philchalmers.github.io/mirt/reference/bfactor.html","id":null,"dir":"Reference","previous_headings":"","what":"Full-Information Item Bi-factor and Two-Tier Analysis — bfactor","title":"Full-Information Item Bi-factor and Two-Tier Analysis — bfactor","text":"bfactor fits confirmatory maximum likelihood two-tier/bifactor/testlet model dichotomous polytomous data item response theory paradigm. IRT models fit using dimensional reduction EM algorithm regardless number specific factors estimated model uses number factors second-tier structure plus 1. bifactor model maximum number dimensions 2 since second-tier consists ubiquitous unidimensional factor. See mirt appropriate methods used objects returned estimation.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/bfactor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Full-Information Item Bi-factor and Two-Tier Analysis — bfactor","text":"","code":"bfactor(   data,   model,   model2 = paste0(\"G = 1-\", ncol(data)),   group = NULL,   quadpts = NULL,   invariance = \"\",   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/bfactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Full-Information Item Bi-factor and Two-Tier Analysis — bfactor","text":"data matrix data.frame consists numerically ordered data, organized form integers, missing data coded NA model numeric vector specifying factor loads   item. example, 4 item test two specific factors, first   specific factor loads first two items second specific factor   last two, vector c(1,1,2,2). items load   second-tier factors (specific component) NA values may   used place-holders. numbers translated format suitable   mirt.model(), combined definition model2, letter 'S'   added respective factor number Alternatively, input can specified using mirt.model syntax   restriction item must load exactly one specific factor (specific factors,   predicted general factor specified model2) model2 two-tier model specification object defined mirt.model() string passed mirt.model. default model fit unidimensional model second-tier, therefore equivalent bifactor model group factor variable indicating group membership used multiple group analyses quadpts number quadrature nodes use accounting reduced number dimensions. Scheme one used mirt, however regards reduced dimensions (e.g., bifactor model 2 dimensions integrated) invariance see multipleGroup details, however, specific factor variances means constrained according dimensional reduction algorithm ... additional arguments passed estimation engine. See mirt details examples","code":""},{"path":"https://philchalmers.github.io/mirt/reference/bfactor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Full-Information Item Bi-factor and Two-Tier Analysis — bfactor","text":"function returns object class SingleGroupClass   (SingleGroupClass-class) MultipleGroupClass(MultipleGroupClass-class).","code":""},{"path":"https://philchalmers.github.io/mirt/reference/bfactor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Full-Information Item Bi-factor and Two-Tier Analysis — bfactor","text":"bfactor follows item factor analysis strategy explicated Gibbons Hedeker (1992), Gibbons et al. (2007), Cai (2010). Nested models may compared via approximate chi-squared difference test reduction AIC BIC (accessible via anova). See mirt details regarding IRT estimation approach used package. two-tier model specific block diagonal covariance structure primary secondary latent traits. Namely, secondary latent traits assumed orthogonal traits fixed variance 1, primary traits can organized vary covary primary traits model. $$\\Sigma_{two-tier} = \\left(\\begin{array}{cc} G & 0 \\\\ 0 & diag(S) \\end{array} \\right)$$ bifactor model special case two-tier model \\(G\\) 1x1 matrix, therefore 1 primary factor modeled. Evaluation numerical integrals two-tier model requires \\(ncol(G) + 1\\) dimensions integration since \\(S\\) second order ('specific') factors require 1 integration grid due dimension reduction technique. Note: multiple group two-tier analyses second-tier means variances freed since specific factors treated independently due dimension reduction technique.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/bfactor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Full-Information Item Bi-factor and Two-Tier Analysis — bfactor","text":"Cai, L. (2010). two-tier full-information item factor analysis model applications. Psychometrika, 75, 581-612. Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06 Bradlow, E.T., Wainer, H., & Wang, X. (1999). Bayesian random effects model testlets. Psychometrika, 64, 153-168. Gibbons, R. D., & Hedeker, D. R. (1992). Full-information Item Bi-Factor Analysis. Psychometrika, 57, 423-436. Gibbons, R. D., Darrell, R. B., Hedeker, D., Weiss, D. J., Segawa, E., Bhaumik, D. K., Kupfer, D. J., Frank, E., Grochocinski, V. J., & Stover, . (2007). Full-Information item bifactor analysis graded response data. Applied Psychological Measurement, 31, 4-19. Wainer, H., Bradlow, E.T., & Wang, X. (2007). Testlet response theory applications. New York, NY: Cambridge University Press.","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/bfactor.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Full-Information Item Bi-factor and Two-Tier Analysis — bfactor","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/bfactor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Full-Information Item Bi-factor and Two-Tier Analysis — bfactor","text":"","code":"# \\donttest{  ### load SAT12 and compute bifactor model with 3 specific factors data(SAT12) data <- key2binary(SAT12,   key = c(1,4,5,2,3,1,2,1,3,1,2,4,2,1,5,3,4,4,1,4,3,3,4,1,3,5,1,3,1,5,4,5)) specific <- c(2,3,2,3,3,2,1,2,1,1,1,3,1,3,1,2,1,1,3,3,1,1,3,1,3,3,1,3,2,3,1,2) mod1 <- bfactor(data, specific) #>  summary(mod1) #>              G      S1      S2      S3      h2 #> Item.1  0.4078          0.2273         0.21799 #> Item.2  0.6195                  0.3391 0.49881 #> Item.3  0.5573         -0.0744         0.31612 #> Item.4  0.2808                  0.3101 0.17503 #> Item.5  0.4779                  0.2544 0.29311 #> Item.6  0.5341          0.2724         0.35948 #> Item.7  0.4741  0.4210                 0.40199 #> Item.8  0.3537          0.2732         0.19971 #> Item.9  0.2181  0.5321                 0.33068 #> Item.10 0.4849  0.3792                 0.37895 #> Item.11 0.6442  0.3321                 0.52536 #> Item.12 0.0699                  0.1592 0.03023 #> Item.13 0.5219  0.2743                 0.34764 #> Item.14 0.4791                  0.4563 0.43776 #> Item.15 0.5985  0.2402                 0.41590 #> Item.16 0.3885          0.2049         0.19292 #> Item.17 0.6636  0.1177                 0.45423 #> Item.18 0.7163  0.0775                 0.51903 #> Item.19 0.4520                  0.0198 0.20466 #> Item.20 0.6578                  0.1792 0.46478 #> Item.21 0.2806  0.3451                 0.19787 #> Item.22 0.7025 -0.0281                 0.49425 #> Item.23 0.3236                  0.2657 0.17536 #> Item.24 0.5848  0.1030                 0.35266 #> Item.25 0.3732                  0.3297 0.24799 #> Item.26 0.6430                  0.2124 0.45854 #> Item.27 0.7374  0.1554                 0.56792 #> Item.28 0.5256                  0.0758 0.28199 #> Item.29 0.4185          0.7071         0.67516 #> Item.30 0.2455                 -0.0959 0.06946 #> Item.31 0.8333 -0.0872                 0.70202 #> Item.32 0.0780          0.0165         0.00635 #>  #> SS loadings:  8.435 1.03 0.748 0.781  #> Proportion Var:  0.264 0.032 0.023 0.024  #>  #> Factor correlations:  #>  #>    G S1 S2 S3 #> G  1          #> S1 0  1       #> S2 0  0  1    #> S3 0  0  0  1 itemplot(mod1, 18, drop.zeros = TRUE) #drop the zero slopes to allow plotting   # alternative model definition via ?mirt.model syntax specific2 <- \"S1 = 7,9,10,11,13,15,17,18,21,22,24,27,31               S2 = 1,3,6,8,16,29,32               S3 = 2,4,5,12,14,19,20,23,25,26,28,30\" mod2 <- bfactor(data, specific2) #>  anova(mod1, mod2) # same #>          AIC    SABIC       HQ      BIC    logLik X2 df   p #> mod1 19062.1 19179.44 19226.42 19484.21 -9435.052           #> mod2 19062.1 19179.44 19226.42 19484.21 -9435.052  0  0 NaN  # also equivalent using item names instead (not run) specific3 <- \"S1 = Item.7, Item.9, Item.10, Item.11, Item.13, Item.15,                 Item.17, Item.18, Item.21, Item.22, Item.24, Item.27, Item.31               S2 = Item.1, Item.3, Item.6, Item.8, Item.16, Item.29, Item.32               S3 = Item.2, Item.4, Item.5, Item.12, Item.14, Item.19,                 Item.20, Item.23, Item.25, Item.26, Item.28, Item.30\" # mod3 <- bfactor(data, specific3) # anova(mod1, mod2, mod3)  # all same  ### Try with fixed guessing parameters added guess <- rep(.1,32) mod2 <- bfactor(data, specific, guess = guess) #>  coef(mod2) #> $Item.1 #>        a1 a2    a3 a4      d   g u #> par 1.225  0 0.624  0 -1.822 0.1 1 #>  #> $Item.2 #>        a1 a2 a3    a4     d   g u #> par 1.721  0  0 0.954 0.171 0.1 1 #>  #> $Item.3 #>        a1 a2     a3 a4      d   g u #> par 2.415  0 -0.459  0 -2.602 0.1 1 #>  #> $Item.4 #>        a1 a2 a3    a4      d   g u #> par 0.745  0  0 0.695 -0.989 0.1 1 #>  #> $Item.5 #>        a1 a2 a3    a4     d   g u #> par 1.048  0  0 0.603 0.419 0.1 1 #>  #> $Item.6 #>       a1 a2    a3 a4      d   g u #> par 3.06  0 0.501  0 -5.002 0.1 1 #>  #> $Item.7 #>        a1    a2 a3 a4     d   g u #> par 1.121 0.839  0  0 1.373 0.1 1 #>  #> $Item.8 #>        a1 a2    a3 a4      d   g u #> par 1.956  0 1.443  0 -3.772 0.1 1 #>  #> $Item.9 #>        a1    a2 a3 a4     d   g u #> par 0.512 1.236  0  0 2.484 0.1 1 #>  #> $Item.10 #>       a1    a2 a3 a4      d   g u #> par 1.68 1.506  0  0 -1.031 0.1 1 #>  #> $Item.11 #>        a1    a2 a3 a4     d   g u #> par 1.655 0.842  0  0 5.441 0.1 1 #>  #> $Item.12 #>        a1 a2 a3    a4      d   g u #> par 0.129  0  0 0.364 -0.641 0.1 1 #>  #> $Item.13 #>        a1    a2 a3 a4     d   g u #> par 1.183 0.477  0  0 0.679 0.1 1 #>  #> $Item.14 #>        a1 a2 a3    a4     d   g u #> par 1.125  0  0 1.058 1.164 0.1 1 #>  #> $Item.15 #>        a1    a2 a3 a4     d   g u #> par 1.435 0.317  0  0 1.863 0.1 1 #>  #> $Item.16 #>       a1 a2    a3 a4      d   g u #> par 0.95  0 0.573  0 -0.783 0.1 1 #>  #> $Item.17 #>        a1    a2 a3 a4     d   g u #> par 1.547 0.059  0  0 4.112 0.1 1 #>  #> $Item.18 #>        a1    a2 a3 a4      d   g u #> par 2.731 0.094  0  0 -1.808 0.1 1 #>  #> $Item.19 #>        a1 a2 a3    a4      d   g u #> par 0.918  0  0 0.101 -0.001 0.1 1 #>  #> $Item.20 #>        a1 a2 a3    a4     d   g u #> par 1.456  0  0 0.593 2.501 0.1 1 #>  #> $Item.21 #>        a1    a2 a3 a4    d   g u #> par 0.596 0.493  0  0 2.49 0.1 1 #>  #> $Item.22 #>        a1     a2 a3 a4     d   g u #> par 1.554 -0.242  0  0 3.428 0.1 1 #>  #> $Item.23 #>        a1 a2 a3    a4      d   g u #> par 0.908  0  0 0.766 -1.488 0.1 1 #>  #> $Item.24 #>        a1    a2 a3 a4     d   g u #> par 1.379 0.001  0  0 1.132 0.1 1 #>  #> $Item.25 #>       a1 a2 a3    a4      d   g u #> par 1.03  0  0 1.094 -1.164 0.1 1 #>  #> $Item.26 #>        a1 a2 a3    a4      d   g u #> par 1.985  0  0 0.747 -0.663 0.1 1 #>  #> $Item.27 #>        a1    a2 a3 a4     d   g u #> par 1.909 0.348  0  0 2.642 0.1 1 #>  #> $Item.28 #>        a1 a2 a3    a4      d   g u #> par 1.213  0  0 0.142 -0.097 0.1 1 #>  #> $Item.29 #>        a1 a2    a3 a4      d   g u #> par 1.938  0 2.339  0 -2.209 0.1 1 #>  #> $Item.30 #>        a1 a2 a3     a4      d   g u #> par 0.479  0  0 -0.128 -0.527 0.1 1 #>  #> $Item.31 #>        a1    a2 a3 a4     d   g u #> par 3.173 -0.82  0  0 3.316 0.1 1 #>  #> $Item.32 #>        a1 a2     a3 a4      d   g u #> par 0.534  0 -0.053  0 -2.786 0.1 1 #>  #> $GroupPars #>     MEAN_1 MEAN_2 MEAN_3 MEAN_4 COV_11 COV_21 COV_31 COV_41 COV_22 COV_32 #> par      0      0      0      0      1      0      0      0      1      0 #>     COV_42 COV_33 COV_43 COV_44 #> par      0      1      0      1 #>  anova(mod1, mod2) #>           AIC    SABIC       HQ      BIC    logLik     X2 df   p #> mod1 19062.10 19179.44 19226.42 19484.21 -9435.052               #> mod2 19009.55 19126.88 19173.87 19431.65 -9408.775 52.553  0 NaN  ## don't estimate specific factor for item 32 specific[32] <- NA mod3 <- bfactor(data, specific) #>  anova(mod3, mod1) #>           AIC    SABIC       HQ      BIC    logLik   X2 df     p #> mod3 19060.12 19176.23 19222.73 19477.83 -9435.062               #> mod1 19062.10 19179.44 19226.42 19484.21 -9435.052 0.02  1 0.886  # same, but with syntax (not run) specific3 <- \"S1 = 7,9,10,11,13,15,17,18,21,22,24,27,31               S2 = 1,3,6,8,16,29               S3 = 2,4,5,12,14,19,20,23,25,26,28,30\" # mod3b <- bfactor(data, specific3) # anova(mod3b)   ######### # mixed itemtype example  # simulate data a <- matrix(c( 1,0.5,NA, 1,0.5,NA, 1,0.5,NA, 1,0.5,NA, 1,0.5,NA, 1,0.5,NA, 1,0.5,NA, 1,NA,0.5, 1,NA,0.5, 1,NA,0.5, 1,NA,0.5, 1,NA,0.5, 1,NA,0.5, 1,NA,0.5),ncol=3,byrow=TRUE)  d <- matrix(c( -1.0,NA,NA, -1.5,NA,NA,  1.5,NA,NA,  0.0,NA,NA, 2.5,1.0,-1, 3.0,2.0,-0.5, 3.0,2.0,-0.5, 3.0,2.0,-0.5, 2.5,1.0,-1, 2.0,0.0,NA, -1.0,NA,NA, -1.5,NA,NA,  1.5,NA,NA,  0.0,NA,NA),ncol=3,byrow=TRUE) items <- rep('2PL', 14) items[5:10] <- 'graded'  sigma <- diag(3) dataset <- simdata(a,d,5000,itemtype=items,sigma=sigma) itemstats(dataset) #> $overall #>     N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  5000           15.145           4.49 0.178 0.032 0.736     2.309 #>  #> $itemstats #>            N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item_1  5000 2 0.306 0.461   0.436         0.347       0.723 #> Item_2  5000 2 0.232 0.422   0.403         0.320       0.725 #> Item_3  5000 2 0.771 0.420   0.376         0.291       0.727 #> Item_4  5000 2 0.498 0.500   0.478         0.385       0.719 #> Item_5  5000 4 1.896 0.963   0.571         0.398       0.717 #> Item_6  5000 4 2.147 0.880   0.549         0.389       0.717 #> Item_7  5000 4 2.171 0.863   0.540         0.382       0.717 #> Item_8  5000 4 2.133 0.890   0.551         0.389       0.717 #> Item_9  5000 4 1.858 0.988   0.575         0.398       0.717 #> Item_10 5000 3 1.332 0.736   0.528         0.394       0.715 #> Item_11 5000 2 0.299 0.458   0.438         0.351       0.723 #> Item_12 5000 2 0.233 0.423   0.390         0.306       0.726 #> Item_13 5000 2 0.764 0.424   0.410         0.326       0.725 #> Item_14 5000 2 0.504 0.500   0.473         0.379       0.720 #>  #> $proportions #>             0     1     2     3 #> Item_1  0.694 0.306    NA    NA #> Item_2  0.768 0.232    NA    NA #> Item_3  0.229 0.771    NA    NA #> Item_4  0.502 0.498    NA    NA #> Item_5  0.107 0.199 0.384 0.310 #> Item_6  0.081 0.082 0.447 0.390 #> Item_7  0.072 0.085 0.443 0.400 #> Item_8  0.082 0.091 0.438 0.389 #> Item_9  0.123 0.199 0.374 0.304 #> Item_10 0.160 0.348 0.492    NA #> Item_11 0.701 0.299    NA    NA #> Item_12 0.767 0.233    NA    NA #> Item_13 0.236 0.764    NA    NA #> Item_14 0.496 0.504    NA    NA #>   specific <- \"S1 = 1-7              S2 = 8-14\" simmod <- bfactor(dataset, specific) #>  coef(simmod, simplify=TRUE) #> $items #>            a1     a2    a3      d  g  u    d1     d2     d3 #> Item_1  1.145  0.392 0.000 -1.048  0  1    NA     NA     NA #> Item_2  1.146 -0.042 0.000 -1.496  0  1    NA     NA     NA #> Item_3  0.962  0.334 0.000  1.458  0  1    NA     NA     NA #> Item_4  1.247 -0.163 0.000 -0.008  0  1    NA     NA     NA #> Item_5  1.086  0.117 0.000     NA NA NA 2.543  1.012 -0.991 #> Item_6  1.149  0.462 0.000     NA NA NA 3.005  2.081 -0.577 #> Item_7  1.112  0.062 0.000     NA NA NA 3.039  2.056 -0.500 #> Item_8  0.939  0.000 0.674     NA NA NA 2.916  1.939 -0.568 #> Item_9  0.887  0.000 0.676     NA NA NA 2.381  0.925 -1.035 #> Item_10 0.928  0.000 0.655     NA NA NA 2.034 -0.044     NA #> Item_11 1.018  0.000 0.456 -1.063  0  1    NA     NA     NA #> Item_12 0.903  0.000 0.560 -1.448  0  1    NA     NA     NA #> Item_13 0.928  0.000 0.620  1.456  0  1    NA     NA     NA #> Item_14 0.974  0.000 0.663  0.022  0  1    NA     NA     NA #>  #> $means #>  G S1 S2  #>  0  0  0  #>  #> $cov #>    G S1 S2 #> G  1  0  0 #> S1 0  1  0 #> S2 0  0  1 #>    ######### # General testlet response model (Wainer, 2007)  # simulate data set.seed(1234) a <- matrix(0, 12, 4) a[,1] <- rlnorm(12, .2, .3) ind <- 1 for(i in 1:3){    a[ind:(ind+3),i+1] <- a[ind:(ind+3),1]    ind <- ind+4 } print(a) #>            [,1]      [,2]     [,3]      [,4] #>  [1,] 0.8503394 0.8503394 0.000000 0.0000000 #>  [2,] 1.3274088 1.3274088 0.000000 0.0000000 #>  [3,] 1.6910208 1.6910208 0.000000 0.0000000 #>  [4,] 0.6042850 0.6042850 0.000000 0.0000000 #>  [5,] 1.3892130 0.0000000 1.389213 0.0000000 #>  [6,] 1.4216480 0.0000000 1.421648 0.0000000 #>  [7,] 1.0279618 0.0000000 1.027962 0.0000000 #>  [8,] 1.0366667 0.0000000 1.036667 0.0000000 #>  [9,] 1.0311394 0.0000000 0.000000 1.0311394 #> [10,] 0.9351846 0.0000000 0.000000 0.9351846 #> [11,] 1.0584888 0.0000000 0.000000 1.0584888 #> [12,] 0.9052755 0.0000000 0.000000 0.9052755 d <- rnorm(12, 0, .5) sigma <- diag(c(1, .5, 1, .5)) dataset <- simdata(a,d,2000,itemtype=rep('2PL', 12),sigma=sigma) itemstats(dataset) #> $overall #>     N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  2000                6          2.929 0.175 0.068 0.717     1.558 #>  #> $itemstats #>            N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item_1  2000 2 0.426 0.495   0.438         0.287       0.708 #> Item_2  2000 2 0.502 0.500   0.560         0.425       0.689 #> Item_3  2000 2 0.571 0.495   0.575         0.445       0.686 #> Item_4  2000 2 0.502 0.500   0.383         0.224       0.716 #> Item_5  2000 2 0.464 0.499   0.549         0.413       0.690 #> Item_6  2000 2 0.436 0.496   0.561         0.428       0.688 #> Item_7  2000 2 0.440 0.497   0.500         0.356       0.698 #> Item_8  2000 2 0.693 0.462   0.474         0.339       0.701 #> Item_9  2000 2 0.511 0.500   0.481         0.334       0.701 #> Item_10 2000 2 0.456 0.498   0.465         0.316       0.704 #> Item_11 2000 2 0.458 0.498   0.459         0.309       0.705 #> Item_12 2000 2 0.540 0.498   0.475         0.327       0.702 #>  #> $proportions #>             0     1 #> Item_1  0.575 0.426 #> Item_2  0.498 0.502 #> Item_3  0.430 0.571 #> Item_4  0.498 0.502 #> Item_5  0.536 0.464 #> Item_6  0.564 0.436 #> Item_7  0.559 0.440 #> Item_8  0.308 0.693 #> Item_9  0.488 0.511 #> Item_10 0.543 0.456 #> Item_11 0.541 0.458 #> Item_12 0.460 0.540 #>   # estimate by applying constraints and freeing the latent variances specific <- \"S1 = 1-4              S2 = 5-8              S3 = 9-12\" model <- \"G = 1-12           CONSTRAIN = (1, a1, a2), (2, a1, a2), (3, a1, a2), (4, a1, a2),             (5, a1, a3), (6, a1, a3), (7, a1, a3), (8, a1, a3),             (9, a1, a4), (10, a1, a4), (11, a1, a4), (12, a1, a4)           COV = S1*S1, S2*S2, S3*S3\"  simmod <- bfactor(dataset, specific, model) #>  coef(simmod, simplify=TRUE) #> $items #>            a1    a2    a3    a4      d g u #> Item_1  0.794 0.794 0.000 0.000 -0.359 0 1 #> Item_2  1.544 1.544 0.000 0.000  0.011 0 1 #> Item_3  1.762 1.762 0.000 0.000  0.479 0 1 #> Item_4  0.544 0.544 0.000 0.000  0.011 0 1 #> Item_5  1.386 0.000 1.386 0.000 -0.244 0 1 #> Item_6  1.497 0.000 1.497 0.000 -0.449 0 1 #> Item_7  0.853 0.000 0.853 0.000 -0.312 0 1 #> Item_8  0.953 0.000 0.953 0.000  1.101 0 1 #> Item_9  0.981 0.000 0.000 0.981  0.058 0 1 #> Item_10 0.913 0.000 0.000 0.913 -0.217 0 1 #> Item_11 0.868 0.000 0.000 0.868 -0.204 0 1 #> Item_12 0.966 0.000 0.000 0.966  0.206 0 1 #>  #> $means #>  G S1 S2 S3  #>  0  0  0  0  #>  #> $cov #>    G    S1    S2    S3 #> G  1 0.000 0.000 0.000 #> S1 0 0.452 0.000 0.000 #> S2 0 0.000 1.135 0.000 #> S3 0 0.000 0.000 0.432 #>   # Constrained testlet model (Bradlow, 1999) model2 <- \"G = 1-12           CONSTRAIN = (1, a1, a2), (2, a1, a2), (3, a1, a2), (4, a1, a2),             (5, a1, a3), (6, a1, a3), (7, a1, a3), (8, a1, a3),             (9, a1, a4), (10, a1, a4), (11, a1, a4), (12, a1, a4),             (GROUP, COV_22, COV_33, COV_44)           COV = S1*S1, S2*S2, S3*S3\"  simmod2 <- bfactor(dataset, specific, model2) #>  coef(simmod2, simplify=TRUE) #> $items #>            a1    a2    a3    a4      d g u #> Item_1  0.744 0.744 0.000 0.000 -0.360 0 1 #> Item_2  1.453 1.453 0.000 0.000  0.010 0 1 #> Item_3  1.664 1.664 0.000 0.000  0.482 0 1 #> Item_4  0.509 0.509 0.000 0.000  0.011 0 1 #> Item_5  1.541 0.000 1.541 0.000 -0.241 0 1 #> Item_6  1.670 0.000 1.670 0.000 -0.445 0 1 #> Item_7  0.968 0.000 0.968 0.000 -0.313 0 1 #> Item_8  1.075 0.000 1.075 0.000  1.098 0 1 #> Item_9  0.927 0.000 0.000 0.927  0.059 0 1 #> Item_10 0.854 0.000 0.000 0.854 -0.218 0 1 #> Item_11 0.813 0.000 0.000 0.813 -0.205 0 1 #> Item_12 0.908 0.000 0.000 0.908  0.207 0 1 #>  #> $means #>  G S1 S2 S3  #>  0  0  0  0  #>  #> $cov #>    G    S1    S2    S3 #> G  1 0.000 0.000 0.000 #> S1 0 0.667 0.000 0.000 #> S2 0 0.000 0.667 0.000 #> S3 0 0.000 0.000 0.667 #>  anova(simmod2, simmod) #>              AIC    SABIC       HQ      BIC   logLik     X2 df     p #> simmod2 30256.59 30317.19 30308.00 30396.61 -15103.3                 #> simmod  30248.79 30314.24 30304.32 30400.02 -15097.4 11.795  2 0.003   ######### # Two-tier model  # simulate data set.seed(1234) a <- matrix(c(   0,1,0.5,NA,NA,   0,1,0.5,NA,NA,   0,1,0.5,NA,NA,   0,1,0.5,NA,NA,   0,1,0.5,NA,NA,   0,1,NA,0.5,NA,   0,1,NA,0.5,NA,   0,1,NA,0.5,NA,   1,0,NA,0.5,NA,   1,0,NA,0.5,NA,   1,0,NA,0.5,NA,   1,0,NA,NA,0.5,   1,0,NA,NA,0.5,   1,0,NA,NA,0.5,   1,0,NA,NA,0.5,   1,0,NA,NA,0.5),ncol=5,byrow=TRUE)  d <- matrix(rnorm(16)) items <- rep('2PL', 16)  sigma <- diag(5) sigma[1,2] <- sigma[2,1] <- .4 dataset <- simdata(a,d,2000,itemtype=items,sigma=sigma) itemstats(dataset) #> $overall #>     N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  2000            7.086          3.077 0.108 0.058 0.662      1.79 #>  #> $itemstats #>            N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item_1  2000 2 0.288 0.453   0.378         0.241       0.650 #> Item_2  2000 2 0.571 0.495   0.422         0.276       0.646 #> Item_3  2000 2 0.705 0.456   0.381         0.245       0.650 #> Item_4  2000 2 0.133 0.340   0.289         0.183       0.656 #> Item_5  2000 2 0.601 0.490   0.393         0.246       0.650 #> Item_6  2000 2 0.587 0.492   0.419         0.274       0.646 #> Item_7  2000 2 0.379 0.485   0.444         0.304       0.642 #> Item_8  2000 2 0.378 0.485   0.400         0.256       0.649 #> Item_9  2000 2 0.386 0.487   0.392         0.246       0.650 #> Item_10 2000 2 0.322 0.467   0.400         0.261       0.648 #> Item_11 2000 2 0.402 0.490   0.455         0.315       0.640 #> Item_12 2000 2 0.318 0.466   0.414         0.278       0.646 #> Item_13 2000 2 0.368 0.482   0.423         0.281       0.645 #> Item_14 2000 2 0.498 0.500   0.424         0.277       0.646 #> Item_15 2000 2 0.669 0.471   0.394         0.254       0.649 #> Item_16 2000 2 0.482 0.500   0.444         0.300       0.642 #>  #> $proportions #>             0     1 #> Item_1  0.713 0.288 #> Item_2  0.430 0.571 #> Item_3  0.295 0.705 #> Item_4  0.867 0.133 #> Item_5  0.400 0.601 #> Item_6  0.413 0.587 #> Item_7  0.621 0.379 #> Item_8  0.622 0.378 #> Item_9  0.614 0.386 #> Item_10 0.678 0.322 #> Item_11 0.598 0.402 #> Item_12 0.681 0.318 #> Item_13 0.632 0.368 #> Item_14 0.502 0.498 #> Item_15 0.330 0.669 #> Item_16 0.518 0.482 #>   specific <- \"S1 = 1-5              S2 = 6-11              S3 = 12-16\" model <- '     G1 = 1-8     G2 = 9-16     COV = G1*G2'  # quadpts dropped for faster estimation, but not as precise simmod <- bfactor(dataset, specific, model, quadpts = 9, TOL = 1e-3) #>  coef(simmod, simplify=TRUE) #> $items #>            a1    a2    a3    a4    a5      d g u #> Item_1  0.965 0.000 0.385 0.000 0.000 -1.100 0 1 #> Item_2  1.076 0.000 0.550 0.000 0.000  0.363 0 1 #> Item_3  0.898 0.000 0.592 0.000 0.000  1.068 0 1 #> Item_4  0.896 0.000 0.710 0.000 0.000 -2.293 0 1 #> Item_5  0.892 0.000 0.848 0.000 0.000  0.526 0 1 #> Item_6  1.013 0.000 0.000 0.413 0.000  0.435 0 1 #> Item_7  1.162 0.000 0.000 0.451 0.000 -0.639 0 1 #> Item_8  0.945 0.000 0.000 0.609 0.000 -0.623 0 1 #> Item_9  0.000 0.831 0.000 0.371 0.000 -0.544 0 1 #> Item_10 0.000 0.925 0.000 0.610 0.000 -0.926 0 1 #> Item_11 0.000 1.142 0.000 0.495 0.000 -0.517 0 1 #> Item_12 0.000 0.978 0.000 0.000 0.634 -0.964 0 1 #> Item_13 0.000 1.108 0.000 0.000 0.437 -0.694 0 1 #> Item_14 0.000 1.004 0.000 0.000 0.321 -0.012 0 1 #> Item_15 0.000 0.916 0.000 0.000 0.758  0.897 0 1 #> Item_16 0.000 1.020 0.000 0.000 0.650 -0.096 0 1 #>  #> $means #> G1 G2 S1 S2 S3  #>  0  0  0  0  0  #>  #> $cov #>       G1    G2 S1 S2 S3 #> G1 1.000 0.412  0  0  0 #> G2 0.412 1.000  0  0  0 #> S1 0.000 0.000  1  0  0 #> S2 0.000 0.000  0  1  0 #> S3 0.000 0.000  0  0  1 #>  summary(simmod) #>            G1    G2    S1    S2    S3    h2 #> Item_1  0.484       0.193             0.271 #> Item_2  0.516       0.263             0.335 #> Item_3  0.446       0.294             0.285 #> Item_4  0.437       0.346             0.311 #> Item_5  0.425       0.404             0.343 #> Item_6  0.501             0.204       0.293 #> Item_7  0.551             0.214       0.349 #> Item_8  0.463             0.299       0.304 #> Item_9        0.431       0.192       0.222 #> Item_10       0.456       0.300       0.298 #> Item_11       0.541       0.235       0.348 #> Item_12       0.474             0.307 0.319 #> Item_13       0.533             0.210 0.329 #> Item_14       0.501             0.160 0.277 #> Item_15       0.441             0.365 0.328 #> Item_16       0.488             0.311 0.336 #>  #> SS loadings:  1.839 1.88 0.476 0.359 0.395  #> Proportion Var:  0.115 0.118 0.03 0.022 0.025  #>  #> Factor correlations:  #>  #>       G1 G2 S1 S2 S3 #> G1 1.000             #> G2 0.412  1          #> S1 0.000  0  1       #> S2 0.000  0  0  1    #> S3 0.000  0  0  0  1 itemfit(simmod, QMC=TRUE) #>       item   S_X2 df.S_X2 RMSEA.S_X2 p.S_X2 #> 1   Item_1  7.103       9      0.000  0.626 #> 2   Item_2 13.326      10      0.013  0.206 #> 3   Item_3  8.332       9      0.000  0.501 #> 4   Item_4  8.531      10      0.000  0.577 #> 5   Item_5  7.170      10      0.000  0.709 #> 6   Item_6  3.967      10      0.000  0.949 #> 7   Item_7  8.350      10      0.000  0.595 #> 8   Item_8 16.010      10      0.017  0.099 #> 9   Item_9 17.529      10      0.019  0.063 #> 10 Item_10 12.058      10      0.010  0.281 #> 11 Item_11 13.567      10      0.013  0.194 #> 12 Item_12 13.907       9      0.017  0.126 #> 13 Item_13 11.144      10      0.008  0.346 #> 14 Item_14  7.852      10      0.000  0.643 #> 15 Item_15 14.142       9      0.017  0.117 #> 16 Item_16  5.926      10      0.000  0.821 M2(simmod, QMC=TRUE) #>             M2 df         p RMSEA RMSEA_5   RMSEA_95      SRMSR      TLI CFI #> stats 86.28163 87 0.5015988     0       0 0.01201603 0.01662365 1.000285   1 residuals(simmod, QMC=TRUE) #> LD matrix (lower triangle) and standardized residual correlations (upper triangle) #>  #> Upper triangle summary: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  -0.046  -0.011  -0.002  -0.001   0.012   0.041  #>  #>         Item_1 Item_2 Item_3 Item_4 Item_5 Item_6 Item_7 Item_8 Item_9 Item_10 #> Item_1         -0.011 -0.015 -0.007  0.016  0.003  0.006 -0.002  0.004  -0.009 #> Item_2   0.263        -0.002  0.005 -0.001  0.016 -0.022  0.021 -0.003  -0.006 #> Item_3   0.441  0.008         0.014 -0.001  0.029 -0.017 -0.011 -0.021  -0.028 #> Item_4   0.086  0.054  0.376        -0.014 -0.023  0.021 -0.004  0.020  -0.040 #> Item_5   0.514  0.004  0.003  0.386        -0.028  0.011  0.014 -0.021   0.013 #> Item_6   0.015  0.483  1.630  1.038  1.588        -0.022 -0.009  0.031  -0.004 #> Item_7   0.077  0.996  0.590  0.852  0.258  0.992        -0.007 -0.004   0.013 #> Item_8   0.012  0.858  0.264  0.039  0.377  0.154  0.094        -0.020   0.008 #> Item_9   0.033  0.017  0.863  0.803  0.890  1.974  0.037  0.808          0.001 #> Item_10  0.157  0.084  1.528  3.158  0.360  0.038  0.330  0.128  0.001         #> Item_11  0.510  0.125  2.195  0.231  0.004  0.215  1.049  0.004  0.031   0.754 #> Item_12  2.017  0.253  1.865  0.388  0.005  0.417  0.074  0.090  0.443   0.042 #> Item_13  0.470  2.122  0.125  0.271  0.881  0.264  0.310  4.304  0.009   0.059 #> Item_14  0.101  1.546  0.165  0.006  0.296  0.004  1.672  0.765  3.341   0.066 #> Item_15  0.822  0.257  0.011  0.442  0.443  0.113  0.526  0.297  2.306   0.044 #> Item_16  0.097  0.627  1.486  0.127  0.445  0.011  0.732  0.061  0.007   0.944 #>         Item_11 Item_12 Item_13 Item_14 Item_15 Item_16 #> Item_1   -0.016  -0.032   0.015  -0.007   0.020  -0.007 #> Item_2    0.008   0.011  -0.033  -0.028  -0.011   0.018 #> Item_3    0.033   0.031   0.008  -0.009  -0.002   0.027 #> Item_4   -0.011   0.014  -0.012  -0.002  -0.015  -0.008 #> Item_5   -0.001   0.002  -0.021  -0.012   0.015   0.015 #> Item_6    0.010   0.014  -0.011   0.001  -0.008   0.002 #> Item_7    0.023   0.006   0.012   0.029  -0.016   0.019 #> Item_8   -0.001   0.007  -0.046  -0.020   0.012   0.006 #> Item_9    0.004  -0.015  -0.002   0.041  -0.034  -0.002 #> Item_10  -0.019   0.005   0.005   0.006  -0.005   0.022 #> Item_11           0.009   0.000  -0.025   0.039  -0.011 #> Item_12   0.149          -0.008   0.013  -0.002  -0.009 #> Item_13   0.000   0.140           0.013  -0.012   0.003 #> Item_14   1.269   0.338   0.336          -0.007  -0.023 #> Item_15   3.061   0.010   0.284   0.086           0.010 #> Item_16   0.250   0.153   0.015   1.026   0.190          # }"},{"path":"https://philchalmers.github.io/mirt/reference/boot.LR.html","id":null,"dir":"Reference","previous_headings":"","what":"Parametric bootstrap likelihood-ratio test — boot.LR","title":"Parametric bootstrap likelihood-ratio test — boot.LR","text":"Given two fitted models, compute parametric bootstrap test determine whether less restrictive models fits significantly better restricted model. Note hypothesis test also works prior parameter distributions included either model. Function can run parallel using suitable mirtCluster definition.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/boot.LR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parametric bootstrap likelihood-ratio test — boot.LR","text":"","code":"boot.LR(mod, mod2, R = 1000, verbose = TRUE)"},{"path":"https://philchalmers.github.io/mirt/reference/boot.LR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parametric bootstrap likelihood-ratio test — boot.LR","text":"mod estimated model object, constrained mod2 mod2 estimated model object R number parametric bootstraps use. verbose logical; include additional information console?","code":""},{"path":"https://philchalmers.github.io/mirt/reference/boot.LR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parametric bootstrap likelihood-ratio test — boot.LR","text":"p-value evaluating whether restrictive model fits significantly worse   less restrictive model","code":""},{"path":"https://philchalmers.github.io/mirt/reference/boot.LR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Parametric bootstrap likelihood-ratio test — boot.LR","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/boot.LR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parametric bootstrap likelihood-ratio test — boot.LR","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/boot.LR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parametric bootstrap likelihood-ratio test — boot.LR","text":"","code":"# \\donttest{  # standard dat <- expand.table(LSAT7) mod1 <- mirt(dat, 1) #>  mod2 <- mirt(dat, 1, '3PL') #>   # standard LR test anova(mod1, mod2) #>          AIC    SABIC       HQ      BIC    logLik  X2 df     p #> mod1 5337.61 5354.927 5356.263 5386.688 -2658.805              #> mod2 5346.11 5372.085 5374.089 5419.726 -2658.055 1.5  5 0.913  # bootstrap LR test (run in parallel to save time) if(interactive()) mirtCluster() boot.LR(mod1, mod2, R=200) #> [1] 0.3084577  # }"},{"path":"https://philchalmers.github.io/mirt/reference/boot.mirt.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate bootstrapped standard errors for estimated models — boot.mirt","title":"Calculate bootstrapped standard errors for estimated models — boot.mirt","text":"Given internal mirt object estimate bootstrapped standard errors. may beneficial run computations using multi-core architecture (e.g., parallel package). Parameters organized freely estimated values mod2values(x) (equality constraints also returned bootstrapped estimates).","code":""},{"path":"https://philchalmers.github.io/mirt/reference/boot.mirt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate bootstrapped standard errors for estimated models — boot.mirt","text":"","code":"boot.mirt(x, R = 100, boot.fun = NULL, technical = NULL, ...)"},{"path":"https://philchalmers.github.io/mirt/reference/boot.mirt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate bootstrapped standard errors for estimated models — boot.mirt","text":"x estimated model object R number draws use (passed boot() function) boot.fun user-defined function used extract information bootstrap fitted models. Must form boot.fun(x), x bootstrap fitted model investigation, return must numeric vector. omitted default function defined internally returns estimated parameters mod object, resulting bootstrapped parameter estimate results technical technical arguments passed estimation engine. See mirt details ... additional arguments passed boot(...) mirt's estimation engine","code":""},{"path":"https://philchalmers.github.io/mirt/reference/boot.mirt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate bootstrapped standard errors for estimated models — boot.mirt","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/boot.mirt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate bootstrapped standard errors for estimated models — boot.mirt","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/boot.mirt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate bootstrapped standard errors for estimated models — boot.mirt","text":"","code":"# \\donttest{  # standard mod <- mirt(Science, 1) #>  booted <- boot.mirt(mod, R=20) plot(booted)  booted #>  #> ORDINARY NONPARAMETRIC BOOTSTRAP #>  #>  #> Call: #> boot.mirt(x = mod, R = 20) #>  #>  #> Bootstrap Statistics : #>        original       bias    std. error #> t1*   1.0417547  0.039756609   0.2180908 #> t2*   4.8641542  0.107617991   0.4246238 #> t3*   2.6399417  0.008343677   0.2938708 #> t4*  -1.4660135 -0.044006228   0.1801285 #> t5*   1.2259618 -0.010737940   0.1673617 #> t6*   2.9240027  0.059797889   0.2816925 #> t7*   0.9011651 -0.011811056   0.1472792 #> t8*  -2.2665647  0.015599564   0.2175903 #> t9*   2.2933717 -0.001395176   0.4712084 #> t10*  5.2339928 -0.006057157   0.8133609 #> t11*  2.2137728 -0.016503240   0.4009882 #> t12* -1.9637062 -0.027397765   0.3737457 #> t13*  1.0949151  0.011490687   0.2112956 #> t14*  3.3479196 -0.042309791   0.3130434 #> t15*  0.9916289 -0.020381501   0.1864301 #> t16* -1.6882599 -0.013255970   0.1565944  if (FALSE) { # \\dontrun{ #run in parallel using snow back-end using all available cores mod <- mirt(Science, 1) booted <- boot.mirt(mod, parallel = 'snow', ncpus = parallel::detectCores()) booted } # }  #### # bootstrapped CIs for standardized factor loadings boot.fun <- function(mod){   so <- summary(mod, verbose=FALSE)   as.vector(so$rotF) }  # test to see if it works before running boot.fun(mod) #> [1] 0.5220496 0.5844686 0.8030199 0.5410276  # run booted.loads <- boot.mirt(mod, boot.fun=boot.fun) #> Warning: EM cycles terminated after 500 iterations. booted.loads #>  #> ORDINARY NONPARAMETRIC BOOTSTRAP #>  #>  #> Call: #> boot.mirt(x = mod, boot.fun = boot.fun) #>  #>  #> Bootstrap Statistics : #>      original       bias    std. error #> t1* 0.5220496  0.005643174  0.08294517 #> t2* 0.5844686 -0.006140366  0.06189828 #> t3* 0.8030199 -0.006557025  0.07143835 #> t4* 0.5410276  0.011377983  0.08396097  # }"},{"path":"https://philchalmers.github.io/mirt/reference/coef-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract raw coefs from model object — coef-method","title":"Extract raw coefs from model object — coef-method","text":"Return list (data.frame) raw item group level coefficients. Note output console rounded three digits, returned list objects . Hence, elements cfs <- coef(mod); cfs[[1]] contain non-rounded results (useful simulations).","code":""},{"path":"https://philchalmers.github.io/mirt/reference/coef-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract raw coefs from model object — coef-method","text":"","code":"# S4 method for class 'SingleGroupClass' coef(   object,   CI = 0.95,   printSE = FALSE,   rotate = \"none\",   Target = NULL,   IRTpars = FALSE,   rawug = FALSE,   as.data.frame = FALSE,   simplify = FALSE,   unique = FALSE,   verbose = TRUE,   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/coef-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract raw coefs from model object — coef-method","text":"object object class SingleGroupClass, MultipleGroupClass, MixedClass CI amount converged used compute confidence intervals; default 95 percent confidence intervals printSE logical; print standard errors instead confidence intervals? IRTpars = TRUE delta method used compute associated standard errors mirt's default slope-intercept form rotate see summary method details. default rotation 'none' Target dummy variable matrix indicting target rotation pattern IRTpars logical; convert slope intercept parameters traditional IRT parameters? applicable unidimensional models models simple structure (.e., one non-zero slope). suitable ACOV estimate computed fitted model, printSE = FALSE, suitable CIs included based delta method (applicable) rawug logical; return untransformed internal g u parameters? FALSE, g u's converted original format along delta standard errors .data.frame logical; convert list output data.frame instead? simplify logical; items parameter names (indicating class) collapsed matrix, list length 2 returned containing matrix item parameters group-level estimates unique return vector uniquely estimated parameters verbose logical; allow information printed console? ... additional arguments passed","code":""},{"path":"https://philchalmers.github.io/mirt/reference/coef-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract raw coefs from model object — coef-method","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/coef-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract raw coefs from model object — coef-method","text":"","code":"# \\donttest{ dat <- expand.table(LSAT7) x <- mirt(dat, 1) #>  coef(x) #> $Item.1 #>        a1     d g u #> par 0.988 1.856 0 1 #>  #> $Item.2 #>        a1     d g u #> par 1.081 0.808 0 1 #>  #> $Item.3 #>        a1     d g u #> par 1.706 1.804 0 1 #>  #> $Item.4 #>        a1     d g u #> par 0.765 0.486 0 1 #>  #> $Item.5 #>        a1     d g u #> par 0.736 1.855 0 1 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0      1 #>  coef(x, IRTpars = TRUE) #> $Item.1 #>         a      b g u #> par 0.988 -1.879 0 1 #>  #> $Item.2 #>         a      b g u #> par 1.081 -0.748 0 1 #>  #> $Item.3 #>         a      b g u #> par 1.706 -1.058 0 1 #>  #> $Item.4 #>         a      b g u #> par 0.765 -0.635 0 1 #>  #> $Item.5 #>         a     b g u #> par 0.736 -2.52 0 1 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0      1 #>  coef(x, simplify = TRUE) #> $items #>           a1     d g u #> Item.1 0.988 1.856 0 1 #> Item.2 1.081 0.808 0 1 #> Item.3 1.706 1.804 0 1 #> Item.4 0.765 0.486 0 1 #> Item.5 0.736 1.855 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>   #with computed information matrix x <- mirt(dat, 1, SE = TRUE) #>  #>  #> Calculating information matrix... coef(x) #> $Item.1 #>            a1     d  g  u #> par     0.988 1.856  0  1 #> CI_2.5  0.641 1.598 NA NA #> CI_97.5 1.335 2.114 NA NA #>  #> $Item.2 #>            a1     d  g  u #> par     1.081 0.808  0  1 #> CI_2.5  0.750 0.629 NA NA #> CI_97.5 1.412 0.987 NA NA #>  #> $Item.3 #>            a1     d  g  u #> par     1.706 1.804  0  1 #> CI_2.5  1.078 1.404 NA NA #> CI_97.5 2.334 2.205 NA NA #>  #> $Item.4 #>            a1     d  g  u #> par     0.765 0.486  0  1 #> CI_2.5  0.502 0.339 NA NA #> CI_97.5 1.028 0.633 NA NA #>  #> $Item.5 #>            a1     d  g  u #> par     0.736 1.855  0  1 #> CI_2.5  0.440 1.630 NA NA #> CI_97.5 1.032 2.079 NA NA #>  #> $GroupPars #>         MEAN_1 COV_11 #> par          0      1 #> CI_2.5      NA     NA #> CI_97.5     NA     NA #>  coef(x, printSE = TRUE) #> $Item.1 #>        a1     d logit(g) logit(u) #> par 0.988 1.856     -999      999 #> SE  0.177 0.131       NA       NA #>  #> $Item.2 #>        a1     d logit(g) logit(u) #> par 1.081 0.808     -999      999 #> SE  0.169 0.091       NA       NA #>  #> $Item.3 #>        a1     d logit(g) logit(u) #> par 1.706 1.804     -999      999 #> SE  0.320 0.204       NA       NA #>  #> $Item.4 #>        a1     d logit(g) logit(u) #> par 0.765 0.486     -999      999 #> SE  0.134 0.075       NA       NA #>  #> $Item.5 #>        a1     d logit(g) logit(u) #> par 0.736 1.855     -999      999 #> SE  0.151 0.114       NA       NA #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0      1 #> SE      NA     NA #>  coef(x, as.data.frame = TRUE) #>                        par    CI_2.5   CI_97.5 #> Item.1.a1        0.9879254 0.6405319 1.3353189 #> Item.1.d         1.8560605 1.5983450 2.1137759 #> Item.1.g         0.0000000        NA        NA #> Item.1.u         1.0000000        NA        NA #> Item.2.a1        1.0808847 0.7500334 1.4117360 #> Item.2.d         0.8079786 0.6291264 0.9868309 #> Item.2.g         0.0000000        NA        NA #> Item.2.u         1.0000000        NA        NA #> Item.3.a1        1.7058006 1.0778209 2.3337803 #> Item.3.d         1.8042187 1.4035692 2.2048683 #> Item.3.g         0.0000000        NA        NA #> Item.3.u         1.0000000        NA        NA #> Item.4.a1        0.7651853 0.5022681 1.0281025 #> Item.4.d         0.4859966 0.3391601 0.6328331 #> Item.4.g         0.0000000        NA        NA #> Item.4.u         1.0000000        NA        NA #> Item.5.a1        0.7357980 0.4395386 1.0320574 #> Item.5.d         1.8545127 1.6302516 2.0787739 #> Item.5.g         0.0000000        NA        NA #> Item.5.u         1.0000000        NA        NA #> GroupPars.MEAN_1 0.0000000        NA        NA #> GroupPars.COV_11 1.0000000        NA        NA  #two factors x2 <- mirt(Science, 2) #>  coef(x2) #> $Comfort #>         a1    a2    d1    d2     d3 #> par -1.335 0.097 5.211 2.866 -1.603 #>  #> $Work #>         a1    a2    d1    d2     d3 #> par -0.879 1.853 3.704 1.153 -2.904 #>  #> $Future #>        a1    a2    d1    d2     d3 #> par -1.47 1.165 4.663 1.957 -1.736 #>  #> $Benefit #>         a1 a2    d1    d2     d3 #> par -1.722  0 3.989 1.195 -2.044 #>  #> $GroupPars #>     MEAN_1 MEAN_2 COV_11 COV_21 COV_22 #> par      0      0      1      0      1 #>  coef(x2, rotate = 'varimax') #>  #> Rotation:  varimax  #>  #> $Comfort #>        a1    a2    d1    d2     d3 #> par 1.254 0.468 5.211 2.866 -1.603 #>  #> $Work #>        a1    a2    d1    d2     d3 #> par 0.323 2.025 3.704 1.153 -2.904 #>  #> $Future #>        a1    a2    d1    d2     d3 #> par 1.083 1.531 4.663 1.957 -1.736 #>  #> $Benefit #>        a1    a2    d1    d2     d3 #> par 1.653 0.484 3.989 1.195 -2.044 #>  #> $GroupPars #>     MEAN_1 MEAN_2 COV_11 COV_21 COV_22 #> par      0      0      1      0      1 #>   # }"},{"path":"https://philchalmers.github.io/mirt/reference/createGroup.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a user defined group-level object with correct generic functions — createGroup","title":"Create a user defined group-level object with correct generic functions — createGroup","text":"Initializes proper S4 class methods necessary mirt functions use estimation defining customized group-level functions. use defined objects pass mirt(..., customGroup = OBJECT) command, ensure class parameters properly labelled.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/createGroup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a user defined group-level object with correct generic functions — createGroup","text":"","code":"createGroup(   par,   est,   den,   nfact,   standardize = FALSE,   gr = NULL,   hss = NULL,   gen = NULL,   lbound = NULL,   ubound = NULL,   derivType = \"Richardson\" )"},{"path":"https://philchalmers.github.io/mirt/reference/createGroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a user defined group-level object with correct generic functions — createGroup","text":"par named vector starting values parameters est logical vector indicating parameters freely estimated default den probability density function given Theta/ability values. First input contains vector defined parameters second input must matrix called Theta. Function also must return numeric vector object corresponding associated densities row Theta input nfact number factors required model. E.g., unidimensional models one dimension integration nfact = 1 standardize logical; use standardization quadrature table method proposed Woods Thissen (2006)? TRUE, logical elements named 'MEAN_1' 'COV_11' can included parameter vector, values set FALSE est input E-table standardized fixed values (e.g., par <- c(a1=1, d=0, MEAN_1=0, COV_11=1) est <- c(TRUE, TRUE, FALSE, FALSE) standardize E-table 0 mean unit variance) gr gradient function (vector first derivatives) log-likelihood used estimation. function must form gr(x, Theta), x object defined createGroup() Theta matrix latent trait parameters hss Hessian function (matrix second derivatives) log-likelihood used estimation. specified numeric approximation used. input identical gr argument gen function used GenRandomPars = TRUE passed estimation function generate random starting values. Function must form function(object) ... must return vector properties equivalent par object. NULL, parameters remain defined starting values default lbound optional vector indicating lower bounds parameters. specified bounds set -Inf ubound optional vector indicating lower bounds parameters. specified bounds set Inf derivType gr hss terms specified type used obtain numerically. Default 'Richardson'","code":""},{"path":"https://philchalmers.github.io/mirt/reference/createGroup.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a user defined group-level object with correct generic functions — createGroup","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/createGroup.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a user defined group-level object with correct generic functions — createGroup","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/createGroup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a user defined group-level object with correct generic functions — createGroup","text":"","code":"# normal density example, N(mu, sigma^2) den <- function(obj, Theta) dnorm(Theta, obj@par[1], sqrt(obj@par[2])) par <- c(mu = 0, sigma2 = .5) est <- c(FALSE, TRUE) lbound <- c(-Inf, 0) grp <- createGroup(par, est, den, nfact = 1, lbound=lbound)  dat <- expand.table(LSAT6) mod <- mirt(dat, 1, 'Rasch') #>  modcustom <- mirt(dat, 1, 'Rasch', customGroup=grp) #>   coef(mod) #> $Item_1 #>     a1     d g u #> par  1 2.731 0 1 #>  #> $Item_2 #>     a1     d g u #> par  1 0.999 0 1 #>  #> $Item_3 #>     a1    d g u #> par  1 0.24 0 1 #>  #> $Item_4 #>     a1     d g u #> par  1 1.307 0 1 #>  #> $Item_5 #>     a1   d g u #> par  1 2.1 0 1 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0  0.572 #>  coef(modcustom) #> $Item_1 #>     a1     d g u #> par  1 2.729 0 1 #>  #> $Item_2 #>     a1     d g u #> par  1 0.998 0 1 #>  #> $Item_3 #>     a1    d g u #> par  1 0.24 0 1 #>  #> $Item_4 #>     a1     d g u #> par  1 1.306 0 1 #>  #> $Item_5 #>     a1     d g u #> par  1 2.099 0 1 #>  #> $GroupPars #>     mu sigma2 #> par  0  0.569 #>"},{"path":"https://philchalmers.github.io/mirt/reference/createItem.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a user defined item with correct generic functions — createItem","title":"Create a user defined item with correct generic functions — createItem","text":"Initializes proper S4 class methods necessary mirt functions use estimation. use defined objects pass mirt(..., customItems = list()) command, ensure classes properly labelled unique list. Additionally, input mirt(..., customItemsData = list()) can also included specify additional item-level information better recycle custom-item definitions (e.g., supplying varying Q-matrices), list input must length number items. examples regarding function can used fitting unfolding-type models see Liu Chalmers (2018).","code":""},{"path":"https://philchalmers.github.io/mirt/reference/createItem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a user defined item with correct generic functions — createItem","text":"","code":"createItem(   name,   par,   est,   P,   gr = NULL,   hss = NULL,   gen = NULL,   lbound = NULL,   ubound = NULL,   derivType = \"Richardson\",   derivType.hss = \"Richardson\",   bytecompile = TRUE )"},{"path":"https://philchalmers.github.io/mirt/reference/createItem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a user defined item with correct generic functions — createItem","text":"name character indicating item class name defined par named vector starting values parameters est logical vector indicating parameters freely estimated default P probability trace function categories (first column category 1, second   category two, etc). First input contains vector item parameters, second input   must matrix called Theta, third input must number categories   called ncat, (optionally) fourth argument termed itemdata   may included containing  users specification information.   last optional input utilized within estimation functions   mirt via list input customItemsData   naturally recycle custom-item definitions. Therefore, inputs must form function(par, Theta, ncat){...} function(par, Theta, ncat, itemdata){...} valid; however, names arguements relavent. Finally, function must return matrix object category probabilities,   columns represent respective category gr gradient function (vector first derivatives) log-likelihood used estimation. function must form gr(x, Theta), x object defined createItem() Theta matrix latent trait parameters. Tabulated (EM) raw (MHRM) data located x@dat slot, used form complete data log-likelihood. specified numeric approximation used hss Hessian function (matrix second derivatives) log-likelihood used estimation. specified numeric approximation used (required MH-RM algorithm ). input identical gr argument gen function used GenRandomPars = TRUE passed estimation function generate random starting values. Function must form function(object) ... must return vector properties equivalent par object. NULL, parameters remain defined starting values default lbound optional vector indicating lower bounds parameters. specified bounds set -Inf ubound optional vector indicating lower bounds parameters. specified bounds set Inf derivType gr term specified type used obtain gradient numerically symbolically. Default 'Richardson' extrapolation method; see numerical_deriv details options. 'symbolic' supplied gradient computed using symbolical approach (potentially accurate method, though may fail depending P function defined) derivType.hss hss term specified type used obtain Hessian numerically. Default 'Richardson' extrapolation method; see numerical_deriv details options. 'symbolic' supplied Hessian computed using symbolical approach (potentially accurate method, though may fail depending P function defined) bytecompile logical; applicable, byte compile functions provided? Default TRUE provide","code":""},{"path":"https://philchalmers.github.io/mirt/reference/createItem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a user defined item with correct generic functions — createItem","text":"summary() function return proper standardized loadings since function sure handle (slopes defined !). Instead loadings .001 filled place-holders.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/createItem.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a user defined item with correct generic functions — createItem","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06 Liu, C.-W. Chalmers, R. P. (2018). Fitting item response unfolding models   Likert-scale data using mirt R. PLoS ONE, 13, 5.   doi:10.1371/journal.pone.0196292","code":""},{"path":"https://philchalmers.github.io/mirt/reference/createItem.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a user defined item with correct generic functions — createItem","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/createItem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a user defined item with correct generic functions — createItem","text":"","code":"# \\donttest{  name <- 'old2PL' par <- c(a = .5, b = -2) est <- c(TRUE, TRUE) P.old2PL <- function(par,Theta, ncat){      a <- par[1]      b <- par[2]      P1 <- 1 / (1 + exp(-1*a*(Theta - b)))      cbind(1-P1, P1) }  x <- createItem(name, par=par, est=est, P=P.old2PL)  # So, let's estimate it! dat <- expand.table(LSAT7) sv <- mirt(dat, 1, c(rep('2PL',4), 'old2PL'), customItems=list(old2PL=x), pars = 'values') tail(sv) #looks good #>    group   item     class   name parnum value lbound ubound   est const nconst #> 15   all Item.4      dich      g     15   0.0      0      1 FALSE  none   none #> 16   all Item.4      dich      u     16   1.0      0      1 FALSE  none   none #> 17   all Item.5    custom      a     17   0.5   -Inf    Inf  TRUE  none   none #> 18   all Item.5    custom      b     18  -2.0   -Inf    Inf  TRUE  none   none #> 19   all  GROUP GroupPars MEAN_1     19   0.0   -Inf    Inf FALSE  none   none #> 20   all  GROUP GroupPars COV_11     20   1.0      0    Inf FALSE  none   none #>    prior.type prior_1 prior_2 #> 15       none     NaN     NaN #> 16       none     NaN     NaN #> 17       none     NaN     NaN #> 18       none     NaN     NaN #> 19       none     NaN     NaN #> 20       none     NaN     NaN mod <- mirt(dat, 1, c(rep('2PL',4), 'old2PL'), customItems=list(old2PL=x)) #>  coef(mod) #> $Item.1 #>        a1     d g u #> par 0.989 1.856 0 1 #>  #> $Item.2 #>        a1     d g u #> par 1.081 0.808 0 1 #>  #> $Item.3 #>        a1     d g u #> par 1.703 1.803 0 1 #>  #> $Item.4 #>        a1     d g u #> par 0.766 0.486 0 1 #>  #> $Item.5 #>         a      b #> par 0.737 -2.518 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0      1 #>  mod2 <- mirt(dat, 1, c(rep('2PL',4), 'old2PL'), customItems=list(old2PL=x), method = 'MHRM') #> , Max-Change = 0.2000, Max-Change = 0.1181, Max-Change = 0.0997, Max-Change = 0.0507, Max-Change = 0.0517, Max-Change = 0.0408, Max-Change = 0.0306, Max-Change = 0.0181, Max-Change = 0.0508, Max-Change = 0.0376, Max-Change = 0.0376, Max-Change = 0.0422, Max-Change = 0.0672, Max-Change = 0.0461, Max-Change = 0.0406, Max-Change = 0.0409, Max-Change = 0.0421, Max-Change = 0.0262, Max-Change = 0.0280, Max-Change = 0.0325, Max-Change = 0.0308, Max-Change = 0.0616, Max-Change = 0.1016, Max-Change = 0.1420, Max-Change = 0.0328, Max-Change = 0.0294, Max-Change = 0.0073, Max-Change = 0.0408, Max-Change = 0.0465, Max-Change = 0.0230, Max-Change = 0.0984, Max-Change = 0.0730, Max-Change = 0.0847, Max-Change = 0.0413, Max-Change = 0.0344, Max-Change = 0.0533, Max-Change = 0.0179, Max-Change = 0.0099, Max-Change = 0.0445, Max-Change = 0.0294, Max-Change = 0.0415, Max-Change = 0.0512, Max-Change = 0.0322, Max-Change = 0.0326, Max-Change = 0.0537, Max-Change = 0.0124, Max-Change = 0.0285, Max-Change = 0.0206, Max-Change = 0.0230, Max-Change = 0.0248, Max-Change = 0.1203, Max-Change = 0.0214, Max-Change = 0.0321, Max-Change = 0.1221, Max-Change = 0.0744, Max-Change = 0.0355, Max-Change = 0.0427, Max-Change = 0.0216, Max-Change = 0.0300, Max-Change = 0.0323, Max-Change = 0.0341, Max-Change = 0.0383, Max-Change = 0.0571, Max-Change = 0.0120, Max-Change = 0.0231, Max-Change = 0.0425, Max-Change = 0.0676, Max-Change = 0.0799, Max-Change = 0.0301, Max-Change = 0.0567, Max-Change = 0.0441, Max-Change = 0.0617, Max-Change = 0.0684, Max-Change = 0.0211, Max-Change = 0.1073, Max-Change = 0.0279, Max-Change = 0.0202, Max-Change = 0.0424, Max-Change = 0.0365, Max-Change = 0.0259, Max-Change = 0.0489, Max-Change = 0.0694, Max-Change = 0.0689, Max-Change = 0.0307, Max-Change = 0.0195, Max-Change = 0.0546, Max-Change = 0.0117, Max-Change = 0.0779, Max-Change = 0.0536, Max-Change = 0.0410, Max-Change = 0.0445, Max-Change = 0.0359, Max-Change = 0.0329, Max-Change = 0.0169, Max-Change = 0.0282, Max-Change = 0.0233, Max-Change = 0.0502, Max-Change = 0.0365, Max-Change = 0.0371, Max-Change = 0.0291, Max-Change = 0.0135, Max-Change = 0.0377, Max-Change = 0.0695, Max-Change = 0.0456, Max-Change = 0.0557, Max-Change = 0.0327, Max-Change = 0.0933, Max-Change = 0.1188, Max-Change = 0.0280, Max-Change = 0.0324, Max-Change = 0.0245, Max-Change = 0.0206, Max-Change = 0.0582, Max-Change = 0.1457, Max-Change = 0.1511, Max-Change = 0.0209, Max-Change = 0.0267, Max-Change = 0.0446, Max-Change = 0.0215, Max-Change = 0.0342, Max-Change = 0.0302, Max-Change = 0.0250, Max-Change = 0.0243, Max-Change = 0.0328, Max-Change = 0.0501, Max-Change = 0.0469, Max-Change = 0.0334, Max-Change = 0.0397, Max-Change = 0.0432, Max-Change = 0.0359, Max-Change = 0.0453, Max-Change = 0.0531, Max-Change = 0.0292, Max-Change = 0.0746, Max-Change = 0.0277, Max-Change = 0.0428, Max-Change = 0.0360, Max-Change = 0.0192, Max-Change = 0.0417, Max-Change = 0.0985, Max-Change = 0.0430, Max-Change = 0.0719, Max-Change = 0.0375, Max-Change = 0.0897, Max-Change = 0.0965, Max-Change = 0.0335, Max-Change = 0.0142, Max-Change = 0.0691, Max-Change = 0.0262, Max-Change = 0.0221, Max-Change = 0.0268, Max-Change = 0.0380, Max-Change = 0.0164, Max-Change = 0.0363, Max-Change = 0.0327, Max-Change = 0.0249, Max-Change = 0.0424, Max-Change = 0.0251, Max-Change = 0.0268, Max-Change = 0.0135, Max-Change = 0.0284, Max-Change = 0.0227, Max-Change = 0.0602, Max-Change = 0.0376, Max-Change = 0.0923, Max-Change = 0.0242, Max-Change = 0.0351, Max-Change = 0.0323, Max-Change = 0.0183, Max-Change = 0.0798, Max-Change = 0.0240, Max-Change = 0.0152, Max-Change = 0.0306, Max-Change = 0.0358, Max-Change = 0.0224, Max-Change = 0.0456, Max-Change = 0.0368, Max-Change = 0.0433, Max-Change = 0.0282, Max-Change = 0.0515, Max-Change = 0.0197, Max-Change = 0.0383, Max-Change = 0.0347, Max-Change = 0.0552, Max-Change = 0.0335, Max-Change = 0.0451, Max-Change = 0.0781, Max-Change = 0.0216, Max-Change = 0.0632, Max-Change = 0.0692, Max-Change = 0.0258, Max-Change = 0.0163, Max-Change = 0.0691, Max-Change = 0.0801, Max-Change = 0.0167, Max-Change = 0.0222, Max-Change = 0.0589, Max-Change = 0.0476, Max-Change = 0.0379, Max-Change = 0.0200, Max-Change = 0.0338, Max-Change = 0.0330, Max-Change = 0.0485, Max-Change = 0.0172, Max-Change = 0.0572, Max-Change = 0.0768, Max-Change = 0.0778, Max-Change = 0.0265, Max-Change = 0.0154, Max-Change = 0.0443, Max-Change = 0.0493, Max-Change = 0.0453, Max-Change = 0.0535, Max-Change = 0.0715, Max-Change = 0.0221, Max-Change = 0.0111, Max-Change = 0.0247, Max-Change = 0.0247, Max-Change = 0.0241, Max-Change = 0.0272, Max-Change = 0.0306, Max-Change = 0.0162, Max-Change = 0.0221, Max-Change = 0.0294, Max-Change = 0.0372, Max-Change = 0.0296, Max-Change = 0.0488, Max-Change = 0.0391, Max-Change = 0.0507, Max-Change = 0.0285, Max-Change = 0.0618, Max-Change = 0.0331, Max-Change = 0.0732, Max-Change = 0.0846, Max-Change = 0.0608, Max-Change = 0.0069, Max-Change = 0.0398, Max-Change = 0.0189, Max-Change = 0.0586, Max-Change = 0.0618, Max-Change = 0.0484, Max-Change = 0.0347, Max-Change = 0.0301, Max-Change = 0.0289, Max-Change = 0.0393, Max-Change = 0.0335, Max-Change = 0.0359, Max-Change = 0.0273, Max-Change = 0.0726, Max-Change = 0.0130, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0356, gam = 0.1057, Max-Change = 0.0097, gam = 0.0780, Max-Change = 0.0097, gam = 0.0629, Max-Change = 0.0189, gam = 0.0532, Max-Change = 0.0062, gam = 0.0464, Max-Change = 0.0075, gam = 0.0413, Max-Change = 0.0093, gam = 0.0374, Max-Change = 0.0104, gam = 0.0342, Max-Change = 0.0023, gam = 0.0316, Max-Change = 0.0036, gam = 0.0294, Max-Change = 0.0027, gam = 0.0276, Max-Change = 0.0059, gam = 0.0260, Max-Change = 0.0041, gam = 0.0246, Max-Change = 0.0063, gam = 0.0233, Max-Change = 0.0052, gam = 0.0222, Max-Change = 0.0033, gam = 0.0212, Max-Change = 0.0020, gam = 0.0203, Max-Change = 0.0038, gam = 0.0195, Max-Change = 0.0046, gam = 0.0188, Max-Change = 0.0025, gam = 0.0181, Max-Change = 0.0020, gam = 0.0175, Max-Change = 0.0008, gam = 0.0169, Max-Change = 0.0059, gam = 0.0164, Max-Change = 0.0058, gam = 0.0159, Max-Change = 0.0049, gam = 0.0154, Max-Change = 0.0028, gam = 0.0150, Max-Change = 0.0015, gam = 0.0146, Max-Change = 0.0032, gam = 0.0142, Max-Change = 0.0028, gam = 0.0139, Max-Change = 0.0042, gam = 0.0135, Max-Change = 0.0025, gam = 0.0132, Max-Change = 0.0016, gam = 0.0129, Max-Change = 0.0025, gam = 0.0126, Max-Change = 0.0016, gam = 0.0124, Max-Change = 0.0036, gam = 0.0121, Max-Change = 0.0046, gam = 0.0119, Max-Change = 0.0026, gam = 0.0116, Max-Change = 0.0014, gam = 0.0114, Max-Change = 0.0016, gam = 0.0112, Max-Change = 0.0031, gam = 0.0110, Max-Change = 0.0015, gam = 0.0108, Max-Change = 0.0022, gam = 0.0106, Max-Change = 0.0009, gam = 0.0104, Max-Change = 0.0015, gam = 0.0102, Max-Change = 0.0025, gam = 0.0101, Max-Change = 0.0024, gam = 0.0099, Max-Change = 0.0014, gam = 0.0098, Max-Change = 0.0035, gam = 0.0096, Max-Change = 0.0030, gam = 0.0095, Max-Change = 0.0020, gam = 0.0093, Max-Change = 0.0007, gam = 0.0092, Max-Change = 0.0024, gam = 0.0091, Max-Change = 0.0014, gam = 0.0089, Max-Change = 0.0028, gam = 0.0088, Max-Change = 0.0025, gam = 0.0087, Max-Change = 0.0007, gam = 0.0086, Max-Change = 0.0009, gam = 0.0085, Max-Change = 0.0007 #>  #> Calculating log-likelihood... coef(mod2) #> $Item.1 #>        a1     d g u #> par 0.965 1.842 0 1 #>  #> $Item.2 #>        a1     d g u #> par 1.093 0.809 0 1 #>  #> $Item.3 #>        a1     d g u #> par 1.747 1.822 0 1 #>  #> $Item.4 #>        a1     d g u #> par 0.779 0.487 0 1 #>  #> $Item.5 #>         a      b #> par 0.752 -2.474 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0      1 #>   # same definition as above, but using symbolic derivative computations # (can be more accurate/stable) xs <- createItem(name, par=par, est=est, P=P.old2PL, derivType = 'symbolic') mod <- mirt(dat, 1, c(rep('2PL',4), 'old2PL'), customItems=list(old2PL=xs)) #>  coef(mod, simplify=TRUE) #> $items #>           a1     d  g  u     a      b #> Item.1 0.989 1.856  0  1    NA     NA #> Item.2 1.081 0.808  0  1    NA     NA #> Item.3 1.703 1.803  0  1    NA     NA #> Item.4 0.766 0.486  0  1    NA     NA #> Item.5    NA    NA NA NA 0.737 -2.518 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>   # several secondary functions supported M2(mod, calcNull=FALSE) #>             M2 df          p      RMSEA     RMSEA_5   RMSEA_95      SRMSR #> stats 11.93609  5 0.03567406 0.03726401 0.008942493 0.06496201 0.03195094 itemfit(mod) #>     item   S_X2 df.S_X2 RMSEA.S_X2 p.S_X2 #> 1 Item.1  4.750       2      0.037  0.093 #> 2 Item.2 14.441       2      0.079  0.001 #> 3 Item.3  1.266       2      0.000  0.531 #> 4 Item.4  5.241       2      0.040  0.073 #> 5 Item.5  0.941       2      0.000  0.625 fscores(mod, full.scores=FALSE) #>  #> Method:  EAP #>  #> Empirical Reliability: #>  #>     F1  #> 0.4521  #>       Item.1 Item.2 Item.3 Item.4 Item.5     F1 SE_F1 #>  [1,]      0      0      0      0      0 -1.870 0.693 #>  [2,]      0      0      0      0      1 -1.527 0.674 #>  [3,]      0      0      0      1      0 -1.514 0.673 #>  [4,]      0      0      0      1      1 -1.185 0.665 #>  [5,]      0      0      1      0      0 -1.096 0.665 #>  [6,]      0      0      1      0      1 -0.767 0.672 #>  [7,]      0      0      1      1      0 -0.754 0.673 #>  [8,]      0      0      1      1      1 -0.412 0.692 #>  [9,]      0      1      0      0      0 -1.372 0.668 #> [10,]      0      1      0      0      1 -1.045 0.666 #> [11,]      0      1      0      1      0 -1.032 0.666 #> [12,]      0      1      0      1      1 -0.702 0.675 #> [13,]      0      1      1      0      0 -0.610 0.680 #> [14,]      0      1      1      0      1 -0.258 0.704 #> [15,]      0      1      1      1      0 -0.244 0.705 #> [16,]      0      1      1      1      1  0.141 0.741 #> [17,]      1      0      0      0      0 -1.413 0.670 #> [18,]      1      0      0      0      1 -1.086 0.665 #> [19,]      1      0      0      1      0 -1.073 0.665 #> [20,]      1      0      0      1      1 -0.744 0.673 #> [21,]      1      0      1      0      0 -0.653 0.678 #> [22,]      1      0      1      0      1 -0.304 0.701 #> [23,]      1      0      1      1      0 -0.290 0.702 #> [24,]      1      0      1      1      1  0.090 0.736 #> [25,]      1      1      0      0      0 -0.933 0.667 #> [26,]      1      1      0      0      1 -0.600 0.680 #> [27,]      1      1      0      1      0 -0.587 0.681 #> [28,]      1      1      0      1      1 -0.233 0.706 #> [29,]      1      1      1      0      0 -0.132 0.715 #> [30,]      1      1      1      0      1  0.265 0.754 #> [31,]      1      1      1      1      0  0.282 0.755 #> [32,]      1      1      1      1      1  0.727 0.801 #> attr(,\"class\") #> [1] NA plot(mod)   # fit the same model, but specify gradient function explicitly (use of a browser() may be helpful) gr <- function(x, Theta){      # browser()      a <- x@par[1]      b <- x@par[2]      P <- probtrace(x, Theta)      PQ <- apply(P, 1, prod)      r_P <- x@dat / P      grad <- numeric(2)      grad[2] <- sum(-a * PQ * (r_P[,2] - r_P[,1]))      grad[1] <- sum((Theta - b) * PQ * (r_P[,2] - r_P[,1]))       ## check with internal numerical form to be safe      # numerical_deriv(x@par[x@est], mirt:::EML, obj=x, Theta=Theta)      grad }  x <- createItem(name, par=par, est=est, P=P.old2PL, gr=gr) mod <- mirt(dat, 1, c(rep('2PL',4), 'old2PL'), customItems=list(old2PL=x)) #>  coef(mod, simplify=TRUE) #> $items #>           a1     d  g  u     a      b #> Item.1 0.989 1.856  0  1    NA     NA #> Item.2 1.081 0.808  0  1    NA     NA #> Item.3 1.703 1.803  0  1    NA     NA #> Item.4 0.766 0.486  0  1    NA     NA #> Item.5    NA    NA NA NA 0.737 -2.518 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>   ### non-linear name <- 'nonlin' par <- c(a1 = .5, a2 = .1, d = 0) est <- c(TRUE, TRUE, TRUE) P.nonlin <- function(par,Theta, ncat=2){      a1 <- par[1]      a2 <- par[2]      d <- par[3]      P1 <- 1 / (1 + exp(-1*(a1*Theta + a2*Theta^2 + d)))      cbind(1-P1, P1) }  x2 <- createItem(name, par=par, est=est, P=P.nonlin)  mod <- mirt(dat, 1, c(rep('2PL',4), 'nonlin'), customItems=list(nonlin=x2)) #>  coef(mod) #> $Item.1 #>        a1     d g u #> par 0.984 1.854 0 1 #>  #> $Item.2 #>        a1     d g u #> par 1.087 0.809 0 1 #>  #> $Item.3 #>        a1     d g u #> par 1.704 1.803 0 1 #>  #> $Item.4 #>        a1     d g u #> par 0.762 0.486 0 1 #>  #> $Item.5 #>        a1    a2     d #> par 0.806 0.065 1.818 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0      1 #>   ### nominal response model (Bock 1972 version) Tnom.dev <- function(ncat) {    T <- matrix(1/ncat, ncat, ncat - 1)    diag(T[-1, ]) <-  diag(T[-1, ]) - 1    return(T) }  name <- 'nom' par <- c(alp=c(3,0,-3),gam=rep(.4,3)) est <- rep(TRUE, length(par)) P.nom <- function(par, Theta, ncat){    alp <- par[1:(ncat-1)]    gam <- par[ncat:length(par)]    a <- Tnom.dev(ncat) %*% alp    c <- Tnom.dev(ncat) %*% gam    z <- matrix(0, nrow(Theta), ncat)    for(i in 1:ncat)        z[,i] <- a[i] * Theta + c[i]    P <- exp(z) / rowSums(exp(z))    P }  nom1 <- createItem(name, par=par, est=est, P=P.nom) nommod <- mirt(Science, 1, 'nom1', customItems=list(nom1=nom1)) #>  coef(nommod) #> $Comfort #>       alp1   alp2   alp3   gam1   gam2   gam3 #> par -1.552 -2.015 -3.024 -3.639 -5.905 -4.533 #>  #> $Work #>      alp1   alp2   alp3   gam1   gam2   gam3 #> par -0.58 -1.262 -2.523 -1.464 -2.327 -0.326 #>  #> $Future #>       alp1 alp2   alp3   gam1   gam2  gam3 #> par -1.559 -3.8 -6.118 -3.676 -5.875 -3.96 #>  #> $Benefit #>       alp1   alp2   alp3   gam1   gam2   gam3 #> par -0.808 -1.358 -2.338 -2.145 -2.912 -1.622 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0      1 #>  Tnom.dev(4) %*% coef(nommod)[[1]][1:3] #a #>             [,1] #> [1,] -1.64770841 #> [2,] -0.09534806 #> [3,]  0.36680247 #> [4,]  1.37625400 Tnom.dev(4) %*% coef(nommod)[[1]][4:6] #d #>            [,1] #> [1,] -3.5191097 #> [2,]  0.1195514 #> [3,]  2.3861166 #> [4,]  1.0134416  # }"},{"path":"https://philchalmers.github.io/mirt/reference/deAyala.html","id":null,"dir":"Reference","previous_headings":"","what":"Description of deAyala data — deAyala","title":"Description of deAyala data — deAyala","text":"Mathematics data de Ayala (2009; pg. 14); 5 item dataset table format.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/deAyala.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Description of deAyala data — deAyala","text":"de Ayala, R. J. (2009). theory practice item response theory. Guilford Press.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/deAyala.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Description of deAyala data — deAyala","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/deAyala.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Description of deAyala data — deAyala","text":"","code":"# \\donttest{ dat <- expand.table(deAyala) head(dat) #>   Item.1 Item.2 Item.3 Item.4 Item.5 #> 1      0      0      0      0      0 #> 2      0      0      0      0      0 #> 3      0      0      0      0      0 #> 4      0      0      0      0      0 #> 5      0      0      0      0      0 #> 6      0      0      0      0      0 itemstats(dat) #> $overall #>      N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  19601            2.912          1.434 0.233 0.074 0.608     0.898 #>  #> $itemstats #>            N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item.1 19601 2 0.887 0.316   0.447         0.246       0.605 #> Item.2 19601 2 0.644 0.479   0.688         0.439       0.510 #> Item.3 19601 2 0.566 0.496   0.680         0.416       0.523 #> Item.4 19601 2 0.427 0.495   0.673         0.405       0.529 #> Item.5 19601 2 0.387 0.487   0.602         0.312       0.581 #>  #> $proportions #>            0     1 #> Item.1 0.113 0.887 #> Item.2 0.356 0.644 #> Item.3 0.434 0.566 #> Item.4 0.573 0.427 #> Item.5 0.613 0.387 #>   # }"},{"path":"https://philchalmers.github.io/mirt/reference/draw_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw plausible parameter instantiations from a given model — draw_parameters","title":"Draw plausible parameter instantiations from a given model — draw_parameters","text":"Draws plausible parameters model using parametric sampling (information matrix computed) via bootstrap sampling. Primarily use DRF function.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/draw_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw plausible parameter instantiations from a given model — draw_parameters","text":"","code":"draw_parameters(   mod,   draws,   method = c(\"parametric\", \"boostrap\"),   redraws = 20,   verbose = FALSE,   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/draw_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw plausible parameter instantiations from a given model — draw_parameters","text":"mod estimated single multiple-group model draws number draws obtain method type plausible values obtain. Can 'parametric', parametric sampling scheme uses estimated information matrix, 'boostrap' obtain values boot function. Default 'parametric' redraws number redraws perform given parameteric sample satisfy upper lower parameter bounds. valid set found within number draws error thrown verbose logical; include additional information console? ... additional arguments passed","code":""},{"path":"https://philchalmers.github.io/mirt/reference/draw_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw plausible parameter instantiations from a given model — draw_parameters","text":"returns draws x p matrix plausible parameters, row correspeonds single   set","code":""},{"path":"https://philchalmers.github.io/mirt/reference/draw_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw plausible parameter instantiations from a given model — draw_parameters","text":"","code":"# \\donttest{ set.seed(1234) n <- 40 N <- 500  # only first 5 items as anchors model <- 'F = 1-40           CONSTRAINB = (1-5, a1), (1-5, d)'  a <- matrix(1, n) d <- matrix(rnorm(n), n) group <- c(rep('Group_1', N), rep('Group_2', N))  ## ------------- # groups completely equal dat1 <- simdata(a, d, N, itemtype = 'dich') dat2 <- simdata(a, d, N, itemtype = 'dich') dat <- rbind(dat1, dat2) mod <- multipleGroup(dat, model, group=group, SE=TRUE,                      invariance=c('free_means', 'free_var')) #>  #>  #> Calculating information matrix...  param_set <- draw_parameters(mod, 100) head(param_set) #>           [,1]      [,2] [,3] [,4]      [,5]      [,6] [,7] [,8]     [,9] #> [1,] 1.1391483 -1.262734    0    1 1.0429570 0.4288435    0    1 1.426608 #> [2,] 1.0484967 -1.270230    0    1 1.2642261 0.4139742    0    1 1.055071 #> [3,] 0.9015559 -1.120842    0    1 1.1142861 0.2913104    0    1 1.179315 #> [4,] 1.2083665 -1.252647    0    1 1.2302625 0.3839666    0    1 1.282218 #> [5,] 1.0422827 -1.129914    0    1 1.0267393 0.4106227    0    1 1.109890 #> [6,] 0.9569286 -1.073822    0    1 0.8923384 0.5172578    0    1 1.122109 #>          [,10] [,11] [,12]     [,13]     [,14] [,15] [,16]     [,17]     [,18] #> [1,] 1.3571747     0     1 1.3228956 -2.259732     0     1 0.7230044 0.4307506 #> [2,] 0.9838252     0     1 1.1902988 -2.265339     0     1 0.7787847 0.6617051 #> [3,] 1.1912044     0     1 1.1822386 -2.236731     0     1 0.9837777 0.5259832 #> [4,] 0.9824300     0     1 1.0777324 -2.368948     0     1 0.8211154 0.3825540 #> [5,] 1.0501543     0     1 1.1938541 -2.170218     0     1 0.7517767 0.3950822 #> [6,] 1.3031493     0     1 0.9314969 -2.084266     0     1 0.8255591 0.5518456 #>      [,19] [,20]    [,21]     [,22] [,23] [,24]    [,25]      [,26] [,27] [,28] #> [1,]     0     1 1.163287 0.4935805     0     1 1.138408 -0.4730967     0     1 #> [2,]     0     1 1.295991 0.2962779     0     1 1.277705 -0.3843515     0     1 #> [3,]     0     1 1.393149 0.4957497     0     1 1.207929 -0.5509638     0     1 #> [4,]     0     1 1.221361 0.2570856     0     1 1.050326 -0.5914620     0     1 #> [5,]     0     1 1.051667 0.1174200     0     1 1.302897 -0.4298341     0     1 #> [6,]     0     1 1.066978 0.3894473     0     1 1.192809 -0.4857318     0     1 #>          [,29]      [,30] [,31] [,32]     [,33]      [,34] [,35] [,36] #> [1,] 1.3527927 -0.5621654     0     1 0.8924490 -0.5117369     0     1 #> [2,] 1.1797525 -0.5450951     0     1 0.9312760 -0.4114297     0     1 #> [3,] 1.4737991 -0.6303803     0     1 0.8593670 -0.4383557     0     1 #> [4,] 1.0532493 -0.6968834     0     1 1.0448990 -0.4547611     0     1 #> [5,] 0.9259638 -0.5687452     0     1 0.8781231 -0.6390878     0     1 #> [6,] 1.4960325 -0.4478350     0     1 0.8747685 -0.4139600     0     1 #>          [,37]      [,38] [,39] [,40]     [,41]      [,42] [,43] [,44] #> [1,] 1.0394553 -0.9996527     0     1 1.3385259 -0.4398979     0     1 #> [2,] 0.8843201 -0.9601152     0     1 1.0098380 -0.4068918     0     1 #> [3,] 1.0472870 -0.8472980     0     1 1.0328674 -0.4165800     0     1 #> [4,] 1.0481757 -1.1208763     0     1 1.5198539 -0.3905815     0     1 #> [5,] 0.8323413 -0.7925520     0     1 0.9477638 -0.4690871     0     1 #> [6,] 0.8903164 -0.8060033     0     1 1.1486378 -0.5070993     0     1 #>          [,45]      [,46] [,47] [,48]     [,49]      [,50] [,51] [,52] #> [1,] 1.0213159 -1.0562492     0     1 1.2856206 -0.9979787     0     1 #> [2,] 1.0863032 -0.9086148     0     1 1.1838084 -0.6952002     0     1 #> [3,] 1.3031167 -1.0691703     0     1 1.0733004 -0.7782127     0     1 #> [4,] 1.2671267 -1.2655045     0     1 1.0755923 -0.8150892     0     1 #> [5,] 0.9003792 -0.8236895     0     1 1.0510657 -0.7829129     0     1 #> [6,] 0.7936887 -0.8023501     0     1 0.8012048 -0.7711545     0     1 #>          [,53]      [,54] [,55] [,56]    [,57]     [,58] [,59] [,60]     [,61] #> [1,] 0.8176167 0.14318947     0     1 1.300685 1.0884976     0     1 0.8592561 #> [2,] 0.9589934 0.23632198     0     1 1.465501 1.0258817     0     1 1.1314657 #> [3,] 0.8126472 0.21273220     0     1 1.384537 1.0716981     0     1 0.8341391 #> [4,] 0.9141176 0.12657353     0     1 1.376907 0.9620398     0     1 0.9868454 #> [5,] 0.9342273 0.07780975     0     1 1.084790 1.0487968     0     1 0.9410801 #> [6,] 1.0545787 0.01144851     0     1 1.368823 1.3333772     0     1 1.0745862 #>            [,62] [,63] [,64]     [,65]      [,66] [,67] [,68]    [,69] #> [1,] -0.11398977     0     1 0.8092362 -0.5233638     0     1 1.313814 #> [2,] -0.02999061     0     1 1.0429873 -0.5469506     0     1 1.241366 #> [3,] -0.11669005     0     1 1.2888696 -0.5121943     0     1 1.274844 #> [4,] -0.21986790     0     1 1.1642875 -0.7154811     0     1 1.077224 #> [5,]  0.06666290     0     1 0.9142215 -0.4847582     0     1 1.226571 #> [6,]  0.11548131     0     1 0.8656718 -0.3201650     0     1 1.139974 #>           [,70] [,71] [,72]     [,73]      [,74] [,75] [,76]    [,77]    [,78] #> [1,] -0.9808331     0     1 1.0888395 -0.7741633     0     1 1.178652 2.567549 #> [2,] -0.9901081     0     1 1.0017605 -0.5739486     0     1 1.713045 3.165311 #> [3,] -1.1133870     0     1 0.8404789 -0.5877353     0     1 1.559142 2.637752 #> [4,] -0.9457014     0     1 0.9973526 -0.5775381     0     1 1.482782 2.682691 #> [5,] -1.0808264     0     1 1.0079996 -0.6276290     0     1 1.150029 2.552863 #> [6,] -0.7694778     0     1 1.3709521 -0.6365566     0     1 1.572618 2.960950 #>      [,79] [,80]     [,81]         [,82] [,83] [,84]     [,85]      [,86] [,87] #> [1,]     0     1 0.9749305  0.1262429236     0     1 1.2569358 -0.6753280     0 #> [2,]     0     1 0.6378724 -0.0416338706     0     1 1.3503421 -0.6989674     0 #> [3,]     0     1 1.0769431  0.0747536323     0     1 1.1304521 -0.4273371     0 #> [4,]     0     1 0.9466751  0.0001031707     0     1 1.2338620 -0.7305857     0 #> [5,]     0     1 0.9646448  0.0222661239     0     1 0.8675040 -0.5533663     0 #> [6,]     0     1 0.8953228  0.0550655416     0     1 0.9862147 -0.5061780     0 #>      [,88]     [,89]      [,90] [,91] [,92]     [,93]     [,94] [,95] [,96] #> [1,]     1 0.8943719 -0.3695982     0     1 1.1414398 0.4496614     0     1 #> [2,]     1 0.8856734 -0.3901241     0     1 1.1720906 0.4237425     0     1 #> [3,]     1 0.7230547 -0.4177326     0     1 1.1242046 0.3721096     0     1 #> [4,]     1 0.7502933 -0.4709276     0     1 1.1538624 0.5534905     0     1 #> [5,]     1 0.8277912 -0.5723144     0     1 0.9200630 0.4596039     0     1 #> [6,]     1 0.8063404 -0.2832000     0     1 0.9777813 0.4521504     0     1 #>          [,97]      [,98] [,99] [,100]   [,101]    [,102] [,103] [,104] #> [1,] 0.9558493 -0.6142083     0      1 1.345436 -1.290430      0      1 #> [2,] 1.1158185 -0.5876543     0      1 1.575489 -1.563281      0      1 #> [3,] 1.2789162 -0.6620510     0      1 1.565974 -1.553429      0      1 #> [4,] 1.0295191 -0.6704559     0      1 1.205470 -1.614799      0      1 #> [5,] 0.9924574 -0.5624854     0      1 1.092117 -1.555365      0      1 #> [6,] 1.0533410 -0.3613626     0      1 1.402935 -1.392786      0      1 #>        [,105]    [,106] [,107] [,108]    [,109]     [,110] [,111] [,112] #> [1,] 1.371332 0.8212177      0      1 1.0591471 -0.7177690      0      1 #> [2,] 1.387874 0.6305876      0      1 1.2003535 -0.9511692      0      1 #> [3,] 1.236606 0.5940211      0      1 0.9270756 -0.9554089      0      1 #> [4,] 1.229710 0.5414306      0      1 0.8022847 -0.8891033      0      1 #> [5,] 1.279885 0.9269728      0      1 1.0720169 -1.0762113      0      1 #> [6,] 1.553092 1.0841679      0      1 1.3316026 -0.9780309      0      1 #>         [,113]      [,114] [,115] [,116]    [,117]     [,118] [,119] [,120] #> [1,] 1.3841756 -0.11060699      0      1 0.9359201 -0.9057253      0      1 #> [2,] 1.2721103 -0.12842834      0      1 1.1714803 -0.9517779      0      1 #> [3,] 0.9154547 -0.25247189      0      1 1.2103058 -0.9697586      0      1 #> [4,] 1.2261748 -0.23379251      0      1 1.0271747 -0.7794432      0      1 #> [5,] 1.3606454 -0.11402304      0      1 0.9669171 -0.8006616      0      1 #> [6,] 1.1510466 -0.05004385      0      1 0.8964734 -0.7972526      0      1 #>         [,121]   [,122] [,123] [,124]    [,125]      [,126] [,127] [,128] #> [1,] 1.0723199 1.231363      0      1 0.9407801 -0.32888706      0      1 #> [2,] 1.0880423 1.285115      0      1 1.0321004 -0.34028929      0      1 #> [3,] 1.3211033 1.525651      0      1 0.9438052 -0.27036514      0      1 #> [4,] 0.7331608 1.299447      0      1 1.0681655 -0.30187607      0      1 #> [5,] 1.1344802 1.469861      0      1 0.7784913 -0.10341687      0      1 #> [6,] 0.9448852 1.203271      0      1 0.8675714 -0.06169187      0      1 #>         [,129]     [,130] [,131] [,132]    [,133]     [,134] [,135] [,136] #> [1,] 0.8582874 -0.5372013      0      1 1.0455382 -0.5890014      0      1 #> [2,] 1.0358113 -0.5796357      0      1 0.7891645 -0.4892293      0      1 #> [3,] 1.0376528 -0.5784212      0      1 1.0742268 -0.7452434      0      1 #> [4,] 0.9488976 -0.7974830      0      1 0.8301226 -0.6310398      0      1 #> [5,] 0.7512012 -0.7169425      0      1 0.8355660 -0.4990204      0      1 #> [6,] 1.2407201 -0.6411234      0      1 1.0449233 -0.4900304      0      1 #>         [,137]    [,138] [,139] [,140]    [,141]     [,142] [,143] [,144] #> [1,] 1.2294920 -1.652615      0      1 0.8113578 -1.0591070      0      1 #> [2,] 0.9020178 -1.372767      0      1 0.9551101 -1.1610801      0      1 #> [3,] 1.0222270 -1.510696      0      1 0.8123737 -0.9439134      0      1 #> [4,] 0.7451938 -1.646804      0      1 0.9577529 -1.1057927      0      1 #> [5,] 0.9055046 -1.493831      0      1 0.8405730 -0.9015825      0      1 #> [6,] 1.0238206 -1.606561      0      1 0.5875165 -0.6929282      0      1 #>         [,145]    [,146] [,147] [,148]   [,149]    [,150] [,151] [,152] #> [1,] 0.9904563 -2.317328      0      1 1.117666 -1.358481      0      1 #> [2,] 1.1253025 -2.307848      0      1 1.051013 -1.437488      0      1 #> [3,] 1.1460402 -2.378569      0      1 1.337640 -1.418852      0      1 #> [4,] 1.2316904 -2.440186      0      1 1.103262 -1.415161      0      1 #> [5,] 1.2664414 -2.624070      0      1 1.225435 -1.484993      0      1 #> [6,] 1.1905030 -2.587987      0      1 1.003452 -1.142934      0      1 #>         [,153]     [,154] [,155] [,156]    [,157]     [,158] [,159] [,160] #> [1,] 1.0051995 -0.1446553      0      1 1.2271219 -0.2833820      0      1 #> [2,] 0.7331594 -0.1336442      0      1 0.8868186 -0.3848605      0      1 #> [3,] 0.7006688 -0.1968375      0      1 1.1800772 -0.3825698      0      1 #> [4,] 0.7622295 -0.2943384      0      1 1.0171924 -0.2595975      0      1 #> [5,] 0.7589873 -0.3463519      0      1 0.9470745 -0.4106848      0      1 #> [6,] 0.8812607 -0.1017558      0      1 1.1799064 -0.2237318      0      1 #>      [,161] [,162]    [,163]    [,164] [,165] [,166]    [,167]    [,168] [,169] #> [1,]      0      1 1.1391483 -1.262734      0      1 1.0429570 0.4288435      0 #> [2,]      0      1 1.0484967 -1.270230      0      1 1.2642261 0.4139742      0 #> [3,]      0      1 0.9015559 -1.120842      0      1 1.1142861 0.2913104      0 #> [4,]      0      1 1.2083665 -1.252647      0      1 1.2302625 0.3839666      0 #> [5,]      0      1 1.0422827 -1.129914      0      1 1.0267393 0.4106227      0 #> [6,]      0      1 0.9569286 -1.073822      0      1 0.8923384 0.5172578      0 #>      [,170]   [,171]    [,172] [,173] [,174]    [,175]    [,176] [,177] [,178] #> [1,]      1 1.426608 1.3571747      0      1 1.3228956 -2.259732      0      1 #> [2,]      1 1.055071 0.9838252      0      1 1.1902988 -2.265339      0      1 #> [3,]      1 1.179315 1.1912044      0      1 1.1822386 -2.236731      0      1 #> [4,]      1 1.282218 0.9824300      0      1 1.0777324 -2.368948      0      1 #> [5,]      1 1.109890 1.0501543      0      1 1.1938541 -2.170218      0      1 #> [6,]      1 1.122109 1.3031493      0      1 0.9314969 -2.084266      0      1 #>         [,179]    [,180] [,181] [,182]    [,183]    [,184] [,185] [,186] #> [1,] 0.7230044 0.4307506      0      1 0.5769400 0.3785568      0      1 #> [2,] 0.7787847 0.6617051      0      1 0.9951140 0.5035113      0      1 #> [3,] 0.9837777 0.5259832      0      1 0.6653239 0.2314147      0      1 #> [4,] 0.8211154 0.3825540      0      1 0.9269246 0.3332767      0      1 #> [5,] 0.7517767 0.3950822      0      1 0.6941908 0.4616564      0      1 #> [6,] 0.8255591 0.5518456      0      1 0.8832430 0.6587134      0      1 #>         [,187]     [,188] [,189] [,190]    [,191]     [,192] [,193] [,194] #> [1,] 1.1773545 -0.5980234      0      1 0.8270737 -0.3566087      0      1 #> [2,] 1.2006478 -0.4580348      0      1 1.2312037 -0.4468948      0      1 #> [3,] 0.9915550 -0.4397290      0      1 0.7832430 -0.3698797      0      1 #> [4,] 0.8631297 -0.6454328      0      1 0.9260373 -0.5538133      0      1 #> [5,] 1.1585987 -0.5414463      0      1 0.9432157 -0.4511684      0      1 #> [6,] 1.1344615 -0.1556385      0      1 0.8387850 -0.2676433      0      1 #>         [,195]     [,196] [,197] [,198]    [,199]     [,200] [,201] [,202] #> [1,] 0.7955699 -0.6940803      0      1 1.1881239 -0.8672510      0      1 #> [2,] 1.0363203 -0.6676152      0      1 0.9175631 -0.8380532      0      1 #> [3,] 0.8495424 -0.4471806      0      1 1.0530127 -0.7772087      0      1 #> [4,] 0.6804526 -0.7378925      0      1 0.9491316 -0.8842658      0      1 #> [5,] 0.8446033 -0.3752518      0      1 0.7418598 -0.4362928      0      1 #> [6,] 0.7291273 -0.3666299      0      1 0.8138697 -0.5491436      0      1 #>         [,203]     [,204] [,205] [,206]    [,207]     [,208] [,209] [,210] #> [1,] 1.1721489 -0.5048728      0      1 1.4271251 -0.8890863      0      1 #> [2,] 0.9024861 -0.3658105      0      1 1.3371533 -0.7301275      0      1 #> [3,] 0.8207097 -0.6218768      0      1 1.2301967 -0.8838977      0      1 #> [4,] 1.1753180 -0.8479833      0      1 1.0316888 -1.2796689      0      1 #> [5,] 0.9550732 -0.3683144      0      1 1.5088175 -0.9401377      0      1 #> [6,] 0.7787624 -0.1532742      0      1 0.6774223 -0.6721852      0      1 #>         [,211]     [,212] [,213] [,214]    [,215]     [,216] [,217] [,218] #> [1,] 1.0828472 -0.5861585      0      1 0.9437358 0.09630408      0      1 #> [2,] 0.9179892 -0.6699237      0      1 1.1634037 0.40872859      0      1 #> [3,] 0.8099097 -0.6891387      0      1 0.9437236 0.36898206      0      1 #> [4,] 0.9380615 -0.7708514      0      1 0.9953149 0.24996260      0      1 #> [5,] 0.9065562 -0.5227436      0      1 0.8901240 0.22865150      0      1 #> [6,] 0.8478866 -0.5027821      0      1 0.8493834 0.64925158      0      1 #>        [,219]    [,220] [,221] [,222]    [,223]      [,224] [,225] [,226] #> [1,] 1.251224 1.2660189      0      1 0.8093795 -0.03781640      0      1 #> [2,] 1.275120 1.1705077      0      1 0.8337834 -0.08649986      0      1 #> [3,] 1.075980 1.0332136      0      1 0.8603016 -0.24082097      0      1 #> [4,] 1.178972 0.8965858      0      1 1.0906790 -0.21602316      0      1 #> [5,] 1.465808 1.4528392      0      1 0.9667611  0.16206703      0      1 #> [6,] 1.003672 1.2810119      0      1 0.9793605  0.08787089      0      1 #>         [,227]     [,228] [,229] [,230]    [,231]     [,232] [,233] [,234] #> [1,] 1.1241183 -0.2655857      0      1 0.8256868 -0.6485636      0      1 #> [2,] 1.1013506 -0.3204781      0      1 1.0770762 -0.8222196      0      1 #> [3,] 1.2208786 -0.2838600      0      1 0.7337529 -0.7363470      0      1 #> [4,] 1.1255067 -0.5292478      0      1 0.7869537 -1.0085999      0      1 #> [5,] 1.3929457 -0.1996818      0      1 0.7863723 -0.7639843      0      1 #> [6,] 0.9912025 -0.1305252      0      1 0.7348674 -0.7732220      0      1 #>         [,235]     [,236] [,237] [,238]    [,239]   [,240] [,241] [,242] #> [1,] 1.0720096 -0.4475839      0      1 1.0192282 2.661379      0      1 #> [2,] 0.9165160 -0.5343116      0      1 1.3177852 2.757122      0      1 #> [3,] 0.9368496 -0.6705828      0      1 0.9742986 2.529694      0      1 #> [4,] 0.8131281 -0.5930921      0      1 0.9871176 2.429140      0      1 #> [5,] 1.0643592 -0.4905213      0      1 1.2126925 2.697152      0      1 #> [6,] 0.8418799 -0.4321622      0      1 0.7567293 2.617328      0      1 #>         [,243]      [,244] [,245] [,246]    [,247]      [,248] [,249] [,250] #> [1,] 0.8355139  0.06780849      0      1 1.4137807 -0.21321010      0      1 #> [2,] 1.1336181  0.25348032      0      1 1.2815150 -0.17706914      0      1 #> [3,] 0.5790901  0.13768769      0      1 1.2638156 -0.27375929      0      1 #> [4,] 0.9006494 -0.10519192      0      1 1.0604866 -0.50714435      0      1 #> [5,] 0.9075233  0.18475994      0      1 1.5191410 -0.14976089      0      1 #> [6,] 0.9369082  0.43920923      0      1 0.9969382  0.06122104      0      1 #>         [,251]     [,252] [,253] [,254]    [,255]    [,256] [,257] [,258] #> [1,] 1.1006399 -0.2310053      0      1 1.4072880 0.8882977      0      1 #> [2,] 1.0802270 -0.6114761      0      1 1.2684383 0.9621852      0      1 #> [3,] 0.7880503 -0.3299453      0      1 1.1213552 0.9072474      0      1 #> [4,] 0.9676510 -0.5462906      0      1 1.3448628 0.6590025      0      1 #> [5,] 1.2516757 -0.2830300      0      1 1.4669848 1.2250279      0      1 #> [6,] 0.8800138 -0.2295392      0      1 0.9690171 1.0716043      0      1 #>         [,259]     [,260] [,261] [,262]    [,263]    [,264] [,265] [,266] #> [1,] 1.0834722 -0.2874127      0      1 1.2372506 -1.584907      0      1 #> [2,] 1.0168680 -0.4050232      0      1 0.7296544 -1.262677      0      1 #> [3,] 1.2575131 -0.5186062      0      1 0.8585354 -1.362950      0      1 #> [4,] 0.9251556 -0.7952507      0      1 1.1705181 -1.415852      0      1 #> [5,] 1.0538602 -0.5370181      0      1 0.9277027 -1.212450      0      1 #> [6,] 0.6340691 -0.3535315      0      1 0.8223446 -1.063424      0      1 #>        [,267]    [,268] [,269] [,270]    [,271]     [,272] [,273] [,274] #> [1,] 1.306097 0.6539537      0      1 0.9254586 -1.0119491      0      1 #> [2,] 1.165129 0.6360237      0      1 0.6041956 -0.8960488      0      1 #> [3,] 1.042479 0.5804395      0      1 0.9719401 -0.9049817      0      1 #> [4,] 1.020745 0.4597267      0      1 0.8854014 -0.8461745      0      1 #> [5,] 1.343508 0.7992399      0      1 1.0889584 -0.7382598      0      1 #> [6,] 0.879896 0.8475393      0      1 0.8833642 -0.9095443      0      1 #>         [,275]     [,276] [,277] [,278]    [,279]     [,280] [,281] [,282] #> [1,] 1.1094789 0.26995895      0      1 1.2318738 -0.9162557      0      1 #> [2,] 1.1581189 0.22195525      0      1 0.9474658 -0.8550226      0      1 #> [3,] 0.8855246 0.02187095      0      1 1.0470295 -1.0408474      0      1 #> [4,] 1.0652445 0.08395807      0      1 1.0388042 -0.9947872      0      1 #> [5,] 1.2904380 0.37359394      0      1 0.9947444 -0.7320669      0      1 #> [6,] 1.0330133 0.53339806      0      1 1.0023877 -0.6590216      0      1 #>         [,283]   [,284] [,285] [,286]    [,287]     [,288] [,289] [,290] #> [1,] 1.0127844 1.086732      0      1 1.3016443 -0.5645592      0      1 #> [2,] 0.9325888 1.185042      0      1 1.2797563 -0.3321682      0      1 #> [3,] 0.8565901 1.200676      0      1 1.0858069 -0.5370129      0      1 #> [4,] 0.7655193 1.001382      0      1 0.9557799 -0.6196782      0      1 #> [5,] 0.9698498 1.206204      0      1 1.0974389 -0.3217740      0      1 #> [6,] 0.8846890 1.368720      0      1 0.6796244 -0.4113879      0      1 #>         [,291]     [,292] [,293] [,294]    [,295]      [,296] [,297] [,298] #> [1,] 0.9665674 -0.4499613      0      1 1.2751161 -0.27242604      0      1 #> [2,] 1.0356792 -0.5721748      0      1 1.1089584 -0.16897865      0      1 #> [3,] 0.9499328 -0.4461424      0      1 1.1750413 -0.44589779      0      1 #> [4,] 0.6212662 -0.6609387      0      1 0.9129298 -0.70055663      0      1 #> [5,] 0.9964689 -0.5005593      0      1 1.1185746 -0.19530607      0      1 #> [6,] 0.7778953 -0.4090593      0      1 1.0454056 -0.08128737      0      1 #>         [,299]    [,300] [,301] [,302]    [,303]    [,304] [,305] [,306] #> [1,] 0.9457179 -1.694390      0      1 0.8919277 -1.298184      0      1 #> [2,] 1.1671609 -1.568946      0      1 1.1484235 -1.217317      0      1 #> [3,] 0.9104849 -1.588931      0      1 0.7172764 -1.194908      0      1 #> [4,] 0.7951303 -1.910015      0      1 0.9743124 -1.257373      0      1 #> [5,] 0.8852897 -1.377146      0      1 0.9976067 -1.021570      0      1 #> [6,] 0.8919738 -1.526346      0      1 0.7979590 -1.070965      0      1 #>         [,307]    [,308] [,309] [,310]    [,311]     [,312] [,313] [,314] #> [1,] 0.9776854 -1.917578      0      1 0.7331039 -0.9768044      0      1 #> [2,] 0.9623468 -1.886203      0      1 1.0542581 -1.0651804      0      1 #> [3,] 0.9433850 -2.146880      0      1 1.0355126 -1.1161856      0      1 #> [4,] 1.0764607 -2.357394      0      1 1.0398717 -1.2172835      0      1 #> [5,] 1.0682621 -2.334701      0      1 1.1997906 -1.0727553      0      1 #> [6,] 0.8298646 -1.838798      0      1 1.0184908 -1.0133290      0      1 #>         [,315]        [,316] [,317] [,318]    [,319]      [,320] [,321] [,322] #> [1,] 1.0091757 -0.2196782520      0      1 1.0090705 -0.25004128      0      1 #> [2,] 1.0190809 -0.0007938555      0      1 0.9135201 -0.29224069      0      1 #> [3,] 1.0794888 -0.1673724693      0      1 0.7342355 -0.35306806      0      1 #> [4,] 0.9524044 -0.4012855790      0      1 0.9772383 -0.27937015      0      1 #> [5,] 1.1289982  0.1365135265      0      1 0.7633150 -0.12458776      0      1 #> [6,] 0.8079603 -0.0062007574      0      1 0.7488032 -0.06740662      0      1 #>           [,323]    [,324] #> [1,] -0.17452981 0.7971819 #> [2,] -0.23051322 0.8413638 #> [3,] -0.17643483 1.0450858 #> [4,]  0.06443079 1.0789363 #> [5,] -0.27483253 0.8621822 #> [6,] -0.47547745 1.1212340 # }"},{"path":"https://philchalmers.github.io/mirt/reference/empirical_ES.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical effect sizes based on latent trait estimates — empirical_ES","title":"Empirical effect sizes based on latent trait estimates — empirical_ES","text":"Computes effect size measures differential item functioning differential test/bundle functioning based expected scores Meade (2010). Item parameters reference focal group used conjunction focal group empirical theta estimates (assumed normally distributed theta) compute expected scores.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/empirical_ES.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical effect sizes based on latent trait estimates — empirical_ES","text":"","code":"empirical_ES(   mod,   Theta.focal = NULL,   focal_items = 1L:extract.mirt(mod, \"nitems\"),   DIF = TRUE,   npts = 61,   theta_lim = c(-6, 6),   plot = FALSE,   type = \"b\",   par.strip.text = list(cex = 0.7),   par.settings = list(strip.background = list(col = \"#9ECAE1\"), strip.border = list(col =     \"black\")),   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/empirical_ES.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical effect sizes based on latent trait estimates — empirical_ES","text":"mod multipleGroup object estimated 2 groups. first group object assumed reference group default (.e., ref.group = 1), conforms  invariance arguments multipleGroup Theta.focal optional matrix Theta values focal group evaluated. supplied default values fscores used conjunction ... arguments passed focal_items numeric vector indicating items include tests. default uses items. Selecting fewer items result tests 'differential bundle functioning' DIF = FALSE DIF logical; return data.frame item-level imputation properties? FALSE, DBF DTF statistics reported npts number points use integration. Default 61 theta_lim lower upper limits latent trait (theta) evaluated, used conjunction npts plot logical; plot expected scores items/test expected scores computed using focal group thetas focal reference group item parameters type type objects draw lattice; default plots points lines par.strip.text plotting argument passed lattice par.settings plotting argument passed lattice ... additional arguments passed fscores xyplot","code":""},{"path":"https://philchalmers.github.io/mirt/reference/empirical_ES.html","id":"dif","dir":"Reference","previous_headings":"","what":"DIF","title":"Empirical effect sizes based on latent trait estimates — empirical_ES","text":"default DIF = TRUE produces several effect sizes indices item level. Signed indices allow DIF favoring focal group one point theta distribution cancel DIF favoring reference group another point theta distribution. Unsigned indices take absolute value summing averaging, thus allowing cancellation DIF across theta. SIDS Signed Item Difference Sample. average difference expected scores across focal sample using focal reference group item parameters. UIDS Unsigned Item Difference Sample. SIDS except absolute value expected scores taken prior averaging across sample. D-Max maximum difference expected scores sample. ESSD Expected Score Standardized Difference. Cohen's D difference expected scores. SIDN Signed Item Difference Normal distribution. Identical SIDS averaged across normal distribution rather sample. UIDN Unsigned Item Difference Normal distribution. Identical UIDS averaged across normal distribution rather sample.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/empirical_ES.html","id":"dbf-dtf","dir":"Reference","previous_headings":"","what":"DBF/DTF","title":"Empirical effect sizes based on latent trait estimates — empirical_ES","text":"DIF = FALSE produces series test/bundle-level indices based item-level indices. STDS Signed Test Differences Sample. sum SIDS across items. UTDS Unsigned Test Differences Sample. sum UIDS across items. Stark's DTFR Stark's version STDS using normal distribution rather sample estimated thetas. UDTFR Unsigned Expected Test Scores Differences Sample. difference observed summed scale scores expected, average, across hypothetical focal group normally distributed theta, DF uniform nature items UETSDS Unsigned Expected Test Score Differences Sample. hypothetical difference expected scale scores present scale-level DF uniform across respondents (.e., always favoring focal group). UETSDN Identical UETSDS computed using normal distribution. Test D-Max Maximum expected test score differences sample. ETSSD Expected Test Score Standardized Difference. Cohen's D expected test scores.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/empirical_ES.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Empirical effect sizes based on latent trait estimates — empirical_ES","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06 Meade, . W. (2010). taxonomy effect size measures differential functioning items scales. Journal Applied Psychology, 95, 728-743.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/empirical_ES.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Empirical effect sizes based on latent trait estimates — empirical_ES","text":"Adam Meade, contributions Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/empirical_ES.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Empirical effect sizes based on latent trait estimates — empirical_ES","text":"","code":"# \\donttest{  # no DIF set.seed(12345) a <- matrix(abs(rnorm(15,1,.3)), ncol=1) d <- matrix(rnorm(15,0,.7),ncol=1) itemtype <- rep('2PL', nrow(a)) N <- 1000 dataset1 <- simdata(a, d, N, itemtype) dataset2 <- simdata(a, d, N, itemtype, mu = .1, sigma = matrix(1.5)) dat <- rbind(dataset1, dataset2)  # ensure 'Ref' is the first group (and therefore reference group during estimation) group <- factor(c(rep('Ref', N), rep('Focal', N)), levels = c('Ref', 'Focal'))  mod <- multipleGroup(dat, 1, group = group,    invariance = c(colnames(dat)[1:5], 'free_means', 'free_var')) #>  coef(mod, simplify=TRUE) #> $Ref #> $items #>            a1      d g u #> Item_1  1.085  0.518 0 1 #> Item_2  1.182 -0.652 0 1 #> Item_3  1.040 -0.284 0 1 #> Item_4  0.869  0.885 0 1 #> Item_5  1.063  0.144 0 1 #> Item_6  0.567  0.683 0 1 #> Item_7  1.273  1.001 0 1 #> Item_8  0.924 -0.330 0 1 #> Item_9  0.890 -1.059 0 1 #> Item_10 0.721 -1.082 0 1 #> Item_11 0.832  1.188 0 1 #> Item_12 1.478 -0.252 0 1 #> Item_13 1.288  0.445 0 1 #> Item_14 1.034  0.452 0 1 #> Item_15 0.864 -0.062 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  #>  #> $Focal #> $items #>            a1      d g u #> Item_1  1.085  0.518 0 1 #> Item_2  1.182 -0.652 0 1 #> Item_3  1.040 -0.284 0 1 #> Item_4  0.869  0.885 0 1 #> Item_5  1.063  0.144 0 1 #> Item_6  0.363  0.585 0 1 #> Item_7  1.083  0.915 0 1 #> Item_8  0.997 -0.471 0 1 #> Item_9  0.840 -1.041 0 1 #> Item_10 0.647 -1.181 0 1 #> Item_11 1.009  1.199 0 1 #> Item_12 1.278 -0.240 0 1 #> Item_13 1.201  0.366 0 1 #> Item_14 1.219  0.403 0 1 #> Item_15 0.696 -0.103 0 1 #>  #> $means #>    F1  #> 0.106  #>  #> $cov #>       F1 #> F1 1.697 #>  #>   empirical_ES(mod) #>           SIDS  UIDS   SIDN  UIDN   ESSD theta.of.max.D  max.D mean.ES.foc #> Item_1   0.000 0.000  0.000 0.000  0.000         -1.786  0.000       0.618 #> Item_2   0.000 0.000  0.000 0.000  0.000         -1.786  0.000       0.408 #> Item_3   0.000 0.000  0.000 0.000  0.000         -1.786  0.000       0.468 #> Item_4   0.000 0.000  0.000 0.000  0.000         -1.786  0.000       0.691 #> Item_5   0.000 0.000  0.000 0.000  0.000         -1.786  0.000       0.550 #> Item_6  -0.018 0.042 -0.020 0.037 -0.148         -2.560  0.098       0.645 #> Item_7  -0.004 0.023 -0.007 0.021 -0.018         -1.935  0.047       0.686 #> Item_8  -0.024 0.024 -0.026 0.026 -0.106         -0.533 -0.037       0.431 #> Item_9  -0.001 0.007  0.000 0.006 -0.005          2.571 -0.020       0.313 #> Item_10 -0.024 0.025 -0.023 0.023 -0.163          2.571 -0.065       0.271 #> Item_11 -0.009 0.024 -0.006 0.021 -0.048         -2.357 -0.081       0.736 #> Item_12 -0.003 0.023 -0.003 0.022 -0.012          1.229 -0.036       0.484 #> Item_13 -0.012 0.015 -0.014 0.015 -0.045          0.618 -0.024       0.589 #> Item_14 -0.012 0.027 -0.012 0.025 -0.048         -1.426 -0.056       0.595 #> Item_15 -0.013 0.031 -0.013 0.028 -0.064          1.901 -0.057       0.494 #>         mean.ES.ref #> Item_1        0.618 #> Item_2        0.408 #> Item_3        0.468 #> Item_4        0.691 #> Item_5        0.550 #> Item_6        0.663 #> Item_7        0.690 #> Item_8        0.455 #> Item_9        0.314 #> Item_10       0.295 #> Item_11       0.744 #> Item_12       0.487 #> Item_13       0.601 #> Item_14       0.607 #> Item_15       0.507 empirical_ES(mod, DIF=FALSE) #>           Effect Size       Value #> 1                STDS -0.12007524 #> 2                UTDS  0.24122923 #> 3              UETSDS  0.13068433 #> 4               ETSSD -0.03693475 #> 5         Starks.DTFR -0.12338715 #> 6               UDTFR  0.22580510 #> 7              UETSDN  0.12941066 #> 8 theta.of.max.test.D  1.73546824 #> 9           Test.Dmax -0.23002060 empirical_ES(mod, DIF=FALSE, focal_items = 10:15) #>           Effect Size       Value #> 1                STDS -0.07301229 #> 2                UTDS  0.14449888 #> 3              UETSDS  0.07301229 #> 4               ETSSD -0.05523295 #> 5         Starks.DTFR -0.06993679 #> 6               UDTFR  0.13444167 #> 7              UETSDN  0.06993679 #> 8 theta.of.max.test.D  1.90144409 #> 9           Test.Dmax -0.12250160  empirical_ES(mod, plot=TRUE)  empirical_ES(mod, plot=TRUE, DIF=FALSE)   ###--------------------------------------------- # DIF set.seed(12345) a1 <- a2 <- matrix(abs(rnorm(15,1,.3)), ncol=1) d1 <- d2 <- matrix(rnorm(15,0,.7),ncol=1) a2[10:15,] <- a2[10:15,] + rnorm(6, 0, .3) d2[10:15,] <- d2[10:15,] + rnorm(6, 0, .3) itemtype <- rep('dich', nrow(a1)) N <- 1000 dataset1 <- simdata(a1, d1, N, itemtype) dataset2 <- simdata(a2, d2, N, itemtype, mu = .1, sigma = matrix(1.5)) dat <- rbind(dataset1, dataset2) group <- factor(c(rep('Ref', N), rep('Focal', N)), levels = c('Ref', 'Focal'))  mod <- multipleGroup(dat, 1, group = group,    invariance = c(colnames(dat)[1:5], 'free_means', 'free_var')) #>  coef(mod, simplify=TRUE) #> $Ref #> $items #>            a1      d g u #> Item_1  1.202  0.566 0 1 #> Item_2  1.163 -0.626 0 1 #> Item_3  0.965 -0.316 0 1 #> Item_4  0.819  0.872 0 1 #> Item_5  1.165  0.161 0 1 #> Item_6  0.533  0.631 0 1 #> Item_7  1.147  1.022 0 1 #> Item_8  1.064 -0.319 0 1 #> Item_9  0.889 -1.003 0 1 #> Item_10 0.756 -1.098 0 1 #> Item_11 1.024  1.394 0 1 #> Item_12 1.485 -0.268 0 1 #> Item_13 1.280  0.402 0 1 #> Item_14 1.009  0.490 0 1 #> Item_15 0.745 -0.136 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  #>  #> $Focal #> $items #>            a1      d g u #> Item_1  1.202  0.566 0 1 #> Item_2  1.163 -0.626 0 1 #> Item_3  0.965 -0.316 0 1 #> Item_4  0.819  0.872 0 1 #> Item_5  1.165  0.161 0 1 #> Item_6  0.326  0.556 0 1 #> Item_7  1.085  0.947 0 1 #> Item_8  0.987 -0.529 0 1 #> Item_9  0.786 -1.009 0 1 #> Item_10 0.908 -1.274 0 1 #> Item_11 1.437  0.628 0 1 #> Item_12 1.947  0.153 0 1 #> Item_13 1.477  0.315 0 1 #> Item_14 1.313  0.623 0 1 #> Item_15 0.919 -0.878 0 1 #>  #> $means #>    F1  #> 0.123  #>  #> $cov #>       F1 #> F1 1.788 #>  #>   empirical_ES(mod) #>           SIDS  UIDS   SIDN  UIDN   ESSD theta.of.max.D  max.D mean.ES.foc #> Item_1   0.000 0.000  0.000 0.000  0.000          1.153  0.000       0.624 #> Item_2   0.000 0.000  0.000 0.000  0.000          1.153  0.000       0.417 #> Item_3   0.000 0.000  0.000 0.000  0.000          1.153  0.000       0.464 #> Item_4   0.000 0.000  0.000 0.000  0.000          1.153  0.000       0.691 #> Item_5   0.000 0.000  0.000 0.000  0.000          1.153  0.000       0.556 #> Item_6  -0.014 0.045 -0.017 0.037 -0.120         -2.463  0.103       0.640 #> Item_7  -0.009 0.010 -0.010 0.011 -0.037          0.312 -0.016       0.691 #> Item_8  -0.043 0.043 -0.046 0.046 -0.174          0.940 -0.066       0.424 #> Item_9  -0.010 0.018 -0.008 0.015 -0.054          2.421 -0.050       0.319 #> Item_10 -0.016 0.025 -0.020 0.025 -0.089          2.622  0.043       0.284 #> Item_11 -0.136 0.136 -0.138 0.138 -0.545         -1.274 -0.291       0.627 #> Item_12  0.064 0.070  0.075 0.079  0.195          0.536  0.139       0.555 #> Item_13 -0.016 0.026 -0.017 0.025 -0.055         -1.037 -0.055       0.579 #> Item_14  0.014 0.042  0.019 0.039  0.055         -1.774 -0.061       0.630 #> Item_15 -0.137 0.137 -0.147 0.147 -0.663         -0.086 -0.173       0.355 #>         mean.ES.ref #> Item_1        0.624 #> Item_2        0.417 #> Item_3        0.464 #> Item_4        0.691 #> Item_5        0.556 #> Item_6        0.654 #> Item_7        0.699 #> Item_8        0.467 #> Item_9        0.329 #> Item_10       0.300 #> Item_11       0.763 #> Item_12       0.490 #> Item_13       0.595 #> Item_14       0.616 #> Item_15       0.492 empirical_ES(mod, DIF = FALSE) #>           Effect Size       Value #> 1                STDS -0.30204052 #> 2                UTDS  0.55171554 #> 3              UETSDS  0.30204052 #> 4               ETSSD -0.08665251 #> 5         Starks.DTFR -0.30918657 #> 6               UDTFR  0.56373600 #> 7              UETSDN  0.30918906 #> 8 theta.of.max.test.D -1.05111220 #> 9           Test.Dmax -0.54821795 empirical_ES(mod, plot=TRUE)  empirical_ES(mod, plot=TRUE, DIF=FALSE)   # }"},{"path":"https://philchalmers.github.io/mirt/reference/empirical_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to generate empirical unidimensional item and test plots — empirical_plot","title":"Function to generate empirical unidimensional item and test plots — empirical_plot","text":"Given dataset containing item responses function construct empirical graphics using observed responses item conditioned total score. individual item plots requested total score formed without item interest (.e., total score without item).","code":""},{"path":"https://philchalmers.github.io/mirt/reference/empirical_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to generate empirical unidimensional item and test plots — empirical_plot","text":"","code":"empirical_plot(   data,   which.items = NULL,   type = \"prop\",   smooth = FALSE,   formula = resp ~ s(TS, k = 5),   main = NULL,   par.strip.text = list(cex = 0.7),   par.settings = list(strip.background = list(col = \"#9ECAE1\"), strip.border = list(col =     \"black\")),   auto.key = list(space = \"right\", points = FALSE, lines = TRUE),   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/empirical_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to generate empirical unidimensional item and test plots — empirical_plot","text":"data data.frame matrix item responses (see mirt typical input) .items numeric vector indicating items plot faceted image plot. NULL empirical test plots constructed instead type character vector specifying type plot draw. .item NULL can 'prop' (default) 'hist', otherwise can 'prop' (default) 'boxplot' smooth logical; include GAM smoother instead raw proportions? Default FALSE formula formula used GAM smoother main main title plot. NULL internal default used par.strip.text plotting argument passed lattice par.settings plotting argument passed lattice auto.key plotting argument passed lattice ... additional arguments passed lattice coef()","code":""},{"path":"https://philchalmers.github.io/mirt/reference/empirical_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to generate empirical unidimensional item and test plots — empirical_plot","text":"Note types plots used unidimensional tests monotonically increasing item response functions. monotonicity true items, however, plots may serve visual diagnostic tool long majority items indeed monotonic.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/empirical_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Function to generate empirical unidimensional item and test plots — empirical_plot","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/empirical_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to generate empirical unidimensional item and test plots — empirical_plot","text":"","code":"# \\donttest{  SAT12[SAT12 == 8] <- NA data <- key2binary(SAT12,    key = c(1,4,5,2,3,1,2,1,3,1,2,4,2,1,5,3,4,4,1,4,3,3,4,1,3,5,1,3,1,5,4,5))  # test plot empirical_plot(data)  empirical_plot(data, type = 'hist')  empirical_plot(data, type = 'hist', breaks=20)   # items 1, 2 and 5 empirical_plot(data, c(1, 2, 5))  empirical_plot(data, c(1, 2, 5), smooth = TRUE)  empirical_plot(data, c(1, 2, 5), type = 'boxplot')   # replace weird looking items with unscored versions for diagnostics empirical_plot(data, 32)  data[,32] <- SAT12[,32] empirical_plot(data, 32)  empirical_plot(data, 32, smooth = TRUE)   # }"},{"path":"https://philchalmers.github.io/mirt/reference/empirical_rxx.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate the empirical (marginal) reliability — empirical_rxx","title":"Function to calculate the empirical (marginal) reliability — empirical_rxx","text":"Given secondary latent trait estimates associated standard errors returned fscores, compute empirical reliability.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/empirical_rxx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate the empirical (marginal) reliability — empirical_rxx","text":"","code":"empirical_rxx(Theta_SE, T_as_X = FALSE)"},{"path":"https://philchalmers.github.io/mirt/reference/empirical_rxx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate the empirical (marginal) reliability — empirical_rxx","text":"Theta_SE matrix latent trait estimates returned fscores options full.scores = TRUE full.scores.SE = TRUE T_as_X logical; observed variance equal var(X) = var(T) + E(E^2) var(X) = var(T) computing empirical reliability estimates? Default (FALSE) uses former","code":""},{"path":"https://philchalmers.github.io/mirt/reference/empirical_rxx.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Function to calculate the empirical (marginal) reliability — empirical_rxx","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/empirical_rxx.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to calculate the empirical (marginal) reliability — empirical_rxx","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/empirical_rxx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to calculate the empirical (marginal) reliability — empirical_rxx","text":"","code":"# \\donttest{  dat <- expand.table(deAyala) itemstats(dat) #> $overall #>      N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  19601            2.912          1.434 0.233 0.074 0.608     0.898 #>  #> $itemstats #>            N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item.1 19601 2 0.887 0.316   0.447         0.246       0.605 #> Item.2 19601 2 0.644 0.479   0.688         0.439       0.510 #> Item.3 19601 2 0.566 0.496   0.680         0.416       0.523 #> Item.4 19601 2 0.427 0.495   0.673         0.405       0.529 #> Item.5 19601 2 0.387 0.487   0.602         0.312       0.581 #>  #> $proportions #>            0     1 #> Item.1 0.113 0.887 #> Item.2 0.356 0.644 #> Item.3 0.434 0.566 #> Item.4 0.573 0.427 #> Item.5 0.613 0.387 #>  mod <- mirt(dat) #>   theta_se <- fscores(mod, full.scores.SE = TRUE) empirical_rxx(theta_se) #>        F1  #> 0.6200703   theta_se <- fscores(mod, full.scores.SE = TRUE, method = 'ML') empirical_rxx(theta_se) #>        F1  #> 0.5636644  empirical_rxx(theta_se, T_as_X = TRUE) #>        F1  #> 0.2258948   # }"},{"path":"https://philchalmers.github.io/mirt/reference/estfun.AllModelClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Empirical Estimating Functions — estfun.AllModelClass","title":"Extract Empirical Estimating Functions — estfun.AllModelClass","text":"function extracting empirical estimating functions fitted mirt, multipleGroup, bfactor, mdirt model. derivative log-likelihood respect parameter vector, evaluated observed (case-wise) data. words, function returns case-wise scores, evaluated fitted model parameters. Currently, models fitted via EM BL method supported. computations, internal Theta grid model used already used estimation model along matching normalized density.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/estfun.AllModelClass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Empirical Estimating Functions — estfun.AllModelClass","text":"","code":"estfun.AllModelClass(   x,   weights = extract.mirt(x, \"survey.weights\"),   centering = FALSE )"},{"path":"https://philchalmers.github.io/mirt/reference/estfun.AllModelClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Empirical Estimating Functions — estfun.AllModelClass","text":"x fitted model object class SingleGroupClass, MultipleGroupClass, DiscreteClass weights default, survey.weights (optionally) specified fitting model included calculate scores. specified user, numeric vector length equal total sample size. Note cases weighted equally fitting model, weights must corrected taking square root scores used compute outer product gradients (OPG) estimate variance-covariance matrix (see examples ). centering boolean variable allows centering case-wise scores (.e., setting expected values 0). case-wise scores obtained maximum likelihood estimates, setting affect result.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/estfun.AllModelClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Empirical Estimating Functions — estfun.AllModelClass","text":"n x k matrix corresponding n observations k parameters","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/estfun.AllModelClass.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract Empirical Estimating Functions — estfun.AllModelClass","text":"Lennart Schneider lennart.sch@web.de Phil Chalmers; centering argument contributed Rudolf Debelak (rudolf.debelak@psychologie.uzh.ch)","code":""},{"path":"https://philchalmers.github.io/mirt/reference/estfun.AllModelClass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Empirical Estimating Functions — estfun.AllModelClass","text":"","code":"# \\donttest{ # fit a 2PL on the LSAT7 data and get the scores mod1 <- mirt(expand.table(LSAT7), 1, SE = TRUE, SE.type = \"crossprod\") #>  #>  #> Calculating information matrix... sc1 <- estfun.AllModelClass(mod1) # get the gradient colSums(sc1) #>          a1.1           d.2          a1.5           d.6          a1.9  #> -2.477600e-03 -1.749068e-03  8.292831e-05 -1.521604e-03  1.198404e-02  #>          d.10         a1.13          d.14         a1.17          d.18  #>  6.498262e-03 -2.188204e-03  4.417930e-03 -8.004882e-04 -5.566577e-04  # calculate the OPG estimate of the variance-covariance matrix \"by hand\" vc1 <- vcov(mod1) all.equal(crossprod(sc1), chol2inv(chol(vc1)), check.attributes = FALSE) #> [1] TRUE  # Discrete group modd <- mdirt(expand.table(LSAT7), 2, SE = TRUE, SE.type = \"crossprod\") #>  #>  #> Calculating information matrix... sc1 <- estfun.AllModelClass(modd) # get the gradient colSums(sc1) #>        a1.1        a2.2        a1.3        a2.4        a1.5        a2.6  #> 0.010556101 0.012533394 0.015994245 0.016832573 0.021043233 0.020842514  #>        a1.7        a2.8        a1.9       a2.10       c1.11  #> 0.013694253 0.011470847 0.007827056 0.009231532 0.059032788  # calculate the OPG estimate of the variance-covariance matrix \"by hand\" vc1 <- vcov(modd) all.equal(crossprod(sc1), chol2inv(chol(vc1)), check.attributes = FALSE) #> [1] TRUE  # fit a multiple group 2PL and do the same as above group <- rep(c(\"G1\", \"G2\"), 500) mod2 <- multipleGroup(expand.table(LSAT7), 1, group, SE = TRUE,   SE.type = \"crossprod\") #>  #>  #> Calculating information matrix... sc2 <- estfun.AllModelClass(mod2) colSums(sc2) #>          a1.1           d.2          a1.5           d.6          a1.9  #> -3.118728e-04 -2.982410e-03 -2.735485e-04 -6.118069e-04  7.440279e-03  #>          d.10         a1.13          d.14         a1.17          d.18  #>  7.274125e-03 -9.423217e-04 -3.379603e-04  6.496281e-04 -1.868471e-03  #>         a1.23          d.24         a1.27          d.28         a1.31  #> -1.197098e-04 -4.435649e-04 -2.378475e-05  1.458023e-04  6.403262e-04  #>          d.32         a1.35          d.36         a1.39          d.40  #>  1.212925e-03 -1.443583e-04  4.381246e-05  4.279434e-04 -9.488836e-04  vc2 <- vcov(mod2) all.equal(crossprod(sc2), chol2inv(chol(vc2)), check.attributes = FALSE) #> [1] TRUE  # fit a bifactor model with 2 specific factors and do the same as above mod3 <- bfactor(expand.table(LSAT7), c(2, 2, 1, 1, 2), SE = TRUE,   SE.type = \"crossprod\") #>  #>  #> Calculating information matrix... sc3 <- estfun.AllModelClass(mod3) colSums(sc3) #>          a1.1          a3.3           d.4          a1.7          a3.9  #>  0.0018172801  0.0007522911  0.0008693077  0.0026167974 -0.0065562618  #>          d.10         a1.13         a2.14          d.16         a1.19  #>  0.0010184719  0.0002582749 -0.0123565804  0.0003107030 -0.0001820340  #>         a2.20          d.22         a1.25         a3.27          d.28  #> -0.0048417996  0.0020931538 -0.0005721500 -0.0060778033 -0.0028105998  vc3 <- vcov(mod3) all.equal(crossprod(sc3), chol2inv(chol(vc3)), check.attributes = FALSE) #> [1] TRUE  # fit a 2PL not weighting all cases equally survey.weights <- c(rep(2, sum(LSAT7$freq) / 2), rep(1, sum(LSAT7$freq) / 2)) survey.weights <- survey.weights / sum(survey.weights) * sum(LSAT7$freq) mod4 <- mirt(expand.table(LSAT7), 1, SE = TRUE, SE.type = \"crossprod\",   survey.weights = survey.weights) #>  #>  #> Calculating information matrix... sc4 <- estfun.AllModelClass(mod4,   weights = extract.mirt(mod4, \"survey.weights\")) # get the gradient colSums(sc4) #>          a1.1           d.2          a1.5           d.6          a1.9  #> -0.0067330450 -0.0001045753  0.0019680853  0.0007675188  0.0088929479  #>          d.10         a1.13          d.14         a1.17          d.18  #>  0.0012985459  0.0016433039 -0.0008952128 -0.0071939497 -0.0031136208  # to calculate the OPG estimate of the variance-covariance matrix \"by hand\", # the weights must be adjusted by taking their square root sc4_crp <- estfun.AllModelClass(mod4,   weights = sqrt(extract.mirt(mod4, \"survey.weights\"))) vc4 <- vcov(mod4) all.equal(crossprod(sc4_crp), chol2inv(chol(vc4)), check.attributes = FALSE) #> [1] TRUE  # }"},{"path":"https://philchalmers.github.io/mirt/reference/expand.table.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand summary table of patterns and frequencies — expand.table","title":"Expand summary table of patterns and frequencies — expand.table","text":"expand.table function expands summary table unique response patterns full sized data-set. default response frequencies assumed rightmost column input data, though can modified.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/expand.table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand summary table of patterns and frequencies — expand.table","text":"","code":"expand.table(tabdata, freq = colnames(tabdata)[ncol(tabdata)], sample = FALSE)"},{"path":"https://philchalmers.github.io/mirt/reference/expand.table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand summary table of patterns and frequencies — expand.table","text":"tabdata object class data.frame matrix unique response patterns number frequencies rightmost column (though see freq details omit column) freq either character vector specifying column tabdata used frequency count indicator response pattern (defaults right-column) integer vector length nrow(tabdata) specifying frequency counts. using latter approach tabdata input include information regarding counts, instead include unique response patterns sample logical; randomly switch rows expanded table? change expanded data, row locations","code":""},{"path":"https://philchalmers.github.io/mirt/reference/expand.table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand summary table of patterns and frequencies — expand.table","text":"Returns numeric matrix response patterns.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/expand.table.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Expand summary table of patterns and frequencies — expand.table","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/expand.table.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Expand summary table of patterns and frequencies — expand.table","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/expand.table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand summary table of patterns and frequencies — expand.table","text":"","code":"data(LSAT7) head(LSAT7) # frequency in right-most column #>   Item.1 Item.2 Item.3 Item.4 Item.5 freq #> 1      0      0      0      0      0   12 #> 2      0      0      0      0      1   19 #> 3      0      0      0      1      0    1 #> 4      0      0      0      1      1    7 #> 5      0      0      1      0      0    3 #> 6      0      0      1      0      1   19 LSAT7full <- expand.table(LSAT7) head(LSAT7full) #>   Item.1 Item.2 Item.3 Item.4 Item.5 #> 1      0      0      0      0      0 #> 2      0      0      0      0      0 #> 3      0      0      0      0      0 #> 4      0      0      0      0      0 #> 5      0      0      0      0      0 #> 6      0      0      0      0      0 dim(LSAT7full) #> [1] 1000    5  # randomly switch rows in the expanded response table LSAT7samp <- expand.table(LSAT7, sample = TRUE) head(LSAT7samp) #>   Item.1 Item.2 Item.3 Item.4 Item.5 #> 1      1      1      1      1      1 #> 2      1      0      1      1      1 #> 3      1      1      0      1      1 #> 4      1      0      1      1      1 #> 5      1      1      1      1      1 #> 6      1      1      1      1      1 colMeans(LSAT7full) #> Item.1 Item.2 Item.3 Item.4 Item.5  #>  0.828  0.658  0.772  0.606  0.843  colMeans(LSAT7samp) #equal #> Item.1 Item.2 Item.3 Item.4 Item.5  #>  0.828  0.658  0.772  0.606  0.843   #--------  # \\donttest{ # Generate data from separate response pattern matrix and freq vector # The following uses Table 2.1 from de Ayala (2009) f <- c(691,2280,242,235,158,184,1685,1053,134,462,92,65,571,79,87,41,1682,702,        370,63,626,412,166,52,28,15,2095,1219,500,187,40,3385)  pat <- matrix(c(    0, 0, 0, 0, 0,    1, 0, 0, 0, 0,    0, 1, 0, 0, 0,    0, 0, 1, 0, 0,    0, 0, 0, 1, 0,    0, 0, 0, 0, 1,    1, 1, 0, 0, 0,    1, 0, 1, 0, 0,    0, 1, 1, 0, 0,    1, 0, 0, 1, 0,    0, 1, 0, 1, 0,    0, 0, 1, 1, 0,    1, 0, 0, 0, 1,    0, 1, 0, 0, 1,    0, 0, 1, 0, 1,    0, 0, 0, 1, 1,    1, 1, 1, 0, 0,    1, 1, 0, 1, 0,    1, 0, 1, 1, 0,    0, 1, 1, 1, 0,    1, 1, 0, 0, 1,    1, 0, 1, 0, 1,    1, 0, 0, 1, 1,    0, 1, 1, 0, 1,    0, 1, 0, 1, 1,    0, 0, 1, 1, 1,    1, 1, 1, 1, 0,    1, 1, 1, 0, 1,    1, 1, 0, 1, 1,    1, 0, 1, 1, 1,    0, 1, 1, 1, 1,    1, 1, 1, 1, 1), ncol=5, byrow=TRUE)  colnames(pat) <- paste0('Item.', 1:5) head(pat) #>      Item.1 Item.2 Item.3 Item.4 Item.5 #> [1,]      0      0      0      0      0 #> [2,]      1      0      0      0      0 #> [3,]      0      1      0      0      0 #> [4,]      0      0      1      0      0 #> [5,]      0      0      0      1      0 #> [6,]      0      0      0      0      1  table2.1 <- expand.table(pat, freq = f) dim(table2.1) #> [1] 19601     5  # }"},{"path":"https://philchalmers.github.io/mirt/reference/expected.item.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate expected value of item — expected.item","title":"Function to calculate expected value of item — expected.item","text":"Given internal mirt object extracted estimated model compute expected value item given ability parameter(s).","code":""},{"path":"https://philchalmers.github.io/mirt/reference/expected.item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate expected value of item — expected.item","text":"","code":"expected.item(x, Theta, min = 0, include.var = FALSE)"},{"path":"https://philchalmers.github.io/mirt/reference/expected.item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate expected value of item — expected.item","text":"x extracted internal mirt object containing item information (see extract.item) Theta vector (unidimensional) matrix (multidimensional) latent trait values min constant value added expected values indicating lowest theoretical category. Default 0 include.var logical; include model-implied variance expected scores well? TRUE return list containing expected values (E) variances (VAR)","code":""},{"path":"https://philchalmers.github.io/mirt/reference/expected.item.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Function to calculate expected value of item — expected.item","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/expected.item.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to calculate expected value of item — expected.item","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/expected.item.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to calculate expected value of item — expected.item","text":"","code":"mod <- mirt(Science, 1) #>  extr.2 <- extract.item(mod, 2) Theta <- matrix(seq(-6,6, length.out=200)) expected <- expected.item(extr.2, Theta, min(Science[,1])) #min() of first item head(data.frame(expected, Theta=Theta)) #>   expected     Theta #> 1 1.013391 -6.000000 #> 2 1.014407 -5.939698 #> 3 1.015498 -5.879397 #> 4 1.016672 -5.819095 #> 5 1.017933 -5.758794 #> 6 1.019289 -5.698492  expected.item(extr.2, Theta, min(Science[,1]), include.var=TRUE) #> $E #>   [1] 1.013391 1.014407 1.015498 1.016672 1.017933 1.019289 1.020744 1.022308 #>   [9] 1.023988 1.025791 1.027727 1.029805 1.032035 1.034427 1.036992 1.039742 #>  [17] 1.042690 1.045848 1.049231 1.052853 1.056729 1.060875 1.065309 1.070047 #>  [25] 1.075108 1.080511 1.086276 1.092422 1.098971 1.105943 1.113361 1.121247 #>  [33] 1.129622 1.138510 1.147932 1.157911 1.168469 1.179625 1.191402 1.203817 #>  [41] 1.216889 1.230634 1.245068 1.260201 1.276046 1.292610 1.309898 1.327913 #>  [49] 1.346654 1.366117 1.386296 1.407180 1.428756 1.451008 1.473916 1.497459 #>  [57] 1.521611 1.546346 1.571635 1.597448 1.623754 1.650519 1.677712 1.705300 #>  [65] 1.733251 1.761532 1.790113 1.818965 1.848058 1.877365 1.906859 1.936516 #>  [73] 1.966312 1.996222 2.026225 2.056299 2.086421 2.116571 2.146726 2.176865 #>  [81] 2.206964 2.237001 2.266952 2.296794 2.326501 2.356050 2.385416 2.414575 #>  [89] 2.443504 2.472180 2.500583 2.528693 2.556494 2.583970 2.611109 2.637904 #>  [97] 2.664348 2.690439 2.716178 2.741571 2.766624 2.791350 2.815763 2.839881 #> [105] 2.863722 2.887310 2.910668 2.933821 2.956795 2.979616 3.002311 3.024906 #> [113] 3.047424 3.069889 3.092321 3.114739 3.137157 3.159587 3.182039 3.204516 #> [121] 3.227018 3.249541 3.272079 3.294617 3.317140 3.339628 3.362056 3.384398 #> [129] 3.406624 3.428701 3.450594 3.472269 3.493688 3.514816 3.535615 3.556050 #> [137] 3.576087 3.595693 3.614838 3.633495 3.651638 3.669246 3.686301 3.702787 #> [145] 3.718692 3.734007 3.748728 3.762852 3.776380 3.789316 3.801665 3.813436 #> [153] 3.824638 3.835286 3.845391 3.854970 3.864039 3.872615 3.880715 3.888358 #> [161] 3.895562 3.902347 3.908731 3.914733 3.920370 3.925662 3.930626 3.935280 #> [169] 3.939639 3.943720 3.947540 3.951112 3.954452 3.957572 3.960487 3.963208 #> [177] 3.965749 3.968118 3.970329 3.972390 3.974312 3.976102 3.977771 3.979325 #> [185] 3.980773 3.982120 3.983375 3.984543 3.985630 3.986642 3.987583 3.988458 #> [193] 3.989273 3.990030 3.990735 3.991390 3.991999 3.992565 3.993092 3.993581 #>  #> $VAR #>   [1] 1.016618 1.017866 1.019207 1.020645 1.022188 1.023843 1.025618 1.027521 #>   [9] 1.029559 1.031743 1.034082 1.036585 1.039263 1.042127 1.045188 1.048457 #>  [17] 1.051948 1.055673 1.059644 1.063876 1.068380 1.073172 1.078265 1.083673 #>  [25] 1.089410 1.095488 1.101921 1.108722 1.115902 1.123471 1.131439 1.139814 #>  [33] 1.148602 1.157807 1.167431 1.177473 1.187930 1.198794 1.210054 1.221698 #>  [41] 1.233706 1.246057 1.258724 1.271677 1.284881 1.298297 1.311884 1.325594 #>  [49] 1.339380 1.353188 1.366966 1.380659 1.394211 1.407567 1.420673 1.433478 #>  [57] 1.445931 1.457987 1.469604 1.480744 1.491375 1.501468 1.511003 1.519961 #>  [65] 1.528331 1.536103 1.543274 1.549843 1.555812 1.561184 1.565964 1.570157 #>  [73] 1.573769 1.576804 1.579266 1.581159 1.582485 1.583244 1.583437 1.583064 #>  [81] 1.582126 1.580625 1.578563 1.575947 1.572785 1.569088 1.564875 1.560165 #>  [89] 1.554985 1.549365 1.543342 1.536957 1.530255 1.523285 1.516100 1.508754 #>  [97] 1.501305 1.493809 1.486322 1.478902 1.471600 1.464468 1.457551 1.450890 #> [105] 1.444522 1.438478 1.432779 1.427443 1.422479 1.417891 1.413671 1.409809 #> [113] 1.406285 1.403072 1.400140 1.397448 1.394955 1.392612 1.390368 1.388168 #> [121] 1.385957 1.383677 1.381273 1.378688 1.375872 1.372773 1.369347 1.365556 #> [129] 1.361365 1.356749 1.351687 1.346169 1.340189 1.333753 1.326870 1.319558 #> [137] 1.311842 1.303752 1.295323 1.286593 1.277605 1.268404 1.259035 1.249544 #> [145] 1.239978 1.230381 1.220797 1.211267 1.201828 1.192517 1.183365 1.174401 #> [153] 1.165650 1.157134 1.148870 1.140874 1.133157 1.125728 1.118592 1.111753 #> [161] 1.105213 1.098969 1.093021 1.087362 1.081989 1.076893 1.072068 1.067505 #> [169] 1.063195 1.059129 1.055297 1.051689 1.048296 1.045106 1.042112 1.039302 #> [177] 1.036667 1.034199 1.031887 1.029723 1.027699 1.025807 1.024039 1.022387 #> [185] 1.020845 1.019406 1.018063 1.016810 1.015642 1.014553 1.013539 1.012593 #> [193] 1.011713 1.010892 1.010129 1.009418 1.008756 1.008140 1.007567 1.007034 #>"},{"path":"https://philchalmers.github.io/mirt/reference/expected.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate expected test score — expected.test","title":"Function to calculate expected test score — expected.test","text":"Given estimated model compute expected test score. Returns expected values form data used estimate model.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/expected.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate expected test score — expected.test","text":"","code":"expected.test(   x,   Theta,   group = NULL,   mins = TRUE,   individual = FALSE,   which.items = NULL,   probs.only = FALSE )"},{"path":"https://philchalmers.github.io/mirt/reference/expected.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate expected test score — expected.test","text":"x estimated mirt object Theta matrix latent trait values (vector supplied, coerced matrix one column) group number character signifying group item extracted (applies 'MultipleGroupClass' objects ) mins logical; include minimum value constants dataset. FALSE, expected values item determined scoring 0:(ncat-1) individual logical; return tracelines individual items? .items integer vector indicating items include expected test score. Default uses possible items probs.logical; return probability category instead traceline score functions? useful individual=TRUE","code":""},{"path":"https://philchalmers.github.io/mirt/reference/expected.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Function to calculate expected test score — expected.test","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/expected.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to calculate expected test score — expected.test","text":"","code":"# \\donttest{ dat <- expand.table(deAyala) model <- 'F = 1-5           CONSTRAIN = (1-5, a1)' mod <- mirt(dat, model) #>   Theta <- matrix(seq(-6,6,.01)) tscore <- expected.test(mod, Theta) tail(cbind(Theta, tscore)) #>                tscore #> [1196,] 5.95 4.999138 #> [1197,] 5.96 4.999150 #> [1198,] 5.97 4.999162 #> [1199,] 5.98 4.999174 #> [1200,] 5.99 4.999186 #> [1201,] 6.00 4.999198  # use only first two items (i.e., a bundle) bscore <- expected.test(mod, Theta, which.items = 1:2) tail(cbind(Theta, bscore)) #>                bscore #> [1196,] 5.95 1.999905 #> [1197,] 5.96 1.999906 #> [1198,] 5.97 1.999908 #> [1199,] 5.98 1.999909 #> [1200,] 5.99 1.999910 #> [1201,] 6.00 1.999912  # more low-level output (score and probabilty elements) expected.test(mod, Theta, individual=TRUE) #>                [,1]         [,2]         [,3]         [,4]         [,5] #>    [1,] 0.002708164 0.0004016443 0.0002558693 0.0001175518 9.361023e-05 #>    [2,] 0.002747363 0.0004074715 0.0002595820 0.0001192578 9.496877e-05 #>    [3,] 0.002787127 0.0004133831 0.0002633486 0.0001209885 9.634703e-05 #>    [4,] 0.002827465 0.0004193805 0.0002671699 0.0001227443 9.774529e-05 #>    [5,] 0.002868386 0.0004254649 0.0002710466 0.0001245257 9.916384e-05 #>    [6,] 0.002909897 0.0004316375 0.0002749795 0.0001263328 1.006030e-04 #>    [7,] 0.002952007 0.0004378996 0.0002789695 0.0001281662 1.020630e-04 #>    [8,] 0.002994724 0.0004442525 0.0002830174 0.0001300262 1.035442e-04 #>    [9,] 0.003038058 0.0004506975 0.0002871239 0.0001319131 1.050469e-04 #>   [10,] 0.003082017 0.0004572360 0.0002912901 0.0001338275 1.065714e-04 #>   [11,] 0.003126610 0.0004638693 0.0002955166 0.0001357696 1.081180e-04 #>   [12,] 0.003171846 0.0004705988 0.0002998045 0.0001377399 1.096871e-04 #>   [13,] 0.003217735 0.0004774259 0.0003041546 0.0001397388 1.112789e-04 #>   [14,] 0.003264285 0.0004843520 0.0003085678 0.0001417667 1.128939e-04 #>   [15,] 0.003311506 0.0004913785 0.0003130450 0.0001438241 1.145322e-04 #>   [16,] 0.003359409 0.0004985069 0.0003175871 0.0001459112 1.161944e-04 #>   [17,] 0.003408001 0.0005057386 0.0003221951 0.0001480287 1.178806e-04 #>   [18,] 0.003457295 0.0005130752 0.0003268700 0.0001501769 1.195914e-04 #>   [19,] 0.003507298 0.0005205182 0.0003316127 0.0001523562 1.213269e-04 #>   [20,] 0.003558023 0.0005280691 0.0003364241 0.0001545672 1.230877e-04 #>   [21,] 0.003609478 0.0005357294 0.0003413054 0.0001568103 1.248740e-04 #>   [22,] 0.003661674 0.0005435009 0.0003462574 0.0001590859 1.266862e-04 #>   [23,] 0.003714623 0.0005513850 0.0003512813 0.0001613945 1.285247e-04 #>   [24,] 0.003768335 0.0005593834 0.0003563780 0.0001637366 1.303898e-04 #>   [25,] 0.003822820 0.0005674977 0.0003615487 0.0001661127 1.322821e-04 #>   [26,] 0.003878089 0.0005757297 0.0003667943 0.0001685233 1.342018e-04 #>   [27,] 0.003934155 0.0005840811 0.0003721160 0.0001709689 1.361494e-04 #>   [28,] 0.003991028 0.0005925535 0.0003775149 0.0001734499 1.381252e-04 #>   [29,] 0.004048720 0.0006011487 0.0003829921 0.0001759669 1.401297e-04 #>   [30,] 0.004107242 0.0006098686 0.0003885488 0.0001785205 1.421632e-04 #>   [31,] 0.004166607 0.0006187148 0.0003941860 0.0001811111 1.442263e-04 #>   [32,] 0.004226826 0.0006276893 0.0003999050 0.0001837393 1.463193e-04 #>   [33,] 0.004287912 0.0006367939 0.0004057069 0.0001864056 1.484427e-04 #>   [34,] 0.004349876 0.0006460304 0.0004115930 0.0001891106 1.505969e-04 #>   [35,] 0.004412733 0.0006554008 0.0004175644 0.0001918548 1.527824e-04 #>   [36,] 0.004476493 0.0006649071 0.0004236224 0.0001946389 1.549995e-04 #>   [37,] 0.004541170 0.0006745511 0.0004297683 0.0001974634 1.572489e-04 #>   [38,] 0.004606778 0.0006843350 0.0004360033 0.0002003288 1.595308e-04 #>   [39,] 0.004673329 0.0006942606 0.0004423287 0.0002032358 1.618459e-04 #>   [40,] 0.004740837 0.0007043301 0.0004487459 0.0002061850 1.641946e-04 #>   [41,] 0.004809315 0.0007145456 0.0004552561 0.0002091770 1.665773e-04 #>   [42,] 0.004878777 0.0007249090 0.0004618607 0.0002122124 1.689946e-04 #>   [43,] 0.004949238 0.0007354227 0.0004685610 0.0002152918 1.714470e-04 #>   [44,] 0.005020712 0.0007460888 0.0004753586 0.0002184159 1.739350e-04 #>   [45,] 0.005093212 0.0007569095 0.0004822547 0.0002215853 1.764591e-04 #>   [46,] 0.005166753 0.0007678869 0.0004892507 0.0002248007 1.790198e-04 #>   [47,] 0.005241351 0.0007790235 0.0004963483 0.0002280627 1.816176e-04 #>   [48,] 0.005317021 0.0007903214 0.0005035487 0.0002313721 1.842532e-04 #>   [49,] 0.005393776 0.0008017830 0.0005108536 0.0002347295 1.869269e-04 #>   [50,] 0.005471634 0.0008134107 0.0005182643 0.0002381356 1.896395e-04 #>   [51,] 0.005550609 0.0008252070 0.0005257825 0.0002415911 1.923914e-04 #>   [52,] 0.005630718 0.0008371741 0.0005334097 0.0002450967 1.951833e-04 #>   [53,] 0.005711976 0.0008493147 0.0005411475 0.0002486532 1.980156e-04 #>   [54,] 0.005794400 0.0008616311 0.0005489975 0.0002522613 2.008891e-04 #>   [55,] 0.005878007 0.0008741260 0.0005569613 0.0002559217 2.038042e-04 #>   [56,] 0.005962812 0.0008868020 0.0005650406 0.0002596352 2.067617e-04 #>   [57,] 0.006048834 0.0008996615 0.0005732369 0.0002634026 2.097620e-04 #>   [58,] 0.006136089 0.0009127074 0.0005815521 0.0002672246 2.128059e-04 #>   [59,] 0.006224595 0.0009259423 0.0005899879 0.0002711021 2.158939e-04 #>   [60,] 0.006314369 0.0009393690 0.0005985459 0.0002750358 2.190267e-04 #>   [61,] 0.006405429 0.0009529901 0.0006072280 0.0002790266 2.222050e-04 #>   [62,] 0.006497795 0.0009668086 0.0006160360 0.0002830753 2.254294e-04 #>   [63,] 0.006591483 0.0009808272 0.0006249717 0.0002871827 2.287006e-04 #>   [64,] 0.006686513 0.0009950489 0.0006340368 0.0002913497 2.320192e-04 #>   [65,] 0.006782904 0.0010094766 0.0006432334 0.0002955772 2.353859e-04 #>   [66,] 0.006880674 0.0010241133 0.0006525633 0.0002998659 2.388016e-04 #>   [67,] 0.006979844 0.0010389620 0.0006620284 0.0003042169 2.422667e-04 #>   [68,] 0.007080433 0.0010540257 0.0006716308 0.0003086310 2.457821e-04 #>   [69,] 0.007182462 0.0010693077 0.0006813723 0.0003131091 2.493486e-04 #>   [70,] 0.007285950 0.0010848109 0.0006912550 0.0003176522 2.529667e-04 #>   [71,] 0.007390917 0.0011005387 0.0007012809 0.0003222611 2.566374e-04 #>   [72,] 0.007497386 0.0011164942 0.0007114521 0.0003269370 2.603613e-04 #>   [73,] 0.007605376 0.0011326808 0.0007217708 0.0003316806 2.641392e-04 #>   [74,] 0.007714910 0.0011491018 0.0007322390 0.0003364930 2.679719e-04 #>   [75,] 0.007826009 0.0011657606 0.0007428590 0.0003413753 2.718603e-04 #>   [76,] 0.007938695 0.0011826606 0.0007536328 0.0003463283 2.758050e-04 #>   [77,] 0.008052991 0.0011998053 0.0007645628 0.0003513532 2.798070e-04 #>   [78,] 0.008168918 0.0012171983 0.0007756511 0.0003564510 2.838670e-04 #>   [79,] 0.008286501 0.0012348431 0.0007869002 0.0003616227 2.879859e-04 #>   [80,] 0.008405761 0.0012527433 0.0007983122 0.0003668694 2.921645e-04 #>   [81,] 0.008526723 0.0012709027 0.0008098897 0.0003721922 2.964038e-04 #>   [82,] 0.008649411 0.0012893250 0.0008216349 0.0003775923 3.007045e-04 #>   [83,] 0.008773848 0.0013080139 0.0008335503 0.0003830706 3.050677e-04 #>   [84,] 0.008900060 0.0013269735 0.0008456383 0.0003886284 3.094941e-04 #>   [85,] 0.009028070 0.0013462074 0.0008579015 0.0003942667 3.139847e-04 #>   [86,] 0.009157905 0.0013657198 0.0008703424 0.0003999869 3.185405e-04 #>   [87,] 0.009289589 0.0013855146 0.0008829635 0.0004057900 3.231623e-04 #>   [88,] 0.009423149 0.0014055959 0.0008957675 0.0004116773 3.278512e-04 #>   [89,] 0.009558611 0.0014259678 0.0009087569 0.0004176499 3.326081e-04 #>   [90,] 0.009696001 0.0014466346 0.0009219346 0.0004237092 3.374340e-04 #>   [91,] 0.009835346 0.0014676004 0.0009353032 0.0004298563 3.423299e-04 #>   [92,] 0.009976673 0.0014888696 0.0009488654 0.0004360926 3.472968e-04 #>   [93,] 0.010120011 0.0015104467 0.0009626241 0.0004424193 3.523357e-04 #>   [94,] 0.010265386 0.0015323359 0.0009765822 0.0004488378 3.574478e-04 #>   [95,] 0.010412828 0.0015545419 0.0009907424 0.0004553493 3.626339e-04 #>   [96,] 0.010562365 0.0015770692 0.0010051077 0.0004619552 3.678953e-04 #>   [97,] 0.010714026 0.0015999223 0.0010196811 0.0004686570 3.732330e-04 #>   [98,] 0.010867841 0.0016231062 0.0010344656 0.0004754559 3.786481e-04 #>   [99,] 0.011023840 0.0016466254 0.0010494642 0.0004823534 3.841418e-04 #>  [100,] 0.011182052 0.0016704848 0.0010646801 0.0004893509 3.897151e-04 #>  [101,] 0.011342509 0.0016946894 0.0010801163 0.0004964499 3.953692e-04 #>  [102,] 0.011505242 0.0017192440 0.0010957761 0.0005036518 4.011054e-04 #>  [103,] 0.011670282 0.0017441539 0.0011116627 0.0005109582 4.069247e-04 #>  [104,] 0.011837661 0.0017694240 0.0011277793 0.0005183705 4.128284e-04 #>  [105,] 0.012007411 0.0017950595 0.0011441293 0.0005258902 4.188178e-04 #>  [106,] 0.012179566 0.0018210659 0.0011607161 0.0005335190 4.248940e-04 #>  [107,] 0.012354158 0.0018474482 0.0011775431 0.0005412584 4.310583e-04 #>  [108,] 0.012531221 0.0018742121 0.0011946137 0.0005491099 4.373120e-04 #>  [109,] 0.012710789 0.0019013630 0.0012119315 0.0005570754 4.436564e-04 #>  [110,] 0.012892897 0.0019289064 0.0012295000 0.0005651563 4.500928e-04 #>  [111,] 0.013077579 0.0019568480 0.0012473229 0.0005733543 4.566225e-04 #>  [112,] 0.013264871 0.0019851936 0.0012654038 0.0005816712 4.632469e-04 #>  [113,] 0.013454809 0.0020139490 0.0012837464 0.0005901087 4.699674e-04 #>  [114,] 0.013647429 0.0020431200 0.0013023547 0.0005986685 4.767853e-04 #>  [115,] 0.013842768 0.0020727127 0.0013212322 0.0006073524 4.837021e-04 #>  [116,] 0.014040862 0.0021027331 0.0013403831 0.0006161622 4.907192e-04 #>  [117,] 0.014241751 0.0021331873 0.0013598112 0.0006250996 4.978380e-04 #>  [118,] 0.014445472 0.0021640817 0.0013795204 0.0006341667 5.050600e-04 #>  [119,] 0.014652064 0.0021954226 0.0013995150 0.0006433651 5.123868e-04 #>  [120,] 0.014861565 0.0022272163 0.0014197989 0.0006526969 5.198198e-04 #>  [121,] 0.015074017 0.0022594694 0.0014403764 0.0006621640 5.273605e-04 #>  [122,] 0.015289458 0.0022921885 0.0014612516 0.0006717683 5.350106e-04 #>  [123,] 0.015507930 0.0023253802 0.0014824290 0.0006815118 5.427716e-04 #>  [124,] 0.015729474 0.0023590515 0.0015039129 0.0006913965 5.506452e-04 #>  [125,] 0.015954132 0.0023932092 0.0015257076 0.0007014245 5.586328e-04 #>  [126,] 0.016181945 0.0024278603 0.0015478176 0.0007115978 5.667363e-04 #>  [127,] 0.016412957 0.0024630118 0.0015702476 0.0007219186 5.749573e-04 #>  [128,] 0.016647212 0.0024986710 0.0015930021 0.0007323890 5.832974e-04 #>  [129,] 0.016884752 0.0025348451 0.0016160858 0.0007430111 5.917585e-04 #>  [130,] 0.017125623 0.0025715416 0.0016395034 0.0007537871 6.003422e-04 #>  [131,] 0.017369869 0.0026087680 0.0016632598 0.0007647193 6.090503e-04 #>  [132,] 0.017617536 0.0026465318 0.0016873599 0.0007758099 6.178847e-04 #>  [133,] 0.017868670 0.0026848408 0.0017118086 0.0007870613 6.268472e-04 #>  [134,] 0.018123319 0.0027237028 0.0017366108 0.0007984757 6.359395e-04 #>  [135,] 0.018381528 0.0027631258 0.0017617719 0.0008100555 6.451637e-04 #>  [136,] 0.018643346 0.0028031178 0.0017872968 0.0008218031 6.545216e-04 #>  [137,] 0.018908822 0.0028436869 0.0018131908 0.0008337209 6.640151e-04 #>  [138,] 0.019178004 0.0028848416 0.0018394593 0.0008458114 6.736462e-04 #>  [139,] 0.019450942 0.0029265900 0.0018661077 0.0008580771 6.834169e-04 #>  [140,] 0.019727686 0.0029689409 0.0018931413 0.0008705205 6.933292e-04 #>  [141,] 0.020008288 0.0030119027 0.0019205659 0.0008831442 7.033852e-04 #>  [142,] 0.020292798 0.0030554843 0.0019483870 0.0008959508 7.135870e-04 #>  [143,] 0.020581269 0.0030996946 0.0019766102 0.0009089430 7.239366e-04 #>  [144,] 0.020873753 0.0031445425 0.0020052415 0.0009221233 7.344362e-04 #>  [145,] 0.021170304 0.0031900373 0.0020342867 0.0009354946 7.450880e-04 #>  [146,] 0.021470975 0.0032361881 0.0020637517 0.0009490597 7.558941e-04 #>  [147,] 0.021775822 0.0032830044 0.0020936425 0.0009628212 7.668568e-04 #>  [148,] 0.022084899 0.0033304957 0.0021239654 0.0009767821 7.779785e-04 #>  [149,] 0.022398263 0.0033786717 0.0021547265 0.0009909452 7.892612e-04 #>  [150,] 0.022715970 0.0034275421 0.0021859322 0.0010053134 8.007075e-04 #>  [151,] 0.023038077 0.0034771170 0.0022175888 0.0010198898 8.123197e-04 #>  [152,] 0.023364642 0.0035274063 0.0022497028 0.0010346773 8.241001e-04 #>  [153,] 0.023695724 0.0035784204 0.0022822807 0.0010496790 8.360512e-04 #>  [154,] 0.024031382 0.0036301696 0.0023153294 0.0010648980 8.481755e-04 #>  [155,] 0.024371677 0.0036826644 0.0023488555 0.0010803374 8.604754e-04 #>  [156,] 0.024716668 0.0037359154 0.0023828659 0.0010960004 8.729536e-04 #>  [157,] 0.025066417 0.0037899335 0.0024173675 0.0011118902 8.856125e-04 #>  [158,] 0.025420985 0.0038447296 0.0024523675 0.0011280101 8.984549e-04 #>  [159,] 0.025780437 0.0039003150 0.0024878730 0.0011443635 9.114833e-04 #>  [160,] 0.026144835 0.0039567007 0.0025238912 0.0011609536 9.247005e-04 #>  [161,] 0.026514244 0.0040138983 0.0025604295 0.0011777841 9.381091e-04 #>  [162,] 0.026888728 0.0040719194 0.0025974954 0.0011948582 9.517120e-04 #>  [163,] 0.027268353 0.0041307757 0.0026350965 0.0012121795 9.655119e-04 #>  [164,] 0.027653185 0.0041904791 0.0026732404 0.0012297516 9.795118e-04 #>  [165,] 0.028043292 0.0042510418 0.0027119350 0.0012475781 9.937144e-04 #>  [166,] 0.028438741 0.0043124759 0.0027511881 0.0012656627 1.008123e-03 #>  [167,] 0.028839601 0.0043747940 0.0027910078 0.0012840091 1.022740e-03 #>  [168,] 0.029245941 0.0044380086 0.0028314022 0.0013026212 1.037569e-03 #>  [169,] 0.029657832 0.0045021325 0.0028723795 0.0013215026 1.052612e-03 #>  [170,] 0.030075344 0.0045671786 0.0029139482 0.0013406574 1.067874e-03 #>  [171,] 0.030498548 0.0046331602 0.0029561166 0.0013600894 1.083356e-03 #>  [172,] 0.030927518 0.0047000905 0.0029988935 0.0013798027 1.099063e-03 #>  [173,] 0.031362327 0.0047679830 0.0030422874 0.0013998013 1.114997e-03 #>  [174,] 0.031803047 0.0048368515 0.0030863073 0.0014200894 1.131162e-03 #>  [175,] 0.032249755 0.0049067098 0.0031309622 0.0014406711 1.147561e-03 #>  [176,] 0.032702525 0.0049775720 0.0031762611 0.0014615506 1.164197e-03 #>  [177,] 0.033161434 0.0050494524 0.0032222132 0.0014827323 1.181075e-03 #>  [178,] 0.033626560 0.0051223655 0.0032688280 0.0015042205 1.198197e-03 #>  [179,] 0.034097978 0.0051963259 0.0033161149 0.0015260197 1.215566e-03 #>  [180,] 0.034575770 0.0052713485 0.0033640836 0.0015481343 1.233187e-03 #>  [181,] 0.035060013 0.0053474485 0.0034127438 0.0015705688 1.251064e-03 #>  [182,] 0.035550788 0.0054246411 0.0034621053 0.0015933280 1.269199e-03 #>  [183,] 0.036048177 0.0055029419 0.0035121783 0.0016164164 1.287596e-03 #>  [184,] 0.036552261 0.0055823665 0.0035629730 0.0016398388 1.306260e-03 #>  [185,] 0.037063123 0.0056629309 0.0036144996 0.0016636001 1.325194e-03 #>  [186,] 0.037580846 0.0057446514 0.0036667686 0.0016877050 1.344403e-03 #>  [187,] 0.038105515 0.0058275442 0.0037197906 0.0017121587 1.363889e-03 #>  [188,] 0.038637215 0.0059116260 0.0037735764 0.0017369661 1.383657e-03 #>  [189,] 0.039176032 0.0059969136 0.0038281370 0.0017621322 1.403712e-03 #>  [190,] 0.039722052 0.0060834242 0.0038834834 0.0017876623 1.424056e-03 #>  [191,] 0.040275364 0.0061711750 0.0039396267 0.0018135617 1.444695e-03 #>  [192,] 0.040836055 0.0062601836 0.0039965785 0.0018398355 1.465633e-03 #>  [193,] 0.041404215 0.0063504678 0.0040543503 0.0018664893 1.486874e-03 #>  [194,] 0.041979934 0.0064420456 0.0041129536 0.0018935285 1.508422e-03 #>  [195,] 0.042563303 0.0065349354 0.0041724006 0.0019209587 1.530282e-03 #>  [196,] 0.043154413 0.0066291556 0.0042327031 0.0019487854 1.552458e-03 #>  [197,] 0.043753358 0.0067247251 0.0042938733 0.0019770144 1.574955e-03 #>  [198,] 0.044360230 0.0068216629 0.0043559238 0.0020056516 1.597778e-03 #>  [199,] 0.044975123 0.0069199883 0.0044188669 0.0020347026 1.620931e-03 #>  [200,] 0.045598133 0.0070197210 0.0044827155 0.0020641736 1.644418e-03 #>  [201,] 0.046229356 0.0071208807 0.0045474824 0.0020940706 1.668246e-03 #>  [202,] 0.046868887 0.0072234876 0.0046131807 0.0021243997 1.692418e-03 #>  [203,] 0.047516825 0.0073275621 0.0046798237 0.0021551671 1.716940e-03 #>  [204,] 0.048173268 0.0074331249 0.0047474249 0.0021863791 1.741816e-03 #>  [205,] 0.048838314 0.0075401968 0.0048159979 0.0022180421 1.767053e-03 #>  [206,] 0.049512064 0.0076487993 0.0048855564 0.0022501627 1.792654e-03 #>  [207,] 0.050194618 0.0077589537 0.0049561147 0.0022827473 1.818626e-03 #>  [208,] 0.050886078 0.0078706819 0.0050276868 0.0023158027 1.844973e-03 #>  [209,] 0.051586545 0.0079840060 0.0051002872 0.0023493356 1.871701e-03 #>  [210,] 0.052296124 0.0080989485 0.0051739305 0.0023833530 1.898815e-03 #>  [211,] 0.053014917 0.0082155321 0.0052486315 0.0024178616 1.926322e-03 #>  [212,] 0.053743030 0.0083337798 0.0053244053 0.0024528688 1.954226e-03 #>  [213,] 0.054480567 0.0084537149 0.0054012670 0.0024883815 1.982534e-03 #>  [214,] 0.055227636 0.0085753612 0.0054792323 0.0025244070 2.011251e-03 #>  [215,] 0.055984341 0.0086987425 0.0055583166 0.0025609528 2.040383e-03 #>  [216,] 0.056750793 0.0088238832 0.0056385359 0.0025980263 2.069936e-03 #>  [217,] 0.057527097 0.0089508080 0.0057199063 0.0026356350 2.099916e-03 #>  [218,] 0.058313365 0.0090795418 0.0058024442 0.0026737867 2.130330e-03 #>  [219,] 0.059109705 0.0092101098 0.0058861659 0.0027124892 2.161183e-03 #>  [220,] 0.059916228 0.0093425378 0.0059710885 0.0027517503 2.192482e-03 #>  [221,] 0.060733045 0.0094768517 0.0060572288 0.0027915781 2.224233e-03 #>  [222,] 0.061560268 0.0096130778 0.0061446040 0.0028319807 2.256443e-03 #>  [223,] 0.062398011 0.0097512429 0.0062332318 0.0028729664 2.289118e-03 #>  [224,] 0.063246385 0.0098913739 0.0063231298 0.0029145435 2.322266e-03 #>  [225,] 0.064105506 0.0100334982 0.0064143159 0.0029567205 2.355892e-03 #>  [226,] 0.064975487 0.0101776437 0.0065068085 0.0029995061 2.390004e-03 #>  [227,] 0.065856443 0.0103238385 0.0066006258 0.0030429089 2.424609e-03 #>  [228,] 0.066748492 0.0104721110 0.0066957868 0.0030869378 2.459713e-03 #>  [229,] 0.067651748 0.0106224902 0.0067923103 0.0031316017 2.495325e-03 #>  [230,] 0.068566329 0.0107750053 0.0068902156 0.0031769098 2.531451e-03 #>  [231,] 0.069492353 0.0109296860 0.0069895222 0.0032228713 2.568098e-03 #>  [232,] 0.070429938 0.0110865623 0.0070902498 0.0032694956 2.605275e-03 #>  [233,] 0.071379203 0.0112456647 0.0071924186 0.0033167922 2.642988e-03 #>  [234,] 0.072340266 0.0114070240 0.0072960487 0.0033647706 2.681246e-03 #>  [235,] 0.073313247 0.0115706715 0.0074011609 0.0034134406 2.720056e-03 #>  [236,] 0.074298267 0.0117366389 0.0075077759 0.0034628122 2.759427e-03 #>  [237,] 0.075295445 0.0119049581 0.0076159149 0.0035128954 2.799365e-03 #>  [238,] 0.076304905 0.0120756619 0.0077255995 0.0035637004 2.839880e-03 #>  [239,] 0.077326766 0.0122487829 0.0078368512 0.0036152375 2.880980e-03 #>  [240,] 0.078361150 0.0124243547 0.0079496921 0.0036675171 2.922673e-03 #>  [241,] 0.079408181 0.0126024110 0.0080641446 0.0037205499 2.964967e-03 #>  [242,] 0.080467980 0.0127829861 0.0081802313 0.0037743467 3.007872e-03 #>  [243,] 0.081540670 0.0129661145 0.0082979752 0.0038289184 3.051395e-03 #>  [244,] 0.082626376 0.0131518315 0.0084173994 0.0038842760 3.095546e-03 #>  [245,] 0.083725219 0.0133401726 0.0085385276 0.0039404308 3.140334e-03 #>  [246,] 0.084837325 0.0135311738 0.0086613836 0.0039973941 3.185768e-03 #>  [247,] 0.085962816 0.0137248718 0.0087859917 0.0040551776 3.231858e-03 #>  [248,] 0.087101818 0.0139213033 0.0089123763 0.0041137929 3.278612e-03 #>  [249,] 0.088254454 0.0141205060 0.0090405624 0.0041732519 3.326040e-03 #>  [250,] 0.089420850 0.0143225177 0.0091705751 0.0042335667 3.374151e-03 #>  [251,] 0.090601128 0.0145273768 0.0093024399 0.0042947494 3.422957e-03 #>  [252,] 0.091795416 0.0147351223 0.0094361828 0.0043568124 3.472465e-03 #>  [253,] 0.093003835 0.0149457936 0.0095718300 0.0044197683 3.522688e-03 #>  [254,] 0.094226513 0.0151594305 0.0097094080 0.0044836298 3.573634e-03 #>  [255,] 0.095463572 0.0153760736 0.0098489438 0.0045484099 3.625314e-03 #>  [256,] 0.096715139 0.0155957636 0.0099904647 0.0046141216 3.677739e-03 #>  [257,] 0.097981336 0.0158185421 0.0101339983 0.0046807781 3.730919e-03 #>  [258,] 0.099262289 0.0160444510 0.0102795726 0.0047483930 3.784865e-03 #>  [259,] 0.100558121 0.0162735328 0.0104272160 0.0048169799 3.839588e-03 #>  [260,] 0.101868957 0.0165058306 0.0105769574 0.0048865526 3.895099e-03 #>  [261,] 0.103194920 0.0167413879 0.0107288259 0.0049571251 3.951410e-03 #>  [262,] 0.104536133 0.0169802488 0.0108828509 0.0050287118 4.008531e-03 #>  [263,] 0.105892719 0.0172224581 0.0110390625 0.0051013269 4.066475e-03 #>  [264,] 0.107264802 0.0174680608 0.0111974909 0.0051749851 4.125253e-03 #>  [265,] 0.108652502 0.0177171029 0.0113581670 0.0052497013 4.184877e-03 #>  [266,] 0.110055942 0.0179696306 0.0115211217 0.0053254904 4.245359e-03 #>  [267,] 0.111475243 0.0182256909 0.0116863868 0.0054023678 4.306712e-03 #>  [268,] 0.112910525 0.0184853312 0.0118539940 0.0054803488 4.368947e-03 #>  [269,] 0.114361908 0.0187485998 0.0120239759 0.0055594491 4.432077e-03 #>  [270,] 0.115829512 0.0190155451 0.0121963651 0.0056396847 4.496116e-03 #>  [271,] 0.117313455 0.0192862166 0.0123711949 0.0057210716 4.561075e-03 #>  [272,] 0.118813854 0.0195606640 0.0125484991 0.0058036262 4.626969e-03 #>  [273,] 0.120330828 0.0198389379 0.0127283116 0.0058873649 4.693810e-03 #>  [274,] 0.121864490 0.0201210894 0.0129106670 0.0059723046 4.761613e-03 #>  [275,] 0.123414958 0.0204071700 0.0130956003 0.0060584624 4.830390e-03 #>  [276,] 0.124982344 0.0206972323 0.0132831470 0.0061458553 4.900155e-03 #>  [277,] 0.126566762 0.0209913290 0.0134733429 0.0062345010 4.970923e-03 #>  [278,] 0.128168324 0.0212895139 0.0136662245 0.0063244172 5.042708e-03 #>  [279,] 0.129787141 0.0215918411 0.0138618285 0.0064156218 5.115524e-03 #>  [280,] 0.131423321 0.0218983655 0.0140601923 0.0065081330 5.189386e-03 #>  [281,] 0.133076974 0.0222091427 0.0142613536 0.0066019694 5.264309e-03 #>  [282,] 0.134748207 0.0225242288 0.0144653507 0.0066971496 5.340308e-03 #>  [283,] 0.136437124 0.0228436806 0.0146722224 0.0067936926 5.417398e-03 #>  [284,] 0.138143830 0.0231675557 0.0148820080 0.0068916177 5.495595e-03 #>  [285,] 0.139868428 0.0234959123 0.0150947471 0.0069909443 5.574914e-03 #>  [286,] 0.141611018 0.0238288092 0.0153104801 0.0070916923 5.655372e-03 #>  [287,] 0.143371700 0.0241663059 0.0155292477 0.0071938817 5.736984e-03 #>  [288,] 0.145150571 0.0245084627 0.0157510913 0.0072975328 5.819766e-03 #>  [289,] 0.146947727 0.0248553405 0.0159760525 0.0074026661 5.903737e-03 #>  [290,] 0.148763262 0.0252070010 0.0162041739 0.0075093027 5.988911e-03 #>  [291,] 0.150597268 0.0255635064 0.0164354981 0.0076174635 6.075307e-03 #>  [292,] 0.152449835 0.0259249198 0.0166700687 0.0077271702 6.162941e-03 #>  [293,] 0.154321051 0.0262913050 0.0169079296 0.0078384443 6.251832e-03 #>  [294,] 0.156211002 0.0266627264 0.0171491252 0.0079513080 6.341997e-03 #>  [295,] 0.158119771 0.0270392492 0.0173937007 0.0080657836 6.433453e-03 #>  [296,] 0.160047439 0.0274209394 0.0176417017 0.0081818937 6.526220e-03 #>  [297,] 0.161994086 0.0278078636 0.0178931742 0.0082996613 6.620315e-03 #>  [298,] 0.163959789 0.0282000891 0.0181481652 0.0084191096 6.715758e-03 #>  [299,] 0.165944620 0.0285976842 0.0184067218 0.0085402622 6.812567e-03 #>  [300,] 0.167948653 0.0290007178 0.0186688921 0.0086631429 6.910763e-03 #>  [301,] 0.169971955 0.0294092594 0.0189347245 0.0087877761 7.010363e-03 #>  [302,] 0.172014593 0.0298233795 0.0192042681 0.0089141861 7.111389e-03 #>  [303,] 0.174076630 0.0302431493 0.0194775725 0.0090423980 7.213860e-03 #>  [304,] 0.176158126 0.0306686406 0.0197546882 0.0091724368 7.317797e-03 #>  [305,] 0.178259141 0.0310999262 0.0200356659 0.0093043282 7.423220e-03 #>  [306,] 0.180379727 0.0315370795 0.0203205572 0.0094380980 7.530151e-03 #>  [307,] 0.182519936 0.0319801748 0.0206094142 0.0095737725 7.638609e-03 #>  [308,] 0.184679818 0.0324292871 0.0209022898 0.0097113781 7.748618e-03 #>  [309,] 0.186859416 0.0328844923 0.0211992372 0.0098509420 7.860199e-03 #>  [310,] 0.189058774 0.0333458669 0.0215003106 0.0099924912 7.973373e-03 #>  [311,] 0.191277928 0.0338134883 0.0218055646 0.0101360536 8.088164e-03 #>  [312,] 0.193516915 0.0342874347 0.0221150545 0.0102816572 8.204594e-03 #>  [313,] 0.195775766 0.0347677852 0.0224288363 0.0104293303 8.322685e-03 #>  [314,] 0.198054508 0.0352546195 0.0227469667 0.0105791017 8.442462e-03 #>  [315,] 0.200353166 0.0357480182 0.0230695030 0.0107310006 8.563948e-03 #>  [316,] 0.202671760 0.0362480627 0.0233965032 0.0108850565 8.687166e-03 #>  [317,] 0.205010308 0.0367548352 0.0237280258 0.0110412994 8.812142e-03 #>  [318,] 0.207368821 0.0372684188 0.0240641303 0.0111997596 8.938899e-03 #>  [319,] 0.209747308 0.0377888972 0.0244048767 0.0113604678 9.067463e-03 #>  [320,] 0.212145775 0.0383163552 0.0247503256 0.0115234552 9.197859e-03 #>  [321,] 0.214564221 0.0388508782 0.0251005385 0.0116887533 9.330113e-03 #>  [322,] 0.217002644 0.0393925525 0.0254555775 0.0118563941 9.464250e-03 #>  [323,] 0.219461036 0.0399414652 0.0258155055 0.0120264099 9.600297e-03 #>  [324,] 0.221939384 0.0404977042 0.0261803859 0.0121988336 9.738280e-03 #>  [325,] 0.224437672 0.0410613582 0.0265502831 0.0123736984 9.878226e-03 #>  [326,] 0.226955879 0.0416325169 0.0269252619 0.0125510380 1.002016e-02 #>  [327,] 0.229493980 0.0422112707 0.0273053882 0.0127308864 1.016412e-02 #>  [328,] 0.232051945 0.0427977107 0.0276907283 0.0129132782 1.031012e-02 #>  [329,] 0.234629739 0.0433919289 0.0280813494 0.0130982484 1.045820e-02 #>  [330,] 0.237227323 0.0439940183 0.0284773195 0.0132858325 1.060838e-02 #>  [331,] 0.239844653 0.0446040726 0.0288787071 0.0134760664 1.076070e-02 #>  [332,] 0.242481680 0.0452221861 0.0292855818 0.0136689864 1.091517e-02 #>  [333,] 0.245138351 0.0458484543 0.0296980136 0.0138646294 1.107184e-02 #>  [334,] 0.247814606 0.0464829732 0.0301160736 0.0140630326 1.123074e-02 #>  [335,] 0.250510383 0.0471258398 0.0305398334 0.0142642340 1.139188e-02 #>  [336,] 0.253225613 0.0477771519 0.0309693655 0.0144682717 1.155532e-02 #>  [337,] 0.255960221 0.0484370079 0.0314047431 0.0146751846 1.172107e-02 #>  [338,] 0.258714131 0.0491055074 0.0318460402 0.0148850119 1.188917e-02 #>  [339,] 0.261487256 0.0497827504 0.0322933316 0.0150977933 1.205965e-02 #>  [340,] 0.264279510 0.0504688380 0.0327466930 0.0153135692 1.223254e-02 #>  [341,] 0.267090796 0.0511638718 0.0332062006 0.0155323802 1.240788e-02 #>  [342,] 0.269921016 0.0518679544 0.0336719317 0.0157542678 1.258571e-02 #>  [343,] 0.272770065 0.0525811893 0.0341439641 0.0159792737 1.276604e-02 #>  [344,] 0.275637832 0.0533036804 0.0346223767 0.0162074402 1.294893e-02 #>  [345,] 0.278524202 0.0540355327 0.0351072490 0.0164388103 1.313441e-02 #>  [346,] 0.281429054 0.0547768518 0.0355986613 0.0166734274 1.332250e-02 #>  [347,] 0.284352262 0.0555277442 0.0360966948 0.0169113354 1.351325e-02 #>  [348,] 0.287293693 0.0562883170 0.0366014314 0.0171525788 1.370670e-02 #>  [349,] 0.290253211 0.0570586781 0.0371129540 0.0173972026 1.390287e-02 #>  [350,] 0.293230672 0.0578389362 0.0376313462 0.0176452526 1.410182e-02 #>  [351,] 0.296225929 0.0586292007 0.0381566923 0.0178967749 1.430357e-02 #>  [352,] 0.299238828 0.0594295815 0.0386890775 0.0181518162 1.450816e-02 #>  [353,] 0.302269209 0.0602401897 0.0392285880 0.0184104239 1.471563e-02 #>  [354,] 0.305316908 0.0610611366 0.0397753105 0.0186726459 1.492603e-02 #>  [355,] 0.308381754 0.0618925344 0.0403293328 0.0189385307 1.513939e-02 #>  [356,] 0.311463572 0.0627344961 0.0408907433 0.0192081274 1.535575e-02 #>  [357,] 0.314562181 0.0635871352 0.0414596314 0.0194814857 1.557515e-02 #>  [358,] 0.317677394 0.0644505657 0.0420360872 0.0197586559 1.579764e-02 #>  [359,] 0.320809018 0.0653249027 0.0426202017 0.0200396889 1.602326e-02 #>  [360,] 0.323956856 0.0662102614 0.0432120666 0.0203246362 1.625204e-02 #>  [361,] 0.327120705 0.0671067581 0.0438117746 0.0206135500 1.648404e-02 #>  [362,] 0.330300357 0.0680145093 0.0444194191 0.0209064830 1.671929e-02 #>  [363,] 0.333495597 0.0689336323 0.0450350944 0.0212034888 1.695784e-02 #>  [364,] 0.336706206 0.0698642449 0.0456588955 0.0215046212 1.719974e-02 #>  [365,] 0.339931960 0.0708064654 0.0462909183 0.0218099350 1.744502e-02 #>  [366,] 0.343172629 0.0717604128 0.0469312595 0.0221194856 1.769374e-02 #>  [367,] 0.346427978 0.0727262064 0.0475800166 0.0224333288 1.794594e-02 #>  [368,] 0.349697766 0.0737039662 0.0482372879 0.0227515215 1.820167e-02 #>  [369,] 0.352981748 0.0746938125 0.0489031726 0.0230741208 1.846097e-02 #>  [370,] 0.356279674 0.0756958660 0.0495777706 0.0234011849 1.872390e-02 #>  [371,] 0.359591288 0.0767102482 0.0502611826 0.0237327722 1.899050e-02 #>  [372,] 0.362916330 0.0777370806 0.0509535102 0.0240689423 1.926082e-02 #>  [373,] 0.366254533 0.0787764853 0.0516548556 0.0244097551 1.953492e-02 #>  [374,] 0.369605628 0.0798285846 0.0523653219 0.0247552713 1.981283e-02 #>  [375,] 0.372969340 0.0808935014 0.0530850131 0.0251055524 2.009462e-02 #>  [376,] 0.376345389 0.0819713588 0.0538140338 0.0254606605 2.038033e-02 #>  [377,] 0.379733490 0.0830622800 0.0545524894 0.0258206585 2.067002e-02 #>  [378,] 0.383133354 0.0841663888 0.0553004861 0.0261856098 2.096374e-02 #>  [379,] 0.386544689 0.0852838089 0.0560581309 0.0265555787 2.126154e-02 #>  [380,] 0.389967196 0.0864146644 0.0568255314 0.0269306303 2.156348e-02 #>  [381,] 0.393400573 0.0875590796 0.0576027960 0.0273108302 2.186961e-02 #>  [382,] 0.396844513 0.0887171789 0.0583900340 0.0276962449 2.217999e-02 #>  [383,] 0.400298708 0.0898890868 0.0591873552 0.0280869416 2.249467e-02 #>  [384,] 0.403762842 0.0910749278 0.0599948701 0.0284829882 2.281371e-02 #>  [385,] 0.407236596 0.0922748267 0.0608126902 0.0288844534 2.313717e-02 #>  [386,] 0.410719650 0.0934889080 0.0616409273 0.0292914066 2.346511e-02 #>  [387,] 0.414211677 0.0947172965 0.0624796942 0.0297039179 2.379758e-02 #>  [388,] 0.417712349 0.0959601167 0.0633291041 0.0301220584 2.413465e-02 #>  [389,] 0.421221332 0.0972174931 0.0641892712 0.0305458998 2.447637e-02 #>  [390,] 0.424738290 0.0984895502 0.0650603099 0.0309755144 2.482280e-02 #>  [391,] 0.428262885 0.0997764122 0.0659423356 0.0314109757 2.517401e-02 #>  [392,] 0.431794775 0.1010782031 0.0668354641 0.0318523575 2.553006e-02 #>  [393,] 0.435333613 0.1023950466 0.0677398120 0.0322997347 2.589102e-02 #>  [394,] 0.438879053 0.1037270663 0.0686554963 0.0327531829 2.625694e-02 #>  [395,] 0.442430743 0.1050743854 0.0695826347 0.0332127785 2.662789e-02 #>  [396,] 0.445988331 0.1064371266 0.0705213452 0.0336785986 2.700393e-02 #>  [397,] 0.449551461 0.1078154124 0.0714717468 0.0341507212 2.738514e-02 #>  [398,] 0.453119775 0.1092093647 0.0724339585 0.0346292251 2.777157e-02 #>  [399,] 0.456692913 0.1106191050 0.0734081003 0.0351141897 2.816330e-02 #>  [400,] 0.460270513 0.1120447540 0.0743942922 0.0356056956 2.856039e-02 #>  [401,] 0.463852212 0.1134864323 0.0753926549 0.0361038238 2.896291e-02 #>  [402,] 0.467437645 0.1149442593 0.0764033097 0.0366086564 2.937094e-02 #>  [403,] 0.471026443 0.1164183540 0.0774263780 0.0371202761 2.978454e-02 #>  [404,] 0.474618239 0.1179088347 0.0784619818 0.0376387665 3.020378e-02 #>  [405,] 0.478212664 0.1194158187 0.0795102433 0.0381642121 3.062873e-02 #>  [406,] 0.481809346 0.1209394226 0.0805712853 0.0386966981 3.105947e-02 #>  [407,] 0.485407914 0.1224797621 0.0816452307 0.0392363105 3.149608e-02 #>  [408,] 0.489007996 0.1240369519 0.0827322028 0.0397831361 3.193861e-02 #>  [409,] 0.492609219 0.1256111056 0.0838323251 0.0403372628 3.238716e-02 #>  [410,] 0.496211208 0.1272023359 0.0849457214 0.0408987790 3.284180e-02 #>  [411,] 0.499813591 0.1288107543 0.0860725158 0.0414677741 3.330259e-02 #>  [412,] 0.503415994 0.1304364709 0.0872128324 0.0420443381 3.376963e-02 #>  [413,] 0.507018041 0.1320795950 0.0883667956 0.0426285621 3.424298e-02 #>  [414,] 0.510619361 0.1337402343 0.0895345298 0.0432205379 3.472273e-02 #>  [415,] 0.514219578 0.1354184950 0.0907161596 0.0438203581 3.520896e-02 #>  [416,] 0.517818320 0.1371144823 0.0919118097 0.0444281162 3.570174e-02 #>  [417,] 0.521415215 0.1388282995 0.0931216048 0.0450439063 3.620116e-02 #>  [418,] 0.525009890 0.1405600486 0.0943456694 0.0456678236 3.670730e-02 #>  [419,] 0.528601976 0.1423098298 0.0955841282 0.0462999640 3.722025e-02 #>  [420,] 0.532191102 0.1440777418 0.0968371058 0.0469404242 3.774008e-02 #>  [421,] 0.535776899 0.1458638814 0.0981047265 0.0475893016 3.826689e-02 #>  [422,] 0.539359002 0.1476683437 0.0993871147 0.0482466948 3.880075e-02 #>  [423,] 0.542937043 0.1494912218 0.1006843944 0.0489127026 3.934175e-02 #>  [424,] 0.546510660 0.1513326069 0.1019966896 0.0495874252 3.988998e-02 #>  [425,] 0.550079490 0.1531925882 0.1033241237 0.0502709633 4.044554e-02 #>  [426,] 0.553643173 0.1550712529 0.1046668201 0.0509634183 4.100850e-02 #>  [427,] 0.557201351 0.1569686858 0.1060249018 0.0516648927 4.157895e-02 #>  [428,] 0.560753668 0.1588849696 0.1073984911 0.0523754895 4.215699e-02 #>  [429,] 0.564299771 0.1608201848 0.1087877103 0.0530953126 4.274271e-02 #>  [430,] 0.567839309 0.1627744094 0.1101926809 0.0538244667 4.333620e-02 #>  [431,] 0.571371933 0.1647477190 0.1116135239 0.0545630572 4.393755e-02 #>  [432,] 0.574897299 0.1667401866 0.1130503599 0.0553111903 4.454686e-02 #>  [433,] 0.578415063 0.1687518827 0.1145033088 0.0560689730 4.516422e-02 #>  [434,] 0.581924887 0.1707828752 0.1159724895 0.0568365130 4.578972e-02 #>  [435,] 0.585426434 0.1728332291 0.1174580207 0.0576139187 4.642347e-02 #>  [436,] 0.588919372 0.1749030066 0.1189600200 0.0584012992 4.706555e-02 #>  [437,] 0.592403369 0.1769922672 0.1204786041 0.0591987646 4.771607e-02 #>  [438,] 0.595878101 0.1791010673 0.1220138891 0.0600064253 4.837513e-02 #>  [439,] 0.599343245 0.1812294602 0.1235659899 0.0608243927 4.904282e-02 #>  [440,] 0.602798483 0.1833774962 0.1251350204 0.0616527787 4.971924e-02 #>  [441,] 0.606243500 0.1855452225 0.1267210938 0.0624916961 5.040450e-02 #>  [442,] 0.609677984 0.1877326827 0.1283243217 0.0633412582 5.109870e-02 #>  [443,] 0.613101630 0.1899399176 0.1299448148 0.0642015790 5.180193e-02 #>  [444,] 0.616514135 0.1921669640 0.1315826826 0.0650727731 5.251431e-02 #>  [445,] 0.619915200 0.1944138557 0.1332380333 0.0659549558 5.323593e-02 #>  [446,] 0.623304532 0.1966806227 0.1349109736 0.0668482431 5.396691e-02 #>  [447,] 0.626681841 0.1989672914 0.1366016089 0.0677527513 5.470734e-02 #>  [448,] 0.630046843 0.2012738846 0.1383100431 0.0686685977 5.545733e-02 #>  [449,] 0.633399256 0.2036004211 0.1400363787 0.0695958997 5.621700e-02 #>  [450,] 0.636738807 0.2059469161 0.1417807164 0.0705347757 5.698644e-02 #>  [451,] 0.640065223 0.2083133807 0.1435431553 0.0714853443 5.776578e-02 #>  [452,] 0.643378238 0.2106998222 0.1453237928 0.0724477248 5.855510e-02 #>  [453,] 0.646677593 0.2131062436 0.1471227246 0.0734220370 5.935454e-02 #>  [454,] 0.649963030 0.2155326441 0.1489400443 0.0744084011 6.016419e-02 #>  [455,] 0.653234298 0.2179790182 0.1507758438 0.0754069378 6.098416e-02 #>  [456,] 0.656491153 0.2204453567 0.1526302128 0.0764177682 6.181458e-02 #>  [457,] 0.659733352 0.2229316457 0.1545032391 0.0774410139 6.265555e-02 #>  [458,] 0.662960660 0.2254378669 0.1563950083 0.0784767968 6.350719e-02 #>  [459,] 0.666172847 0.2279639977 0.1583056038 0.0795252392 6.436961e-02 #>  [460,] 0.669369688 0.2305100110 0.1602351067 0.0805864637 6.524293e-02 #>  [461,] 0.672550963 0.2330758749 0.1621835957 0.0816605935 6.612725e-02 #>  [462,] 0.675716457 0.2356615529 0.1641511471 0.0827477517 6.702271e-02 #>  [463,] 0.678865962 0.2382670040 0.1661378349 0.0838480618 6.792940e-02 #>  [464,] 0.681999273 0.2408921823 0.1681437302 0.0849616478 6.884746e-02 #>  [465,] 0.685116193 0.2435370368 0.1701689017 0.0860886336 6.977700e-02 #>  [466,] 0.688216529 0.2462015121 0.1722134153 0.0872291433 7.071813e-02 #>  [467,] 0.691300094 0.2488855477 0.1742773341 0.0883833014 7.167098e-02 #>  [468,] 0.694366705 0.2515890778 0.1763607183 0.0895512323 7.263567e-02 #>  [469,] 0.697416186 0.2543120320 0.1784636254 0.0907330606 7.361231e-02 #>  [470,] 0.700448367 0.2570543347 0.1805861095 0.0919289110 7.460102e-02 #>  [471,] 0.703463083 0.2598159050 0.1827282220 0.0931389080 7.560193e-02 #>  [472,] 0.706460173 0.2625966570 0.1848900108 0.0943631764 7.661516e-02 #>  [473,] 0.709439483 0.2653964995 0.1870715208 0.0956018408 7.764082e-02 #>  [474,] 0.712400864 0.2682153362 0.1892727935 0.0968550256 7.867905e-02 #>  [475,] 0.715344174 0.2710530654 0.1914938670 0.0981228555 7.972996e-02 #>  [476,] 0.718269273 0.2739095800 0.1937347760 0.0994054545 8.079368e-02 #>  [477,] 0.721176031 0.2767847678 0.1959955516 0.1007029469 8.187032e-02 #>  [478,] 0.724064319 0.2796785109 0.1982762214 0.1020154564 8.296002e-02 #>  [479,] 0.726934017 0.2825906863 0.2005768091 0.1033431067 8.406290e-02 #>  [480,] 0.729785008 0.2855211655 0.2028973349 0.1046860210 8.517907e-02 #>  [481,] 0.732617182 0.2884698143 0.2052378150 0.1060443222 8.630867e-02 #>  [482,] 0.735430432 0.2914364935 0.2075982619 0.1074181330 8.745181e-02 #>  [483,] 0.738224660 0.2944210580 0.2099786838 0.1088075752 8.860863e-02 #>  [484,] 0.740999769 0.2974233574 0.2123790852 0.1102127707 8.977925e-02 #>  [485,] 0.743755671 0.3004432357 0.2147994663 0.1116338403 9.096378e-02 #>  [486,] 0.746492281 0.3034805317 0.2172398232 0.1130709045 9.216237e-02 #>  [487,] 0.749209520 0.3065350783 0.2197001477 0.1145240833 9.337512e-02 #>  [488,] 0.751907313 0.3096067031 0.2221804273 0.1159934957 9.460217e-02 #>  [489,] 0.754585592 0.3126952282 0.2246806451 0.1174792602 9.584364e-02 #>  [490,] 0.757244292 0.3158004702 0.2272007798 0.1189814944 9.709966e-02 #>  [491,] 0.759883355 0.3189222402 0.2297408057 0.1205003152 9.837034e-02 #>  [492,] 0.762502726 0.3220603437 0.2323006922 0.1220358385 9.965581e-02 #>  [493,] 0.765102355 0.3252145810 0.2348804043 0.1235881791 1.009562e-01 #>  [494,] 0.767682199 0.3283847468 0.2374799024 0.1251574512 1.022716e-01 #>  [495,] 0.770242218 0.3315706306 0.2400991420 0.1267437677 1.036022e-01 #>  [496,] 0.772782376 0.3347720162 0.2427380737 0.1283472403 1.049481e-01 #>  [497,] 0.775302643 0.3379886823 0.2453966434 0.1299679797 1.063094e-01 #>  [498,] 0.777802994 0.3412204022 0.2480747921 0.1316060954 1.076863e-01 #>  [499,] 0.780283406 0.3444669441 0.2507724557 0.1332616953 1.090787e-01 #>  [500,] 0.782743864 0.3477280708 0.2534895652 0.1349348865 1.104870e-01 #>  [501,] 0.785184353 0.3510035398 0.2562260464 0.1366257741 1.119112e-01 #>  [502,] 0.787604868 0.3542931038 0.2589818202 0.1383344622 1.133514e-01 #>  [503,] 0.790005402 0.3575965103 0.2617568021 0.1400610530 1.148077e-01 #>  [504,] 0.792385957 0.3609135016 0.2645509026 0.1418056473 1.162802e-01 #>  [505,] 0.794746537 0.3642438153 0.2673640268 0.1435683443 1.177692e-01 #>  [506,] 0.797087150 0.3675871840 0.2701960746 0.1453492413 1.192746e-01 #>  [507,] 0.799407808 0.3709433355 0.2730469408 0.1471484338 1.207967e-01 #>  [508,] 0.801708529 0.3743119927 0.2759165145 0.1489660157 1.223355e-01 #>  [509,] 0.803989331 0.3776928742 0.2788046796 0.1508020785 1.238911e-01 #>  [510,] 0.806250239 0.3810856935 0.2817113146 0.1526567122 1.254636e-01 #>  [511,] 0.808491280 0.3844901600 0.2846362927 0.1545300044 1.270533e-01 #>  [512,] 0.810712486 0.3879059786 0.2875794815 0.1564220407 1.286601e-01 #>  [513,] 0.812913890 0.3913328496 0.2905407431 0.1583329045 1.302842e-01 #>  [514,] 0.815095531 0.3947704693 0.2935199343 0.1602626767 1.319257e-01 #>  [515,] 0.817257451 0.3982185300 0.2965169063 0.1622114362 1.335847e-01 #>  [516,] 0.819399695 0.4016767195 0.2995315049 0.1641792592 1.352613e-01 #>  [517,] 0.821522309 0.4051447220 0.3025635703 0.1661662196 1.369556e-01 #>  [518,] 0.823625347 0.4086222178 0.3056129371 0.1681723885 1.386678e-01 #>  [519,] 0.825708861 0.4121088834 0.3086794348 0.1701978345 1.403978e-01 #>  [520,] 0.827772909 0.4156043917 0.3117628869 0.1722426236 1.421459e-01 #>  [521,] 0.829817551 0.4191084122 0.3148631117 0.1743068187 1.439122e-01 #>  [522,] 0.831842851 0.4226206109 0.3179799220 0.1763904801 1.456966e-01 #>  [523,] 0.833848875 0.4261406505 0.3211131250 0.1784936652 1.474993e-01 #>  [524,] 0.835835690 0.4296681908 0.3242625225 0.1806164280 1.493205e-01 #>  [525,] 0.837803369 0.4332028883 0.3274279110 0.1827588199 1.511602e-01 #>  [526,] 0.839751984 0.4367443968 0.3306090814 0.1849208888 1.530184e-01 #>  [527,] 0.841681613 0.4402923673 0.3338058194 0.1871026795 1.548953e-01 #>  [528,] 0.843592335 0.4438464480 0.3370179051 0.1893042335 1.567910e-01 #>  [529,] 0.845484229 0.4474062850 0.3402451135 0.1915255888 1.587055e-01 #>  [530,] 0.847357380 0.4509715218 0.3434872142 0.1937667800 1.606390e-01 #>  [531,] 0.849211873 0.4545417996 0.3467439718 0.1960278383 1.625914e-01 #>  [532,] 0.851047795 0.4581167579 0.3500151453 0.1983087911 1.645629e-01 #>  [533,] 0.852865238 0.4616960338 0.3533004888 0.2006096622 1.665536e-01 #>  [534,] 0.854664292 0.4652792630 0.3565997514 0.2029304716 1.685635e-01 #>  [535,] 0.856445051 0.4688660795 0.3599126770 0.2052712355 1.705927e-01 #>  [536,] 0.858207610 0.4724561157 0.3632390046 0.2076319663 1.726413e-01 #>  [537,] 0.859952068 0.4760490028 0.3665784683 0.2100126723 1.747092e-01 #>  [538,] 0.861678523 0.4796443707 0.3699307972 0.2124133578 1.767967e-01 #>  [539,] 0.863387076 0.4832418484 0.3732957159 0.2148340229 1.789036e-01 #>  [540,] 0.865077830 0.4868410640 0.3766729441 0.2172746638 1.810302e-01 #>  [541,] 0.866750888 0.4904416447 0.3800621970 0.2197352721 1.831764e-01 #>  [542,] 0.868406355 0.4940432174 0.3834631851 0.2222158353 1.853423e-01 #>  [543,] 0.870044339 0.4976454084 0.3868756146 0.2247163364 1.875279e-01 #>  [544,] 0.871664947 0.5012478439 0.3902991872 0.2272367541 1.897333e-01 #>  [545,] 0.873268290 0.5048501498 0.3937336006 0.2297770626 1.919585e-01 #>  [546,] 0.874854477 0.5084519522 0.3971785481 0.2323372312 1.942035e-01 #>  [547,] 0.876423621 0.5120528775 0.4006337188 0.2349172250 1.964685e-01 #>  [548,] 0.877975834 0.5156525521 0.4040987981 0.2375170041 1.987533e-01 #>  [549,] 0.879511230 0.5192506033 0.4075734675 0.2401365239 2.010580e-01 #>  [550,] 0.881029925 0.5228466590 0.4110574045 0.2427757353 2.033827e-01 #>  [551,] 0.882532035 0.5264403477 0.4145502831 0.2454345838 2.057273e-01 #>  [552,] 0.884017675 0.5300312990 0.4180517739 0.2481130104 2.080919e-01 #>  [553,] 0.885486964 0.5336191439 0.4215615439 0.2508109510 2.104765e-01 #>  [554,] 0.886940021 0.5372035142 0.4250792567 0.2535283364 2.128811e-01 #>  [555,] 0.888376964 0.5407840436 0.4286045731 0.2562650925 2.153056e-01 #>  [556,] 0.889797913 0.5443603670 0.4321371504 0.2590211400 2.177501e-01 #>  [557,] 0.891202989 0.5479321212 0.4356766434 0.2617963943 2.202146e-01 #>  [558,] 0.892592312 0.5514989450 0.4392227037 0.2645907660 2.226990e-01 #>  [559,] 0.893966005 0.5550604790 0.4427749806 0.2674041599 2.252034e-01 #>  [560,] 0.895324190 0.5586163660 0.4463331207 0.2702364761 2.277277e-01 #>  [561,] 0.896666988 0.5621662512 0.4498967681 0.2730876090 2.302718e-01 #>  [562,] 0.897994523 0.5657097822 0.4534655650 0.2759574479 2.328358e-01 #>  [563,] 0.899306919 0.5692466092 0.4570391511 0.2788458765 2.354197e-01 #>  [564,] 0.900604298 0.5727763851 0.4606171644 0.2817527732 2.380233e-01 #>  [565,] 0.901886785 0.5762987655 0.4641992409 0.2846780111 2.406466e-01 #>  [566,] 0.903154504 0.5798134091 0.4677850152 0.2876214578 2.432896e-01 #>  [567,] 0.904407578 0.5833199779 0.4713741201 0.2905829754 2.459523e-01 #>  [568,] 0.905646134 0.5868181367 0.4749661871 0.2935624205 2.486345e-01 #>  [569,] 0.906870294 0.5903075540 0.4785608466 0.2965596442 2.513362e-01 #>  [570,] 0.908080183 0.5937879015 0.4821577277 0.2995744922 2.540574e-01 #>  [571,] 0.909275927 0.5972588548 0.4857564588 0.3026068048 2.567979e-01 #>  [572,] 0.910457650 0.6007200929 0.4893566675 0.3056564164 2.595576e-01 #>  [573,] 0.911625476 0.6041712987 0.4929579806 0.3087231564 2.623366e-01 #>  [574,] 0.912779531 0.6076121591 0.4965600247 0.3118068482 2.651347e-01 #>  [575,] 0.913919938 0.6110423650 0.5001624259 0.3149073102 2.679517e-01 #>  [576,] 0.915046822 0.6144616112 0.5037648102 0.3180243549 2.707877e-01 #>  [577,] 0.916160307 0.6178695969 0.5073668037 0.3211577895 2.736425e-01 #>  [578,] 0.917260517 0.6212660257 0.5109680325 0.3243074159 2.765159e-01 #>  [579,] 0.918347576 0.6246506054 0.5145681232 0.3274730302 2.794080e-01 #>  [580,] 0.919421608 0.6280230484 0.5181667028 0.3306544235 2.823184e-01 #>  [581,] 0.920482735 0.6313830717 0.5217633988 0.3338513812 2.852472e-01 #>  [582,] 0.921531082 0.6347303967 0.5253578397 0.3370636835 2.881942e-01 #>  [583,] 0.922566769 0.6380647499 0.5289496548 0.3402911053 2.911592e-01 #>  [584,] 0.923589921 0.6413858624 0.5325384744 0.3435334161 2.941421e-01 #>  [585,] 0.924600658 0.6446934701 0.5361239303 0.3467903803 2.971427e-01 #>  [586,] 0.925599102 0.6479873139 0.5397056554 0.3500617570 3.001610e-01 #>  [587,] 0.926585374 0.6512671399 0.5432832844 0.3533473002 3.031966e-01 #>  [588,] 0.927559596 0.6545326989 0.5468564534 0.3566467589 3.062496e-01 #>  [589,] 0.928521887 0.6577837470 0.5504248007 0.3599598769 3.093196e-01 #>  [590,] 0.929472366 0.6610200456 0.5539879661 0.3632863931 3.124066e-01 #>  [591,] 0.930411154 0.6642413610 0.5575455921 0.3666260416 3.155103e-01 #>  [592,] 0.931338369 0.6674474649 0.5610973228 0.3699785515 3.186305e-01 #>  [593,] 0.932254130 0.6706381345 0.5646428053 0.3733436472 3.217671e-01 #>  [594,] 0.933158553 0.6738131519 0.5681816889 0.3767210483 3.249198e-01 #>  [595,] 0.934051755 0.6769723049 0.5717136256 0.3801104701 3.280885e-01 #>  [596,] 0.934933855 0.6801153867 0.5752382703 0.3835116229 3.312730e-01 #>  [597,] 0.935804966 0.6832421956 0.5787552808 0.3869242129 3.344729e-01 #>  [598,] 0.936665205 0.6863525357 0.5822643179 0.3903479419 3.376882e-01 #>  [599,] 0.937514686 0.6894462164 0.5857650457 0.3937825072 3.409185e-01 #>  [600,] 0.938353524 0.6925230526 0.5892571315 0.3972276022 3.441637e-01 #>  [601,] 0.939181831 0.6955828647 0.5927402461 0.4006829160 3.474234e-01 #>  [602,] 0.939999720 0.6986254785 0.5962140639 0.4041481339 3.506976e-01 #>  [603,] 0.940807303 0.7016507254 0.5996782627 0.4076229373 3.539858e-01 #>  [604,] 0.941604691 0.7046584424 0.6031325244 0.4111070037 3.572880e-01 #>  [605,] 0.942391996 0.7076484717 0.6065765346 0.4146000071 3.606037e-01 #>  [606,] 0.943169327 0.7106206614 0.6100099830 0.4181016180 3.639328e-01 #>  [607,] 0.943936793 0.7135748647 0.6134325632 0.4216115032 3.672750e-01 #>  [608,] 0.944694502 0.7165109405 0.6168439731 0.4251293266 3.706299e-01 #>  [609,] 0.945442563 0.7194287532 0.6202439149 0.4286547486 3.739974e-01 #>  [610,] 0.946181081 0.7223281725 0.6236320953 0.4321874267 3.773772e-01 #>  [611,] 0.946910165 0.7252090737 0.6270082251 0.4357270154 3.807689e-01 #>  [612,] 0.947629917 0.7280713374 0.6303720199 0.4392731666 3.841723e-01 #>  [613,] 0.948340445 0.7309148496 0.6337232000 0.4428255294 3.875871e-01 #>  [614,] 0.949041851 0.7337395016 0.6370614901 0.4463837502 3.910129e-01 #>  [615,] 0.949734238 0.7365451901 0.6403866200 0.4499474734 3.944495e-01 #>  [616,] 0.950417709 0.7393318171 0.6436983242 0.4535163409 3.978966e-01 #>  [617,] 0.951092365 0.7420992899 0.6469963421 0.4570899925 4.013539e-01 #>  [618,] 0.951758308 0.7448475208 0.6502804181 0.4606680661 4.048210e-01 #>  [619,] 0.952415636 0.7475764277 0.6535503016 0.4642501978 4.082976e-01 #>  [620,] 0.953064449 0.7502859331 0.6568057473 0.4678360220 4.117835e-01 #>  [621,] 0.953704846 0.7529759651 0.6600465147 0.4714251716 4.152782e-01 #>  [622,] 0.954336924 0.7556464564 0.6632723688 0.4750172780 4.187814e-01 #>  [623,] 0.954960780 0.7582973451 0.6664830797 0.4786119717 4.222928e-01 #>  [624,] 0.955576509 0.7609285740 0.6696784227 0.4822088817 4.258122e-01 #>  [625,] 0.956184206 0.7635400909 0.6728581787 0.4858076365 4.293390e-01 #>  [626,] 0.956783967 0.7661318483 0.6760221337 0.4894078635 4.328731e-01 #>  [627,] 0.957375884 0.7687038037 0.6791700792 0.4930091896 4.364140e-01 #>  [628,] 0.957960050 0.7712559191 0.6823018121 0.4966112414 4.399613e-01 #>  [629,] 0.958536556 0.7737881614 0.6854171345 0.5002136449 4.435149e-01 #>  [630,] 0.959105494 0.7763005020 0.6885158545 0.5038160263 4.470742e-01 #>  [631,] 0.959666954 0.7787929168 0.6915977851 0.5074180115 4.506389e-01 #>  [632,] 0.960221025 0.7812653862 0.6946627451 0.5110192268 4.542088e-01 #>  [633,] 0.960767796 0.7837178951 0.6977105587 0.5146192987 4.577833e-01 #>  [634,] 0.961307354 0.7861504327 0.7007410557 0.5182178541 4.613622e-01 #>  [635,] 0.961839787 0.7885629925 0.7037540713 0.5218145206 4.649451e-01 #>  [636,] 0.962365179 0.7909555722 0.7067494462 0.5254089268 4.685316e-01 #>  [637,] 0.962883618 0.7933281736 0.7097270266 0.5290007018 4.721213e-01 #>  [638,] 0.963395186 0.7956808028 0.7126866643 0.5325894762 4.757139e-01 #>  [639,] 0.963899967 0.7980134696 0.7156282165 0.5361748816 4.793091e-01 #>  [640,] 0.964398045 0.8003261880 0.7185515458 0.5397565511 4.829064e-01 #>  [641,] 0.964889501 0.8026189757 0.7214565205 0.5433341192 4.865055e-01 #>  [642,] 0.965374417 0.8048918544 0.7243430140 0.5469072222 4.901059e-01 #>  [643,] 0.965852872 0.8071448492 0.7272109054 0.5504754983 4.937074e-01 #>  [644,] 0.966324947 0.8093779892 0.7300600791 0.5540385875 4.973096e-01 #>  [645,] 0.966790720 0.8115913068 0.7328904248 0.5575961321 5.009120e-01 #>  [646,] 0.967250268 0.8137848382 0.7357018375 0.5611477765 5.045143e-01 #>  [647,] 0.967703670 0.8159586227 0.7384942178 0.5646931676 5.081162e-01 #>  [648,] 0.968151002 0.8181127032 0.7412674712 0.5682319549 5.117172e-01 #>  [649,] 0.968592339 0.8202471258 0.7440215086 0.5717637903 5.153170e-01 #>  [650,] 0.969027755 0.8223619397 0.7467562462 0.5752883289 5.189153e-01 #>  [651,] 0.969457326 0.8244571974 0.7494716051 0.5788052284 5.225115e-01 #>  [652,] 0.969881124 0.8265329545 0.7521675117 0.5823141497 5.261054e-01 #>  [653,] 0.970299222 0.8285892693 0.7548438974 0.5858147569 5.296967e-01 #>  [654,] 0.970711691 0.8306262032 0.7575006987 0.5893067175 5.332848e-01 #>  [655,] 0.971118602 0.8326438206 0.7601378568 0.5927897022 5.368695e-01 #>  [656,] 0.971520026 0.8346421883 0.7627553181 0.5962633854 5.404504e-01 #>  [657,] 0.971916032 0.8366213760 0.7653530337 0.5997274452 5.440272e-01 #>  [658,] 0.972306689 0.8385814560 0.7679309597 0.6031815633 5.475993e-01 #>  [659,] 0.972692064 0.8405225032 0.7704890566 0.6066254255 5.511666e-01 #>  [660,] 0.973072225 0.8424445948 0.7730272899 0.6100587215 5.547287e-01 #>  [661,] 0.973447237 0.8443478104 0.7755456296 0.6134811450 5.582851e-01 #>  [662,] 0.973817168 0.8462322322 0.7780440503 0.6168923939 5.618356e-01 #>  [663,] 0.974182082 0.8480979444 0.7805225311 0.6202921706 5.653797e-01 #>  [664,] 0.974542043 0.8499450333 0.7829810554 0.6236801816 5.689172e-01 #>  [665,] 0.974897114 0.8517735876 0.7854196113 0.6270561380 5.724476e-01 #>  [666,] 0.975247359 0.8535836978 0.7878381908 0.6304197554 5.759707e-01 #>  [667,] 0.975592839 0.8553754566 0.7902367905 0.6337707541 5.794861e-01 #>  [668,] 0.975933617 0.8571489583 0.7926154109 0.6371088591 5.829934e-01 #>  [669,] 0.976269752 0.8589042994 0.7949740569 0.6404337999 5.864924e-01 #>  [670,] 0.976601305 0.8606415778 0.7973127371 0.6437453113 5.899826e-01 #>  [671,] 0.976928335 0.8623608933 0.7996314642 0.6470431328 5.934638e-01 #>  [672,] 0.977250901 0.8640623474 0.8019302550 0.6503270087 5.969357e-01 #>  [673,] 0.977569060 0.8657460431 0.8042091297 0.6535966887 6.003978e-01 #>  [674,] 0.977882871 0.8674120849 0.8064681127 0.6568519273 6.038500e-01 #>  [675,] 0.978192389 0.8690605786 0.8087072317 0.6600924844 6.072918e-01 #>  [676,] 0.978497671 0.8706916317 0.8109265182 0.6633181247 6.107230e-01 #>  [677,] 0.978798772 0.8723053529 0.8131260071 0.6665286187 6.141433e-01 #>  [678,] 0.979095747 0.8739018519 0.8153057370 0.6697237417 6.175524e-01 #>  [679,] 0.979388649 0.8754812400 0.8174657496 0.6729032745 6.209499e-01 #>  [680,] 0.979677533 0.8770436295 0.8196060901 0.6760670033 6.243356e-01 #>  [681,] 0.979962451 0.8785891337 0.8217268067 0.6792147197 6.277092e-01 #>  [682,] 0.980243454 0.8801178669 0.8238279510 0.6823462206 6.310704e-01 #>  [683,] 0.980520595 0.8816299446 0.8259095776 0.6854613084 6.344189e-01 #>  [684,] 0.980793925 0.8831254831 0.8279717440 0.6885597909 6.377545e-01 #>  [685,] 0.981063493 0.8846045994 0.8300145108 0.6916414815 6.410768e-01 #>  [686,] 0.981329350 0.8860674117 0.8320379414 0.6947061989 6.443857e-01 #>  [687,] 0.981591545 0.8875140385 0.8340421018 0.6977537676 6.476808e-01 #>  [688,] 0.981850125 0.8889445993 0.8360270609 0.7007840171 6.509620e-01 #>  [689,] 0.982105140 0.8903592143 0.8379928904 0.7037967830 6.542289e-01 #>  [690,] 0.982356636 0.8917580042 0.8399396641 0.7067919059 6.574813e-01 #>  [691,] 0.982604660 0.8931410901 0.8418674587 0.7097692323 6.607190e-01 #>  [692,] 0.982849258 0.8945085940 0.8437763532 0.7127286138 6.639417e-01 #>  [693,] 0.983090476 0.8958606381 0.8456664288 0.7156699079 6.671492e-01 #>  [694,] 0.983328359 0.8971973451 0.8475377691 0.7185929772 6.703413e-01 #>  [695,] 0.983562951 0.8985188380 0.8493904600 0.7214976899 6.735178e-01 #>  [696,] 0.983794297 0.8998252402 0.8512245894 0.7243839198 6.766785e-01 #>  [697,] 0.984022439 0.9011166755 0.8530402472 0.7272515459 6.798231e-01 #>  [698,] 0.984247421 0.9023932678 0.8548375254 0.7301004526 6.829514e-01 #>  [699,] 0.984469286 0.9036551413 0.8566165179 0.7329305298 6.860633e-01 #>  [700,] 0.984688074 0.9049024203 0.8583773205 0.7357416727 6.891585e-01 #>  [701,] 0.984903827 0.9061352293 0.8601200307 0.7385337817 6.922369e-01 #>  [702,] 0.985116586 0.9073536929 0.8618447479 0.7413067625 6.952983e-01 #>  [703,] 0.985326391 0.9085579357 0.8635515729 0.7440605261 6.983426e-01 #>  [704,] 0.985533282 0.9097480823 0.8652406083 0.7467949887 7.013694e-01 #>  [705,] 0.985737298 0.9109242576 0.8669119581 0.7495100715 7.043788e-01 #>  [706,] 0.985938478 0.9120865859 0.8685657278 0.7522057010 7.073705e-01 #>  [707,] 0.986136860 0.9132351920 0.8702020244 0.7548818087 7.103443e-01 #>  [708,] 0.986332482 0.9143702002 0.8718209562 0.7575383311 7.133002e-01 #>  [709,] 0.986525382 0.9154917347 0.8734226326 0.7601752095 7.162380e-01 #>  [710,] 0.986715596 0.9165999199 0.8750071645 0.7627923904 7.191575e-01 #>  [711,] 0.986903160 0.9176948795 0.8765746638 0.7653898250 7.220587e-01 #>  [712,] 0.987088110 0.9187767372 0.8781252435 0.7679674693 7.249413e-01 #>  [713,] 0.987270483 0.9198456166 0.8796590177 0.7705252840 7.278053e-01 #>  [714,] 0.987450312 0.9209016407 0.8811761015 0.7730632347 7.306506e-01 #>  [715,] 0.987627633 0.9219449325 0.8826766110 0.7755812914 7.334770e-01 #>  [716,] 0.987802479 0.9229756144 0.8841606629 0.7780794287 7.362844e-01 #>  [717,] 0.987974884 0.9239938086 0.8856283751 0.7805576258 7.390728e-01 #>  [718,] 0.988144882 0.9249996369 0.8870798661 0.7830158663 7.418421e-01 #>  [719,] 0.988312505 0.9259932206 0.8885152550 0.7854541382 7.445921e-01 #>  [720,] 0.988477786 0.9269746808 0.8899346618 0.7878724337 7.473228e-01 #>  [721,] 0.988640756 0.9279441380 0.8913382070 0.7902707493 7.500342e-01 #>  [722,] 0.988801447 0.9289017121 0.8927260118 0.7926490857 7.527260e-01 #>  [723,] 0.988959890 0.9298475227 0.8940981977 0.7950074477 7.553983e-01 #>  [724,] 0.989116116 0.9307816889 0.8954548869 0.7973458441 7.580510e-01 #>  [725,] 0.989270156 0.9317043293 0.8967962020 0.7996642877 7.606841e-01 #>  [726,] 0.989422039 0.9326155616 0.8981222660 0.8019627951 7.632975e-01 #>  [727,] 0.989571794 0.9335155035 0.8994332020 0.8042413869 7.658911e-01 #>  [728,] 0.989719451 0.9344042717 0.9007291338 0.8065000872 7.684649e-01 #>  [729,] 0.989865039 0.9352819825 0.9020101853 0.8087389240 7.710188e-01 #>  [730,] 0.990008586 0.9361487516 0.9032764804 0.8109579288 7.735529e-01 #>  [731,] 0.990150121 0.9370046938 0.9045281437 0.8131571365 7.760671e-01 #>  [732,] 0.990289670 0.9378499238 0.9057652994 0.8153365858 7.785614e-01 #>  [733,] 0.990427261 0.9386845550 0.9069880721 0.8174963184 7.810357e-01 #>  [734,] 0.990562920 0.9395087007 0.9081965865 0.8196363795 7.834901e-01 #>  [735,] 0.990696676 0.9403224733 0.9093909672 0.8217568175 7.859245e-01 #>  [736,] 0.990828553 0.9411259844 0.9105713389 0.8238576839 7.883389e-01 #>  [737,] 0.990958578 0.9419193452 0.9117378262 0.8259390334 7.907334e-01 #>  [738,] 0.991086776 0.9427026658 0.9128905537 0.8280009235 7.931078e-01 #>  [739,] 0.991213173 0.9434760559 0.9140296458 0.8300434150 7.954623e-01 #>  [740,] 0.991337793 0.9442396244 0.9151552269 0.8320665710 7.977968e-01 #>  [741,] 0.991460660 0.9449934794 0.9162674212 0.8340704579 8.001114e-01 #>  [742,] 0.991581800 0.9457377283 0.9173663526 0.8360551446 8.024061e-01 #>  [743,] 0.991701235 0.9464724777 0.9184521450 0.8380207026 8.046808e-01 #>  [744,] 0.991818990 0.9471978336 0.9195249217 0.8399672060 8.069357e-01 #>  [745,] 0.991935088 0.9479139011 0.9205848062 0.8418947313 8.091706e-01 #>  [746,] 0.992049551 0.9486207845 0.9216319213 0.8438033576 8.113858e-01 #>  [747,] 0.992162403 0.9493185874 0.9226663897 0.8456931663 8.135812e-01 #>  [748,] 0.992273665 0.9500074126 0.9236883336 0.8475642409 8.157568e-01 #>  [749,] 0.992383360 0.9506873621 0.9246978750 0.8494166672 8.179127e-01 #>  [750,] 0.992491509 0.9513585371 0.9256951353 0.8512505333 8.200490e-01 #>  [751,] 0.992598134 0.9520210380 0.9266802356 0.8530659291 8.221656e-01 #>  [752,] 0.992703256 0.9526749645 0.9276532966 0.8548629467 8.242627e-01 #>  [753,] 0.992806896 0.9533204153 0.9286144385 0.8566416799 8.263403e-01 #>  [754,] 0.992909075 0.9539574885 0.9295637809 0.8584022246 8.283984e-01 #>  [755,] 0.993009812 0.9545862812 0.9305014431 0.8601446783 8.304371e-01 #>  [756,] 0.993109128 0.9552068899 0.9314275437 0.8618691404 8.324565e-01 #>  [757,] 0.993207042 0.9558194100 0.9323422009 0.8635757117 8.344567e-01 #>  [758,] 0.993303575 0.9564239364 0.9332455323 0.8652644949 8.364377e-01 #>  [759,] 0.993398745 0.9570205630 0.9341376549 0.8669355940 8.383995e-01 #>  [760,] 0.993492571 0.9576093828 0.9350186851 0.8685891146 8.403424e-01 #>  [761,] 0.993585073 0.9581904882 0.9358887387 0.8702251635 8.422662e-01 #>  [762,] 0.993676267 0.9587639706 0.9367479310 0.8718438492 8.441712e-01 #>  [763,] 0.993766174 0.9593299208 0.9375963766 0.8734452811 8.460573e-01 #>  [764,] 0.993854810 0.9598884284 0.9384341893 0.8750295700 8.479248e-01 #>  [765,] 0.993942194 0.9604395825 0.9392614825 0.8765968279 8.497736e-01 #>  [766,] 0.994028342 0.9609834712 0.9400783687 0.8781471679 8.516039e-01 #>  [767,] 0.994113273 0.9615201821 0.9408849598 0.8796807040 8.534157e-01 #>  [768,] 0.994197002 0.9620498015 0.9416813672 0.8811975514 8.552092e-01 #>  [769,] 0.994279548 0.9625724151 0.9424677014 0.8826978260 8.569844e-01 #>  [770,] 0.994360926 0.9630881080 0.9432440720 0.8841816448 8.587414e-01 #>  [771,] 0.994441153 0.9635969642 0.9440105884 0.8856491255 8.604804e-01 #>  [772,] 0.994520245 0.9640990669 0.9447673587 0.8871003867 8.622014e-01 #>  [773,] 0.994598218 0.9645944987 0.9455144907 0.8885355476 8.639045e-01 #>  [774,] 0.994675087 0.9650833411 0.9462520911 0.8899547280 8.655898e-01 #>  [775,] 0.994750868 0.9655656750 0.9469802662 0.8913580486 8.672575e-01 #>  [776,] 0.994825576 0.9660415805 0.9476991213 0.8927456304 8.689076e-01 #>  [777,] 0.994899226 0.9665111368 0.9484087609 0.8941175952 8.705403e-01 #>  [778,] 0.994971833 0.9669744223 0.9491092889 0.8954740650 8.721556e-01 #>  [779,] 0.995043412 0.9674315147 0.9498008083 0.8968151624 8.737537e-01 #>  [780,] 0.995113977 0.9678824907 0.9504834214 0.8981410103 8.753347e-01 #>  [781,] 0.995183542 0.9683274266 0.9511572295 0.8994517322 8.768987e-01 #>  [782,] 0.995252122 0.9687663975 0.9518223334 0.9007474516 8.784458e-01 #>  [783,] 0.995319729 0.9691994779 0.9524788329 0.9020282923 8.799761e-01 #>  [784,] 0.995386379 0.9696267416 0.9531268271 0.9032943786 8.814897e-01 #>  [785,] 0.995452083 0.9700482615 0.9537664142 0.9045458347 8.829868e-01 #>  [786,] 0.995516856 0.9704641097 0.9543976917 0.9057827850 8.844674e-01 #>  [787,] 0.995580711 0.9708743576 0.9550207561 0.9070053542 8.859317e-01 #>  [788,] 0.995643660 0.9712790759 0.9556357033 0.9082136667 8.873799e-01 #>  [789,] 0.995705716 0.9716783345 0.9562426283 0.9094078474 8.888119e-01 #>  [790,] 0.995766893 0.9720722025 0.9568416252 0.9105880208 8.902280e-01 #>  [791,] 0.995827201 0.9724607481 0.9574327875 0.9117543116 8.916283e-01 #>  [792,] 0.995886653 0.9728440392 0.9580162076 0.9129068444 8.930128e-01 #>  [793,] 0.995945262 0.9732221425 0.9585919772 0.9140457435 8.943818e-01 #>  [794,] 0.996003040 0.9735951242 0.9591601873 0.9151711334 8.957352e-01 #>  [795,] 0.996059997 0.9739630497 0.9597209280 0.9162831383 8.970734e-01 #>  [796,] 0.996116146 0.9743259838 0.9602742884 0.9173818820 8.983963e-01 #>  [797,] 0.996171497 0.9746839903 0.9608203570 0.9184674884 8.997041e-01 #>  [798,] 0.996226063 0.9750371326 0.9613592213 0.9195400810 9.009969e-01 #>  [799,] 0.996279854 0.9753854732 0.9618909683 0.9205997831 9.022749e-01 #>  [800,] 0.996332881 0.9757290739 0.9624156839 0.9216467175 9.035381e-01 #>  [801,] 0.996385155 0.9760679959 0.9629334531 0.9226810070 9.047868e-01 #>  [802,] 0.996436686 0.9764022996 0.9634443604 0.9237027737 9.060209e-01 #>  [803,] 0.996487486 0.9767320447 0.9639484892 0.9247121396 9.072407e-01 #>  [804,] 0.996537564 0.9770572904 0.9644459223 0.9257092262 9.084463e-01 #>  [805,] 0.996586930 0.9773780951 0.9649367415 0.9266941545 9.096377e-01 #>  [806,] 0.996635595 0.9776945163 0.9654210280 0.9276670452 9.108152e-01 #>  [807,] 0.996683568 0.9780066113 0.9658988620 0.9286280184 9.119788e-01 #>  [808,] 0.996730859 0.9783144363 0.9663703230 0.9295771940 9.131287e-01 #>  [809,] 0.996777479 0.9786180471 0.9668354897 0.9305146909 9.142650e-01 #>  [810,] 0.996823435 0.9789174988 0.9672944399 0.9314406280 9.153877e-01 #>  [811,] 0.996868738 0.9792128458 0.9677472508 0.9323551234 9.164972e-01 #>  [812,] 0.996913397 0.9795041419 0.9681939986 0.9332582946 9.175934e-01 #>  [813,] 0.996957422 0.9797914402 0.9686347589 0.9341502587 9.186764e-01 #>  [814,] 0.997000820 0.9800747933 0.9690696063 0.9350311320 9.197465e-01 #>  [815,] 0.997043601 0.9803542530 0.9694986149 0.9359010304 9.208037e-01 #>  [816,] 0.997085773 0.9806298706 0.9699218577 0.9367600691 9.218482e-01 #>  [817,] 0.997127346 0.9809016968 0.9703394073 0.9376083627 9.228801e-01 #>  [818,] 0.997168327 0.9811697816 0.9707513351 0.9384460251 9.238994e-01 #>  [819,] 0.997208725 0.9814341746 0.9711577121 0.9392731695 9.249064e-01 #>  [820,] 0.997248549 0.9816949245 0.9715586084 0.9400899085 9.259011e-01 #>  [821,] 0.997287806 0.9819520796 0.9719540933 0.9408963541 9.268837e-01 #>  [822,] 0.997326504 0.9822056875 0.9723442354 0.9416926175 9.278543e-01 #>  [823,] 0.997364651 0.9824557955 0.9727291026 0.9424788092 9.288129e-01 #>  [824,] 0.997402256 0.9827024500 0.9731087620 0.9432550390 9.297598e-01 #>  [825,] 0.997439325 0.9829456970 0.9734832799 0.9440214160 9.306951e-01 #>  [826,] 0.997475867 0.9831855818 0.9738527220 0.9447780486 9.316188e-01 #>  [827,] 0.997511889 0.9834221494 0.9742171532 0.9455250443 9.325311e-01 #>  [828,] 0.997547398 0.9836554439 0.9745766377 0.9462625100 9.334321e-01 #>  [829,] 0.997582401 0.9838855091 0.9749312390 0.9469905519 9.343219e-01 #>  [830,] 0.997616906 0.9841123883 0.9752810198 0.9477092752 9.352006e-01 #>  [831,] 0.997650920 0.9843361240 0.9756260422 0.9484187845 9.360684e-01 #>  [832,] 0.997684449 0.9845567585 0.9759663675 0.9491191837 9.369254e-01 #>  [833,] 0.997717501 0.9847743332 0.9763020563 0.9498105758 9.377716e-01 #>  [834,] 0.997750082 0.9849888894 0.9766331687 0.9504930629 9.386072e-01 #>  [835,] 0.997782199 0.9852004675 0.9769597639 0.9511667466 9.394323e-01 #>  [836,] 0.997813859 0.9854091076 0.9772819006 0.9518317275 9.402470e-01 #>  [837,] 0.997845067 0.9856148494 0.9775996365 0.9524881054 9.410515e-01 #>  [838,] 0.997875831 0.9858177318 0.9779130290 0.9531359793 9.418458e-01 #>  [839,] 0.997906157 0.9860177934 0.9782221347 0.9537754476 9.426301e-01 #>  [840,] 0.997936051 0.9862150723 0.9785270094 0.9544066076 9.434044e-01 #>  [841,] 0.997965519 0.9864096061 0.9788277085 0.9550295560 9.441689e-01 #>  [842,] 0.997994567 0.9866014319 0.9791242866 0.9556443885 9.449236e-01 #>  [843,] 0.998023201 0.9867905864 0.9794167975 0.9562512001 9.456687e-01 #>  [844,] 0.998051426 0.9869771058 0.9797052948 0.9568500850 9.464044e-01 #>  [845,] 0.998079250 0.9871610258 0.9799898311 0.9574411365 9.471306e-01 #>  [846,] 0.998106677 0.9873423815 0.9802704584 0.9580244472 9.478475e-01 #>  [847,] 0.998133714 0.9875212080 0.9805472283 0.9586001087 9.485553e-01 #>  [848,] 0.998160365 0.9876975395 0.9808201916 0.9591682120 9.492539e-01 #>  [849,] 0.998186636 0.9878714099 0.9810893985 0.9597288471 9.499436e-01 #>  [850,] 0.998212532 0.9880428528 0.9813548986 0.9602821032 9.506243e-01 #>  [851,] 0.998238059 0.9882119011 0.9816167410 0.9608280687 9.512963e-01 #>  [852,] 0.998263223 0.9883785876 0.9818749742 0.9613668313 9.519596e-01 #>  [853,] 0.998288028 0.9885429445 0.9821296459 0.9618984777 9.526144e-01 #>  [854,] 0.998312479 0.9887050034 0.9823808036 0.9624230939 9.532606e-01 #>  [855,] 0.998336581 0.9888647959 0.9826284937 0.9629407650 9.538984e-01 #>  [856,] 0.998360340 0.9890223529 0.9828727626 0.9634515753 9.545280e-01 #>  [857,] 0.998383759 0.9891777049 0.9831136557 0.9639556083 9.551494e-01 #>  [858,] 0.998406845 0.9893308821 0.9833512180 0.9644529468 9.557626e-01 #>  [859,] 0.998429602 0.9894819144 0.9835854941 0.9649436726 9.563679e-01 #>  [860,] 0.998452034 0.9896308310 0.9838165277 0.9654278668 9.569653e-01 #>  [861,] 0.998474146 0.9897776611 0.9840443623 0.9659056096 9.575548e-01 #>  [862,] 0.998495943 0.9899224331 0.9842690407 0.9663769806 9.581366e-01 #>  [863,] 0.998517429 0.9900651755 0.9844906052 0.9668420583 9.587108e-01 #>  [864,] 0.998538608 0.9902059159 0.9847090975 0.9673009207 9.592775e-01 #>  [865,] 0.998559486 0.9903446821 0.9849245589 0.9677536449 9.598367e-01 #>  [866,] 0.998580065 0.9904815010 0.9851370300 0.9682003070 9.603885e-01 #>  [867,] 0.998600351 0.9906163996 0.9853465512 0.9686409827 9.609331e-01 #>  [868,] 0.998620347 0.9907494042 0.9855531621 0.9690757466 9.614704e-01 #>  [869,] 0.998640059 0.9908805409 0.9857569019 0.9695046727 9.620007e-01 #>  [870,] 0.998659488 0.9910098355 0.9859578094 0.9699278341 9.625240e-01 #>  [871,] 0.998678641 0.9911373134 0.9861559228 0.9703453032 9.630403e-01 #>  [872,] 0.998697521 0.9912629996 0.9863512797 0.9707571516 9.635498e-01 #>  [873,] 0.998716131 0.9913869188 0.9865439176 0.9711634502 9.640525e-01 #>  [874,] 0.998734475 0.9915090956 0.9867338732 0.9715642691 9.645486e-01 #>  [875,] 0.998752558 0.9916295539 0.9869211827 0.9719596775 9.650380e-01 #>  [876,] 0.998770382 0.9917483175 0.9871058821 0.9723497442 9.655210e-01 #>  [877,] 0.998787952 0.9918654099 0.9872880068 0.9727345369 9.659975e-01 #>  [878,] 0.998805272 0.9919808541 0.9874675917 0.9731141227 9.664676e-01 #>  [879,] 0.998822344 0.9920946730 0.9876446713 0.9734885680 9.669315e-01 #>  [880,] 0.998839173 0.9922068892 0.9878192797 0.9738579384 9.673892e-01 #>  [881,] 0.998855761 0.9923175248 0.9879914505 0.9742222988 9.678407e-01 #>  [882,] 0.998872113 0.9924266017 0.9881612169 0.9745817135 9.682862e-01 #>  [883,] 0.998888231 0.9925341416 0.9883286116 0.9749362458 9.687257e-01 #>  [884,] 0.998904119 0.9926401658 0.9884936670 0.9752859585 9.691594e-01 #>  [885,] 0.998919780 0.9927446953 0.9886564150 0.9756309136 9.695872e-01 #>  [886,] 0.998935218 0.9928477509 0.9888168871 0.9759711726 9.700092e-01 #>  [887,] 0.998950435 0.9929493531 0.9889751144 0.9763067960 9.704256e-01 #>  [888,] 0.998965435 0.9930495220 0.9891311276 0.9766378437 9.708363e-01 #>  [889,] 0.998980221 0.9931482777 0.9892849569 0.9769643751 9.712416e-01 #>  [890,] 0.998994796 0.9932456398 0.9894366323 0.9772864488 9.716413e-01 #>  [891,] 0.999009163 0.9933416276 0.9895861834 0.9776041226 9.720357e-01 #>  [892,] 0.999023324 0.9934362603 0.9897336391 0.9779174537 9.724247e-01 #>  [893,] 0.999037284 0.9935295569 0.9898790282 0.9782264989 9.728085e-01 #>  [894,] 0.999051044 0.9936215358 0.9900223791 0.9785313138 9.731871e-01 #>  [895,] 0.999064607 0.9937122155 0.9901637199 0.9788319540 9.735606e-01 #>  [896,] 0.999077977 0.9938016141 0.9903030780 0.9791284738 9.739290e-01 #>  [897,] 0.999091156 0.9938897494 0.9904404808 0.9794209274 9.742924e-01 #>  [898,] 0.999104147 0.9939766392 0.9905759552 0.9797093679 9.746508e-01 #>  [899,] 0.999116952 0.9940623007 0.9907095277 0.9799938483 9.750044e-01 #>  [900,] 0.999129574 0.9941467512 0.9908412244 0.9802744204 9.753532e-01 #>  [901,] 0.999142016 0.9942300075 0.9909710714 0.9805511358 9.756972e-01 #>  [902,] 0.999154281 0.9943120863 0.9910990940 0.9808240453 9.760366e-01 #>  [903,] 0.999166370 0.9943930042 0.9912253174 0.9810931992 9.763713e-01 #>  [904,] 0.999178286 0.9944727773 0.9913497665 0.9813586470 9.767015e-01 #>  [905,] 0.999190033 0.9945514216 0.9914724657 0.9816204377 9.770272e-01 #>  [906,] 0.999201611 0.9946289530 0.9915934392 0.9818786199 9.773484e-01 #>  [907,] 0.999213024 0.9947053871 0.9917127110 0.9821332414 9.776652e-01 #>  [908,] 0.999224275 0.9947807391 0.9918303044 0.9823843494 9.779777e-01 #>  [909,] 0.999235364 0.9948550242 0.9919462428 0.9826319906 9.782859e-01 #>  [910,] 0.999246295 0.9949282575 0.9920605491 0.9828762111 9.785899e-01 #>  [911,] 0.999257070 0.9950004536 0.9921732458 0.9831170565 9.788898e-01 #>  [912,] 0.999267691 0.9950716271 0.9922843553 0.9833545719 9.791855e-01 #>  [913,] 0.999278160 0.9951417923 0.9923938996 0.9835888015 9.794772e-01 #>  [914,] 0.999288480 0.9952109634 0.9925019003 0.9838197894 9.797648e-01 #>  [915,] 0.999298652 0.9952791543 0.9926083789 0.9840475788 9.800485e-01 #>  [916,] 0.999308679 0.9953463788 0.9927133566 0.9842722126 9.803284e-01 #>  [917,] 0.999318562 0.9954126504 0.9928168541 0.9844937331 9.806043e-01 #>  [918,] 0.999328305 0.9954779825 0.9929188921 0.9847121820 9.808765e-01 #>  [919,] 0.999337908 0.9955423883 0.9930194908 0.9849276006 9.811449e-01 #>  [920,] 0.999347374 0.9956058809 0.9931186702 0.9851400295 9.814097e-01 #>  [921,] 0.999356705 0.9956684731 0.9932164501 0.9853495090 9.816708e-01 #>  [922,] 0.999365902 0.9957301775 0.9933128500 0.9855560788 9.819283e-01 #>  [923,] 0.999374968 0.9957910066 0.9934078890 0.9857597781 9.821822e-01 #>  [924,] 0.999383905 0.9958509727 0.9935015861 0.9859606456 9.824326e-01 #>  [925,] 0.999392714 0.9959100880 0.9935939601 0.9861587195 9.826796e-01 #>  [926,] 0.999401397 0.9959683644 0.9936850293 0.9863540376 9.829232e-01 #>  [927,] 0.999409956 0.9960258137 0.9937748120 0.9865466371 9.831634e-01 #>  [928,] 0.999418392 0.9960824477 0.9938633261 0.9867365548 9.834002e-01 #>  [929,] 0.999426708 0.9961382777 0.9939505893 0.9869238270 9.836338e-01 #>  [930,] 0.999434905 0.9961933151 0.9940366191 0.9871084895 9.838642e-01 #>  [931,] 0.999442985 0.9962475711 0.9941214327 0.9872905778 9.840914e-01 #>  [932,] 0.999450950 0.9963010566 0.9942050470 0.9874701269 9.843154e-01 #>  [933,] 0.999458801 0.9963537826 0.9942874789 0.9876471711 9.845363e-01 #>  [934,] 0.999466539 0.9964057597 0.9943687448 0.9878217446 9.847542e-01 #>  [935,] 0.999474167 0.9964569985 0.9944488612 0.9879938810 9.849690e-01 #>  [936,] 0.999481686 0.9965075094 0.9945278439 0.9881636134 9.851809e-01 #>  [937,] 0.999489097 0.9965573027 0.9946057090 0.9883309747 9.853898e-01 #>  [938,] 0.999496403 0.9966063885 0.9946824721 0.9884959970 9.855958e-01 #>  [939,] 0.999503604 0.9966547768 0.9947581485 0.9886587124 9.857989e-01 #>  [940,] 0.999510702 0.9967024774 0.9948327535 0.9888191524 9.859993e-01 #>  [941,] 0.999517699 0.9967495000 0.9949063021 0.9889773480 9.861968e-01 #>  [942,] 0.999524596 0.9967958543 0.9949788092 0.9891333299 9.863916e-01 #>  [943,] 0.999531394 0.9968415496 0.9950502893 0.9892871284 9.865837e-01 #>  [944,] 0.999538095 0.9968865953 0.9951207568 0.9894387735 9.867731e-01 #>  [945,] 0.999544700 0.9969310005 0.9951902259 0.9895882945 9.869598e-01 #>  [946,] 0.999551211 0.9969747743 0.9952587107 0.9897357206 9.871440e-01 #>  [947,] 0.999557629 0.9970179256 0.9953262249 0.9898810806 9.873256e-01 #>  [948,] 0.999563955 0.9970604633 0.9953927822 0.9900244027 9.875046e-01 #>  [949,] 0.999570190 0.9971023959 0.9954583960 0.9901657151 9.876812e-01 #>  [950,] 0.999576337 0.9971437320 0.9955230796 0.9903050452 9.878553e-01 #>  [951,] 0.999582396 0.9971844802 0.9955868460 0.9904424204 9.880270e-01 #>  [952,] 0.999588368 0.9972246486 0.9956497081 0.9905778676 9.881962e-01 #>  [953,] 0.999594254 0.9972642455 0.9957116786 0.9907114132 9.883631e-01 #>  [954,] 0.999600057 0.9973032791 0.9957727701 0.9908430835 9.885277e-01 #>  [955,] 0.999605776 0.9973417571 0.9958329950 0.9909729043 9.886900e-01 #>  [956,] 0.999611414 0.9973796876 0.9958923653 0.9911009011 9.888500e-01 #>  [957,] 0.999616971 0.9974170783 0.9959508933 0.9912270992 9.890078e-01 #>  [958,] 0.999622449 0.9974539368 0.9960085906 0.9913515232 9.891633e-01 #>  [959,] 0.999627848 0.9974902706 0.9960654690 0.9914741977 9.893167e-01 #>  [960,] 0.999633171 0.9975260872 0.9961215400 0.9915951469 9.894679e-01 #>  [961,] 0.999638417 0.9975613939 0.9961768151 0.9917143946 9.896170e-01 #>  [962,] 0.999643588 0.9975961980 0.9962313053 0.9918319644 9.897641e-01 #>  [963,] 0.999648685 0.9976305065 0.9962850218 0.9919478794 9.899090e-01 #>  [964,] 0.999653709 0.9976643265 0.9963379755 0.9920621626 9.900520e-01 #>  [965,] 0.999658662 0.9976976648 0.9963901772 0.9921748366 9.901929e-01 #>  [966,] 0.999663544 0.9977305284 0.9964416373 0.9922859237 9.903318e-01 #>  [967,] 0.999668356 0.9977629240 0.9964923665 0.9923954459 9.904688e-01 #>  [968,] 0.999673099 0.9977948581 0.9965423749 0.9925034248 9.906039e-01 #>  [969,] 0.999677774 0.9978263374 0.9965916728 0.9926098820 9.907371e-01 #>  [970,] 0.999682382 0.9978573683 0.9966402702 0.9927148384 9.908684e-01 #>  [971,] 0.999686925 0.9978879571 0.9966881770 0.9928183151 9.909979e-01 #>  [972,] 0.999691403 0.9979181101 0.9967354029 0.9929203324 9.911255e-01 #>  [973,] 0.999695816 0.9979478335 0.9967819575 0.9930209108 9.912514e-01 #>  [974,] 0.999700167 0.9979771335 0.9968278504 0.9931200702 9.913754e-01 #>  [975,] 0.999704455 0.9980060159 0.9968730909 0.9932178303 9.914978e-01 #>  [976,] 0.999708682 0.9980344868 0.9969176881 0.9933142107 9.916184e-01 #>  [977,] 0.999712849 0.9980625519 0.9969616512 0.9934092305 9.917373e-01 #>  [978,] 0.999716956 0.9980902170 0.9970049891 0.9935029087 9.918546e-01 #>  [979,] 0.999721004 0.9981174879 0.9970477107 0.9935952640 9.919702e-01 #>  [980,] 0.999724994 0.9981443701 0.9970898247 0.9936863148 9.920841e-01 #>  [981,] 0.999728927 0.9981708691 0.9971313397 0.9937760794 9.921965e-01 #>  [982,] 0.999732804 0.9981969904 0.9971722642 0.9938645756 9.923073e-01 #>  [983,] 0.999736626 0.9982227393 0.9972126064 0.9939518211 9.924165e-01 #>  [984,] 0.999740393 0.9982481211 0.9972523747 0.9940378335 9.925242e-01 #>  [985,] 0.999744106 0.9982731411 0.9972915771 0.9941226299 9.926303e-01 #>  [986,] 0.999747766 0.9982978043 0.9973302217 0.9942062273 9.927350e-01 #>  [987,] 0.999751374 0.9983221159 0.9973683163 0.9942886425 9.928382e-01 #>  [988,] 0.999754930 0.9983460809 0.9974058688 0.9943698919 9.929399e-01 #>  [989,] 0.999758435 0.9983697041 0.9974428869 0.9944499920 9.930402e-01 #>  [990,] 0.999761890 0.9983929904 0.9974793780 0.9945289588 9.931391e-01 #>  [991,] 0.999765296 0.9984159447 0.9975153497 0.9946068081 9.932366e-01 #>  [992,] 0.999768653 0.9984385716 0.9975508092 0.9946835556 9.933327e-01 #>  [993,] 0.999771962 0.9984608758 0.9975857640 0.9947592167 9.934275e-01 #>  [994,] 0.999775224 0.9984828618 0.9976202211 0.9948338066 9.935209e-01 #>  [995,] 0.999778439 0.9985045343 0.9976541875 0.9949073403 9.936130e-01 #>  [996,] 0.999781608 0.9985258977 0.9976876703 0.9949798327 9.937038e-01 #>  [997,] 0.999784732 0.9985469563 0.9977206762 0.9950512983 9.937933e-01 #>  [998,] 0.999787811 0.9985677144 0.9977532121 0.9951217515 9.938816e-01 #>  [999,] 0.999790846 0.9985881765 0.9977852845 0.9951912065 9.939686e-01 #> [1000,] 0.999793837 0.9986083466 0.9978169002 0.9952596774 9.940544e-01 #> [1001,] 0.999796786 0.9986282290 0.9978480655 0.9953271779 9.941389e-01 #> [1002,] 0.999799693 0.9986478277 0.9978787868 0.9953937217 9.942223e-01 #> [1003,] 0.999802558 0.9986671468 0.9979090705 0.9954593222 9.943045e-01 #> [1004,] 0.999805382 0.9986861902 0.9979389227 0.9955239926 9.943855e-01 #> [1005,] 0.999808166 0.9987049619 0.9979683496 0.9955877460 9.944654e-01 #> [1006,] 0.999810910 0.9987234657 0.9979973572 0.9956505954 9.945441e-01 #> [1007,] 0.999813615 0.9987417054 0.9980259515 0.9957125533 9.946218e-01 #> [1008,] 0.999816281 0.9987596849 0.9980541382 0.9957736324 9.946983e-01 #> [1009,] 0.999818909 0.9987774078 0.9980819233 0.9958338451 9.947738e-01 #> [1010,] 0.999821499 0.9987948777 0.9981093124 0.9958932034 9.948481e-01 #> [1011,] 0.999824052 0.9988120983 0.9981363111 0.9959517194 9.949215e-01 #> [1012,] 0.999826569 0.9988290731 0.9981629250 0.9960094050 9.949938e-01 #> [1013,] 0.999829050 0.9988458056 0.9981891595 0.9960662718 9.950650e-01 #> [1014,] 0.999831495 0.9988622993 0.9982150200 0.9961223315 9.951353e-01 #> [1015,] 0.999833905 0.9988785576 0.9982405119 0.9961775953 9.952046e-01 #> [1016,] 0.999836281 0.9988945838 0.9982656403 0.9962320745 9.952728e-01 #> [1017,] 0.999838623 0.9989103812 0.9982904105 0.9962857800 9.953402e-01 #> [1018,] 0.999840931 0.9989259531 0.9983148276 0.9963387230 9.954065e-01 #> [1019,] 0.999843207 0.9989413026 0.9983388964 0.9963909140 9.954719e-01 #> [1020,] 0.999845450 0.9989564331 0.9983626221 0.9964423637 9.955364e-01 #> [1021,] 0.999847660 0.9989713475 0.9983860094 0.9964930825 9.956000e-01 #> [1022,] 0.999849839 0.9989860490 0.9984090632 0.9965430808 9.956627e-01 #> [1023,] 0.999851987 0.9990005406 0.9984317883 0.9965923686 9.957245e-01 #> [1024,] 0.999854105 0.9990148253 0.9984541892 0.9966409561 9.957854e-01 #> [1025,] 0.999856192 0.9990289060 0.9984762707 0.9966888532 9.958454e-01 #> [1026,] 0.999858249 0.9990427856 0.9984980371 0.9967360695 9.959046e-01 #> [1027,] 0.999860276 0.9990564671 0.9985194932 0.9967826146 9.959630e-01 #> [1028,] 0.999862275 0.9990699532 0.9985406431 0.9968284982 9.960205e-01 #> [1029,] 0.999864245 0.9990832467 0.9985614914 0.9968737294 9.960772e-01 #> [1030,] 0.999866187 0.9990963504 0.9985820422 0.9969183176 9.961331e-01 #> [1031,] 0.999868101 0.9991092669 0.9986022999 0.9969622717 9.961882e-01 #> [1032,] 0.999869988 0.9991219990 0.9986222685 0.9970056008 9.962425e-01 #> [1033,] 0.999871848 0.9991345493 0.9986419522 0.9970483138 9.962961e-01 #> [1034,] 0.999873681 0.9991469203 0.9986613551 0.9970904192 9.963489e-01 #> [1035,] 0.999875488 0.9991591146 0.9986804812 0.9971319257 9.964009e-01 #> [1036,] 0.999877269 0.9991711347 0.9986993343 0.9971728418 9.964523e-01 #> [1037,] 0.999879025 0.9991829832 0.9987179184 0.9972131758 9.965028e-01 #> [1038,] 0.999880755 0.9991946624 0.9987362374 0.9972529360 9.965527e-01 #> [1039,] 0.999882461 0.9992061749 0.9987542949 0.9972921304 9.966018e-01 #> [1040,] 0.999884142 0.9992175228 0.9987720946 0.9973307671 9.966503e-01 #> [1041,] 0.999885800 0.9992287087 0.9987896404 0.9973688540 9.966981e-01 #> [1042,] 0.999887433 0.9992397348 0.9988069358 0.9974063989 9.967451e-01 #> [1043,] 0.999889044 0.9992506034 0.9988239843 0.9974434094 9.967916e-01 #> [1044,] 0.999890631 0.9992613167 0.9988407894 0.9974798931 9.968373e-01 #> [1045,] 0.999892195 0.9992718770 0.9988573547 0.9975158574 9.968824e-01 #> [1046,] 0.999893737 0.9992822864 0.9988736836 0.9975513097 9.969269e-01 #> [1047,] 0.999895258 0.9992925471 0.9988897793 0.9975862574 9.969707e-01 #> [1048,] 0.999896756 0.9993026612 0.9989056453 0.9976207074 9.970139e-01 #> [1049,] 0.999898233 0.9993126308 0.9989212848 0.9976546669 9.970565e-01 #> [1050,] 0.999899689 0.9993224580 0.9989367010 0.9976881428 9.970985e-01 #> [1051,] 0.999901124 0.9993321448 0.9989518972 0.9977211421 9.971399e-01 #> [1052,] 0.999902538 0.9993416932 0.9989668763 0.9977536713 9.971807e-01 #> [1053,] 0.999903932 0.9993511051 0.9989816417 0.9977857372 9.972209e-01 #> [1054,] 0.999905306 0.9993603826 0.9989961962 0.9978173464 9.972606e-01 #> [1055,] 0.999906661 0.9993695275 0.9990105429 0.9978485054 9.972997e-01 #> [1056,] 0.999907996 0.9993785418 0.9990246848 0.9978792204 9.973382e-01 #> [1057,] 0.999909312 0.9993874272 0.9990386247 0.9979094979 9.973762e-01 #> [1058,] 0.999910610 0.9993961857 0.9990523656 0.9979393441 9.974136e-01 #> [1059,] 0.999911888 0.9994048190 0.9990659102 0.9979687650 9.974505e-01 #> [1060,] 0.999913149 0.9994133290 0.9990792615 0.9979977666 9.974869e-01 #> [1061,] 0.999914391 0.9994217173 0.9990924221 0.9980263551 9.975228e-01 #> [1062,] 0.999915616 0.9994299858 0.9991053947 0.9980545361 9.975581e-01 #> [1063,] 0.999916823 0.9994381361 0.9991181821 0.9980823155 9.975930e-01 #> [1064,] 0.999918013 0.9994461700 0.9991307869 0.9981096990 9.976273e-01 #> [1065,] 0.999919186 0.9994540890 0.9991432116 0.9981366921 9.976612e-01 #> [1066,] 0.999920342 0.9994618949 0.9991554589 0.9981633006 9.976946e-01 #> [1067,] 0.999921481 0.9994695892 0.9991675312 0.9981895298 9.977275e-01 #> [1068,] 0.999922605 0.9994771736 0.9991794312 0.9982153850 9.977599e-01 #> [1069,] 0.999923712 0.9994846495 0.9991911612 0.9982408717 9.977919e-01 #> [1070,] 0.999924803 0.9994920186 0.9992027236 0.9982659950 9.978234e-01 #> [1071,] 0.999925879 0.9994992824 0.9992141209 0.9982907602 9.978545e-01 #> [1072,] 0.999926939 0.9995064424 0.9992253553 0.9983151722 9.978851e-01 #> [1073,] 0.999927984 0.9995135001 0.9992364293 0.9983392361 9.979153e-01 #> [1074,] 0.999929015 0.9995204568 0.9992473451 0.9983629570 9.979451e-01 #> [1075,] 0.999930030 0.9995273142 0.9992581050 0.9983863395 9.979744e-01 #> [1076,] 0.999931031 0.9995340735 0.9992687111 0.9984093886 9.980033e-01 #> [1077,] 0.999932018 0.9995407362 0.9992791658 0.9984321090 9.980318e-01 #> [1078,] 0.999932990 0.9995473037 0.9992894711 0.9984545054 9.980600e-01 #> [1079,] 0.999933949 0.9995537773 0.9992996291 0.9984765823 9.980877e-01 #> [1080,] 0.999934894 0.9995601584 0.9993096421 0.9984983444 9.981150e-01 #> [1081,] 0.999935825 0.9995664482 0.9993195119 0.9985197960 9.981419e-01 #> [1082,] 0.999936743 0.9995726482 0.9993292408 0.9985409416 9.981684e-01 #> [1083,] 0.999937648 0.9995787595 0.9993388307 0.9985617856 9.981946e-01 #> [1084,] 0.999938540 0.9995847835 0.9993482835 0.9985823323 9.982204e-01 #> [1085,] 0.999939419 0.9995907214 0.9993576013 0.9986025858 9.982458e-01 #> [1086,] 0.999940286 0.9995965743 0.9993667860 0.9986225503 9.982708e-01 #> [1087,] 0.999941140 0.9996023437 0.9993758394 0.9986422301 9.982955e-01 #> [1088,] 0.999941982 0.9996080305 0.9993847635 0.9986616290 9.983199e-01 #> [1089,] 0.999942812 0.9996136360 0.9993935600 0.9986807511 9.983439e-01 #> [1090,] 0.999943630 0.9996191615 0.9994022308 0.9986996004 9.983675e-01 #> [1091,] 0.999944437 0.9996246079 0.9994107778 0.9987181807 9.983908e-01 #> [1092,] 0.999945232 0.9996299764 0.9994192026 0.9987364959 9.984138e-01 #> [1093,] 0.999946015 0.9996352682 0.9994275070 0.9987545497 9.984365e-01 #> [1094,] 0.999946787 0.9996404844 0.9994356928 0.9987723459 9.984588e-01 #> [1095,] 0.999947549 0.9996456260 0.9994437615 0.9987898881 9.984808e-01 #> [1096,] 0.999948299 0.9996506941 0.9994517150 0.9988071799 9.985025e-01 #> [1097,] 0.999949039 0.9996556897 0.9994595548 0.9988242249 9.985239e-01 #> [1098,] 0.999949768 0.9996606139 0.9994672826 0.9988410266 9.985450e-01 #> [1099,] 0.999950486 0.9996654677 0.9994748999 0.9988575885 9.985658e-01 #> [1100,] 0.999951195 0.9996702521 0.9994824083 0.9988739140 9.985863e-01 #> [1101,] 0.999951893 0.9996749681 0.9994898095 0.9988900065 9.986065e-01 #> [1102,] 0.999952581 0.9996796167 0.9994971048 0.9989058692 9.986264e-01 #> [1103,] 0.999953259 0.9996841988 0.9995042959 0.9989215055 9.986460e-01 #> [1104,] 0.999953928 0.9996887154 0.9995113843 0.9989369186 9.986654e-01 #> [1105,] 0.999954587 0.9996931674 0.9995183713 0.9989521116 9.986844e-01 #> [1106,] 0.999955237 0.9996975558 0.9995252584 0.9989670878 9.987032e-01 #> [1107,] 0.999955877 0.9997018814 0.9995320471 0.9989818501 9.987218e-01 #> [1108,] 0.999956508 0.9997061452 0.9995387388 0.9989964016 9.987400e-01 #> [1109,] 0.999957131 0.9997103480 0.9995453349 0.9990107454 9.987580e-01 #> [1110,] 0.999957744 0.9997144907 0.9995518366 0.9990248844 9.987758e-01 #> [1111,] 0.999958348 0.9997185742 0.9995582454 0.9990388214 9.987933e-01 #> [1112,] 0.999958944 0.9997225993 0.9995645626 0.9990525595 9.988105e-01 #> [1113,] 0.999959532 0.9997265669 0.9995707895 0.9990661014 9.988275e-01 #> [1114,] 0.999960111 0.9997304777 0.9995769274 0.9990794499 9.988443e-01 #> [1115,] 0.999960681 0.9997343326 0.9995829776 0.9990926078 9.988608e-01 #> [1116,] 0.999961244 0.9997381324 0.9995889413 0.9991055778 9.988771e-01 #> [1117,] 0.999961798 0.9997418778 0.9995948197 0.9991183626 9.988931e-01 #> [1118,] 0.999962345 0.9997455697 0.9996006141 0.9991309648 9.989089e-01 #> [1119,] 0.999962883 0.9997492088 0.9996063257 0.9991433870 9.989245e-01 #> [1120,] 0.999963414 0.9997527958 0.9996119556 0.9991556317 9.989399e-01 #> [1121,] 0.999963938 0.9997563316 0.9996175050 0.9991677016 9.989550e-01 #> [1122,] 0.999964454 0.9997598168 0.9996229751 0.9991795991 9.989700e-01 #> [1123,] 0.999964962 0.9997632522 0.9996283670 0.9991913267 9.989847e-01 #> [1124,] 0.999965463 0.9997666384 0.9996336818 0.9992028868 9.989992e-01 #> [1125,] 0.999965958 0.9997699762 0.9996389207 0.9992142817 9.990135e-01 #> [1126,] 0.999966445 0.9997732663 0.9996440846 0.9992255139 9.990276e-01 #> [1127,] 0.999966925 0.9997765094 0.9996491747 0.9992365856 9.990415e-01 #> [1128,] 0.999967398 0.9997797060 0.9996541921 0.9992474992 9.990552e-01 #> [1129,] 0.999967864 0.9997828570 0.9996591377 0.9992582568 9.990687e-01 #> [1130,] 0.999968324 0.9997859629 0.9996640126 0.9992688608 9.990820e-01 #> [1131,] 0.999968777 0.9997890243 0.9996688178 0.9992793133 9.990951e-01 #> [1132,] 0.999969224 0.9997920420 0.9996735543 0.9992896165 9.991081e-01 #> [1133,] 0.999969664 0.9997950166 0.9996782231 0.9992997725 9.991208e-01 #> [1134,] 0.999970098 0.9997979486 0.9996828251 0.9993097834 9.991334e-01 #> [1135,] 0.999970526 0.9998008387 0.9996873614 0.9993196512 9.991458e-01 #> [1136,] 0.999970947 0.9998036874 0.9996918328 0.9993293781 9.991580e-01 #> [1137,] 0.999971363 0.9998064954 0.9996962402 0.9993389660 9.991700e-01 #> [1138,] 0.999971773 0.9998092632 0.9997005847 0.9993484170 9.991819e-01 #> [1139,] 0.999972177 0.9998119915 0.9997048670 0.9993577328 9.991936e-01 #> [1140,] 0.999972575 0.9998146808 0.9997090881 0.9993669156 9.992051e-01 #> [1141,] 0.999972967 0.9998173315 0.9997132488 0.9993759672 9.992165e-01 #> [1142,] 0.999973354 0.9998199444 0.9997173501 0.9993848894 9.992277e-01 #> [1143,] 0.999973735 0.9998225199 0.9997213927 0.9993936842 9.992387e-01 #> [1144,] 0.999974111 0.9998250586 0.9997253775 0.9994023532 9.992496e-01 #> [1145,] 0.999974481 0.9998275610 0.9997293053 0.9994108984 9.992603e-01 #> [1146,] 0.999974846 0.9998300275 0.9997331769 0.9994193215 9.992709e-01 #> [1147,] 0.999975206 0.9998324588 0.9997369932 0.9994276242 9.992813e-01 #> [1148,] 0.999975561 0.9998348554 0.9997407550 0.9994358083 9.992916e-01 #> [1149,] 0.999975910 0.9998372176 0.9997444629 0.9994438754 9.993017e-01 #> [1150,] 0.999976255 0.9998395461 0.9997481178 0.9994518273 9.993117e-01 #> [1151,] 0.999976595 0.9998418413 0.9997517205 0.9994596654 9.993215e-01 #> [1152,] 0.999976929 0.9998441036 0.9997552716 0.9994673916 9.993312e-01 #> [1153,] 0.999977260 0.9998463336 0.9997587720 0.9994750074 9.993408e-01 #> [1154,] 0.999977585 0.9998485317 0.9997622223 0.9994825143 9.993502e-01 #> [1155,] 0.999977906 0.9998506984 0.9997656233 0.9994899139 9.993595e-01 #> [1156,] 0.999978222 0.9998528340 0.9997689756 0.9994972078 9.993687e-01 #> [1157,] 0.999978533 0.9998549392 0.9997722800 0.9995043974 9.993777e-01 #> [1158,] 0.999978840 0.9998570142 0.9997755371 0.9995114843 9.993866e-01 #> [1159,] 0.999979143 0.9998590595 0.9997787477 0.9995184699 9.993954e-01 #> [1160,] 0.999979441 0.9998610756 0.9997819124 0.9995253556 9.994040e-01 #> [1161,] 0.999979736 0.9998630628 0.9997850318 0.9995321430 9.994125e-01 #> [1162,] 0.999980025 0.9998650217 0.9997881066 0.9995388333 9.994209e-01 #> [1163,] 0.999980311 0.9998669525 0.9997911374 0.9995454279 9.994292e-01 #> [1164,] 0.999980593 0.9998688557 0.9997941249 0.9995519284 9.994374e-01 #> [1165,] 0.999980871 0.9998707316 0.9997970696 0.9995583359 9.994454e-01 #> [1166,] 0.999981144 0.9998725808 0.9997999723 0.9995646518 9.994534e-01 #> [1167,] 0.999981414 0.9998744035 0.9998028334 0.9995708774 9.994612e-01 #> [1168,] 0.999981680 0.9998762001 0.9998056536 0.9995770141 9.994689e-01 #> [1169,] 0.999981942 0.9998779710 0.9998084335 0.9995830630 9.994765e-01 #> [1170,] 0.999982200 0.9998797166 0.9998111736 0.9995890254 9.994840e-01 #> [1171,] 0.999982455 0.9998814373 0.9998138746 0.9995949027 9.994913e-01 #> [1172,] 0.999982706 0.9998831333 0.9998165369 0.9996006959 9.994986e-01 #> [1173,] 0.999982953 0.9998848050 0.9998191611 0.9996064063 9.995058e-01 #> [1174,] 0.999983197 0.9998864529 0.9998217478 0.9996120350 9.995128e-01 #> [1175,] 0.999983438 0.9998880772 0.9998242975 0.9996175833 9.995198e-01 #> [1176,] 0.999983675 0.9998896782 0.9998268108 0.9996230523 9.995267e-01 #> [1177,] 0.999983908 0.9998912564 0.9998292881 0.9996284431 9.995334e-01 #> [1178,] 0.999984138 0.9998928119 0.9998317300 0.9996337568 9.995401e-01 #> [1179,] 0.999984365 0.9998943453 0.9998341369 0.9996389946 9.995467e-01 #> [1180,] 0.999984589 0.9998958566 0.9998365095 0.9996441575 9.995532e-01 #> [1181,] 0.999984809 0.9998973464 0.9998388481 0.9996492466 9.995596e-01 #> [1182,] 0.999985027 0.9998988149 0.9998411532 0.9996542629 9.995659e-01 #> [1183,] 0.999985241 0.9999002623 0.9998434254 0.9996592075 9.995721e-01 #> [1184,] 0.999985452 0.9999016891 0.9998456651 0.9996640814 9.995782e-01 #> [1185,] 0.999985660 0.9999030955 0.9998478727 0.9996688856 9.995842e-01 #> [1186,] 0.999985865 0.9999044817 0.9998500488 0.9996736212 9.995902e-01 #> [1187,] 0.999986068 0.9999058481 0.9998521938 0.9996782890 9.995960e-01 #> [1188,] 0.999986267 0.9999071949 0.9998543081 0.9996828901 9.996018e-01 #> [1189,] 0.999986463 0.9999085225 0.9998563921 0.9996874254 9.996075e-01 #> [1190,] 0.999986657 0.9999098311 0.9998584463 0.9996918959 9.996131e-01 #> [1191,] 0.999986848 0.9999111210 0.9998604712 0.9996963024 9.996186e-01 #> [1192,] 0.999987036 0.9999123925 0.9998624671 0.9997006460 9.996241e-01 #> [1193,] 0.999987222 0.9999136457 0.9998644344 0.9997049274 9.996295e-01 #> [1194,] 0.999987404 0.9999148810 0.9998663736 0.9997091477 9.996348e-01 #> [1195,] 0.999987585 0.9999160987 0.9998682851 0.9997133075 9.996400e-01 #> [1196,] 0.999987762 0.9999172989 0.9998701693 0.9997174079 9.996451e-01 #> [1197,] 0.999987937 0.9999184820 0.9998720264 0.9997214497 9.996502e-01 #> [1198,] 0.999988110 0.9999196481 0.9998738571 0.9997254337 9.996552e-01 #> [1199,] 0.999988280 0.9999207976 0.9998756615 0.9997293607 9.996602e-01 #> [1200,] 0.999988448 0.9999219306 0.9998774401 0.9997332316 9.996650e-01 #> [1201,] 0.999988613 0.9999230474 0.9998791933 0.9997370471 9.996698e-01 expected.test(mod, Theta, individual=TRUE, probs.only=TRUE) #>                 [,1]        [,2]         [,3]         [,4]         [,5] #>    [1,] 9.972918e-01 0.002708164 9.995984e-01 0.0004016443 0.9997441307 #>    [2,] 9.972526e-01 0.002747363 9.995925e-01 0.0004074715 0.9997404180 #>    [3,] 9.972129e-01 0.002787127 9.995866e-01 0.0004133831 0.9997366514 #>    [4,] 9.971725e-01 0.002827465 9.995806e-01 0.0004193805 0.9997328301 #>    [5,] 9.971316e-01 0.002868386 9.995745e-01 0.0004254649 0.9997289534 #>    [6,] 9.970901e-01 0.002909897 9.995684e-01 0.0004316375 0.9997250205 #>    [7,] 9.970480e-01 0.002952007 9.995621e-01 0.0004378996 0.9997210305 #>    [8,] 9.970053e-01 0.002994724 9.995557e-01 0.0004442525 0.9997169826 #>    [9,] 9.969619e-01 0.003038058 9.995493e-01 0.0004506975 0.9997128761 #>   [10,] 9.969180e-01 0.003082017 9.995428e-01 0.0004572360 0.9997087099 #>   [11,] 9.968734e-01 0.003126610 9.995361e-01 0.0004638693 0.9997044834 #>   [12,] 9.968282e-01 0.003171846 9.995294e-01 0.0004705988 0.9997001955 #>   [13,] 9.967823e-01 0.003217735 9.995226e-01 0.0004774259 0.9996958454 #>   [14,] 9.967357e-01 0.003264285 9.995156e-01 0.0004843520 0.9996914322 #>   [15,] 9.966885e-01 0.003311506 9.995086e-01 0.0004913785 0.9996869550 #>   [16,] 9.966406e-01 0.003359409 9.995015e-01 0.0004985069 0.9996824129 #>   [17,] 9.965920e-01 0.003408001 9.994943e-01 0.0005057386 0.9996778049 #>   [18,] 9.965427e-01 0.003457295 9.994869e-01 0.0005130752 0.9996731300 #>   [19,] 9.964927e-01 0.003507298 9.994795e-01 0.0005205182 0.9996683873 #>   [20,] 9.964420e-01 0.003558023 9.994719e-01 0.0005280691 0.9996635759 #>   [21,] 9.963905e-01 0.003609478 9.994643e-01 0.0005357294 0.9996586946 #>   [22,] 9.963383e-01 0.003661674 9.994565e-01 0.0005435009 0.9996537426 #>   [23,] 9.962854e-01 0.003714623 9.994486e-01 0.0005513850 0.9996487187 #>   [24,] 9.962317e-01 0.003768335 9.994406e-01 0.0005593834 0.9996436220 #>   [25,] 9.961772e-01 0.003822820 9.994325e-01 0.0005674977 0.9996384513 #>   [26,] 9.961219e-01 0.003878089 9.994243e-01 0.0005757297 0.9996332057 #>   [27,] 9.960658e-01 0.003934155 9.994159e-01 0.0005840811 0.9996278840 #>   [28,] 9.960090e-01 0.003991028 9.994074e-01 0.0005925535 0.9996224851 #>   [29,] 9.959513e-01 0.004048720 9.993989e-01 0.0006011487 0.9996170079 #>   [30,] 9.958928e-01 0.004107242 9.993901e-01 0.0006098686 0.9996114512 #>   [31,] 9.958334e-01 0.004166607 9.993813e-01 0.0006187148 0.9996058140 #>   [32,] 9.957732e-01 0.004226826 9.993723e-01 0.0006276893 0.9996000950 #>   [33,] 9.957121e-01 0.004287912 9.993632e-01 0.0006367939 0.9995942931 #>   [34,] 9.956501e-01 0.004349876 9.993540e-01 0.0006460304 0.9995884070 #>   [35,] 9.955873e-01 0.004412733 9.993446e-01 0.0006554008 0.9995824356 #>   [36,] 9.955235e-01 0.004476493 9.993351e-01 0.0006649071 0.9995763776 #>   [37,] 9.954588e-01 0.004541170 9.993254e-01 0.0006745511 0.9995702317 #>   [38,] 9.953932e-01 0.004606778 9.993157e-01 0.0006843350 0.9995639967 #>   [39,] 9.953267e-01 0.004673329 9.993057e-01 0.0006942606 0.9995576713 #>   [40,] 9.952592e-01 0.004740837 9.992957e-01 0.0007043301 0.9995512541 #>   [41,] 9.951907e-01 0.004809315 9.992855e-01 0.0007145456 0.9995447439 #>   [42,] 9.951212e-01 0.004878777 9.992751e-01 0.0007249090 0.9995381393 #>   [43,] 9.950508e-01 0.004949238 9.992646e-01 0.0007354227 0.9995314390 #>   [44,] 9.949793e-01 0.005020712 9.992539e-01 0.0007460888 0.9995246414 #>   [45,] 9.949068e-01 0.005093212 9.992431e-01 0.0007569095 0.9995177453 #>   [46,] 9.948332e-01 0.005166753 9.992321e-01 0.0007678869 0.9995107493 #>   [47,] 9.947586e-01 0.005241351 9.992210e-01 0.0007790235 0.9995036517 #>   [48,] 9.946830e-01 0.005317021 9.992097e-01 0.0007903214 0.9994964513 #>   [49,] 9.946062e-01 0.005393776 9.991982e-01 0.0008017830 0.9994891464 #>   [50,] 9.945284e-01 0.005471634 9.991866e-01 0.0008134107 0.9994817357 #>   [51,] 9.944494e-01 0.005550609 9.991748e-01 0.0008252070 0.9994742175 #>   [52,] 9.943693e-01 0.005630718 9.991628e-01 0.0008371741 0.9994665903 #>   [53,] 9.942880e-01 0.005711976 9.991507e-01 0.0008493147 0.9994588525 #>   [54,] 9.942056e-01 0.005794400 9.991384e-01 0.0008616311 0.9994510025 #>   [55,] 9.941220e-01 0.005878007 9.991259e-01 0.0008741260 0.9994430387 #>   [56,] 9.940372e-01 0.005962812 9.991132e-01 0.0008868020 0.9994349594 #>   [57,] 9.939512e-01 0.006048834 9.991003e-01 0.0008996615 0.9994267631 #>   [58,] 9.938639e-01 0.006136089 9.990873e-01 0.0009127074 0.9994184479 #>   [59,] 9.937754e-01 0.006224595 9.990741e-01 0.0009259423 0.9994100121 #>   [60,] 9.936856e-01 0.006314369 9.990606e-01 0.0009393690 0.9994014541 #>   [61,] 9.935946e-01 0.006405429 9.990470e-01 0.0009529901 0.9993927720 #>   [62,] 9.935022e-01 0.006497795 9.990332e-01 0.0009668086 0.9993839640 #>   [63,] 9.934085e-01 0.006591483 9.990192e-01 0.0009808272 0.9993750283 #>   [64,] 9.933135e-01 0.006686513 9.990050e-01 0.0009950489 0.9993659632 #>   [65,] 9.932171e-01 0.006782904 9.989905e-01 0.0010094766 0.9993567666 #>   [66,] 9.931193e-01 0.006880674 9.989759e-01 0.0010241133 0.9993474367 #>   [67,] 9.930202e-01 0.006979844 9.989610e-01 0.0010389620 0.9993379716 #>   [68,] 9.929196e-01 0.007080433 9.989460e-01 0.0010540257 0.9993283692 #>   [69,] 9.928175e-01 0.007182462 9.989307e-01 0.0010693077 0.9993186277 #>   [70,] 9.927141e-01 0.007285950 9.989152e-01 0.0010848109 0.9993087450 #>   [71,] 9.926091e-01 0.007390917 9.988995e-01 0.0011005387 0.9992987191 #>   [72,] 9.925026e-01 0.007497386 9.988835e-01 0.0011164942 0.9992885479 #>   [73,] 9.923946e-01 0.007605376 9.988673e-01 0.0011326808 0.9992782292 #>   [74,] 9.922851e-01 0.007714910 9.988509e-01 0.0011491018 0.9992677610 #>   [75,] 9.921740e-01 0.007826009 9.988342e-01 0.0011657606 0.9992571410 #>   [76,] 9.920613e-01 0.007938695 9.988173e-01 0.0011826606 0.9992463672 #>   [77,] 9.919470e-01 0.008052991 9.988002e-01 0.0011998053 0.9992354372 #>   [78,] 9.918311e-01 0.008168918 9.987828e-01 0.0012171983 0.9992243489 #>   [79,] 9.917135e-01 0.008286501 9.987652e-01 0.0012348431 0.9992130998 #>   [80,] 9.915942e-01 0.008405761 9.987473e-01 0.0012527433 0.9992016878 #>   [81,] 9.914733e-01 0.008526723 9.987291e-01 0.0012709027 0.9991901103 #>   [82,] 9.913506e-01 0.008649411 9.987107e-01 0.0012893250 0.9991783651 #>   [83,] 9.912262e-01 0.008773848 9.986920e-01 0.0013080139 0.9991664497 #>   [84,] 9.910999e-01 0.008900060 9.986730e-01 0.0013269735 0.9991543617 #>   [85,] 9.909719e-01 0.009028070 9.986538e-01 0.0013462074 0.9991420985 #>   [86,] 9.908421e-01 0.009157905 9.986343e-01 0.0013657198 0.9991296576 #>   [87,] 9.907104e-01 0.009289589 9.986145e-01 0.0013855146 0.9991170365 #>   [88,] 9.905769e-01 0.009423149 9.985944e-01 0.0014055959 0.9991042325 #>   [89,] 9.904414e-01 0.009558611 9.985740e-01 0.0014259678 0.9990912431 #>   [90,] 9.903040e-01 0.009696001 9.985534e-01 0.0014466346 0.9990780654 #>   [91,] 9.901647e-01 0.009835346 9.985324e-01 0.0014676004 0.9990646968 #>   [92,] 9.900233e-01 0.009976673 9.985111e-01 0.0014888696 0.9990511346 #>   [93,] 9.898800e-01 0.010120011 9.984896e-01 0.0015104467 0.9990373759 #>   [94,] 9.897346e-01 0.010265386 9.984677e-01 0.0015323359 0.9990234178 #>   [95,] 9.895872e-01 0.010412828 9.984455e-01 0.0015545419 0.9990092576 #>   [96,] 9.894376e-01 0.010562365 9.984229e-01 0.0015770692 0.9989948923 #>   [97,] 9.892860e-01 0.010714026 9.984001e-01 0.0015999223 0.9989803189 #>   [98,] 9.891322e-01 0.010867841 9.983769e-01 0.0016231062 0.9989655344 #>   [99,] 9.889762e-01 0.011023840 9.983534e-01 0.0016466254 0.9989505358 #>  [100,] 9.888179e-01 0.011182052 9.983295e-01 0.0016704848 0.9989353199 #>  [101,] 9.886575e-01 0.011342509 9.983053e-01 0.0016946894 0.9989198837 #>  [102,] 9.884948e-01 0.011505242 9.982808e-01 0.0017192440 0.9989042239 #>  [103,] 9.883297e-01 0.011670282 9.982558e-01 0.0017441539 0.9988883373 #>  [104,] 9.881623e-01 0.011837661 9.982306e-01 0.0017694240 0.9988722207 #>  [105,] 9.879926e-01 0.012007411 9.982049e-01 0.0017950595 0.9988558707 #>  [106,] 9.878204e-01 0.012179566 9.981789e-01 0.0018210659 0.9988392839 #>  [107,] 9.876458e-01 0.012354158 9.981526e-01 0.0018474482 0.9988224569 #>  [108,] 9.874688e-01 0.012531221 9.981258e-01 0.0018742121 0.9988053863 #>  [109,] 9.872892e-01 0.012710789 9.980986e-01 0.0019013630 0.9987880685 #>  [110,] 9.871071e-01 0.012892897 9.980711e-01 0.0019289064 0.9987705000 #>  [111,] 9.869224e-01 0.013077579 9.980432e-01 0.0019568480 0.9987526771 #>  [112,] 9.867351e-01 0.013264871 9.980148e-01 0.0019851936 0.9987345962 #>  [113,] 9.865452e-01 0.013454809 9.979861e-01 0.0020139490 0.9987162536 #>  [114,] 9.863526e-01 0.013647429 9.979569e-01 0.0020431200 0.9986976453 #>  [115,] 9.861572e-01 0.013842768 9.979273e-01 0.0020727127 0.9986787678 #>  [116,] 9.859591e-01 0.014040862 9.978973e-01 0.0021027331 0.9986596169 #>  [117,] 9.857582e-01 0.014241751 9.978668e-01 0.0021331873 0.9986401888 #>  [118,] 9.855545e-01 0.014445472 9.978359e-01 0.0021640817 0.9986204796 #>  [119,] 9.853479e-01 0.014652064 9.978046e-01 0.0021954226 0.9986004850 #>  [120,] 9.851384e-01 0.014861565 9.977728e-01 0.0022272163 0.9985802011 #>  [121,] 9.849260e-01 0.015074017 9.977405e-01 0.0022594694 0.9985596236 #>  [122,] 9.847105e-01 0.015289458 9.977078e-01 0.0022921885 0.9985387484 #>  [123,] 9.844921e-01 0.015507930 9.976746e-01 0.0023253802 0.9985175710 #>  [124,] 9.842705e-01 0.015729474 9.976409e-01 0.0023590515 0.9984960871 #>  [125,] 9.840459e-01 0.015954132 9.976068e-01 0.0023932092 0.9984742924 #>  [126,] 9.838181e-01 0.016181945 9.975721e-01 0.0024278603 0.9984521824 #>  [127,] 9.835870e-01 0.016412957 9.975370e-01 0.0024630118 0.9984297524 #>  [128,] 9.833528e-01 0.016647212 9.975013e-01 0.0024986710 0.9984069979 #>  [129,] 9.831152e-01 0.016884752 9.974652e-01 0.0025348451 0.9983839142 #>  [130,] 9.828744e-01 0.017125623 9.974285e-01 0.0025715416 0.9983604966 #>  [131,] 9.826301e-01 0.017369869 9.973912e-01 0.0026087680 0.9983367402 #>  [132,] 9.823825e-01 0.017617536 9.973535e-01 0.0026465318 0.9983126401 #>  [133,] 9.821313e-01 0.017868670 9.973152e-01 0.0026848408 0.9982881914 #>  [134,] 9.818767e-01 0.018123319 9.972763e-01 0.0027237028 0.9982633892 #>  [135,] 9.816185e-01 0.018381528 9.972369e-01 0.0027631258 0.9982382281 #>  [136,] 9.813567e-01 0.018643346 9.971969e-01 0.0028031178 0.9982127032 #>  [137,] 9.810912e-01 0.018908822 9.971563e-01 0.0028436869 0.9981868092 #>  [138,] 9.808220e-01 0.019178004 9.971152e-01 0.0028848416 0.9981605407 #>  [139,] 9.805491e-01 0.019450942 9.970734e-01 0.0029265900 0.9981338923 #>  [140,] 9.802723e-01 0.019727686 9.970311e-01 0.0029689409 0.9981068587 #>  [141,] 9.799917e-01 0.020008288 9.969881e-01 0.0030119027 0.9980794341 #>  [142,] 9.797072e-01 0.020292798 9.969445e-01 0.0030554843 0.9980516130 #>  [143,] 9.794187e-01 0.020581269 9.969003e-01 0.0030996946 0.9980233898 #>  [144,] 9.791262e-01 0.020873753 9.968555e-01 0.0031445425 0.9979947585 #>  [145,] 9.788297e-01 0.021170304 9.968100e-01 0.0031900373 0.9979657133 #>  [146,] 9.785290e-01 0.021470975 9.967638e-01 0.0032361881 0.9979362483 #>  [147,] 9.782242e-01 0.021775822 9.967170e-01 0.0032830044 0.9979063575 #>  [148,] 9.779151e-01 0.022084899 9.966695e-01 0.0033304957 0.9978760346 #>  [149,] 9.776017e-01 0.022398263 9.966213e-01 0.0033786717 0.9978452735 #>  [150,] 9.772840e-01 0.022715970 9.965725e-01 0.0034275421 0.9978140678 #>  [151,] 9.769619e-01 0.023038077 9.965229e-01 0.0034771170 0.9977824112 #>  [152,] 9.766354e-01 0.023364642 9.964726e-01 0.0035274063 0.9977502972 #>  [153,] 9.763043e-01 0.023695724 9.964216e-01 0.0035784204 0.9977177193 #>  [154,] 9.759686e-01 0.024031382 9.963698e-01 0.0036301696 0.9976846706 #>  [155,] 9.756283e-01 0.024371677 9.963173e-01 0.0036826644 0.9976511445 #>  [156,] 9.752833e-01 0.024716668 9.962641e-01 0.0037359154 0.9976171341 #>  [157,] 9.749336e-01 0.025066417 9.962101e-01 0.0037899335 0.9975826325 #>  [158,] 9.745790e-01 0.025420985 9.961553e-01 0.0038447296 0.9975476325 #>  [159,] 9.742196e-01 0.025780437 9.960997e-01 0.0039003150 0.9975121270 #>  [160,] 9.738552e-01 0.026144835 9.960433e-01 0.0039567007 0.9974761088 #>  [161,] 9.734858e-01 0.026514244 9.959861e-01 0.0040138983 0.9974395705 #>  [162,] 9.731113e-01 0.026888728 9.959281e-01 0.0040719194 0.9974025046 #>  [163,] 9.727316e-01 0.027268353 9.958692e-01 0.0041307757 0.9973649035 #>  [164,] 9.723468e-01 0.027653185 9.958095e-01 0.0041904791 0.9973267596 #>  [165,] 9.719567e-01 0.028043292 9.957490e-01 0.0042510418 0.9972880650 #>  [166,] 9.715613e-01 0.028438741 9.956875e-01 0.0043124759 0.9972488119 #>  [167,] 9.711604e-01 0.028839601 9.956252e-01 0.0043747940 0.9972089922 #>  [168,] 9.707541e-01 0.029245941 9.955620e-01 0.0044380086 0.9971685978 #>  [169,] 9.703422e-01 0.029657832 9.954979e-01 0.0045021325 0.9971276205 #>  [170,] 9.699247e-01 0.030075344 9.954328e-01 0.0045671786 0.9970860518 #>  [171,] 9.695015e-01 0.030498548 9.953668e-01 0.0046331602 0.9970438834 #>  [172,] 9.690725e-01 0.030927518 9.952999e-01 0.0047000905 0.9970011065 #>  [173,] 9.686377e-01 0.031362327 9.952320e-01 0.0047679830 0.9969577126 #>  [174,] 9.681970e-01 0.031803047 9.951631e-01 0.0048368515 0.9969136927 #>  [175,] 9.677502e-01 0.032249755 9.950933e-01 0.0049067098 0.9968690378 #>  [176,] 9.672975e-01 0.032702525 9.950224e-01 0.0049775720 0.9968237389 #>  [177,] 9.668386e-01 0.033161434 9.949505e-01 0.0050494524 0.9967777868 #>  [178,] 9.663734e-01 0.033626560 9.948776e-01 0.0051223655 0.9967311720 #>  [179,] 9.659020e-01 0.034097978 9.948037e-01 0.0051963259 0.9966838851 #>  [180,] 9.654242e-01 0.034575770 9.947287e-01 0.0052713485 0.9966359164 #>  [181,] 9.649400e-01 0.035060013 9.946526e-01 0.0053474485 0.9965872562 #>  [182,] 9.644492e-01 0.035550788 9.945754e-01 0.0054246411 0.9965378947 #>  [183,] 9.639518e-01 0.036048177 9.944971e-01 0.0055029419 0.9964878217 #>  [184,] 9.634477e-01 0.036552261 9.944176e-01 0.0055823665 0.9964370270 #>  [185,] 9.629369e-01 0.037063123 9.943371e-01 0.0056629309 0.9963855004 #>  [186,] 9.624192e-01 0.037580846 9.942553e-01 0.0057446514 0.9963332314 #>  [187,] 9.618945e-01 0.038105515 9.941725e-01 0.0058275442 0.9962802094 #>  [188,] 9.613628e-01 0.038637215 9.940884e-01 0.0059116260 0.9962264236 #>  [189,] 9.608240e-01 0.039176032 9.940031e-01 0.0059969136 0.9961718630 #>  [190,] 9.602779e-01 0.039722052 9.939166e-01 0.0060834242 0.9961165166 #>  [191,] 9.597246e-01 0.040275364 9.938288e-01 0.0061711750 0.9960603733 #>  [192,] 9.591639e-01 0.040836055 9.937398e-01 0.0062601836 0.9960034215 #>  [193,] 9.585958e-01 0.041404215 9.936495e-01 0.0063504678 0.9959456497 #>  [194,] 9.580201e-01 0.041979934 9.935580e-01 0.0064420456 0.9958870464 #>  [195,] 9.574367e-01 0.042563303 9.934651e-01 0.0065349354 0.9958275994 #>  [196,] 9.568456e-01 0.043154413 9.933708e-01 0.0066291556 0.9957672969 #>  [197,] 9.562466e-01 0.043753358 9.932753e-01 0.0067247251 0.9957061267 #>  [198,] 9.556398e-01 0.044360230 9.931783e-01 0.0068216629 0.9956440762 #>  [199,] 9.550249e-01 0.044975123 9.930800e-01 0.0069199883 0.9955811331 #>  [200,] 9.544019e-01 0.045598133 9.929803e-01 0.0070197210 0.9955172845 #>  [201,] 9.537706e-01 0.046229356 9.928791e-01 0.0071208807 0.9954525176 #>  [202,] 9.531311e-01 0.046868887 9.927765e-01 0.0072234876 0.9953868193 #>  [203,] 9.524832e-01 0.047516825 9.926724e-01 0.0073275621 0.9953201763 #>  [204,] 9.518267e-01 0.048173268 9.925669e-01 0.0074331249 0.9952525751 #>  [205,] 9.511617e-01 0.048838314 9.924598e-01 0.0075401968 0.9951840021 #>  [206,] 9.504879e-01 0.049512064 9.923512e-01 0.0076487993 0.9951144436 #>  [207,] 9.498054e-01 0.050194618 9.922410e-01 0.0077589537 0.9950438853 #>  [208,] 9.491139e-01 0.050886078 9.921293e-01 0.0078706819 0.9949723132 #>  [209,] 9.484135e-01 0.051586545 9.920160e-01 0.0079840060 0.9948997128 #>  [210,] 9.477039e-01 0.052296124 9.919011e-01 0.0080989485 0.9948260695 #>  [211,] 9.469851e-01 0.053014917 9.917845e-01 0.0082155321 0.9947513685 #>  [212,] 9.462570e-01 0.053743030 9.916662e-01 0.0083337798 0.9946755947 #>  [213,] 9.455194e-01 0.054480567 9.915463e-01 0.0084537149 0.9945987330 #>  [214,] 9.447724e-01 0.055227636 9.914246e-01 0.0085753612 0.9945207677 #>  [215,] 9.440157e-01 0.055984341 9.913013e-01 0.0086987425 0.9944416834 #>  [216,] 9.432492e-01 0.056750793 9.911761e-01 0.0088238832 0.9943614641 #>  [217,] 9.424729e-01 0.057527097 9.910492e-01 0.0089508080 0.9942800937 #>  [218,] 9.416866e-01 0.058313365 9.909205e-01 0.0090795418 0.9941975558 #>  [219,] 9.408903e-01 0.059109705 9.907899e-01 0.0092101098 0.9941138341 #>  [220,] 9.400838e-01 0.059916228 9.906575e-01 0.0093425378 0.9940289115 #>  [221,] 9.392670e-01 0.060733045 9.905231e-01 0.0094768517 0.9939427712 #>  [222,] 9.384397e-01 0.061560268 9.903869e-01 0.0096130778 0.9938553960 #>  [223,] 9.376020e-01 0.062398011 9.902488e-01 0.0097512429 0.9937667682 #>  [224,] 9.367536e-01 0.063246385 9.901086e-01 0.0098913739 0.9936768702 #>  [225,] 9.358945e-01 0.064105506 9.899665e-01 0.0100334982 0.9935856841 #>  [226,] 9.350245e-01 0.064975487 9.898224e-01 0.0101776437 0.9934931915 #>  [227,] 9.341436e-01 0.065856443 9.896762e-01 0.0103238385 0.9933993742 #>  [228,] 9.332515e-01 0.066748492 9.895279e-01 0.0104721110 0.9933042132 #>  [229,] 9.323483e-01 0.067651748 9.893775e-01 0.0106224902 0.9932076897 #>  [230,] 9.314337e-01 0.068566329 9.892250e-01 0.0107750053 0.9931097844 #>  [231,] 9.305076e-01 0.069492353 9.890703e-01 0.0109296860 0.9930104778 #>  [232,] 9.295701e-01 0.070429938 9.889134e-01 0.0110865623 0.9929097502 #>  [233,] 9.286208e-01 0.071379203 9.887543e-01 0.0112456647 0.9928075814 #>  [234,] 9.276597e-01 0.072340266 9.885930e-01 0.0114070240 0.9927039513 #>  [235,] 9.266868e-01 0.073313247 9.884293e-01 0.0115706715 0.9925988391 #>  [236,] 9.257017e-01 0.074298267 9.882634e-01 0.0117366389 0.9924922241 #>  [237,] 9.247046e-01 0.075295445 9.880950e-01 0.0119049581 0.9923840851 #>  [238,] 9.236951e-01 0.076304905 9.879243e-01 0.0120756619 0.9922744005 #>  [239,] 9.226732e-01 0.077326766 9.877512e-01 0.0122487829 0.9921631488 #>  [240,] 9.216388e-01 0.078361150 9.875756e-01 0.0124243547 0.9920503079 #>  [241,] 9.205918e-01 0.079408181 9.873976e-01 0.0126024110 0.9919358554 #>  [242,] 9.195320e-01 0.080467980 9.872170e-01 0.0127829861 0.9918197687 #>  [243,] 9.184593e-01 0.081540670 9.870339e-01 0.0129661145 0.9917020248 #>  [244,] 9.173736e-01 0.082626376 9.868482e-01 0.0131518315 0.9915826006 #>  [245,] 9.162748e-01 0.083725219 9.866598e-01 0.0133401726 0.9914614724 #>  [246,] 9.151627e-01 0.084837325 9.864688e-01 0.0135311738 0.9913386164 #>  [247,] 9.140372e-01 0.085962816 9.862751e-01 0.0137248718 0.9912140083 #>  [248,] 9.128982e-01 0.087101818 9.860787e-01 0.0139213033 0.9910876237 #>  [249,] 9.117455e-01 0.088254454 9.858795e-01 0.0141205060 0.9909594376 #>  [250,] 9.105792e-01 0.089420850 9.856775e-01 0.0143225177 0.9908294249 #>  [251,] 9.093989e-01 0.090601128 9.854726e-01 0.0145273768 0.9906975601 #>  [252,] 9.082046e-01 0.091795416 9.852649e-01 0.0147351223 0.9905638172 #>  [253,] 9.069962e-01 0.093003835 9.850542e-01 0.0149457936 0.9904281700 #>  [254,] 9.057735e-01 0.094226513 9.848406e-01 0.0151594305 0.9902905920 #>  [255,] 9.045364e-01 0.095463572 9.846239e-01 0.0153760736 0.9901510562 #>  [256,] 9.032849e-01 0.096715139 9.844042e-01 0.0155957636 0.9900095353 #>  [257,] 9.020187e-01 0.097981336 9.841815e-01 0.0158185421 0.9898660017 #>  [258,] 9.007377e-01 0.099262289 9.839555e-01 0.0160444510 0.9897204274 #>  [259,] 8.994419e-01 0.100558121 9.837265e-01 0.0162735328 0.9895727840 #>  [260,] 8.981310e-01 0.101868957 9.834942e-01 0.0165058306 0.9894230426 #>  [261,] 8.968051e-01 0.103194920 9.832586e-01 0.0167413879 0.9892711741 #>  [262,] 8.954639e-01 0.104536133 9.830198e-01 0.0169802488 0.9891171491 #>  [263,] 8.941073e-01 0.105892719 9.827775e-01 0.0172224581 0.9889609375 #>  [264,] 8.927352e-01 0.107264802 9.825319e-01 0.0174680608 0.9888025091 #>  [265,] 8.913475e-01 0.108652502 9.822829e-01 0.0177171029 0.9886418330 #>  [266,] 8.899441e-01 0.110055942 9.820304e-01 0.0179696306 0.9884788783 #>  [267,] 8.885248e-01 0.111475243 9.817743e-01 0.0182256909 0.9883136132 #>  [268,] 8.870895e-01 0.112910525 9.815147e-01 0.0184853312 0.9881460060 #>  [269,] 8.856381e-01 0.114361908 9.812514e-01 0.0187485998 0.9879760241 #>  [270,] 8.841705e-01 0.115829512 9.809845e-01 0.0190155451 0.9878036349 #>  [271,] 8.826865e-01 0.117313455 9.807138e-01 0.0192862166 0.9876288051 #>  [272,] 8.811861e-01 0.118813854 9.804393e-01 0.0195606640 0.9874515009 #>  [273,] 8.796692e-01 0.120330828 9.801611e-01 0.0198389379 0.9872716884 #>  [274,] 8.781355e-01 0.121864490 9.798789e-01 0.0201210894 0.9870893330 #>  [275,] 8.765850e-01 0.123414958 9.795928e-01 0.0204071700 0.9869043997 #>  [276,] 8.750177e-01 0.124982344 9.793028e-01 0.0206972323 0.9867168530 #>  [277,] 8.734332e-01 0.126566762 9.790087e-01 0.0209913290 0.9865266571 #>  [278,] 8.718317e-01 0.128168324 9.787105e-01 0.0212895139 0.9863337755 #>  [279,] 8.702129e-01 0.129787141 9.784082e-01 0.0215918411 0.9861381715 #>  [280,] 8.685767e-01 0.131423321 9.781016e-01 0.0218983655 0.9859398077 #>  [281,] 8.669230e-01 0.133076974 9.777909e-01 0.0222091427 0.9857386464 #>  [282,] 8.652518e-01 0.134748207 9.774758e-01 0.0225242288 0.9855346493 #>  [283,] 8.635629e-01 0.136437124 9.771563e-01 0.0228436806 0.9853277776 #>  [284,] 8.618562e-01 0.138143830 9.768324e-01 0.0231675557 0.9851179920 #>  [285,] 8.601316e-01 0.139868428 9.765041e-01 0.0234959123 0.9849052529 #>  [286,] 8.583890e-01 0.141611018 9.761712e-01 0.0238288092 0.9846895199 #>  [287,] 8.566283e-01 0.143371700 9.758337e-01 0.0241663059 0.9844707523 #>  [288,] 8.548494e-01 0.145150571 9.754915e-01 0.0245084627 0.9842489087 #>  [289,] 8.530523e-01 0.146947727 9.751447e-01 0.0248553405 0.9840239475 #>  [290,] 8.512367e-01 0.148763262 9.747930e-01 0.0252070010 0.9837958261 #>  [291,] 8.494027e-01 0.150597268 9.744365e-01 0.0255635064 0.9835645019 #>  [292,] 8.475502e-01 0.152449835 9.740751e-01 0.0259249198 0.9833299313 #>  [293,] 8.456789e-01 0.154321051 9.737087e-01 0.0262913050 0.9830920704 #>  [294,] 8.437890e-01 0.156211002 9.733373e-01 0.0266627264 0.9828508748 #>  [295,] 8.418802e-01 0.158119771 9.729608e-01 0.0270392492 0.9826062993 #>  [296,] 8.399526e-01 0.160047439 9.725791e-01 0.0274209394 0.9823582983 #>  [297,] 8.380059e-01 0.161994086 9.721921e-01 0.0278078636 0.9821068258 #>  [298,] 8.360402e-01 0.163959789 9.717999e-01 0.0282000891 0.9818518348 #>  [299,] 8.340554e-01 0.165944620 9.714023e-01 0.0285976842 0.9815932782 #>  [300,] 8.320513e-01 0.167948653 9.709993e-01 0.0290007178 0.9813311079 #>  [301,] 8.300280e-01 0.169971955 9.705907e-01 0.0294092594 0.9810652755 #>  [302,] 8.279854e-01 0.172014593 9.701766e-01 0.0298233795 0.9807957319 #>  [303,] 8.259234e-01 0.174076630 9.697569e-01 0.0302431493 0.9805224275 #>  [304,] 8.238419e-01 0.176158126 9.693314e-01 0.0306686406 0.9802453118 #>  [305,] 8.217409e-01 0.178259141 9.689001e-01 0.0310999262 0.9799643341 #>  [306,] 8.196203e-01 0.180379727 9.684629e-01 0.0315370795 0.9796794428 #>  [307,] 8.174801e-01 0.182519936 9.680198e-01 0.0319801748 0.9793905858 #>  [308,] 8.153202e-01 0.184679818 9.675707e-01 0.0324292871 0.9790977102 #>  [309,] 8.131406e-01 0.186859416 9.671155e-01 0.0328844923 0.9788007628 #>  [310,] 8.109412e-01 0.189058774 9.666541e-01 0.0333458669 0.9784996894 #>  [311,] 8.087221e-01 0.191277928 9.661865e-01 0.0338134883 0.9781944354 #>  [312,] 8.064831e-01 0.193516915 9.657126e-01 0.0342874347 0.9778849455 #>  [313,] 8.042242e-01 0.195775766 9.652322e-01 0.0347677852 0.9775711637 #>  [314,] 8.019455e-01 0.198054508 9.647454e-01 0.0352546195 0.9772530333 #>  [315,] 7.996468e-01 0.200353166 9.642520e-01 0.0357480182 0.9769304970 #>  [316,] 7.973282e-01 0.202671760 9.637519e-01 0.0362480627 0.9766034968 #>  [317,] 7.949897e-01 0.205010308 9.632452e-01 0.0367548352 0.9762719742 #>  [318,] 7.926312e-01 0.207368821 9.627316e-01 0.0372684188 0.9759358697 #>  [319,] 7.902527e-01 0.209747308 9.622111e-01 0.0377888972 0.9755951233 #>  [320,] 7.878542e-01 0.212145775 9.616836e-01 0.0383163552 0.9752496744 #>  [321,] 7.854358e-01 0.214564221 9.611491e-01 0.0388508782 0.9748994615 #>  [322,] 7.829974e-01 0.217002644 9.606074e-01 0.0393925525 0.9745444225 #>  [323,] 7.805390e-01 0.219461036 9.600585e-01 0.0399414652 0.9741844945 #>  [324,] 7.780606e-01 0.221939384 9.595023e-01 0.0404977042 0.9738196141 #>  [325,] 7.755623e-01 0.224437672 9.589386e-01 0.0410613582 0.9734497169 #>  [326,] 7.730441e-01 0.226955879 9.583675e-01 0.0416325169 0.9730747381 #>  [327,] 7.705060e-01 0.229493980 9.577887e-01 0.0422112707 0.9726946118 #>  [328,] 7.679481e-01 0.232051945 9.572023e-01 0.0427977107 0.9723092717 #>  [329,] 7.653703e-01 0.234629739 9.566081e-01 0.0433919289 0.9719186506 #>  [330,] 7.627727e-01 0.237227323 9.560060e-01 0.0439940183 0.9715226805 #>  [331,] 7.601553e-01 0.239844653 9.553959e-01 0.0446040726 0.9711212929 #>  [332,] 7.575183e-01 0.242481680 9.547778e-01 0.0452221861 0.9707144182 #>  [333,] 7.548616e-01 0.245138351 9.541515e-01 0.0458484543 0.9703019864 #>  [334,] 7.521854e-01 0.247814606 9.535170e-01 0.0464829732 0.9698839264 #>  [335,] 7.494896e-01 0.250510383 9.528742e-01 0.0471258398 0.9694601666 #>  [336,] 7.467744e-01 0.253225613 9.522228e-01 0.0477771519 0.9690306345 #>  [337,] 7.440398e-01 0.255960221 9.515630e-01 0.0484370079 0.9685952569 #>  [338,] 7.412859e-01 0.258714131 9.508945e-01 0.0491055074 0.9681539598 #>  [339,] 7.385127e-01 0.261487256 9.502172e-01 0.0497827504 0.9677066684 #>  [340,] 7.357205e-01 0.264279510 9.495312e-01 0.0504688380 0.9672533070 #>  [341,] 7.329092e-01 0.267090796 9.488361e-01 0.0511638718 0.9667937994 #>  [342,] 7.300790e-01 0.269921016 9.481320e-01 0.0518679544 0.9663280683 #>  [343,] 7.272299e-01 0.272770065 9.474188e-01 0.0525811893 0.9658560359 #>  [344,] 7.243622e-01 0.275637832 9.466963e-01 0.0533036804 0.9653776233 #>  [345,] 7.214758e-01 0.278524202 9.459645e-01 0.0540355327 0.9648927510 #>  [346,] 7.185709e-01 0.281429054 9.452231e-01 0.0547768518 0.9644013387 #>  [347,] 7.156477e-01 0.284352262 9.444723e-01 0.0555277442 0.9639033052 #>  [348,] 7.127063e-01 0.287293693 9.437117e-01 0.0562883170 0.9633985686 #>  [349,] 7.097468e-01 0.290253211 9.429413e-01 0.0570586781 0.9628870460 #>  [350,] 7.067693e-01 0.293230672 9.421611e-01 0.0578389362 0.9623686538 #>  [351,] 7.037741e-01 0.296225929 9.413708e-01 0.0586292007 0.9618433077 #>  [352,] 7.007612e-01 0.299238828 9.405704e-01 0.0594295815 0.9613109225 #>  [353,] 6.977308e-01 0.302269209 9.397598e-01 0.0602401897 0.9607714120 #>  [354,] 6.946831e-01 0.305316908 9.389389e-01 0.0610611366 0.9602246895 #>  [355,] 6.916182e-01 0.308381754 9.381075e-01 0.0618925344 0.9596706672 #>  [356,] 6.885364e-01 0.311463572 9.372655e-01 0.0627344961 0.9591092567 #>  [357,] 6.854378e-01 0.314562181 9.364129e-01 0.0635871352 0.9585403686 #>  [358,] 6.823226e-01 0.317677394 9.355494e-01 0.0644505657 0.9579639128 #>  [359,] 6.791910e-01 0.320809018 9.346751e-01 0.0653249027 0.9573797983 #>  [360,] 6.760431e-01 0.323956856 9.337897e-01 0.0662102614 0.9567879334 #>  [361,] 6.728793e-01 0.327120705 9.328932e-01 0.0671067581 0.9561882254 #>  [362,] 6.696996e-01 0.330300357 9.319855e-01 0.0680145093 0.9555805809 #>  [363,] 6.665044e-01 0.333495597 9.310664e-01 0.0689336323 0.9549649056 #>  [364,] 6.632938e-01 0.336706206 9.301358e-01 0.0698642449 0.9543411045 #>  [365,] 6.600680e-01 0.339931960 9.291935e-01 0.0708064654 0.9537090817 #>  [366,] 6.568274e-01 0.343172629 9.282396e-01 0.0717604128 0.9530687405 #>  [367,] 6.535720e-01 0.346427978 9.272738e-01 0.0727262064 0.9524199834 #>  [368,] 6.503022e-01 0.349697766 9.262960e-01 0.0737039662 0.9517627121 #>  [369,] 6.470183e-01 0.352981748 9.253062e-01 0.0746938125 0.9510968274 #>  [370,] 6.437203e-01 0.356279674 9.243041e-01 0.0756958660 0.9504222294 #>  [371,] 6.404087e-01 0.359591288 9.232898e-01 0.0767102482 0.9497388174 #>  [372,] 6.370837e-01 0.362916330 9.222629e-01 0.0777370806 0.9490464898 #>  [373,] 6.337455e-01 0.366254533 9.212235e-01 0.0787764853 0.9483451444 #>  [374,] 6.303944e-01 0.369605628 9.201714e-01 0.0798285846 0.9476346781 #>  [375,] 6.270307e-01 0.372969340 9.191065e-01 0.0808935014 0.9469149869 #>  [376,] 6.236546e-01 0.376345389 9.180286e-01 0.0819713588 0.9461859662 #>  [377,] 6.202665e-01 0.379733490 9.169377e-01 0.0830622800 0.9454475106 #>  [378,] 6.168666e-01 0.383133354 9.158336e-01 0.0841663888 0.9446995139 #>  [379,] 6.134553e-01 0.386544689 9.147162e-01 0.0852838089 0.9439418691 #>  [380,] 6.100328e-01 0.389967196 9.135853e-01 0.0864146644 0.9431744686 #>  [381,] 6.065994e-01 0.393400573 9.124409e-01 0.0875590796 0.9423972040 #>  [382,] 6.031555e-01 0.396844513 9.112828e-01 0.0887171789 0.9416099660 #>  [383,] 5.997013e-01 0.400298708 9.101109e-01 0.0898890868 0.9408126448 #>  [384,] 5.962372e-01 0.403762842 9.089251e-01 0.0910749278 0.9400051299 #>  [385,] 5.927634e-01 0.407236596 9.077252e-01 0.0922748267 0.9391873098 #>  [386,] 5.892803e-01 0.410719650 9.065111e-01 0.0934889080 0.9383590727 #>  [387,] 5.857883e-01 0.414211677 9.052827e-01 0.0947172965 0.9375203058 #>  [388,] 5.822877e-01 0.417712349 9.040399e-01 0.0959601167 0.9366708959 #>  [389,] 5.787787e-01 0.421221332 9.027825e-01 0.0972174931 0.9358107288 #>  [390,] 5.752617e-01 0.424738290 9.015104e-01 0.0984895502 0.9349396901 #>  [391,] 5.717371e-01 0.428262885 9.002236e-01 0.0997764122 0.9340576644 #>  [392,] 5.682052e-01 0.431794775 8.989218e-01 0.1010782031 0.9331645359 #>  [393,] 5.646664e-01 0.435333613 8.976050e-01 0.1023950466 0.9322601880 #>  [394,] 5.611209e-01 0.438879053 8.962729e-01 0.1037270663 0.9313445037 #>  [395,] 5.575693e-01 0.442430743 8.949256e-01 0.1050743854 0.9304173653 #>  [396,] 5.540117e-01 0.445988331 8.935629e-01 0.1064371266 0.9294786548 #>  [397,] 5.504485e-01 0.449551461 8.921846e-01 0.1078154124 0.9285282532 #>  [398,] 5.468802e-01 0.453119775 8.907906e-01 0.1092093647 0.9275660415 #>  [399,] 5.433071e-01 0.456692913 8.893809e-01 0.1106191050 0.9265918997 #>  [400,] 5.397295e-01 0.460270513 8.879552e-01 0.1120447540 0.9256057078 #>  [401,] 5.361478e-01 0.463852212 8.865136e-01 0.1134864323 0.9246073451 #>  [402,] 5.325624e-01 0.467437645 8.850557e-01 0.1149442593 0.9235966903 #>  [403,] 5.289736e-01 0.471026443 8.835816e-01 0.1164183540 0.9225736220 #>  [404,] 5.253818e-01 0.474618239 8.820912e-01 0.1179088347 0.9215380182 #>  [405,] 5.217873e-01 0.478212664 8.805842e-01 0.1194158187 0.9204897567 #>  [406,] 5.181907e-01 0.481809346 8.790606e-01 0.1209394226 0.9194287147 #>  [407,] 5.145921e-01 0.485407914 8.775202e-01 0.1224797621 0.9183547693 #>  [408,] 5.109920e-01 0.489007996 8.759630e-01 0.1240369519 0.9172677972 #>  [409,] 5.073908e-01 0.492609219 8.743889e-01 0.1256111056 0.9161676749 #>  [410,] 5.037888e-01 0.496211208 8.727977e-01 0.1272023359 0.9150542786 #>  [411,] 5.001864e-01 0.499813591 8.711892e-01 0.1288107543 0.9139274842 #>  [412,] 4.965840e-01 0.503415994 8.695635e-01 0.1304364709 0.9127871676 #>  [413,] 4.929820e-01 0.507018041 8.679204e-01 0.1320795950 0.9116332044 #>  [414,] 4.893806e-01 0.510619361 8.662598e-01 0.1337402343 0.9104654702 #>  [415,] 4.857804e-01 0.514219578 8.645815e-01 0.1354184950 0.9092838404 #>  [416,] 4.821817e-01 0.517818320 8.628855e-01 0.1371144823 0.9080881903 #>  [417,] 4.785848e-01 0.521415215 8.611717e-01 0.1388282995 0.9068783952 #>  [418,] 4.749901e-01 0.525009890 8.594400e-01 0.1405600486 0.9056543306 #>  [419,] 4.713980e-01 0.528601976 8.576902e-01 0.1423098298 0.9044158718 #>  [420,] 4.678089e-01 0.532191102 8.559223e-01 0.1440777418 0.9031628942 #>  [421,] 4.642231e-01 0.535776899 8.541361e-01 0.1458638814 0.9018952735 #>  [422,] 4.606410e-01 0.539359002 8.523317e-01 0.1476683437 0.9006128853 #>  [423,] 4.570630e-01 0.542937043 8.505088e-01 0.1494912218 0.8993156056 #>  [424,] 4.534893e-01 0.546510660 8.486674e-01 0.1513326069 0.8980033104 #>  [425,] 4.499205e-01 0.550079490 8.468074e-01 0.1531925882 0.8966758763 #>  [426,] 4.463568e-01 0.553643173 8.449287e-01 0.1550712529 0.8953331799 #>  [427,] 4.427986e-01 0.557201351 8.430313e-01 0.1569686858 0.8939750982 #>  [428,] 4.392463e-01 0.560753668 8.411150e-01 0.1588849696 0.8926015089 #>  [429,] 4.357002e-01 0.564299771 8.391798e-01 0.1608201848 0.8912122897 #>  [430,] 4.321607e-01 0.567839309 8.372256e-01 0.1627744094 0.8898073191 #>  [431,] 4.286281e-01 0.571371933 8.352523e-01 0.1647477190 0.8883864761 #>  [432,] 4.251027e-01 0.574897299 8.332598e-01 0.1667401866 0.8869496401 #>  [433,] 4.215849e-01 0.578415063 8.312481e-01 0.1687518827 0.8854966912 #>  [434,] 4.180751e-01 0.581924887 8.292171e-01 0.1707828752 0.8840275105 #>  [435,] 4.145736e-01 0.585426434 8.271668e-01 0.1728332291 0.8825419793 #>  [436,] 4.110806e-01 0.588919372 8.250970e-01 0.1749030066 0.8810399800 #>  [437,] 4.075966e-01 0.592403369 8.230077e-01 0.1769922672 0.8795213959 #>  [438,] 4.041219e-01 0.595878101 8.208989e-01 0.1791010673 0.8779861109 #>  [439,] 4.006568e-01 0.599343245 8.187705e-01 0.1812294602 0.8764340101 #>  [440,] 3.972015e-01 0.602798483 8.166225e-01 0.1833774962 0.8748649796 #>  [441,] 3.937565e-01 0.606243500 8.144548e-01 0.1855452225 0.8732789062 #>  [442,] 3.903220e-01 0.609677984 8.122673e-01 0.1877326827 0.8716756783 #>  [443,] 3.868984e-01 0.613101630 8.100601e-01 0.1899399176 0.8700551852 #>  [444,] 3.834859e-01 0.616514135 8.078330e-01 0.1921669640 0.8684173174 #>  [445,] 3.800848e-01 0.619915200 8.055861e-01 0.1944138557 0.8667619667 #>  [446,] 3.766955e-01 0.623304532 8.033194e-01 0.1966806227 0.8650890264 #>  [447,] 3.733182e-01 0.626681841 8.010327e-01 0.1989672914 0.8633983911 #>  [448,] 3.699532e-01 0.630046843 7.987261e-01 0.2012738846 0.8616899569 #>  [449,] 3.666007e-01 0.633399256 7.963996e-01 0.2036004211 0.8599636213 #>  [450,] 3.632612e-01 0.636738807 7.940531e-01 0.2059469161 0.8582192836 #>  [451,] 3.599348e-01 0.640065223 7.916866e-01 0.2083133807 0.8564568447 #>  [452,] 3.566218e-01 0.643378238 7.893002e-01 0.2106998222 0.8546762072 #>  [453,] 3.533224e-01 0.646677593 7.868938e-01 0.2131062436 0.8528772754 #>  [454,] 3.500370e-01 0.649963030 7.844674e-01 0.2155326441 0.8510599557 #>  [455,] 3.467657e-01 0.653234298 7.820210e-01 0.2179790182 0.8492241562 #>  [456,] 3.435088e-01 0.656491153 7.795546e-01 0.2204453567 0.8473697872 #>  [457,] 3.402666e-01 0.659733352 7.770684e-01 0.2229316457 0.8454967609 #>  [458,] 3.370393e-01 0.662960660 7.745621e-01 0.2254378669 0.8436049917 #>  [459,] 3.338272e-01 0.666172847 7.720360e-01 0.2279639977 0.8416943962 #>  [460,] 3.306303e-01 0.669369688 7.694900e-01 0.2305100110 0.8397648933 #>  [461,] 3.274490e-01 0.672550963 7.669241e-01 0.2330758749 0.8378164043 #>  [462,] 3.242835e-01 0.675716457 7.643384e-01 0.2356615529 0.8358488529 #>  [463,] 3.211340e-01 0.678865962 7.617330e-01 0.2382670040 0.8338621651 #>  [464,] 3.180007e-01 0.681999273 7.591078e-01 0.2408921823 0.8318562698 #>  [465,] 3.148838e-01 0.685116193 7.564630e-01 0.2435370368 0.8298310983 #>  [466,] 3.117835e-01 0.688216529 7.537985e-01 0.2462015121 0.8277865847 #>  [467,] 3.086999e-01 0.691300094 7.511145e-01 0.2488855477 0.8257226659 #>  [468,] 3.056333e-01 0.694366705 7.484109e-01 0.2515890778 0.8236392817 #>  [469,] 3.025838e-01 0.697416186 7.456880e-01 0.2543120320 0.8215363746 #>  [470,] 2.995516e-01 0.700448367 7.429457e-01 0.2570543347 0.8194138905 #>  [471,] 2.965369e-01 0.703463083 7.401841e-01 0.2598159050 0.8172717780 #>  [472,] 2.935398e-01 0.706460173 7.374033e-01 0.2625966570 0.8151099892 #>  [473,] 2.905605e-01 0.709439483 7.346035e-01 0.2653964995 0.8129284792 #>  [474,] 2.875991e-01 0.712400864 7.317847e-01 0.2682153362 0.8107272065 #>  [475,] 2.846558e-01 0.715344174 7.289469e-01 0.2710530654 0.8085061330 #>  [476,] 2.817307e-01 0.718269273 7.260904e-01 0.2739095800 0.8062652240 #>  [477,] 2.788240e-01 0.721176031 7.232152e-01 0.2767847678 0.8040044484 #>  [478,] 2.759357e-01 0.724064319 7.203215e-01 0.2796785109 0.8017237786 #>  [479,] 2.730660e-01 0.726934017 7.174093e-01 0.2825906863 0.7994231909 #>  [480,] 2.702150e-01 0.729785008 7.144788e-01 0.2855211655 0.7971026651 #>  [481,] 2.673828e-01 0.732617182 7.115302e-01 0.2884698143 0.7947621850 #>  [482,] 2.645696e-01 0.735430432 7.085635e-01 0.2914364935 0.7924017381 #>  [483,] 2.617753e-01 0.738224660 7.055789e-01 0.2944210580 0.7900213162 #>  [484,] 2.590002e-01 0.740999769 7.025766e-01 0.2974233574 0.7876209148 #>  [485,] 2.562443e-01 0.743755671 6.995568e-01 0.3004432357 0.7852005337 #>  [486,] 2.535077e-01 0.746492281 6.965195e-01 0.3034805317 0.7827601768 #>  [487,] 2.507905e-01 0.749209520 6.934649e-01 0.3065350783 0.7802998523 #>  [488,] 2.480927e-01 0.751907313 6.903933e-01 0.3096067031 0.7778195727 #>  [489,] 2.454144e-01 0.754585592 6.873048e-01 0.3126952282 0.7753193549 #>  [490,] 2.427557e-01 0.757244292 6.841995e-01 0.3158004702 0.7727992202 #>  [491,] 2.401166e-01 0.759883355 6.810778e-01 0.3189222402 0.7702591943 #>  [492,] 2.374973e-01 0.762502726 6.779397e-01 0.3220603437 0.7676993078 #>  [493,] 2.348976e-01 0.765102355 6.747854e-01 0.3252145810 0.7651195957 #>  [494,] 2.323178e-01 0.767682199 6.716153e-01 0.3283847468 0.7625200976 #>  [495,] 2.297578e-01 0.770242218 6.684294e-01 0.3315706306 0.7599008580 #>  [496,] 2.272176e-01 0.772782376 6.652280e-01 0.3347720162 0.7572619263 #>  [497,] 2.246974e-01 0.775302643 6.620113e-01 0.3379886823 0.7546033566 #>  [498,] 2.221970e-01 0.777802994 6.587796e-01 0.3412204022 0.7519252079 #>  [499,] 2.197166e-01 0.780283406 6.555331e-01 0.3444669441 0.7492275443 #>  [500,] 2.172561e-01 0.782743864 6.522719e-01 0.3477280708 0.7465104348 #>  [501,] 2.148156e-01 0.785184353 6.489965e-01 0.3510035398 0.7437739536 #>  [502,] 2.123951e-01 0.787604868 6.457069e-01 0.3542931038 0.7410181798 #>  [503,] 2.099946e-01 0.790005402 6.424035e-01 0.3575965103 0.7382431979 #>  [504,] 2.076140e-01 0.792385957 6.390865e-01 0.3609135016 0.7354490974 #>  [505,] 2.052535e-01 0.794746537 6.357562e-01 0.3642438153 0.7326359732 #>  [506,] 2.029129e-01 0.797087150 6.324128e-01 0.3675871840 0.7298039254 #>  [507,] 2.005922e-01 0.799407808 6.290567e-01 0.3709433355 0.7269530592 #>  [508,] 1.982915e-01 0.801708529 6.256880e-01 0.3743119927 0.7240834855 #>  [509,] 1.960107e-01 0.803989331 6.223071e-01 0.3776928742 0.7211953204 #>  [510,] 1.937498e-01 0.806250239 6.189143e-01 0.3810856935 0.7182886854 #>  [511,] 1.915087e-01 0.808491280 6.155098e-01 0.3844901600 0.7153637073 #>  [512,] 1.892875e-01 0.810712486 6.120940e-01 0.3879059786 0.7124205185 #>  [513,] 1.870861e-01 0.812913890 6.086672e-01 0.3913328496 0.7094592569 #>  [514,] 1.849045e-01 0.815095531 6.052295e-01 0.3947704693 0.7064800657 #>  [515,] 1.827425e-01 0.817257451 6.017815e-01 0.3982185300 0.7034830937 #>  [516,] 1.806003e-01 0.819399695 5.983233e-01 0.4016767195 0.7004684951 #>  [517,] 1.784777e-01 0.821522309 5.948553e-01 0.4051447220 0.6974364297 #>  [518,] 1.763747e-01 0.823625347 5.913778e-01 0.4086222178 0.6943870629 #>  [519,] 1.742911e-01 0.825708861 5.878911e-01 0.4121088834 0.6913205652 #>  [520,] 1.722271e-01 0.827772909 5.843956e-01 0.4156043917 0.6882371131 #>  [521,] 1.701824e-01 0.829817551 5.808916e-01 0.4191084122 0.6851368883 #>  [522,] 1.681571e-01 0.831842851 5.773794e-01 0.4226206109 0.6820200780 #>  [523,] 1.661511e-01 0.833848875 5.738593e-01 0.4261406505 0.6788868750 #>  [524,] 1.641643e-01 0.835835690 5.703318e-01 0.4296681908 0.6757374775 #>  [525,] 1.621966e-01 0.837803369 5.667971e-01 0.4332028883 0.6725720890 #>  [526,] 1.602480e-01 0.839751984 5.632556e-01 0.4367443968 0.6693909186 #>  [527,] 1.583184e-01 0.841681613 5.597076e-01 0.4402923673 0.6661941806 #>  [528,] 1.564077e-01 0.843592335 5.561536e-01 0.4438464480 0.6629820949 #>  [529,] 1.545158e-01 0.845484229 5.525937e-01 0.4474062850 0.6597548865 #>  [530,] 1.526426e-01 0.847357380 5.490285e-01 0.4509715218 0.6565127858 #>  [531,] 1.507881e-01 0.849211873 5.454582e-01 0.4545417996 0.6532560282 #>  [532,] 1.489522e-01 0.851047795 5.418832e-01 0.4581167579 0.6499848547 #>  [533,] 1.471348e-01 0.852865238 5.383040e-01 0.4616960338 0.6466995112 #>  [534,] 1.453357e-01 0.854664292 5.347207e-01 0.4652792630 0.6434002486 #>  [535,] 1.435549e-01 0.856445051 5.311339e-01 0.4688660795 0.6400873230 #>  [536,] 1.417924e-01 0.858207610 5.275439e-01 0.4724561157 0.6367609954 #>  [537,] 1.400479e-01 0.859952068 5.239510e-01 0.4760490028 0.6334215317 #>  [538,] 1.383215e-01 0.861678523 5.203556e-01 0.4796443707 0.6300692028 #>  [539,] 1.366129e-01 0.863387076 5.167582e-01 0.4832418484 0.6267042841 #>  [540,] 1.349222e-01 0.865077830 5.131589e-01 0.4868410640 0.6233270559 #>  [541,] 1.332491e-01 0.866750888 5.095584e-01 0.4904416447 0.6199378030 #>  [542,] 1.315936e-01 0.868406355 5.059568e-01 0.4940432174 0.6165368149 #>  [543,] 1.299557e-01 0.870044339 5.023546e-01 0.4976454084 0.6131243854 #>  [544,] 1.283351e-01 0.871664947 4.987522e-01 0.5012478439 0.6097008128 #>  [545,] 1.267317e-01 0.873268290 4.951499e-01 0.5048501498 0.6062663994 #>  [546,] 1.251455e-01 0.874854477 4.915480e-01 0.5084519522 0.6028214519 #>  [547,] 1.235764e-01 0.876423621 4.879471e-01 0.5120528775 0.5993662812 #>  [548,] 1.220242e-01 0.877975834 4.843474e-01 0.5156525521 0.5959012019 #>  [549,] 1.204888e-01 0.879511230 4.807494e-01 0.5192506033 0.5924265325 #>  [550,] 1.189701e-01 0.881029925 4.771533e-01 0.5228466590 0.5889425955 #>  [551,] 1.174680e-01 0.882532035 4.735597e-01 0.5264403477 0.5854497169 #>  [552,] 1.159823e-01 0.884017675 4.699687e-01 0.5300312990 0.5819482261 #>  [553,] 1.145130e-01 0.885486964 4.663809e-01 0.5336191439 0.5784384561 #>  [554,] 1.130600e-01 0.886940021 4.627965e-01 0.5372035142 0.5749207433 #>  [555,] 1.116230e-01 0.888376964 4.592160e-01 0.5407840436 0.5713954269 #>  [556,] 1.102021e-01 0.889797913 4.556396e-01 0.5443603670 0.5678628496 #>  [557,] 1.087970e-01 0.891202989 4.520679e-01 0.5479321212 0.5643233566 #>  [558,] 1.074077e-01 0.892592312 4.485011e-01 0.5514989450 0.5607772963 #>  [559,] 1.060340e-01 0.893966005 4.449395e-01 0.5550604790 0.5572250194 #>  [560,] 1.046758e-01 0.895324190 4.413836e-01 0.5586163660 0.5536668793 #>  [561,] 1.033330e-01 0.896666988 4.378337e-01 0.5621662512 0.5501032319 #>  [562,] 1.020055e-01 0.897994523 4.342902e-01 0.5657097822 0.5465344350 #>  [563,] 1.006931e-01 0.899306919 4.307534e-01 0.5692466092 0.5429608489 #>  [564,] 9.939570e-02 0.900604298 4.272236e-01 0.5727763851 0.5393828356 #>  [565,] 9.811321e-02 0.901886785 4.237012e-01 0.5762987655 0.5358007591 #>  [566,] 9.684550e-02 0.903154504 4.201866e-01 0.5798134091 0.5322149848 #>  [567,] 9.559242e-02 0.904407578 4.166800e-01 0.5833199779 0.5286258799 #>  [568,] 9.435387e-02 0.905646134 4.131819e-01 0.5868181367 0.5250338129 #>  [569,] 9.312971e-02 0.906870294 4.096924e-01 0.5903075540 0.5214391534 #>  [570,] 9.191982e-02 0.908080183 4.062121e-01 0.5937879015 0.5178422723 #>  [571,] 9.072407e-02 0.909275927 4.027411e-01 0.5972588548 0.5142435412 #>  [572,] 8.954235e-02 0.910457650 3.992799e-01 0.6007200929 0.5106433325 #>  [573,] 8.837452e-02 0.911625476 3.958287e-01 0.6041712987 0.5070420194 #>  [574,] 8.722047e-02 0.912779531 3.923878e-01 0.6076121591 0.5034399753 #>  [575,] 8.608006e-02 0.913919938 3.889576e-01 0.6110423650 0.4998375741 #>  [576,] 8.495318e-02 0.915046822 3.855384e-01 0.6144616112 0.4962351898 #>  [577,] 8.383969e-02 0.916160307 3.821304e-01 0.6178695969 0.4926331963 #>  [578,] 8.273948e-02 0.917260517 3.787340e-01 0.6212660257 0.4890319675 #>  [579,] 8.165242e-02 0.918347576 3.753494e-01 0.6246506054 0.4854318768 #>  [580,] 8.057839e-02 0.919421608 3.719770e-01 0.6280230484 0.4818332972 #>  [581,] 7.951726e-02 0.920482735 3.686169e-01 0.6313830717 0.4782366012 #>  [582,] 7.846892e-02 0.921531082 3.652696e-01 0.6347303967 0.4746421603 #>  [583,] 7.743323e-02 0.922566769 3.619353e-01 0.6380647499 0.4710503452 #>  [584,] 7.641008e-02 0.923589921 3.586141e-01 0.6413858624 0.4674615256 #>  [585,] 7.539934e-02 0.924600658 3.553065e-01 0.6446934701 0.4638760697 #>  [586,] 7.440090e-02 0.925599102 3.520127e-01 0.6479873139 0.4602943446 #>  [587,] 7.341463e-02 0.926585374 3.487329e-01 0.6512671399 0.4567167156 #>  [588,] 7.244040e-02 0.927559596 3.454673e-01 0.6545326989 0.4531435466 #>  [589,] 7.147811e-02 0.928521887 3.422163e-01 0.6577837470 0.4495751993 #>  [590,] 7.052763e-02 0.929472366 3.389800e-01 0.6610200456 0.4460120339 #>  [591,] 6.958885e-02 0.930411154 3.357586e-01 0.6642413610 0.4424544079 #>  [592,] 6.866163e-02 0.931338369 3.325525e-01 0.6674474649 0.4389026772 #>  [593,] 6.774587e-02 0.932254130 3.293619e-01 0.6706381345 0.4353571947 #>  [594,] 6.684145e-02 0.933158553 3.261868e-01 0.6738131519 0.4318183111 #>  [595,] 6.594824e-02 0.934051755 3.230277e-01 0.6769723049 0.4282863744 #>  [596,] 6.506615e-02 0.934933855 3.198846e-01 0.6801153867 0.4247617297 #>  [597,] 6.419503e-02 0.935804966 3.167578e-01 0.6832421956 0.4212447192 #>  [598,] 6.333479e-02 0.936665205 3.136475e-01 0.6863525357 0.4177356821 #>  [599,] 6.248531e-02 0.937514686 3.105538e-01 0.6894462164 0.4142349543 #>  [600,] 6.164648e-02 0.938353524 3.074769e-01 0.6925230526 0.4107428685 #>  [601,] 6.081817e-02 0.939181831 3.044171e-01 0.6955828647 0.4072597539 #>  [602,] 6.000028e-02 0.939999720 3.013745e-01 0.6986254785 0.4037859361 #>  [603,] 5.919270e-02 0.940807303 2.983493e-01 0.7016507254 0.4003217373 #>  [604,] 5.839531e-02 0.941604691 2.953416e-01 0.7046584424 0.3968674756 #>  [605,] 5.760800e-02 0.942391996 2.923515e-01 0.7076484717 0.3934234654 #>  [606,] 5.683067e-02 0.943169327 2.893793e-01 0.7106206614 0.3899900170 #>  [607,] 5.606321e-02 0.943936793 2.864251e-01 0.7135748647 0.3865674368 #>  [608,] 5.530550e-02 0.944694502 2.834891e-01 0.7165109405 0.3831560269 #>  [609,] 5.455744e-02 0.945442563 2.805712e-01 0.7194287532 0.3797560851 #>  [610,] 5.381892e-02 0.946181081 2.776718e-01 0.7223281725 0.3763679047 #>  [611,] 5.308984e-02 0.946910165 2.747909e-01 0.7252090737 0.3729917749 #>  [612,] 5.237008e-02 0.947629917 2.719287e-01 0.7280713374 0.3696279801 #>  [613,] 5.165956e-02 0.948340445 2.690852e-01 0.7309148496 0.3662768000 #>  [614,] 5.095815e-02 0.949041851 2.662605e-01 0.7337395016 0.3629385099 #>  [615,] 5.026576e-02 0.949734238 2.634548e-01 0.7365451901 0.3596133800 #>  [616,] 4.958229e-02 0.950417709 2.606682e-01 0.7393318171 0.3563016758 #>  [617,] 4.890763e-02 0.951092365 2.579007e-01 0.7420992899 0.3530036579 #>  [618,] 4.824169e-02 0.951758308 2.551525e-01 0.7448475208 0.3497195819 #>  [619,] 4.758436e-02 0.952415636 2.524236e-01 0.7475764277 0.3464496984 #>  [620,] 4.693555e-02 0.953064449 2.497141e-01 0.7502859331 0.3431942527 #>  [621,] 4.629515e-02 0.953704846 2.470240e-01 0.7529759651 0.3399534853 #>  [622,] 4.566308e-02 0.954336924 2.443535e-01 0.7556464564 0.3367276312 #>  [623,] 4.503922e-02 0.954960780 2.417027e-01 0.7582973451 0.3335169203 #>  [624,] 4.442349e-02 0.955576509 2.390714e-01 0.7609285740 0.3303215773 #>  [625,] 4.381579e-02 0.956184206 2.364599e-01 0.7635400909 0.3271418213 #>  [626,] 4.321603e-02 0.956783967 2.338682e-01 0.7661318483 0.3239778663 #>  [627,] 4.262412e-02 0.957375884 2.312962e-01 0.7687038037 0.3208299208 #>  [628,] 4.203995e-02 0.957960050 2.287441e-01 0.7712559191 0.3176981879 #>  [629,] 4.146344e-02 0.958536556 2.262118e-01 0.7737881614 0.3145828655 #>  [630,] 4.089451e-02 0.959105494 2.236995e-01 0.7763005020 0.3114841455 #>  [631,] 4.033305e-02 0.959666954 2.212071e-01 0.7787929168 0.3084022149 #>  [632,] 3.977897e-02 0.960221025 2.187346e-01 0.7812653862 0.3053372549 #>  [633,] 3.923220e-02 0.960767796 2.162821e-01 0.7837178951 0.3022894413 #>  [634,] 3.869265e-02 0.961307354 2.138496e-01 0.7861504327 0.2992589443 #>  [635,] 3.816021e-02 0.961839787 2.114370e-01 0.7885629925 0.2962459287 #>  [636,] 3.763482e-02 0.962365179 2.090444e-01 0.7909555722 0.2932505538 #>  [637,] 3.711638e-02 0.962883618 2.066718e-01 0.7933281736 0.2902729734 #>  [638,] 3.660481e-02 0.963395186 2.043192e-01 0.7956808028 0.2873133357 #>  [639,] 3.610003e-02 0.963899967 2.019865e-01 0.7980134696 0.2843717835 #>  [640,] 3.560195e-02 0.964398045 1.996738e-01 0.8003261880 0.2814484542 #>  [641,] 3.511050e-02 0.964889501 1.973810e-01 0.8026189757 0.2785434795 #>  [642,] 3.462558e-02 0.965374417 1.951081e-01 0.8048918544 0.2756569860 #>  [643,] 3.414713e-02 0.965852872 1.928552e-01 0.8071448492 0.2727890946 #>  [644,] 3.367505e-02 0.966324947 1.906220e-01 0.8093779892 0.2699399209 #>  [645,] 3.320928e-02 0.966790720 1.884087e-01 0.8115913068 0.2671095752 #>  [646,] 3.274973e-02 0.967250268 1.862152e-01 0.8137848382 0.2642981625 #>  [647,] 3.229633e-02 0.967703670 1.840414e-01 0.8159586227 0.2615057822 #>  [648,] 3.184900e-02 0.968151002 1.818873e-01 0.8181127032 0.2587325288 #>  [649,] 3.140766e-02 0.968592339 1.797529e-01 0.8202471258 0.2559784914 #>  [650,] 3.097224e-02 0.969027755 1.776381e-01 0.8223619397 0.2532437538 #>  [651,] 3.054267e-02 0.969457326 1.755428e-01 0.8244571974 0.2505283949 #>  [652,] 3.011888e-02 0.969881124 1.734670e-01 0.8265329545 0.2478324883 #>  [653,] 2.970078e-02 0.970299222 1.714107e-01 0.8285892693 0.2451561026 #>  [654,] 2.928831e-02 0.970711691 1.693738e-01 0.8306262032 0.2424993013 #>  [655,] 2.888140e-02 0.971118602 1.673562e-01 0.8326438206 0.2398621432 #>  [656,] 2.847997e-02 0.971520026 1.653578e-01 0.8346421883 0.2372446819 #>  [657,] 2.808397e-02 0.971916032 1.633786e-01 0.8366213760 0.2346469663 #>  [658,] 2.769331e-02 0.972306689 1.614185e-01 0.8385814560 0.2320690403 #>  [659,] 2.730794e-02 0.972692064 1.594775e-01 0.8405225032 0.2295109434 #>  [660,] 2.692778e-02 0.973072225 1.575554e-01 0.8424445948 0.2269727101 #>  [661,] 2.655276e-02 0.973447237 1.556522e-01 0.8443478104 0.2244543704 #>  [662,] 2.618283e-02 0.973817168 1.537678e-01 0.8462322322 0.2219559497 #>  [663,] 2.581792e-02 0.974182082 1.519021e-01 0.8480979444 0.2194774689 #>  [664,] 2.545796e-02 0.974542043 1.500550e-01 0.8499450333 0.2170189446 #>  [665,] 2.510289e-02 0.974897114 1.482264e-01 0.8517735876 0.2145803887 #>  [666,] 2.475264e-02 0.975247359 1.464163e-01 0.8535836978 0.2121618092 #>  [667,] 2.440716e-02 0.975592839 1.446245e-01 0.8553754566 0.2097632095 #>  [668,] 2.406638e-02 0.975933617 1.428510e-01 0.8571489583 0.2073845891 #>  [669,] 2.373025e-02 0.976269752 1.410957e-01 0.8589042994 0.2050259431 #>  [670,] 2.339870e-02 0.976601305 1.393584e-01 0.8606415778 0.2026872629 #>  [671,] 2.307167e-02 0.976928335 1.376391e-01 0.8623608933 0.2003685358 #>  [672,] 2.274910e-02 0.977250901 1.359377e-01 0.8640623474 0.1980697450 #>  [673,] 2.243094e-02 0.977569060 1.342540e-01 0.8657460431 0.1957908703 #>  [674,] 2.211713e-02 0.977882871 1.325879e-01 0.8674120849 0.1935318873 #>  [675,] 2.180761e-02 0.978192389 1.309394e-01 0.8690605786 0.1912927683 #>  [676,] 2.150233e-02 0.978497671 1.293084e-01 0.8706916317 0.1890734818 #>  [677,] 2.120123e-02 0.978798772 1.276946e-01 0.8723053529 0.1868739929 #>  [678,] 2.090425e-02 0.979095747 1.260981e-01 0.8739018519 0.1846942630 #>  [679,] 2.061135e-02 0.979388649 1.245188e-01 0.8754812400 0.1825342504 #>  [680,] 2.032247e-02 0.979677533 1.229564e-01 0.8770436295 0.1803939099 #>  [681,] 2.003755e-02 0.979962451 1.214109e-01 0.8785891337 0.1782731933 #>  [682,] 1.975655e-02 0.980243454 1.198821e-01 0.8801178669 0.1761720490 #>  [683,] 1.947940e-02 0.980520595 1.183701e-01 0.8816299446 0.1740904224 #>  [684,] 1.920608e-02 0.980793925 1.168745e-01 0.8831254831 0.1720282560 #>  [685,] 1.893651e-02 0.981063493 1.153954e-01 0.8846045994 0.1699854892 #>  [686,] 1.867065e-02 0.981329350 1.139326e-01 0.8860674117 0.1679620586 #>  [687,] 1.840846e-02 0.981591545 1.124860e-01 0.8875140385 0.1659578982 #>  [688,] 1.814987e-02 0.981850125 1.110554e-01 0.8889445993 0.1639729391 #>  [689,] 1.789486e-02 0.982105140 1.096408e-01 0.8903592143 0.1620071096 #>  [690,] 1.764336e-02 0.982356636 1.082420e-01 0.8917580042 0.1600603359 #>  [691,] 1.739534e-02 0.982604660 1.068589e-01 0.8931410901 0.1581325413 #>  [692,] 1.715074e-02 0.982849258 1.054914e-01 0.8945085940 0.1562236468 #>  [693,] 1.690952e-02 0.983090476 1.041394e-01 0.8958606381 0.1543335712 #>  [694,] 1.667164e-02 0.983328359 1.028027e-01 0.8971973451 0.1524622309 #>  [695,] 1.643705e-02 0.983562951 1.014812e-01 0.8985188380 0.1506095400 #>  [696,] 1.620570e-02 0.983794297 1.001748e-01 0.8998252402 0.1487754106 #>  [697,] 1.597756e-02 0.984022439 9.888332e-02 0.9011166755 0.1469597528 #>  [698,] 1.575258e-02 0.984247421 9.760673e-02 0.9023932678 0.1451624746 #>  [699,] 1.553071e-02 0.984469286 9.634486e-02 0.9036551413 0.1433834821 #>  [700,] 1.531193e-02 0.984688074 9.509758e-02 0.9049024203 0.1416226795 #>  [701,] 1.509617e-02 0.984903827 9.386477e-02 0.9061352293 0.1398799693 #>  [702,] 1.488341e-02 0.985116586 9.264631e-02 0.9073536929 0.1381552521 #>  [703,] 1.467361e-02 0.985326391 9.144206e-02 0.9085579357 0.1364484271 #>  [704,] 1.446672e-02 0.985533282 9.025192e-02 0.9097480823 0.1347593917 #>  [705,] 1.426270e-02 0.985737298 8.907574e-02 0.9109242576 0.1330880419 #>  [706,] 1.406152e-02 0.985938478 8.791341e-02 0.9120865859 0.1314342722 #>  [707,] 1.386314e-02 0.986136860 8.676481e-02 0.9132351920 0.1297979756 #>  [708,] 1.366752e-02 0.986332482 8.562980e-02 0.9143702002 0.1281790438 #>  [709,] 1.347462e-02 0.986525382 8.450827e-02 0.9154917347 0.1265773674 #>  [710,] 1.328440e-02 0.986715596 8.340008e-02 0.9165999199 0.1249928355 #>  [711,] 1.309684e-02 0.986903160 8.230512e-02 0.9176948795 0.1234253362 #>  [712,] 1.291189e-02 0.987088110 8.122326e-02 0.9187767372 0.1218747565 #>  [713,] 1.272952e-02 0.987270483 8.015438e-02 0.9198456166 0.1203409823 #>  [714,] 1.254969e-02 0.987450312 7.909836e-02 0.9209016407 0.1188238985 #>  [715,] 1.237237e-02 0.987627633 7.805507e-02 0.9219449325 0.1173233890 #>  [716,] 1.219752e-02 0.987802479 7.702439e-02 0.9229756144 0.1158393371 #>  [717,] 1.202512e-02 0.987974884 7.600619e-02 0.9239938086 0.1143716249 #>  [718,] 1.185512e-02 0.988144882 7.500036e-02 0.9249996369 0.1129201339 #>  [719,] 1.168749e-02 0.988312505 7.400678e-02 0.9259932206 0.1114847450 #>  [720,] 1.152221e-02 0.988477786 7.302532e-02 0.9269746808 0.1100653382 #>  [721,] 1.135924e-02 0.988640756 7.205586e-02 0.9279441380 0.1086617930 #>  [722,] 1.119855e-02 0.988801447 7.109829e-02 0.9289017121 0.1072739882 #>  [723,] 1.104011e-02 0.988959890 7.015248e-02 0.9298475227 0.1059018023 #>  [724,] 1.088388e-02 0.989116116 6.921831e-02 0.9307816889 0.1045451131 #>  [725,] 1.072984e-02 0.989270156 6.829567e-02 0.9317043293 0.1032037980 #>  [726,] 1.057796e-02 0.989422039 6.738444e-02 0.9326155616 0.1018777340 #>  [727,] 1.042821e-02 0.989571794 6.648450e-02 0.9335155035 0.1005667980 #>  [728,] 1.028055e-02 0.989719451 6.559573e-02 0.9344042717 0.0992708662 #>  [729,] 1.013496e-02 0.989865039 6.471802e-02 0.9352819825 0.0979898147 #>  [730,] 9.991414e-03 0.990008586 6.385125e-02 0.9361487516 0.0967235196 #>  [731,] 9.849879e-03 0.990150121 6.299531e-02 0.9370046938 0.0954718563 #>  [732,] 9.710330e-03 0.990289670 6.215008e-02 0.9378499238 0.0942347006 #>  [733,] 9.572739e-03 0.990427261 6.131544e-02 0.9386845550 0.0930119279 #>  [734,] 9.437080e-03 0.990562920 6.049130e-02 0.9395087007 0.0918034135 #>  [735,] 9.303324e-03 0.990696676 5.967753e-02 0.9403224733 0.0906090328 #>  [736,] 9.171447e-03 0.990828553 5.887402e-02 0.9411259844 0.0894286611 #>  [737,] 9.041422e-03 0.990958578 5.808065e-02 0.9419193452 0.0882621738 #>  [738,] 8.913224e-03 0.991086776 5.729733e-02 0.9427026658 0.0871094463 #>  [739,] 8.786827e-03 0.991213173 5.652394e-02 0.9434760559 0.0859703542 #>  [740,] 8.662207e-03 0.991337793 5.576038e-02 0.9442396244 0.0848447731 #>  [741,] 8.539340e-03 0.991460660 5.500652e-02 0.9449934794 0.0837325788 #>  [742,] 8.418200e-03 0.991581800 5.426227e-02 0.9457377283 0.0826336474 #>  [743,] 8.298765e-03 0.991701235 5.352752e-02 0.9464724777 0.0815478550 #>  [744,] 8.181010e-03 0.991818990 5.280217e-02 0.9471978336 0.0804750783 #>  [745,] 8.064912e-03 0.991935088 5.208610e-02 0.9479139011 0.0794151938 #>  [746,] 7.950449e-03 0.992049551 5.137922e-02 0.9486207845 0.0783680787 #>  [747,] 7.837597e-03 0.992162403 5.068141e-02 0.9493185874 0.0773336103 #>  [748,] 7.726335e-03 0.992273665 4.999259e-02 0.9500074126 0.0763116664 #>  [749,] 7.616640e-03 0.992383360 4.931264e-02 0.9506873621 0.0753021250 #>  [750,] 7.508491e-03 0.992491509 4.864146e-02 0.9513585371 0.0743048647 #>  [751,] 7.401866e-03 0.992598134 4.797896e-02 0.9520210380 0.0733197644 #>  [752,] 7.296744e-03 0.992703256 4.732504e-02 0.9526749645 0.0723467034 #>  [753,] 7.193104e-03 0.992806896 4.667958e-02 0.9533204153 0.0713855615 #>  [754,] 7.090925e-03 0.992909075 4.604251e-02 0.9539574885 0.0704362191 #>  [755,] 6.990188e-03 0.993009812 4.541372e-02 0.9545862812 0.0694985569 #>  [756,] 6.890872e-03 0.993109128 4.479311e-02 0.9552068899 0.0685724563 #>  [757,] 6.792958e-03 0.993207042 4.418059e-02 0.9558194100 0.0676577991 #>  [758,] 6.696425e-03 0.993303575 4.357606e-02 0.9564239364 0.0667544677 #>  [759,] 6.601255e-03 0.993398745 4.297944e-02 0.9570205630 0.0658623451 #>  [760,] 6.507429e-03 0.993492571 4.239062e-02 0.9576093828 0.0649813149 #>  [761,] 6.414927e-03 0.993585073 4.180951e-02 0.9581904882 0.0641112613 #>  [762,] 6.323733e-03 0.993676267 4.123603e-02 0.9587639706 0.0632520690 #>  [763,] 6.233826e-03 0.993766174 4.067008e-02 0.9593299208 0.0624036234 #>  [764,] 6.145190e-03 0.993854810 4.011157e-02 0.9598884284 0.0615658107 #>  [765,] 6.057806e-03 0.993942194 3.956042e-02 0.9604395825 0.0607385175 #>  [766,] 5.971658e-03 0.994028342 3.901653e-02 0.9609834712 0.0599216313 #>  [767,] 5.886727e-03 0.994113273 3.847982e-02 0.9615201821 0.0591150402 #>  [768,] 5.802998e-03 0.994197002 3.795020e-02 0.9620498015 0.0583186328 #>  [769,] 5.720452e-03 0.994279548 3.742758e-02 0.9625724151 0.0575322986 #>  [770,] 5.639074e-03 0.994360926 3.691189e-02 0.9630881080 0.0567559280 #>  [771,] 5.558847e-03 0.994441153 3.640304e-02 0.9635969642 0.0559894116 #>  [772,] 5.479755e-03 0.994520245 3.590093e-02 0.9640990669 0.0552326413 #>  [773,] 5.401782e-03 0.994598218 3.540550e-02 0.9645944987 0.0544855093 #>  [774,] 5.324913e-03 0.994675087 3.491666e-02 0.9650833411 0.0537479089 #>  [775,] 5.249132e-03 0.994750868 3.443432e-02 0.9655656750 0.0530197338 #>  [776,] 5.174424e-03 0.994825576 3.395842e-02 0.9660415805 0.0523008787 #>  [777,] 5.100774e-03 0.994899226 3.348886e-02 0.9665111368 0.0515912391 #>  [778,] 5.028167e-03 0.994971833 3.302558e-02 0.9669744223 0.0508907111 #>  [779,] 4.956588e-03 0.995043412 3.256849e-02 0.9674315147 0.0501991917 #>  [780,] 4.886023e-03 0.995113977 3.211751e-02 0.9678824907 0.0495165786 #>  [781,] 4.816458e-03 0.995183542 3.167257e-02 0.9683274266 0.0488427705 #>  [782,] 4.747878e-03 0.995252122 3.123360e-02 0.9687663975 0.0481776666 #>  [783,] 4.680271e-03 0.995319729 3.080052e-02 0.9691994779 0.0475211671 #>  [784,] 4.613621e-03 0.995386379 3.037326e-02 0.9696267416 0.0468731729 #>  [785,] 4.547917e-03 0.995452083 2.995174e-02 0.9700482615 0.0462335858 #>  [786,] 4.483144e-03 0.995516856 2.953589e-02 0.9704641097 0.0456023083 #>  [787,] 4.419289e-03 0.995580711 2.912564e-02 0.9708743576 0.0449792439 #>  [788,] 4.356340e-03 0.995643660 2.872092e-02 0.9712790759 0.0443642967 #>  [789,] 4.294284e-03 0.995705716 2.832167e-02 0.9716783345 0.0437573717 #>  [790,] 4.233107e-03 0.995766893 2.792780e-02 0.9720722025 0.0431583748 #>  [791,] 4.172799e-03 0.995827201 2.753925e-02 0.9724607481 0.0425672125 #>  [792,] 4.113347e-03 0.995886653 2.715596e-02 0.9728440392 0.0419837924 #>  [793,] 4.054738e-03 0.995945262 2.677786e-02 0.9732221425 0.0414080228 #>  [794,] 3.996960e-03 0.996003040 2.640488e-02 0.9735951242 0.0408398127 #>  [795,] 3.940003e-03 0.996059997 2.603695e-02 0.9739630497 0.0402790720 #>  [796,] 3.883854e-03 0.996116146 2.567402e-02 0.9743259838 0.0397257116 #>  [797,] 3.828503e-03 0.996171497 2.531601e-02 0.9746839903 0.0391796430 #>  [798,] 3.773937e-03 0.996226063 2.496287e-02 0.9750371326 0.0386407787 #>  [799,] 3.720146e-03 0.996279854 2.461453e-02 0.9753854732 0.0381090317 #>  [800,] 3.667119e-03 0.996332881 2.427093e-02 0.9757290739 0.0375843161 #>  [801,] 3.614845e-03 0.996385155 2.393200e-02 0.9760679959 0.0370665469 #>  [802,] 3.563314e-03 0.996436686 2.359770e-02 0.9764022996 0.0365556396 #>  [803,] 3.512514e-03 0.996487486 2.326796e-02 0.9767320447 0.0360515108 #>  [804,] 3.462436e-03 0.996537564 2.294271e-02 0.9770572904 0.0355540777 #>  [805,] 3.413070e-03 0.996586930 2.262190e-02 0.9773780951 0.0350632585 #>  [806,] 3.364405e-03 0.996635595 2.230548e-02 0.9776945163 0.0345789720 #>  [807,] 3.316432e-03 0.996683568 2.199339e-02 0.9780066113 0.0341011380 #>  [808,] 3.269141e-03 0.996730859 2.168556e-02 0.9783144363 0.0336296770 #>  [809,] 3.222521e-03 0.996777479 2.138195e-02 0.9786180471 0.0331645103 #>  [810,] 3.176565e-03 0.996823435 2.108250e-02 0.9789174988 0.0327055601 #>  [811,] 3.131262e-03 0.996868738 2.078715e-02 0.9792128458 0.0322527492 #>  [812,] 3.086603e-03 0.996913397 2.049586e-02 0.9795041419 0.0318060014 #>  [813,] 3.042578e-03 0.996957422 2.020856e-02 0.9797914402 0.0313652411 #>  [814,] 2.999180e-03 0.997000820 1.992521e-02 0.9800747933 0.0309303937 #>  [815,] 2.956399e-03 0.997043601 1.964575e-02 0.9803542530 0.0305013851 #>  [816,] 2.914227e-03 0.997085773 1.937013e-02 0.9806298706 0.0300781423 #>  [817,] 2.872654e-03 0.997127346 1.909830e-02 0.9809016968 0.0296605927 #>  [818,] 2.831673e-03 0.997168327 1.883022e-02 0.9811697816 0.0292486649 #>  [819,] 2.791275e-03 0.997208725 1.856583e-02 0.9814341746 0.0288422879 #>  [820,] 2.751451e-03 0.997248549 1.830508e-02 0.9816949245 0.0284413916 #>  [821,] 2.712194e-03 0.997287806 1.804792e-02 0.9819520796 0.0280459067 #>  [822,] 2.673496e-03 0.997326504 1.779431e-02 0.9822056875 0.0276557646 #>  [823,] 2.635349e-03 0.997364651 1.754420e-02 0.9824557955 0.0272708974 #>  [824,] 2.597744e-03 0.997402256 1.729755e-02 0.9827024500 0.0268912380 #>  [825,] 2.560675e-03 0.997439325 1.705430e-02 0.9829456970 0.0265167201 #>  [826,] 2.524133e-03 0.997475867 1.681442e-02 0.9831855818 0.0261472780 #>  [827,] 2.488111e-03 0.997511889 1.657785e-02 0.9834221494 0.0257828468 #>  [828,] 2.452602e-03 0.997547398 1.634456e-02 0.9836554439 0.0254233623 #>  [829,] 2.417599e-03 0.997582401 1.611449e-02 0.9838855091 0.0250687610 #>  [830,] 2.383094e-03 0.997616906 1.588761e-02 0.9841123883 0.0247189802 #>  [831,] 2.349080e-03 0.997650920 1.566388e-02 0.9843361240 0.0243739578 #>  [832,] 2.315551e-03 0.997684449 1.544324e-02 0.9845567585 0.0240336325 #>  [833,] 2.282499e-03 0.997717501 1.522567e-02 0.9847743332 0.0236979437 #>  [834,] 2.249918e-03 0.997750082 1.501111e-02 0.9849888894 0.0233668313 #>  [835,] 2.217801e-03 0.997782199 1.479953e-02 0.9852004675 0.0230402361 #>  [836,] 2.186141e-03 0.997813859 1.459089e-02 0.9854091076 0.0227180994 #>  [837,] 2.154933e-03 0.997845067 1.438515e-02 0.9856148494 0.0224003635 #>  [838,] 2.124169e-03 0.997875831 1.418227e-02 0.9858177318 0.0220869710 #>  [839,] 2.093843e-03 0.997906157 1.398221e-02 0.9860177934 0.0217778653 #>  [840,] 2.063949e-03 0.997936051 1.378493e-02 0.9862150723 0.0214729906 #>  [841,] 2.034481e-03 0.997965519 1.359039e-02 0.9864096061 0.0211722915 #>  [842,] 2.005433e-03 0.997994567 1.339857e-02 0.9866014319 0.0208757134 #>  [843,] 1.976799e-03 0.998023201 1.320941e-02 0.9867905864 0.0205832025 #>  [844,] 1.948574e-03 0.998051426 1.302289e-02 0.9869771058 0.0202947052 #>  [845,] 1.920750e-03 0.998079250 1.283897e-02 0.9871610258 0.0200101689 #>  [846,] 1.893323e-03 0.998106677 1.265762e-02 0.9873423815 0.0197295416 #>  [847,] 1.866286e-03 0.998133714 1.247879e-02 0.9875212080 0.0194527717 #>  [848,] 1.839635e-03 0.998160365 1.230246e-02 0.9876975395 0.0191798084 #>  [849,] 1.813364e-03 0.998186636 1.212859e-02 0.9878714099 0.0189106015 #>  [850,] 1.787468e-03 0.998212532 1.195715e-02 0.9880428528 0.0186451014 #>  [851,] 1.761941e-03 0.998238059 1.178810e-02 0.9882119011 0.0183832590 #>  [852,] 1.736777e-03 0.998263223 1.162141e-02 0.9883785876 0.0181250258 #>  [853,] 1.711972e-03 0.998288028 1.145706e-02 0.9885429445 0.0178703541 #>  [854,] 1.687521e-03 0.998312479 1.129500e-02 0.9887050034 0.0176191964 #>  [855,] 1.663419e-03 0.998336581 1.113520e-02 0.9888647959 0.0173715063 #>  [856,] 1.639660e-03 0.998360340 1.097765e-02 0.9890223529 0.0171272374 #>  [857,] 1.616241e-03 0.998383759 1.082230e-02 0.9891777049 0.0168863443 #>  [858,] 1.593155e-03 0.998406845 1.066912e-02 0.9893308821 0.0166487820 #>  [859,] 1.570398e-03 0.998429602 1.051809e-02 0.9894819144 0.0164145059 #>  [860,] 1.547966e-03 0.998452034 1.036917e-02 0.9896308310 0.0161834723 #>  [861,] 1.525854e-03 0.998474146 1.022234e-02 0.9897776611 0.0159556377 #>  [862,] 1.504057e-03 0.998495943 1.007757e-02 0.9899224331 0.0157309593 #>  [863,] 1.482571e-03 0.998517429 9.934825e-03 0.9900651755 0.0155093948 #>  [864,] 1.461392e-03 0.998538608 9.794084e-03 0.9902059159 0.0152909025 #>  [865,] 1.440514e-03 0.998559486 9.655318e-03 0.9903446821 0.0150754411 #>  [866,] 1.419935e-03 0.998580065 9.518499e-03 0.9904815010 0.0148629700 #>  [867,] 1.399649e-03 0.998600351 9.383600e-03 0.9906163996 0.0146534488 #>  [868,] 1.379653e-03 0.998620347 9.250596e-03 0.9907494042 0.0144468379 #>  [869,] 1.359941e-03 0.998640059 9.119459e-03 0.9908805409 0.0142430981 #>  [870,] 1.340512e-03 0.998659488 8.990165e-03 0.9910098355 0.0140421906 #>  [871,] 1.321359e-03 0.998678641 8.862687e-03 0.9911373134 0.0138440772 #>  [872,] 1.302479e-03 0.998697521 8.737000e-03 0.9912629996 0.0136487203 #>  [873,] 1.283869e-03 0.998716131 8.613081e-03 0.9913869188 0.0134560824 #>  [874,] 1.265525e-03 0.998734475 8.490904e-03 0.9915090956 0.0132661268 #>  [875,] 1.247442e-03 0.998752558 8.370446e-03 0.9916295539 0.0130788173 #>  [876,] 1.229618e-03 0.998770382 8.251683e-03 0.9917483175 0.0128941179 #>  [877,] 1.212048e-03 0.998787952 8.134590e-03 0.9918654099 0.0127119932 #>  [878,] 1.194728e-03 0.998805272 8.019146e-03 0.9919808541 0.0125324083 #>  [879,] 1.177656e-03 0.998822344 7.905327e-03 0.9920946730 0.0123553287 #>  [880,] 1.160827e-03 0.998839173 7.793111e-03 0.9922068892 0.0121807203 #>  [881,] 1.144239e-03 0.998855761 7.682475e-03 0.9923175248 0.0120085495 #>  [882,] 1.127887e-03 0.998872113 7.573398e-03 0.9924266017 0.0118387831 #>  [883,] 1.111769e-03 0.998888231 7.465858e-03 0.9925341416 0.0116713884 #>  [884,] 1.095881e-03 0.998904119 7.359834e-03 0.9926401658 0.0115063330 #>  [885,] 1.080220e-03 0.998919780 7.255305e-03 0.9927446953 0.0113435850 #>  [886,] 1.064782e-03 0.998935218 7.152249e-03 0.9928477509 0.0111831129 #>  [887,] 1.049565e-03 0.998950435 7.050647e-03 0.9929493531 0.0110248856 #>  [888,] 1.034565e-03 0.998965435 6.950478e-03 0.9930495220 0.0108688724 #>  [889,] 1.019779e-03 0.998980221 6.851722e-03 0.9931482777 0.0107150431 #>  [890,] 1.005204e-03 0.998994796 6.754360e-03 0.9932456398 0.0105633677 #>  [891,] 9.908373e-04 0.999009163 6.658372e-03 0.9933416276 0.0104138166 #>  [892,] 9.766758e-04 0.999023324 6.563740e-03 0.9934362603 0.0102663609 #>  [893,] 9.627164e-04 0.999037284 6.470443e-03 0.9935295569 0.0101209718 #>  [894,] 9.489564e-04 0.999051044 6.378464e-03 0.9936215358 0.0099776209 #>  [895,] 9.353928e-04 0.999064607 6.287785e-03 0.9937122155 0.0098362801 #>  [896,] 9.220230e-04 0.999077977 6.198386e-03 0.9938016141 0.0096969220 #>  [897,] 9.088440e-04 0.999091156 6.110251e-03 0.9938897494 0.0095595192 #>  [898,] 8.958533e-04 0.999104147 6.023361e-03 0.9939766392 0.0094240448 #>  [899,] 8.830481e-04 0.999116952 5.937699e-03 0.9940623007 0.0092904723 #>  [900,] 8.704258e-04 0.999129574 5.853249e-03 0.9941467512 0.0091587756 #>  [901,] 8.579837e-04 0.999142016 5.769993e-03 0.9942300075 0.0090289286 #>  [902,] 8.457194e-04 0.999154281 5.687914e-03 0.9943120863 0.0089009060 #>  [903,] 8.336302e-04 0.999166370 5.606996e-03 0.9943930042 0.0087746826 #>  [904,] 8.217136e-04 0.999178286 5.527223e-03 0.9944727773 0.0086502335 #>  [905,] 8.099673e-04 0.999190033 5.448578e-03 0.9945514216 0.0085275343 #>  [906,] 7.983888e-04 0.999201611 5.371047e-03 0.9946289530 0.0084065608 #>  [907,] 7.869756e-04 0.999213024 5.294613e-03 0.9947053871 0.0082872890 #>  [908,] 7.757255e-04 0.999224275 5.219261e-03 0.9947807391 0.0081696956 #>  [909,] 7.646361e-04 0.999235364 5.144976e-03 0.9948550242 0.0080537572 #>  [910,] 7.537050e-04 0.999246295 5.071742e-03 0.9949282575 0.0079394509 #>  [911,] 7.429302e-04 0.999257070 4.999546e-03 0.9950004536 0.0078267542 #>  [912,] 7.323092e-04 0.999267691 4.928373e-03 0.9950716271 0.0077156447 #>  [913,] 7.218400e-04 0.999278160 4.858208e-03 0.9951417923 0.0076061004 #>  [914,] 7.115204e-04 0.999288480 4.789037e-03 0.9952109634 0.0074980997 #>  [915,] 7.013481e-04 0.999298652 4.720846e-03 0.9952791543 0.0073916211 #>  [916,] 6.913212e-04 0.999308679 4.653621e-03 0.9953463788 0.0072866434 #>  [917,] 6.814376e-04 0.999318562 4.587350e-03 0.9954126504 0.0071831459 #>  [918,] 6.716951e-04 0.999328305 4.522018e-03 0.9954779825 0.0070811079 #>  [919,] 6.620919e-04 0.999337908 4.457612e-03 0.9955423883 0.0069805092 #>  [920,] 6.526259e-04 0.999347374 4.394119e-03 0.9956058809 0.0068813298 #>  [921,] 6.432951e-04 0.999356705 4.331527e-03 0.9956684731 0.0067835499 #>  [922,] 6.340976e-04 0.999365902 4.269823e-03 0.9957301775 0.0066871500 #>  [923,] 6.250316e-04 0.999374968 4.208993e-03 0.9957910066 0.0065921110 #>  [924,] 6.160951e-04 0.999383905 4.149027e-03 0.9958509727 0.0064984139 #>  [925,] 6.072863e-04 0.999392714 4.089912e-03 0.9959100880 0.0064060399 #>  [926,] 5.986033e-04 0.999401397 4.031636e-03 0.9959683644 0.0063149707 #>  [927,] 5.900445e-04 0.999409956 3.974186e-03 0.9960258137 0.0062251880 #>  [928,] 5.816079e-04 0.999418392 3.917552e-03 0.9960824477 0.0061366739 #>  [929,] 5.732919e-04 0.999426708 3.861722e-03 0.9961382777 0.0060494107 #>  [930,] 5.650947e-04 0.999434905 3.806685e-03 0.9961933151 0.0059633809 #>  [931,] 5.570147e-04 0.999442985 3.752429e-03 0.9962475711 0.0058785673 #>  [932,] 5.490502e-04 0.999450950 3.698943e-03 0.9963010566 0.0057949530 #>  [933,] 5.411994e-04 0.999458801 3.646217e-03 0.9963537826 0.0057125211 #>  [934,] 5.334609e-04 0.999466539 3.594240e-03 0.9964057597 0.0056312552 #>  [935,] 5.258329e-04 0.999474167 3.543002e-03 0.9964569985 0.0055511388 #>  [936,] 5.183140e-04 0.999481686 3.492491e-03 0.9965075094 0.0054721561 #>  [937,] 5.109025e-04 0.999489097 3.442697e-03 0.9965573027 0.0053942910 #>  [938,] 5.035970e-04 0.999496403 3.393612e-03 0.9966063885 0.0053175279 #>  [939,] 4.963959e-04 0.999503604 3.345223e-03 0.9966547768 0.0052418515 #>  [940,] 4.892977e-04 0.999510702 3.297523e-03 0.9967024774 0.0051672465 #>  [941,] 4.823009e-04 0.999517699 3.250500e-03 0.9967495000 0.0050936979 #>  [942,] 4.754041e-04 0.999524596 3.204146e-03 0.9967958543 0.0050211908 #>  [943,] 4.686060e-04 0.999531394 3.158450e-03 0.9968415496 0.0049497107 #>  [944,] 4.619049e-04 0.999538095 3.113405e-03 0.9968865953 0.0048792432 #>  [945,] 4.552997e-04 0.999544700 3.068999e-03 0.9969310005 0.0048097741 #>  [946,] 4.487889e-04 0.999551211 3.025226e-03 0.9969747743 0.0047412893 #>  [947,] 4.423711e-04 0.999557629 2.982074e-03 0.9970179256 0.0046737751 #>  [948,] 4.360451e-04 0.999563955 2.939537e-03 0.9970604633 0.0046072178 #>  [949,] 4.298095e-04 0.999570190 2.897604e-03 0.9971023959 0.0045416040 #>  [950,] 4.236631e-04 0.999576337 2.856268e-03 0.9971437320 0.0044769204 #>  [951,] 4.176045e-04 0.999582396 2.815520e-03 0.9971844802 0.0044131540 #>  [952,] 4.116325e-04 0.999588368 2.775351e-03 0.9972246486 0.0043502919 #>  [953,] 4.057458e-04 0.999594254 2.735754e-03 0.9972642455 0.0042883214 #>  [954,] 3.999433e-04 0.999600057 2.696721e-03 0.9973032791 0.0042272299 #>  [955,] 3.942238e-04 0.999605776 2.658243e-03 0.9973417571 0.0041670050 #>  [956,] 3.885860e-04 0.999611414 2.620312e-03 0.9973796876 0.0041076347 #>  [957,] 3.830289e-04 0.999616971 2.582922e-03 0.9974170783 0.0040491067 #>  [958,] 3.775511e-04 0.999622449 2.546063e-03 0.9974539368 0.0039914094 #>  [959,] 3.721517e-04 0.999627848 2.509729e-03 0.9974902706 0.0039345310 #>  [960,] 3.668295e-04 0.999633171 2.473913e-03 0.9975260872 0.0038784600 #>  [961,] 3.615833e-04 0.999638417 2.438606e-03 0.9975613939 0.0038231849 #>  [962,] 3.564122e-04 0.999643588 2.403802e-03 0.9975961980 0.0037686947 #>  [963,] 3.513150e-04 0.999648685 2.369494e-03 0.9976305065 0.0037149782 #>  [964,] 3.462906e-04 0.999653709 2.335674e-03 0.9976643265 0.0036620245 #>  [965,] 3.413381e-04 0.999658662 2.302335e-03 0.9976976648 0.0036098228 #>  [966,] 3.364564e-04 0.999663544 2.269472e-03 0.9977305284 0.0035583627 #>  [967,] 3.316445e-04 0.999668356 2.237076e-03 0.9977629240 0.0035076335 #>  [968,] 3.269014e-04 0.999673099 2.205142e-03 0.9977948581 0.0034576251 #>  [969,] 3.222260e-04 0.999677774 2.173663e-03 0.9978263374 0.0034083272 #>  [970,] 3.176176e-04 0.999682382 2.142632e-03 0.9978573683 0.0033597298 #>  [971,] 3.130750e-04 0.999686925 2.112043e-03 0.9978879571 0.0033118230 #>  [972,] 3.085974e-04 0.999691403 2.081890e-03 0.9979181101 0.0032645971 #>  [973,] 3.041838e-04 0.999695816 2.052166e-03 0.9979478335 0.0032180425 #>  [974,] 2.998333e-04 0.999700167 2.022867e-03 0.9979771335 0.0031721496 #>  [975,] 2.955450e-04 0.999704455 1.993984e-03 0.9980060159 0.0031269091 #>  [976,] 2.913180e-04 0.999708682 1.965513e-03 0.9980344868 0.0030823119 #>  [977,] 2.871515e-04 0.999712849 1.937448e-03 0.9980625519 0.0030383488 #>  [978,] 2.830445e-04 0.999716956 1.909783e-03 0.9980902170 0.0029950109 #>  [979,] 2.789963e-04 0.999721004 1.882512e-03 0.9981174879 0.0029522893 #>  [980,] 2.750059e-04 0.999724994 1.855630e-03 0.9981443701 0.0029101753 #>  [981,] 2.710726e-04 0.999728927 1.829131e-03 0.9981708691 0.0028686603 #>  [982,] 2.671955e-04 0.999732804 1.803010e-03 0.9981969904 0.0028277358 #>  [983,] 2.633739e-04 0.999736626 1.777261e-03 0.9982227393 0.0027873936 #>  [984,] 2.596069e-04 0.999740393 1.751879e-03 0.9982481211 0.0027476253 #>  [985,] 2.558938e-04 0.999744106 1.726859e-03 0.9982731411 0.0027084229 #>  [986,] 2.522338e-04 0.999747766 1.702196e-03 0.9982978043 0.0026697783 #>  [987,] 2.486261e-04 0.999751374 1.677884e-03 0.9983221159 0.0026316837 #>  [988,] 2.450700e-04 0.999754930 1.653919e-03 0.9983460809 0.0025941312 #>  [989,] 2.415648e-04 0.999758435 1.630296e-03 0.9983697041 0.0025571131 #>  [990,] 2.381096e-04 0.999761890 1.607010e-03 0.9983929904 0.0025206220 #>  [991,] 2.347039e-04 0.999765296 1.584055e-03 0.9984159447 0.0024846503 #>  [992,] 2.313469e-04 0.999768653 1.561428e-03 0.9984385716 0.0024491908 #>  [993,] 2.280379e-04 0.999771962 1.539124e-03 0.9984608758 0.0024142360 #>  [994,] 2.247762e-04 0.999775224 1.517138e-03 0.9984828618 0.0023797789 #>  [995,] 2.215612e-04 0.999778439 1.495466e-03 0.9985045343 0.0023458125 #>  [996,] 2.183921e-04 0.999781608 1.474102e-03 0.9985258977 0.0023123297 #>  [997,] 2.152683e-04 0.999784732 1.453044e-03 0.9985469563 0.0022793238 #>  [998,] 2.121892e-04 0.999787811 1.432286e-03 0.9985677144 0.0022467879 #>  [999,] 2.091542e-04 0.999790846 1.411823e-03 0.9985881765 0.0022147155 #> [1000,] 2.061625e-04 0.999793837 1.391653e-03 0.9986083466 0.0021830998 #> [1001,] 2.032137e-04 0.999796786 1.371771e-03 0.9986282290 0.0021519345 #> [1002,] 2.003070e-04 0.999799693 1.352172e-03 0.9986478277 0.0021212132 #> [1003,] 1.974419e-04 0.999802558 1.332853e-03 0.9986671468 0.0020909295 #> [1004,] 1.946177e-04 0.999805382 1.313810e-03 0.9986861902 0.0020610773 #> [1005,] 1.918340e-04 0.999808166 1.295038e-03 0.9987049619 0.0020316504 #> [1006,] 1.890900e-04 0.999810910 1.276534e-03 0.9987234657 0.0020026428 #> [1007,] 1.863853e-04 0.999813615 1.258295e-03 0.9987417054 0.0019740485 #> [1008,] 1.837193e-04 0.999816281 1.240315e-03 0.9987596849 0.0019458618 #> [1009,] 1.810914e-04 0.999818909 1.222592e-03 0.9987774078 0.0019180767 #> [1010,] 1.785010e-04 0.999821499 1.205122e-03 0.9987948777 0.0018906876 #> [1011,] 1.759478e-04 0.999824052 1.187902e-03 0.9988120983 0.0018636889 #> [1012,] 1.734310e-04 0.999826569 1.170927e-03 0.9988290731 0.0018370750 #> [1013,] 1.709502e-04 0.999829050 1.154194e-03 0.9988458056 0.0018108405 #> [1014,] 1.685049e-04 0.999831495 1.137701e-03 0.9988622993 0.0017849800 #> [1015,] 1.660946e-04 0.999833905 1.121442e-03 0.9988785576 0.0017594881 #> [1016,] 1.637188e-04 0.999836281 1.105416e-03 0.9988945838 0.0017343597 #> [1017,] 1.613769e-04 0.999838623 1.089619e-03 0.9989103812 0.0017095895 #> [1018,] 1.590686e-04 0.999840931 1.074047e-03 0.9989259531 0.0016851724 #> [1019,] 1.567932e-04 0.999843207 1.058697e-03 0.9989413026 0.0016611036 #> [1020,] 1.545504e-04 0.999845450 1.043567e-03 0.9989564331 0.0016373779 #> [1021,] 1.523396e-04 0.999847660 1.028652e-03 0.9989713475 0.0016139906 #> [1022,] 1.501605e-04 0.999849839 1.013951e-03 0.9989860490 0.0015909368 #> [1023,] 1.480126e-04 0.999851987 9.994594e-04 0.9990005406 0.0015682117 #> [1024,] 1.458953e-04 0.999854105 9.851747e-04 0.9990148253 0.0015458108 #> [1025,] 1.438084e-04 0.999856192 9.710940e-04 0.9990289060 0.0015237293 #> [1026,] 1.417513e-04 0.999858249 9.572144e-04 0.9990427856 0.0015019629 #> [1027,] 1.397236e-04 0.999860276 9.435329e-04 0.9990564671 0.0014805068 #> [1028,] 1.377249e-04 0.999862275 9.300468e-04 0.9990699532 0.0014593569 #> [1029,] 1.357548e-04 0.999864245 9.167533e-04 0.9990832467 0.0014385086 #> [1030,] 1.338129e-04 0.999866187 9.036496e-04 0.9990963504 0.0014179578 #> [1031,] 1.318988e-04 0.999868101 8.907331e-04 0.9991092669 0.0013977001 #> [1032,] 1.300120e-04 0.999869988 8.780010e-04 0.9991219990 0.0013777315 #> [1033,] 1.281522e-04 0.999871848 8.654507e-04 0.9991345493 0.0013580478 #> [1034,] 1.263190e-04 0.999873681 8.530797e-04 0.9991469203 0.0013386449 #> [1035,] 1.245121e-04 0.999875488 8.408854e-04 0.9991591146 0.0013195188 #> [1036,] 1.227310e-04 0.999877269 8.288653e-04 0.9991711347 0.0013006657 #> [1037,] 1.209753e-04 0.999879025 8.170168e-04 0.9991829832 0.0012820816 #> [1038,] 1.192448e-04 0.999880755 8.053376e-04 0.9991946624 0.0012637626 #> [1039,] 1.175390e-04 0.999882461 7.938251e-04 0.9992061749 0.0012457051 #> [1040,] 1.158577e-04 0.999884142 7.824772e-04 0.9992175228 0.0012279054 #> [1041,] 1.142003e-04 0.999885800 7.712913e-04 0.9992287087 0.0012103596 #> [1042,] 1.125667e-04 0.999887433 7.602652e-04 0.9992397348 0.0011930642 #> [1043,] 1.109565e-04 0.999889044 7.493966e-04 0.9992506034 0.0011760157 #> [1044,] 1.093692e-04 0.999890631 7.386833e-04 0.9992613167 0.0011592106 #> [1045,] 1.078047e-04 0.999892195 7.281230e-04 0.9992718770 0.0011426453 #> [1046,] 1.062626e-04 0.999893737 7.177136e-04 0.9992822864 0.0011263164 #> [1047,] 1.047425e-04 0.999895258 7.074529e-04 0.9992925471 0.0011102207 #> [1048,] 1.032441e-04 0.999896756 6.973388e-04 0.9993026612 0.0010943547 #> [1049,] 1.017672e-04 0.999898233 6.873692e-04 0.9993126308 0.0010787152 #> [1050,] 1.003114e-04 0.999899689 6.775420e-04 0.9993224580 0.0010632990 #> [1051,] 9.887647e-05 0.999901124 6.678552e-04 0.9993321448 0.0010481028 #> [1052,] 9.746203e-05 0.999902538 6.583068e-04 0.9993416932 0.0010331237 #> [1053,] 9.606783e-05 0.999903932 6.488949e-04 0.9993511051 0.0010183583 #> [1054,] 9.469356e-05 0.999905306 6.396174e-04 0.9993603826 0.0010038038 #> [1055,] 9.333896e-05 0.999906661 6.304725e-04 0.9993695275 0.0009894571 #> [1056,] 9.200373e-05 0.999907996 6.214582e-04 0.9993785418 0.0009753152 #> [1057,] 9.068760e-05 0.999909312 6.125728e-04 0.9993874272 0.0009613753 #> [1058,] 8.939029e-05 0.999910610 6.038143e-04 0.9993961857 0.0009476344 #> [1059,] 8.811154e-05 0.999911888 5.951810e-04 0.9994048190 0.0009340898 #> [1060,] 8.685108e-05 0.999913149 5.866710e-04 0.9994133290 0.0009207385 #> [1061,] 8.560865e-05 0.999914391 5.782827e-04 0.9994217173 0.0009075779 #> [1062,] 8.438400e-05 0.999915616 5.700142e-04 0.9994299858 0.0008946053 #> [1063,] 8.317686e-05 0.999916823 5.618639e-04 0.9994381361 0.0008818179 #> [1064,] 8.198699e-05 0.999918013 5.538300e-04 0.9994461700 0.0008692131 #> [1065,] 8.081413e-05 0.999919186 5.459110e-04 0.9994540890 0.0008567884 #> [1066,] 7.965806e-05 0.999920342 5.381051e-04 0.9994618949 0.0008445411 #> [1067,] 7.851852e-05 0.999921481 5.304108e-04 0.9994695892 0.0008324688 #> [1068,] 7.739528e-05 0.999922605 5.228264e-04 0.9994771736 0.0008205688 #> [1069,] 7.628811e-05 0.999923712 5.153505e-04 0.9994846495 0.0008088388 #> [1070,] 7.519678e-05 0.999924803 5.079814e-04 0.9994920186 0.0007972764 #> [1071,] 7.412106e-05 0.999925879 5.007176e-04 0.9994992824 0.0007858791 #> [1072,] 7.306072e-05 0.999926939 4.935576e-04 0.9995064424 0.0007746447 #> [1073,] 7.201555e-05 0.999927984 4.864999e-04 0.9995135001 0.0007635707 #> [1074,] 7.098534e-05 0.999929015 4.795432e-04 0.9995204568 0.0007526549 #> [1075,] 6.996985e-05 0.999930030 4.726858e-04 0.9995273142 0.0007418950 #> [1076,] 6.896890e-05 0.999931031 4.659265e-04 0.9995340735 0.0007312889 #> [1077,] 6.798226e-05 0.999932018 4.592638e-04 0.9995407362 0.0007208342 #> [1078,] 6.700974e-05 0.999932990 4.526963e-04 0.9995473037 0.0007105289 #> [1079,] 6.605113e-05 0.999933949 4.462227e-04 0.9995537773 0.0007003709 #> [1080,] 6.510623e-05 0.999934894 4.398416e-04 0.9995601584 0.0006903579 #> [1081,] 6.417485e-05 0.999935825 4.335518e-04 0.9995664482 0.0006804881 #> [1082,] 6.325679e-05 0.999936743 4.273518e-04 0.9995726482 0.0006707592 #> [1083,] 6.235186e-05 0.999937648 4.212405e-04 0.9995787595 0.0006611693 #> [1084,] 6.145988e-05 0.999938540 4.152165e-04 0.9995847835 0.0006517165 #> [1085,] 6.058066e-05 0.999939419 4.092786e-04 0.9995907214 0.0006423987 #> [1086,] 5.971401e-05 0.999940286 4.034257e-04 0.9995965743 0.0006332140 #> [1087,] 5.885977e-05 0.999941140 3.976563e-04 0.9996023437 0.0006241606 #> [1088,] 5.801774e-05 0.999941982 3.919695e-04 0.9996080305 0.0006152365 #> [1089,] 5.718775e-05 0.999942812 3.863640e-04 0.9996136360 0.0006064400 #> [1090,] 5.636964e-05 0.999943630 3.808385e-04 0.9996191615 0.0005977692 #> [1091,] 5.556324e-05 0.999944437 3.753921e-04 0.9996246079 0.0005892222 #> [1092,] 5.476836e-05 0.999945232 3.700236e-04 0.9996299764 0.0005807974 #> [1093,] 5.398486e-05 0.999946015 3.647318e-04 0.9996352682 0.0005724930 #> [1094,] 5.321257e-05 0.999946787 3.595156e-04 0.9996404844 0.0005643072 #> [1095,] 5.245132e-05 0.999947549 3.543740e-04 0.9996456260 0.0005562385 #> [1096,] 5.170097e-05 0.999948299 3.493059e-04 0.9996506941 0.0005482850 #> [1097,] 5.096135e-05 0.999949039 3.443103e-04 0.9996556897 0.0005404452 #> [1098,] 5.023230e-05 0.999949768 3.393861e-04 0.9996606139 0.0005327174 #> [1099,] 4.951369e-05 0.999950486 3.345323e-04 0.9996654677 0.0005251001 #> [1100,] 4.880536e-05 0.999951195 3.297479e-04 0.9996702521 0.0005175917 #> [1101,] 4.810716e-05 0.999951893 3.250319e-04 0.9996749681 0.0005101905 #> [1102,] 4.741895e-05 0.999952581 3.203833e-04 0.9996796167 0.0005028952 #> [1103,] 4.674058e-05 0.999953259 3.158012e-04 0.9996841988 0.0004957041 #> [1104,] 4.607192e-05 0.999953928 3.112846e-04 0.9996887154 0.0004886157 #> [1105,] 4.541282e-05 0.999954587 3.068326e-04 0.9996931674 0.0004816287 #> [1106,] 4.476315e-05 0.999955237 3.024442e-04 0.9996975558 0.0004747416 #> [1107,] 4.412277e-05 0.999955877 2.981186e-04 0.9997018814 0.0004679529 #> [1108,] 4.349156e-05 0.999956508 2.938548e-04 0.9997061452 0.0004612612 #> [1109,] 4.286937e-05 0.999957131 2.896520e-04 0.9997103480 0.0004546651 #> [1110,] 4.225609e-05 0.999957744 2.855093e-04 0.9997144907 0.0004481634 #> [1111,] 4.165158e-05 0.999958348 2.814258e-04 0.9997185742 0.0004417546 #> [1112,] 4.105571e-05 0.999958944 2.774007e-04 0.9997225993 0.0004354374 #> [1113,] 4.046837e-05 0.999959532 2.734331e-04 0.9997265669 0.0004292105 #> [1114,] 3.988944e-05 0.999960111 2.695223e-04 0.9997304777 0.0004230726 #> [1115,] 3.931878e-05 0.999960681 2.656674e-04 0.9997343326 0.0004170224 #> [1116,] 3.875629e-05 0.999961244 2.618676e-04 0.9997381324 0.0004110587 #> [1117,] 3.820184e-05 0.999961798 2.581222e-04 0.9997418778 0.0004051803 #> [1118,] 3.765533e-05 0.999962345 2.544303e-04 0.9997455697 0.0003993859 #> [1119,] 3.711663e-05 0.999962883 2.507912e-04 0.9997492088 0.0003936743 #> [1120,] 3.658564e-05 0.999963414 2.472042e-04 0.9997527958 0.0003880444 #> [1121,] 3.606225e-05 0.999963938 2.436684e-04 0.9997563316 0.0003824950 #> [1122,] 3.554634e-05 0.999964454 2.401832e-04 0.9997598168 0.0003770249 #> [1123,] 3.503782e-05 0.999964962 2.367478e-04 0.9997632522 0.0003716330 #> [1124,] 3.453657e-05 0.999965463 2.333616e-04 0.9997666384 0.0003663182 #> [1125,] 3.404249e-05 0.999965958 2.300238e-04 0.9997699762 0.0003610793 #> [1126,] 3.355547e-05 0.999966445 2.267337e-04 0.9997732663 0.0003559154 #> [1127,] 3.307543e-05 0.999966925 2.234906e-04 0.9997765094 0.0003508253 #> [1128,] 3.260225e-05 0.999967398 2.202940e-04 0.9997797060 0.0003458079 #> [1129,] 3.213584e-05 0.999967864 2.171430e-04 0.9997828570 0.0003408623 #> [1130,] 3.167610e-05 0.999968324 2.140371e-04 0.9997859629 0.0003359874 #> [1131,] 3.122294e-05 0.999968777 2.109757e-04 0.9997890243 0.0003311822 #> [1132,] 3.077627e-05 0.999969224 2.079580e-04 0.9997920420 0.0003264457 #> [1133,] 3.033598e-05 0.999969664 2.049834e-04 0.9997950166 0.0003217769 #> [1134,] 2.990199e-05 0.999970098 2.020514e-04 0.9997979486 0.0003171749 #> [1135,] 2.947421e-05 0.999970526 1.991613e-04 0.9998008387 0.0003126386 #> [1136,] 2.905255e-05 0.999970947 1.963126e-04 0.9998036874 0.0003081672 #> [1137,] 2.863692e-05 0.999971363 1.935046e-04 0.9998064954 0.0003037598 #> [1138,] 2.822724e-05 0.999971773 1.907368e-04 0.9998092632 0.0002994153 #> [1139,] 2.782342e-05 0.999972177 1.880085e-04 0.9998119915 0.0002951330 #> [1140,] 2.742537e-05 0.999972575 1.853192e-04 0.9998146808 0.0002909119 #> [1141,] 2.703302e-05 0.999972967 1.826685e-04 0.9998173315 0.0002867512 #> [1142,] 2.664629e-05 0.999973354 1.800556e-04 0.9998199444 0.0002826499 #> [1143,] 2.626508e-05 0.999973735 1.774801e-04 0.9998225199 0.0002786073 #> [1144,] 2.588933e-05 0.999974111 1.749414e-04 0.9998250586 0.0002746225 #> [1145,] 2.551895e-05 0.999974481 1.724390e-04 0.9998275610 0.0002706947 #> [1146,] 2.515388e-05 0.999974846 1.699725e-04 0.9998300275 0.0002668231 #> [1147,] 2.479402e-05 0.999975206 1.675412e-04 0.9998324588 0.0002630068 #> [1148,] 2.443931e-05 0.999975561 1.651446e-04 0.9998348554 0.0002592450 #> [1149,] 2.408968e-05 0.999975910 1.627824e-04 0.9998372176 0.0002555371 #> [1150,] 2.374505e-05 0.999976255 1.604539e-04 0.9998395461 0.0002518822 #> [1151,] 2.340535e-05 0.999976595 1.581587e-04 0.9998418413 0.0002482795 #> [1152,] 2.307051e-05 0.999976929 1.558964e-04 0.9998441036 0.0002447284 #> [1153,] 2.274046e-05 0.999977260 1.536664e-04 0.9998463336 0.0002412280 #> [1154,] 2.241513e-05 0.999977585 1.514683e-04 0.9998485317 0.0002377777 #> [1155,] 2.209445e-05 0.999977906 1.493016e-04 0.9998506984 0.0002343767 #> [1156,] 2.177837e-05 0.999978222 1.471660e-04 0.9998528340 0.0002310244 #> [1157,] 2.146680e-05 0.999978533 1.450608e-04 0.9998549392 0.0002277200 #> [1158,] 2.115969e-05 0.999978840 1.429858e-04 0.9998570142 0.0002244629 #> [1159,] 2.085698e-05 0.999979143 1.409405e-04 0.9998590595 0.0002212523 #> [1160,] 2.055859e-05 0.999979441 1.389244e-04 0.9998610756 0.0002180876 #> [1161,] 2.026448e-05 0.999979736 1.369372e-04 0.9998630628 0.0002149682 #> [1162,] 1.997457e-05 0.999980025 1.349783e-04 0.9998650217 0.0002118934 #> [1163,] 1.968881e-05 0.999980311 1.330475e-04 0.9998669525 0.0002088626 #> [1164,] 1.940714e-05 0.999980593 1.311443e-04 0.9998688557 0.0002058751 #> [1165,] 1.912949e-05 0.999980871 1.292684e-04 0.9998707316 0.0002029304 #> [1166,] 1.885582e-05 0.999981144 1.274192e-04 0.9998725808 0.0002000277 #> [1167,] 1.858607e-05 0.999981414 1.255965e-04 0.9998744035 0.0001971666 #> [1168,] 1.832017e-05 0.999981680 1.237999e-04 0.9998762001 0.0001943464 #> [1169,] 1.805808e-05 0.999981942 1.220290e-04 0.9998779710 0.0001915665 #> [1170,] 1.779974e-05 0.999982200 1.202834e-04 0.9998797166 0.0001888264 #> [1171,] 1.754509e-05 0.999982455 1.185627e-04 0.9998814373 0.0001861254 #> [1172,] 1.729408e-05 0.999982706 1.168667e-04 0.9998831333 0.0001834631 #> [1173,] 1.704667e-05 0.999982953 1.151950e-04 0.9998848050 0.0001808389 #> [1174,] 1.680280e-05 0.999983197 1.135471e-04 0.9998864529 0.0001782522 #> [1175,] 1.656241e-05 0.999983438 1.119228e-04 0.9998880772 0.0001757025 #> [1176,] 1.632546e-05 0.999983675 1.103218e-04 0.9998896782 0.0001731892 #> [1177,] 1.609191e-05 0.999983908 1.087436e-04 0.9998912564 0.0001707119 #> [1178,] 1.586169e-05 0.999984138 1.071881e-04 0.9998928119 0.0001682700 #> [1179,] 1.563477e-05 0.999984365 1.056547e-04 0.9998943453 0.0001658631 #> [1180,] 1.541110e-05 0.999984589 1.041434e-04 0.9998958566 0.0001634905 #> [1181,] 1.519062e-05 0.999984809 1.026536e-04 0.9998973464 0.0001611519 #> [1182,] 1.497330e-05 0.999985027 1.011851e-04 0.9998988149 0.0001588468 #> [1183,] 1.475909e-05 0.999985241 9.973765e-05 0.9999002623 0.0001565746 #> [1184,] 1.454794e-05 0.999985452 9.831090e-05 0.9999016891 0.0001543349 #> [1185,] 1.433981e-05 0.999985660 9.690455e-05 0.9999030955 0.0001521273 #> [1186,] 1.413466e-05 0.999985865 9.551832e-05 0.9999044817 0.0001499512 #> [1187,] 1.393245e-05 0.999986068 9.415191e-05 0.9999058481 0.0001478062 #> [1188,] 1.373313e-05 0.999986267 9.280505e-05 0.9999071949 0.0001456919 #> [1189,] 1.353666e-05 0.999986463 9.147746e-05 0.9999085225 0.0001436079 #> [1190,] 1.334300e-05 0.999986657 9.016885e-05 0.9999098311 0.0001415537 #> [1191,] 1.315211e-05 0.999986848 8.887897e-05 0.9999111210 0.0001395288 #> [1192,] 1.296395e-05 0.999987036 8.760753e-05 0.9999123925 0.0001375329 #> [1193,] 1.277848e-05 0.999987222 8.635429e-05 0.9999136457 0.0001355656 #> [1194,] 1.259567e-05 0.999987404 8.511896e-05 0.9999148810 0.0001336264 #> [1195,] 1.241547e-05 0.999987585 8.390131e-05 0.9999160987 0.0001317149 #> [1196,] 1.223785e-05 0.999987762 8.270108e-05 0.9999172989 0.0001298307 #> [1197,] 1.206277e-05 0.999987937 8.151801e-05 0.9999184820 0.0001279736 #> [1198,] 1.189020e-05 0.999988110 8.035187e-05 0.9999196481 0.0001261429 #> [1199,] 1.172009e-05 0.999988280 7.920240e-05 0.9999207976 0.0001243385 #> [1200,] 1.155242e-05 0.999988448 7.806938e-05 0.9999219306 0.0001225599 #> [1201,] 1.138715e-05 0.999988613 7.695257e-05 0.9999230474 0.0001208067 #>                 [,6]         [,7]         [,8]         [,9]        [,10] #>    [1,] 0.0002558693 0.9998824482 0.0001175518 0.9999063898 9.361023e-05 #>    [2,] 0.0002595820 0.9998807422 0.0001192578 0.9999050312 9.496877e-05 #>    [3,] 0.0002633486 0.9998790115 0.0001209885 0.9999036530 9.634703e-05 #>    [4,] 0.0002671699 0.9998772557 0.0001227443 0.9999022547 9.774529e-05 #>    [5,] 0.0002710466 0.9998754743 0.0001245257 0.9999008362 9.916384e-05 #>    [6,] 0.0002749795 0.9998736672 0.0001263328 0.9998993970 1.006030e-04 #>    [7,] 0.0002789695 0.9998718338 0.0001281662 0.9998979370 1.020630e-04 #>    [8,] 0.0002830174 0.9998699738 0.0001300262 0.9998964558 1.035442e-04 #>    [9,] 0.0002871239 0.9998680869 0.0001319131 0.9998949531 1.050469e-04 #>   [10,] 0.0002912901 0.9998661725 0.0001338275 0.9998934286 1.065714e-04 #>   [11,] 0.0002955166 0.9998642304 0.0001357696 0.9998918820 1.081180e-04 #>   [12,] 0.0002998045 0.9998622601 0.0001377399 0.9998903129 1.096871e-04 #>   [13,] 0.0003041546 0.9998602612 0.0001397388 0.9998887211 1.112789e-04 #>   [14,] 0.0003085678 0.9998582333 0.0001417667 0.9998871061 1.128939e-04 #>   [15,] 0.0003130450 0.9998561759 0.0001438241 0.9998854678 1.145322e-04 #>   [16,] 0.0003175871 0.9998540888 0.0001459112 0.9998838056 1.161944e-04 #>   [17,] 0.0003221951 0.9998519713 0.0001480287 0.9998821194 1.178806e-04 #>   [18,] 0.0003268700 0.9998498231 0.0001501769 0.9998804086 1.195914e-04 #>   [19,] 0.0003316127 0.9998476438 0.0001523562 0.9998786731 1.213269e-04 #>   [20,] 0.0003364241 0.9998454328 0.0001545672 0.9998769123 1.230877e-04 #>   [21,] 0.0003413054 0.9998431897 0.0001568103 0.9998751260 1.248740e-04 #>   [22,] 0.0003462574 0.9998409141 0.0001590859 0.9998733138 1.266862e-04 #>   [23,] 0.0003512813 0.9998386055 0.0001613945 0.9998714753 1.285247e-04 #>   [24,] 0.0003563780 0.9998362634 0.0001637366 0.9998696102 1.303898e-04 #>   [25,] 0.0003615487 0.9998338873 0.0001661127 0.9998677179 1.322821e-04 #>   [26,] 0.0003667943 0.9998314767 0.0001685233 0.9998657982 1.342018e-04 #>   [27,] 0.0003721160 0.9998290311 0.0001709689 0.9998638506 1.361494e-04 #>   [28,] 0.0003775149 0.9998265501 0.0001734499 0.9998618748 1.381252e-04 #>   [29,] 0.0003829921 0.9998240331 0.0001759669 0.9998598703 1.401297e-04 #>   [30,] 0.0003885488 0.9998214795 0.0001785205 0.9998578368 1.421632e-04 #>   [31,] 0.0003941860 0.9998188889 0.0001811111 0.9998557737 1.442263e-04 #>   [32,] 0.0003999050 0.9998162607 0.0001837393 0.9998536807 1.463193e-04 #>   [33,] 0.0004057069 0.9998135944 0.0001864056 0.9998515573 1.484427e-04 #>   [34,] 0.0004115930 0.9998108894 0.0001891106 0.9998494031 1.505969e-04 #>   [35,] 0.0004175644 0.9998081452 0.0001918548 0.9998472176 1.527824e-04 #>   [36,] 0.0004236224 0.9998053611 0.0001946389 0.9998450005 1.549995e-04 #>   [37,] 0.0004297683 0.9998025366 0.0001974634 0.9998427511 1.572489e-04 #>   [38,] 0.0004360033 0.9997996712 0.0002003288 0.9998404692 1.595308e-04 #>   [39,] 0.0004423287 0.9997967642 0.0002032358 0.9998381541 1.618459e-04 #>   [40,] 0.0004487459 0.9997938150 0.0002061850 0.9998358054 1.641946e-04 #>   [41,] 0.0004552561 0.9997908230 0.0002091770 0.9998334227 1.665773e-04 #>   [42,] 0.0004618607 0.9997877876 0.0002122124 0.9998310054 1.689946e-04 #>   [43,] 0.0004685610 0.9997847082 0.0002152918 0.9998285530 1.714470e-04 #>   [44,] 0.0004753586 0.9997815841 0.0002184159 0.9998260650 1.739350e-04 #>   [45,] 0.0004822547 0.9997784147 0.0002215853 0.9998235409 1.764591e-04 #>   [46,] 0.0004892507 0.9997751993 0.0002248007 0.9998209802 1.790198e-04 #>   [47,] 0.0004963483 0.9997719373 0.0002280627 0.9998183824 1.816176e-04 #>   [48,] 0.0005035487 0.9997686279 0.0002313721 0.9998157468 1.842532e-04 #>   [49,] 0.0005108536 0.9997652705 0.0002347295 0.9998130731 1.869269e-04 #>   [50,] 0.0005182643 0.9997618644 0.0002381356 0.9998103605 1.896395e-04 #>   [51,] 0.0005257825 0.9997584089 0.0002415911 0.9998076086 1.923914e-04 #>   [52,] 0.0005334097 0.9997549033 0.0002450967 0.9998048167 1.951833e-04 #>   [53,] 0.0005411475 0.9997513468 0.0002486532 0.9998019844 1.980156e-04 #>   [54,] 0.0005489975 0.9997477387 0.0002522613 0.9997991109 2.008891e-04 #>   [55,] 0.0005569613 0.9997440783 0.0002559217 0.9997961958 2.038042e-04 #>   [56,] 0.0005650406 0.9997403648 0.0002596352 0.9997932383 2.067617e-04 #>   [57,] 0.0005732369 0.9997365974 0.0002634026 0.9997902380 2.097620e-04 #>   [58,] 0.0005815521 0.9997327754 0.0002672246 0.9997871941 2.128059e-04 #>   [59,] 0.0005899879 0.9997288979 0.0002711021 0.9997841061 2.158939e-04 #>   [60,] 0.0005985459 0.9997249642 0.0002750358 0.9997809733 2.190267e-04 #>   [61,] 0.0006072280 0.9997209734 0.0002790266 0.9997777950 2.222050e-04 #>   [62,] 0.0006160360 0.9997169247 0.0002830753 0.9997745706 2.254294e-04 #>   [63,] 0.0006249717 0.9997128173 0.0002871827 0.9997712994 2.287006e-04 #>   [64,] 0.0006340368 0.9997086503 0.0002913497 0.9997679808 2.320192e-04 #>   [65,] 0.0006432334 0.9997044228 0.0002955772 0.9997646141 2.353859e-04 #>   [66,] 0.0006525633 0.9997001341 0.0002998659 0.9997611984 2.388016e-04 #>   [67,] 0.0006620284 0.9996957831 0.0003042169 0.9997577333 2.422667e-04 #>   [68,] 0.0006716308 0.9996913690 0.0003086310 0.9997542179 2.457821e-04 #>   [69,] 0.0006813723 0.9996868909 0.0003131091 0.9997506514 2.493486e-04 #>   [70,] 0.0006912550 0.9996823478 0.0003176522 0.9997470333 2.529667e-04 #>   [71,] 0.0007012809 0.9996777389 0.0003222611 0.9997433626 2.566374e-04 #>   [72,] 0.0007114521 0.9996730630 0.0003269370 0.9997396387 2.603613e-04 #>   [73,] 0.0007217708 0.9996683194 0.0003316806 0.9997358608 2.641392e-04 #>   [74,] 0.0007322390 0.9996635070 0.0003364930 0.9997320281 2.679719e-04 #>   [75,] 0.0007428590 0.9996586247 0.0003413753 0.9997281397 2.718603e-04 #>   [76,] 0.0007536328 0.9996536717 0.0003463283 0.9997241950 2.758050e-04 #>   [77,] 0.0007645628 0.9996486468 0.0003513532 0.9997201930 2.798070e-04 #>   [78,] 0.0007756511 0.9996435490 0.0003564510 0.9997161330 2.838670e-04 #>   [79,] 0.0007869002 0.9996383773 0.0003616227 0.9997120141 2.879859e-04 #>   [80,] 0.0007983122 0.9996331306 0.0003668694 0.9997078355 2.921645e-04 #>   [81,] 0.0008098897 0.9996278078 0.0003721922 0.9997035962 2.964038e-04 #>   [82,] 0.0008216349 0.9996224077 0.0003775923 0.9996992955 3.007045e-04 #>   [83,] 0.0008335503 0.9996169294 0.0003830706 0.9996949323 3.050677e-04 #>   [84,] 0.0008456383 0.9996113716 0.0003886284 0.9996905059 3.094941e-04 #>   [85,] 0.0008579015 0.9996057333 0.0003942667 0.9996860153 3.139847e-04 #>   [86,] 0.0008703424 0.9996000131 0.0003999869 0.9996814595 3.185405e-04 #>   [87,] 0.0008829635 0.9995942100 0.0004057900 0.9996768377 3.231623e-04 #>   [88,] 0.0008957675 0.9995883227 0.0004116773 0.9996721488 3.278512e-04 #>   [89,] 0.0009087569 0.9995823501 0.0004176499 0.9996673919 3.326081e-04 #>   [90,] 0.0009219346 0.9995762908 0.0004237092 0.9996625660 3.374340e-04 #>   [91,] 0.0009353032 0.9995701437 0.0004298563 0.9996576701 3.423299e-04 #>   [92,] 0.0009488654 0.9995639074 0.0004360926 0.9996527032 3.472968e-04 #>   [93,] 0.0009626241 0.9995575807 0.0004424193 0.9996476643 3.523357e-04 #>   [94,] 0.0009765822 0.9995511622 0.0004488378 0.9996425522 3.574478e-04 #>   [95,] 0.0009907424 0.9995446507 0.0004553493 0.9996373661 3.626339e-04 #>   [96,] 0.0010051077 0.9995380448 0.0004619552 0.9996321047 3.678953e-04 #>   [97,] 0.0010196811 0.9995313430 0.0004686570 0.9996267670 3.732330e-04 #>   [98,] 0.0010344656 0.9995245441 0.0004754559 0.9996213519 3.786481e-04 #>   [99,] 0.0010494642 0.9995176466 0.0004823534 0.9996158582 3.841418e-04 #>  [100,] 0.0010646801 0.9995106491 0.0004893509 0.9996102849 3.897151e-04 #>  [101,] 0.0010801163 0.9995035501 0.0004964499 0.9996046308 3.953692e-04 #>  [102,] 0.0010957761 0.9994963482 0.0005036518 0.9995988946 4.011054e-04 #>  [103,] 0.0011116627 0.9994890418 0.0005109582 0.9995930753 4.069247e-04 #>  [104,] 0.0011277793 0.9994816295 0.0005183705 0.9995871716 4.128284e-04 #>  [105,] 0.0011441293 0.9994741098 0.0005258902 0.9995811822 4.188178e-04 #>  [106,] 0.0011607161 0.9994664810 0.0005335190 0.9995751060 4.248940e-04 #>  [107,] 0.0011775431 0.9994587416 0.0005412584 0.9995689417 4.310583e-04 #>  [108,] 0.0011946137 0.9994508901 0.0005491099 0.9995626880 4.373120e-04 #>  [109,] 0.0012119315 0.9994429246 0.0005570754 0.9995563436 4.436564e-04 #>  [110,] 0.0012295000 0.9994348437 0.0005651563 0.9995499072 4.500928e-04 #>  [111,] 0.0012473229 0.9994266457 0.0005733543 0.9995433775 4.566225e-04 #>  [112,] 0.0012654038 0.9994183288 0.0005816712 0.9995367531 4.632469e-04 #>  [113,] 0.0012837464 0.9994098913 0.0005901087 0.9995300326 4.699674e-04 #>  [114,] 0.0013023547 0.9994013315 0.0005986685 0.9995232147 4.767853e-04 #>  [115,] 0.0013212322 0.9993926476 0.0006073524 0.9995162979 4.837021e-04 #>  [116,] 0.0013403831 0.9993838378 0.0006161622 0.9995092808 4.907192e-04 #>  [117,] 0.0013598112 0.9993749004 0.0006250996 0.9995021620 4.978380e-04 #>  [118,] 0.0013795204 0.9993658333 0.0006341667 0.9994949400 5.050600e-04 #>  [119,] 0.0013995150 0.9993566349 0.0006433651 0.9994876132 5.123868e-04 #>  [120,] 0.0014197989 0.9993473031 0.0006526969 0.9994801802 5.198198e-04 #>  [121,] 0.0014403764 0.9993378360 0.0006621640 0.9994726395 5.273605e-04 #>  [122,] 0.0014612516 0.9993282317 0.0006717683 0.9994649894 5.350106e-04 #>  [123,] 0.0014824290 0.9993184882 0.0006815118 0.9994572284 5.427716e-04 #>  [124,] 0.0015039129 0.9993086035 0.0006913965 0.9994493548 5.506452e-04 #>  [125,] 0.0015257076 0.9992985755 0.0007014245 0.9994413672 5.586328e-04 #>  [126,] 0.0015478176 0.9992884022 0.0007115978 0.9994332637 5.667363e-04 #>  [127,] 0.0015702476 0.9992780814 0.0007219186 0.9994250427 5.749573e-04 #>  [128,] 0.0015930021 0.9992676110 0.0007323890 0.9994167026 5.832974e-04 #>  [129,] 0.0016160858 0.9992569889 0.0007430111 0.9994082415 5.917585e-04 #>  [130,] 0.0016395034 0.9992462129 0.0007537871 0.9993996578 6.003422e-04 #>  [131,] 0.0016632598 0.9992352807 0.0007647193 0.9993909497 6.090503e-04 #>  [132,] 0.0016873599 0.9992241901 0.0007758099 0.9993821153 6.178847e-04 #>  [133,] 0.0017118086 0.9992129387 0.0007870613 0.9993731528 6.268472e-04 #>  [134,] 0.0017366108 0.9992015243 0.0007984757 0.9993640605 6.359395e-04 #>  [135,] 0.0017617719 0.9991899445 0.0008100555 0.9993548363 6.451637e-04 #>  [136,] 0.0017872968 0.9991781969 0.0008218031 0.9993454784 6.545216e-04 #>  [137,] 0.0018131908 0.9991662791 0.0008337209 0.9993359849 6.640151e-04 #>  [138,] 0.0018394593 0.9991541886 0.0008458114 0.9993263538 6.736462e-04 #>  [139,] 0.0018661077 0.9991419229 0.0008580771 0.9993165831 6.834169e-04 #>  [140,] 0.0018931413 0.9991294795 0.0008705205 0.9993066708 6.933292e-04 #>  [141,] 0.0019205659 0.9991168558 0.0008831442 0.9992966148 7.033852e-04 #>  [142,] 0.0019483870 0.9991040492 0.0008959508 0.9992864130 7.135870e-04 #>  [143,] 0.0019766102 0.9990910570 0.0009089430 0.9992760634 7.239366e-04 #>  [144,] 0.0020052415 0.9990778767 0.0009221233 0.9992655638 7.344362e-04 #>  [145,] 0.0020342867 0.9990645054 0.0009354946 0.9992549120 7.450880e-04 #>  [146,] 0.0020637517 0.9990509403 0.0009490597 0.9992441059 7.558941e-04 #>  [147,] 0.0020936425 0.9990371788 0.0009628212 0.9992331432 7.668568e-04 #>  [148,] 0.0021239654 0.9990232179 0.0009767821 0.9992220215 7.779785e-04 #>  [149,] 0.0021547265 0.9990090548 0.0009909452 0.9992107388 7.892612e-04 #>  [150,] 0.0021859322 0.9989946866 0.0010053134 0.9991992925 8.007075e-04 #>  [151,] 0.0022175888 0.9989801102 0.0010198898 0.9991876803 8.123197e-04 #>  [152,] 0.0022497028 0.9989653227 0.0010346773 0.9991758999 8.241001e-04 #>  [153,] 0.0022822807 0.9989503210 0.0010496790 0.9991639488 8.360512e-04 #>  [154,] 0.0023153294 0.9989351020 0.0010648980 0.9991518245 8.481755e-04 #>  [155,] 0.0023488555 0.9989196626 0.0010803374 0.9991395246 8.604754e-04 #>  [156,] 0.0023828659 0.9989039996 0.0010960004 0.9991270464 8.729536e-04 #>  [157,] 0.0024173675 0.9988881098 0.0011118902 0.9991143875 8.856125e-04 #>  [158,] 0.0024523675 0.9988719899 0.0011280101 0.9991015451 8.984549e-04 #>  [159,] 0.0024878730 0.9988556365 0.0011443635 0.9990885167 9.114833e-04 #>  [160,] 0.0025238912 0.9988390464 0.0011609536 0.9990752995 9.247005e-04 #>  [161,] 0.0025604295 0.9988222159 0.0011777841 0.9990618909 9.381091e-04 #>  [162,] 0.0025974954 0.9988051418 0.0011948582 0.9990482880 9.517120e-04 #>  [163,] 0.0026350965 0.9987878205 0.0012121795 0.9990344881 9.655119e-04 #>  [164,] 0.0026732404 0.9987702484 0.0012297516 0.9990204882 9.795118e-04 #>  [165,] 0.0027119350 0.9987524219 0.0012475781 0.9990062856 9.937144e-04 #>  [166,] 0.0027511881 0.9987343373 0.0012656627 0.9989918772 1.008123e-03 #>  [167,] 0.0027910078 0.9987159909 0.0012840091 0.9989772601 1.022740e-03 #>  [168,] 0.0028314022 0.9986973788 0.0013026212 0.9989624313 1.037569e-03 #>  [169,] 0.0028723795 0.9986784974 0.0013215026 0.9989473878 1.052612e-03 #>  [170,] 0.0029139482 0.9986593426 0.0013406574 0.9989321263 1.067874e-03 #>  [171,] 0.0029561166 0.9986399106 0.0013600894 0.9989166438 1.083356e-03 #>  [172,] 0.0029988935 0.9986201973 0.0013798027 0.9989009371 1.099063e-03 #>  [173,] 0.0030422874 0.9986001987 0.0013998013 0.9988850029 1.114997e-03 #>  [174,] 0.0030863073 0.9985799106 0.0014200894 0.9988688380 1.131162e-03 #>  [175,] 0.0031309622 0.9985593289 0.0014406711 0.9988524390 1.147561e-03 #>  [176,] 0.0031762611 0.9985384494 0.0014615506 0.9988358025 1.164197e-03 #>  [177,] 0.0032222132 0.9985172677 0.0014827323 0.9988189252 1.181075e-03 #>  [178,] 0.0032688280 0.9984957795 0.0015042205 0.9988018034 1.198197e-03 #>  [179,] 0.0033161149 0.9984739803 0.0015260197 0.9987844338 1.215566e-03 #>  [180,] 0.0033640836 0.9984518657 0.0015481343 0.9987668126 1.233187e-03 #>  [181,] 0.0034127438 0.9984294312 0.0015705688 0.9987489363 1.251064e-03 #>  [182,] 0.0034621053 0.9984066720 0.0015933280 0.9987308013 1.269199e-03 #>  [183,] 0.0035121783 0.9983835836 0.0016164164 0.9987124037 1.287596e-03 #>  [184,] 0.0035629730 0.9983601612 0.0016398388 0.9986937397 1.306260e-03 #>  [185,] 0.0036144996 0.9983363999 0.0016636001 0.9986748056 1.325194e-03 #>  [186,] 0.0036667686 0.9983122950 0.0016877050 0.9986555974 1.344403e-03 #>  [187,] 0.0037197906 0.9982878413 0.0017121587 0.9986361111 1.363889e-03 #>  [188,] 0.0037735764 0.9982630339 0.0017369661 0.9986163429 1.383657e-03 #>  [189,] 0.0038281370 0.9982378678 0.0017621322 0.9985962884 1.403712e-03 #>  [190,] 0.0038834834 0.9982123377 0.0017876623 0.9985759438 1.424056e-03 #>  [191,] 0.0039396267 0.9981864383 0.0018135617 0.9985553047 1.444695e-03 #>  [192,] 0.0039965785 0.9981601645 0.0018398355 0.9985343669 1.465633e-03 #>  [193,] 0.0040543503 0.9981335107 0.0018664893 0.9985131261 1.486874e-03 #>  [194,] 0.0041129536 0.9981064715 0.0018935285 0.9984915780 1.508422e-03 #>  [195,] 0.0041724006 0.9980790413 0.0019209587 0.9984697180 1.530282e-03 #>  [196,] 0.0042327031 0.9980512146 0.0019487854 0.9984475418 1.552458e-03 #>  [197,] 0.0042938733 0.9980229856 0.0019770144 0.9984250447 1.574955e-03 #>  [198,] 0.0043559238 0.9979943484 0.0020056516 0.9984022221 1.597778e-03 #>  [199,] 0.0044188669 0.9979652974 0.0020347026 0.9983790693 1.620931e-03 #>  [200,] 0.0044827155 0.9979358264 0.0020641736 0.9983555815 1.644418e-03 #>  [201,] 0.0045474824 0.9979059294 0.0020940706 0.9983317540 1.668246e-03 #>  [202,] 0.0046131807 0.9978756003 0.0021243997 0.9983075818 1.692418e-03 #>  [203,] 0.0046798237 0.9978448329 0.0021551671 0.9982830600 1.716940e-03 #>  [204,] 0.0047474249 0.9978136209 0.0021863791 0.9982581835 1.741816e-03 #>  [205,] 0.0048159979 0.9977819579 0.0022180421 0.9982329472 1.767053e-03 #>  [206,] 0.0048855564 0.9977498373 0.0022501627 0.9982073459 1.792654e-03 #>  [207,] 0.0049561147 0.9977172527 0.0022827473 0.9981813744 1.818626e-03 #>  [208,] 0.0050276868 0.9976841973 0.0023158027 0.9981550273 1.844973e-03 #>  [209,] 0.0051002872 0.9976506644 0.0023493356 0.9981282992 1.871701e-03 #>  [210,] 0.0051739305 0.9976166470 0.0023833530 0.9981011847 1.898815e-03 #>  [211,] 0.0052486315 0.9975821384 0.0024178616 0.9980736781 1.926322e-03 #>  [212,] 0.0053244053 0.9975471312 0.0024528688 0.9980457738 1.954226e-03 #>  [213,] 0.0054012670 0.9975116185 0.0024883815 0.9980174661 1.982534e-03 #>  [214,] 0.0054792323 0.9974755930 0.0025244070 0.9979887492 2.011251e-03 #>  [215,] 0.0055583166 0.9974390472 0.0025609528 0.9979596172 2.040383e-03 #>  [216,] 0.0056385359 0.9974019737 0.0025980263 0.9979300641 2.069936e-03 #>  [217,] 0.0057199063 0.9973643650 0.0026356350 0.9979000838 2.099916e-03 #>  [218,] 0.0058024442 0.9973262133 0.0026737867 0.9978696703 2.130330e-03 #>  [219,] 0.0058861659 0.9972875108 0.0027124892 0.9978388172 2.161183e-03 #>  [220,] 0.0059710885 0.9972482497 0.0027517503 0.9978075182 2.192482e-03 #>  [221,] 0.0060572288 0.9972084219 0.0027915781 0.9977757670 2.224233e-03 #>  [222,] 0.0061446040 0.9971680193 0.0028319807 0.9977435570 2.256443e-03 #>  [223,] 0.0062332318 0.9971270336 0.0028729664 0.9977108817 2.289118e-03 #>  [224,] 0.0063231298 0.9970854565 0.0029145435 0.9976777342 2.322266e-03 #>  [225,] 0.0064143159 0.9970432795 0.0029567205 0.9976441079 2.355892e-03 #>  [226,] 0.0065068085 0.9970004939 0.0029995061 0.9976099959 2.390004e-03 #>  [227,] 0.0066006258 0.9969570911 0.0030429089 0.9975753912 2.424609e-03 #>  [228,] 0.0066957868 0.9969130622 0.0030869378 0.9975402866 2.459713e-03 #>  [229,] 0.0067923103 0.9968683983 0.0031316017 0.9975046750 2.495325e-03 #>  [230,] 0.0068902156 0.9968230902 0.0031769098 0.9974685492 2.531451e-03 #>  [231,] 0.0069895222 0.9967771287 0.0032228713 0.9974319017 2.568098e-03 #>  [232,] 0.0070902498 0.9967305044 0.0032694956 0.9973947251 2.605275e-03 #>  [233,] 0.0071924186 0.9966832078 0.0033167922 0.9973570117 2.642988e-03 #>  [234,] 0.0072960487 0.9966352294 0.0033647706 0.9973187538 2.681246e-03 #>  [235,] 0.0074011609 0.9965865594 0.0034134406 0.9972799437 2.720056e-03 #>  [236,] 0.0075077759 0.9965371878 0.0034628122 0.9972405734 2.759427e-03 #>  [237,] 0.0076159149 0.9964871046 0.0035128954 0.9972006348 2.799365e-03 #>  [238,] 0.0077255995 0.9964362996 0.0035637004 0.9971601198 2.839880e-03 #>  [239,] 0.0078368512 0.9963847625 0.0036152375 0.9971190201 2.880980e-03 #>  [240,] 0.0079496921 0.9963324829 0.0036675171 0.9970773273 2.922673e-03 #>  [241,] 0.0080641446 0.9962794501 0.0037205499 0.9970350330 2.964967e-03 #>  [242,] 0.0081802313 0.9962256533 0.0037743467 0.9969921285 3.007872e-03 #>  [243,] 0.0082979752 0.9961710816 0.0038289184 0.9969486050 3.051395e-03 #>  [244,] 0.0084173994 0.9961157240 0.0038842760 0.9969044537 3.095546e-03 #>  [245,] 0.0085385276 0.9960595692 0.0039404308 0.9968596656 3.140334e-03 #>  [246,] 0.0086613836 0.9960026059 0.0039973941 0.9968142316 3.185768e-03 #>  [247,] 0.0087859917 0.9959448224 0.0040551776 0.9967681423 3.231858e-03 #>  [248,] 0.0089123763 0.9958862071 0.0041137929 0.9967213884 3.278612e-03 #>  [249,] 0.0090405624 0.9958267481 0.0041732519 0.9966739605 3.326040e-03 #>  [250,] 0.0091705751 0.9957664333 0.0042335667 0.9966258487 3.374151e-03 #>  [251,] 0.0093024399 0.9957052506 0.0042947494 0.9965770435 3.422957e-03 #>  [252,] 0.0094361828 0.9956431876 0.0043568124 0.9965275347 3.472465e-03 #>  [253,] 0.0095718300 0.9955802317 0.0044197683 0.9964773124 3.522688e-03 #>  [254,] 0.0097094080 0.9955163702 0.0044836298 0.9964263663 3.573634e-03 #>  [255,] 0.0098489438 0.9954515901 0.0045484099 0.9963746861 3.625314e-03 #>  [256,] 0.0099904647 0.9953858784 0.0046141216 0.9963222613 3.677739e-03 #>  [257,] 0.0101339983 0.9953192219 0.0046807781 0.9962690812 3.730919e-03 #>  [258,] 0.0102795726 0.9952516070 0.0047483930 0.9962151351 3.784865e-03 #>  [259,] 0.0104272160 0.9951830201 0.0048169799 0.9961604119 3.839588e-03 #>  [260,] 0.0105769574 0.9951134474 0.0048865526 0.9961049007 3.895099e-03 #>  [261,] 0.0107288259 0.9950428749 0.0049571251 0.9960485900 3.951410e-03 #>  [262,] 0.0108828509 0.9949712882 0.0050287118 0.9959914686 4.008531e-03 #>  [263,] 0.0110390625 0.9948986731 0.0051013269 0.9959335248 4.066475e-03 #>  [264,] 0.0111974909 0.9948250149 0.0051749851 0.9958747468 4.125253e-03 #>  [265,] 0.0113581670 0.9947502987 0.0052497013 0.9958151229 4.184877e-03 #>  [266,] 0.0115211217 0.9946745096 0.0053254904 0.9957546409 4.245359e-03 #>  [267,] 0.0116863868 0.9945976322 0.0054023678 0.9956932885 4.306712e-03 #>  [268,] 0.0118539940 0.9945196512 0.0054803488 0.9956310533 4.368947e-03 #>  [269,] 0.0120239759 0.9944405509 0.0055594491 0.9955679229 4.432077e-03 #>  [270,] 0.0121963651 0.9943603153 0.0056396847 0.9955038843 4.496116e-03 #>  [271,] 0.0123711949 0.9942789284 0.0057210716 0.9954389246 4.561075e-03 #>  [272,] 0.0125484991 0.9941963738 0.0058036262 0.9953730309 4.626969e-03 #>  [273,] 0.0127283116 0.9941126351 0.0058873649 0.9953061896 4.693810e-03 #>  [274,] 0.0129106670 0.9940276954 0.0059723046 0.9952383873 4.761613e-03 #>  [275,] 0.0130956003 0.9939415376 0.0060584624 0.9951696104 4.830390e-03 #>  [276,] 0.0132831470 0.9938541447 0.0061458553 0.9950998450 4.900155e-03 #>  [277,] 0.0134733429 0.9937654990 0.0062345010 0.9950290770 4.970923e-03 #>  [278,] 0.0136662245 0.9936755828 0.0063244172 0.9949572921 5.042708e-03 #>  [279,] 0.0138618285 0.9935843782 0.0064156218 0.9948844759 5.115524e-03 #>  [280,] 0.0140601923 0.9934918670 0.0065081330 0.9948106138 5.189386e-03 #>  [281,] 0.0142613536 0.9933980306 0.0066019694 0.9947356908 5.264309e-03 #>  [282,] 0.0144653507 0.9933028504 0.0066971496 0.9946596919 5.340308e-03 #>  [283,] 0.0146722224 0.9932063074 0.0067936926 0.9945826018 5.417398e-03 #>  [284,] 0.0148820080 0.9931083823 0.0068916177 0.9945044050 5.495595e-03 #>  [285,] 0.0150947471 0.9930090557 0.0069909443 0.9944250858 5.574914e-03 #>  [286,] 0.0153104801 0.9929083077 0.0070916923 0.9943446283 5.655372e-03 #>  [287,] 0.0155292477 0.9928061183 0.0071938817 0.9942630164 5.736984e-03 #>  [288,] 0.0157510913 0.9927024672 0.0072975328 0.9941802336 5.819766e-03 #>  [289,] 0.0159760525 0.9925973339 0.0074026661 0.9940962633 5.903737e-03 #>  [290,] 0.0162041739 0.9924906973 0.0075093027 0.9940110888 5.988911e-03 #>  [291,] 0.0164354981 0.9923825365 0.0076174635 0.9939246930 6.075307e-03 #>  [292,] 0.0166700687 0.9922728298 0.0077271702 0.9938370585 6.162941e-03 #>  [293,] 0.0169079296 0.9921615557 0.0078384443 0.9937481679 6.251832e-03 #>  [294,] 0.0171491252 0.9920486920 0.0079513080 0.9936580034 6.341997e-03 #>  [295,] 0.0173937007 0.9919342164 0.0080657836 0.9935665470 6.433453e-03 #>  [296,] 0.0176417017 0.9918181063 0.0081818937 0.9934737803 6.526220e-03 #>  [297,] 0.0178931742 0.9917003387 0.0082996613 0.9933796849 6.620315e-03 #>  [298,] 0.0181481652 0.9915808904 0.0084191096 0.9932842420 6.715758e-03 #>  [299,] 0.0184067218 0.9914597378 0.0085402622 0.9931874326 6.812567e-03 #>  [300,] 0.0186688921 0.9913368571 0.0086631429 0.9930892373 6.910763e-03 #>  [301,] 0.0189347245 0.9912122239 0.0087877761 0.9929896367 7.010363e-03 #>  [302,] 0.0192042681 0.9910858139 0.0089141861 0.9928886108 7.111389e-03 #>  [303,] 0.0194775725 0.9909576020 0.0090423980 0.9927861397 7.213860e-03 #>  [304,] 0.0197546882 0.9908275632 0.0091724368 0.9926822029 7.317797e-03 #>  [305,] 0.0200356659 0.9906956718 0.0093043282 0.9925767797 7.423220e-03 #>  [306,] 0.0203205572 0.9905619020 0.0094380980 0.9924698494 7.530151e-03 #>  [307,] 0.0206094142 0.9904262275 0.0095737725 0.9923613905 7.638609e-03 #>  [308,] 0.0209022898 0.9902886219 0.0097113781 0.9922513817 7.748618e-03 #>  [309,] 0.0211992372 0.9901490580 0.0098509420 0.9921398012 7.860199e-03 #>  [310,] 0.0215003106 0.9900075088 0.0099924912 0.9920266267 7.973373e-03 #>  [311,] 0.0218055646 0.9898639464 0.0101360536 0.9919118361 8.088164e-03 #>  [312,] 0.0221150545 0.9897183428 0.0102816572 0.9917954064 8.204594e-03 #>  [313,] 0.0224288363 0.9895706697 0.0104293303 0.9916773149 8.322685e-03 #>  [314,] 0.0227469667 0.9894208983 0.0105791017 0.9915575381 8.442462e-03 #>  [315,] 0.0230695030 0.9892689994 0.0107310006 0.9914360523 8.563948e-03 #>  [316,] 0.0233965032 0.9891149435 0.0108850565 0.9913128338 8.687166e-03 #>  [317,] 0.0237280258 0.9889587006 0.0110412994 0.9911878581 8.812142e-03 #>  [318,] 0.0240641303 0.9888002404 0.0111997596 0.9910611007 8.938899e-03 #>  [319,] 0.0244048767 0.9886395322 0.0113604678 0.9909325366 9.067463e-03 #>  [320,] 0.0247503256 0.9884765448 0.0115234552 0.9908021407 9.197859e-03 #>  [321,] 0.0251005385 0.9883112467 0.0116887533 0.9906698872 9.330113e-03 #>  [322,] 0.0254555775 0.9881436059 0.0118563941 0.9905357502 9.464250e-03 #>  [323,] 0.0258155055 0.9879735901 0.0120264099 0.9903997035 9.600297e-03 #>  [324,] 0.0261803859 0.9878011664 0.0121988336 0.9902617203 9.738280e-03 #>  [325,] 0.0265502831 0.9876263016 0.0123736984 0.9901217737 9.878226e-03 #>  [326,] 0.0269252619 0.9874489620 0.0125510380 0.9899798364 1.002016e-02 #>  [327,] 0.0273053882 0.9872691136 0.0127308864 0.9898358805 1.016412e-02 #>  [328,] 0.0276907283 0.9870867218 0.0129132782 0.9896898780 1.031012e-02 #>  [329,] 0.0280813494 0.9869017516 0.0130982484 0.9895418004 1.045820e-02 #>  [330,] 0.0284773195 0.9867141675 0.0132858325 0.9893916188 1.060838e-02 #>  [331,] 0.0288787071 0.9865239336 0.0134760664 0.9892393041 1.076070e-02 #>  [332,] 0.0292855818 0.9863310136 0.0136689864 0.9890848266 1.091517e-02 #>  [333,] 0.0296980136 0.9861353706 0.0138646294 0.9889281562 1.107184e-02 #>  [334,] 0.0301160736 0.9859369674 0.0140630326 0.9887692626 1.123074e-02 #>  [335,] 0.0305398334 0.9857357660 0.0142642340 0.9886081150 1.139188e-02 #>  [336,] 0.0309693655 0.9855317283 0.0144682717 0.9884446822 1.155532e-02 #>  [337,] 0.0314047431 0.9853248154 0.0146751846 0.9882789324 1.172107e-02 #>  [338,] 0.0318460402 0.9851149881 0.0148850119 0.9881108338 1.188917e-02 #>  [339,] 0.0322933316 0.9849022067 0.0150977933 0.9879403537 1.205965e-02 #>  [340,] 0.0327466930 0.9846864308 0.0153135692 0.9877674594 1.223254e-02 #>  [341,] 0.0332062006 0.9844676198 0.0155323802 0.9875921175 1.240788e-02 #>  [342,] 0.0336719317 0.9842457322 0.0157542678 0.9874142943 1.258571e-02 #>  [343,] 0.0341439641 0.9840207263 0.0159792737 0.9872339555 1.276604e-02 #>  [344,] 0.0346223767 0.9837925598 0.0162074402 0.9870510666 1.294893e-02 #>  [345,] 0.0351072490 0.9835611897 0.0164388103 0.9868655924 1.313441e-02 #>  [346,] 0.0355986613 0.9833265726 0.0166734274 0.9866774975 1.332250e-02 #>  [347,] 0.0360966948 0.9830886646 0.0169113354 0.9864867458 1.351325e-02 #>  [348,] 0.0366014314 0.9828474212 0.0171525788 0.9862933008 1.370670e-02 #>  [349,] 0.0371129540 0.9826027974 0.0173972026 0.9860971256 1.390287e-02 #>  [350,] 0.0376313462 0.9823547474 0.0176452526 0.9858981829 1.410182e-02 #>  [351,] 0.0381566923 0.9821032251 0.0178967749 0.9856964347 1.430357e-02 #>  [352,] 0.0386890775 0.9818481838 0.0181518162 0.9854918426 1.450816e-02 #>  [353,] 0.0392285880 0.9815895761 0.0184104239 0.9852843679 1.471563e-02 #>  [354,] 0.0397753105 0.9813273541 0.0186726459 0.9850739710 1.492603e-02 #>  [355,] 0.0403293328 0.9810614693 0.0189385307 0.9848606123 1.513939e-02 #>  [356,] 0.0408907433 0.9807918726 0.0192081274 0.9846442512 1.535575e-02 #>  [357,] 0.0414596314 0.9805185143 0.0194814857 0.9844248470 1.557515e-02 #>  [358,] 0.0420360872 0.9802413441 0.0197586559 0.9842023582 1.579764e-02 #>  [359,] 0.0426202017 0.9799603111 0.0200396889 0.9839767429 1.602326e-02 #>  [360,] 0.0432120666 0.9796753638 0.0203246362 0.9837479587 1.625204e-02 #>  [361,] 0.0438117746 0.9793864500 0.0206135500 0.9835159626 1.648404e-02 #>  [362,] 0.0444194191 0.9790935170 0.0209064830 0.9832807110 1.671929e-02 #>  [363,] 0.0450350944 0.9787965112 0.0212034888 0.9830421599 1.695784e-02 #>  [364,] 0.0456588955 0.9784953788 0.0215046212 0.9828002648 1.719974e-02 #>  [365,] 0.0462909183 0.9781900650 0.0218099350 0.9825549803 1.744502e-02 #>  [366,] 0.0469312595 0.9778805144 0.0221194856 0.9823062608 1.769374e-02 #>  [367,] 0.0475800166 0.9775666712 0.0224333288 0.9820540600 1.794594e-02 #>  [368,] 0.0482372879 0.9772484785 0.0227515215 0.9817983311 1.820167e-02 #>  [369,] 0.0489031726 0.9769258792 0.0230741208 0.9815390265 1.846097e-02 #>  [370,] 0.0495777706 0.9765988151 0.0234011849 0.9812760982 1.872390e-02 #>  [371,] 0.0502611826 0.9762672278 0.0237327722 0.9810094977 1.899050e-02 #>  [372,] 0.0509535102 0.9759310577 0.0240689423 0.9807391757 1.926082e-02 #>  [373,] 0.0516548556 0.9755902449 0.0244097551 0.9804650824 1.953492e-02 #>  [374,] 0.0523653219 0.9752447287 0.0247552713 0.9801871674 1.981283e-02 #>  [375,] 0.0530850131 0.9748944476 0.0251055524 0.9799053796 2.009462e-02 #>  [376,] 0.0538140338 0.9745393395 0.0254606605 0.9796196674 2.038033e-02 #>  [377,] 0.0545524894 0.9741793415 0.0258206585 0.9793299786 2.067002e-02 #>  [378,] 0.0553004861 0.9738143902 0.0261856098 0.9790362602 2.096374e-02 #>  [379,] 0.0560581309 0.9734444213 0.0265555787 0.9787384588 2.126154e-02 #>  [380,] 0.0568255314 0.9730693697 0.0269306303 0.9784365200 2.156348e-02 #>  [381,] 0.0576027960 0.9726891698 0.0273108302 0.9781303892 2.186961e-02 #>  [382,] 0.0583900340 0.9723037551 0.0276962449 0.9778200109 2.217999e-02 #>  [383,] 0.0591873552 0.9719130584 0.0280869416 0.9775053289 2.249467e-02 #>  [384,] 0.0599948701 0.9715170118 0.0284829882 0.9771862865 2.281371e-02 #>  [385,] 0.0608126902 0.9711155466 0.0288844534 0.9768628262 2.313717e-02 #>  [386,] 0.0616409273 0.9707085934 0.0292914066 0.9765348899 2.346511e-02 #>  [387,] 0.0624796942 0.9702960821 0.0297039179 0.9762024188 2.379758e-02 #>  [388,] 0.0633291041 0.9698779416 0.0301220584 0.9758653534 2.413465e-02 #>  [389,] 0.0641892712 0.9694541002 0.0305458998 0.9755236336 2.447637e-02 #>  [390,] 0.0650603099 0.9690244856 0.0309755144 0.9751771985 2.482280e-02 #>  [391,] 0.0659423356 0.9685890243 0.0314109757 0.9748259865 2.517401e-02 #>  [392,] 0.0668354641 0.9681476425 0.0318523575 0.9744699354 2.553006e-02 #>  [393,] 0.0677398120 0.9677002653 0.0322997347 0.9741089822 2.589102e-02 #>  [394,] 0.0686554963 0.9672468171 0.0327531829 0.9737430633 2.625694e-02 #>  [395,] 0.0695826347 0.9667872215 0.0332127785 0.9733721141 2.662789e-02 #>  [396,] 0.0705213452 0.9663214014 0.0336785986 0.9729960697 2.700393e-02 #>  [397,] 0.0714717468 0.9658492788 0.0341507212 0.9726148640 2.738514e-02 #>  [398,] 0.0724339585 0.9653707749 0.0346292251 0.9722284307 2.777157e-02 #>  [399,] 0.0734081003 0.9648858103 0.0351141897 0.9718367022 2.816330e-02 #>  [400,] 0.0743942922 0.9643943044 0.0356056956 0.9714396105 2.856039e-02 #>  [401,] 0.0753926549 0.9638961762 0.0361038238 0.9710370869 2.896291e-02 #>  [402,] 0.0764033097 0.9633913436 0.0366086564 0.9706290618 2.937094e-02 #>  [403,] 0.0774263780 0.9628797239 0.0371202761 0.9702154647 2.978454e-02 #>  [404,] 0.0784619818 0.9623612335 0.0376387665 0.9697962247 3.020378e-02 #>  [405,] 0.0795102433 0.9618357879 0.0381642121 0.9693712698 3.062873e-02 #>  [406,] 0.0805712853 0.9613033019 0.0386966981 0.9689405275 3.105947e-02 #>  [407,] 0.0816452307 0.9607636895 0.0392363105 0.9685039243 3.149608e-02 #>  [408,] 0.0827322028 0.9602168639 0.0397831361 0.9680613861 3.193861e-02 #>  [409,] 0.0838323251 0.9596627372 0.0403372628 0.9676128380 3.238716e-02 #>  [410,] 0.0849457214 0.9591012210 0.0408987790 0.9671582040 3.284180e-02 #>  [411,] 0.0860725158 0.9585322259 0.0414677741 0.9666974078 3.330259e-02 #>  [412,] 0.0872128324 0.9579556619 0.0420443381 0.9662303721 3.376963e-02 #>  [413,] 0.0883667956 0.9573714379 0.0426285621 0.9657570186 3.424298e-02 #>  [414,] 0.0895345298 0.9567794621 0.0432205379 0.9652772685 3.472273e-02 #>  [415,] 0.0907161596 0.9561796419 0.0438203581 0.9647910421 3.520896e-02 #>  [416,] 0.0919118097 0.9555718838 0.0444281162 0.9642982588 3.570174e-02 #>  [417,] 0.0931216048 0.9549560937 0.0450439063 0.9637988373 3.620116e-02 #>  [418,] 0.0943456694 0.9543321764 0.0456678236 0.9632926955 3.670730e-02 #>  [419,] 0.0955841282 0.9537000360 0.0462999640 0.9627797504 3.722025e-02 #>  [420,] 0.0968371058 0.9530595758 0.0469404242 0.9622599183 3.774008e-02 #>  [421,] 0.0981047265 0.9524106984 0.0475893016 0.9617331146 3.826689e-02 #>  [422,] 0.0993871147 0.9517533052 0.0482466948 0.9611992539 3.880075e-02 #>  [423,] 0.1006843944 0.9510872974 0.0489127026 0.9606582499 3.934175e-02 #>  [424,] 0.1019966896 0.9504125748 0.0495874252 0.9601100158 3.988998e-02 #>  [425,] 0.1033241237 0.9497290367 0.0502709633 0.9595544635 4.044554e-02 #>  [426,] 0.1046668201 0.9490365817 0.0509634183 0.9589915045 4.100850e-02 #>  [427,] 0.1060249018 0.9483351073 0.0516648927 0.9584210492 4.157895e-02 #>  [428,] 0.1073984911 0.9476245105 0.0523754895 0.9578430074 4.215699e-02 #>  [429,] 0.1087877103 0.9469046874 0.0530953126 0.9572572878 4.274271e-02 #>  [430,] 0.1101926809 0.9461755333 0.0538244667 0.9566637986 4.333620e-02 #>  [431,] 0.1116135239 0.9454369428 0.0545630572 0.9560624469 4.393755e-02 #>  [432,] 0.1130503599 0.9446888097 0.0553111903 0.9554531392 4.454686e-02 #>  [433,] 0.1145033088 0.9439310270 0.0560689730 0.9548357810 4.516422e-02 #>  [434,] 0.1159724895 0.9431634870 0.0568365130 0.9542102771 4.578972e-02 #>  [435,] 0.1174580207 0.9423860813 0.0576139187 0.9535765315 4.642347e-02 #>  [436,] 0.1189600200 0.9415987008 0.0584012992 0.9529344472 4.706555e-02 #>  [437,] 0.1204786041 0.9408012354 0.0591987646 0.9522839266 4.771607e-02 #>  [438,] 0.1220138891 0.9399935747 0.0600064253 0.9516248712 4.837513e-02 #>  [439,] 0.1235659899 0.9391756073 0.0608243927 0.9509571818 4.904282e-02 #>  [440,] 0.1251350204 0.9383472213 0.0616527787 0.9502807581 4.971924e-02 #>  [441,] 0.1267210938 0.9375083039 0.0624916961 0.9495954994 5.040450e-02 #>  [442,] 0.1283243217 0.9366587418 0.0633412582 0.9489013040 5.109870e-02 #>  [443,] 0.1299448148 0.9357984210 0.0642015790 0.9481980692 5.180193e-02 #>  [444,] 0.1315826826 0.9349272269 0.0650727731 0.9474856920 5.251431e-02 #>  [445,] 0.1332380333 0.9340450442 0.0659549558 0.9467640682 5.323593e-02 #>  [446,] 0.1349109736 0.9331517569 0.0668482431 0.9460330931 5.396691e-02 #>  [447,] 0.1366016089 0.9322472487 0.0677527513 0.9452926610 5.470734e-02 #>  [448,] 0.1383100431 0.9313314023 0.0686685977 0.9445426656 5.545733e-02 #>  [449,] 0.1400363787 0.9304041003 0.0695958997 0.9437829998 5.621700e-02 #>  [450,] 0.1417807164 0.9294652243 0.0705347757 0.9430135558 5.698644e-02 #>  [451,] 0.1435431553 0.9285146557 0.0714853443 0.9422342250 5.776578e-02 #>  [452,] 0.1453237928 0.9275522752 0.0724477248 0.9414448980 5.855510e-02 #>  [453,] 0.1471227246 0.9265779630 0.0734220370 0.9406454649 5.935454e-02 #>  [454,] 0.1489400443 0.9255915989 0.0744084011 0.9398358149 6.016419e-02 #>  [455,] 0.1507758438 0.9245930622 0.0754069378 0.9390158366 6.098416e-02 #>  [456,] 0.1526302128 0.9235822318 0.0764177682 0.9381854178 6.181458e-02 #>  [457,] 0.1545032391 0.9225589861 0.0774410139 0.9373444457 6.265555e-02 #>  [458,] 0.1563950083 0.9215232032 0.0784767968 0.9364928069 6.350719e-02 #>  [459,] 0.1583056038 0.9204747608 0.0795252392 0.9356303872 6.436961e-02 #>  [460,] 0.1602351067 0.9194135363 0.0805864637 0.9347570719 6.524293e-02 #>  [461,] 0.1621835957 0.9183394065 0.0816605935 0.9338727455 6.612725e-02 #>  [462,] 0.1641511471 0.9172522483 0.0827477517 0.9329772921 6.702271e-02 #>  [463,] 0.1661378349 0.9161519382 0.0838480618 0.9320705951 6.792940e-02 #>  [464,] 0.1681437302 0.9150383522 0.0849616478 0.9311525372 6.884746e-02 #>  [465,] 0.1701689017 0.9139113664 0.0860886336 0.9302230007 6.977700e-02 #>  [466,] 0.1722134153 0.9127708567 0.0872291433 0.9292818674 7.071813e-02 #>  [467,] 0.1742773341 0.9116166986 0.0883833014 0.9283290183 7.167098e-02 #>  [468,] 0.1763607183 0.9104487677 0.0895512323 0.9273643341 7.263567e-02 #>  [469,] 0.1784636254 0.9092669394 0.0907330606 0.9263876949 7.361231e-02 #>  [470,] 0.1805861095 0.9080710890 0.0919289110 0.9253989805 7.460102e-02 #>  [471,] 0.1827282220 0.9068610920 0.0931389080 0.9243980701 7.560193e-02 #>  [472,] 0.1848900108 0.9056368236 0.0943631764 0.9233848424 7.661516e-02 #>  [473,] 0.1870715208 0.9043981592 0.0956018408 0.9223591759 7.764082e-02 #>  [474,] 0.1892727935 0.9031449744 0.0968550256 0.9213209484 7.867905e-02 #>  [475,] 0.1914938670 0.9018771445 0.0981228555 0.9202700377 7.972996e-02 #>  [476,] 0.1937347760 0.9005945455 0.0994054545 0.9192063210 8.079368e-02 #>  [477,] 0.1959955516 0.8992970531 0.1007029469 0.9181296752 8.187032e-02 #>  [478,] 0.1982762214 0.8979845436 0.1020154564 0.9170399771 8.296002e-02 #>  [479,] 0.2005768091 0.8966568933 0.1033431067 0.9159371030 8.406290e-02 #>  [480,] 0.2028973349 0.8953139790 0.1046860210 0.9148209291 8.517907e-02 #>  [481,] 0.2052378150 0.8939556778 0.1060443222 0.9136913313 8.630867e-02 #>  [482,] 0.2075982619 0.8925818670 0.1074181330 0.9125481855 8.745181e-02 #>  [483,] 0.2099786838 0.8911924248 0.1088075752 0.9113913672 8.860863e-02 #>  [484,] 0.2123790852 0.8897872293 0.1102127707 0.9102207519 8.977925e-02 #>  [485,] 0.2147994663 0.8883661597 0.1116338403 0.9090362150 9.096378e-02 #>  [486,] 0.2172398232 0.8869290955 0.1130709045 0.9078376320 9.216237e-02 #>  [487,] 0.2197001477 0.8854759167 0.1145240833 0.9066248781 9.337512e-02 #>  [488,] 0.2221804273 0.8840065043 0.1159934957 0.9053978287 9.460217e-02 #>  [489,] 0.2246806451 0.8825207398 0.1174792602 0.9041563591 9.584364e-02 #>  [490,] 0.2272007798 0.8810185056 0.1189814944 0.9029003450 9.709966e-02 #>  [491,] 0.2297408057 0.8794996848 0.1205003152 0.9016296617 9.837034e-02 #>  [492,] 0.2323006922 0.8779641615 0.1220358385 0.9003441852 9.965581e-02 #>  [493,] 0.2348804043 0.8764118209 0.1235881791 0.8990437913 1.009562e-01 #>  [494,] 0.2374799024 0.8748425488 0.1251574512 0.8977283563 1.022716e-01 #>  [495,] 0.2400991420 0.8732562323 0.1267437677 0.8963977566 1.036022e-01 #>  [496,] 0.2427380737 0.8716527597 0.1283472403 0.8950518690 1.049481e-01 #>  [497,] 0.2453966434 0.8700320203 0.1299679797 0.8936905707 1.063094e-01 #>  [498,] 0.2480747921 0.8683939046 0.1316060954 0.8923137392 1.076863e-01 #>  [499,] 0.2507724557 0.8667383047 0.1332616953 0.8909212526 1.090787e-01 #>  [500,] 0.2534895652 0.8650651135 0.1349348865 0.8895129893 1.104870e-01 #>  [501,] 0.2562260464 0.8633742259 0.1366257741 0.8880888284 1.119112e-01 #>  [502,] 0.2589818202 0.8616655378 0.1383344622 0.8866486496 1.133514e-01 #>  [503,] 0.2617568021 0.8599389470 0.1400610530 0.8851923331 1.148077e-01 #>  [504,] 0.2645509026 0.8581943527 0.1418056473 0.8837197599 1.162802e-01 #>  [505,] 0.2673640268 0.8564316557 0.1435683443 0.8822308118 1.177692e-01 #>  [506,] 0.2701960746 0.8546507587 0.1453492413 0.8807253713 1.192746e-01 #>  [507,] 0.2730469408 0.8528515662 0.1471484338 0.8792033216 1.207967e-01 #>  [508,] 0.2759165145 0.8510339843 0.1489660157 0.8776645472 1.223355e-01 #>  [509,] 0.2788046796 0.8491979215 0.1508020785 0.8761089331 1.238911e-01 #>  [510,] 0.2817113146 0.8473432878 0.1526567122 0.8745363656 1.254636e-01 #>  [511,] 0.2846362927 0.8454699956 0.1545300044 0.8729467320 1.270533e-01 #>  [512,] 0.2875794815 0.8435779593 0.1564220407 0.8713399208 1.286601e-01 #>  [513,] 0.2905407431 0.8416670955 0.1583329045 0.8697158213 1.302842e-01 #>  [514,] 0.2935199343 0.8397373233 0.1602626767 0.8680743247 1.319257e-01 #>  [515,] 0.2965169063 0.8377885638 0.1622114362 0.8664153228 1.335847e-01 #>  [516,] 0.2995315049 0.8358207408 0.1641792592 0.8647387093 1.352613e-01 #>  [517,] 0.3025635703 0.8338337804 0.1661662196 0.8630443790 1.369556e-01 #>  [518,] 0.3056129371 0.8318276115 0.1681723885 0.8613322283 1.386678e-01 #>  [519,] 0.3086794348 0.8298021655 0.1701978345 0.8596021552 1.403978e-01 #>  [520,] 0.3117628869 0.8277573764 0.1722426236 0.8578540592 1.421459e-01 #>  [521,] 0.3148631117 0.8256931813 0.1743068187 0.8560878416 1.439122e-01 #>  [522,] 0.3179799220 0.8236095199 0.1763904801 0.8543034053 1.456966e-01 #>  [523,] 0.3211131250 0.8215063348 0.1784936652 0.8525006551 1.474993e-01 #>  [524,] 0.3242625225 0.8193835720 0.1806164280 0.8506794977 1.493205e-01 #>  [525,] 0.3274279110 0.8172411801 0.1827588199 0.8488398417 1.511602e-01 #>  [526,] 0.3306090814 0.8150791112 0.1849208888 0.8469815977 1.530184e-01 #>  [527,] 0.3338058194 0.8128973205 0.1871026795 0.8451046785 1.548953e-01 #>  [528,] 0.3370179051 0.8106957665 0.1893042335 0.8432089988 1.567910e-01 #>  [529,] 0.3402451135 0.8084744112 0.1915255888 0.8412944758 1.587055e-01 #>  [530,] 0.3434872142 0.8062332200 0.1937667800 0.8393610288 1.606390e-01 #>  [531,] 0.3467439718 0.8039721617 0.1960278383 0.8374085796 1.625914e-01 #>  [532,] 0.3500151453 0.8016912089 0.1983087911 0.8354370524 1.645629e-01 #>  [533,] 0.3533004888 0.7993903378 0.2006096622 0.8334463738 1.665536e-01 #>  [534,] 0.3565997514 0.7970695284 0.2029304716 0.8314364732 1.685635e-01 #>  [535,] 0.3599126770 0.7947287645 0.2052712355 0.8294072824 1.705927e-01 #>  [536,] 0.3632390046 0.7923680337 0.2076319663 0.8273587362 1.726413e-01 #>  [537,] 0.3665784683 0.7899873277 0.2100126723 0.8252907720 1.747092e-01 #>  [538,] 0.3699307972 0.7875866422 0.2124133578 0.8232033301 1.767967e-01 #>  [539,] 0.3732957159 0.7851659771 0.2148340229 0.8210963539 1.789036e-01 #>  [540,] 0.3766729441 0.7827253362 0.2172746638 0.8189697898 1.810302e-01 #>  [541,] 0.3800621970 0.7802647279 0.2197352721 0.8168235870 1.831764e-01 #>  [542,] 0.3834631851 0.7777841647 0.2222158353 0.8146576983 1.853423e-01 #>  [543,] 0.3868756146 0.7752836636 0.2247163364 0.8124720795 1.875279e-01 #>  [544,] 0.3902991872 0.7727632459 0.2272367541 0.8102666898 1.897333e-01 #>  [545,] 0.3937336006 0.7702229374 0.2297770626 0.8080414917 1.919585e-01 #>  [546,] 0.3971785481 0.7676627688 0.2323372312 0.8057964514 1.942035e-01 #>  [547,] 0.4006337188 0.7650827750 0.2349172250 0.8035315385 1.964685e-01 #>  [548,] 0.4040987981 0.7624829959 0.2375170041 0.8012467262 1.987533e-01 #>  [549,] 0.4075734675 0.7598634761 0.2401365239 0.7989419914 2.010580e-01 #>  [550,] 0.4110574045 0.7572242647 0.2427757353 0.7966173148 2.033827e-01 #>  [551,] 0.4145502831 0.7545654162 0.2454345838 0.7942726810 2.057273e-01 #>  [552,] 0.4180517739 0.7518869896 0.2481130104 0.7919080784 2.080919e-01 #>  [553,] 0.4215615439 0.7491890490 0.2508109510 0.7895234994 2.104765e-01 #>  [554,] 0.4250792567 0.7464716636 0.2535283364 0.7871189406 2.128811e-01 #>  [555,] 0.4286045731 0.7437349075 0.2562650925 0.7846944026 2.153056e-01 #>  [556,] 0.4321371504 0.7409788600 0.2590211400 0.7822498902 2.177501e-01 #>  [557,] 0.4356766434 0.7382036057 0.2617963943 0.7797854123 2.202146e-01 #>  [558,] 0.4392227037 0.7354092340 0.2645907660 0.7773009826 2.226990e-01 #>  [559,] 0.4427749806 0.7325958401 0.2674041599 0.7747966187 2.252034e-01 #>  [560,] 0.4463331207 0.7297635239 0.2702364761 0.7722723428 2.277277e-01 #>  [561,] 0.4498967681 0.7269123910 0.2730876090 0.7697281818 2.302718e-01 #>  [562,] 0.4534655650 0.7240425521 0.2759574479 0.7671641671 2.328358e-01 #>  [563,] 0.4570391511 0.7211541235 0.2788458765 0.7645803345 2.354197e-01 #>  [564,] 0.4606171644 0.7182472268 0.2817527732 0.7619767249 2.380233e-01 #>  [565,] 0.4641992409 0.7153219889 0.2846780111 0.7593533837 2.406466e-01 #>  [566,] 0.4677850152 0.7123785422 0.2876214578 0.7567103612 2.432896e-01 #>  [567,] 0.4713741201 0.7094170246 0.2905829754 0.7540477125 2.459523e-01 #>  [568,] 0.4749661871 0.7064375795 0.2935624205 0.7513654978 2.486345e-01 #>  [569,] 0.4785608466 0.7034403558 0.2965596442 0.7486637822 2.513362e-01 #>  [570,] 0.4821577277 0.7004255078 0.2995744922 0.7459426356 2.540574e-01 #>  [571,] 0.4857564588 0.6973931952 0.3026068048 0.7432021334 2.567979e-01 #>  [572,] 0.4893566675 0.6943435836 0.3056564164 0.7404423558 2.595576e-01 #>  [573,] 0.4929579806 0.6912768436 0.3087231564 0.7376633883 2.623366e-01 #>  [574,] 0.4965600247 0.6881931518 0.3118068482 0.7348653214 2.651347e-01 #>  [575,] 0.5001624259 0.6850926898 0.3149073102 0.7320482513 2.679517e-01 #>  [576,] 0.5037648102 0.6819756451 0.3180243549 0.7292122789 2.707877e-01 #>  [577,] 0.5073668037 0.6788422105 0.3211577895 0.7263575109 2.736425e-01 #>  [578,] 0.5109680325 0.6756925841 0.3243074159 0.7234840591 2.765159e-01 #>  [579,] 0.5145681232 0.6725269698 0.3274730302 0.7205920407 2.794080e-01 #>  [580,] 0.5181667028 0.6693455765 0.3306544235 0.7176815783 2.823184e-01 #>  [581,] 0.5217633988 0.6661486188 0.3338513812 0.7147527999 2.852472e-01 #>  [582,] 0.5253578397 0.6629363165 0.3370636835 0.7118058391 2.881942e-01 #>  [583,] 0.5289496548 0.6597088947 0.3402911053 0.7088408348 2.911592e-01 #>  [584,] 0.5325384744 0.6564665839 0.3435334161 0.7058579314 2.941421e-01 #>  [585,] 0.5361239303 0.6532096197 0.3467903803 0.7028572789 2.971427e-01 #>  [586,] 0.5397056554 0.6499382430 0.3500617570 0.6998390325 3.001610e-01 #>  [587,] 0.5432832844 0.6466526998 0.3533473002 0.6968033534 3.031966e-01 #>  [588,] 0.5468564534 0.6433532411 0.3566467589 0.6937504078 3.062496e-01 #>  [589,] 0.5504248007 0.6400401231 0.3599598769 0.6906803676 3.093196e-01 #>  [590,] 0.5539879661 0.6367136069 0.3632863931 0.6875934104 3.124066e-01 #>  [591,] 0.5575455921 0.6333739584 0.3666260416 0.6844897190 3.155103e-01 #>  [592,] 0.5610973228 0.6300214485 0.3699785515 0.6813694817 3.186305e-01 #>  [593,] 0.5646428053 0.6266563528 0.3733436472 0.6782328925 3.217671e-01 #>  [594,] 0.5681816889 0.6232789517 0.3767210483 0.6750801507 3.249198e-01 #>  [595,] 0.5717136256 0.6198895299 0.3801104701 0.6719114610 3.280885e-01 #>  [596,] 0.5752382703 0.6164883771 0.3835116229 0.6687270335 3.312730e-01 #>  [597,] 0.5787552808 0.6130757871 0.3869242129 0.6655270838 3.344729e-01 #>  [598,] 0.5822643179 0.6096520581 0.3903479419 0.6623118327 3.376882e-01 #>  [599,] 0.5857650457 0.6062174928 0.3937825072 0.6590815064 3.409185e-01 #>  [600,] 0.5892571315 0.6027723978 0.3972276022 0.6558363364 3.441637e-01 #>  [601,] 0.5927402461 0.5993170840 0.4006829160 0.6525765593 3.474234e-01 #>  [602,] 0.5962140639 0.5958518661 0.4041481339 0.6493024169 3.506976e-01 #>  [603,] 0.5996782627 0.5923770627 0.4076229373 0.6460141563 3.539858e-01 #>  [604,] 0.6031325244 0.5888929963 0.4111070037 0.6427120295 3.572880e-01 #>  [605,] 0.6065765346 0.5853999929 0.4146000071 0.6393962936 3.606037e-01 #>  [606,] 0.6100099830 0.5818983820 0.4181016180 0.6360672107 3.639328e-01 #>  [607,] 0.6134325632 0.5783884968 0.4216115032 0.6327250476 3.672750e-01 #>  [608,] 0.6168439731 0.5748706734 0.4251293266 0.6293700762 3.706299e-01 #>  [609,] 0.6202439149 0.5713452514 0.4286547486 0.6260025729 3.739974e-01 #>  [610,] 0.6236320953 0.5678125733 0.4321874267 0.6226228191 3.773772e-01 #>  [611,] 0.6270082251 0.5642729846 0.4357270154 0.6192311005 3.807689e-01 #>  [612,] 0.6303720199 0.5607268334 0.4392731666 0.6158277073 3.841723e-01 #>  [613,] 0.6337232000 0.5571744706 0.4428255294 0.6124129345 3.875871e-01 #>  [614,] 0.6370614901 0.5536162498 0.4463837502 0.6089870811 3.910129e-01 #>  [615,] 0.6403866200 0.5500525266 0.4499474734 0.6055504504 3.944495e-01 #>  [616,] 0.6436983242 0.5464836591 0.4535163409 0.6021033501 3.978966e-01 #>  [617,] 0.6469963421 0.5429100075 0.4570899925 0.5986460915 4.013539e-01 #>  [618,] 0.6502804181 0.5393319339 0.4606680661 0.5951789904 4.048210e-01 #>  [619,] 0.6535503016 0.5357498022 0.4642501978 0.5917023660 4.082976e-01 #>  [620,] 0.6568057473 0.5321639780 0.4678360220 0.5882165415 4.117835e-01 #>  [621,] 0.6600465147 0.5285748284 0.4714251716 0.5847218436 4.152782e-01 #>  [622,] 0.6632723688 0.5249827220 0.4750172780 0.5812186026 4.187814e-01 #>  [623,] 0.6664830797 0.5213880283 0.4786119717 0.5777071521 4.222928e-01 #>  [624,] 0.6696784227 0.5177911183 0.4822088817 0.5741878291 4.258122e-01 #>  [625,] 0.6728581787 0.5141923635 0.4858076365 0.5706609736 4.293390e-01 #>  [626,] 0.6760221337 0.5105921365 0.4894078635 0.5671269287 4.328731e-01 #>  [627,] 0.6791700792 0.5069908104 0.4930091896 0.5635860405 4.364140e-01 #>  [628,] 0.6823018121 0.5033887586 0.4966112414 0.5600386576 4.399613e-01 #>  [629,] 0.6854171345 0.4997863551 0.5002136449 0.5564851316 4.435149e-01 #>  [630,] 0.6885158545 0.4961839737 0.5038160263 0.5529258162 4.470742e-01 #>  [631,] 0.6915977851 0.4925819885 0.5074180115 0.5493610677 4.506389e-01 #>  [632,] 0.6946627451 0.4889807732 0.5110192268 0.5457912446 4.542088e-01 #>  [633,] 0.6977105587 0.4853807013 0.5146192987 0.5422167074 4.577833e-01 #>  [634,] 0.7007410557 0.4817821459 0.5182178541 0.5386378186 4.613622e-01 #>  [635,] 0.7037540713 0.4781854794 0.5218145206 0.5350549425 4.649451e-01 #>  [636,] 0.7067494462 0.4745910732 0.5254089268 0.5314684449 4.685316e-01 #>  [637,] 0.7097270266 0.4709992982 0.5290007018 0.5278786933 4.721213e-01 #>  [638,] 0.7126866643 0.4674105238 0.5325894762 0.5242860563 4.757139e-01 #>  [639,] 0.7156282165 0.4638251184 0.5361748816 0.5206909040 4.793091e-01 #>  [640,] 0.7185515458 0.4602434489 0.5397565511 0.5170936073 4.829064e-01 #>  [641,] 0.7214565205 0.4566658808 0.5433341192 0.5134945380 4.865055e-01 #>  [642,] 0.7243430140 0.4530927778 0.5469072222 0.5098940688 4.901059e-01 #>  [643,] 0.7272109054 0.4495245017 0.5504754983 0.5062925728 4.937074e-01 #>  [644,] 0.7300600791 0.4459614125 0.5540385875 0.5026904236 4.973096e-01 #>  [645,] 0.7328904248 0.4424038679 0.5575961321 0.4990879951 5.009120e-01 #>  [646,] 0.7357018375 0.4388522235 0.5611477765 0.4954856613 5.045143e-01 #>  [647,] 0.7384942178 0.4353068324 0.5646931676 0.4918837961 5.081162e-01 #>  [648,] 0.7412674712 0.4317680451 0.5682319549 0.4882827734 5.117172e-01 #>  [649,] 0.7440215086 0.4282362097 0.5717637903 0.4846829664 5.153170e-01 #>  [650,] 0.7467562462 0.4247116711 0.5752883289 0.4810847480 5.189153e-01 #>  [651,] 0.7494716051 0.4211947716 0.5788052284 0.4774884907 5.225115e-01 #>  [652,] 0.7521675117 0.4176858503 0.5823141497 0.4738945657 5.261054e-01 #>  [653,] 0.7548438974 0.4141852431 0.5858147569 0.4703033435 5.296967e-01 #>  [654,] 0.7575006987 0.4106932825 0.5893067175 0.4667151934 5.332848e-01 #>  [655,] 0.7601378568 0.4072102978 0.5927897022 0.4631304837 5.368695e-01 #>  [656,] 0.7627553181 0.4037366146 0.5962633854 0.4595495808 5.404504e-01 #>  [657,] 0.7653530337 0.4002725548 0.5997274452 0.4559728499 5.440272e-01 #>  [658,] 0.7679309597 0.3968184367 0.6031815633 0.4524006544 5.475993e-01 #>  [659,] 0.7704890566 0.3933745745 0.6066254255 0.4488333557 5.511666e-01 #>  [660,] 0.7730272899 0.3899412785 0.6100587215 0.4452713135 5.547287e-01 #>  [661,] 0.7755456296 0.3865188550 0.6134811450 0.4417148850 5.582851e-01 #>  [662,] 0.7780440503 0.3831076061 0.6168923939 0.4381644253 5.618356e-01 #>  [663,] 0.7805225311 0.3797078294 0.6202921706 0.4346202871 5.653797e-01 #>  [664,] 0.7829810554 0.3763198184 0.6236801816 0.4310828204 5.689172e-01 #>  [665,] 0.7854196113 0.3729438620 0.6270561380 0.4275523726 5.724476e-01 #>  [666,] 0.7878381908 0.3695802446 0.6304197554 0.4240292883 5.759707e-01 #>  [667,] 0.7902367905 0.3662292459 0.6337707541 0.4205139090 5.794861e-01 #>  [668,] 0.7926154109 0.3628911409 0.6371088591 0.4170065733 5.829934e-01 #>  [669,] 0.7949740569 0.3595662001 0.6404337999 0.4135076164 5.864924e-01 #>  [670,] 0.7973127371 0.3562546887 0.6437453113 0.4100173703 5.899826e-01 #>  [671,] 0.7996314642 0.3529568672 0.6470431328 0.4065361634 5.934638e-01 #>  [672,] 0.8019302550 0.3496729913 0.6503270087 0.4030643207 5.969357e-01 #>  [673,] 0.8042091297 0.3464033113 0.6535966887 0.3996021634 6.003978e-01 #>  [674,] 0.8064681127 0.3431480727 0.6568519273 0.3961500091 6.038500e-01 #>  [675,] 0.8087072317 0.3399075156 0.6600924844 0.3927081711 6.072918e-01 #>  [676,] 0.8109265182 0.3366818753 0.6633181247 0.3892769590 6.107230e-01 #>  [677,] 0.8131260071 0.3334713813 0.6665286187 0.3858566783 6.141433e-01 #>  [678,] 0.8153057370 0.3302762583 0.6697237417 0.3824476302 6.175524e-01 #>  [679,] 0.8174657496 0.3270967255 0.6729032745 0.3790501116 6.209499e-01 #>  [680,] 0.8196060901 0.3239329967 0.6760670033 0.3756644150 6.243356e-01 #>  [681,] 0.8217268067 0.3207852803 0.6792147197 0.3722908285 6.277092e-01 #>  [682,] 0.8238279510 0.3176537794 0.6823462206 0.3689296356 6.310704e-01 #>  [683,] 0.8259095776 0.3145386916 0.6854613084 0.3655811151 6.344189e-01 #>  [684,] 0.8279717440 0.3114402091 0.6885597909 0.3622455412 6.377545e-01 #>  [685,] 0.8300145108 0.3083585185 0.6916414815 0.3589231831 6.410768e-01 #>  [686,] 0.8320379414 0.3052938011 0.6947061989 0.3556143054 6.443857e-01 #>  [687,] 0.8340421018 0.3022462324 0.6977537676 0.3523191676 6.476808e-01 #>  [688,] 0.8360270609 0.2992159829 0.7007840171 0.3490380242 6.509620e-01 #>  [689,] 0.8379928904 0.2962032170 0.7037967830 0.3457711248 6.542289e-01 #>  [690,] 0.8399396641 0.2932080941 0.7067919059 0.3425187136 6.574813e-01 #>  [691,] 0.8418674587 0.2902307677 0.7097692323 0.3392810301 6.607190e-01 #>  [692,] 0.8437763532 0.2872713862 0.7127286138 0.3360583082 6.639417e-01 #>  [693,] 0.8456664288 0.2843300921 0.7156699079 0.3328507766 6.671492e-01 #>  [694,] 0.8475377691 0.2814070228 0.7185929772 0.3296586589 6.703413e-01 #>  [695,] 0.8493904600 0.2785023101 0.7214976899 0.3264821733 6.735178e-01 #>  [696,] 0.8512245894 0.2756160802 0.7243839198 0.3233215324 6.766785e-01 #>  [697,] 0.8530402472 0.2727484541 0.7272515459 0.3201769439 6.798231e-01 #>  [698,] 0.8548375254 0.2698995474 0.7301004526 0.3170486095 6.829514e-01 #>  [699,] 0.8566165179 0.2670694702 0.7329305298 0.3139367259 6.860633e-01 #>  [700,] 0.8583773205 0.2642583273 0.7357416727 0.3108414842 6.891585e-01 #>  [701,] 0.8601200307 0.2614662183 0.7385337817 0.3077630700 6.922369e-01 #>  [702,] 0.8618447479 0.2586932375 0.7413067625 0.3047016634 6.952983e-01 #>  [703,] 0.8635515729 0.2559394739 0.7440605261 0.3016574391 6.983426e-01 #>  [704,] 0.8652406083 0.2532050113 0.7467949887 0.2986305662 7.013694e-01 #>  [705,] 0.8669119581 0.2504899285 0.7495100715 0.2956212082 7.043788e-01 #>  [706,] 0.8685657278 0.2477942990 0.7522057010 0.2926295234 7.073705e-01 #>  [707,] 0.8702020244 0.2451181913 0.7548818087 0.2896556644 7.103443e-01 #>  [708,] 0.8718209562 0.2424616689 0.7575383311 0.2866997783 7.133002e-01 #>  [709,] 0.8734226326 0.2398247905 0.7601752095 0.2837620067 7.162380e-01 #>  [710,] 0.8750071645 0.2372076096 0.7627923904 0.2808424858 7.191575e-01 #>  [711,] 0.8765746638 0.2346101750 0.7653898250 0.2779413463 7.220587e-01 #>  [712,] 0.8781252435 0.2320325307 0.7679674693 0.2750587137 7.249413e-01 #>  [713,] 0.8796590177 0.2294747160 0.7705252840 0.2721947076 7.278053e-01 #>  [714,] 0.8811761015 0.2269367653 0.7730632347 0.2693494427 7.306506e-01 #>  [715,] 0.8826766110 0.2244187086 0.7755812914 0.2665230280 7.334770e-01 #>  [716,] 0.8841606629 0.2219205713 0.7780794287 0.2637155673 7.362844e-01 #>  [717,] 0.8856283751 0.2194423742 0.7805576258 0.2609271593 7.390728e-01 #>  [718,] 0.8870798661 0.2169841337 0.7830158663 0.2581578971 7.418421e-01 #>  [719,] 0.8885152550 0.2145458618 0.7854541382 0.2554078687 7.445921e-01 #>  [720,] 0.8899346618 0.2121275663 0.7878724337 0.2526771571 7.473228e-01 #>  [721,] 0.8913382070 0.2097292507 0.7902707493 0.2499658398 7.500342e-01 #>  [722,] 0.8927260118 0.2073509143 0.7926490857 0.2472739895 7.527260e-01 #>  [723,] 0.8940981977 0.2049925523 0.7950074477 0.2446016737 7.553983e-01 #>  [724,] 0.8954548869 0.2026541559 0.7973458441 0.2419489551 7.580510e-01 #>  [725,] 0.8967962020 0.2003357123 0.7996642877 0.2393158911 7.606841e-01 #>  [726,] 0.8981222660 0.1980372049 0.8019627951 0.2367025345 7.632975e-01 #>  [727,] 0.8994332020 0.1957586131 0.8042413869 0.2341089331 7.658911e-01 #>  [728,] 0.9007291338 0.1934999128 0.8065000872 0.2315351300 7.684649e-01 #>  [729,] 0.9020101853 0.1912610760 0.8087389240 0.2289811635 7.710188e-01 #>  [730,] 0.9032764804 0.1890420712 0.8109579288 0.2264470672 7.735529e-01 #>  [731,] 0.9045281437 0.1868428635 0.8131571365 0.2239328702 7.760671e-01 #>  [732,] 0.9057652994 0.1846634142 0.8153365858 0.2214385970 7.785614e-01 #>  [733,] 0.9069880721 0.1825036816 0.8174963184 0.2189642674 7.810357e-01 #>  [734,] 0.9081965865 0.1803636205 0.8196363795 0.2165098972 7.834901e-01 #>  [735,] 0.9093909672 0.1782431825 0.8217568175 0.2140754974 7.859245e-01 #>  [736,] 0.9105713389 0.1761423161 0.8238576839 0.2116610750 7.883389e-01 #>  [737,] 0.9117378262 0.1740609666 0.8259390334 0.2092666327 7.907334e-01 #>  [738,] 0.9128905537 0.1719990765 0.8280009235 0.2068921689 7.931078e-01 #>  [739,] 0.9140296458 0.1699565850 0.8300434150 0.2045376782 7.954623e-01 #>  [740,] 0.9151552269 0.1679334290 0.8320665710 0.2022031509 7.977968e-01 #>  [741,] 0.9162674212 0.1659295421 0.8340704579 0.1998885735 8.001114e-01 #>  [742,] 0.9173663526 0.1639448554 0.8360551446 0.1975939286 8.024061e-01 #>  [743,] 0.9184521450 0.1619792974 0.8380207026 0.1953191950 8.046808e-01 #>  [744,] 0.9195249217 0.1600327940 0.8399672060 0.1930643476 8.069357e-01 #>  [745,] 0.9205848062 0.1581052687 0.8418947313 0.1908293580 8.091706e-01 #>  [746,] 0.9216319213 0.1561966424 0.8438033576 0.1886141938 8.113858e-01 #>  [747,] 0.9226663897 0.1543068337 0.8456931663 0.1864188195 8.135812e-01 #>  [748,] 0.9236883336 0.1524357591 0.8475642409 0.1842431958 8.157568e-01 #>  [749,] 0.9246978750 0.1505833328 0.8494166672 0.1820872803 8.179127e-01 #>  [750,] 0.9256951353 0.1487494667 0.8512505333 0.1799510272 8.200490e-01 #>  [751,] 0.9266802356 0.1469340709 0.8530659291 0.1778343874 8.221656e-01 #>  [752,] 0.9276532966 0.1451370533 0.8548629467 0.1757373088 8.242627e-01 #>  [753,] 0.9286144385 0.1433583201 0.8566416799 0.1736597363 8.263403e-01 #>  [754,] 0.9295637809 0.1415977754 0.8584022246 0.1716016115 8.283984e-01 #>  [755,] 0.9305014431 0.1398553217 0.8601446783 0.1695628734 8.304371e-01 #>  [756,] 0.9314275437 0.1381308596 0.8618691404 0.1675434581 8.324565e-01 #>  [757,] 0.9323422009 0.1364242883 0.8635757117 0.1655432987 8.344567e-01 #>  [758,] 0.9332455323 0.1347355051 0.8652644949 0.1635623259 8.364377e-01 #>  [759,] 0.9341376549 0.1330644060 0.8669355940 0.1616004677 8.383995e-01 #>  [760,] 0.9350186851 0.1314108854 0.8685891146 0.1596576494 8.403424e-01 #>  [761,] 0.9358887387 0.1297748365 0.8702251635 0.1577337940 8.422662e-01 #>  [762,] 0.9367479310 0.1281561508 0.8718438492 0.1558288221 8.441712e-01 #>  [763,] 0.9375963766 0.1265547189 0.8734452811 0.1539426518 8.460573e-01 #>  [764,] 0.9384341893 0.1249704300 0.8750295700 0.1520751990 8.479248e-01 #>  [765,] 0.9392614825 0.1234031721 0.8765968279 0.1502263776 8.497736e-01 #>  [766,] 0.9400783687 0.1218528321 0.8781471679 0.1483960992 8.516039e-01 #>  [767,] 0.9408849598 0.1203192960 0.8796807040 0.1465842734 8.534157e-01 #>  [768,] 0.9416813672 0.1188024486 0.8811975514 0.1447908078 8.552092e-01 #>  [769,] 0.9424677014 0.1173021740 0.8826978260 0.1430156081 8.569844e-01 #>  [770,] 0.9432440720 0.1158183552 0.8841816448 0.1412585781 8.587414e-01 #>  [771,] 0.9440105884 0.1143508745 0.8856491255 0.1395196200 8.604804e-01 #>  [772,] 0.9447673587 0.1128996133 0.8871003867 0.1377986342 8.622014e-01 #>  [773,] 0.9455144907 0.1114644524 0.8885355476 0.1360955192 8.639045e-01 #>  [774,] 0.9462520911 0.1100452720 0.8899547280 0.1344101724 8.655898e-01 #>  [775,] 0.9469802662 0.1086419514 0.8913580486 0.1327424893 8.672575e-01 #>  [776,] 0.9476991213 0.1072543696 0.8927456304 0.1310923642 8.689076e-01 #>  [777,] 0.9484087609 0.1058824048 0.8941175952 0.1294596897 8.705403e-01 #>  [778,] 0.9491092889 0.1045259350 0.8954740650 0.1278443574 8.721556e-01 #>  [779,] 0.9498008083 0.1031848376 0.8968151624 0.1262462575 8.737537e-01 #>  [780,] 0.9504834214 0.1018589897 0.8981410103 0.1246652789 8.753347e-01 #>  [781,] 0.9511572295 0.1005482678 0.8994517322 0.1231013095 8.768987e-01 #>  [782,] 0.9518223334 0.0992525484 0.9007474516 0.1215542360 8.784458e-01 #>  [783,] 0.9524788329 0.0979717077 0.9020282923 0.1200239442 8.799761e-01 #>  [784,] 0.9531268271 0.0967056214 0.9032943786 0.1185103186 8.814897e-01 #>  [785,] 0.9537664142 0.0954541653 0.9045458347 0.1170132433 8.829868e-01 #>  [786,] 0.9543976917 0.0942172150 0.9057827850 0.1155326009 8.844674e-01 #>  [787,] 0.9550207561 0.0929946458 0.9070053542 0.1140682737 8.859317e-01 #>  [788,] 0.9556357033 0.0917863333 0.9082136667 0.1126201431 8.873799e-01 #>  [789,] 0.9562426283 0.0905921526 0.9094078474 0.1111880895 8.888119e-01 #>  [790,] 0.9568416252 0.0894119792 0.9105880208 0.1097719931 8.902280e-01 #>  [791,] 0.9574327875 0.0882456884 0.9117543116 0.1083717330 8.916283e-01 #>  [792,] 0.9580162076 0.0870931556 0.9129068444 0.1069871882 8.930128e-01 #>  [793,] 0.9585919772 0.0859542565 0.9140457435 0.1056182368 8.943818e-01 #>  [794,] 0.9591601873 0.0848288666 0.9151711334 0.1042647567 8.957352e-01 #>  [795,] 0.9597209280 0.0837168617 0.9162831383 0.1029266251 8.970734e-01 #>  [796,] 0.9602742884 0.0826181180 0.9173818820 0.1016037191 8.983963e-01 #>  [797,] 0.9608203570 0.0815325116 0.9184674884 0.1002959152 8.997041e-01 #>  [798,] 0.9613592213 0.0804599190 0.9195400810 0.0990030898 9.009969e-01 #>  [799,] 0.9618909683 0.0794002169 0.9205997831 0.0977251190 9.022749e-01 #>  [800,] 0.9624156839 0.0783532825 0.9216467175 0.0964618786 9.035381e-01 #>  [801,] 0.9629334531 0.0773189930 0.9226810070 0.0952132443 9.047868e-01 #>  [802,] 0.9634443604 0.0762972263 0.9237027737 0.0939790916 9.060209e-01 #>  [803,] 0.9639484892 0.0752878604 0.9247121396 0.0927592960 9.072407e-01 #>  [804,] 0.9644459223 0.0742907738 0.9257092262 0.0915537327 9.084463e-01 #>  [805,] 0.9649367415 0.0733058455 0.9266941545 0.0903622772 9.096377e-01 #>  [806,] 0.9654210280 0.0723329548 0.9276670452 0.0891848047 9.108152e-01 #>  [807,] 0.9658988620 0.0713719816 0.9286280184 0.0880211908 9.119788e-01 #>  [808,] 0.9663703230 0.0704228060 0.9295771940 0.0868713107 9.131287e-01 #>  [809,] 0.9668354897 0.0694853091 0.9305146909 0.0857350401 9.142650e-01 #>  [810,] 0.9672944399 0.0685593720 0.9314406280 0.0846122547 9.153877e-01 #>  [811,] 0.9677472508 0.0676448766 0.9323551234 0.0835028303 9.164972e-01 #>  [812,] 0.9681939986 0.0667417054 0.9332582946 0.0824066430 9.175934e-01 #>  [813,] 0.9686347589 0.0658497413 0.9341502587 0.0813235690 9.186764e-01 #>  [814,] 0.9690696063 0.0649688680 0.9350311320 0.0802534849 9.197465e-01 #>  [815,] 0.9694986149 0.0640989696 0.9359010304 0.0791962676 9.208037e-01 #>  [816,] 0.9699218577 0.0632399309 0.9367600691 0.0781517940 9.218482e-01 #>  [817,] 0.9703394073 0.0623916373 0.9376083627 0.0771199418 9.228801e-01 #>  [818,] 0.9707513351 0.0615539749 0.9384460251 0.0761005885 9.238994e-01 #>  [819,] 0.9711577121 0.0607268305 0.9392731695 0.0750936126 9.249064e-01 #>  [820,] 0.9715586084 0.0599100915 0.9400899085 0.0740988924 9.259011e-01 #>  [821,] 0.9719540933 0.0591036459 0.9408963541 0.0731163071 9.268837e-01 #>  [822,] 0.9723442354 0.0583073825 0.9416926175 0.0721457360 9.278543e-01 #>  [823,] 0.9727291026 0.0575211908 0.9424788092 0.0711870592 9.288129e-01 #>  [824,] 0.9731087620 0.0567449610 0.9432550390 0.0702401569 9.297598e-01 #>  [825,] 0.9734832799 0.0559785840 0.9440214160 0.0693049101 9.306951e-01 #>  [826,] 0.9738527220 0.0552219514 0.9447780486 0.0683812003 9.316188e-01 #>  [827,] 0.9742171532 0.0544749557 0.9455250443 0.0674689094 9.325311e-01 #>  [828,] 0.9745766377 0.0537374900 0.9462625100 0.0665679199 9.334321e-01 #>  [829,] 0.9749312390 0.0530094481 0.9469905519 0.0656781149 9.343219e-01 #>  [830,] 0.9752810198 0.0522907248 0.9477092752 0.0647993782 9.352006e-01 #>  [831,] 0.9756260422 0.0515812155 0.9484187845 0.0639315940 9.360684e-01 #>  [832,] 0.9759663675 0.0508808163 0.9491191837 0.0630746472 9.369254e-01 #>  [833,] 0.9763020563 0.0501894242 0.9498105758 0.0622284235 9.377716e-01 #>  [834,] 0.9766331687 0.0495069371 0.9504930629 0.0613928089 9.386072e-01 #>  [835,] 0.9769597639 0.0488332534 0.9511667466 0.0605676904 9.394323e-01 #>  [836,] 0.9772819006 0.0481682725 0.9518317275 0.0597529556 9.402470e-01 #>  [837,] 0.9775996365 0.0475118946 0.9524881054 0.0589484925 9.410515e-01 #>  [838,] 0.9779130290 0.0468640207 0.9531359793 0.0581541902 9.418458e-01 #>  [839,] 0.9782221347 0.0462245524 0.9537754476 0.0573699382 9.426301e-01 #>  [840,] 0.9785270094 0.0455933924 0.9544066076 0.0565956270 9.434044e-01 #>  [841,] 0.9788277085 0.0449704440 0.9550295560 0.0558311474 9.441689e-01 #>  [842,] 0.9791242866 0.0443556115 0.9556443885 0.0550763914 9.449236e-01 #>  [843,] 0.9794167975 0.0437487999 0.9562512001 0.0543312515 9.456687e-01 #>  [844,] 0.9797052948 0.0431499150 0.9568500850 0.0535956210 9.464044e-01 #>  [845,] 0.9799898311 0.0425588635 0.9574411365 0.0528693938 9.471306e-01 #>  [846,] 0.9802704584 0.0419755528 0.9580244472 0.0521524648 9.478475e-01 #>  [847,] 0.9805472283 0.0413998913 0.9586001087 0.0514447296 9.485553e-01 #>  [848,] 0.9808201916 0.0408317880 0.9591682120 0.0507460845 9.492539e-01 #>  [849,] 0.9810893985 0.0402711529 0.9597288471 0.0500564267 9.499436e-01 #>  [850,] 0.9813548986 0.0397178968 0.9602821032 0.0493756541 9.506243e-01 #>  [851,] 0.9816167410 0.0391719313 0.9608280687 0.0487036653 9.512963e-01 #>  [852,] 0.9818749742 0.0386331687 0.9613668313 0.0480403600 9.519596e-01 #>  [853,] 0.9821296459 0.0381015223 0.9618984777 0.0473856383 9.526144e-01 #>  [854,] 0.9823808036 0.0375769061 0.9624230939 0.0467394015 9.532606e-01 #>  [855,] 0.9826284937 0.0370592350 0.9629407650 0.0461015515 9.538984e-01 #>  [856,] 0.9828727626 0.0365484247 0.9634515753 0.0454719909 9.545280e-01 #>  [857,] 0.9831136557 0.0360443917 0.9639556083 0.0448506233 9.551494e-01 #>  [858,] 0.9833512180 0.0355470532 0.9644529468 0.0442373531 9.557626e-01 #>  [859,] 0.9835854941 0.0350563274 0.9649436726 0.0436320855 9.563679e-01 #>  [860,] 0.9838165277 0.0345721332 0.9654278668 0.0430347264 9.569653e-01 #>  [861,] 0.9840443623 0.0340943904 0.9659056096 0.0424451827 9.575548e-01 #>  [862,] 0.9842690407 0.0336230194 0.9663769806 0.0418633620 9.581366e-01 #>  [863,] 0.9844906052 0.0331579417 0.9668420583 0.0412891728 9.587108e-01 #>  [864,] 0.9847090975 0.0326990793 0.9673009207 0.0407225243 9.592775e-01 #>  [865,] 0.9849245589 0.0322463551 0.9677536449 0.0401633266 9.598367e-01 #>  [866,] 0.9851370300 0.0317996930 0.9682003070 0.0396114907 9.603885e-01 #>  [867,] 0.9853465512 0.0313590173 0.9686409827 0.0390669283 9.609331e-01 #>  [868,] 0.9855531621 0.0309242534 0.9690757466 0.0385295520 9.614704e-01 #>  [869,] 0.9857569019 0.0304953273 0.9695046727 0.0379992751 9.620007e-01 #>  [870,] 0.9859578094 0.0300721659 0.9699278341 0.0374760119 9.625240e-01 #>  [871,] 0.9861559228 0.0296546968 0.9703453032 0.0369596774 9.630403e-01 #>  [872,] 0.9863512797 0.0292428484 0.9707571516 0.0364501874 9.635498e-01 #>  [873,] 0.9865439176 0.0288365498 0.9711634502 0.0359474586 9.640525e-01 #>  [874,] 0.9867338732 0.0284357309 0.9715642691 0.0354514084 9.645486e-01 #>  [875,] 0.9869211827 0.0280403225 0.9719596775 0.0349619551 9.650380e-01 #>  [876,] 0.9871058821 0.0276502558 0.9723497442 0.0344790178 9.655210e-01 #>  [877,] 0.9872880068 0.0272654631 0.9727345369 0.0340025164 9.659975e-01 #>  [878,] 0.9874675917 0.0268858773 0.9731141227 0.0335323716 9.664676e-01 #>  [879,] 0.9876446713 0.0265114320 0.9734885680 0.0330685048 9.669315e-01 #>  [880,] 0.9878192797 0.0261420616 0.9738579384 0.0326108383 9.673892e-01 #>  [881,] 0.9879914505 0.0257777012 0.9742222988 0.0321592952 9.678407e-01 #>  [882,] 0.9881612169 0.0254182865 0.9745817135 0.0317137995 9.682862e-01 #>  [883,] 0.9883286116 0.0250637542 0.9749362458 0.0312742757 9.687257e-01 #>  [884,] 0.9884936670 0.0247140415 0.9752859585 0.0308406492 9.691594e-01 #>  [885,] 0.9886564150 0.0243690864 0.9756309136 0.0304128463 9.695872e-01 #>  [886,] 0.9888168871 0.0240288274 0.9759711726 0.0299907941 9.700092e-01 #>  [887,] 0.9889751144 0.0236932040 0.9763067960 0.0295744202 9.704256e-01 #>  [888,] 0.9891311276 0.0233621563 0.9766378437 0.0291636531 9.708363e-01 #>  [889,] 0.9892849569 0.0230356249 0.9769643751 0.0287584223 9.712416e-01 #>  [890,] 0.9894366323 0.0227135512 0.9772864488 0.0283586576 9.716413e-01 #>  [891,] 0.9895861834 0.0223958774 0.9776041226 0.0279642901 9.720357e-01 #>  [892,] 0.9897336391 0.0220825463 0.9779174537 0.0275752511 9.724247e-01 #>  [893,] 0.9898790282 0.0217735011 0.9782264989 0.0271914730 9.728085e-01 #>  [894,] 0.9900223791 0.0214686862 0.9785313138 0.0268128889 9.731871e-01 #>  [895,] 0.9901637199 0.0211680460 0.9788319540 0.0264394325 9.735606e-01 #>  [896,] 0.9903030780 0.0208715262 0.9791284738 0.0260710383 9.739290e-01 #>  [897,] 0.9904404808 0.0205790726 0.9794209274 0.0257076417 9.742924e-01 #>  [898,] 0.9905759552 0.0202906321 0.9797093679 0.0253491784 9.746508e-01 #>  [899,] 0.9907095277 0.0200061517 0.9799938483 0.0249955853 9.750044e-01 #>  [900,] 0.9908412244 0.0197255796 0.9802744204 0.0246467997 9.753532e-01 #>  [901,] 0.9909710714 0.0194488642 0.9805511358 0.0243027598 9.756972e-01 #>  [902,] 0.9910990940 0.0191759547 0.9808240453 0.0239634042 9.760366e-01 #>  [903,] 0.9912253174 0.0189068008 0.9810931992 0.0236286725 9.763713e-01 #>  [904,] 0.9913497665 0.0186413530 0.9813586470 0.0232985048 9.767015e-01 #>  [905,] 0.9914724657 0.0183795623 0.9816204377 0.0229728421 9.770272e-01 #>  [906,] 0.9915934392 0.0181213801 0.9818786199 0.0226516259 9.773484e-01 #>  [907,] 0.9917127110 0.0178667586 0.9821332414 0.0223347985 9.776652e-01 #>  [908,] 0.9918303044 0.0176156506 0.9823843494 0.0220223026 9.779777e-01 #>  [909,] 0.9919462428 0.0173680094 0.9826319906 0.0217140818 9.782859e-01 #>  [910,] 0.9920605491 0.0171237889 0.9828762111 0.0214100805 9.785899e-01 #>  [911,] 0.9921732458 0.0168829435 0.9831170565 0.0211102434 9.788898e-01 #>  [912,] 0.9922843553 0.0166454281 0.9833545719 0.0208145160 9.791855e-01 #>  [913,] 0.9923938996 0.0164111985 0.9835888015 0.0205228445 9.794772e-01 #>  [914,] 0.9925019003 0.0161802106 0.9838197894 0.0202351758 9.797648e-01 #>  [915,] 0.9926083789 0.0159524212 0.9840475788 0.0199514571 9.800485e-01 #>  [916,] 0.9927133566 0.0157277874 0.9842722126 0.0196716366 9.803284e-01 #>  [917,] 0.9928168541 0.0155062669 0.9844937331 0.0193956630 9.806043e-01 #>  [918,] 0.9929188921 0.0152878180 0.9847121820 0.0191234854 9.808765e-01 #>  [919,] 0.9930194908 0.0150723994 0.9849276006 0.0188550539 9.811449e-01 #>  [920,] 0.9931186702 0.0148599705 0.9851400295 0.0185903189 9.814097e-01 #>  [921,] 0.9932164501 0.0146504910 0.9853495090 0.0183292314 9.816708e-01 #>  [922,] 0.9933128500 0.0144439212 0.9855560788 0.0180717432 9.819283e-01 #>  [923,] 0.9934078890 0.0142402219 0.9857597781 0.0178178065 9.821822e-01 #>  [924,] 0.9935015861 0.0140393544 0.9859606456 0.0175673742 9.824326e-01 #>  [925,] 0.9935939601 0.0138412805 0.9861587195 0.0173203997 9.826796e-01 #>  [926,] 0.9936850293 0.0136459624 0.9863540376 0.0170768370 9.829232e-01 #>  [927,] 0.9937748120 0.0134533629 0.9865466371 0.0168366407 9.831634e-01 #>  [928,] 0.9938633261 0.0132634452 0.9867365548 0.0165997657 9.834002e-01 #>  [929,] 0.9939505893 0.0130761730 0.9869238270 0.0163661680 9.836338e-01 #>  [930,] 0.9940366191 0.0128915105 0.9871084895 0.0161358035 9.838642e-01 #>  [931,] 0.9941214327 0.0127094222 0.9872905778 0.0159086291 9.840914e-01 #>  [932,] 0.9942050470 0.0125298731 0.9874701269 0.0156846021 9.843154e-01 #>  [933,] 0.9942874789 0.0123528289 0.9876471711 0.0154636803 9.845363e-01 #>  [934,] 0.9943687448 0.0121782554 0.9878217446 0.0152458221 9.847542e-01 #>  [935,] 0.9944488612 0.0120061190 0.9879938810 0.0150309862 9.849690e-01 #>  [936,] 0.9945278439 0.0118363866 0.9881636134 0.0148191322 9.851809e-01 #>  [937,] 0.9946057090 0.0116690253 0.9883309747 0.0146102198 9.853898e-01 #>  [938,] 0.9946824721 0.0115040030 0.9884959970 0.0144042095 9.855958e-01 #>  [939,] 0.9947581485 0.0113412876 0.9886587124 0.0142010622 9.857989e-01 #>  [940,] 0.9948327535 0.0111808476 0.9888191524 0.0140007393 9.859993e-01 #>  [941,] 0.9949063021 0.0110226520 0.9889773480 0.0138032025 9.861968e-01 #>  [942,] 0.9949788092 0.0108666701 0.9891333299 0.0136084144 9.863916e-01 #>  [943,] 0.9950502893 0.0107128716 0.9892871284 0.0134163376 9.865837e-01 #>  [944,] 0.9951207568 0.0105612265 0.9894387735 0.0132269356 9.867731e-01 #>  [945,] 0.9951902259 0.0104117055 0.9895882945 0.0130401721 9.869598e-01 #>  [946,] 0.9952587107 0.0102642794 0.9897357206 0.0128560113 9.871440e-01 #>  [947,] 0.9953262249 0.0101189194 0.9898810806 0.0126744180 9.873256e-01 #>  [948,] 0.9953927822 0.0099755973 0.9900244027 0.0124953572 9.875046e-01 #>  [949,] 0.9954583960 0.0098342849 0.9901657151 0.0123187946 9.876812e-01 #>  [950,] 0.9955230796 0.0096949548 0.9903050452 0.0121446961 9.878553e-01 #>  [951,] 0.9955868460 0.0095575796 0.9904424204 0.0119730284 9.880270e-01 #>  [952,] 0.9956497081 0.0094221324 0.9905778676 0.0118037582 9.881962e-01 #>  [953,] 0.9957116786 0.0092885868 0.9907114132 0.0116368528 9.883631e-01 #>  [954,] 0.9957727701 0.0091569165 0.9908430835 0.0114722802 9.885277e-01 #>  [955,] 0.9958329950 0.0090270957 0.9909729043 0.0113100083 9.886900e-01 #>  [956,] 0.9958923653 0.0088990989 0.9911009011 0.0111500059 9.888500e-01 #>  [957,] 0.9959508933 0.0087729008 0.9912270992 0.0109922418 9.890078e-01 #>  [958,] 0.9960085906 0.0086484768 0.9913515232 0.0108366855 9.891633e-01 #>  [959,] 0.9960654690 0.0085258023 0.9914741977 0.0106833068 9.893167e-01 #>  [960,] 0.9961215400 0.0084048531 0.9915951469 0.0105320758 9.894679e-01 #>  [961,] 0.9961768151 0.0082856054 0.9917143946 0.0103829632 9.896170e-01 #>  [962,] 0.9962313053 0.0081680356 0.9918319644 0.0102359398 9.897641e-01 #>  [963,] 0.9962850218 0.0080521206 0.9919478794 0.0100909771 9.899090e-01 #>  [964,] 0.9963379755 0.0079378374 0.9920621626 0.0099480467 9.900520e-01 #>  [965,] 0.9963901772 0.0078251634 0.9921748366 0.0098071208 9.901929e-01 #>  [966,] 0.9964416373 0.0077140763 0.9922859237 0.0096681717 9.903318e-01 #>  [967,] 0.9964923665 0.0076045541 0.9923954459 0.0095311724 9.904688e-01 #>  [968,] 0.9965423749 0.0074965752 0.9925034248 0.0093960959 9.906039e-01 #>  [969,] 0.9965916728 0.0073901180 0.9926098820 0.0092629159 9.907371e-01 #>  [970,] 0.9966402702 0.0072851616 0.9927148384 0.0091316061 9.908684e-01 #>  [971,] 0.9966881770 0.0071816849 0.9928183151 0.0090021409 9.909979e-01 #>  [972,] 0.9967354029 0.0070796676 0.9929203324 0.0088744947 9.911255e-01 #>  [973,] 0.9967819575 0.0069790892 0.9930209108 0.0087486425 9.912514e-01 #>  [974,] 0.9968278504 0.0068799298 0.9931200702 0.0086245596 9.913754e-01 #>  [975,] 0.9968730909 0.0067821697 0.9932178303 0.0085022214 9.914978e-01 #>  [976,] 0.9969176881 0.0066857893 0.9933142107 0.0083816039 9.916184e-01 #>  [977,] 0.9969616512 0.0065907695 0.9934092305 0.0082626833 9.917373e-01 #>  [978,] 0.9970049891 0.0064970913 0.9935029087 0.0081454361 9.918546e-01 #>  [979,] 0.9970477107 0.0064047360 0.9935952640 0.0080298392 9.919702e-01 #>  [980,] 0.9970898247 0.0063136852 0.9936863148 0.0079158697 9.920841e-01 #>  [981,] 0.9971313397 0.0062239206 0.9937760794 0.0078035051 9.921965e-01 #>  [982,] 0.9971722642 0.0061354244 0.9938645756 0.0076927231 9.923073e-01 #>  [983,] 0.9972126064 0.0060481789 0.9939518211 0.0075835017 9.924165e-01 #>  [984,] 0.9972523747 0.0059621665 0.9940378335 0.0074758195 9.925242e-01 #>  [985,] 0.9972915771 0.0058773701 0.9941226299 0.0073696549 9.926303e-01 #>  [986,] 0.9973302217 0.0057937727 0.9942062273 0.0072649869 9.927350e-01 #>  [987,] 0.9973683163 0.0057113575 0.9942886425 0.0071617948 9.928382e-01 #>  [988,] 0.9974058688 0.0056301081 0.9943698919 0.0070600579 9.929399e-01 #>  [989,] 0.9974428869 0.0055500080 0.9944499920 0.0069597562 9.930402e-01 #>  [990,] 0.9974793780 0.0054710412 0.9945289588 0.0068608696 9.931391e-01 #>  [991,] 0.9975153497 0.0053931919 0.9946068081 0.0067633785 9.932366e-01 #>  [992,] 0.9975508092 0.0053164444 0.9946835556 0.0066672633 9.933327e-01 #>  [993,] 0.9975857640 0.0052407833 0.9947592167 0.0065725051 9.934275e-01 #>  [994,] 0.9976202211 0.0051661934 0.9948338066 0.0064790848 9.935209e-01 #>  [995,] 0.9976541875 0.0050926597 0.9949073403 0.0063869838 9.936130e-01 #>  [996,] 0.9976876703 0.0050201673 0.9949798327 0.0062961837 9.937038e-01 #>  [997,] 0.9977206762 0.0049487017 0.9950512983 0.0062066665 9.937933e-01 #>  [998,] 0.9977532121 0.0048782485 0.9951217515 0.0061184141 9.938816e-01 #>  [999,] 0.9977852845 0.0048087935 0.9951912065 0.0060314090 9.939686e-01 #> [1000,] 0.9978169002 0.0047403226 0.9952596774 0.0059456337 9.940544e-01 #> [1001,] 0.9978480655 0.0046728221 0.9953271779 0.0058610710 9.941389e-01 #> [1002,] 0.9978787868 0.0046062783 0.9953937217 0.0057777041 9.942223e-01 #> [1003,] 0.9979090705 0.0045406778 0.9954593222 0.0056955162 9.943045e-01 #> [1004,] 0.9979389227 0.0044760074 0.9955239926 0.0056144908 9.943855e-01 #> [1005,] 0.9979683496 0.0044122540 0.9955877460 0.0055346117 9.944654e-01 #> [1006,] 0.9979973572 0.0043494046 0.9956505954 0.0054558627 9.945441e-01 #> [1007,] 0.9980259515 0.0042874467 0.9957125533 0.0053782283 9.946218e-01 #> [1008,] 0.9980541382 0.0042263676 0.9957736324 0.0053016926 9.946983e-01 #> [1009,] 0.9980819233 0.0041661549 0.9958338451 0.0052262403 9.947738e-01 #> [1010,] 0.9981093124 0.0041067966 0.9958932034 0.0051518563 9.948481e-01 #> [1011,] 0.9981363111 0.0040482806 0.9959517194 0.0050785256 9.949215e-01 #> [1012,] 0.9981629250 0.0039905950 0.9960094050 0.0050062335 9.949938e-01 #> [1013,] 0.9981891595 0.0039337282 0.9960662718 0.0049349652 9.950650e-01 #> [1014,] 0.9982150200 0.0038776685 0.9961223315 0.0048647066 9.951353e-01 #> [1015,] 0.9982405119 0.0038224047 0.9961775953 0.0047954435 9.952046e-01 #> [1016,] 0.9982656403 0.0037679255 0.9962320745 0.0047271618 9.952728e-01 #> [1017,] 0.9982904105 0.0037142200 0.9962857800 0.0046598478 9.953402e-01 #> [1018,] 0.9983148276 0.0036612770 0.9963387230 0.0045934879 9.954065e-01 #> [1019,] 0.9983388964 0.0036090860 0.9963909140 0.0045280688 9.954719e-01 #> [1020,] 0.9983626221 0.0035576363 0.9964423637 0.0044635771 9.955364e-01 #> [1021,] 0.9983860094 0.0035069175 0.9964930825 0.0043999999 9.956000e-01 #> [1022,] 0.9984090632 0.0034569192 0.9965430808 0.0043373244 9.956627e-01 #> [1023,] 0.9984317883 0.0034076314 0.9965923686 0.0042755378 9.957245e-01 #> [1024,] 0.9984541892 0.0033590439 0.9966409561 0.0042146276 9.957854e-01 #> [1025,] 0.9984762707 0.0033111468 0.9966888532 0.0041545815 9.958454e-01 #> [1026,] 0.9984980371 0.0032639305 0.9967360695 0.0040953875 9.959046e-01 #> [1027,] 0.9985194932 0.0032173854 0.9967826146 0.0040370333 9.959630e-01 #> [1028,] 0.9985406431 0.0031715018 0.9968284982 0.0039795074 9.960205e-01 #> [1029,] 0.9985614914 0.0031262706 0.9968737294 0.0039227979 9.960772e-01 #> [1030,] 0.9985820422 0.0030816824 0.9969183176 0.0038668934 9.961331e-01 #> [1031,] 0.9986022999 0.0030377283 0.9969622717 0.0038117826 9.961882e-01 #> [1032,] 0.9986222685 0.0029943992 0.9970056008 0.0037574542 9.962425e-01 #> [1033,] 0.9986419522 0.0029516862 0.9970483138 0.0037038973 9.962961e-01 #> [1034,] 0.9986613551 0.0029095808 0.9970904192 0.0036511010 9.963489e-01 #> [1035,] 0.9986804812 0.0028680743 0.9971319257 0.0035990545 9.964009e-01 #> [1036,] 0.9986993343 0.0028271582 0.9971728418 0.0035477474 9.964523e-01 #> [1037,] 0.9987179184 0.0027868242 0.9972131758 0.0034971690 9.965028e-01 #> [1038,] 0.9987362374 0.0027470640 0.9972529360 0.0034473093 9.965527e-01 #> [1039,] 0.9987542949 0.0027078696 0.9972921304 0.0033981579 9.966018e-01 #> [1040,] 0.9987720946 0.0026692329 0.9973307671 0.0033497050 9.966503e-01 #> [1041,] 0.9987896404 0.0026311460 0.9973688540 0.0033019407 9.966981e-01 #> [1042,] 0.9988069358 0.0025936011 0.9974063989 0.0032548553 9.967451e-01 #> [1043,] 0.9988239843 0.0025565906 0.9974434094 0.0032084391 9.967916e-01 #> [1044,] 0.9988407894 0.0025201069 0.9974798931 0.0031626828 9.968373e-01 #> [1045,] 0.9988573547 0.0024841426 0.9975158574 0.0031175769 9.968824e-01 #> [1046,] 0.9988736836 0.0024486903 0.9975513097 0.0030731124 9.969269e-01 #> [1047,] 0.9988897793 0.0024137426 0.9975862574 0.0030292801 9.969707e-01 #> [1048,] 0.9989056453 0.0023792926 0.9976207074 0.0029860711 9.970139e-01 #> [1049,] 0.9989212848 0.0023453331 0.9976546669 0.0029434766 9.970565e-01 #> [1050,] 0.9989367010 0.0023118572 0.9976881428 0.0029014880 9.970985e-01 #> [1051,] 0.9989518972 0.0022788579 0.9977211421 0.0028600966 9.971399e-01 #> [1052,] 0.9989668763 0.0022463287 0.9977536713 0.0028192940 9.971807e-01 #> [1053,] 0.9989816417 0.0022142628 0.9977857372 0.0027790718 9.972209e-01 #> [1054,] 0.9989961962 0.0021826536 0.9978173464 0.0027394220 9.972606e-01 #> [1055,] 0.9990105429 0.0021514946 0.9978485054 0.0027003363 9.972997e-01 #> [1056,] 0.9990246848 0.0021207796 0.9978792204 0.0026618067 9.973382e-01 #> [1057,] 0.9990386247 0.0020905021 0.9979094979 0.0026238255 9.973762e-01 #> [1058,] 0.9990523656 0.0020606559 0.9979393441 0.0025863849 9.974136e-01 #> [1059,] 0.9990659102 0.0020312350 0.9979687650 0.0025494771 9.974505e-01 #> [1060,] 0.9990792615 0.0020022334 0.9979977666 0.0025130947 9.974869e-01 #> [1061,] 0.9990924221 0.0019736449 0.9980263551 0.0024772301 9.975228e-01 #> [1062,] 0.9991053947 0.0019454639 0.9980545361 0.0024418762 9.975581e-01 #> [1063,] 0.9991181821 0.0019176845 0.9980823155 0.0024070256 9.975930e-01 #> [1064,] 0.9991307869 0.0018903010 0.9981096990 0.0023726712 9.976273e-01 #> [1065,] 0.9991432116 0.0018633079 0.9981366921 0.0023388060 9.976612e-01 #> [1066,] 0.9991554589 0.0018366994 0.9981633006 0.0023054230 9.976946e-01 #> [1067,] 0.9991675312 0.0018104702 0.9981895298 0.0022725154 9.977275e-01 #> [1068,] 0.9991794312 0.0017846150 0.9982153850 0.0022400765 9.977599e-01 #> [1069,] 0.9991911612 0.0017591283 0.9982408717 0.0022080996 9.977919e-01 #> [1070,] 0.9992027236 0.0017340050 0.9982659950 0.0021765782 9.978234e-01 #> [1071,] 0.9992141209 0.0017092398 0.9982907602 0.0021455058 9.978545e-01 #> [1072,] 0.9992253553 0.0016848278 0.9983151722 0.0021148761 9.978851e-01 #> [1073,] 0.9992364293 0.0016607639 0.9983392361 0.0020846827 9.979153e-01 #> [1074,] 0.9992473451 0.0016370430 0.9983629570 0.0020549194 9.979451e-01 #> [1075,] 0.9992581050 0.0016136605 0.9983863395 0.0020255803 9.979744e-01 #> [1076,] 0.9992687111 0.0015906114 0.9984093886 0.0019966592 9.980033e-01 #> [1077,] 0.9992791658 0.0015678910 0.9984321090 0.0019681502 9.980318e-01 #> [1078,] 0.9992894711 0.0015454946 0.9984545054 0.0019400475 9.980600e-01 #> [1079,] 0.9992996291 0.0015234177 0.9984765823 0.0019123453 9.980877e-01 #> [1080,] 0.9993096421 0.0015016556 0.9984983444 0.0018850379 9.981150e-01 #> [1081,] 0.9993195119 0.0014802040 0.9985197960 0.0018581197 9.981419e-01 #> [1082,] 0.9993292408 0.0014590584 0.9985409416 0.0018315852 9.981684e-01 #> [1083,] 0.9993388307 0.0014382144 0.9985617856 0.0018054290 9.981946e-01 #> [1084,] 0.9993482835 0.0014176677 0.9985823323 0.0017796456 9.982204e-01 #> [1085,] 0.9993576013 0.0013974142 0.9986025858 0.0017542297 9.982458e-01 #> [1086,] 0.9993667860 0.0013774497 0.9986225503 0.0017291763 9.982708e-01 #> [1087,] 0.9993758394 0.0013577699 0.9986422301 0.0017044800 9.982955e-01 #> [1088,] 0.9993847635 0.0013383710 0.9986616290 0.0016801358 9.983199e-01 #> [1089,] 0.9993935600 0.0013192489 0.9986807511 0.0016561387 9.983439e-01 #> [1090,] 0.9994022308 0.0013003996 0.9986996004 0.0016324839 9.983675e-01 #> [1091,] 0.9994107778 0.0012818193 0.9987181807 0.0016091663 9.983908e-01 #> [1092,] 0.9994192026 0.0012635041 0.9987364959 0.0015861813 9.984138e-01 #> [1093,] 0.9994275070 0.0012454503 0.9987545497 0.0015635241 9.984365e-01 #> [1094,] 0.9994356928 0.0012276541 0.9987723459 0.0015411900 9.984588e-01 #> [1095,] 0.9994437615 0.0012101119 0.9987898881 0.0015191745 9.984808e-01 #> [1096,] 0.9994517150 0.0011928201 0.9988071799 0.0014974730 9.985025e-01 #> [1097,] 0.9994595548 0.0011757751 0.9988242249 0.0014760810 9.985239e-01 #> [1098,] 0.9994672826 0.0011589734 0.9988410266 0.0014549942 9.985450e-01 #> [1099,] 0.9994748999 0.0011424115 0.9988575885 0.0014342082 9.985658e-01 #> [1100,] 0.9994824083 0.0011260860 0.9988739140 0.0014137187 9.985863e-01 #> [1101,] 0.9994898095 0.0011099935 0.9988900065 0.0013935215 9.986065e-01 #> [1102,] 0.9994971048 0.0010941308 0.9989058692 0.0013736125 9.986264e-01 #> [1103,] 0.9995042959 0.0010784945 0.9989215055 0.0013539875 9.986460e-01 #> [1104,] 0.9995113843 0.0010630814 0.9989369186 0.0013346425 9.986654e-01 #> [1105,] 0.9995183713 0.0010478884 0.9989521116 0.0013155736 9.986844e-01 #> [1106,] 0.9995252584 0.0010329122 0.9989670878 0.0012967767 9.987032e-01 #> [1107,] 0.9995320471 0.0010181499 0.9989818501 0.0012782481 9.987218e-01 #> [1108,] 0.9995387388 0.0010035984 0.9989964016 0.0012599839 9.987400e-01 #> [1109,] 0.9995453349 0.0009892546 0.9990107454 0.0012419803 9.987580e-01 #> [1110,] 0.9995518366 0.0009751156 0.9990248844 0.0012242337 9.987758e-01 #> [1111,] 0.9995582454 0.0009611786 0.9990388214 0.0012067404 9.987933e-01 #> [1112,] 0.9995645626 0.0009474405 0.9990525595 0.0011894967 9.988105e-01 #> [1113,] 0.9995707895 0.0009338986 0.9990661014 0.0011724991 9.988275e-01 #> [1114,] 0.9995769274 0.0009205501 0.9990794499 0.0011557441 9.988443e-01 #> [1115,] 0.9995829776 0.0009073922 0.9990926078 0.0011392283 9.988608e-01 #> [1116,] 0.9995889413 0.0008944222 0.9991055778 0.0011229482 9.988771e-01 #> [1117,] 0.9995948197 0.0008816374 0.9991183626 0.0011069006 9.988931e-01 #> [1118,] 0.9996006141 0.0008690352 0.9991309648 0.0010910820 9.989089e-01 #> [1119,] 0.9996063257 0.0008566130 0.9991433870 0.0010754892 9.989245e-01 #> [1120,] 0.9996119556 0.0008443683 0.9991556317 0.0010601190 9.989399e-01 #> [1121,] 0.9996175050 0.0008322984 0.9991677016 0.0010449683 9.989550e-01 #> [1122,] 0.9996229751 0.0008204009 0.9991795991 0.0010300338 9.989700e-01 #> [1123,] 0.9996283670 0.0008086733 0.9991913267 0.0010153126 9.989847e-01 #> [1124,] 0.9996336818 0.0007971132 0.9992028868 0.0010008016 9.989992e-01 #> [1125,] 0.9996389207 0.0007857183 0.9992142817 0.0009864978 9.990135e-01 #> [1126,] 0.9996440846 0.0007744861 0.9992255139 0.0009723982 9.990276e-01 #> [1127,] 0.9996491747 0.0007634144 0.9992365856 0.0009584999 9.990415e-01 #> [1128,] 0.9996541921 0.0007525008 0.9992474992 0.0009448001 9.990552e-01 #> [1129,] 0.9996591377 0.0007417432 0.9992582568 0.0009312959 9.990687e-01 #> [1130,] 0.9996640126 0.0007311392 0.9992688608 0.0009179845 9.990820e-01 #> [1131,] 0.9996688178 0.0007206867 0.9992793133 0.0009048633 9.990951e-01 #> [1132,] 0.9996735543 0.0007103835 0.9992896165 0.0008919294 9.991081e-01 #> [1133,] 0.9996782231 0.0007002275 0.9992997725 0.0008791802 9.991208e-01 #> [1134,] 0.9996828251 0.0006902166 0.9993097834 0.0008666131 9.991334e-01 #> [1135,] 0.9996873614 0.0006803488 0.9993196512 0.0008542255 9.991458e-01 #> [1136,] 0.9996918328 0.0006706219 0.9993293781 0.0008420148 9.991580e-01 #> [1137,] 0.9996962402 0.0006610340 0.9993389660 0.0008299785 9.991700e-01 #> [1138,] 0.9997005847 0.0006515830 0.9993484170 0.0008181142 9.991819e-01 #> [1139,] 0.9997048670 0.0006422672 0.9993577328 0.0008064193 9.991936e-01 #> [1140,] 0.9997090881 0.0006330844 0.9993669156 0.0007948914 9.992051e-01 #> [1141,] 0.9997132488 0.0006240328 0.9993759672 0.0007835282 9.992165e-01 #> [1142,] 0.9997173501 0.0006151106 0.9993848894 0.0007723273 9.992277e-01 #> [1143,] 0.9997213927 0.0006063158 0.9993936842 0.0007612864 9.992387e-01 #> [1144,] 0.9997253775 0.0005976468 0.9994023532 0.0007504033 9.992496e-01 #> [1145,] 0.9997293053 0.0005891016 0.9994108984 0.0007396756 9.992603e-01 #> [1146,] 0.9997331769 0.0005806785 0.9994193215 0.0007291011 9.992709e-01 #> [1147,] 0.9997369932 0.0005723758 0.9994276242 0.0007186777 9.992813e-01 #> [1148,] 0.9997407550 0.0005641917 0.9994358083 0.0007084032 9.992916e-01 #> [1149,] 0.9997444629 0.0005561246 0.9994438754 0.0006982756 9.993017e-01 #> [1150,] 0.9997481178 0.0005481727 0.9994518273 0.0006882926 9.993117e-01 #> [1151,] 0.9997517205 0.0005403346 0.9994596654 0.0006784522 9.993215e-01 #> [1152,] 0.9997552716 0.0005326084 0.9994673916 0.0006687524 9.993312e-01 #> [1153,] 0.9997587720 0.0005249926 0.9994750074 0.0006591912 9.993408e-01 #> [1154,] 0.9997622223 0.0005174857 0.9994825143 0.0006497666 9.993502e-01 #> [1155,] 0.9997656233 0.0005100861 0.9994899139 0.0006404767 9.993595e-01 #> [1156,] 0.9997689756 0.0005027922 0.9994972078 0.0006313195 9.993687e-01 #> [1157,] 0.9997722800 0.0004956026 0.9995043974 0.0006222931 9.993777e-01 #> [1158,] 0.9997755371 0.0004885157 0.9995114843 0.0006133958 9.993866e-01 #> [1159,] 0.9997787477 0.0004815301 0.9995184699 0.0006046255 9.993954e-01 #> [1160,] 0.9997819124 0.0004746444 0.9995253556 0.0005959806 9.994040e-01 #> [1161,] 0.9997850318 0.0004678570 0.9995321430 0.0005874592 9.994125e-01 #> [1162,] 0.9997881066 0.0004611667 0.9995388333 0.0005790596 9.994209e-01 #> [1163,] 0.9997911374 0.0004545721 0.9995454279 0.0005707800 9.994292e-01 #> [1164,] 0.9997941249 0.0004480716 0.9995519284 0.0005626187 9.994374e-01 #> [1165,] 0.9997970696 0.0004416641 0.9995583359 0.0005545741 9.994454e-01 #> [1166,] 0.9997999723 0.0004353482 0.9995646518 0.0005466444 9.994534e-01 #> [1167,] 0.9998028334 0.0004291226 0.9995708774 0.0005388281 9.994612e-01 #> [1168,] 0.9998056536 0.0004229859 0.9995770141 0.0005311234 9.994689e-01 #> [1169,] 0.9998084335 0.0004169370 0.9995830630 0.0005235289 9.994765e-01 #> [1170,] 0.9998111736 0.0004109746 0.9995890254 0.0005160429 9.994840e-01 #> [1171,] 0.9998138746 0.0004050973 0.9995949027 0.0005086639 9.994913e-01 #> [1172,] 0.9998165369 0.0003993041 0.9996006959 0.0005013903 9.994986e-01 #> [1173,] 0.9998191611 0.0003935937 0.9996064063 0.0004942207 9.995058e-01 #> [1174,] 0.9998217478 0.0003879650 0.9996120350 0.0004871536 9.995128e-01 #> [1175,] 0.9998242975 0.0003824167 0.9996175833 0.0004801875 9.995198e-01 #> [1176,] 0.9998268108 0.0003769477 0.9996230523 0.0004733209 9.995267e-01 #> [1177,] 0.9998292881 0.0003715569 0.9996284431 0.0004665525 9.995334e-01 #> [1178,] 0.9998317300 0.0003662432 0.9996337568 0.0004598809 9.995401e-01 #> [1179,] 0.9998341369 0.0003610054 0.9996389946 0.0004533046 9.995467e-01 #> [1180,] 0.9998365095 0.0003558425 0.9996441575 0.0004468223 9.995532e-01 #> [1181,] 0.9998388481 0.0003507534 0.9996492466 0.0004404326 9.995596e-01 #> [1182,] 0.9998411532 0.0003457371 0.9996542629 0.0004341343 9.995659e-01 #> [1183,] 0.9998434254 0.0003407925 0.9996592075 0.0004279260 9.995721e-01 #> [1184,] 0.9998456651 0.0003359186 0.9996640814 0.0004218065 9.995782e-01 #> [1185,] 0.9998478727 0.0003311144 0.9996688856 0.0004157744 9.995842e-01 #> [1186,] 0.9998500488 0.0003263788 0.9996736212 0.0004098286 9.995902e-01 #> [1187,] 0.9998521938 0.0003217110 0.9996782890 0.0004039677 9.995960e-01 #> [1188,] 0.9998543081 0.0003171099 0.9996828901 0.0003981907 9.996018e-01 #> [1189,] 0.9998563921 0.0003125746 0.9996874254 0.0003924962 9.996075e-01 #> [1190,] 0.9998584463 0.0003081041 0.9996918959 0.0003868831 9.996131e-01 #> [1191,] 0.9998604712 0.0003036976 0.9996963024 0.0003813503 9.996186e-01 #> [1192,] 0.9998624671 0.0002993540 0.9997006460 0.0003758966 9.996241e-01 #> [1193,] 0.9998644344 0.0002950726 0.9997049274 0.0003705208 9.996295e-01 #> [1194,] 0.9998663736 0.0002908523 0.9997091477 0.0003652219 9.996348e-01 #> [1195,] 0.9998682851 0.0002866925 0.9997133075 0.0003599987 9.996400e-01 #> [1196,] 0.9998701693 0.0002825921 0.9997174079 0.0003548502 9.996451e-01 #> [1197,] 0.9998720264 0.0002785503 0.9997214497 0.0003497753 9.996502e-01 #> [1198,] 0.9998738571 0.0002745663 0.9997254337 0.0003447730 9.996552e-01 #> [1199,] 0.9998756615 0.0002706393 0.9997293607 0.0003398422 9.996602e-01 #> [1200,] 0.9998774401 0.0002667684 0.9997332316 0.0003349819 9.996650e-01 #> [1201,] 0.9998791933 0.0002629529 0.9997370471 0.0003301910 9.996698e-01  # }"},{"path":"https://philchalmers.github.io/mirt/reference/extract.group.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a group from a multiple group mirt object — extract.group","title":"Extract a group from a multiple group mirt object — extract.group","text":"Extract single group object defined multipleGroup, mixture model mirt.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/extract.group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a group from a multiple group mirt object — extract.group","text":"","code":"extract.group(x, group)"},{"path":"https://philchalmers.github.io/mirt/reference/extract.group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a group from a multiple group mirt object — extract.group","text":"x model object class 'MultipleGroupClass' 'MixtureClass' group name group extract","code":""},{"path":"https://philchalmers.github.io/mirt/reference/extract.group.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract a group from a multiple group mirt object — extract.group","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/extract.group.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract a group from a multiple group mirt object — extract.group","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/extract.group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a group from a multiple group mirt object — extract.group","text":"","code":"# \\donttest{ set.seed(12345) a <- matrix(abs(rnorm(15,1,.3)), ncol=1) d <- matrix(rnorm(15,0,.7),ncol=1) itemtype <- rep('2PL', nrow(a)) N <- 1000 dataset1 <- simdata(a, d, N, itemtype) dataset2 <- simdata(a, d, N, itemtype, mu = .1, sigma = matrix(1.5)) dat <- rbind(dataset1, dataset2) group <- c(rep('D1', N), rep('D2', N)) models <- 'F1 = 1-15'  mod_configural <- multipleGroup(dat, models, group = group) #>  group.1 <- extract.group(mod_configural, 'D1') #extract first group summary(group.1) #>            F1     h2 #> Item_1  0.532 0.2835 #> Item_2  0.582 0.3383 #> Item_3  0.487 0.2371 #> Item_4  0.466 0.2176 #> Item_5  0.542 0.2935 #> Item_6  0.315 0.0992 #> Item_7  0.599 0.3592 #> Item_8  0.477 0.2280 #> Item_9  0.464 0.2148 #> Item_10 0.391 0.1529 #> Item_11 0.438 0.1923 #> Item_12 0.655 0.4291 #> Item_13 0.604 0.3650 #> Item_14 0.519 0.2699 #> Item_15 0.453 0.2048 #>  #> SS loadings:  3.885  #> Proportion Var:  0.259  #>  #> Factor correlations:  #>  #>    F1 #> F1  1 plot(group.1)  # }"},{"path":"https://philchalmers.github.io/mirt/reference/extract.item.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract an item object from mirt objects — extract.item","title":"Extract an item object from mirt objects — extract.item","text":"Extract internal mirt objects estimated model.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/extract.item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract an item object from mirt objects — extract.item","text":"","code":"extract.item(x, item, group = NULL, drop.zeros = FALSE)"},{"path":"https://philchalmers.github.io/mirt/reference/extract.item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract an item object from mirt objects — extract.item","text":"x mirt model class 'SingleGroupClass', 'MultipleGroupClass', 'MixtureClass' item number character signifying item extract group number signifying group item extracted (applies 'MultipleGroupClass' 'MixtureClass' ) drop.zeros logical; drop slope values numerically close zero reduce dimensionality? Useful objects returned bfactor confirmatory models contain several zero slopes","code":""},{"path":"https://philchalmers.github.io/mirt/reference/extract.item.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract an item object from mirt objects — extract.item","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/extract.item.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract an item object from mirt objects — extract.item","text":"","code":"# \\donttest{ mod <- mirt(Science, 1) #>  extr.1 <- extract.item(mod, 1) # }"},{"path":"https://philchalmers.github.io/mirt/reference/extract.mirt.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract various elements from estimated model objects — extract.mirt","title":"Extract various elements from estimated model objects — extract.mirt","text":"generic function extract internal objects estimated models.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/extract.mirt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract various elements from estimated model objects — extract.mirt","text":"","code":"extract.mirt(x, what, item = 1)"},{"path":"https://philchalmers.github.io/mirt/reference/extract.mirt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract various elements from estimated model objects — extract.mirt","text":"x mirt model class 'SingleGroupClass', 'MultipleGroupClass', 'MixedClass' 'DiscreteGroupClass' string indicating extract item necessary, item extract information . Defaults 1 specified","code":""},{"path":"https://philchalmers.github.io/mirt/reference/extract.mirt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract various elements from estimated model objects — extract.mirt","text":"Objects can extracted mirt objects include: logLik observed log-likelihood logPrior log term contributed prior parameter distributions G2 goodness fit statistic df degrees freedom p p-value G2 statistic RMSEA root mean-square error approximation based G2 CFI CFI fit statistic TLI TLI fit statistic AIC AIC BIC BIC SABIC sample size adjusted BIC HQ HQ LLhistory EM log-likelihood history tabdata tabular version raw response data input. Frequencies stored     freq freq frequencies associated tabdata K integer vector indicating number unique elements item mins integer vector indicating lowest category found input data model input model syntax method estimation method used itemtype vector item types respective item (e.g., 'graded', '2PL', etc) itemnames vector item names input data factorNames vector factor names model definition rowID integer vector indicating valid row numbers used model estimation    (cases used 1:nrow(data)) data raw input data item responses covdata raw input data data used covariates tabdatalong similar tabdata, however responses transformed     dummy coded variables fulldatalong analogous tabdatafull, raw input data instead     tabulated frequencies EMhistory saved, extract EM iteration history exp_resp expected probability unique response patterns survey.weights supplied, vector survey weights used estimation (NULL missing) converged logical value indicating whether model terminated within     convergence criteria iterations number iterations took reach convergence criteria nest number freely estimated parameters parvec vector containing uniquely estimated parameters vcov parameter covariance matrix (associated parvec) condnum condition number Hessian (computed). Otherwise NA constrain list item parameter constraints indicate item parameters equal     estimation Prior prior density distribution latent traits thetaPosterior posterior distribution latent traits using EM algorithm key supplied, data scoring key nfact number latent traits/factors nitems number items ngroups number groups groupNames character vector unique group names group character vector indicating group membership invariance character vector indicating invariance input multipleGroup secondordertest logical indicating whether model passed second-order test     based Hessian matrix. Indicates whether model potential local maximum solution SEMconv logical; check whether supplemented EM information matrix converged. NA     applicable time estimation time, broken different sections","code":""},{"path":"https://philchalmers.github.io/mirt/reference/extract.mirt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract various elements from estimated model objects — extract.mirt","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/extract.mirt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract various elements from estimated model objects — extract.mirt","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/extract.mirt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract various elements from estimated model objects — extract.mirt","text":"","code":"# \\donttest{ mod <- mirt(Science, 1) #>   extract.mirt(mod, 'logLik') #> [1] -1608.87 extract.mirt(mod, 'K')  # unique categories for each item #> [1] 4 4 4 4  #multiple group model grp <- rep(c('G1', 'G2'), each = nrow(Science)/2) mod2 <- multipleGroup(Science, 1, grp) #>   grp1 <- extract.group(mod2, 1) #extract single group model extract.mirt(mod2, 'parvec') #>  [1]  0.8316800  4.8913029  2.5597789 -1.3592138  0.8289135  2.4772334 #>  [7]  0.7025447 -2.1135580  2.8809926  5.4820292  2.2126281 -2.5451325 #> [13]  0.6920437  3.0133748  0.8608953 -1.5516666  1.1955161  4.8900152 #> [19]  2.6929286 -1.5545256  1.7621713  3.6416308  1.1724290 -2.5499919 #> [25]  2.4324588  6.4188352  2.6336468 -1.8297283  1.4875546  3.8081350 #> [31]  1.1473714 -1.8343958 extract.mirt(grp1, 'parvec') #>  [1]  0.8316800  4.8913029  2.5597789 -1.3592138  0.8289135  2.4772334 #>  [7]  0.7025447 -2.1135580  2.8809926  5.4820292  2.2126281 -2.5451325 #> [13]  0.6920437  3.0133748  0.8608953 -1.5516666  # }"},{"path":"https://philchalmers.github.io/mirt/reference/fixedCalib.html","id":null,"dir":"Reference","previous_headings":"","what":"Fixed-item calibration method — fixedCalib","title":"Fixed-item calibration method — fixedCalib","text":"Implements set fixed-item calibration methods described Kim (2006). initial calibrated model must fitted via mirt, currently limited unidimensional models , utilized new set responses obtained population similar distributional characteristics latent traits. flexible calibration items, including fixed-item calibration variant involving anchor items equating, see multipleGroup.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/fixedCalib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fixed-item calibration method — fixedCalib","text":"","code":"fixedCalib(   data,   model = 1,   old_mod,   PAU = \"MWU\",   NEMC = \"MEM\",   technical = list(),   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/fixedCalib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fixed-item calibration method — fixedCalib","text":"data new data used calibration. Note consistent mod object, observed responses/NA placeholders must included link item names used original mod definition (.e., extract.mirt(mod, = 'itemnames')) model type model fit complete dataset (fixed items old_mod factor loadings/constraints specified potential mirt.model specification relevant) old_mod model class SingleGroupClass fitted using mirt PAU prior ability update (PAU) approach. Supports none (\"NWU\"), one (\"OWU\"), many (\"MWU\") NEMC number EM cycles (NEMC) use --estimated parameters. Supports one (\"OEM\") many (\"MEM\") technical list technical estimation arguments (see mirt details) ... additional arguments pass mirt","code":""},{"path":"https://philchalmers.github.io/mirt/reference/fixedCalib.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fixed-item calibration method — fixedCalib","text":"Kim, S. (2006). comparative study IRT fixed parameter calibration methods. Journal Educational Measurement, 4(43), 355-381.","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/fixedCalib.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fixed-item calibration method — fixedCalib","text":"","code":"# \\donttest{  # single factor set.seed(12345) J <- 50 a <- matrix(abs(rnorm(J,1,.3)), ncol=1) d <- matrix(rnorm(J,0,.7),ncol=1) itemtype <- rep('2PL', nrow(a))  # calibration data theta ~ N(0,1) N <- 3000 dataset1 <- simdata(a, d, N = N, itemtype=itemtype)  # new data (again, theta ~ N(0,1)) dataset2 <- simdata(a, d, N = 1000, itemtype=itemtype)  # last 40% of experimental items not given to calibration group #     (unobserved; hence removed) dataset1 <- dataset1[,-c(J:(J*.6))] head(dataset1) #>      Item_1 Item_2 Item_3 Item_4 Item_5 Item_6 Item_7 Item_8 Item_9 Item_10 #> [1,]      0      0      0      0      0      0      1      1      1       0 #> [2,]      0      0      0      1      0      1      0      0      0       0 #> [3,]      0      1      0      1      1      1      1      1      1       1 #> [4,]      0      1      1      0      1      0      0      0      1       0 #> [5,]      1      0      1      1      1      0      1      0      1       0 #> [6,]      1      1      0      1      0      1      0      1      1       0 #>      Item_11 Item_12 Item_13 Item_14 Item_15 Item_16 Item_17 Item_18 Item_19 #> [1,]       1       1       1       1       1       0       0       0       1 #> [2,]       0       0       1       0       0       0       1       1       0 #> [3,]       1       1       0       1       0       1       0       0       0 #> [4,]       0       0       1       1       0       0       1       1       0 #> [5,]       0       0       0       1       0       0       1       1       1 #> [6,]       1       0       1       1       0       0       1       0       1 #>      Item_20 Item_21 Item_22 Item_23 Item_24 Item_25 Item_26 Item_27 Item_28 #> [1,]       0       0       0       0       1       0       0       1       0 #> [2,]       0       1       0       0       1       0       0       1       1 #> [3,]       0       1       0       1       1       1       1       0       0 #> [4,]       0       0       0       0       0       1       0       1       0 #> [5,]       0       1       1       1       1       1       1       1       1 #> [6,]       0       0       0       1       1       1       0       0       0 #>      Item_29 #> [1,]       1 #> [2,]       1 #> [3,]       1 #> [4,]       1 #> [5,]       1 #> [6,]       1  #--------------------------------------  # calibrated model from dataset1 only mod <- mirt(dataset1, model = 1) #>  coef(mod, simplify=TRUE) #> $items #>            a1      d g u #> Item_1  1.196 -0.366 0 1 #> Item_2  1.218  1.345 0 1 #> Item_3  1.029 -0.017 0 1 #> Item_4  0.817  0.230 0 1 #> Item_5  1.148 -0.462 0 1 #> Item_6  0.473  0.157 0 1 #> Item_7  1.172  0.491 0 1 #> Item_8  0.882  0.599 0 1 #> Item_9  0.732  1.367 0 1 #> Item_10 0.737 -1.703 0 1 #> Item_11 0.988  0.057 0 1 #> Item_12 1.621 -0.888 0 1 #> Item_13 1.211  0.362 0 1 #> Item_14 1.261  1.101 0 1 #> Item_15 0.748 -0.319 0 1 #> Item_16 1.171 -1.247 0 1 #> Item_17 0.742  0.637 0 1 #> Item_18 0.925  1.128 0 1 #> Item_19 1.477  0.395 0 1 #> Item_20 1.037 -0.993 0 1 #> Item_21 1.136  0.068 0 1 #> Item_22 1.402 -0.513 0 1 #> Item_23 0.679 -0.684 0 1 #> Item_24 0.483  1.690 0 1 #> Item_25 0.501  1.048 0 1 #> Item_26 1.604  0.636 0 1 #> Item_27 0.833  0.559 0 1 #> Item_28 1.100 -0.493 0 1 #> Item_29 1.200  0.354 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>   # No Prior Weights Updating and One EM Cycle (NWU-OEM) NWU_OEM <- fixedCalib(dataset2, model=1, old_mod=mod, PAU='NWU', NEMC='OEM') #>  coef(NWU_OEM, simplify=TRUE) #> $items #>            a1      d g u #> Item_1  1.196 -0.366 0 1 #> Item_2  1.218  1.345 0 1 #> Item_3  1.029 -0.017 0 1 #> Item_4  0.817  0.230 0 1 #> Item_5  1.148 -0.462 0 1 #> Item_6  0.473  0.157 0 1 #> Item_7  1.172  0.491 0 1 #> Item_8  0.882  0.599 0 1 #> Item_9  0.732  1.367 0 1 #> Item_10 0.737 -1.703 0 1 #> Item_11 0.988  0.057 0 1 #> Item_12 1.621 -0.888 0 1 #> Item_13 1.211  0.362 0 1 #> Item_14 1.261  1.101 0 1 #> Item_15 0.748 -0.319 0 1 #> Item_16 1.171 -1.247 0 1 #> Item_17 0.742  0.637 0 1 #> Item_18 0.925  1.128 0 1 #> Item_19 1.477  0.395 0 1 #> Item_20 1.037 -0.993 0 1 #> Item_21 1.136  0.068 0 1 #> Item_22 1.402 -0.513 0 1 #> Item_23 0.679 -0.684 0 1 #> Item_24 0.483  1.690 0 1 #> Item_25 0.501  1.048 0 1 #> Item_26 1.604  0.636 0 1 #> Item_27 0.833  0.559 0 1 #> Item_28 1.100 -0.493 0 1 #> Item_29 1.200  0.354 0 1 #> Item_30 0.750  1.329 0 1 #> Item_31 1.093  1.235 0 1 #> Item_32 1.380  1.740 0 1 #> Item_33 1.112  0.441 0 1 #> Item_34 1.164  2.443 0 1 #> Item_35 1.054  1.361 0 1 #> Item_36 0.863  1.818 0 1 #> Item_37 0.717  0.865 0 1 #> Item_38 0.379  0.044 0 1 #> Item_39 1.180  1.336 0 1 #> Item_40 0.713  0.967 0 1 #> Item_41 0.865  0.150 0 1 #> Item_42 0.205 -0.581 0 1 #> Item_43 0.587  1.914 0 1 #> Item_44 0.977  0.509 0 1 #> Item_45 0.944 -0.151 0 1 #> Item_46 1.239  1.288 0 1 #> Item_47 0.547  0.176 0 1 #> Item_48 0.811  2.059 0 1 #> Item_49 0.841  0.169 0 1 #> Item_50 0.631 -0.103 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  data.frame(coef(NWU_OEM, simplify=TRUE)$items[,c('a1','d')],            pop_a1=a, pop_d=d) #>                a1           d    pop_a1       pop_d #> Item_1  1.1961890 -0.36582599 1.1756586 -0.37827025 #> Item_2  1.2180200  1.34513036 1.2128398  1.36338487 #> Item_3  1.0287076 -0.01749165 0.9672090  0.03751319 #> Item_4  0.8169838  0.22955350 0.8639508  0.24616399 #> Item_5  1.1477420 -0.46213650 1.1817662 -0.46968358 #> Item_6  0.4734409  0.15748181 0.4546132  0.19456759 #> Item_7  1.1723767  0.49084966 1.1890296  0.48381989 #> Item_8  0.8823964  0.59861143 0.9171448  0.57665673 #> Item_9  0.7320060  1.36669674 0.9147521  1.50154551 #> Item_10 0.7374958 -1.70288028 0.7242034 -1.64286078 #> Item_11 0.9877230  0.05684034 0.9651257  0.10471439 #> Item_12 1.6208445 -0.88830542 1.5451936 -0.93977204 #> Item_13 1.2113938  0.36247319 1.1111884  0.38731215 #> Item_14 1.2608594  1.10068854 1.1560649  1.11297399 #> Item_15 0.7483149 -0.31912299 0.7748404 -0.41081572 #> Item_16 1.1708992 -1.24683338 1.2450700 -1.28266411 #> Item_17 0.7422645  0.63674114 0.7340927  0.62169760 #> Item_18 0.9248296  1.12848731 0.9005267  1.11544193 #> Item_19 1.4767582  0.39539515 1.3362138  0.36179827 #> Item_20 1.0368814 -0.99330414 1.0896171 -0.90697018 #> Item_21 1.1357543  0.06752098 1.2338866  0.03823090 #> Item_22 1.4021119 -0.51282038 1.4367355 -0.54925456 #> Item_23 0.6786602 -0.68438097 0.8067015 -0.73454697 #> Item_24 0.4828002  1.68992778 0.5340588  1.63135837 #> Item_25 0.5011412  1.04812815 0.5206871  0.98189377 #> Item_26 1.6039924  0.63625385 1.5415293  0.65982060 #> Item_27 0.8328685  0.55938549 0.8555058  0.57838080 #> Item_28 1.1001393 -0.49299690 1.1861139 -0.56807834 #> Item_29 1.1996287  0.35417420 1.1836370  0.33337380 #> Item_30 0.7503191  1.32941502 0.9513067  0.71488089 #> Item_31 1.0934852  1.23450251 1.2435620  0.45176815 #> Item_32 1.3797225  1.73968930 1.6590501  0.73020049 #> Item_33 1.1122063  0.44125253 1.6147571 -0.21305838 #> Item_34 1.1635528  2.44296521 1.4897337  1.73397764 #> Item_35 1.0542788  1.36075678 1.0762814  0.67985447 #> Item_36 0.8625460  1.81754474 1.1473565  1.30696943 #> Item_37 0.7169594  0.86486730 0.9027740  0.47042973 #> Item_38 0.3789943  0.04394555 0.5013849 -0.21556737 #> Item_39 1.1801729  1.33626718 1.5303202  0.37556660 #> Item_40 0.7130625  0.96707202 1.0077403  0.57740905 #> Item_41 0.8654027  0.14975466 1.3385533 -0.67473104 #> Item_42 0.2054520 -0.58087717 0.2858926 -0.59855776 #> Item_43 0.5870526  1.91384494 0.6819203  1.32086286 #> Item_44 0.9773758  0.50918361 1.2811422 -0.27427356 #> Item_45 0.9438821 -0.15062731 1.2563355 -0.68644306 #> Item_46 1.2394331  1.28838231 1.4382188  0.48113247 #> Item_47 0.5466966  0.17590264 0.5760704 -0.35353046 #> Item_48 0.8112318  2.05870733 1.1702210  1.51040387 #> Item_49 0.8414788  0.16883149 1.1749563 -0.41985829 #> Item_50 0.6307197 -0.10310709 0.6079603 -0.48618269 plot(NWU_OEM, type = 'empiricalhist')   # No Prior Weights Updating and Multiple EM Cycles (NWU-MEM) NWU_MEM <- fixedCalib(dataset2, model = 1, old_mod = mod, PAU = 'NWU') #>  coef(NWU_MEM, simplify=TRUE) #> $items #>            a1      d g u #> Item_1  1.196 -0.366 0 1 #> Item_2  1.218  1.345 0 1 #> Item_3  1.029 -0.017 0 1 #> Item_4  0.817  0.230 0 1 #> Item_5  1.148 -0.462 0 1 #> Item_6  0.473  0.157 0 1 #> Item_7  1.172  0.491 0 1 #> Item_8  0.882  0.599 0 1 #> Item_9  0.732  1.367 0 1 #> Item_10 0.737 -1.703 0 1 #> Item_11 0.988  0.057 0 1 #> Item_12 1.621 -0.888 0 1 #> Item_13 1.211  0.362 0 1 #> Item_14 1.261  1.101 0 1 #> Item_15 0.748 -0.319 0 1 #> Item_16 1.171 -1.247 0 1 #> Item_17 0.742  0.637 0 1 #> Item_18 0.925  1.128 0 1 #> Item_19 1.477  0.395 0 1 #> Item_20 1.037 -0.993 0 1 #> Item_21 1.136  0.068 0 1 #> Item_22 1.402 -0.513 0 1 #> Item_23 0.679 -0.684 0 1 #> Item_24 0.483  1.690 0 1 #> Item_25 0.501  1.048 0 1 #> Item_26 1.604  0.636 0 1 #> Item_27 0.833  0.559 0 1 #> Item_28 1.100 -0.493 0 1 #> Item_29 1.200  0.354 0 1 #> Item_30 0.976  0.738 0 1 #> Item_31 1.355  0.436 0 1 #> Item_32 1.896  0.751 0 1 #> Item_33 1.483 -0.136 0 1 #> Item_34 1.566  1.615 0 1 #> Item_35 1.108  0.689 0 1 #> Item_36 1.027  1.297 0 1 #> Item_37 0.950  0.485 0 1 #> Item_38 0.636 -0.358 0 1 #> Item_39 1.561  0.369 0 1 #> Item_40 1.002  0.572 0 1 #> Item_41 1.293 -0.537 0 1 #> Item_42 0.237 -0.569 0 1 #> Item_43 0.759  1.528 0 1 #> Item_44 1.267 -0.198 0 1 #> Item_45 1.179 -0.719 0 1 #> Item_46 1.484  0.418 0 1 #> Item_47 0.517 -0.350 0 1 #> Item_48 1.204  1.560 0 1 #> Item_49 1.178 -0.381 0 1 #> Item_50 0.611 -0.485 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  data.frame(coef(NWU_MEM, simplify=TRUE)$items[,c('a1','d')],            pop_a1=a, pop_d=d) #>                a1           d    pop_a1       pop_d #> Item_1  1.1961890 -0.36582599 1.1756586 -0.37827025 #> Item_2  1.2180200  1.34513036 1.2128398  1.36338487 #> Item_3  1.0287076 -0.01749165 0.9672090  0.03751319 #> Item_4  0.8169838  0.22955350 0.8639508  0.24616399 #> Item_5  1.1477420 -0.46213650 1.1817662 -0.46968358 #> Item_6  0.4734409  0.15748181 0.4546132  0.19456759 #> Item_7  1.1723767  0.49084966 1.1890296  0.48381989 #> Item_8  0.8823964  0.59861143 0.9171448  0.57665673 #> Item_9  0.7320060  1.36669674 0.9147521  1.50154551 #> Item_10 0.7374958 -1.70288028 0.7242034 -1.64286078 #> Item_11 0.9877230  0.05684034 0.9651257  0.10471439 #> Item_12 1.6208445 -0.88830542 1.5451936 -0.93977204 #> Item_13 1.2113938  0.36247319 1.1111884  0.38731215 #> Item_14 1.2608594  1.10068854 1.1560649  1.11297399 #> Item_15 0.7483149 -0.31912299 0.7748404 -0.41081572 #> Item_16 1.1708992 -1.24683338 1.2450700 -1.28266411 #> Item_17 0.7422645  0.63674114 0.7340927  0.62169760 #> Item_18 0.9248296  1.12848731 0.9005267  1.11544193 #> Item_19 1.4767582  0.39539515 1.3362138  0.36179827 #> Item_20 1.0368814 -0.99330414 1.0896171 -0.90697018 #> Item_21 1.1357543  0.06752098 1.2338866  0.03823090 #> Item_22 1.4021119 -0.51282038 1.4367355 -0.54925456 #> Item_23 0.6786602 -0.68438097 0.8067015 -0.73454697 #> Item_24 0.4828002  1.68992778 0.5340588  1.63135837 #> Item_25 0.5011412  1.04812815 0.5206871  0.98189377 #> Item_26 1.6039924  0.63625385 1.5415293  0.65982060 #> Item_27 0.8328685  0.55938549 0.8555058  0.57838080 #> Item_28 1.1001393 -0.49299690 1.1861139 -0.56807834 #> Item_29 1.1996287  0.35417420 1.1836370  0.33337380 #> Item_30 0.9762030  0.73762603 0.9513067  0.71488089 #> Item_31 1.3546278  0.43608060 1.2435620  0.45176815 #> Item_32 1.8963614  0.75072559 1.6590501  0.73020049 #> Item_33 1.4833684 -0.13615393 1.6147571 -0.21305838 #> Item_34 1.5661380  1.61503162 1.4897337  1.73397764 #> Item_35 1.1080231  0.68889209 1.0762814  0.67985447 #> Item_36 1.0265916  1.29656964 1.1473565  1.30696943 #> Item_37 0.9495227  0.48504809 0.9027740  0.47042973 #> Item_38 0.6357917 -0.35821345 0.5013849 -0.21556737 #> Item_39 1.5609002  0.36934080 1.5303202  0.37556660 #> Item_40 1.0017413  0.57214795 1.0077403  0.57740905 #> Item_41 1.2934463 -0.53663846 1.3385533 -0.67473104 #> Item_42 0.2365342 -0.56867576 0.2858926 -0.59855776 #> Item_43 0.7585749  1.52822491 0.6819203  1.32086286 #> Item_44 1.2665593 -0.19834384 1.2811422 -0.27427356 #> Item_45 1.1786531 -0.71904132 1.2563355 -0.68644306 #> Item_46 1.4839823  0.41813815 1.4382188  0.48113247 #> Item_47 0.5165255 -0.35006720 0.5760704 -0.35353046 #> Item_48 1.2040324  1.55971466 1.1702210  1.51040387 #> Item_49 1.1779999 -0.38145049 1.1749563 -0.41985829 #> Item_50 0.6105721 -0.48525352 0.6079603 -0.48618269 plot(NWU_MEM, type = 'empiricalhist')   # One Prior Weights Updating and One EM Cycle (OWU-OEM) OWU_OEM <- fixedCalib(dataset2, model=1, old_mod=mod, PAU='OWU', NEMC=\"OEM\") #>  coef(OWU_OEM, simplify=TRUE) #> $items #>            a1      d g u #> Item_1  1.196 -0.366 0 1 #> Item_2  1.218  1.345 0 1 #> Item_3  1.029 -0.017 0 1 #> Item_4  0.817  0.230 0 1 #> Item_5  1.148 -0.462 0 1 #> Item_6  0.473  0.157 0 1 #> Item_7  1.172  0.491 0 1 #> Item_8  0.882  0.599 0 1 #> Item_9  0.732  1.367 0 1 #> Item_10 0.737 -1.703 0 1 #> Item_11 0.988  0.057 0 1 #> Item_12 1.621 -0.888 0 1 #> Item_13 1.211  0.362 0 1 #> Item_14 1.261  1.101 0 1 #> Item_15 0.748 -0.319 0 1 #> Item_16 1.171 -1.247 0 1 #> Item_17 0.742  0.637 0 1 #> Item_18 0.925  1.128 0 1 #> Item_19 1.477  0.395 0 1 #> Item_20 1.037 -0.993 0 1 #> Item_21 1.136  0.068 0 1 #> Item_22 1.402 -0.513 0 1 #> Item_23 0.679 -0.684 0 1 #> Item_24 0.483  1.690 0 1 #> Item_25 0.501  1.048 0 1 #> Item_26 1.604  0.636 0 1 #> Item_27 0.833  0.559 0 1 #> Item_28 1.100 -0.493 0 1 #> Item_29 1.200  0.354 0 1 #> Item_30 0.734  1.342 0 1 #> Item_31 1.081  1.235 0 1 #> Item_32 1.354  1.740 0 1 #> Item_33 1.087  0.449 0 1 #> Item_34 1.180  2.469 0 1 #> Item_35 1.080  1.352 0 1 #> Item_36 0.867  1.826 0 1 #> Item_37 0.736  0.845 0 1 #> Item_38 0.407  0.018 0 1 #> Item_39 1.192  1.330 0 1 #> Item_40 0.694  0.970 0 1 #> Item_41 0.876  0.141 0 1 #> Item_42 0.207 -0.593 0 1 #> Item_43 0.608  1.915 0 1 #> Item_44 0.948  0.525 0 1 #> Item_45 0.918 -0.150 0 1 #> Item_46 1.246  1.287 0 1 #> Item_47 0.541  0.194 0 1 #> Item_48 0.824  2.052 0 1 #> Item_49 0.881  0.150 0 1 #> Item_50 0.643 -0.109 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  data.frame(coef(OWU_OEM, simplify=TRUE)$items[,c('a1','d')], pop_a1=a, pop_d=d) #>                a1           d    pop_a1       pop_d #> Item_1  1.1961890 -0.36582599 1.1756586 -0.37827025 #> Item_2  1.2180200  1.34513036 1.2128398  1.36338487 #> Item_3  1.0287076 -0.01749165 0.9672090  0.03751319 #> Item_4  0.8169838  0.22955350 0.8639508  0.24616399 #> Item_5  1.1477420 -0.46213650 1.1817662 -0.46968358 #> Item_6  0.4734409  0.15748181 0.4546132  0.19456759 #> Item_7  1.1723767  0.49084966 1.1890296  0.48381989 #> Item_8  0.8823964  0.59861143 0.9171448  0.57665673 #> Item_9  0.7320060  1.36669674 0.9147521  1.50154551 #> Item_10 0.7374958 -1.70288028 0.7242034 -1.64286078 #> Item_11 0.9877230  0.05684034 0.9651257  0.10471439 #> Item_12 1.6208445 -0.88830542 1.5451936 -0.93977204 #> Item_13 1.2113938  0.36247319 1.1111884  0.38731215 #> Item_14 1.2608594  1.10068854 1.1560649  1.11297399 #> Item_15 0.7483149 -0.31912299 0.7748404 -0.41081572 #> Item_16 1.1708992 -1.24683338 1.2450700 -1.28266411 #> Item_17 0.7422645  0.63674114 0.7340927  0.62169760 #> Item_18 0.9248296  1.12848731 0.9005267  1.11544193 #> Item_19 1.4767582  0.39539515 1.3362138  0.36179827 #> Item_20 1.0368814 -0.99330414 1.0896171 -0.90697018 #> Item_21 1.1357543  0.06752098 1.2338866  0.03823090 #> Item_22 1.4021119 -0.51282038 1.4367355 -0.54925456 #> Item_23 0.6786602 -0.68438097 0.8067015 -0.73454697 #> Item_24 0.4828002  1.68992778 0.5340588  1.63135837 #> Item_25 0.5011412  1.04812815 0.5206871  0.98189377 #> Item_26 1.6039924  0.63625385 1.5415293  0.65982060 #> Item_27 0.8328685  0.55938549 0.8555058  0.57838080 #> Item_28 1.1001393 -0.49299690 1.1861139 -0.56807834 #> Item_29 1.1996287  0.35417420 1.1836370  0.33337380 #> Item_30 0.7338596  1.34171621 0.9513067  0.71488089 #> Item_31 1.0810934  1.23518942 1.2435620  0.45176815 #> Item_32 1.3536031  1.74007904 1.6590501  0.73020049 #> Item_33 1.0871425  0.44941021 1.6147571 -0.21305838 #> Item_34 1.1800858  2.46871234 1.4897337  1.73397764 #> Item_35 1.0803263  1.35175673 1.0762814  0.67985447 #> Item_36 0.8666080  1.82586462 1.1473565  1.30696943 #> Item_37 0.7358795  0.84485396 0.9027740  0.47042973 #> Item_38 0.4070019  0.01833533 0.5013849 -0.21556737 #> Item_39 1.1921382  1.33027311 1.5303202  0.37556660 #> Item_40 0.6941284  0.97027712 1.0077403  0.57740905 #> Item_41 0.8759719  0.14117791 1.3385533 -0.67473104 #> Item_42 0.2070009 -0.59318726 0.2858926 -0.59855776 #> Item_43 0.6082669  1.91531663 0.6819203  1.32086286 #> Item_44 0.9481219  0.52535227 1.2811422 -0.27427356 #> Item_45 0.9181546 -0.15002032 1.2563355 -0.68644306 #> Item_46 1.2461867  1.28672335 1.4382188  0.48113247 #> Item_47 0.5414343  0.19387196 0.5760704 -0.35353046 #> Item_48 0.8238261  2.05156006 1.1702210  1.51040387 #> Item_49 0.8809591  0.15027203 1.1749563 -0.41985829 #> Item_50 0.6425456 -0.10887582 0.6079603 -0.48618269 plot(OWU_OEM, type = 'empiricalhist')   # One Prior Weights Updating and Multiple EM Cycles (OWU-MEM) OWU_MEM <- fixedCalib(dataset2, model = 1, old_mod = mod, PAU = 'OWU') #>  coef(OWU_MEM, simplify=TRUE) #> $items #>            a1      d g u #> Item_1  1.196 -0.366 0 1 #> Item_2  1.218  1.345 0 1 #> Item_3  1.029 -0.017 0 1 #> Item_4  0.817  0.230 0 1 #> Item_5  1.148 -0.462 0 1 #> Item_6  0.473  0.157 0 1 #> Item_7  1.172  0.491 0 1 #> Item_8  0.882  0.599 0 1 #> Item_9  0.732  1.367 0 1 #> Item_10 0.737 -1.703 0 1 #> Item_11 0.988  0.057 0 1 #> Item_12 1.621 -0.888 0 1 #> Item_13 1.211  0.362 0 1 #> Item_14 1.261  1.101 0 1 #> Item_15 0.748 -0.319 0 1 #> Item_16 1.171 -1.247 0 1 #> Item_17 0.742  0.637 0 1 #> Item_18 0.925  1.128 0 1 #> Item_19 1.477  0.395 0 1 #> Item_20 1.037 -0.993 0 1 #> Item_21 1.136  0.068 0 1 #> Item_22 1.402 -0.513 0 1 #> Item_23 0.679 -0.684 0 1 #> Item_24 0.483  1.690 0 1 #> Item_25 0.501  1.048 0 1 #> Item_26 1.604  0.636 0 1 #> Item_27 0.833  0.559 0 1 #> Item_28 1.100 -0.493 0 1 #> Item_29 1.200  0.354 0 1 #> Item_30 0.975  0.738 0 1 #> Item_31 1.353  0.436 0 1 #> Item_32 1.892  0.749 0 1 #> Item_33 1.482 -0.137 0 1 #> Item_34 1.563  1.614 0 1 #> Item_35 1.107  0.689 0 1 #> Item_36 1.026  1.297 0 1 #> Item_37 0.949  0.485 0 1 #> Item_38 0.637 -0.358 0 1 #> Item_39 1.559  0.369 0 1 #> Item_40 1.001  0.572 0 1 #> Item_41 1.294 -0.537 0 1 #> Item_42 0.237 -0.569 0 1 #> Item_43 0.758  1.528 0 1 #> Item_44 1.266 -0.199 0 1 #> Item_45 1.179 -0.719 0 1 #> Item_46 1.482  0.418 0 1 #> Item_47 0.517 -0.350 0 1 #> Item_48 1.203  1.560 0 1 #> Item_49 1.178 -0.382 0 1 #> Item_50 0.611 -0.485 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  data.frame(coef(OWU_MEM, simplify=TRUE)$items[,c('a1','d')],            pop_a1=a, pop_d=d) #>                a1           d    pop_a1       pop_d #> Item_1  1.1961890 -0.36582599 1.1756586 -0.37827025 #> Item_2  1.2180200  1.34513036 1.2128398  1.36338487 #> Item_3  1.0287076 -0.01749165 0.9672090  0.03751319 #> Item_4  0.8169838  0.22955350 0.8639508  0.24616399 #> Item_5  1.1477420 -0.46213650 1.1817662 -0.46968358 #> Item_6  0.4734409  0.15748181 0.4546132  0.19456759 #> Item_7  1.1723767  0.49084966 1.1890296  0.48381989 #> Item_8  0.8823964  0.59861143 0.9171448  0.57665673 #> Item_9  0.7320060  1.36669674 0.9147521  1.50154551 #> Item_10 0.7374958 -1.70288028 0.7242034 -1.64286078 #> Item_11 0.9877230  0.05684034 0.9651257  0.10471439 #> Item_12 1.6208445 -0.88830542 1.5451936 -0.93977204 #> Item_13 1.2113938  0.36247319 1.1111884  0.38731215 #> Item_14 1.2608594  1.10068854 1.1560649  1.11297399 #> Item_15 0.7483149 -0.31912299 0.7748404 -0.41081572 #> Item_16 1.1708992 -1.24683338 1.2450700 -1.28266411 #> Item_17 0.7422645  0.63674114 0.7340927  0.62169760 #> Item_18 0.9248296  1.12848731 0.9005267  1.11544193 #> Item_19 1.4767582  0.39539515 1.3362138  0.36179827 #> Item_20 1.0368814 -0.99330414 1.0896171 -0.90697018 #> Item_21 1.1357543  0.06752098 1.2338866  0.03823090 #> Item_22 1.4021119 -0.51282038 1.4367355 -0.54925456 #> Item_23 0.6786602 -0.68438097 0.8067015 -0.73454697 #> Item_24 0.4828002  1.68992778 0.5340588  1.63135837 #> Item_25 0.5011412  1.04812815 0.5206871  0.98189377 #> Item_26 1.6039924  0.63625385 1.5415293  0.65982060 #> Item_27 0.8328685  0.55938549 0.8555058  0.57838080 #> Item_28 1.1001393 -0.49299690 1.1861139 -0.56807834 #> Item_29 1.1996287  0.35417420 1.1836370  0.33337380 #> Item_30 0.9754835  0.73759996 0.9513067  0.71488089 #> Item_31 1.3529960  0.43565857 1.2435620  0.45176815 #> Item_32 1.8920655  0.74941926 1.6590501  0.73020049 #> Item_33 1.4823957 -0.13676561 1.6147571 -0.21305838 #> Item_34 1.5632963  1.61443582 1.4897337  1.73397764 #> Item_35 1.1070549  0.68876441 1.0762814  0.67985447 #> Item_36 1.0257494  1.29658002 1.1473565  1.30696943 #> Item_37 0.9487642  0.48500521 0.9027740  0.47042973 #> Item_38 0.6365371 -0.35814281 0.5013849 -0.21556737 #> Item_39 1.5587391  0.36866684 1.5303202  0.37556660 #> Item_40 1.0011701  0.57211468 1.0077403  0.57740905 #> Item_41 1.2936486 -0.53716279 1.3385533 -0.67473104 #> Item_42 0.2372635 -0.56862885 0.2858926 -0.59855776 #> Item_43 0.7581178  1.52829512 0.6819203  1.32086286 #> Item_44 1.2655570 -0.19867816 1.2811422 -0.27427356 #> Item_45 1.1789916 -0.71942555 1.2563355 -0.68644306 #> Item_46 1.4820218  0.41756426 1.4382188  0.48113247 #> Item_47 0.5174459 -0.34998852 0.5760704 -0.35353046 #> Item_48 1.2029294  1.55973508 1.1702210  1.51040387 #> Item_49 1.1780664 -0.38178278 1.1749563 -0.41985829 #> Item_50 0.6113326 -0.48518034 0.6079603 -0.48618269 plot(OWU_MEM, type = 'empiricalhist')   # Multiple Prior Weights Updating and Multiple EM Cycles (MWU-MEM) MWU_MEM <- fixedCalib(dataset2, model = 1, old_mod = mod) #>  coef(MWU_MEM, simplify=TRUE) #> $items #>            a1      d g u #> Item_1  1.196 -0.366 0 1 #> Item_2  1.218  1.345 0 1 #> Item_3  1.029 -0.017 0 1 #> Item_4  0.817  0.230 0 1 #> Item_5  1.148 -0.462 0 1 #> Item_6  0.473  0.157 0 1 #> Item_7  1.172  0.491 0 1 #> Item_8  0.882  0.599 0 1 #> Item_9  0.732  1.367 0 1 #> Item_10 0.737 -1.703 0 1 #> Item_11 0.988  0.057 0 1 #> Item_12 1.621 -0.888 0 1 #> Item_13 1.211  0.362 0 1 #> Item_14 1.261  1.101 0 1 #> Item_15 0.748 -0.319 0 1 #> Item_16 1.171 -1.247 0 1 #> Item_17 0.742  0.637 0 1 #> Item_18 0.925  1.128 0 1 #> Item_19 1.477  0.395 0 1 #> Item_20 1.037 -0.993 0 1 #> Item_21 1.136  0.068 0 1 #> Item_22 1.402 -0.513 0 1 #> Item_23 0.679 -0.684 0 1 #> Item_24 0.483  1.690 0 1 #> Item_25 0.501  1.048 0 1 #> Item_26 1.604  0.636 0 1 #> Item_27 0.833  0.559 0 1 #> Item_28 1.100 -0.493 0 1 #> Item_29 1.200  0.354 0 1 #> Item_30 0.979  0.736 0 1 #> Item_31 1.356  0.434 0 1 #> Item_32 1.901  0.748 0 1 #> Item_33 1.486 -0.138 0 1 #> Item_34 1.571  1.614 0 1 #> Item_35 1.110  0.687 0 1 #> Item_36 1.033  1.297 0 1 #> Item_37 0.952  0.484 0 1 #> Item_38 0.642 -0.359 0 1 #> Item_39 1.565  0.367 0 1 #> Item_40 1.006  0.571 0 1 #> Item_41 1.299 -0.539 0 1 #> Item_42 0.241 -0.569 0 1 #> Item_43 0.763  1.528 0 1 #> Item_44 1.269 -0.200 0 1 #> Item_45 1.180 -0.720 0 1 #> Item_46 1.488  0.416 0 1 #> Item_47 0.523 -0.351 0 1 #> Item_48 1.209  1.559 0 1 #> Item_49 1.182 -0.383 0 1 #> Item_50 0.616 -0.486 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  data.frame(coef(MWU_MEM, simplify=TRUE)$items[,c('a1','d')],            pop_a1=a, pop_d=d) #>                a1           d    pop_a1       pop_d #> Item_1  1.1961890 -0.36582599 1.1756586 -0.37827025 #> Item_2  1.2180200  1.34513036 1.2128398  1.36338487 #> Item_3  1.0287076 -0.01749165 0.9672090  0.03751319 #> Item_4  0.8169838  0.22955350 0.8639508  0.24616399 #> Item_5  1.1477420 -0.46213650 1.1817662 -0.46968358 #> Item_6  0.4734409  0.15748181 0.4546132  0.19456759 #> Item_7  1.1723767  0.49084966 1.1890296  0.48381989 #> Item_8  0.8823964  0.59861143 0.9171448  0.57665673 #> Item_9  0.7320060  1.36669674 0.9147521  1.50154551 #> Item_10 0.7374958 -1.70288028 0.7242034 -1.64286078 #> Item_11 0.9877230  0.05684034 0.9651257  0.10471439 #> Item_12 1.6208445 -0.88830542 1.5451936 -0.93977204 #> Item_13 1.2113938  0.36247319 1.1111884  0.38731215 #> Item_14 1.2608594  1.10068854 1.1560649  1.11297399 #> Item_15 0.7483149 -0.31912299 0.7748404 -0.41081572 #> Item_16 1.1708992 -1.24683338 1.2450700 -1.28266411 #> Item_17 0.7422645  0.63674114 0.7340927  0.62169760 #> Item_18 0.9248296  1.12848731 0.9005267  1.11544193 #> Item_19 1.4767582  0.39539515 1.3362138  0.36179827 #> Item_20 1.0368814 -0.99330414 1.0896171 -0.90697018 #> Item_21 1.1357543  0.06752098 1.2338866  0.03823090 #> Item_22 1.4021119 -0.51282038 1.4367355 -0.54925456 #> Item_23 0.6786602 -0.68438097 0.8067015 -0.73454697 #> Item_24 0.4828002  1.68992778 0.5340588  1.63135837 #> Item_25 0.5011412  1.04812815 0.5206871  0.98189377 #> Item_26 1.6039924  0.63625385 1.5415293  0.65982060 #> Item_27 0.8328685  0.55938549 0.8555058  0.57838080 #> Item_28 1.1001393 -0.49299690 1.1861139 -0.56807834 #> Item_29 1.1996287  0.35417420 1.1836370  0.33337380 #> Item_30 0.9791660  0.73649261 0.9513067  0.71488089 #> Item_31 1.3557620  0.43401149 1.2435620  0.45176815 #> Item_32 1.9007882  0.74806045 1.6590501  0.73020049 #> Item_33 1.4862529 -0.13819824 1.6147571 -0.21305838 #> Item_34 1.5713559  1.61388772 1.4897337  1.73397764 #> Item_35 1.1101719  0.68737052 1.0762814  0.67985447 #> Item_36 1.0330416  1.29655187 1.1473565  1.30696943 #> Item_37 0.9517934  0.48386436 0.9027740  0.47042973 #> Item_38 0.6415895 -0.35896158 0.5013849 -0.21556737 #> Item_39 1.5653049  0.36728263 1.5303202  0.37556660 #> Item_40 1.0055938  0.57108702 1.0077403  0.57740905 #> Item_41 1.2988445 -0.53887261 1.3385533 -0.67473104 #> Item_42 0.2407043 -0.56898111 0.2858926 -0.59855776 #> Item_43 0.7634191  1.52801497 0.6819203  1.32086286 #> Item_44 1.2688454 -0.20002553 1.2811422 -0.27427356 #> Item_45 1.1799250 -0.72019334 1.2563355 -0.68644306 #> Item_46 1.4880374  0.41618563 1.4382188  0.48113247 #> Item_47 0.5228163 -0.35071973 0.5760704 -0.35353046 #> Item_48 1.2091851  1.55916704 1.1702210  1.51040387 #> Item_49 1.1823034 -0.38320022 1.1749563 -0.41985829 #> Item_50 0.6156231 -0.48588671 0.6079603 -0.48618269 plot(MWU_MEM, type = 'empiricalhist')   # factor scores distribution check fs <- fscores(MWU_MEM) hist(fs)  c(mean_calib=mean(fs[1:N, ]), sd_calib=sd(fs[1:N, ])) #>    mean_calib      sd_calib  #> -0.0001434688  0.9215504578  c(mean_exper=mean(fs[-c(1:N), ]), sd_exper=sd(fs[-c(1:N), ])) #> mean_exper   sd_exper  #> 0.03352674 0.93335579    ############################ ## Item length constraint example for each participant in the experimental ## items group. In this example, all participants were forced to have a test ## length of J=30, though the item pool had J=50 total items.  # new experimental data (relatively extreme, theta ~ N(.5,1.5)) dataset2 <- simdata(a, d, N = 1000, itemtype=itemtype,     mu=.5, sigma=matrix(1.5))  # Add missing values to each participant in new dataset where individuals # were randomly administered 10 experimental items, subject to the constraint # that each participant received a test with J=30 items. dataset2 <- t(apply(dataset2, 1, function(x){    NA_precalib <- sample(1:30, 10)    NA_experimental <- sample(31:50, 10)    x[c(NA_precalib, NA_experimental)] <- NA    x })) head(dataset2) #>      Item_1 Item_2 Item_3 Item_4 Item_5 Item_6 Item_7 Item_8 Item_9 Item_10 #> [1,]     NA      1      0      0     NA     NA      0     NA      1       0 #> [2,]     NA     NA     NA      1      1      1     NA      0      1      NA #> [3,]     NA     NA      0      1      1      1      1     NA      1       0 #> [4,]     NA      1      1     NA      0     NA      1      1      1       1 #> [5,]      1      1      1      1     NA     NA      0      1     NA      NA #> [6,]      1      0      0      1      1      1     NA     NA     NA       0 #>      Item_11 Item_12 Item_13 Item_14 Item_15 Item_16 Item_17 Item_18 Item_19 #> [1,]       1       0      NA       0      NA       0       0       1       0 #> [2,]       1       1       1      NA       0       0       1      NA       1 #> [3,]       1       1       0       1       1       1      NA      NA      NA #> [4,]      NA      NA       1      NA       0       0       1       0       0 #> [5,]       1      NA       0       1       1       0       1       1      NA #> [6,]       0       1       1       1       0       0      NA       1      NA #>      Item_20 Item_21 Item_22 Item_23 Item_24 Item_25 Item_26 Item_27 Item_28 #> [1,]       0       0      NA       0       1      NA       0       1       0 #> [2,]      NA       0       1      NA       1       1       1       1       0 #> [3,]       1       1      NA       0      NA      NA       1      NA       1 #> [4,]       1       1       1      NA      NA       1       1       1       1 #> [5,]       1      NA       1      NA       1      NA      NA       0       1 #> [6,]       1       1       0       0       0      NA      NA      NA       0 #>      Item_29 Item_30 Item_31 Item_32 Item_33 Item_34 Item_35 Item_36 Item_37 #> [1,]      NA      NA       0       1       1      NA       0      NA       0 #> [2,]      NA       1       1      NA      NA       1      NA       1       1 #> [3,]       1       1       1      NA      NA      NA      NA       1      NA #> [4,]      NA      NA      NA      NA      NA      NA       0      NA       1 #> [5,]       1       1      NA       1      NA       1       1      NA      NA #> [6,]      NA      NA      NA       1      NA      NA       1       1       0 #>      Item_38 Item_39 Item_40 Item_41 Item_42 Item_43 Item_44 Item_45 Item_46 #> [1,]       0      NA      NA      NA      NA       1       0      NA       0 #> [2,]      NA      NA      NA       1      NA       1       1       1       1 #> [3,]       1      NA      NA      NA       1       0       1      NA      NA #> [4,]       0       1      NA      NA      NA      NA       1       1       0 #> [5,]      NA       1       1      NA      NA       1      NA      NA       1 #> [6,]       1      NA      NA      NA      NA       1      NA      NA       1 #>      Item_47 Item_48 Item_49 Item_50 #> [1,]      NA      NA       0      NA #> [2,]      NA       1      NA      NA #> [3,]       0       0       1       1 #> [4,]      NA       1       0       1 #> [5,]      NA       1       1       1 #> [6,]       0       1      NA       1  # check that all individuals had 30 items all(rowSums(!is.na(dataset2)) == 30) #> [1] TRUE  # Multiple Prior Weights Updating and Multiple EM Cycles (MWU-MEM) MWU_MEM <- fixedCalib(dataset2, model = 1, old_mod = mod) #>  coef(MWU_MEM, simplify=TRUE) #> $items #>            a1      d g u #> Item_1  1.196 -0.366 0 1 #> Item_2  1.218  1.345 0 1 #> Item_3  1.029 -0.017 0 1 #> Item_4  0.817  0.230 0 1 #> Item_5  1.148 -0.462 0 1 #> Item_6  0.473  0.157 0 1 #> Item_7  1.172  0.491 0 1 #> Item_8  0.882  0.599 0 1 #> Item_9  0.732  1.367 0 1 #> Item_10 0.737 -1.703 0 1 #> Item_11 0.988  0.057 0 1 #> Item_12 1.621 -0.888 0 1 #> Item_13 1.211  0.362 0 1 #> Item_14 1.261  1.101 0 1 #> Item_15 0.748 -0.319 0 1 #> Item_16 1.171 -1.247 0 1 #> Item_17 0.742  0.637 0 1 #> Item_18 0.925  1.128 0 1 #> Item_19 1.477  0.395 0 1 #> Item_20 1.037 -0.993 0 1 #> Item_21 1.136  0.068 0 1 #> Item_22 1.402 -0.513 0 1 #> Item_23 0.679 -0.684 0 1 #> Item_24 0.483  1.690 0 1 #> Item_25 0.501  1.048 0 1 #> Item_26 1.604  0.636 0 1 #> Item_27 0.833  0.559 0 1 #> Item_28 1.100 -0.493 0 1 #> Item_29 1.200  0.354 0 1 #> Item_30 1.074  1.010 0 1 #> Item_31 1.416  0.729 0 1 #> Item_32 2.098  0.853 0 1 #> Item_33 1.622  0.025 0 1 #> Item_34 1.242  1.731 0 1 #> Item_35 1.127  0.868 0 1 #> Item_36 1.212  1.155 0 1 #> Item_37 1.022  0.621 0 1 #> Item_38 0.654 -0.203 0 1 #> Item_39 1.333  0.685 0 1 #> Item_40 0.939  0.678 0 1 #> Item_41 1.833 -0.565 0 1 #> Item_42 0.387 -0.631 0 1 #> Item_43 0.691  1.108 0 1 #> Item_44 1.232 -0.054 0 1 #> Item_45 1.105 -0.460 0 1 #> Item_46 1.401  0.694 0 1 #> Item_47 0.532 -0.290 0 1 #> Item_48 1.122  1.509 0 1 #> Item_49 1.158 -0.318 0 1 #> Item_50 0.692 -0.432 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  data.frame(coef(MWU_MEM, simplify=TRUE)$items[,c('a1','d')],            pop_a1=a, pop_d=d) #>                a1           d    pop_a1       pop_d #> Item_1  1.1961890 -0.36582599 1.1756586 -0.37827025 #> Item_2  1.2180200  1.34513036 1.2128398  1.36338487 #> Item_3  1.0287076 -0.01749165 0.9672090  0.03751319 #> Item_4  0.8169838  0.22955350 0.8639508  0.24616399 #> Item_5  1.1477420 -0.46213650 1.1817662 -0.46968358 #> Item_6  0.4734409  0.15748181 0.4546132  0.19456759 #> Item_7  1.1723767  0.49084966 1.1890296  0.48381989 #> Item_8  0.8823964  0.59861143 0.9171448  0.57665673 #> Item_9  0.7320060  1.36669674 0.9147521  1.50154551 #> Item_10 0.7374958 -1.70288028 0.7242034 -1.64286078 #> Item_11 0.9877230  0.05684034 0.9651257  0.10471439 #> Item_12 1.6208445 -0.88830542 1.5451936 -0.93977204 #> Item_13 1.2113938  0.36247319 1.1111884  0.38731215 #> Item_14 1.2608594  1.10068854 1.1560649  1.11297399 #> Item_15 0.7483149 -0.31912299 0.7748404 -0.41081572 #> Item_16 1.1708992 -1.24683338 1.2450700 -1.28266411 #> Item_17 0.7422645  0.63674114 0.7340927  0.62169760 #> Item_18 0.9248296  1.12848731 0.9005267  1.11544193 #> Item_19 1.4767582  0.39539515 1.3362138  0.36179827 #> Item_20 1.0368814 -0.99330414 1.0896171 -0.90697018 #> Item_21 1.1357543  0.06752098 1.2338866  0.03823090 #> Item_22 1.4021119 -0.51282038 1.4367355 -0.54925456 #> Item_23 0.6786602 -0.68438097 0.8067015 -0.73454697 #> Item_24 0.4828002  1.68992778 0.5340588  1.63135837 #> Item_25 0.5011412  1.04812815 0.5206871  0.98189377 #> Item_26 1.6039924  0.63625385 1.5415293  0.65982060 #> Item_27 0.8328685  0.55938549 0.8555058  0.57838080 #> Item_28 1.1001393 -0.49299690 1.1861139 -0.56807834 #> Item_29 1.1996287  0.35417420 1.1836370  0.33337380 #> Item_30 1.0736650  1.01026900 0.9513067  0.71488089 #> Item_31 1.4162584  0.72856155 1.2435620  0.45176815 #> Item_32 2.0975461  0.85255109 1.6590501  0.73020049 #> Item_33 1.6216973  0.02486148 1.6147571 -0.21305838 #> Item_34 1.2421629  1.73077613 1.4897337  1.73397764 #> Item_35 1.1268922  0.86756137 1.0762814  0.67985447 #> Item_36 1.2121379  1.15479360 1.1473565  1.30696943 #> Item_37 1.0218142  0.62136695 0.9027740  0.47042973 #> Item_38 0.6544987 -0.20307537 0.5013849 -0.21556737 #> Item_39 1.3326681  0.68465299 1.5303202  0.37556660 #> Item_40 0.9387813  0.67776738 1.0077403  0.57740905 #> Item_41 1.8326249 -0.56461189 1.3385533 -0.67473104 #> Item_42 0.3866839 -0.63085106 0.2858926 -0.59855776 #> Item_43 0.6911816  1.10845312 0.6819203  1.32086286 #> Item_44 1.2321139 -0.05383912 1.2811422 -0.27427356 #> Item_45 1.1045328 -0.45957575 1.2563355 -0.68644306 #> Item_46 1.4012118  0.69353524 1.4382188  0.48113247 #> Item_47 0.5324164 -0.28980316 0.5760704 -0.35353046 #> Item_48 1.1215187  1.50886830 1.1702210  1.51040387 #> Item_49 1.1583841 -0.31781501 1.1749563 -0.41985829 #> Item_50 0.6916807 -0.43180765 0.6079603 -0.48618269 plot(MWU_MEM, type = 'empiricalhist')   ## factor scores check fs <- fscores(MWU_MEM) hist(fs)  c(mean_calib=mean(fs[1:N, ]), sd_calib=sd(fs[1:N, ])) #>    mean_calib      sd_calib  #> -0.0001434688  0.9215504578   ## shrinkage, but generally different from calibrated sample c(mean_exper=mean(fs[-c(1:N), ]), sd_exper=sd(fs[-c(1:N), ])) #> mean_exper   sd_exper  #>  0.3531216  1.0349737    # }"},{"path":"https://philchalmers.github.io/mirt/reference/fixef.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute latent regression fixed effect expected values — fixef","title":"Compute latent regression fixed effect expected values — fixef","text":"Create expected values fixed effects parameters latent regression models.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/fixef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute latent regression fixed effect expected values — fixef","text":"","code":"fixef(x)"},{"path":"https://philchalmers.github.io/mirt/reference/fixef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute latent regression fixed effect expected values — fixef","text":"x estimated model object mixedmirt mirt function","code":""},{"path":"https://philchalmers.github.io/mirt/reference/fixef.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute latent regression fixed effect expected values — fixef","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06 Chalmers, R. P. (2015). Extended Mixed-Effects Item Response Models MH-RM Algorithm. Journal Educational Measurement, 52, 200-222. doi:10.1111/jedm.12072","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/fixef.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute latent regression fixed effect expected values — fixef","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/fixef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute latent regression fixed effect expected values — fixef","text":"","code":"# \\donttest{  #simulate data set.seed(1234) N <- 1000  # covariates X1 <- rnorm(N); X2 <- rnorm(N) covdata <- data.frame(X1, X2) Theta <- matrix(0.5 * X1 + -1 * X2 + rnorm(N, sd = 0.5))  #items and response data a <- matrix(1, 20); d <- matrix(rnorm(20)) dat <- simdata(a, d, 1000, itemtype = '2PL', Theta=Theta)  #conditional model using X1 and X2 as predictors of Theta mod1 <- mirt(dat, 1, 'Rasch', covdata=covdata, formula = ~ X1 + X2) #>   #latent regression fixed effects (i.e., expected values) fe <- fixef(mod1) head(fe) #>              F1 #> [1,]  0.6128940 #> [2,] -0.1661763 #> [3,]  2.1652373 #> [4,] -1.8932285 #> [5,] -0.5021551 #> [6,]  2.2405531  # with mixedmirt() mod1b <- mixedmirt(dat, covdata, 1, lr.fixed = ~ X1 + X2, fixed = ~ 0 + items) #> , Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.1965, Max-Change = 0.1716, Max-Change = 0.1474, Max-Change = 0.1256, Max-Change = 0.1060, Max-Change = 0.0884, Max-Change = 0.0838, Max-Change = 0.0746, Max-Change = 0.0642, Max-Change = 0.0512, Max-Change = 0.0449, Max-Change = 0.0425, Max-Change = 0.0340, Max-Change = 0.0309, Max-Change = 0.0248, Max-Change = 0.0231, Max-Change = 0.0157, Max-Change = 0.0173, Max-Change = 0.0177, Max-Change = 0.0151, Max-Change = 0.0149, Max-Change = 0.0139, Max-Change = 0.0103, Max-Change = 0.0071, Max-Change = 0.0092, Max-Change = 0.0086, Max-Change = 0.0073, Max-Change = 0.0079, Max-Change = 0.0073, Max-Change = 0.0063, Max-Change = 0.0070, Max-Change = 0.0069, Max-Change = 0.0032, Max-Change = 0.0047, Max-Change = 0.0042, Max-Change = 0.0033, Max-Change = 0.0047, Max-Change = 0.0034, Max-Change = 0.0043, Max-Change = 0.0048, Max-Change = 0.0044, Max-Change = 0.0080, Max-Change = 0.0022, Max-Change = 0.0017, Max-Change = 0.0045, Max-Change = 0.0037, Max-Change = 0.0041, Max-Change = 0.0038, Max-Change = 0.0040, Max-Change = 0.0035, Max-Change = 0.0043, Max-Change = 0.0025, Max-Change = 0.0057, Max-Change = 0.0039, Max-Change = 0.0038, Max-Change = 0.0032, Max-Change = 0.0017, Max-Change = 0.0055, Max-Change = 0.0042, Max-Change = 0.0036, Max-Change = 0.0026, Max-Change = 0.0024, Max-Change = 0.0054, Max-Change = 0.0044, Max-Change = 0.0109, Max-Change = 0.0031, Max-Change = 0.0054, Max-Change = 0.0019, Max-Change = 0.0011, Max-Change = 0.0019, Max-Change = 0.0055, Max-Change = 0.0013, Max-Change = 0.0055, Max-Change = 0.0033, Max-Change = 0.0044, Max-Change = 0.0044, Max-Change = 0.0031, Max-Change = 0.0014, Max-Change = 0.0081, Max-Change = 0.0021, Max-Change = 0.0045, Max-Change = 0.0032, Max-Change = 0.0042, Max-Change = 0.0034, Max-Change = 0.0071, Max-Change = 0.0059, Max-Change = 0.0019, Max-Change = 0.0014, Max-Change = 0.0050, Max-Change = 0.0038, Max-Change = 0.0012, Max-Change = 0.0046, Max-Change = 0.0034, Max-Change = 0.0024, Max-Change = 0.0047, Max-Change = 0.0046, Max-Change = 0.0034, Max-Change = 0.0041, Max-Change = 0.0044, Max-Change = 0.0024, Max-Change = 0.0054, Max-Change = 0.0059, Max-Change = 0.0032, Max-Change = 0.0045, Max-Change = 0.0028, Max-Change = 0.0024, Max-Change = 0.0044, Max-Change = 0.0050, Max-Change = 0.0011, Max-Change = 0.0037, Max-Change = 0.0037, Max-Change = 0.0026, Max-Change = 0.0029, Max-Change = 0.0040, Max-Change = 0.0037, Max-Change = 0.0056, Max-Change = 0.0046, Max-Change = 0.0020, Max-Change = 0.0016, Max-Change = 0.0041, Max-Change = 0.0064, Max-Change = 0.0059, Max-Change = 0.0042, Max-Change = 0.0026, Max-Change = 0.0036, Max-Change = 0.0028, Max-Change = 0.0044, Max-Change = 0.0035, Max-Change = 0.0026, Max-Change = 0.0034, Max-Change = 0.0037, Max-Change = 0.0045, Max-Change = 0.0049, Max-Change = 0.0034, Max-Change = 0.0028, Max-Change = 0.0026, Max-Change = 0.0077, Max-Change = 0.0028, Max-Change = 0.0037, Max-Change = 0.0035, Max-Change = 0.0021, Max-Change = 0.0026, Max-Change = 0.0023, Max-Change = 0.0033, Max-Change = 0.0049, Max-Change = 0.0058, Max-Change = 0.0024, Max-Change = 0.0040, Max-Change = 0.0035, Max-Change = 0.0030, Max-Change = 0.0035, Max-Change = 0.0052, Max-Change = 0.0016, Max-Change = 0.0026, Max-Change = 0.0044, Max-Change = 0.0045, Max-Change = 0.0029, Max-Change = 0.0046, Max-Change = 0.0050, Max-Change = 0.0030, Max-Change = 0.0010, Max-Change = 0.0043, Max-Change = 0.0055, Max-Change = 0.0051, Max-Change = 0.0041, Max-Change = 0.0045, Max-Change = 0.0042, Max-Change = 0.0023, Max-Change = 0.0017, Max-Change = 0.0029, Max-Change = 0.0010, Max-Change = 0.0035, Max-Change = 0.0013, Max-Change = 0.0021, Max-Change = 0.0036, Max-Change = 0.0040, Max-Change = 0.0047, Max-Change = 0.0043, Max-Change = 0.0035, Max-Change = 0.0026, Max-Change = 0.0032, Max-Change = 0.0013, Max-Change = 0.0048, Max-Change = 0.0029, Max-Change = 0.0019, Max-Change = 0.0034, Max-Change = 0.0019, Max-Change = 0.0031, Max-Change = 0.0015, Max-Change = 0.0041, Max-Change = 0.0040, Max-Change = 0.0041, Max-Change = 0.0038, Max-Change = 0.0033, Max-Change = 0.0021, Max-Change = 0.0025, Max-Change = 0.0032, Max-Change = 0.0031, Max-Change = 0.0047, Max-Change = 0.0022, Max-Change = 0.0030, Max-Change = 0.0035, Max-Change = 0.0071, Max-Change = 0.0041, Max-Change = 0.0028, Max-Change = 0.0055, Max-Change = 0.0067, Max-Change = 0.0018, Max-Change = 0.0019, Max-Change = 0.0058, Max-Change = 0.0030, Max-Change = 0.0064, Max-Change = 0.0038, Max-Change = 0.0062, Max-Change = 0.0029, Max-Change = 0.0028, Max-Change = 0.0040, Max-Change = 0.0042, Max-Change = 0.0031, Max-Change = 0.0026, Max-Change = 0.0022, Max-Change = 0.0069, Max-Change = 0.0058, Max-Change = 0.0021, Max-Change = 0.0035, Max-Change = 0.0068, Max-Change = 0.0051, Max-Change = 0.0015, Max-Change = 0.0036, Max-Change = 0.0043, Max-Change = 0.0034, Max-Change = 0.0013, Max-Change = 0.0022, Max-Change = 0.0038, Max-Change = 0.0036, Max-Change = 0.0039, Max-Change = 0.0021, Max-Change = 0.0030, Max-Change = 0.0031, Max-Change = 0.0058, Max-Change = 0.0060, Max-Change = 0.0024, Max-Change = 0.0018, Max-Change = 0.0020, Max-Change = 0.0038, Max-Change = 0.0064, Max-Change = 0.0051, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0053, gam = 0.1057, Max-Change = 0.0033, gam = 0.0780, Max-Change = 0.0010, gam = 0.0629, Max-Change = 0.0008, gam = 0.0532, Max-Change = 0.0017, gam = 0.0464, Max-Change = 0.0011, gam = 0.0413, Max-Change = 0.0007, gam = 0.0374, Max-Change = 0.0009, gam = 0.0342, Max-Change = 0.0006 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood... fe2 <- fixef(mod1b) head(fe2) #>              F1 #> [1,]  0.6165760 #> [2,] -0.1671332 #> [3,]  2.1737979 #> [4,] -1.8995517 #> [5,] -0.5047064 #> [6,]  2.2499237  # }"},{"path":"https://philchalmers.github.io/mirt/reference/fscores.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute factor score estimates (a.k.a, ability estimates, latent trait estimates, etc) — fscores","title":"Compute factor score estimates (a.k.a, ability estimates, latent trait estimates, etc) — fscores","text":"Computes MAP, EAP, ML (Embretson & Reise, 2000), EAP sum-scores (Thissen et al., 1995), WLE (Warm, 1989) factor scores multivariate normal prior distribution using equally spaced quadrature. EAP scores models three factors generally recommended since integration grid becomes large, resulting slower estimation less precision quadpts low. Therefore, MAP scores used instead EAP scores higher dimensional models. Multiple imputation variants possible estimator parameter information matrix computed, useful sample size/number items small. well, model contained latent regression predictors information used computing MAP EAP estimates (models, full.scores=TRUE always used). Finally, plausible value imputation also available, also account latent regression predictor effects.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/fscores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute factor score estimates (a.k.a, ability estimates, latent trait estimates, etc) — fscores","text":"","code":"fscores(   object,   method = \"EAP\",   full.scores = TRUE,   rotate = \"oblimin\",   Target = NULL,   response.pattern = NULL,   append_response.pattern = FALSE,   na.rm = FALSE,   plausible.draws = 0,   plausible.type = \"normal\",   quadpts = NULL,   item_weights = rep(1, extract.mirt(object, \"nitems\")),   returnER = FALSE,   T_as_X = FALSE,   EAPsum.scores = FALSE,   return.acov = FALSE,   mean = NULL,   cov = NULL,   covdata = NULL,   verbose = TRUE,   full.scores.SE = FALSE,   theta_lim = c(-6, 6),   MI = 0,   use_dentype_estimate = FALSE,   QMC = FALSE,   custom_den = NULL,   custom_theta = NULL,   expected.info = FALSE,   min_expected = 1,   max_theta = 20,   start = NULL,   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/fscores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute factor score estimates (a.k.a, ability estimates, latent trait estimates, etc) — fscores","text":"object computed model object class SingleGroupClass, MultipleGroupClass, DiscreteClass method type factor score estimation method. Can : \"EAP\" expected -posteriori (default). models fit using       mdirt return posterior classification probabilities \"MAP\" maximum -posteriori (.e, Bayes modal) \"ML\" maximum likelihood \"WLE\" \"WML\" weighted maximum-likelihood estimation \"EAPsum\" expected -posteriori sum score \"plausible\" single plausible value imputation case.       equivalent setting plausible.draws = 1 \"classify\" posteriori classification probabilities (      applicable input model class MixtureClass) full.scores FALSE summary table factor scores unique pattern displayed formatted matrix object. Otherwise, matrix factor scores response pattern data returned (default) rotate prior rotation used estimating factor scores. See summary-method details. object exploratory model argument ignored Target target rotation; see summary-method details response.pattern optional argument used calculate factor scores standard errors given response vector matrix/data.frame append_response.pattern logical; inputs response.pattern also appended factor score output? na.rm logical; remove rows missing values? generally required due nature computing factors scores, however \"EAPsum\" method may necessary ensure sum-scores correspond composite score plausible.draws number plausible values draw future researchers perform secondary analyses latent trait scores. Typically used conjunction latent regression predictors (see mirt details), can also generated predictor variables modelled. plausible.draws greater 0 list plausible values returned plausible.type type plausible values obtain. Can either 'normal' (default) use normal approximation based ACOV matrix, 'MH' obtain Metropolis-Hastings samples posterior (silently passes object mirt, therefore arguments like technical can supplied increase number burn-draws discarded samples) quadpts number quadrature use per dimension. specified, suitable one created decreases number dimensions increases (therefore estimates EAP, less accurate). determined switch statement quadpts <- switch(.character(nfact), '1'=121, '2'=61, '3'=31, '4'=19, '5'=11, '6'=7, 5) item_weights user-defined weight vector used likelihood expressions add /less weight given observed response. Default vector 1's, indicating items receive weight returnER logical; return empirical reliability (also known marginal reliability) estimates numeric values? T_as_X logical; observed variance equal var(X) = var(T) + E(E^2) var(X) = var(T) computing empirical reliability estimates? Default (FALSE) uses former EAPsum.scores logical; include model-implied expected values variance item total scores using method = 'EAPsum' full.scores=FALSE? information included hidden 'fit' attribute can extracted via attr(., 'fit') later use return.acov logical; return list containing covariance matrices instead factors scores? impute = TRUE supported option mean vector custom latent variable means. NULL, default 'group' values computed mirt object used cov custom matrix latent variable covariance matrix. NULL, default 'group' values computed mirt object used covdata latent regression model fitted, response.pattern input used score individuals, argument used include latent regression covariate terms row vector supplied response.pattern verbose logical; print verbose output messages? full.scores.SE logical; full.scores == TRUE, also return standard errors associated respondent? Default FALSE theta_lim lower upper range evaluate latent trait integral dimension. omitted, range generated automatically based number dimensions MI number indicating many multiple imputation draws perform. Default 0, indicating MI draws performed use_dentype_estimate logical; density latent trait estimated model (e.g., via Davidian curves empirical histograms), information used compute latent trait estimates? applicable EAP-based estimates (EAP, EAPsum, plausible) QMC logical; use quasi-Monte Carlo integration? quadpts omitted default number nodes 5000 custom_den function used define integration density (required). NULL default   assumes multivariate normal distribution 'GroupPars' hyper-parameters   used. minimum must form: function(Theta, ...) Theta matrix latent trait values (grid values   method == 'EAPsum' method == 'EAP', otherwise Theta 1 row).   Additional arguments may included caught fscores(...) input.   function must return numeric vector density weights (one row Theta) custom_theta matrix custom integration nodes use instead default, column corresponds respective dimension model expected.info logical; instead using observed information method = 'ML' method = 'WLE' use expected information computed via testinfo? currently supported unidimensional models min_expected computing goodness fit tests method = 'EAPsum', value used collapse across conditioned total scores expected values greater value. Note affect goodness fit tests returned EAP sum scores table max_theta maximum/minimum value given factor score estimate achieve using modal estimator method (e.g., MAP, WLE, ML) start matrix starting values use iterative estimation methods. Default start vector 0's response pattern, start EAP estimates (unidimensional models ). Must form matches full.scores = FALSE (mostly used mirtCAT package) ... additional arguments passed nlm","code":""},{"path":"https://philchalmers.github.io/mirt/reference/fscores.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute factor score estimates (a.k.a, ability estimates, latent trait estimates, etc) — fscores","text":"function return either table computed scores standard errors, original data matrix scores appended rightmost column, scores . default latent means covariances determined estimated object, though can overwritten. Iterative estimation methods can estimated parallel decrease estimation times mirtCluster object available. input object discrete latent class object estimated mdirt returned results respect posterior classification individual. method inputs 'DiscreteClass' objects may 'EAP', posterior classification response pattern, 'EAPsum' posterior classification based raw sum-score. information algorithms refer mirtCAT package associated JSS paper (Chalmers, 2016).","code":""},{"path":"https://philchalmers.github.io/mirt/reference/fscores.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute factor score estimates (a.k.a, ability estimates, latent trait estimates, etc) — fscores","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06 Chalmers, R. P. (2016). Generating Adaptive Non-Adaptive Test Interfaces Multidimensional Item Response Theory Applications. Journal Statistical Software, 71(5), 1-39. doi:10.18637/jss.v071.i05 Embretson, S. E. & Reise, S. P. (2000). Item Response Theory Psychologists. Erlbaum. Thissen, D., Pommerich, M., Billeaud, K., & Williams, V. S. L. (1995). Item Response Theory Scores Tests Including Polytomous Items Ordered Responses. Applied Psychological Measurement, 19, 39-49. Warm, T. . (1989). Weighted likelihood estimation ability item response theory. Psychometrika, 54, 427-450.","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/fscores.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute factor score estimates (a.k.a, ability estimates, latent trait estimates, etc) — fscores","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/fscores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute factor score estimates (a.k.a, ability estimates, latent trait estimates, etc) — fscores","text":"","code":"mod <- mirt(Science) #>  tabscores <- fscores(mod, full.scores = FALSE) #>  #> Method:  EAP #>  #> Empirical Reliability: #>  #>     F1  #> 0.6666  head(tabscores) #>      Comfort Work Future Benefit         F1     SE_F1 #> [1,]       1    1      1       1 -2.7492669 0.6293525 #> [2,]       1    3      2       1 -1.4198318 0.5772364 #> [3,]       1    4      2       3 -0.7141976 0.6200139 #> [4,]       1    4      3       1 -0.4469265 0.6509531 #> [5,]       2    1      1       1 -2.5437807 0.5909114 #> [6,]       2    1      2       4 -1.2478570 0.5840105  # convert scores into expected total score information with 95% CIs E.total <- expected.test(mod, Theta=tabscores[,'F1']) E.total_2.5 <- expected.test(mod, Theta=tabscores[,'F1'] +                                        tabscores[,'SE_F1'] * qnorm(.05/2)) E.total_97.5 <- expected.test(mod, Theta=tabscores[,'F1'] +                                        tabscores[,'SE_F1'] * qnorm(1-.05/2))  data.frame(Total_score=rowSums(tabscores[,1:4]),            E.total, E.total_2.5, E.total_97.5) |> head() #>   Total_score   E.total E.total_2.5 E.total_97.5 #> 1           4  6.791606    5.321810     9.084082 #> 2           7  9.266018    7.128071    11.296189 #> 3          10 10.584682    8.296461    12.504975 #> 4           9 11.041648    8.691107    13.034195 #> 5           5  7.141179    5.576233     9.330947 #> 6           9  9.592533    7.415339    11.582060  # \\donttest{ fullscores <- fscores(mod) fullscores_with_SE <- fscores(mod, full.scores.SE=TRUE) head(fullscores) #>              F1 #> [1,]  0.4015613 #> [2,]  0.0520324 #> [3,] -0.8906436 #> [4,] -0.8906436 #> [5,]  0.7653806 #> [6,]  0.6695350 head(fullscores_with_SE) #>              F1     SE_F1 #> [1,]  0.4015613 0.5978747 #> [2,]  0.0520324 0.5549554 #> [3,] -0.8906436 0.5421855 #> [4,] -0.8906436 0.5421855 #> [5,]  0.7653806 0.6385998 #> [6,]  0.6695350 0.5761860  # convert scores into expected total score information with 95% CIs E.total <- expected.test(mod, Theta=fullscores[,'F1']) E.total_2.5 <- expected.test(mod, Theta=fullscores_with_SE[,'F1'] +                                  fullscores_with_SE[,'SE_F1'] * qnorm(.05/2)) E.total_97.5 <- expected.test(mod, Theta=fullscores_with_SE[,'F1'] +                                fullscores_with_SE[,'SE_F1'] * qnorm(1-.05/2))  data.frame(Total_score=rowSums(Science),            E.total, E.total_2.5, E.total_97.5) |> head() #>   Total_score  E.total E.total_2.5 E.total_97.5 #> 1          13 12.34882   10.484432     14.15621 #> 2          12 11.81643    9.994252     13.53226 #> 3          10 10.26478    8.250620     11.99721 #> 4          10 10.26478    8.250620     11.99721 #> 5          12 12.93068   10.976668     14.67563 #> 6          14 12.77499   11.020512     14.43522  # change method argument to use MAP estimates fullscores <- fscores(mod, method='MAP') head(fullscores) #>               F1 #> [1,]  0.42140793 #> [2,]  0.05866659 #> [3,] -0.91936052 #> [4,] -0.91936052 #> [5,]  0.79013883 #> [6,]  0.68302194  # calculate MAP for a given response vector fscores(mod, method='MAP', response.pattern = c(1,2,3,4)) #>         F1 SE_F1 #> [1,] -0.37 0.605 #> attr(,\"class\") #> [1] NA # or matrix fscores(mod, method='MAP', response.pattern = rbind(c(1,2,3,4), c(2,2,1,3))) #>          F1 SE_F1 #> [1,] -0.370 0.605 #> [2,] -1.694 0.577 #> attr(,\"class\") #> [1] NA  # return only the scores and their SEs fscores(mod, method='MAP', response.pattern = c(1,2,3,4)) #>         F1 SE_F1 #> [1,] -0.37 0.605 #> attr(,\"class\") #> [1] NA  # use custom latent variable properties (diffuse prior for MAP is very close to ML) fscores(mod, method='MAP', cov = matrix(1000), full.scores = FALSE) #>  #> Method:  MAP #>  #> Empirical Reliability: #>  #>     F1  #> 0.4207  #>       Comfort Work Future Benefit     F1  SE_F1 #>  [1,]       1    1      1       1 -9.340  9.636 #>  [2,]       1    3      2       1 -2.104  0.689 #>  [3,]       1    4      2       3 -1.151  0.705 #>  [4,]       1    4      3       1 -0.781  0.807 #>  [5,]       2    1      1       1 -4.394  1.179 #>  [6,]       2    1      2       4 -1.863  0.668 #>  [7,]       2    2      1       1 -3.248  0.812 #>  [8,]       2    2      2       2 -1.911  0.588 #>  [9,]       2    2      2       3 -1.606  0.608 #> [10,]       2    2      3       1 -1.468  0.714 #> [11,]       2    2      3       2 -1.168  0.635 #> [12,]       2    2      3       3 -0.797  0.639 #> [13,]       2    2      4       3  0.240  0.789 #> [14,]       2    3      1       3 -2.142  0.702 #> [15,]       2    3      2       2 -1.609  0.626 #> [16,]       2    3      2       3 -1.254  0.630 #> [17,]       2    3      3       2 -0.756  0.656 #> [18,]       2    3      3       3 -0.332  0.698 #> [19,]       2    3      3       4  0.083  0.761 #> [20,]       2    3      4       1  0.189  0.878 #> [21,]       2    3      4       3  0.763  0.681 #> [22,]       2    4      2       1 -1.822  0.694 #> [23,]       2    4      4       3  1.307  0.753 #> [24,]       2    4      4       4  2.095  1.039 #> [25,]       3    1      1       1 -3.538  1.001 #> [26,]       3    1      1       3 -2.510  0.697 #> [27,]       3    1      2       2 -1.926  0.615 #> [28,]       3    1      2       3 -1.587  0.643 #> [29,]       3    1      3       2 -1.088  0.674 #> [30,]       3    1      3       3 -0.658  0.696 #> [31,]       3    1      3       4 -0.281  0.807 #> [32,]       3    1      4       3  0.542  0.734 #> [33,]       3    1      4       4  1.038  0.736 #> [34,]       3    2      1       2 -2.348  0.625 #> [35,]       3    2      1       4 -1.913  0.709 #> [36,]       3    2      2       1 -1.861  0.616 #> [37,]       3    2      2       2 -1.577  0.594 #> [38,]       3    2      2       3 -1.255  0.602 #> [39,]       3    2      3       1 -1.025  0.663 #> [40,]       3    2      3       2 -0.798  0.629 #> [41,]       3    2      3       3 -0.409  0.668 #> [42,]       3    2      3       4 -0.037  0.744 #> [43,]       3    2      4       1  0.015  0.900 #> [44,]       3    2      4       2  0.205  0.789 #> [45,]       3    2      4       3  0.643  0.684 #> [46,]       3    2      4       4  1.102  0.718 #> [47,]       3    3      1       3 -1.629  0.780 #> [48,]       3    3      2       1 -1.518  0.659 #> [49,]       3    3      2       2 -1.239  0.617 #> [50,]       3    3      2       3 -0.882  0.630 #> [51,]       3    3      2       4 -0.621  0.708 #> [52,]       3    3      3       1 -0.549  0.711 #> [53,]       3    3      3       2 -0.347  0.687 #> [54,]       3    3      3       3  0.086  0.687 #> [55,]       3    3      3       4  0.490  0.676 #> [56,]       3    3      4       2  0.732  0.681 #> [57,]       3    3      4       3  1.048  0.650 #> [58,]       3    3      4       4  1.525  0.746 #> [59,]       3    4      1       3 -1.381  0.943 #> [60,]       3    4      2       3 -0.608  0.726 #> [61,]       3    4      3       2  0.099  0.768 #> [62,]       3    4      3       3  0.538  0.677 #> [63,]       3    4      3       4  0.961  0.675 #> [64,]       3    4      4       1  1.218  0.758 #> [65,]       3    4      4       2  1.272  0.749 #> [66,]       3    4      4       3  1.599  0.766 #> [67,]       3    4      4       4  2.422  1.040 #> [68,]       4    1      1       4 -2.106  0.772 #> [69,]       4    1      2       2 -1.638  0.654 #> [70,]       4    1      2       4 -1.014  0.724 #> [71,]       4    1      3       4  0.361  0.778 #> [72,]       4    2      2       1 -1.568  0.651 #> [73,]       4    2      2       3 -0.935  0.628 #> [74,]       4    2      3       3  0.054  0.711 #> [75,]       4    2      3       4  0.492  0.710 #> [76,]       4    2      4       2  0.762  0.723 #> [77,]       4    2      4       4  1.760  0.931 #> [78,]       4    3      2       3 -0.485  0.704 #> [79,]       4    3      3       2  0.139  0.718 #> [80,]       4    3      3       3  0.533  0.652 #> [81,]       4    3      3       4  0.929  0.655 #> [82,]       4    3      4       2  1.216  0.719 #> [83,]       4    3      4       3  1.527  0.734 #> [84,]       4    3      4       4  2.258  0.968 #> [85,]       4    4      3       2  0.640  0.707 #> [86,]       4    4      3       3  0.981  0.661 #> [87,]       4    4      3       4  1.465  0.749 #> [88,]       4    4      4       2  2.028  1.010 #> [89,]       4    4      4       3  2.390  1.015 #> [90,]       4    4      4       4  7.112 10.616 #> attr(,\"class\") #> [1] NA fscores(mod, method='ML', full.scores = FALSE) #>  #> Method:  ML #>  #> Empirical Reliability: #>  #>    F1  #> 0.716  #>       Comfort Work Future Benefit     F1 SE_F1 #>  [1,]       1    1      1       1   -Inf    NA #>  [2,]       1    3      2       1 -2.105 0.689 #>  [3,]       1    4      2       3 -1.151 0.705 #>  [4,]       1    4      3       1 -0.781 0.807 #>  [5,]       2    1      1       1 -4.400 1.182 #>  [6,]       2    1      2       4 -1.864 0.668 #>  [7,]       2    2      1       1 -3.250 0.813 #>  [8,]       2    2      2       2 -1.912 0.588 #>  [9,]       2    2      2       3 -1.606 0.609 #> [10,]       2    2      3       1 -1.469 0.714 #> [11,]       2    2      3       2 -1.169 0.635 #> [12,]       2    2      3       3 -0.797 0.639 #> [13,]       2    2      4       3  0.240 0.789 #> [14,]       2    3      1       3 -2.143 0.702 #> [15,]       2    3      2       2 -1.609 0.626 #> [16,]       2    3      2       3 -1.254 0.630 #> [17,]       2    3      3       2 -0.756 0.656 #> [18,]       2    3      3       3 -0.332 0.698 #> [19,]       2    3      3       4  0.083 0.762 #> [20,]       2    3      4       1  0.189 0.878 #> [21,]       2    3      4       3  0.763 0.681 #> [22,]       2    4      2       1 -1.823 0.694 #> [23,]       2    4      4       3  1.308 0.754 #> [24,]       2    4      4       4  2.097 1.041 #> [25,]       3    1      1       1 -3.542 1.004 #> [26,]       3    1      1       3 -2.511 0.698 #> [27,]       3    1      2       2 -1.926 0.615 #> [28,]       3    1      2       3 -1.588 0.644 #> [29,]       3    1      3       2 -1.088 0.674 #> [30,]       3    1      3       3 -0.658 0.696 #> [31,]       3    1      3       4 -0.281 0.808 #> [32,]       3    1      4       3  0.543 0.734 #> [33,]       3    1      4       4  1.038 0.736 #> [34,]       3    2      1       2 -2.349 0.625 #> [35,]       3    2      1       4 -1.914 0.709 #> [36,]       3    2      2       1 -1.862 0.616 #> [37,]       3    2      2       2 -1.577 0.594 #> [38,]       3    2      2       3 -1.255 0.602 #> [39,]       3    2      3       1 -1.026 0.663 #> [40,]       3    2      3       2 -0.798 0.629 #> [41,]       3    2      3       3 -0.409 0.668 #> [42,]       3    2      3       4 -0.037 0.744 #> [43,]       3    2      4       1  0.015 0.901 #> [44,]       3    2      4       2  0.206 0.789 #> [45,]       3    2      4       3  0.643 0.684 #> [46,]       3    2      4       4  1.102 0.719 #> [47,]       3    3      1       3 -1.630 0.780 #> [48,]       3    3      2       1 -1.518 0.659 #> [49,]       3    3      2       2 -1.240 0.617 #> [50,]       3    3      2       3 -0.883 0.630 #> [51,]       3    3      2       4 -0.621 0.708 #> [52,]       3    3      3       1 -0.549 0.711 #> [53,]       3    3      3       2 -0.348 0.688 #> [54,]       3    3      3       3  0.086 0.687 #> [55,]       3    3      3       4  0.490 0.676 #> [56,]       3    3      4       2  0.733 0.681 #> [57,]       3    3      4       3  1.048 0.650 #> [58,]       3    3      4       4  1.526 0.746 #> [59,]       3    4      1       3 -1.383 0.943 #> [60,]       3    4      2       3 -0.609 0.726 #> [61,]       3    4      3       2  0.099 0.768 #> [62,]       3    4      3       3  0.538 0.678 #> [63,]       3    4      3       4  0.962 0.675 #> [64,]       3    4      4       1  1.219 0.759 #> [65,]       3    4      4       2  1.273 0.749 #> [66,]       3    4      4       3  1.600 0.767 #> [67,]       3    4      4       4  2.425 1.042 #> [68,]       4    1      1       4 -2.107 0.772 #> [69,]       4    1      2       2 -1.639 0.654 #> [70,]       4    1      2       4 -1.015 0.724 #> [71,]       4    1      3       4  0.361 0.778 #> [72,]       4    2      2       1 -1.568 0.651 #> [73,]       4    2      2       3 -0.936 0.628 #> [74,]       4    2      3       3  0.054 0.711 #> [75,]       4    2      3       4  0.492 0.710 #> [76,]       4    2      4       2  0.763 0.723 #> [77,]       4    2      4       4  1.761 0.932 #> [78,]       4    3      2       3 -0.485 0.704 #> [79,]       4    3      3       2  0.139 0.718 #> [80,]       4    3      3       3  0.533 0.652 #> [81,]       4    3      3       4  0.929 0.656 #> [82,]       4    3      4       2  1.216 0.720 #> [83,]       4    3      4       3  1.527 0.735 #> [84,]       4    3      4       4  2.261 0.969 #> [85,]       4    4      3       2  0.640 0.707 #> [86,]       4    4      3       3  0.982 0.662 #> [87,]       4    4      3       4  1.465 0.749 #> [88,]       4    4      4       2  2.030 1.011 #> [89,]       4    4      4       3  2.392 1.016 #> [90,]       4    4      4       4    Inf    NA #> attr(,\"class\") #> [1] NA  # EAPsum table of values based on total scores (fs <- fscores(mod, method = 'EAPsum', full.scores = FALSE)) #>       df     X2  p.X2 SEM.alpha rxx.alpha rxx_F1 #> stats 10 16.312 0.091     1.262     0.616  0.624 #>  #>    Sum.Scores          F1     SE_F1 observed   expected   std.res #> 4           4 -2.74926694 0.6293525        2  0.1241448 5.3239625 #> 5           5 -2.43096701 0.6167666        1  0.7902670 0.2359282 #> 6           6 -2.08095804 0.6101826        2  2.7598787 0.4574033 #> 7           7 -1.71797996 0.6019326        1  7.2515944 2.3215286 #> 8           8 -1.36354348 0.5979810       11 15.8925644 1.2272684 #> 9           9 -1.01186764 0.6038596       32 29.6740255 0.4269890 #> 10         10 -0.64926712 0.6101301       58 48.3632492 1.3857117 #> 11         11 -0.28688279 0.6048405       70 68.4845962 0.1831184 #> 12         12  0.08240446 0.5996636       91 80.5530281 1.1639907 #> 13         13  0.48709473 0.6133534       56 65.6680929 1.1930636 #> 14         14  0.93406958 0.6170256       36 42.6372130 1.0164625 #> 15         15  1.38421709 0.6218261       20 22.3313442 0.4933430 #> 16         16  1.85351389 0.6544097       12  7.4700015 1.6574396  # convert expected counts back into marginal probability distribution within(fs,    `P(y)` <- expected / sum(observed)) #>    Sum.Scores          F1     SE_F1 observed   expected   std.res        P(y) #> 4           4 -2.74926694 0.6293525        2  0.1241448 5.3239625 0.000316696 #> 5           5 -2.43096701 0.6167666        1  0.7902670 0.2359282 0.002015987 #> 6           6 -2.08095804 0.6101826        2  2.7598787 0.4574033 0.007040507 #> 7           7 -1.71797996 0.6019326        1  7.2515944 2.3215286 0.018498965 #> 8           8 -1.36354348 0.5979810       11 15.8925644 1.2272684 0.040542256 #> 9           9 -1.01186764 0.6038596       32 29.6740255 0.4269890 0.075699045 #> 10         10 -0.64926712 0.6101301       58 48.3632492 1.3857117 0.123375636 #> 11         11 -0.28688279 0.6048405       70 68.4845962 0.1831184 0.174705603 #> 12         12  0.08240446 0.5996636       91 80.5530281 1.1639907 0.205492419 #> 13         13  0.48709473 0.6133534       56 65.6680929 1.1930636 0.167520645 #> 14         14  0.93406958 0.6170256       36 42.6372130 1.0164625 0.108768401 #> 15         15  1.38421709 0.6218261       20 22.3313442 0.4933430 0.056967715 #> 16         16  1.85351389 0.6544097       12  7.4700015 1.6574396 0.019056126  # list of error VCOV matrices for EAPsum (works for other estimators as well) acovs <- fscores(mod, method = 'EAPsum', full.scores = FALSE, return.acov = TRUE) acovs #> $`0` #>           [,1] #> [1,] 0.3960846 #>  #> $`1` #>           [,1] #> [1,] 0.3804011 #>  #> $`2` #>           [,1] #> [1,] 0.3723228 #>  #> $`3` #>           [,1] #> [1,] 0.3623228 #>  #> $`4` #>           [,1] #> [1,] 0.3575813 #>  #> $`5` #>           [,1] #> [1,] 0.3646464 #>  #> $`6` #>           [,1] #> [1,] 0.3722588 #>  #> $`7` #>          [,1] #> [1,] 0.365832 #>  #> $`8` #>           [,1] #> [1,] 0.3595964 #>  #> $`9` #>           [,1] #> [1,] 0.3762024 #>  #> $`10` #>           [,1] #> [1,] 0.3807206 #>  #> $`11` #>           [,1] #> [1,] 0.3866677 #>  #> $`12` #>           [,1] #> [1,] 0.4282521 #>   # WLE estimation, run in parallel using available cores if(interactive()) mirtCluster() head(fscores(mod, method='WLE', full.scores = FALSE)) #>  #> Method:  WLE #>  #> Empirical Reliability: #>  #>     F1  #> 0.7513  #>      Comfort Work Future Benefit         F1     SE_F1 #> [1,]       1    1      1       1 -5.6980733 1.5782658 #> [2,]       1    3      2       1 -2.1191038 0.6332801 #> [3,]       1    4      2       3 -1.1387624 0.6557002 #> [4,]       1    4      3       1 -0.8489387 0.7000117 #> [5,]       2    1      1       1 -4.0112458 1.1423934 #> [6,]       2    1      2       4 -1.8957020 0.6698434  # multiple imputation using 30 draws for EAP scores. Requires information matrix mod <- mirt(Science, 1, SE=TRUE) #>  #>  #> Calculating information matrix... fs <- fscores(mod, MI = 30) head(fs) #>               F1 #> [1,]  0.40282834 #> [2,]  0.04508173 #> [3,] -0.88404287 #> [4,] -0.88404287 #> [5,]  0.73302695 #> [6,]  0.66738898  # plausible values for future work pv <- fscores(mod, plausible.draws = 5) lapply(pv, function(x) c(mean=mean(x), var=var(x), min=min(x), max=max(x))) #> [[1]] #>        mean         var         min         max  #> -0.04241409  1.00555840 -3.65780123  3.17889949  #>  #> [[2]] #>        mean         var         min         max  #> -0.01549736  0.98524384 -2.71392881  2.62492406  #>  #> [[3]] #>        mean         var         min         max  #> -0.01992393  1.10032092 -3.50800982  2.99179817  #>  #> [[4]] #>         mean          var          min          max  #> -0.004597475  1.078914614 -3.463674748  3.017458275  #>  #> [[5]] #>        mean         var         min         max  #>  0.02806862  1.04001258 -3.70135179  3.78490572  #>   ## define a custom_den function (*must* return a numeric vector). #  EAP with a uniform prior between -3 and 3 fun <- function(Theta, ...) as.numeric(dunif(Theta, min = -3, max = 3)) head(fscores(mod, custom_den = fun)) #>               F1 #> [1,]  0.62740797 #> [2,]  0.07362014 #> [3,] -1.23412036 #> [4,] -1.23412036 #> [5,]  1.25196942 #> [6,]  1.00691502  # compare EAP estimators with same modified prior fun <- function(Theta, ...) as.numeric(dnorm(Theta, mean=.5)) head(fscores(mod, custom_den = fun)) #>              F1 #> [1,]  0.5801169 #> [2,]  0.2057691 #> [3,] -0.7411082 #> [4,] -0.7411082 #> [5,]  0.9677165 #> [6,]  0.8355336 head(fscores(mod, method = 'EAP', mean=.5)) #>              F1 #> [1,]  0.5801169 #> [2,]  0.2057691 #> [3,] -0.7411082 #> [4,] -0.7411082 #> [5,]  0.9677165 #> [6,]  0.8355336  if (FALSE) { # \\dontrun{ # custom MAP prior: standard truncated normal between 5 and -2 library(msm) # need the :: scope for parallel to see the function (not require if no mirtCluster() defined) fun <- function(Theta, ...) msm::dtnorm(Theta, mean = 0, sd = 1, lower = -2, upper = 5) head(fscores(mod, custom_den = fun, method = 'MAP', full.scores = FALSE)) } # }   #################### # scoring via response.pattern input (with latent regression structure) # simulate data set.seed(1234) N <- 1000  # covariates X1 <- rnorm(N); X2 <- rnorm(N) covdata <- data.frame(X1, X2) Theta <- matrix(0.5 * X1 + -1 * X2 + rnorm(N, sd = 0.5))  # items and response data a <- matrix(1, 20); d <- matrix(rnorm(20)) dat <- simdata(a, d, 1000, itemtype = '2PL', Theta=Theta)  # conditional model using X1 and X2 as predictors of Theta mod <- mirt(dat, 1, 'Rasch', covdata=covdata, formula = ~ X1 + X2) #>  coef(mod, simplify=TRUE) #> $items #>         a1      d g u #> Item_1   1 -0.409 0 1 #> Item_2   1  0.491 0 1 #> Item_3   1  0.313 0 1 #> Item_4   1  1.965 0 1 #> Item_5   1  1.753 0 1 #> Item_6   1 -0.246 0 1 #> Item_7   1 -1.077 0 1 #> Item_8   1  0.533 0 1 #> Item_9   1 -1.232 0 1 #> Item_10  1  0.603 0 1 #> Item_11  1 -0.404 0 1 #> Item_12  1  1.238 0 1 #> Item_13  1  1.033 0 1 #> Item_14  1  1.524 0 1 #> Item_15  1 -0.548 0 1 #> Item_16  1  2.075 0 1 #> Item_17  1 -0.695 0 1 #> Item_18  1 -1.200 0 1 #> Item_19  1  0.121 0 1 #> Item_20  1  0.523 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>       F1 #> F1 0.215 #>  #> $lr.betas #>                 F1 #> (Intercept)  0.000 #> X1           0.527 #> X2          -1.036 #>   # all EAP estimates that include latent regression information fs <- fscores(mod, full.scores.SE=TRUE) head(fs) #>              F1     SE_F1 #> [1,]  0.3085492 0.3442152 #> [2,] -0.3474178 0.3408490 #> [3,]  2.0484395 0.3903304 #> [4,] -1.9418498 0.3670495 #> [5,] -0.7631517 0.3432688 #> [6,]  2.1019471 0.3922103  # score only two response patterns rp <- dat[1:2, ] cd <- covdata[1:2, ]  fscores(mod, response.pattern=rp, covdata=cd) #>          F1 SE_F1 #> [1,]  0.309 0.344 #> [2,] -0.347 0.341 #> attr(,\"class\") #> [1] NA fscores(mod, response.pattern=rp[2,], covdata=cd[2,]) # just one pattern #>          F1 SE_F1 #> [1,] -0.347 0.341 #> attr(,\"class\") #> [1] NA  # }"},{"path":"https://philchalmers.github.io/mirt/reference/gen.difficulty.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized item difficulty summaries — gen.difficulty","title":"Generalized item difficulty summaries — gen.difficulty","text":"Function provides four generalized item difficulty representations polytomous response models described Ali, Chang, Anderson (2015). estimates used gauge difficult polytomous item may .","code":""},{"path":"https://philchalmers.github.io/mirt/reference/gen.difficulty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized item difficulty summaries — gen.difficulty","text":"","code":"gen.difficulty(mod, type = \"IRF\", interval = c(-30, 30), ...)"},{"path":"https://philchalmers.github.io/mirt/reference/gen.difficulty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized item difficulty summaries — gen.difficulty","text":"mod single factor model estimated mirt type type generalized difficulty parameter report. Can 'IRF' use item response function (default), 'mean' find average difficulty estimates, 'median' median difficulty estimates, 'trimmed' find trimmed mean removing first last difficulty estimates interval interval range search 'IRF' type ... additional arguments pass uniroot","code":""},{"path":"https://philchalmers.github.io/mirt/reference/gen.difficulty.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generalized item difficulty summaries — gen.difficulty","text":"Ali, U. S., Chang, H.-H., & Anderson, C. J. (2015). Location indices ordinal polytomous items based item response theory (Research Report . RR-15-20). Princeton, NJ: Educational Testing Service. http://dx.doi.org/10.1002/ets2.12065 Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/gen.difficulty.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generalized item difficulty summaries — gen.difficulty","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/gen.difficulty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized item difficulty summaries — gen.difficulty","text":"","code":"# \\donttest{  mod <- mirt(Science, 1) #>  coef(mod, simplify=TRUE, IRTpars = TRUE)$items #>                a        b1         b2        b3 #> Comfort 1.041755 -4.669193 -2.5341299 1.4072541 #> Work    1.225962 -2.385068 -0.7350678 1.8488053 #> Future  2.293372 -2.282226 -0.9652918 0.8562529 #> Benefit 1.094915 -3.057698 -0.9056673 1.5419094  gen.difficulty(mod) #>    Comfort       Work     Future    Benefit  #> -2.3089094 -0.5741303 -0.9207845 -0.8530161  gen.difficulty(mod, type = 'mean') #>    Comfort       Work     Future    Benefit  #> -1.9320231 -0.4237770 -0.7970883 -0.8071519   # also works for dichotomous items (though this is unnecessary) dat <- expand.table(LSAT7) mod <- mirt(dat, 1) #>  coef(mod, simplify=TRUE, IRTpars = TRUE)$items #>                a          b g u #> Item.1 0.9879254 -1.8787456 0 1 #> Item.2 1.0808847 -0.7475160 0 1 #> Item.3 1.7058006 -1.0576962 0 1 #> Item.4 0.7651853 -0.6351358 0 1 #> Item.5 0.7357980 -2.5204102 0 1  gen.difficulty(mod) #>     Item.1     Item.2     Item.3     Item.4     Item.5  #> -1.8787448 -0.7475182 -1.0576961 -0.6351601 -2.5204127  gen.difficulty(mod, type = 'mean') #>     Item.1     Item.2     Item.3     Item.4     Item.5  #> -1.8787456 -0.7475160 -1.0576962 -0.6351358 -2.5204102   # }"},{"path":"https://philchalmers.github.io/mirt/reference/head.mirt_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Head generic for customized matrix console output — head.mirt_matrix","title":"Head generic for customized matrix console output — head.mirt_matrix","text":"Provides nicer output printed matrix objects defined functions mirt.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/head.mirt_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Head generic for customized matrix console output — head.mirt_matrix","text":"","code":"# S3 method for class 'mirt_matrix' head(x, digits = 3, ...)"},{"path":"https://philchalmers.github.io/mirt/reference/head.mirt_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Head generic for customized matrix console output — head.mirt_matrix","text":"x object class 'mirt_matrix' digits number digits round ... additional arguments passed print(...)","code":""},{"path":"https://philchalmers.github.io/mirt/reference/imputeMissing.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputing plausible data for missing values — imputeMissing","title":"Imputing plausible data for missing values — imputeMissing","text":"Given estimated model mirt's model fitting functions estimate latent trait, impute plausible missing data values. Returns original data data.frame without NA values. list Theta values supplied list complete datasets returned instead.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/imputeMissing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputing plausible data for missing values — imputeMissing","text":"","code":"imputeMissing(x, Theta, warn = TRUE, ...)"},{"path":"https://philchalmers.github.io/mirt/reference/imputeMissing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputing plausible data for missing values — imputeMissing","text":"x estimated model x mirt package Theta matrix containing estimates latent trait scores (e.g., via fscores) warn logical; print warning messages? ... additional arguments pass","code":""},{"path":"https://philchalmers.github.io/mirt/reference/imputeMissing.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Imputing plausible data for missing values — imputeMissing","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/imputeMissing.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Imputing plausible data for missing values — imputeMissing","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/imputeMissing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imputing plausible data for missing values — imputeMissing","text":"","code":"# \\donttest{ dat <- expand.table(LSAT7) (original <- mirt(dat, 1)) #>  #>  #> Call: #> mirt(data = dat, model = 1) #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 1e-04 tolerance after 28 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Log-likelihood = -2658.805 #> Estimated parameters: 10  #> AIC = 5337.61 #> BIC = 5386.688; SABIC = 5354.927 #> G2 (21) = 31.7, p = 0.0628 #> RMSEA = 0.023, CFI = NaN, TLI = NaN NAperson <- sample(1:nrow(dat), 20, replace = TRUE) NAitem <- sample(1:ncol(dat), 20, replace = TRUE) for(i in 1:20)     dat[NAperson[i], NAitem[i]] <- NA (mod <- mirt(dat, 1)) #>  #>  #> Call: #> mirt(data = dat, model = 1) #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 1e-04 tolerance after 25 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Log-likelihood = -2652.1 #> Estimated parameters: 10  #> AIC = 5324.2 #> BIC = 5373.277; SABIC = 5341.517 #>  scores <- fscores(mod, method = 'MAP')  # re-estimate imputed dataset (good to do this multiple times and average over) fulldata <- imputeMissing(mod, scores) (fullmod <- mirt(fulldata, 1)) #>  #>  #> Call: #> mirt(data = fulldata, model = 1) #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 1e-04 tolerance after 24 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Log-likelihood = -2660.331 #> Estimated parameters: 10  #> AIC = 5340.663 #> BIC = 5389.741; SABIC = 5357.98 #> G2 (21) = 30.61, p = 0.0804 #> RMSEA = 0.021, CFI = NaN, TLI = NaN  # with multipleGroup set.seed(1) group <- sample(c('group1', 'group2'), 1000, TRUE) mod2 <- multipleGroup(dat, 1, group, TOL=1e-2) #>  fs <- fscores(mod2) fulldata2 <- imputeMissing(mod2, fs)  # }"},{"path":"https://philchalmers.github.io/mirt/reference/itemGAM.html","id":null,"dir":"Reference","previous_headings":"","what":"Parametric smoothed regression lines for item response probability functions — itemGAM","title":"Parametric smoothed regression lines for item response probability functions — itemGAM","text":"function uses generalized additive model (GAM) estimate response curves items seem fit well given model. Using stable axillary model, traceline functions poorly fitting dichotomous polytomous items can inspected using point estimates (plausible values) latent trait. Plots tracelines associated standard errors available help interpret misfit. function may also useful adding new items existing, well established set items, especially parametric form items investigation unknown.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/itemGAM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parametric smoothed regression lines for item response probability functions — itemGAM","text":"","code":"itemGAM(   item,   Theta,   formula = resp ~ s(Theta, k = 10),   CI = 0.95,   theta_lim = c(-3, 3),   return.models = FALSE,   ... )  # S3 method for class 'itemGAM' plot(   x,   y = NULL,   par.strip.text = list(cex = 0.7),   par.settings = list(strip.background = list(col = \"#9ECAE1\"), strip.border = list(col =     \"black\")),   auto.key = list(space = \"right\", points = FALSE, lines = TRUE),   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/itemGAM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parametric smoothed regression lines for item response probability functions — itemGAM","text":"item single poorly fitting item investigated. Can vector matrix Theta list matrix latent trait estimates typically returned fscores formula R formula passed gam function. Default fits spline model 10 nodes. multidimensional models, traits assigned names 'Theta1', 'Theta2', ..., 'ThetaN' CI number ranging 0 1 indicating confidence interval range. Default provides 95 percent interval theta_lim range latent trait scores evaluated return.models logical; return list GAM models category? Useful GAMs inspected directly, also fitting multidimensional models (set TRUE automatically multidimensional models) ... additional arguments passed gam lattice x object class 'itemGAM' y NULL value ignored plotting function par.strip.text plotting argument passed lattice par.settings plotting argument passed lattice auto.key plotting argument passed lattice","code":""},{"path":"https://philchalmers.github.io/mirt/reference/itemGAM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Parametric smoothed regression lines for item response probability functions — itemGAM","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/itemGAM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parametric smoothed regression lines for item response probability functions — itemGAM","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/itemGAM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parametric smoothed regression lines for item response probability functions — itemGAM","text":"","code":"# \\donttest{ set.seed(10) N <- 1000 J <- 30  a <- matrix(1, J) d <- matrix(rnorm(J)) Theta <- matrix(rnorm(N, 0, 1.5)) dat <- simdata(a, d, N, itemtype = '2PL', Theta=Theta)  # make a bad item ps <- exp(Theta^2 + Theta) / (1 + exp(Theta^2 + Theta)) item1 <- sapply(ps, function(x) sample(c(0,1), size = 1, prob = c(1-x, x)))  ps2 <- exp(2 * Theta^2 + Theta + .5 * Theta^3) / (1 + exp(2 * Theta^2 + Theta + .5 * Theta^3)) item2 <- sapply(ps2, function(x) sample(c(0,1), size = 1, prob = c(1-x, x)))  # how the actual item looks in the population plot(Theta, ps, ylim = c(0,1))  plot(Theta, ps2, ylim = c(0,1))   baditems <- cbind(item1, item2) newdat <- cbind(dat, baditems)  badmod <- mirt(newdat, 1) #>  itemfit(badmod) #clearly a bad fit for the last two items #>       item    S_X2 df.S_X2 RMSEA.S_X2 p.S_X2 #> 1   Item_1  26.608      24      0.010  0.323 #> 2   Item_2  14.613      26      0.000  0.964 #> 3   Item_3  35.063      25      0.020  0.087 #> 4   Item_4  30.993      26      0.014  0.229 #> 5   Item_5  20.266      25      0.000  0.733 #> 6   Item_6  26.641      24      0.010  0.321 #> 7   Item_7  25.524      25      0.005  0.433 #> 8   Item_8  29.095      24      0.015  0.217 #> 9   Item_9  29.228      25      0.013  0.254 #> 10 Item_10  34.572      24      0.021  0.075 #> 11 Item_11  32.517      24      0.019  0.115 #> 12 Item_12  43.634      25      0.027  0.012 #> 13 Item_13  19.525      24      0.000  0.723 #> 14 Item_14  24.384      25      0.000  0.497 #> 15 Item_15  24.072      25      0.000  0.515 #> 16 Item_16  33.682      25      0.019  0.115 #> 17 Item_17  58.681      26      0.035  0.000 #> 18 Item_18  28.826      24      0.014  0.227 #> 19 Item_19  19.221      23      0.000  0.688 #> 20 Item_20  38.570      25      0.023  0.041 #> 21 Item_21  24.132      26      0.000  0.568 #> 22 Item_22  28.951      23      0.016  0.182 #> 23 Item_23  22.083      26      0.000  0.684 #> 24 Item_24  29.721      24      0.015  0.194 #> 25 Item_25  22.775      26      0.000  0.646 #> 26 Item_26  27.243      24      0.012  0.293 #> 27 Item_27  22.161      26      0.000  0.680 #> 28 Item_28  22.798      26      0.000  0.644 #> 29 Item_29  30.499      24      0.016  0.169 #> 30 Item_30  31.316      24      0.017  0.145 #> 31   item1 185.602      28      0.075  0.000 #> 32   item2 135.647      28      0.062  0.000 mod <- mirt(dat, 1) #fit a model that does not contain the bad items #>  itemfit(mod) #>       item   S_X2 df.S_X2 RMSEA.S_X2 p.S_X2 #> 1   Item_1 29.980      24      0.016  0.185 #> 2   Item_2 21.004      26      0.000  0.742 #> 3   Item_3 26.195      24      0.010  0.343 #> 4   Item_4 24.582      25      0.000  0.486 #> 5   Item_5 27.717      24      0.012  0.272 #> 6   Item_6 34.249      23      0.022  0.062 #> 7   Item_7 34.346      25      0.019  0.101 #> 8   Item_8 25.295      23      0.010  0.335 #> 9   Item_9 21.434      25      0.000  0.668 #> 10 Item_10 30.231      23      0.018  0.143 #> 11 Item_11 23.284      23      0.004  0.444 #> 12 Item_12 18.241      24      0.000  0.791 #> 13 Item_13 19.337      24      0.000  0.734 #> 14 Item_14 26.281      24      0.010  0.339 #> 15 Item_15 15.675      24      0.000  0.899 #> 16 Item_16 25.369      24      0.008  0.386 #> 17 Item_17 51.496      25      0.033  0.001 #> 18 Item_18 17.211      23      0.000  0.799 #> 19 Item_19 20.136      23      0.000  0.634 #> 20 Item_20 37.402      24      0.024  0.040 #> 21 Item_21 30.726      25      0.015  0.198 #> 22 Item_22 23.889      22      0.009  0.353 #> 23 Item_23 13.622      25      0.000  0.968 #> 24 Item_24 43.777      24      0.029  0.008 #> 25 Item_25 27.211      25      0.009  0.345 #> 26 Item_26 17.295      24      0.000  0.836 #> 27 Item_27 27.196      25      0.009  0.346 #> 28 Item_28 16.918      25      0.000  0.885 #> 29 Item_29 15.302      24      0.000  0.912 #> 30 Item_30 21.808      23      0.000  0.532  if (FALSE) { # \\dontrun{ #### Pure non-parametric way of investigating the items library(KernSmoothIRT) ks <- ksIRT(newdat, rep(1, ncol(newdat)), 1) plot(ks, item=c(1,31,32)) par(ask=FALSE) } # }  # Using point estimates from the model Theta <- fscores(mod) IG0 <- itemGAM(dat[,1], Theta) #good item IG1 <- itemGAM(baditems[,1], Theta) IG2 <- itemGAM(baditems[,2], Theta) plot(IG0)  plot(IG1)  plot(IG2)   # same as above, but with plausible values to obtain the standard errors set.seed(4321) ThetaPV <- fscores(mod, plausible.draws=10) IG0 <- itemGAM(dat[,1], ThetaPV) #good item IG1 <- itemGAM(baditems[,1], ThetaPV) IG2 <- itemGAM(baditems[,2], ThetaPV) plot(IG0)  plot(IG1)  plot(IG2)   ## for polytomous test items SAT12[SAT12 == 8] <- NA dat <- key2binary(SAT12,                   key = c(1,4,5,2,3,1,2,1,3,1,2,4,2,1,5,3,4,4,1,4,3,3,4,1,3,5,1,3,1,5,4,5)) dat <- dat[,-32] mod <- mirt(dat, 1) #>   if (FALSE) { # \\dontrun{ # Kernal smoothing is very sensitive to which category is selected as 'correct' # 5th category as correct ks <- ksIRT(cbind(dat, SAT12[,32]), c(rep(1, 31), 5), 1) plot(ks, items = c(1,2,32))  # 3rd category as correct ks <- ksIRT(cbind(dat, SAT12[,32]), c(rep(1, 31), 3), 1) plot(ks, items = c(1,2,32)) } # }  # splines approach Theta <- fscores(mod) IG <- itemGAM(SAT12[,32], Theta) plot(IG)   set.seed(1423) ThetaPV <- fscores(mod, plausible.draws=10) IG2 <- itemGAM(SAT12[,32], ThetaPV) plot(IG2)   # assuming a simple increasing parametric form (like in a standard IRT model) IG3 <- itemGAM(SAT12[,32], Theta, formula = resp ~ Theta) plot(IG3)  IG3 <- itemGAM(SAT12[,32], ThetaPV, formula = resp ~ Theta) plot(IG3)   ### multidimensional example by returning the GAM objects mod2 <- mirt(dat, 2) #>  Theta <- fscores(mod2) IG4 <- itemGAM(SAT12[,32], Theta, formula = resp ~ s(Theta1, k=10) + s(Theta2, k=10),    return.models=TRUE) names(IG4) #> [1] \"cat_1\" \"cat_2\" \"cat_3\" \"cat_4\" \"cat_5\" plot(IG4[[1L]], main = 'Category 1')   plot(IG4[[2L]], main = 'Category 2')   plot(IG4[[3L]], main = 'Category 3')    # }"},{"path":"https://philchalmers.github.io/mirt/reference/itemfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Item fit statistics — itemfit","title":"Item fit statistics — itemfit","text":"Computes item-fit statistics variety unidimensional multidimensional models. Poorly fitting items inspected empirical plots/tables unidimensional models, otherwise itemGAM can used diagnose functional form IRT model misspecified, models can refit using flexible semi-parametric response models (e.g., itemtype = 'spline'). latent trait density approximated (e.g., Davidian curves, Empirical histograms, etc) passing use_dentype_estimate = TRUE use internally saved quadrature density components (applicable). Currently, S-X2 statistic supported mixture IRT models. Finally, applicable root mean-square error approximation (RMSEA) reported help gauge magnitude item misfit.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/itemfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Item fit statistics — itemfit","text":"","code":"itemfit(   x,   fit_stats = \"S_X2\",   which.items = 1:extract.mirt(x, \"nitems\"),   na.rm = FALSE,   p.adjust = \"none\",   group.bins = 10,   group.size = NA,   group.fun = mean,   mincell = 1,   mincell.X2 = 2,   return.tables = FALSE,   pv_draws = 30,   boot = 1000,   boot_dfapprox = 200,   S_X2.plot = NULL,   S_X2.plot_raw.score = TRUE,   ETrange = c(-2, 2),   ETpoints = 11,   empirical.plot = NULL,   empirical.CI = 0.95,   empirical.poly.collapse = FALSE,   method = \"EAP\",   Theta = NULL,   par.strip.text = list(cex = 0.7),   par.settings = list(strip.background = list(col = \"#9ECAE1\"), strip.border = list(col =     \"black\")),   auto.key = list(space = \"right\", points = FALSE, lines = TRUE),   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/itemfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Item fit statistics — itemfit","text":"x computed model object class SingleGroupClass, MultipleGroupClass, DiscreteClass fit_stats character vector indicating fit statistics computed.   Supported inputs : 'S_X2' : Orlando Thissen (2000, 2003)     Kang Chen's (2007) signed chi-squared test (default) 'Zh' : Drasgow, Levine, & Williams (1985) Zh 'X2' : Bock's (1972) chi-squared method.     default inputs compute Yen's (1981) Q1 variant X2 statistic     (.e., uses fixed group.bins = 10). However, Bock's group-size variable     median-based method can computed passing group.fun = median     modifying group.size input desired number bins 'G2' : McKinley & Mills (1985) G2 statistic (similar method Q1,     likelihood-ratio test). 'PV_Q1' : Chalmers Ng's (2017) plausible-value variant     Q1 statistic. 'PV_Q1*' : Chalmers Ng's (2017) plausible-value variant     Q1 statistic uses parametric bootstrapping obtain suitable empirical     distribution. 'X2*' : Stone's (2000) fit statistics require parametric     bootstrapping 'X2*_df' : Stone's (2000) fit statistics require parametric     bootstrapping obtain scaled versions X2* degrees freedom 'infit' : Compute infit outfit statistics Note 'S_X2' 'Zh' computed missing response data (.e., require multiple-imputation/row-removal techniques). .items integer vector indicating items test fit. Default tests possible items na.rm logical; remove rows missing values? required methods S-X2 require \"EAPsum\" method fscores p.adjust method use adjusting p-values respective item fit statistic (see p.adjust available options). Default 'none' group.bins number bins use X2 G2. example, setting group.bins = 10 compute Yen's (1981) Q1 statistic 'X2' requested group.size approximate size group used calculating \\(\\chi^2\\) statistic. default NA disables command instead uses group.bins input try construct equally sized bins group.fun function used 'X2' 'G2' computed. Determines central tendency measure within partitioned group. E.g., setting group.fun = median obtain median respective ability estimate subgroup (used Bock, 1972) mincell minimum expected cell size used S-X2 computations. Tables collapsed across items first polytomous, across scores necessary mincell.X2 minimum expected cell size used X2 computations. Tables collapsed polytomous, however condition can met group block omitted computations return.tables logical; return tables investigating 'X2', 'S_X2', 'X2*'? pv_draws number plausible-value draws obtain PV_Q1 PV_Q1* boot number parametric bootstrap samples create PV_Q1* X2* boot_dfapprox number parametric bootstrap samples create X2*_df statistic approximate scaling factor X2* well scaled degrees freedom estimates S_X2.plot argument input empirical.plot, however resulting image constructed according S-X2 statistic's conditional sum-score information S_X2.plot_raw.score logical; use raw-score information plot stead latent trait scale score? Default FALSE ETrange range integration nodes Stone's X2* statistic ETpoints number integration nodes use Stone's X2* statistic empirical.plot single numeric value character item name indicating item plot (via itemplot) overlay empirical \\(\\theta\\) groupings (see empirical.CI). Useful plotting expected bins based 'X2' 'G2' method empirical.CI numeric value indicating width empirical confidence interval ranging 0 1 (default 0 plots interval). example, 95 interval plotted empirical.CI = .95. applicable dichotomous items empirical.poly.collapse logical; collapse polytomous item categories expected scoring functions empirical plots? Default FALSE method type factor score estimation method. See fscores detail Theta matrix factor scores person used statistics require empirical estimates. supplied, arguments typically passed fscores() ignored values used instead. Also required estimating statistics missing data via imputation par.strip.text plotting argument passed lattice par.settings plotting argument passed lattice auto.key plotting argument passed lattice ... additional arguments passed fscores() lattice","code":""},{"path":"https://philchalmers.github.io/mirt/reference/itemfit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Item fit statistics — itemfit","text":"Bock, R. D. (1972). Estimating item parameters latent ability responses scored two nominal categories. Psychometrika, 37, 29-51. Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06 Chalmers, R. P. & Ng, V. (2017). Plausible-Value Imputation Statistics Detecting Item Misfit. Applied Psychological Measurement, 41, 372-387. doi:10.1177/0146621617692079 Drasgow, F., Levine, M. V., & Williams, E. . (1985). Appropriateness measurement polychotomous item response models standardized indices. British Journal Mathematical Statistical Psychology, 38, 67-86. Kang, T. & Chen, Troy, T. (2007). investigation performance generalized S-X2 item-fit index polytomous IRT models. ACT McKinley, R., & Mills, C. (1985). comparison several goodness--fit statistics. Applied Psychological Measurement, 9, 49-57. Orlando, M. & Thissen, D. (2000). Likelihood-based item fit indices dichotomous item response theory models. Applied Psychological Measurement, 24, 50-64. Reise, S. P. (1990). comparison item- person-fit methods assessing model-data fit IRT. Applied Psychological Measurement, 14, 127-137. Stone, C. . (2000). Monte Carlo Based Null Distribution Alternative Goodness--Fit Test Statistics IRT Models. Journal Educational Measurement, 37, 58-75. Wright B. D. & Masters, G. N. (1982). Rating scale analysis. MESA Press. Yen, W. M. (1981). Using simulation results choose latent trait model. Applied Psychological Measurement, 5, 245-262.","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/itemfit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Item fit statistics — itemfit","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/itemfit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Item fit statistics — itemfit","text":"","code":"# \\donttest{  P <- function(Theta){exp(Theta^2 * 1.2 - 1) / (1 + exp(Theta^2 * 1.2 - 1))}  #make some data set.seed(1234) a <- matrix(rlnorm(20, meanlog=0, sdlog = .1),ncol=1) d <- matrix(rnorm(20),ncol=1) Theta <- matrix(rnorm(2000)) items <- rep('2PL', 20) ps <- P(Theta) baditem <- numeric(2000) for(i in 1:2000)    baditem[i] <- sample(c(0,1), 1, prob = c(1-ps[i], ps[i])) data <- cbind(simdata(a,d, 2000, items, Theta=Theta), baditem=baditem)  x <- mirt(data, 1) #>  raschfit <- mirt(data, 1, itemtype='Rasch') #>  fit <- itemfit(x) fit #>       item    S_X2 df.S_X2 RMSEA.S_X2 p.S_X2 #> 1   Item_1  16.519      15      0.007  0.348 #> 2   Item_2  11.718      15      0.000  0.700 #> 3   Item_3  22.835      15      0.016  0.088 #> 4   Item_4  11.703      16      0.000  0.764 #> 5   Item_5  15.241      15      0.003  0.434 #> 6   Item_6  11.983      16      0.000  0.745 #> 7   Item_7  23.912      16      0.016  0.091 #> 8   Item_8  12.744      15      0.000  0.622 #> 9   Item_9  16.931      15      0.008  0.323 #> 10 Item_10   9.199      16      0.000  0.905 #> 11 Item_11  17.630      15      0.009  0.283 #> 12 Item_12  12.198      15      0.000  0.664 #> 13 Item_13  17.487      15      0.009  0.291 #> 14 Item_14  19.117      15      0.012  0.208 #> 15 Item_15  11.542      16      0.000  0.775 #> 16 Item_16  12.534      16      0.000  0.706 #> 17 Item_17  29.453      15      0.022  0.014 #> 18 Item_18  15.064      16      0.000  0.520 #> 19 Item_19  17.125      15      0.008  0.311 #> 20 Item_20  10.064      15      0.000  0.816 #> 21 baditem 233.224      18      0.077  0.000  # p-value adjustment itemfit(x, p.adjust='fdr') #>       item    S_X2 df.S_X2 RMSEA.S_X2 p.S_X2 #> 1   Item_1  16.519      15      0.007  0.732 #> 2   Item_2  11.718      15      0.000  0.856 #> 3   Item_3  22.835      15      0.016  0.480 #> 4   Item_4  11.703      16      0.000  0.856 #> 5   Item_5  15.241      15      0.003  0.829 #> 6   Item_6  11.983      16      0.000  0.856 #> 7   Item_7  23.912      16      0.016  0.480 #> 8   Item_8  12.744      15      0.000  0.856 #> 9   Item_9  16.931      15      0.008  0.732 #> 10 Item_10   9.199      16      0.000  0.905 #> 11 Item_11  17.630      15      0.009  0.732 #> 12 Item_12  12.198      15      0.000  0.856 #> 13 Item_13  17.487      15      0.009  0.732 #> 14 Item_14  19.117      15      0.012  0.732 #> 15 Item_15  11.542      16      0.000  0.856 #> 16 Item_16  12.534      16      0.000  0.856 #> 17 Item_17  29.453      15      0.022  0.148 #> 18 Item_18  15.064      16      0.000  0.856 #> 19 Item_19  17.125      15      0.008  0.732 #> 20 Item_20  10.064      15      0.000  0.856 #> 21 baditem 233.224      18      0.077  0.000  # two different fit stats (with/without p-value adjustment) itemfit(x, c('S_X2' ,'X2'), p.adjust='fdr') #>       item      X2 df.X2 RMSEA.X2  p.X2    S_X2 df.S_X2 RMSEA.S_X2 p.S_X2 #> 1   Item_1  30.842     8    0.038 0.000  16.519      15      0.007  0.732 #> 2   Item_2  27.970     8    0.035 0.001  11.718      15      0.000  0.856 #> 3   Item_3  43.995     8    0.047 0.000  22.835      15      0.016  0.480 #> 4   Item_4  33.272     8    0.040 0.000  11.703      16      0.000  0.856 #> 5   Item_5  29.469     8    0.037 0.001  15.241      15      0.003  0.829 #> 6   Item_6  21.325     8    0.029 0.007  11.983      16      0.000  0.856 #> 7   Item_7  23.127     8    0.031 0.004  23.912      16      0.016  0.480 #> 8   Item_8  25.332     8    0.033 0.002  12.744      15      0.000  0.856 #> 9   Item_9  33.778     8    0.040 0.000  16.931      15      0.008  0.732 #> 10 Item_10  22.972     8    0.031 0.004   9.199      16      0.000  0.905 #> 11 Item_11  27.300     8    0.035 0.001  17.630      15      0.009  0.732 #> 12 Item_12  23.256     8    0.031 0.004  12.198      15      0.000  0.856 #> 13 Item_13  31.523     8    0.038 0.000  17.487      15      0.009  0.732 #> 14 Item_14  27.924     8    0.035 0.001  19.117      15      0.012  0.732 #> 15 Item_15  18.462     8    0.026 0.020  11.542      16      0.000  0.856 #> 16 Item_16  25.057     8    0.033 0.002  12.534      16      0.000  0.856 #> 17 Item_17  14.828     8    0.021 0.063  29.453      15      0.022  0.148 #> 18 Item_18  17.676     8    0.025 0.025  15.064      16      0.000  0.856 #> 19 Item_19  32.585     8    0.039 0.000  17.125      15      0.008  0.732 #> 20 Item_20  37.207     8    0.043 0.000  10.064      15      0.000  0.856 #> 21 baditem 228.367     8    0.117 0.000 233.224      18      0.077  0.000 itemfit(x, c('S_X2' ,'X2')) #>       item      X2 df.X2 RMSEA.X2  p.X2    S_X2 df.S_X2 RMSEA.S_X2 p.S_X2 #> 1   Item_1  30.842     8    0.038 0.000  16.519      15      0.007  0.348 #> 2   Item_2  27.970     8    0.035 0.000  11.718      15      0.000  0.700 #> 3   Item_3  43.995     8    0.047 0.000  22.835      15      0.016  0.088 #> 4   Item_4  33.272     8    0.040 0.000  11.703      16      0.000  0.764 #> 5   Item_5  29.469     8    0.037 0.000  15.241      15      0.003  0.434 #> 6   Item_6  21.325     8    0.029 0.006  11.983      16      0.000  0.745 #> 7   Item_7  23.127     8    0.031 0.003  23.912      16      0.016  0.091 #> 8   Item_8  25.332     8    0.033 0.001  12.744      15      0.000  0.622 #> 9   Item_9  33.778     8    0.040 0.000  16.931      15      0.008  0.323 #> 10 Item_10  22.972     8    0.031 0.003   9.199      16      0.000  0.905 #> 11 Item_11  27.300     8    0.035 0.001  17.630      15      0.009  0.283 #> 12 Item_12  23.256     8    0.031 0.003  12.198      15      0.000  0.664 #> 13 Item_13  31.523     8    0.038 0.000  17.487      15      0.009  0.291 #> 14 Item_14  27.924     8    0.035 0.000  19.117      15      0.012  0.208 #> 15 Item_15  18.462     8    0.026 0.018  11.542      16      0.000  0.775 #> 16 Item_16  25.057     8    0.033 0.002  12.534      16      0.000  0.706 #> 17 Item_17  14.828     8    0.021 0.063  29.453      15      0.022  0.014 #> 18 Item_18  17.676     8    0.025 0.024  15.064      16      0.000  0.520 #> 19 Item_19  32.585     8    0.039 0.000  17.125      15      0.008  0.311 #> 20 Item_20  37.207     8    0.043 0.000  10.064      15      0.000  0.816 #> 21 baditem 228.367     8    0.117 0.000 233.224      18      0.077  0.000  # Conditional sum-score plot from S-X2 information itemfit(x, S_X2.plot = 1) # good fit  itemfit(x, S_X2.plot = 2) # good fit  itemfit(x, S_X2.plot = 21) # bad fit   itemfit(x, 'X2') # just X2 #>       item      X2 df.X2 RMSEA.X2  p.X2 #> 1   Item_1  30.842     8    0.038 0.000 #> 2   Item_2  27.970     8    0.035 0.000 #> 3   Item_3  43.995     8    0.047 0.000 #> 4   Item_4  33.272     8    0.040 0.000 #> 5   Item_5  29.469     8    0.037 0.000 #> 6   Item_6  21.325     8    0.029 0.006 #> 7   Item_7  23.127     8    0.031 0.003 #> 8   Item_8  25.332     8    0.033 0.001 #> 9   Item_9  33.778     8    0.040 0.000 #> 10 Item_10  22.972     8    0.031 0.003 #> 11 Item_11  27.300     8    0.035 0.001 #> 12 Item_12  23.256     8    0.031 0.003 #> 13 Item_13  31.523     8    0.038 0.000 #> 14 Item_14  27.924     8    0.035 0.000 #> 15 Item_15  18.462     8    0.026 0.018 #> 16 Item_16  25.057     8    0.033 0.002 #> 17 Item_17  14.828     8    0.021 0.063 #> 18 Item_18  17.676     8    0.025 0.024 #> 19 Item_19  32.585     8    0.039 0.000 #> 20 Item_20  37.207     8    0.043 0.000 #> 21 baditem 228.367     8    0.117 0.000 itemfit(x, 'X2', method = 'ML') # X2 with maximum-likelihood estimates for traits #> Warning: The following factor score estimates failed to converge successfully: #>     311,315,352,518,677,748,909,927,1081,1243,1277,1305,1415,1480,1620,1893 #>       item      X2 df.X2 RMSEA.X2  p.X2 #> 1   Item_1  35.941     8    0.042 0.000 #> 2   Item_2  53.226     8    0.053 0.000 #> 3   Item_3  47.010     8    0.049 0.000 #> 4   Item_4  85.852     8    0.070 0.000 #> 5   Item_5  85.280     8    0.070 0.000 #> 6   Item_6   8.632     8    0.006 0.374 #> 7   Item_7  57.623     8    0.056 0.000 #> 8   Item_8  42.952     8    0.047 0.000 #> 9   Item_9  55.180     8    0.054 0.000 #> 10 Item_10  32.456     8    0.039 0.000 #> 11 Item_11 131.613     8    0.088 0.000 #> 12 Item_12  50.094     8    0.051 0.000 #> 13 Item_13  55.846     8    0.055 0.000 #> 14 Item_14  18.717     8    0.026 0.016 #> 15 Item_15  12.402     8    0.017 0.134 #> 16 Item_16  38.229     8    0.043 0.000 #> 17 Item_17   4.413     8    0.000 0.818 #> 18 Item_18  16.165     8    0.023 0.040 #> 19 Item_19  14.190     8    0.020 0.077 #> 20 Item_20  21.215     8    0.029 0.007 #> 21 baditem 227.191     8    0.117 0.000 itemfit(x, group.bins=15, empirical.plot = 1, method = 'ML') #empirical item plot with 15 points #> Warning: The following factor score estimates failed to converge successfully: #>     311,315,352,518,677,748,909,927,1081,1243,1277,1305,1415,1480,1620,1893  itemfit(x, group.bins=15, empirical.plot = 21, method = 'ML') #> Warning: The following factor score estimates failed to converge successfully: #>     311,315,352,518,677,748,909,927,1081,1243,1277,1305,1415,1480,1620,1893   # PV and X2* statistics (parametric bootstrap stats not run to save time) itemfit(x, 'PV_Q1') #>       item   PV_Q1 df.PV_Q1 RMSEA.PV_Q1 p.PV_Q1 #> 1   Item_1   8.984        8       0.008   0.344 #> 2   Item_2   9.441        8       0.009   0.306 #> 3   Item_3   7.162        8       0.000   0.519 #> 4   Item_4   8.463        8       0.005   0.390 #> 5   Item_5   8.755        8       0.007   0.363 #> 6   Item_6   9.411        8       0.009   0.309 #> 7   Item_7   8.678        8       0.007   0.370 #> 8   Item_8   8.269        8       0.004   0.408 #> 9   Item_9   9.005        8       0.008   0.342 #> 10 Item_10   6.873        8       0.000   0.550 #> 11 Item_11   9.871        8       0.011   0.274 #> 12 Item_12   9.214        8       0.009   0.325 #> 13 Item_13   8.889        8       0.007   0.352 #> 14 Item_14   9.088        8       0.008   0.335 #> 15 Item_15   8.583        8       0.006   0.379 #> 16 Item_16   8.848        8       0.007   0.355 #> 17 Item_17   8.408        8       0.005   0.395 #> 18 Item_18   8.000        8       0.000   0.433 #> 19 Item_19   8.742        8       0.007   0.365 #> 20 Item_20   7.823        8       0.000   0.451 #> 21 baditem 118.597        8       0.083   0.000  if(interactive()) mirtCluster() # improve speed of bootstrap samples by running in parallel # itemfit(x, 'PV_Q1*') # itemfit(x, 'X2*') # Stone's 1993 statistic # itemfit(x, 'X2*_df') # Stone's 2000 scaled statistic with df estimate  # empirical tables for X2 statistic tabs <- itemfit(x, 'X2', return.tables=TRUE, which.items = 1) tabs #> $`theta = -1.4531` #>       Observed  Expected z.Residual #> cat_0      183 158.63869   1.934176 #> cat_1       17  41.36131  -3.787943 #>  #> $`theta = -0.9416` #>       Observed  Expected z.Residual #> cat_0      149 138.43172  0.8982277 #> cat_1       51  61.56828 -1.3468702 #>  #> $`theta = -0.6475` #>       Observed  Expected z.Residual #> cat_0      132 124.64146  0.6591135 #> cat_1       68  75.35854 -0.8476670 #>  #> $`theta = -0.3921` #>       Observed  Expected  z.Residual #> cat_0      112 111.77447  0.02133235 #> cat_1       88  88.22553 -0.02401114 #>  #> $`theta = -0.1393` #>       Observed  Expected z.Residual #> cat_0       88  98.63125  -1.070476 #> cat_1      112 101.36875   1.055923 #>  #> $`theta = 0.0936` #>       Observed Expected  z.Residual #> cat_0       86  86.5533 -0.05947283 #> cat_1      114 113.4467  0.05194748 #>  #> $`theta = 0.346` #>       Observed  Expected z.Residual #> cat_0       61  73.91477  -1.502177 #> cat_1      139 126.08523   1.150150 #>  #> $`theta = 0.6087` #>       Observed  Expected z.Residual #> cat_0       54  61.64828 -0.9740998 #> cat_1      146 138.35172  0.6502370 #>  #> $`theta = 0.9646` #>       Observed Expected z.Residual #> cat_0       41  47.0127 -0.8769235 #> cat_1      159 152.9873  0.4861179 #>  #> $`theta = 1.5621` #>       Observed  Expected z.Residual #> cat_0       24  28.27768 -0.8044264 #> cat_1      176 171.72232  0.3264336 #>   #infit/outfit statistics. method='ML' agrees better with eRm package itemfit(raschfit, 'infit', method = 'ML') #infit and outfit stats #>       item outfit z.outfit infit z.infit #> 1   Item_1  0.919   -2.945 0.951  -2.699 #> 2   Item_2  0.962   -1.281 0.960  -2.010 #> 3   Item_3  0.876   -4.455 0.918  -4.332 #> 4   Item_4  0.998   -0.049 1.009   0.495 #> 5   Item_5  0.982   -0.523 0.974  -1.227 #> 6   Item_6  0.890   -2.233 0.950  -1.692 #> 7   Item_7  1.008    0.259 1.003   0.171 #> 8   Item_8  0.933   -1.743 0.961  -1.631 #> 9   Item_9  0.958   -1.519 0.964  -1.999 #> 10 Item_10  1.011    0.303 1.013   0.534 #> 11 Item_11  0.898   -2.300 0.939  -2.531 #> 12 Item_12  0.988   -0.383 1.012   0.607 #> 13 Item_13  0.991   -0.263 1.002   0.093 #> 14 Item_14  0.973   -0.841 0.974  -1.256 #> 15 Item_15  0.947   -0.943 0.993  -0.210 #> 16 Item_16  0.988   -0.271 0.985  -0.546 #> 17 Item_17  0.878   -1.532 0.960  -0.872 #> 18 Item_18  0.961   -0.759 0.978  -0.742 #> 19 Item_19  0.943   -2.060 0.974  -1.352 #> 20 Item_20  0.868   -4.736 0.911  -4.687 #> 21 baditem  1.513   16.123 1.338  16.509  #same as above, but inputting ML estimates instead (saves time for re-use) Theta <- fscores(raschfit, method = 'ML') itemfit(raschfit, 'infit', Theta=Theta) #>       item outfit z.outfit infit z.infit #> 1   Item_1  0.919   -2.945 0.951  -2.699 #> 2   Item_2  0.962   -1.281 0.960  -2.010 #> 3   Item_3  0.876   -4.455 0.918  -4.332 #> 4   Item_4  0.998   -0.049 1.009   0.495 #> 5   Item_5  0.982   -0.523 0.974  -1.227 #> 6   Item_6  0.890   -2.233 0.950  -1.692 #> 7   Item_7  1.008    0.259 1.003   0.171 #> 8   Item_8  0.933   -1.743 0.961  -1.631 #> 9   Item_9  0.958   -1.519 0.964  -1.999 #> 10 Item_10  1.011    0.303 1.013   0.534 #> 11 Item_11  0.898   -2.300 0.939  -2.531 #> 12 Item_12  0.988   -0.383 1.012   0.607 #> 13 Item_13  0.991   -0.263 1.002   0.093 #> 14 Item_14  0.973   -0.841 0.974  -1.256 #> 15 Item_15  0.947   -0.943 0.993  -0.210 #> 16 Item_16  0.988   -0.271 0.985  -0.546 #> 17 Item_17  0.878   -1.532 0.960  -0.872 #> 18 Item_18  0.961   -0.759 0.978  -0.742 #> 19 Item_19  0.943   -2.060 0.974  -1.352 #> 20 Item_20  0.868   -4.736 0.911  -4.687 #> 21 baditem  1.513   16.123 1.338  16.509 itemfit(raschfit, empirical.plot=1, Theta=Theta)  itemfit(raschfit, 'X2', return.tables=TRUE, Theta=Theta, which.items=1) #> $`theta = -1.7718` #>       Observed  Expected z.Residual #> cat_0      178 166.44926  0.8953008 #> cat_1       22  33.55074 -1.9941546 #>  #> $`theta = -1.0782` #>       Observed  Expected z.Residual #> cat_0      147 142.51602  0.3756054 #> cat_1       53  57.48398 -0.5914121 #>  #> $`theta = -0.7497` #>       Observed  Expected z.Residual #> cat_0      138 128.19072  0.8663808 #> cat_1       62  71.80928 -1.1575688 #>  #> $`theta = -0.4577` #>       Observed Expected z.Residual #> cat_0      109 114.2782 -0.4937469 #> cat_1       91  85.7218  0.5700861 #>  #> $`theta = -0.193` #>       Observed  Expected z.Residual #> cat_0       91 101.13957  -1.008228 #> cat_1      109  98.86043   1.019784 #>  #> $`theta = 0.0765` #>       Observed Expected z.Residual #> cat_0       77  87.7275  -1.145330 #> cat_1      123 112.2725   1.012423 #>  #> $`theta = 0.3374` #>       Observed  Expected z.Residual #> cat_0       74  75.15333 -0.1330391 #> cat_1      126 124.84667  0.1032203 #>  #> $`theta = 0.6728` #>       Observed  Expected z.Residual #> cat_0       47  60.18187  -1.699199 #> cat_1      153 139.81813   1.114796 #>  #> $`theta = 1.0787` #>       Observed  Expected z.Residual #> cat_0       47  44.57924  0.3625653 #> cat_1      153 155.42076 -0.1941771 #>  #> $`theta = 1.9249` #>       Observed  Expected   z.Residual #> cat_0       22  21.91506  0.018144094 #> cat_1      178 178.08494 -0.006364921 #>   # fit a new more flexible model for the mis-fitting item itemtype <- c(rep('2PL', 20), 'spline') x2 <- mirt(data, 1, itemtype=itemtype) #>  #> Warning: EM cycles terminated after 500 iterations. itemfit(x2) #>       item   S_X2 df.S_X2 RMSEA.S_X2 p.S_X2 #> 1   Item_1 13.109      15      0.000  0.594 #> 2   Item_2 13.513      15      0.000  0.563 #> 3   Item_3 21.887      15      0.015  0.111 #> 4   Item_4  9.894      15      0.000  0.826 #> 5   Item_5 16.248      15      0.006  0.366 #> 6   Item_6 10.218      16      0.000  0.855 #> 7   Item_7 18.279      15      0.010  0.248 #> 8   Item_8 13.587      16      0.000  0.629 #> 9   Item_9 13.485      15      0.000  0.565 #> 10 Item_10 10.569      16      0.000  0.835 #> 11 Item_11 16.325      15      0.007  0.361 #> 12 Item_12  9.663      15      0.000  0.840 #> 13 Item_13 19.394      16      0.010  0.249 #> 14 Item_14 16.357      15      0.007  0.359 #> 15 Item_15  9.410      16      0.000  0.896 #> 16 Item_16 13.578      16      0.000  0.630 #> 17 Item_17 29.945      16      0.021  0.018 #> 18 Item_18 15.058      16      0.000  0.520 #> 19 Item_19 15.663      15      0.005  0.405 #> 20 Item_20  9.333      15      0.000  0.859 #> 21 baditem 11.473      13      0.000  0.571 itemplot(x2, 21)  anova(x, x2) #>         AIC    SABIC       HQ      BIC    logLik     X2 df p #> x  49477.85 49579.65 49564.23 49713.09 -24696.93             #> x2 49214.97 49321.62 49305.46 49461.41 -24563.49 266.88  2 0  #------------------------------------------------------------  #similar example to Kang and Chen 2007 a <- matrix(c(.8,.4,.7, .8, .4, .7, 1, 1, 1, 1)) d <- matrix(rep(c(2.0,0.0,-1,-1.5),10), ncol=4, byrow=TRUE) dat <- simdata(a,d,2000, itemtype = rep('graded', 10)) head(dat) #>      Item_1 Item_2 Item_3 Item_4 Item_5 Item_6 Item_7 Item_8 Item_9 Item_10 #> [1,]      4      0      1      4      1      4      3      2      1       4 #> [2,]      2      1      1      3      2      4      2      1      4       2 #> [3,]      2      2      3      0      0      0      4      4      4       4 #> [4,]      1      2      4      1      2      2      2      2      0       4 #> [5,]      1      3      0      2      1      4      4      4      3       1 #> [6,]      1      3      3      2      3      1      1      2      0       1  mod <- mirt(dat, 1) #>  itemfit(mod) #>       item    S_X2 df.S_X2 RMSEA.S_X2 p.S_X2 #> 1   Item_1 143.021     103      0.014  0.006 #> 2   Item_2  85.589     109      0.000  0.953 #> 3   Item_3 110.835     105      0.005  0.330 #> 4   Item_4 121.145     103      0.009  0.107 #> 5   Item_5 107.875     111      0.000  0.566 #> 6   Item_6  93.905     102      0.000  0.704 #> 7   Item_7 113.544      99      0.009  0.151 #> 8   Item_8 100.858      99      0.003  0.429 #> 9   Item_9  83.214      98      0.000  0.857 #> 10 Item_10 104.402      99      0.005  0.336 itemfit(mod, 'X2') # less useful given inflated Type I error rates #>       item      X2 df.X2 RMSEA.X2  p.X2 #> 1   Item_1  93.925    35    0.029 0.000 #> 2   Item_2  43.667    35    0.011 0.149 #> 3   Item_3  81.354    35    0.026 0.000 #> 4   Item_4  90.490    35    0.028 0.000 #> 5   Item_5  36.169    35    0.004 0.414 #> 6   Item_6  97.559    35    0.030 0.000 #> 7   Item_7 129.917    35    0.037 0.000 #> 8   Item_8 130.263    35    0.037 0.000 #> 9   Item_9 141.266    35    0.039 0.000 #> 10 Item_10 117.650    35    0.034 0.000 itemfit(mod, empirical.plot = 1)  itemfit(mod, empirical.plot = 1, empirical.poly.collapse=TRUE)   # collapsed tables (see mincell.X2) for X2 and G2 itemfit(mod, 'X2', return.tables = TRUE, which.items = 1) #> $`theta = -1.4692` #>       Observed  Expected z.Residual #> cat_0       98 65.020718  4.0899247 #> cat_1       76 88.468143 -1.3255872 #> cat_2       12 26.774054 -2.8552400 #> cat_3        7  6.656543  0.1331215 #> cat_4        7 13.080542 -1.6812388 #>  #> $`theta = -0.8519` #>       Observed  Expected z.Residual #> cat_0       65 45.508938  2.8892636 #> cat_1       87 88.222767 -0.1301827 #> cat_2       29 35.896766 -1.1511126 #> cat_3        6  9.834511 -1.2227385 #> cat_4       13 20.537019 -1.6631481 #>  #> $`theta = -0.5476` #>       Observed Expected z.Residual #> cat_0       35 37.54994 -0.4161270 #> cat_1       97 85.03642  1.2973549 #> cat_2       34 40.25662 -0.9861003 #> cat_3        5 11.70198 -1.9591763 #> cat_4       29 25.45504  0.7026267 #>  #> $`theta = -0.3145` #>       Observed Expected z.Residual #> cat_0       27 32.21053 -0.9180857 #> cat_1       91 81.40120  1.0639013 #> cat_2       40 43.28252 -0.4989437 #> cat_3       15 13.23174  0.4861130 #> cat_4       27 29.87400 -0.5258232 #>  #> $`theta = -0.0993` #>       Observed Expected z.Residual #> cat_0       23 27.84181 -0.9176111 #> cat_1       73 77.27754 -0.4865943 #> cat_2       60 45.69537  2.1161218 #> cat_3       12 14.68759 -0.7012737 #> cat_4       32 34.49770 -0.4252515 #>  #> $`theta = 0.1116` #>       Observed Expected  z.Residual #> cat_0       23 24.05321 -0.21474860 #> cat_1       73 72.66989  0.03872444 #> cat_2       50 47.59720  0.34827910 #> cat_3       16 16.11821 -0.02944308 #> cat_4       38 39.56149 -0.24825845 #>  #> $`theta = 0.3293` #>       Observed Expected   z.Residual #> cat_0       18 20.61824 -0.576612407 #> cat_1       69 67.48888  0.183942450 #> cat_2       49 48.98546  0.002077898 #> cat_3       24 17.55297  1.538809131 #> cat_4       40 45.35445 -0.795069543 #>  #> $`theta = 0.5568` #>       Observed Expected  z.Residual #> cat_0        6 17.49926 -2.74890777 #> cat_1       60 61.79242 -0.22801909 #> cat_2       56 49.73600  0.88821096 #> cat_3       19 18.94936  0.01163316 #> cat_4       59 52.02296  0.96732827 #>  #> $`theta = 0.8512` #>       Observed Expected z.Residual #> cat_0        7 14.09896 -1.8906068 #> cat_1       45 54.28449 -1.2601441 #> cat_2       48 49.58044 -0.2244513 #> cat_3       26 20.49440  1.2161493 #> cat_4       74 61.54171  1.5880848 #>  #> $`theta = 1.4358` #>       Observed  Expected z.Residual #> cat_0        6  9.087564 -1.0242177 #> cat_1       25 40.094053 -2.3837784 #> cat_2       44 45.694100 -0.2506161 #> cat_3       21 22.208083 -0.2563547 #> cat_4      104 82.916200  2.3154169 #>   mod2 <- mirt(dat, 1, 'Rasch') #>  itemfit(mod2, 'infit', method = 'ML') #>       item outfit z.outfit infit z.infit #> 1   Item_1  0.959   -1.407 0.946  -2.141 #> 2   Item_2  1.098    3.226 1.074   2.791 #> 3   Item_3  0.962   -1.326 0.961  -1.575 #> 4   Item_4  0.946   -1.867 0.932  -2.704 #> 5   Item_5  1.121    3.943 1.094   3.496 #> 6   Item_6  0.917   -2.902 0.917  -3.296 #> 7   Item_7  0.864   -4.829 0.881  -4.899 #> 8   Item_8  0.873   -4.656 0.879  -5.025 #> 9   Item_9  0.876   -4.467 0.887  -4.696 #> 10 Item_10  0.883   -4.255 0.892  -4.519  # massive list of tables for S-X2 tables <- itemfit(mod, return.tables = TRUE)  #observed and expected total score patterns for item 1 (post collapsing) tables$O[[1]] #>     0  1  2  3  4 #> 4  12  3  0  0  0 #> 5   6  1  0  0  0 #> 6   8 17  1  0  0 #> 7  12 16  5  0  0 #> 8  22  8  0  0  0 #> 9  30 20  3  3  1 #> 10 19 27  9  1  7 #> 11 16 32  9  4  0 #> 12 17 40 17  1  5 #> 13 25 51 15  4  8 #> 14 22 44 14  3  8 #> 15 22 46 22  5 14 #> 16 14 41 32  8 24 #> 17 11 42 31  8 10 #> 18 11 57 25  7 25 #> 19 17 41 37 11 15 #> 20 11 35 28 12 26 #> 21 10 32 32  8 22 #> 22  5 32 18 15 29 #> 23  2 23 17  7 33 #> 24  2 30 22  9 23 #> 25  3 15 19  7 28 #> 26  3 12 16 11 23 #> 27  4 13 12  4 19 #> 28  3  6  9  5 18 #> 29  3  6  2 17  0 #> 30  3 10  2 21  0 #> 31  1  2  1 13  0 #> 32  1  4  5  6  0 #> 33  3  4  4  5  0 #> 34  1  3  1 11  0 #> 35  2  6  0  0  0 #> 36  2  6  0  0  0 tables$E[[1]] #>            [,1]      [,2]      [,3]      [,4]      [,5] #>  [1,] 11.023325  3.976675        NA        NA        NA #>  [2,]  4.102366  2.897634        NA        NA        NA #>  [3,] 13.498246 10.610902  1.890852        NA        NA #>  [4,] 15.184304 14.492730  3.322965        NA        NA #>  [5,] 12.249443 13.799872  3.950685        NA        NA #>  [6,] 20.682046 26.920288  6.923239  1.157706  1.316720 #>  [7,] 20.332439 30.097150  8.830861  1.641385  2.098165 #>  [8,] 17.517441 29.135716  9.625822  1.958940  2.762080 #>  [9,] 20.446921 37.829468 13.940499  3.072836  4.710276 #> [10,] 23.437800 47.811327 19.504466  4.622495  7.623912 #> [11,] 18.436615 41.167389 18.467918  4.679944  8.248134 #> [12,] 19.651227 47.756678 23.431406  6.318731 11.841957 #> [13,] 19.076413 50.199010 26.830125  7.670547 15.223905 #> [14,] 14.528071 41.195659 23.904020  7.227464 15.144786 #> [15,] 15.799085 48.086720 30.192468  9.636968 21.284760 #> [16,] 13.544069 44.116503 29.895563 10.055666 23.388198 #> [17,] 11.078348 38.500292 28.110440  9.952500 24.358420 #> [18,]  9.068050 33.529616 26.330542  9.809752 25.262041 #> [19,]  7.581094 29.780090 25.109651  9.840833 26.688332 #> [20,]  5.489874 22.880802 20.702905  8.532437 24.393982 #> [21,]  5.010515 22.116677 21.467501  9.311108 28.094199 #> [22,]  3.626463 16.954931 17.637672  8.059013 25.721921 #> [23,]  2.805419 13.907880 15.517623  7.472196 25.296882 #> [24,]  1.907017 10.013898 12.004816  6.104317 21.969952 #> [25,]  1.261885  7.039995  9.063539  4.881523 18.753058 #> [26,]  4.944641  5.875443  3.354204 13.825711        NA #> [27,]  5.454637  7.095249  4.313860 19.136254        NA #> [28,]  2.176787  3.093386  2.019117  9.710709        NA #> [29,]  1.685470  2.659415  1.858932  9.796184        NA #> [30,]  1.334541  2.384692  1.813140 10.467628        NA #> [31,]  1.040082  2.042086  1.733955 11.183876        NA #> [32,]  2.050562  5.949438        NA        NA        NA #> [33,]  1.369048  6.630952        NA        NA        NA  # can also select specific items # itemfit(mod, return.tables = TRUE, which.items=1)  # fit stats with missing data (run in parallel using all cores) dat[sample(1:prod(dim(dat)), 100)] <- NA raschfit <- mirt(dat, 1, itemtype='Rasch') #>   # use only valid data by removing rows with missing terms itemfit(raschfit, c('S_X2', 'infit'), na.rm = TRUE) #> Sample size after row-wise response data removal: 1901 #>       item outfit z.outfit infit z.infit    S_X2 df.S_X2 RMSEA.S_X2 p.S_X2 #> 1   Item_1  0.906   -3.626 0.911  -3.660 155.053     102      0.017  0.001 #> 2   Item_2  0.997   -0.107 1.004   0.146 146.662     103      0.015  0.003 #> 3   Item_3  0.917   -3.282 0.919  -3.385 114.783     103      0.008  0.201 #> 4   Item_4  0.884   -4.448 0.896  -4.291 121.470     102      0.010  0.092 #> 5   Item_5  1.006    0.235 1.009   0.349 204.451     103      0.023  0.000 #> 6   Item_6  0.880   -4.515 0.895  -4.216  93.810     103      0.000  0.730 #> 7   Item_7  0.852   -5.852 0.866  -5.666 129.878     102      0.012  0.033 #> 8   Item_8  0.862   -5.635 0.870  -5.607 120.879     102      0.010  0.098 #> 9   Item_9  0.855   -5.841 0.867  -5.722  96.812     102      0.000  0.627 #> 10 Item_10  0.852   -6.127 0.863  -6.019 111.851     101      0.008  0.216  # note that X2, G2, PV-Q1, and X2* do not require complete datasets thetas <- fscores(raschfit, method = 'ML') # save for faster computations itemfit(raschfit, c('X2', 'G2'), Theta=thetas) #>       item      X2 df.X2 RMSEA.X2  p.X2     G2 df.G2 RMSEA.G2  p.G2 #> 1   Item_1  56.082    36    0.017 0.018 57.138    36    0.017 0.014 #> 2   Item_2  72.433    36    0.023 0.000 68.605    36    0.021 0.001 #> 3   Item_3  51.674    36    0.015 0.044 52.944    36    0.015 0.034 #> 4   Item_4  42.209    36    0.009 0.220 40.864    36    0.008 0.265 #> 5   Item_5 108.433    36    0.032 0.000 93.285    36    0.028 0.000 #> 6   Item_6  37.478    36    0.005 0.401 39.799    36    0.007 0.305 #> 7   Item_7  61.895    36    0.019 0.005 68.502    35    0.022 0.001 #> 8   Item_8  56.125    36    0.017 0.017 59.579    36    0.018 0.008 #> 9   Item_9  66.332    36    0.021 0.002 69.041    36    0.021 0.001 #> 10 Item_10  47.281    36    0.013 0.099 51.188    36    0.015 0.048 itemfit(raschfit, empirical.plot=1, Theta=thetas)  itemfit(raschfit, 'X2', return.tables=TRUE, which.items=1, Theta=thetas) #> $`theta = -0.9751` #>       Observed  Expected z.Residual #> cat_0       96 89.203274  0.7196302 #> cat_1       81 87.319279 -0.6762581 #> cat_2       14 20.552190 -1.4452982 #> cat_3        5  2.584993  1.5020654 #> cat_4        6  2.340264  2.3923098 #>  #> $`theta = -0.4747` #>       Observed  Expected z.Residual #> cat_0       52 55.810605 -0.5100768 #> cat_1       98 90.111135  0.8310464 #> cat_2       34 34.983142 -0.1662214 #> cat_3        6  7.257589 -0.4668126 #> cat_4        9 10.837528 -0.5581731 #>  #> $`theta = -0.2825` #>       Observed Expected z.Residual #> cat_0       45 43.95405  0.1577652 #> cat_1       95 86.00287  0.9701688 #> cat_2       34 40.46184 -1.0158593 #> cat_3        9 10.17259 -0.3676465 #> cat_4       16 18.40864 -0.5613857 #>  #> $`theta = -0.151` #>       Observed Expected z.Residual #> cat_0       33 36.30398 -0.5483529 #> cat_1       74 81.02032 -0.7799379 #> cat_2       45 43.47628  0.2310896 #> cat_3       11 12.46706 -0.4154939 #> cat_4       36 25.73237  2.0240925 #>  #> $`theta = -0.0334` #>       Observed Expected z.Residual #> cat_0       19 29.93222 -1.9981990 #> cat_1       90 75.13532  1.7148795 #> cat_2       48 45.34903  0.3936594 #> cat_3       12 14.62666 -0.6868010 #> cat_4       30 33.95678 -0.6790139 #>  #> $`theta = 0.0651` #>       Observed Expected z.Residual #> cat_0       23 25.02007 -0.4038516 #> cat_1       62 69.30476 -0.8774538 #> cat_2       63 46.15898  2.4787928 #> cat_3       17 16.42868  0.1409549 #> cat_4       34 42.08752 -1.2466326 #>  #> $`theta = 0.1642` #>       Observed Expected  z.Residual #> cat_0       19 20.52933 -0.33753058 #> cat_1       63 62.79341  0.02607073 #> cat_2       45 46.18193 -0.17392181 #> cat_3       23 18.15027  1.13834925 #> cat_4       49 51.34506 -0.32726919 #>  #> $`theta = 0.2767` #>       Observed Expected   z.Residual #> cat_0        4 16.04548 -3.007099726 #> cat_1       66 54.92379  1.494551513 #> cat_2       47 45.20504  0.266969704 #> cat_3       19 19.88229 -0.197868736 #> cat_4       63 62.94340  0.007134114 #>  #> $`theta = 0.4164` #>       Observed Expected z.Residual #> cat_0       11 11.43297 -0.1280506 #> cat_1       44 45.00327 -0.1495531 #> cat_2       48 42.59391  0.8283409 #> cat_3       26 21.54290  0.9602843 #> cat_4       70 78.42694 -0.9515622 #>  #> $`theta = 0.7405` #>       Observed   Expected z.Residual #> cat_0        4   4.631286 -0.2933428 #> cat_1       23  25.205901 -0.4393746 #> cat_2       43  32.985379  1.7437081 #> cat_3       22  23.067149 -0.2221919 #> cat_4      110 116.110285 -0.5670562 #>   # }"},{"path":"https://philchalmers.github.io/mirt/reference/iteminfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate item information — iteminfo","title":"Function to calculate item information — iteminfo","text":"Given internal mirt item object extracted using extract.item, compute item information.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/iteminfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate item information — iteminfo","text":"","code":"iteminfo(x, Theta, degrees = NULL, total.info = TRUE, multidim_matrix = FALSE)"},{"path":"https://philchalmers.github.io/mirt/reference/iteminfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate item information — iteminfo","text":"x extracted internal mirt object containing item information (see extract.item) Theta vector (unidimensional) matrix (multidimensional) latent trait values degrees vector angles degrees 0 90. applicable input object multidimensional total.info logical; return total information curve item? FALSE, information curves category returned matrix multidim_matrix logical; compute information matrix row Theta? Theta contains 1 row list matrices returned, otherwise Theta exactly one row matrix returned","code":""},{"path":"https://philchalmers.github.io/mirt/reference/iteminfo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Function to calculate item information — iteminfo","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/iteminfo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to calculate item information — iteminfo","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/iteminfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to calculate item information — iteminfo","text":"","code":"mod <- mirt(Science, 1) #>  extr.2 <- extract.item(mod, 2) Theta <- matrix(seq(-4,4, by = .1)) info.2 <- iteminfo(extr.2, Theta)  #do something with the info? plot(Theta, info.2, type = 'l', main = 'Item information')   # \\donttest{  #category information curves cat.info <- iteminfo(extr.2, Theta, total.info = FALSE) plot(Theta, cat.info[,1], type = 'l', ylim = c(0, max(cat.info)),      ylab = 'info', main = 'Category information') for(i in 2:ncol(cat.info))    lines(Theta, cat.info[,i], col = i)   ## Customized test information plot T1 <- T2 <- 0 dat <- expand.table(LSAT7) mod1 <- mirt(dat, 1) #>  mod2 <- mirt(dat, 1, 'Rasch') #>  for(i in 1:5){   T1 <- T1 + iteminfo(extract.item(mod1, i), Theta)   T2 <- T2 + iteminfo(extract.item(mod2, i), Theta) } plot(Theta, T2/T1, type = 'l', ylab = 'Relative Test Information', las = 1) lines(Theta, T1/T1, col = 'red')   # multidimensional mod <- mirt(dat, 2, TOL=1e-2) #>  ii <- extract.item(mod, 1) Theta <- as.matrix(expand.grid(-4:4, -4:4))  iteminfo(ii, Theta, degrees=c(45,45)) # equal angle #>  [1] 9.135853e-04 3.804627e-03 1.534609e-02 5.457783e-02 1.280846e-01 #>  [6] 1.263872e-01 5.292862e-02 1.479382e-02 3.661942e-03 6.367175e-04 #> [11] 2.659764e-03 1.086462e-02 4.056306e-02 1.103087e-01 1.394001e-01 #> [16] 6.967460e-02 2.076774e-02 5.230188e-03 4.436266e-04 1.857138e-03 #> [21] 7.653659e-03 2.959372e-02 9.036811e-02 1.443711e-01 8.885547e-02 #> [26] 2.887817e-02 7.452148e-03 3.090296e-04 1.295613e-03 5.372790e-03 #> [31] 2.130057e-02 7.105538e-02 1.400859e-01 1.088343e-01 3.962912e-02 #> [36] 1.058186e-02 2.152390e-04 9.033338e-04 3.762362e-03 1.518269e-02 #> [41] 5.409208e-02 1.275949e-01 1.268897e-01 5.340700e-02 1.495328e-02 #> [46] 1.498990e-04 6.295660e-04 2.630098e-03 1.074696e-02 4.017519e-02 #> [51] 1.097011e-01 1.396891e-01 7.024317e-02 2.098631e-02 1.043871e-04 #> [56] 4.386406e-04 1.836367e-03 7.569796e-03 2.929632e-02 8.974279e-02 #> [61] 1.443776e-01 8.947966e-02 2.917186e-02 7.268993e-05 3.055547e-04 #> [66] 1.281094e-03 5.313435e-03 2.107900e-02 7.048336e-02 1.398084e-01 #> [71] 1.094447e-01 4.001273e-02 5.061591e-05 2.128179e-04 8.931970e-04 #> [76] 3.720561e-03 1.502092e-02 5.360938e-02 1.270998e-01 1.273870e-01 #> [81] 5.388842e-02 iteminfo(ii, Theta, degrees=c(90,0)) # first dimension only #>  [1] 2.073184e-04 8.633775e-04 3.482462e-03 1.238525e-02 2.906603e-02 #>  [6] 2.868083e-02 1.201100e-02 3.357135e-03 8.309983e-04 1.444892e-04 #> [11] 6.035756e-04 2.465490e-03 9.204906e-03 2.503218e-02 3.163384e-02 #> [16] 1.581114e-02 4.712787e-03 1.186878e-03 1.006714e-04 4.214372e-04 #> [21] 1.736832e-03 6.715652e-03 2.050708e-02 3.276188e-02 2.016382e-02 #> [26] 6.553273e-03 1.691103e-03 7.012756e-05 2.940112e-04 1.219238e-03 #> [31] 4.833701e-03 1.612448e-02 3.178946e-02 2.469758e-02 8.992970e-03 #> [36] 2.401323e-03 4.884381e-05 2.049920e-04 8.537865e-04 3.445381e-03 #> [41] 1.227502e-02 2.895489e-02 2.879486e-02 1.211956e-02 3.393322e-03 #> [46] 3.401633e-05 1.428663e-04 5.968437e-04 2.438790e-03 9.116887e-03 #> [51] 2.489429e-02 3.169942e-02 1.594016e-02 4.762389e-03 2.368839e-05 #> [56] 9.953996e-05 4.167236e-04 1.717801e-03 6.648164e-03 2.036518e-02 #> [61] 3.276337e-02 2.030547e-02 6.619919e-03 1.649540e-05 6.933901e-05 #> [66] 2.907165e-04 1.205769e-03 4.783421e-03 1.599467e-02 3.172649e-02 #> [71] 2.483609e-02 9.080022e-03 1.148618e-05 4.829441e-05 2.026917e-04 #> [76] 8.443006e-04 3.408672e-03 1.216548e-02 2.884253e-02 2.890771e-02 #> [81] 1.222881e-02  # information matrices iteminfo(ii, Theta, multidim_matrix = TRUE) #> [[1]] #>               [,1]          [,2] #> [1,]  0.0032654333 -0.0008227905 #> [2,] -0.0008227905  0.0002073184 #>  #> [[2]] #>              [,1]          [,2] #> [1,]  0.013598901 -0.0034265121 #> [2,] -0.003426512  0.0008633775 #>  #> [[3]] #>             [,1]         [,2] #> [1,]  0.05485162 -0.013820952 #> [2,] -0.01382095  0.003482462 #>  #> [[4]] #>             [,1]        [,2] #> [1,]  0.19507785 -0.04915373 #> [2,] -0.04915373  0.01238525 #>  #> [[5]] #>            [,1]        [,2] #> [1,]  0.4578137 -0.11535522 #> [2,] -0.1153552  0.02906603 #>  #> [[6]] #>            [,1]        [,2] #> [1,]  0.4517464 -0.11382645 #> [2,] -0.1138265  0.02868083 #>  #> [[7]] #>             [,1]        [,2] #> [1,]  0.18918306 -0.04766842 #> [2,] -0.04766842  0.01201100 #>  #> [[8]] #>             [,1]         [,2] #> [1,]  0.05287762 -0.013323563 #> [2,] -0.01332356  0.003357135 #>  #> [[9]] #>              [,1]          [,2] #> [1,]  0.013088902 -0.0032980078 #> [2,] -0.003298008  0.0008309983 #>  #> [[10]] #>               [,1]          [,2] #> [1,]  0.0022758231 -0.0005734387 #> [2,] -0.0005734387  0.0001444892 #>  #> [[11]] #>              [,1]          [,2] #> [1,]  0.009506809 -0.0023954286 #> [2,] -0.002395429  0.0006035756 #>  #> [[12]] #>              [,1]         [,2] #> [1,]  0.038833480 -0.009784864 #> [2,] -0.009784864  0.002465490 #>  #> [[13]] #>             [,1]         [,2] #> [1,]  0.14498478 -0.036531784 #> [2,] -0.03653178  0.009204906 #>  #> [[14]] #>             [,1]        [,2] #> [1,]  0.39427721 -0.09934594 #> [2,] -0.09934594  0.02503218 #>  #> [[15]] #>            [,1]        [,2] #> [1,]  0.4982588 -0.12554615 #> [2,] -0.1255462  0.03163384 #>  #> [[16]] #>             [,1]        [,2] #> [1,]  0.24903832 -0.06275013 #> [2,] -0.06275013  0.01581114 #>  #> [[17]] #>             [,1]         [,2] #> [1,]  0.07423024 -0.018703779 #> [2,] -0.01870378  0.004712787 #>  #> [[18]] #>              [,1]         [,2] #> [1,]  0.018694291 -0.004710397 #> [2,] -0.004710397  0.001186878 #>  #> [[19]] #>               [,1]          [,2] #> [1,]  0.0015856573 -0.0003995377 #> [2,] -0.0003995377  0.0001006714 #>  #> [[20]] #>              [,1]          [,2] #> [1,]  0.006637979 -0.0016725702 #> [2,] -0.001672570  0.0004214372 #>  #> [[21]] #>              [,1]         [,2] #> [1,]  0.027356520 -0.006893016 #> [2,] -0.006893016  0.001736832 #>  #> [[22]] #>             [,1]         [,2] #> [1,]  0.10577700 -0.026652608 #> [2,] -0.02665261  0.006715652 #>  #> [[23]] #>             [,1]        [,2] #> [1,]  0.32300327 -0.08138706 #> [2,] -0.08138706  0.02050708 #>  #> [[24]] #>            [,1]        [,2] #> [1,]  0.5160263 -0.13002305 #> [2,] -0.1300230  0.03276188 #>  #> [[25]] #>             [,1]        [,2] #> [1,]  0.31759663 -0.08002475 #> [2,] -0.08002475  0.02016382 #>  #> [[26]] #>             [,1]         [,2] #> [1,]  0.10321940 -0.026008170 #> [2,] -0.02600817  0.006553273 #>  #> [[27]] #>              [,1]         [,2] #> [1,]  0.026636258 -0.006711532 #> [2,] -0.006711532  0.001691103 #>  #> [[28]] #>               [,1]          [,2] #> [1,]  0.0011045662 -2.783173e-04 #> [2,] -0.0002783173  7.012756e-05 #>  #> [[29]] #>              [,1]          [,2] #> [1,]  0.004630917 -0.0011668512 #> [2,] -0.001166851  0.0002940112 #>  #> [[30]] #>              [,1]         [,2] #> [1,]  0.019203995 -0.004838826 #> [2,] -0.004838826  0.001219238 #>  #> [[31]] #>             [,1]         [,2] #> [1,]  0.07613474 -0.019183655 #> [2,] -0.01918365  0.004833701 #>  #> [[32]] #>             [,1]        [,2] #> [1,]  0.25397366 -0.06399369 #> [2,] -0.06399369  0.01612448 #>  #> [[33]] #>            [,1]        [,2] #> [1,]  0.5007100 -0.12616378 #> [2,] -0.1261638  0.03178946 #>  #> [[34]] #>             [,1]        [,2] #> [1,]  0.38900703 -0.09801802 #> [2,] -0.09801802  0.02469758 #>  #> [[35]] #>             [,1]        [,2] #> [1,]  0.14164661 -0.03569067 #> [2,] -0.03569067  0.00899297 #>  #> [[36]] #>              [,1]         [,2] #> [1,]  0.037822803 -0.009530204 #> [2,] -0.009530204  0.002401323 #>  #> [[37]] #>               [,1]          [,2] #> [1,]  0.0007693299 -1.938479e-04 #> [2,] -0.0001938479  4.884381e-05 #>  #> [[38]] #>               [,1]          [,2] #> [1,]  0.0032287914 -0.0008135579 #> [2,] -0.0008135579  0.0002049920 #>  #> [[39]] #>              [,1]          [,2] #> [1,]  0.013447834 -0.0033884478 #> [2,] -0.003388448  0.0008537865 #>  #> [[40]] #>             [,1]         [,2] #> [1,]  0.05426756 -0.013673786 #> [2,] -0.01367379  0.003445381 #>  #> [[41]] #>             [,1]        [,2] #> [1,]  0.19334166 -0.04871626 #> [2,] -0.04871626  0.01227502 #>  #> [[42]] #>            [,1]        [,2] #> [1,]  0.4560631 -0.11491412 #> [2,] -0.1149141  0.02895489 #>  #> [[43]] #>            [,1]        [,2] #> [1,]  0.4535425 -0.11427901 #> [2,] -0.1142790  0.02879486 #>  #> [[44]] #>             [,1]        [,2] #> [1,]  0.19089294 -0.04809925 #> [2,] -0.04809925  0.01211956 #>  #> [[45]] #>             [,1]         [,2] #> [1,]  0.05344759 -0.013467177 #> [2,] -0.01346718  0.003393322 #>  #> [[46]] #>               [,1]          [,2] #> [1,]  0.0005357850 -1.350016e-04 #> [2,] -0.0001350016  3.401633e-05 #>  #> [[47]] #>               [,1]          [,2] #> [1,]  0.0022502615 -0.0005669979 #> [2,] -0.0005669979  0.0001428663 #>  #> [[48]] #>              [,1]          [,2] #> [1,]  0.009400776 -0.0023687115 #> [2,] -0.002368711  0.0005968437 #>  #> [[49]] #>             [,1]        [,2] #> [1,]  0.03841294 -0.00967890 #> [2,] -0.00967890  0.00243879 #>  #> [[50]] #>             [,1]         [,2] #> [1,]  0.14359841 -0.036182461 #> [2,] -0.03618246  0.009116887 #>  #> [[51]] #>             [,1]        [,2] #> [1,]  0.39210544 -0.09879872 #> [2,] -0.09879872  0.02489429 #>  #> [[52]] #>            [,1]        [,2] #> [1,]  0.4992917 -0.12580642 #> [2,] -0.1258064  0.03169942 #>  #> [[53]] #>            [,1]        [,2] #> [1,]  0.2510706 -0.06326220 #> [2,] -0.0632622  0.01594016 #>  #> [[54]] #>             [,1]         [,2] #> [1,]  0.07501151 -0.018900633 #> [2,] -0.01890063  0.004762389 #>  #> [[55]] #>               [,1]          [,2] #> [1,]  3.731115e-04 -9.401283e-05 #> [2,] -9.401283e-05  2.368839e-05 #>  #> [[56]] #>               [,1]          [,2] #> [1,]  0.0015678356 -3.950472e-04 #> [2,] -0.0003950472  9.953996e-05 #>  #> [[57]] #>              [,1]          [,2] #> [1,]  0.006563736 -0.0016538632 #> [2,] -0.001653863  0.0004167236 #>  #> [[58]] #>              [,1]         [,2] #> [1,]  0.027056766 -0.006817487 #> [2,] -0.006817487  0.001717801 #>  #> [[59]] #>             [,1]         [,2] #> [1,]  0.10471401 -0.026384768 #> [2,] -0.02638477  0.006648164 #>  #> [[60]] #>             [,1]        [,2] #> [1,]  0.32076818 -0.08082389 #> [2,] -0.08082389  0.02036518 #>  #> [[61]] #>            [,1]        [,2] #> [1,]  0.5160498 -0.13002897 #> [2,] -0.1300290  0.03276337 #>  #> [[62]] #>             [,1]        [,2] #> [1,]  0.31982769 -0.08058691 #> [2,] -0.08058691  0.02030547 #>  #> [[63]] #>             [,1]         [,2] #> [1,]  0.10426913 -0.026272671 #> [2,] -0.02627267  0.006619919 #>  #> [[64]] #>               [,1]          [,2] #> [1,]  2.598160e-04 -6.546579e-05 #> [2,] -6.546579e-05  1.649540e-05 #>  #> [[65]] #>               [,1]          [,2] #> [1,]  0.0010921460 -2.751878e-04 #> [2,] -0.0002751878  6.933901e-05 #>  #> [[66]] #>              [,1]          [,2] #> [1,]  0.004579021 -0.0011537750 #> [2,] -0.001153775  0.0002907165 #>  #> [[67]] #>             [,1]         [,2] #> [1,]  0.01899184 -0.004785370 #> [2,] -0.00478537  0.001205769 #>  #> [[68]] #>             [,1]         [,2] #> [1,]  0.07534278 -0.018984105 #> [2,] -0.01898410  0.004783421 #>  #> [[69]] #>             [,1]        [,2] #> [1,]  0.25192908 -0.06347852 #> [2,] -0.06347852  0.01599467 #>  #> [[70]] #>            [,1]        [,2] #> [1,]  0.4997181 -0.12591387 #> [2,] -0.1259139  0.03172649 #>  #> [[71]] #>             [,1]        [,2] #> [1,]  0.39118867 -0.09856773 #> [2,] -0.09856773  0.02483609 #>  #> [[72]] #>             [,1]         [,2] #> [1,]  0.14301775 -0.036036152 #> [2,] -0.03603615  0.009080022 #>  #> [[73]] #>               [,1]          [,2] #> [1,]  1.809167e-04 -4.558555e-05 #> [2,] -4.558555e-05  1.148618e-05 #>  #> [[74]] #>               [,1]          [,2] #> [1,]  0.0007606764 -1.916675e-04 #> [2,] -0.0001916675  4.829441e-05 #>  #> [[75]] #>               [,1]          [,2] #> [1,]  0.0031925594 -0.0008044285 #> [2,] -0.0008044285  0.0002026917 #>  #> [[76]] #>              [,1]          [,2] #> [1,]  0.013298423 -0.0033508008 #> [2,] -0.003350801  0.0008443006 #>  #> [[77]] #>             [,1]         [,2] #> [1,]  0.05368936 -0.013528096 #> [2,] -0.01352810  0.003408672 #>  #> [[78]] #>             [,1]        [,2] #> [1,]  0.19161632 -0.04828152 #> [2,] -0.04828152  0.01216548 #>  #> [[79]] #>            [,1]        [,2] #> [1,]  0.4542934 -0.11446821 #> [2,] -0.1144682  0.02884253 #>  #> [[80]] #>            [,1]        [,2] #> [1,]  0.4553201 -0.11472690 #> [2,] -0.1147269  0.02890771 #>  #> [[81]] #>             [,1]        [,2] #> [1,]  0.19261370 -0.04853283 #> [2,] -0.04853283  0.01222881 #>  iteminfo(ii, Theta[1, , drop=FALSE], multidim_matrix = TRUE) #>               [,1]          [,2] #> [1,]  0.0032654333 -0.0008227905 #> [2,] -0.0008227905  0.0002073184  # }"},{"path":"https://philchalmers.github.io/mirt/reference/itemplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Displays item surface and information plots — itemplot","title":"Displays item surface and information plots — itemplot","text":"itemplot displays various item based IRT plots, special options plotting items contain several 0 slope parameters. Supports three dimensional models.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/itemplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Displays item surface and information plots — itemplot","text":"","code":"itemplot(   object,   item,   type = \"trace\",   degrees = 45,   CE = FALSE,   CEalpha = 0.05,   CEdraws = 1000,   drop.zeros = FALSE,   theta_lim = c(-6, 6),   shiny = FALSE,   rot = list(xaxis = -70, yaxis = 30, zaxis = 10),   par.strip.text = list(cex = 0.7),   npts = 200,   par.settings = list(strip.background = list(col = \"#9ECAE1\"), strip.border = list(col =     \"black\")),   auto.key = list(space = \"right\", points = FALSE, lines = TRUE),   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/itemplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Displays item surface and information plots — itemplot","text":"object computed model object class SingleGroupClass MultipleGroupClass. Input may also list comparing similar item types (e.g., 1PL vs 2PL) item single numeric value, item name, indicating item plot type plot type use, information ('info'), standard errors ('SE'), item trace lines ('trace'), cumulative probability plots indicate thresholds ('threshold'), information standard errors ('infoSE') information trace lines ('infotrace'), category total information ('infocat'), relative efficiency lines ('RE'), expected score 'score', information trace line contours ('infocontour' 'tracecontour'; supported MultipleGroupClass objects) degrees degrees argument used two three factors. See iteminfo detail. new vector required three dimensional models override default CE logical; plot confidence envelope? CEalpha area remaining tail confidence envelope. Default gives 95% confidence region CEdraws draws number draws use confidence envelope drop.zeros logical; drop slope values numerically close zero reduce dimensionality? Useful objects returned bfactor confirmatory models contain several zero slopes theta_lim lower upper limits latent trait (theta) evaluated, used conjunction npts. Default uses c(-6,6) shiny logical; run interactive display item plots using shiny interface. primarily instructive tool demonstrating item response curves behave adjusting parameters rot list rotation coordinates used 3 dimensional plots par.strip.text plotting argument passed lattice npts number quadrature points used plotting features. Larger values make plots look smoother par.settings plotting argument passed lattice auto.key plotting argument passed lattice ... additional arguments passed lattice coef()","code":""},{"path":"https://philchalmers.github.io/mirt/reference/itemplot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Displays item surface and information plots — itemplot","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/itemplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Displays item surface and information plots — itemplot","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/itemplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Displays item surface and information plots — itemplot","text":"","code":"# \\donttest{  data(LSAT7) fulldata <- expand.table(LSAT7) mod1 <- mirt(fulldata,1,SE=TRUE) #>  #>  #> Calculating information matrix... mod2 <- mirt(fulldata,1, itemtype = 'Rasch') #>  mod3 <- mirt(fulldata,2) #>   itemplot(mod1, 2)  itemplot(mod1, 2, CE = TRUE)  itemplot(mod1, 2, type = 'info')  itemplot(mod1, 2, type = 'info', CE = TRUE)   mods <- list(twoPL = mod1, onePL = mod2) itemplot(mods, 1, type = 'RE')   # multidimensional itemplot(mod3, 4, type = 'info')  itemplot(mod3, 4, type = 'info',   col.regions = colorRampPalette(c(\"white\", \"red\"))(100))  itemplot(mod3, 4, type = 'infocontour')  itemplot(mod3, 4, type = 'tracecontour')   # polytomous items pmod <- mirt(Science, 1, SE=TRUE) #>  #>  #> Calculating information matrix... itemplot(pmod, 3)  itemplot(pmod, 3, type = 'threshold')  itemplot(pmod, 3, CE = TRUE)  itemplot(pmod, 3, type = 'score')  itemplot(pmod, 3, type = 'score', CE = TRUE)  itemplot(pmod, 3, type = 'infotrace')  itemplot(pmod, 3, type = 'infocat')    # use the directlabels package to put labels on tracelines library(directlabels) plt <- itemplot(pmod, 3) direct.label(plt, 'top.points')   # change colour theme of plots bwtheme <- standard.theme(\"pdf\", color=FALSE) plot(pmod, type='trace', par.settings=bwtheme)  itemplot(pmod, 1, type = 'trace', par.settings=bwtheme)   # additional modifications can be made via update(). # See ?update.trellis for further documentation (plt <- itemplot(pmod, 1))  update(plt, ylab = expression(Prob(theta))) # ylab changed   # infoSE plot itemplot(pmod, 1, type = 'infoSE')   # uncomment to run interactive shiny applet # itemplot(shiny = TRUE)     # }"},{"path":"https://philchalmers.github.io/mirt/reference/itemstats.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic item summary statistics — itemstats","title":"Generic item summary statistics — itemstats","text":"Function compute generic item summary statistics require prior fitting IRT models. Contains information sample sizes (N), number observed categories (K), coefficient alpha (alpha item deleted), mean/SD frequency total scores, reduced item-total correlations, average/sd correlation items, response frequencies, conditional mean/sd information given unweighted sum scores. Summary information involving total scores included responses missing data ensure metric meaningful, however standardized statistics (e.g., correlations) utilize possible response information.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/itemstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic item summary statistics — itemstats","text":"","code":"itemstats(   data,   group = NULL,   use_ts = TRUE,   itemfreq = \"proportions\",   ts.tables = FALSE )"},{"path":"https://philchalmers.github.io/mirt/reference/itemstats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic item summary statistics — itemstats","text":"data object class data.frame matrix response patterns group optional grouping variable condition computing summary information use_ts logical; include information conditional meaningful total score? itemfreq character vector indicting whether include item response \"proportions\" \"counts\" item. set 'none' omitted ts.tables logical; include mean/sd summary information pertaining unweighted total score?","code":""},{"path":"https://philchalmers.github.io/mirt/reference/itemstats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic item summary statistics — itemstats","text":"Returns list containing summary statistics","code":""},{"path":"https://philchalmers.github.io/mirt/reference/itemstats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generic item summary statistics — itemstats","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/itemstats.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generic item summary statistics — itemstats","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/itemstats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic item summary statistics — itemstats","text":"","code":"# dichotomous data example LSAT7full <- expand.table(LSAT7) head(LSAT7full) #>   Item.1 Item.2 Item.3 Item.4 Item.5 #> 1      0      0      0      0      0 #> 2      0      0      0      0      0 #> 3      0      0      0      0      0 #> 4      0      0      0      0      0 #> 5      0      0      0      0      0 #> 6      0      0      0      0      0 itemstats(LSAT7full) #> $overall #>     N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  1000            3.707          1.199 0.143 0.052 0.453     0.886 #>  #> $itemstats #>           N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item.1 1000 2 0.828 0.378   0.530         0.246       0.396 #> Item.2 1000 2 0.658 0.475   0.600         0.247       0.394 #> Item.3 1000 2 0.772 0.420   0.611         0.313       0.345 #> Item.4 1000 2 0.606 0.489   0.592         0.223       0.415 #> Item.5 1000 2 0.843 0.364   0.461         0.175       0.438 #>  #> $proportions #>            0     1 #> Item.1 0.172 0.828 #> Item.2 0.342 0.658 #> Item.3 0.228 0.772 #> Item.4 0.394 0.606 #> Item.5 0.157 0.843 #>  itemstats(LSAT7full, itemfreq='counts') #> $overall #>     N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  1000            3.707          1.199 0.143 0.052 0.453     0.886 #>  #> $itemstats #>           N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item.1 1000 2 0.828 0.378   0.530         0.246       0.396 #> Item.2 1000 2 0.658 0.475   0.600         0.247       0.394 #> Item.3 1000 2 0.772 0.420   0.611         0.313       0.345 #> Item.4 1000 2 0.606 0.489   0.592         0.223       0.415 #> Item.5 1000 2 0.843 0.364   0.461         0.175       0.438 #>  #> $counts #>          0   1 #> Item.1 172 828 #> Item.2 342 658 #> Item.3 228 772 #> Item.4 394 606 #> Item.5 157 843 #>   # behaviour with missing data LSAT7full[1:5,1] <- NA itemstats(LSAT7full) #> $overall #>  N.complete    N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>         995 1000            3.726          1.172 0.137 0.052 0.426     0.888 #>  #> $itemstats #>           N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item.1  995 2 0.832 0.374   0.515         0.222       0.396 #> Item.2 1000 2 0.658 0.475   0.600         0.247       0.364 #> Item.3 1000 2 0.772 0.420   0.611         0.313       0.316 #> Item.4 1000 2 0.606 0.489   0.592         0.223       0.384 #> Item.5 1000 2 0.843 0.364   0.461         0.175       0.418 #>  #> $proportions #>            0     1  <NA> #> Item.1 0.167 0.828 0.005 #> Item.2 0.342 0.658    NA #> Item.3 0.228 0.772    NA #> Item.4 0.394 0.606    NA #> Item.5 0.157 0.843    NA #>   # data with no meaningful total score head(SAT12) #>   Item.1 Item.2 Item.3 Item.4 Item.5 Item.6 Item.7 Item.8 Item.9 Item.10 #> 1      1      4      5      2      3      1      2      1      3       1 #> 2      3      4      2      8      3      3      2      8      3       1 #> 3      1      4      5      4      3      2      2      3      3       2 #> 4      2      4      4      2      3      3      2      4      3       2 #> 5      2      4      5      2      3      2      2      1      1       2 #> 6      1      4      3      1      3      2      2      3      3       1 #>   Item.11 Item.12 Item.13 Item.14 Item.15 Item.16 Item.17 Item.18 Item.19 #> 1       2       4       2       1       5       3       4       4       1 #> 2       2       8       2       1       5       2       4       1       1 #> 3       2       1       3       1       5       5       4       1       3 #> 4       2       4       2       1       5       2       4       1       3 #> 5       2       4       2       1       5       4       4       5       1 #> 6       2       3       2       1       5       5       4       4       1 #>   Item.20 Item.21 Item.22 Item.23 Item.24 Item.25 Item.26 Item.27 Item.28 #> 1       4       3       3       4       1       3       5       1       3 #> 2       4       3       3       8       1       8       4       1       4 #> 3       4       3       3       1       1       3       4       1       3 #> 4       4       3       1       5       2       5       4       1       3 #> 5       4       3       3       3       1       1       5       1       3 #> 6       4       3       3       4       1       1       4       1       4 #>   Item.29 Item.30 Item.31 Item.32 #> 1       1       5       4       5 #> 2       5       8       4       8 #> 3       4       4       4       1 #> 4       4       2       4       2 #> 5       1       2       4       1 #> 6       2       3       4       3 itemstats(SAT12, use_ts=FALSE) #> $overall #>     N #> 1 600 #>  #> $itemstats #>           N K  mean    sd #> Item.1  600 6 2.497 1.188 #> Item.2  600 6 3.385 1.356 #> Item.3  600 6 3.212 1.534 #> Item.4  600 6 2.762 1.370 #> Item.5  600 6 2.868 0.911 #> Item.6  600 5 2.358 1.135 #> Item.7  600 6 2.422 0.908 #> Item.8  600 6 2.925 1.370 #> Item.9  600 5 2.907 0.567 #> Item.10 600 6 2.320 1.490 #> Item.11 600 5 2.017 0.199 #> Item.12 600 6 3.642 1.184 #> Item.13 600 5 2.317 0.956 #> Item.14 600 6 1.798 1.432 #> Item.15 600 6 4.535 1.087 #> Item.16 600 6 3.368 1.135 #> Item.17 600 5 3.968 0.343 #> Item.18 600 6 3.020 1.514 #> Item.19 600 5 1.900 1.053 #> Item.20 600 6 3.870 0.483 #> Item.21 600 6 2.937 0.554 #> Item.22 600 5 2.985 0.442 #> Item.23 600 6 2.755 1.437 #> Item.24 600 6 1.502 1.037 #> Item.25 600 6 2.740 1.380 #> Item.26 600 6 3.923 1.265 #> Item.27 600 6 1.240 0.766 #> Item.28 600 6 3.262 0.937 #> Item.29 600 6 2.285 1.306 #> Item.30 600 6 3.703 1.553 #> Item.31 600 6 3.788 0.899 #> Item.32 600 6 3.023 1.303 #>  #> $proportions #>             1     2     3     4     5     8 #> Item.1  0.283 0.203 0.267 0.232 0.013 0.002 #> Item.2  0.212 0.022 0.070 0.568 0.127 0.002 #> Item.3  0.165 0.183 0.260 0.098 0.280 0.013 #> Item.4  0.165 0.378 0.148 0.172 0.128 0.008 #> Item.5  0.093 0.143 0.620 0.093 0.048 0.002 #> Item.6  0.160 0.582 0.107 0.043 0.108    NA #> Item.7  0.025 0.760 0.007 0.190 0.017 0.002 #> Item.8  0.202 0.205 0.207 0.250 0.133 0.003 #> Item.9  0.065 0.010 0.885 0.033 0.007    NA #> Item.10 0.422 0.215 0.165 0.028 0.167 0.003 #> Item.11 0.003 0.983 0.008 0.003 0.002    NA #> Item.12 0.072 0.082 0.218 0.415 0.205 0.008 #> Item.13 0.110 0.662 0.070 0.118 0.040    NA #> Item.14 0.723 0.027 0.108 0.022 0.117 0.003 #> Item.15 0.035 0.062 0.060 0.025 0.817 0.002 #> Item.16 0.070 0.105 0.413 0.215 0.195 0.002 #> Item.17 0.008 0.005 0.010 0.963 0.013    NA #> Item.18 0.303 0.033 0.165 0.352 0.142 0.005 #> Item.19 0.548 0.053 0.358 0.030 0.010    NA #> Item.20 0.012 0.002 0.105 0.873 0.007 0.002 #> Item.21 0.050 0.008 0.915 0.013 0.012 0.002 #> Item.22 0.028 0.005 0.935 0.017 0.015    NA #> Item.23 0.290 0.177 0.128 0.313 0.087 0.005 #> Item.24 0.728 0.162 0.042 0.022 0.045 0.002 #> Item.25 0.240 0.170 0.375 0.065 0.142 0.008 #> Item.26 0.020 0.227 0.030 0.262 0.460 0.002 #> Item.27 0.862 0.093 0.012 0.020 0.010 0.003 #> Item.28 0.082 0.010 0.530 0.337 0.037 0.005 #> Item.29 0.340 0.295 0.205 0.085 0.067 0.008 #> Item.30 0.150 0.110 0.107 0.183 0.440 0.010 #> Item.31 0.075 0.020 0.012 0.833 0.058 0.002 #> Item.32 0.125 0.183 0.443 0.075 0.162 0.012 #>   # extra total scores tables dat <- key2binary(SAT12,                    key = c(1,4,5,2,3,1,2,1,3,1,2,4,2,1,                            5,3,4,4,1,4,3,3,4,1,3,5,1,3,1,5,4,5)) itemstats(dat, ts.tables=TRUE) #> $overall #>    N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  600           18.202          5.054 0.108 0.075 0.798     2.272 #>  #> $itemstats #>           N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item.1  600 2 0.283 0.451   0.380         0.300       0.793 #> Item.2  600 2 0.568 0.496   0.539         0.464       0.785 #> Item.3  600 2 0.280 0.449   0.446         0.371       0.789 #> Item.4  600 2 0.378 0.485   0.325         0.235       0.796 #> Item.5  600 2 0.620 0.486   0.424         0.340       0.791 #> Item.6  600 2 0.160 0.367   0.414         0.351       0.791 #> Item.7  600 2 0.760 0.427   0.366         0.289       0.793 #> Item.8  600 2 0.202 0.402   0.307         0.233       0.795 #> Item.9  600 2 0.885 0.319   0.189         0.127       0.798 #> Item.10 600 2 0.422 0.494   0.465         0.383       0.789 #> Item.11 600 2 0.983 0.128   0.181         0.156       0.797 #> Item.12 600 2 0.415 0.493   0.173         0.076       0.803 #> Item.13 600 2 0.662 0.474   0.438         0.358       0.790 #> Item.14 600 2 0.723 0.448   0.411         0.333       0.791 #> Item.15 600 2 0.817 0.387   0.393         0.325       0.792 #> Item.16 600 2 0.413 0.493   0.367         0.278       0.794 #> Item.17 600 2 0.963 0.188   0.238         0.202       0.796 #> Item.18 600 2 0.352 0.478   0.576         0.508       0.783 #> Item.19 600 2 0.548 0.498   0.401         0.314       0.792 #> Item.20 600 2 0.873 0.333   0.376         0.318       0.792 #> Item.21 600 2 0.915 0.279   0.190         0.136       0.798 #> Item.22 600 2 0.935 0.247   0.284         0.238       0.795 #> Item.23 600 2 0.313 0.464   0.338         0.253       0.795 #> Item.24 600 2 0.728 0.445   0.422         0.346       0.791 #> Item.25 600 2 0.375 0.485   0.383         0.297       0.793 #> Item.26 600 2 0.460 0.499   0.562         0.489       0.783 #> Item.27 600 2 0.862 0.346   0.425         0.367       0.791 #> Item.28 600 2 0.530 0.500   0.465         0.383       0.789 #> Item.29 600 2 0.340 0.474   0.407         0.324       0.791 #> Item.30 600 2 0.440 0.497   0.255         0.159       0.799 #> Item.31 600 2 0.833 0.373   0.479         0.419       0.788 #> Item.32 600 2 0.162 0.368   0.110         0.037       0.802 #>  #> $proportions #>             0     1 #> Item.1  0.717 0.283 #> Item.2  0.432 0.568 #> Item.3  0.720 0.280 #> Item.4  0.622 0.378 #> Item.5  0.380 0.620 #> Item.6  0.840 0.160 #> Item.7  0.240 0.760 #> Item.8  0.798 0.202 #> Item.9  0.115 0.885 #> Item.10 0.578 0.422 #> Item.11 0.017 0.983 #> Item.12 0.585 0.415 #> Item.13 0.338 0.662 #> Item.14 0.277 0.723 #> Item.15 0.183 0.817 #> Item.16 0.587 0.413 #> Item.17 0.037 0.963 #> Item.18 0.648 0.352 #> Item.19 0.452 0.548 #> Item.20 0.127 0.873 #> Item.21 0.085 0.915 #> Item.22 0.065 0.935 #> Item.23 0.687 0.313 #> Item.24 0.272 0.728 #> Item.25 0.625 0.375 #> Item.26 0.540 0.460 #> Item.27 0.138 0.862 #> Item.28 0.470 0.530 #> Item.29 0.660 0.340 #> Item.30 0.560 0.440 #> Item.31 0.167 0.833 #> Item.32 0.838 0.162 #>  #> $total.score_frequency #>      4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 #> Freq 1 2 2 2 5 7 14 14 17 35 51 45 41 46 50 44 44 20 35 31 18 18 18 19  7  7  3 #>      31 32 #> Freq  1  3 #>  #> $total.score_means #>                0        1 #> Item.1  16.99535 21.25294 #> Item.2  15.07722 20.57478 #> Item.3  16.79630 21.81548 #> Item.4  16.92225 20.30396 #> Item.5  15.46930 19.87634 #> Item.6  17.28968 22.98958 #> Item.7  14.91667 19.23904 #> Item.8  17.42171 21.28926 #> Item.9  15.55072 18.54614 #> Item.10 16.19597 20.95257 #> Item.11 11.20000 18.32034 #> Item.12 17.46724 19.23695 #> Item.13 15.10837 19.78338 #> Item.14 14.84940 19.48387 #> Item.15 14.01818 19.14082 #> Item.16 16.64773 20.40726 #> Item.17 12.04545 18.43599 #> Item.18 16.05913 22.15166 #> Item.19 15.97048 20.03951 #> Item.20 13.21053 18.92557 #> Item.21 15.05882 18.49362 #> Item.22 12.76923 18.57932 #> Item.23 17.04854 20.72872 #> Item.24 14.71166 19.50343 #> Item.25 16.70400 20.69778 #> Item.26 15.58025 21.27899 #> Item.27 12.84337 19.06190 #> Item.28 15.70567 20.41509 #> Item.29 16.72727 21.06373 #> Item.30 17.06250 19.65152 #> Item.31 12.79000 19.28400 #> Item.32 17.95825 19.46392 #>  #> $total.score_sds #>                0        1 #> Item.1  4.495009 5.115311 #> Item.2  3.791287 4.583007 #> Item.3  4.322840 5.013323 #> Item.4  4.333771 5.444014 #> Item.5  4.280262 4.756698 #> Item.6  4.448894 5.353788 #> Item.7  4.313744 4.825059 #> Item.8  4.575452 5.661917 #> Item.9  5.007454 4.961288 #> Item.10 4.278821 4.736481 #> Item.11 4.184628 4.985966 #> Item.12 4.861326 5.147431 #> Item.13 4.274965 4.679466 #> Item.14 4.008502 4.822098 #> Item.15 4.212219 4.744448 #> Item.16 4.361290 5.155818 #> Item.17 4.613410 4.923352 #> Item.18 3.955174 4.446051 #> Item.19 4.349442 4.854746 #> Item.20 3.714174 4.809188 #> Item.21 5.092786 4.954396 #> Item.22 3.923355 4.906759 #> Item.23 4.505479 5.276912 #> Item.24 3.896380 4.816172 #> Item.25 4.379749 5.124107 #> Item.26 3.761839 4.627003 #> Item.27 3.775666 4.692898 #> Item.28 4.340725 4.593648 #> Item.29 4.241013 5.281332 #> Item.30 4.817161 4.984363 #> Item.31 3.364386 4.622779 #> Item.32 4.901850 5.638524 #>   # grouping information group <- gl(2, 300, labels=c('G1', 'G2')) itemstats(dat, group=group) #> $G1 #> $G1$overall #>    N mean_total.score sd_total.score ave.r sd.r alpha SEM.alpha #>  300           17.987          5.051 0.107 0.09 0.796     2.282 #>  #> $G1$itemstats #>           N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item.1  300 2 0.290 0.455   0.410         0.331       0.789 #> Item.2  300 2 0.573 0.495   0.534         0.458       0.783 #> Item.3  300 2 0.290 0.455   0.458         0.382       0.787 #> Item.4  300 2 0.353 0.479   0.342         0.255       0.793 #> Item.5  300 2 0.630 0.484   0.480         0.401       0.786 #> Item.6  300 2 0.130 0.337   0.398         0.340       0.789 #> Item.7  300 2 0.727 0.446   0.383         0.303       0.790 #> Item.8  300 2 0.213 0.410   0.352         0.277       0.791 #> Item.9  300 2 0.897 0.305   0.203         0.144       0.796 #> Item.10 300 2 0.403 0.491   0.433         0.349       0.788 #> Item.11 300 2 0.993 0.082   0.154         0.138       0.796 #> Item.12 300 2 0.413 0.493   0.123         0.026       0.803 #> Item.13 300 2 0.647 0.479   0.441         0.359       0.788 #> Item.14 300 2 0.727 0.446   0.394         0.316       0.790 #> Item.15 300 2 0.793 0.406   0.407         0.337       0.789 #> Item.16 300 2 0.377 0.485   0.338         0.249       0.793 #> Item.17 300 2 0.957 0.204   0.220         0.181       0.795 #> Item.18 300 2 0.360 0.481   0.567         0.497       0.781 #> Item.19 300 2 0.537 0.499   0.432         0.347       0.788 #> Item.20 300 2 0.863 0.344   0.355         0.293       0.791 #> Item.21 300 2 0.910 0.287   0.202         0.147       0.795 #> Item.22 300 2 0.927 0.261   0.260         0.211       0.794 #> Item.23 300 2 0.260 0.439   0.323         0.242       0.793 #> Item.24 300 2 0.707 0.456   0.421         0.342       0.789 #> Item.25 300 2 0.370 0.484   0.406         0.321       0.790 #> Item.26 300 2 0.473 0.500   0.539         0.463       0.783 #> Item.27 300 2 0.857 0.351   0.474         0.418       0.787 #> Item.28 300 2 0.537 0.499   0.435         0.350       0.788 #> Item.29 300 2 0.343 0.476   0.378         0.293       0.791 #> Item.30 300 2 0.440 0.497   0.245         0.149       0.798 #> Item.31 300 2 0.810 0.393   0.518         0.457       0.784 #> Item.32 300 2 0.180 0.385   0.036        -0.041       0.803 #>  #> $G1$proportions #>             0     1 #> Item.1  0.710 0.290 #> Item.2  0.427 0.573 #> Item.3  0.710 0.290 #> Item.4  0.647 0.353 #> Item.5  0.370 0.630 #> Item.6  0.870 0.130 #> Item.7  0.273 0.727 #> Item.8  0.787 0.213 #> Item.9  0.103 0.897 #> Item.10 0.597 0.403 #> Item.11 0.007 0.993 #> Item.12 0.587 0.413 #> Item.13 0.353 0.647 #> Item.14 0.273 0.727 #> Item.15 0.207 0.793 #> Item.16 0.623 0.377 #> Item.17 0.043 0.957 #> Item.18 0.640 0.360 #> Item.19 0.463 0.537 #> Item.20 0.137 0.863 #> Item.21 0.090 0.910 #> Item.22 0.073 0.927 #> Item.23 0.740 0.260 #> Item.24 0.293 0.707 #> Item.25 0.630 0.370 #> Item.26 0.527 0.473 #> Item.27 0.143 0.857 #> Item.28 0.463 0.537 #> Item.29 0.657 0.343 #> Item.30 0.560 0.440 #> Item.31 0.190 0.810 #> Item.32 0.820 0.180 #>  #>  #> $G2 #> $G2$overall #>    N mean_total.score sd_total.score ave.r sd.r alpha SEM.alpha #>  300           18.417          5.056  0.11 0.08   0.8     2.262 #>  #> $G2$itemstats #>           N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item.1  300 2 0.277 0.448   0.352         0.271       0.796 #> Item.2  300 2 0.563 0.497   0.547         0.472       0.787 #> Item.3  300 2 0.270 0.445   0.438         0.363       0.792 #> Item.4  300 2 0.403 0.491   0.305         0.213       0.799 #> Item.5  300 2 0.610 0.489   0.371         0.283       0.796 #> Item.6  300 2 0.190 0.393   0.426         0.360       0.792 #> Item.7  300 2 0.793 0.406   0.344         0.270       0.796 #> Item.8  300 2 0.190 0.393   0.265         0.190       0.799 #> Item.9  300 2 0.873 0.333   0.180         0.116       0.801 #> Item.10 300 2 0.440 0.497   0.495         0.415       0.789 #> Item.11 300 2 0.973 0.161   0.215         0.184       0.799 #> Item.12 300 2 0.417 0.494   0.222         0.127       0.803 #> Item.13 300 2 0.677 0.469   0.434         0.354       0.792 #> Item.14 300 2 0.720 0.450   0.428         0.351       0.792 #> Item.15 300 2 0.840 0.367   0.375         0.310       0.794 #> Item.16 300 2 0.450 0.498   0.391         0.303       0.795 #> Item.17 300 2 0.970 0.171   0.258         0.226       0.798 #> Item.18 300 2 0.343 0.476   0.588         0.522       0.784 #> Item.19 300 2 0.560 0.497   0.369         0.279       0.796 #> Item.20 300 2 0.883 0.322   0.398         0.343       0.794 #> Item.21 300 2 0.920 0.272   0.175         0.123       0.800 #> Item.22 300 2 0.943 0.232   0.309         0.266       0.797 #> Item.23 300 2 0.367 0.483   0.348         0.260       0.797 #> Item.24 300 2 0.750 0.434   0.421         0.347       0.793 #> Item.25 300 2 0.380 0.486   0.360         0.272       0.796 #> Item.26 300 2 0.447 0.498   0.590         0.520       0.784 #> Item.27 300 2 0.867 0.341   0.374         0.314       0.794 #> Item.28 300 2 0.523 0.500   0.498         0.418       0.789 #> Item.29 300 2 0.337 0.473   0.437         0.357       0.792 #> Item.30 300 2 0.440 0.497   0.265         0.170       0.801 #> Item.31 300 2 0.857 0.351   0.435         0.376       0.792 #> Item.32 300 2 0.143 0.351   0.196         0.128       0.800 #>  #> $G2$proportions #>             0     1 #> Item.1  0.723 0.277 #> Item.2  0.437 0.563 #> Item.3  0.730 0.270 #> Item.4  0.597 0.403 #> Item.5  0.390 0.610 #> Item.6  0.810 0.190 #> Item.7  0.207 0.793 #> Item.8  0.810 0.190 #> Item.9  0.127 0.873 #> Item.10 0.560 0.440 #> Item.11 0.027 0.973 #> Item.12 0.583 0.417 #> Item.13 0.323 0.677 #> Item.14 0.280 0.720 #> Item.15 0.160 0.840 #> Item.16 0.550 0.450 #> Item.17 0.030 0.970 #> Item.18 0.657 0.343 #> Item.19 0.440 0.560 #> Item.20 0.117 0.883 #> Item.21 0.080 0.920 #> Item.22 0.057 0.943 #> Item.23 0.633 0.367 #> Item.24 0.250 0.750 #> Item.25 0.620 0.380 #> Item.26 0.553 0.447 #> Item.27 0.133 0.867 #> Item.28 0.477 0.523 #> Item.29 0.663 0.337 #> Item.30 0.560 0.440 #> Item.31 0.143 0.857 #> Item.32 0.857 0.143 #>  #>    ##### # polytomous data example itemstats(Science) #> $overall #>    N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  392           11.668          2.003 0.275 0.098 0.598      1.27 #>  #> $itemstats #>           N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Comfort 392 4 3.120 0.588   0.596         0.352       0.552 #> Work    392 4 2.722 0.807   0.666         0.332       0.567 #> Future  392 4 2.990 0.757   0.748         0.488       0.437 #> Benefit 392 4 2.837 0.802   0.684         0.363       0.541 #>  #> $proportions #>             1     2     3     4 #> Comfort 0.013 0.082 0.679 0.227 #> Work    0.084 0.250 0.526 0.140 #> Future  0.036 0.184 0.536 0.245 #> Benefit 0.054 0.255 0.492 0.199 #>   # polytomous data with missing newScience <- Science newScience[1:5,1] <- NA itemstats(newScience) #> $overall #>  N.complete   N mean_total.score sd_total.score ave.r sd.r alpha SEM.alpha #>         387 392           11.672          2.011 0.276  0.1 0.605     1.264 #>  #> $itemstats #>           N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Comfort 387 4 3.119 0.590   0.596         0.352       0.552 #> Work    392 4 2.722 0.807   0.646         0.311       0.576 #> Future  392 4 2.990 0.757   0.740         0.481       0.449 #> Benefit 392 4 2.837 0.802   0.684         0.370       0.538 #>  #> $proportions #>             1     2     3     4  <NA> #> Comfort 0.013 0.082 0.668 0.224 0.013 #> Work    0.084 0.250 0.526 0.140    NA #> Future  0.036 0.184 0.536 0.245    NA #> Benefit 0.054 0.255 0.492 0.199    NA #>   # unequal categories newScience[,1] <- ifelse(Science[,1] == 1, NA, Science[,1]) itemstats(newScience) #> $overall #>  N.complete   N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>         387 392           11.731          1.917  0.26 0.092 0.572     1.254 #>  #> $itemstats #>           N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Comfort 387 3 3.147 0.540   0.556         0.314       0.552 #> Work    392 4 2.722 0.807   0.656         0.325       0.517 #> Future  392 4 2.990 0.757   0.746         0.490       0.409 #> Benefit 392 4 2.837 0.802   0.684         0.370       0.525 #>  #> $proportions #>             1     2     3     4  <NA> #> Comfort    NA 0.082 0.679 0.227 0.013 #> Work    0.084 0.250 0.526 0.140    NA #> Future  0.036 0.184 0.536 0.245    NA #> Benefit 0.054 0.255 0.492 0.199    NA #>   merged <- data.frame(LSAT7full[1:392,], Science) itemstats(merged) #> $overall #>  N.complete   N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>         387 392           14.331          2.231 0.037 0.167 0.379     1.759 #>  #> $itemstats #>           N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item.1  387 2 0.568 0.496   0.193        -0.030       0.417 #> Item.2  392 2 0.232 0.423   0.041        -0.146       0.443 #> Item.3  392 2 0.605 0.490   0.231         0.014       0.405 #> Item.4  392 2 0.467 0.500   0.272         0.051       0.392 #> Item.5  392 2 0.760 0.428   0.201         0.011       0.402 #> Comfort 392 4 3.120 0.588   0.519         0.288       0.286 #> Work    392 4 2.722 0.807   0.608         0.299       0.251 #> Future  392 4 2.990 0.757   0.676         0.418       0.185 #> Benefit 392 4 2.837 0.802   0.600         0.291       0.261 #>  #> $proportions #>             0     1     2     3     4  <NA> #> Item.1  0.426 0.561    NA    NA    NA 0.013 #> Item.2  0.768 0.232    NA    NA    NA    NA #> Item.3  0.395 0.605    NA    NA    NA    NA #> Item.4  0.533 0.467    NA    NA    NA    NA #> Item.5  0.240 0.760    NA    NA    NA    NA #> Comfort    NA 0.013 0.082 0.679 0.227    NA #> Work       NA 0.084 0.250 0.526 0.140    NA #> Future     NA 0.036 0.184 0.536 0.245    NA #> Benefit    NA 0.054 0.255 0.492 0.199    NA #>"},{"path":"https://philchalmers.github.io/mirt/reference/key2binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Score a test by converting response patterns to binary data — key2binary","title":"Score a test by converting response patterns to binary data — key2binary","text":"key2binary function convert response pattern data dichotomous format, given response key.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/key2binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score a test by converting response patterns to binary data — key2binary","text":"","code":"key2binary(fulldata, key, score_missing = FALSE)"},{"path":"https://philchalmers.github.io/mirt/reference/key2binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score a test by converting response patterns to binary data — key2binary","text":"fulldata object class data.frame, matrix, table response patterns key vector matrix consisting 'correct' response items. value/row corresponds column fulldata. input matrix, multiple scoring keys can supplied item. NA values used indicate scoring key (case matrix input, additional scoring keys) score_missing logical; missing data elements returned incorrect (.e., 0)? FALSE, missing data terms kept missing","code":""},{"path":"https://philchalmers.github.io/mirt/reference/key2binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score a test by converting response patterns to binary data — key2binary","text":"Returns numeric matrix response patterns   dichotomous format","code":""},{"path":"https://philchalmers.github.io/mirt/reference/key2binary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Score a test by converting response patterns to binary data — key2binary","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/key2binary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Score a test by converting response patterns to binary data — key2binary","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/key2binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Score a test by converting response patterns to binary data — key2binary","text":"","code":"data(SAT12) head(SAT12) #>   Item.1 Item.2 Item.3 Item.4 Item.5 Item.6 Item.7 Item.8 Item.9 Item.10 #> 1      1      4      5      2      3      1      2      1      3       1 #> 2      3      4      2      8      3      3      2      8      3       1 #> 3      1      4      5      4      3      2      2      3      3       2 #> 4      2      4      4      2      3      3      2      4      3       2 #> 5      2      4      5      2      3      2      2      1      1       2 #> 6      1      4      3      1      3      2      2      3      3       1 #>   Item.11 Item.12 Item.13 Item.14 Item.15 Item.16 Item.17 Item.18 Item.19 #> 1       2       4       2       1       5       3       4       4       1 #> 2       2       8       2       1       5       2       4       1       1 #> 3       2       1       3       1       5       5       4       1       3 #> 4       2       4       2       1       5       2       4       1       3 #> 5       2       4       2       1       5       4       4       5       1 #> 6       2       3       2       1       5       5       4       4       1 #>   Item.20 Item.21 Item.22 Item.23 Item.24 Item.25 Item.26 Item.27 Item.28 #> 1       4       3       3       4       1       3       5       1       3 #> 2       4       3       3       8       1       8       4       1       4 #> 3       4       3       3       1       1       3       4       1       3 #> 4       4       3       1       5       2       5       4       1       3 #> 5       4       3       3       3       1       1       5       1       3 #> 6       4       3       3       4       1       1       4       1       4 #>   Item.29 Item.30 Item.31 Item.32 #> 1       1       5       4       5 #> 2       5       8       4       8 #> 3       4       4       4       1 #> 4       4       2       4       2 #> 5       1       2       4       1 #> 6       2       3       4       3 key <- c(1,4,5,2,3,1,2,1,3,1,2,4,2,1,5,3,4,4,1,4,3,3,4,1,3,5,1,3,1,5,4,5)  dicho.SAT12 <- key2binary(SAT12, key) head(dicho.SAT12) #>      Item.1 Item.2 Item.3 Item.4 Item.5 Item.6 Item.7 Item.8 Item.9 Item.10 #> [1,]      1      1      1      1      1      1      1      1      1       1 #> [2,]      0      1      0      0      1      0      1      0      1       1 #> [3,]      1      1      1      0      1      0      1      0      1       0 #> [4,]      0      1      0      1      1      0      1      0      1       0 #> [5,]      0      1      1      1      1      0      1      1      0       0 #> [6,]      1      1      0      0      1      0      1      0      1       1 #>      Item.11 Item.12 Item.13 Item.14 Item.15 Item.16 Item.17 Item.18 Item.19 #> [1,]       1       1       1       1       1       1       1       1       1 #> [2,]       1       0       1       1       1       0       1       0       1 #> [3,]       1       0       0       1       1       0       1       0       0 #> [4,]       1       1       1       1       1       0       1       0       0 #> [5,]       1       1       1       1       1       0       1       0       1 #> [6,]       1       0       1       1       1       0       1       1       1 #>      Item.20 Item.21 Item.22 Item.23 Item.24 Item.25 Item.26 Item.27 Item.28 #> [1,]       1       1       1       1       1       1       1       1       1 #> [2,]       1       1       1       0       1       0       0       1       0 #> [3,]       1       1       1       0       1       1       0       1       1 #> [4,]       1       1       0       0       0       0       0       1       1 #> [5,]       1       1       1       0       1       0       1       1       1 #> [6,]       1       1       1       1       1       0       0       1       0 #>      Item.29 Item.30 Item.31 Item.32 #> [1,]       1       1       1       1 #> [2,]       0       0       1       0 #> [3,]       0       0       1       0 #> [4,]       0       0       1       0 #> [5,]       1       0       1       0 #> [6,]       0       0       1       0  # multiple scoring keys key2 <- cbind(c(1,4,5,2,3,1,2,1,3,1,2,4,2,1,5,3,4,4,1,4,3,3,4,1,3,5,1,3,1,5,4,5),               c(2,3,NA,1,rep(NA, 28))) dicho.SAT12 <- key2binary(SAT12, key2)  # keys from raw character responses resp <- as.data.frame(matrix(c(   \"B\",\"B\",\"D\",\"D\",\"E\",   \"B\",\"A\",\"D\",\"D\",\"E\",   \"B\",\"A\",\"D\",\"C\",\"E\",   \"D\",\"D\",\"D\",\"C\",\"E\",   \"B\",\"C\",\"A\",\"D\",\"A\"), ncol=5, byrow=TRUE))  key <- c(\"B\", \"D\", \"D\", \"C\", \"E\")  d01 <- key2binary(resp, key) head(d01) #>      V1 V2 V3 V4 V5 #> [1,]  1  0  1  0  1 #> [2,]  1  0  1  0  1 #> [3,]  1  0  1  1  1 #> [4,]  0  1  1  1  1 #> [5,]  1  0  0  0  0  # score/don't score missing values resp[1,1] <- NA d01NA <- key2binary(resp, key) # without scoring d01NA #>      V1 V2 V3 V4 V5 #> [1,] NA  0  1  0  1 #> [2,]  1  0  1  0  1 #> [3,]  1  0  1  1  1 #> [4,]  0  1  1  1  1 #> [5,]  1  0  0  0  0  d01 <- key2binary(resp, key, score_missing = TRUE) # with scoring d01 #>      V1 V2 V3 V4 V5 #> [1,]  0  0  1  0  1 #> [2,]  1  0  1  0  1 #> [3,]  1  0  1  1  1 #> [4,]  0  1  1  1  1 #> [5,]  1  0  0  0  0"},{"path":"https://philchalmers.github.io/mirt/reference/lagrange.html","id":null,"dir":"Reference","previous_headings":"","what":"Lagrange test for freeing parameters — lagrange","title":"Lagrange test for freeing parameters — lagrange","text":"Lagrange (.e., score) test test whether parameters freed constrained baseline model.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/lagrange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lagrange test for freeing parameters — lagrange","text":"","code":"lagrange(mod, parnum, SE.type = \"Oakes\", type = \"Richardson\", ...)"},{"path":"https://philchalmers.github.io/mirt/reference/lagrange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lagrange test for freeing parameters — lagrange","text":"mod estimated model parnum vector, list vectors, containing one parameter locations/sets locations tested. See objects returned mod2values locations SE.type type information matrix estimator use. See mirt details type type numerical algorithm passed numerical_deriv obtain gradient terms ... additional arguments pass mirt","code":""},{"path":"https://philchalmers.github.io/mirt/reference/lagrange.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Lagrange test for freeing parameters — lagrange","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/lagrange.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Lagrange test for freeing parameters — lagrange","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/lagrange.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lagrange test for freeing parameters — lagrange","text":"","code":"# \\donttest{ dat <- expand.table(LSAT7) mod <- mirt(dat, 1, 'Rasch') #>  (values <- mod2values(mod)) #>    group   item     class   name parnum value lbound ubound   est const nconst #> 1    all Item.1      dich     a1      1 1.000   -Inf    Inf FALSE  none   none #> 2    all Item.1      dich      d      2 1.868   -Inf    Inf  TRUE  none   none #> 3    all Item.1      dich      g      3 0.000      0      1 FALSE  none   none #> 4    all Item.1      dich      u      4 1.000      0      1 FALSE  none   none #> 5    all Item.2      dich     a1      5 1.000   -Inf    Inf FALSE  none   none #> 6    all Item.2      dich      d      6 0.791   -Inf    Inf  TRUE  none   none #> 7    all Item.2      dich      g      7 0.000      0      1 FALSE  none   none #> 8    all Item.2      dich      u      8 1.000      0      1 FALSE  none   none #> 9    all Item.3      dich     a1      9 1.000   -Inf    Inf FALSE  none   none #> 10   all Item.3      dich      d     10 1.461   -Inf    Inf  TRUE  none   none #> 11   all Item.3      dich      g     11 0.000      0      1 FALSE  none   none #> 12   all Item.3      dich      u     12 1.000      0      1 FALSE  none   none #> 13   all Item.4      dich     a1     13 1.000   -Inf    Inf FALSE  none   none #> 14   all Item.4      dich      d     14 0.521   -Inf    Inf  TRUE  none   none #> 15   all Item.4      dich      g     15 0.000      0      1 FALSE  none   none #> 16   all Item.4      dich      u     16 1.000      0      1 FALSE  none   none #> 17   all Item.5      dich     a1     17 1.000   -Inf    Inf FALSE  none   none #> 18   all Item.5      dich      d     18 1.993   -Inf    Inf  TRUE  none   none #> 19   all Item.5      dich      g     19 0.000      0      1 FALSE  none   none #> 20   all Item.5      dich      u     20 1.000      0      1 FALSE  none   none #> 21   all  GROUP GroupPars MEAN_1     21 0.000   -Inf    Inf FALSE  none   none #> 22   all  GROUP GroupPars COV_11     22 1.022      0    Inf  TRUE  none   none #>    prior.type prior_1 prior_2 #> 1        none     NaN     NaN #> 2        none     NaN     NaN #> 3        none     NaN     NaN #> 4        none     NaN     NaN #> 5        none     NaN     NaN #> 6        none     NaN     NaN #> 7        none     NaN     NaN #> 8        none     NaN     NaN #> 9        none     NaN     NaN #> 10       none     NaN     NaN #> 11       none     NaN     NaN #> 12       none     NaN     NaN #> 13       none     NaN     NaN #> 14       none     NaN     NaN #> 15       none     NaN     NaN #> 16       none     NaN     NaN #> 17       none     NaN     NaN #> 18       none     NaN     NaN #> 19       none     NaN     NaN #> 20       none     NaN     NaN #> 21       none     NaN     NaN #> 22       none     NaN     NaN  # test all fixed slopes individually parnum <- values$parnum[values$name == 'a1'] lagrange(mod, parnum) #>            X2 df          p #> 1  0.36714267  1 0.54456589 #> 5  0.04789243  1 0.82677204 #> 9  4.69717570  1 0.03021223 #> 13 1.44960175  1 0.22859187 #> 17 2.55408012  1 0.11000983  # compare to LR test for first two slopes mod2 <- mirt(dat, 'F = 1-5                    FREE = (1, a1)', 'Rasch') #>  coef(mod2, simplify=TRUE)$items #>              a1         d g u #> Item.1 1.157956 1.9393358 0 1 #> Item.2 1.000000 0.7850452 0 1 #> Item.3 1.000000 1.4501952 0 1 #> Item.4 1.000000 0.5175858 0 1 #> Item.5 1.000000 1.9787464 0 1 anova(mod, mod2) #>           AIC    SABIC       HQ      BIC    logLik    X2 df     p #> mod  5341.802 5352.192 5352.994 5371.248 -2664.901                #> mod2 5343.264 5355.386 5356.321 5377.618 -2664.632 0.538  1 0.463  mod2 <- mirt(dat, 'F = 1-5                    FREE = (2, a1)', 'Rasch') #>  coef(mod2, simplify=TRUE)$items #>               a1         d g u #> Item.1 1.0000000 1.8746626 0 1 #> Item.2 0.9464702 0.7810629 0 1 #> Item.3 1.0000000 1.4661198 0 1 #> Item.4 1.0000000 0.5234068 0 1 #> Item.5 1.0000000 1.9997347 0 1 anova(mod, mod2) #>           AIC    SABIC       HQ      BIC    logLik    X2 df     p #> mod  5341.802 5352.192 5352.994 5371.248 -2664.901                #> mod2 5343.720 5355.842 5356.777 5378.075 -2664.860 0.081  1 0.775  mod2 <- mirt(dat, 'F = 1-5                    FREE = (3, a1)', 'Rasch') #>  coef(mod2, simplify=TRUE)$items #>              a1         d g u #> Item.1 1.000000 1.8101732 0 1 #> Item.2 1.000000 0.7649559 0 1 #> Item.3 1.848252 1.7774916 0 1 #> Item.4 1.000000 0.5042538 0 1 #> Item.5 1.000000 1.9316244 0 1 anova(mod, mod2) #>           AIC    SABIC       HQ      BIC    logLik    X2 df     p #> mod  5341.802 5352.192 5352.994 5371.248 -2664.901                #> mod2 5335.130 5347.252 5348.187 5369.485 -2660.565 8.671  1 0.003  # test slopes first two slopes and last three slopes jointly lagrange(mod, list(parnum[1:2], parnum[3:5])) #>                X2 df          p #> 1.5     0.4591775  2 0.79486042 #> 9.13.17 9.1527189  3 0.02732783  # test all 5 slopes and first + last jointly lagrange(mod, list(parnum[1:5], parnum[c(1, 5)])) #>                   X2 df          p #> 1.5.9.13.17 9.861713  5 0.07924974 #> 1.17        2.898233  2 0.23477762  # }"},{"path":"https://philchalmers.github.io/mirt/reference/likert2int.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert ordered Likert-scale responses (character or factors) to integers — likert2int","title":"Convert ordered Likert-scale responses (character or factors) to integers — likert2int","text":"Given matrix data.frame object consisting Likert responses return object dimensions integer values.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/likert2int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert ordered Likert-scale responses (character or factors) to integers — likert2int","text":"","code":"likert2int(x, levels = NULL)"},{"path":"https://philchalmers.github.io/mirt/reference/likert2int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert ordered Likert-scale responses (character or factors) to integers — likert2int","text":"x matrix character values data.frame character/factor vectors levels named character vector indicating integer values assigned elements. omitted, order elements determined converting column x factor variable","code":""},{"path":"https://philchalmers.github.io/mirt/reference/likert2int.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert ordered Likert-scale responses (character or factors) to integers — likert2int","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/likert2int.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert ordered Likert-scale responses (character or factors) to integers — likert2int","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/likert2int.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert ordered Likert-scale responses (character or factors) to integers — likert2int","text":"","code":"# \\donttest{  # simulate data  dat1 <- matrix(sample(c('Disagree', 'Strongly Disagree', 'Agree',                         'Neutral', 'Strongly Agree'), 1000*5, replace=TRUE),                nrow=1000, ncol=5) dat1[2,2] <- dat1[3,3] <- dat1[1,3] <- NA # NAs added for flavour dat2 <- matrix(sample(c('D', 'SD', 'A', 'N', 'SA'), 1000*5, replace=TRUE),                nrow=1000, ncol=5) dat <- cbind(dat1, dat2)  # separately intdat1 <- likert2int(dat1) head(dat1) #>      [,1]             [,2]                [,3]             [,4]                #> [1,] \"Strongly Agree\" \"Strongly Disagree\" NA               \"Neutral\"           #> [2,] \"Disagree\"       NA                  \"Agree\"          \"Disagree\"          #> [3,] \"Disagree\"       \"Neutral\"           NA               \"Disagree\"          #> [4,] \"Disagree\"       \"Neutral\"           \"Disagree\"       \"Neutral\"           #> [5,] \"Neutral\"        \"Strongly Agree\"    \"Agree\"          \"Strongly Disagree\" #> [6,] \"Strongly Agree\" \"Agree\"             \"Strongly Agree\" \"Strongly Agree\"    #>      [,5]                #> [1,] \"Strongly Agree\"    #> [2,] \"Strongly Agree\"    #> [3,] \"Strongly Disagree\" #> [4,] \"Neutral\"           #> [5,] \"Strongly Agree\"    #> [6,] \"Agree\"             head(intdat1) #>   V1 V2 V3 V4 V5 #> 1 NA NA NA NA NA #> 2 NA NA NA NA NA #> 3 NA NA NA NA NA #> 4 NA NA NA NA NA #> 5 NA NA NA NA NA #> 6 NA NA NA NA NA  # more useful with explicit levels lvl1 <- c('Strongly Disagree'=1, 'Disagree'=2, 'Neutral'=3, 'Agree'=4,           'Strongly Agree'=5) intdat1 <- likert2int(dat1, levels = lvl1) head(dat1) #>      [,1]             [,2]                [,3]             [,4]                #> [1,] \"Strongly Agree\" \"Strongly Disagree\" NA               \"Neutral\"           #> [2,] \"Disagree\"       NA                  \"Agree\"          \"Disagree\"          #> [3,] \"Disagree\"       \"Neutral\"           NA               \"Disagree\"          #> [4,] \"Disagree\"       \"Neutral\"           \"Disagree\"       \"Neutral\"           #> [5,] \"Neutral\"        \"Strongly Agree\"    \"Agree\"          \"Strongly Disagree\" #> [6,] \"Strongly Agree\" \"Agree\"             \"Strongly Agree\" \"Strongly Agree\"    #>      [,5]                #> [1,] \"Strongly Agree\"    #> [2,] \"Strongly Agree\"    #> [3,] \"Strongly Disagree\" #> [4,] \"Neutral\"           #> [5,] \"Strongly Agree\"    #> [6,] \"Agree\"             head(intdat1) #>   V1 V2 V3 V4 V5 #> 1  5  1 NA  3  5 #> 2  2 NA  4  2  5 #> 3  2  3 NA  2  1 #> 4  2  3  2  3  3 #> 5  3  5  4  1  5 #> 6  5  4  5  5  4  # second data lvl2 <- c('SD'=1, 'D'=2, 'N'=3, 'A'=4, 'SA'=5) intdat2 <- likert2int(dat2, levels = lvl2) head(dat2) #>      [,1] [,2] [,3] [,4] [,5] #> [1,] \"SA\" \"A\"  \"SA\" \"N\"  \"D\"  #> [2,] \"D\"  \"D\"  \"SD\" \"SD\" \"D\"  #> [3,] \"N\"  \"N\"  \"SD\" \"A\"  \"N\"  #> [4,] \"SD\" \"A\"  \"SA\" \"SD\" \"SA\" #> [5,] \"SA\" \"N\"  \"N\"  \"SD\" \"A\"  #> [6,] \"A\"  \"D\"  \"SD\" \"SD\" \"SA\" head(intdat2) #>   V1 V2 V3 V4 V5 #> 1  5  4  5  3  2 #> 2  2  2  1  1  2 #> 3  3  3  1  4  3 #> 4  1  4  5  1  5 #> 5  5  3  3  1  4 #> 6  4  2  1  1  5  # full dataset (using both mapping schemes) intdat <- likert2int(dat, levels = c(lvl1, lvl2)) head(dat) #>      [,1]             [,2]                [,3]             [,4]                #> [1,] \"Strongly Agree\" \"Strongly Disagree\" NA               \"Neutral\"           #> [2,] \"Disagree\"       NA                  \"Agree\"          \"Disagree\"          #> [3,] \"Disagree\"       \"Neutral\"           NA               \"Disagree\"          #> [4,] \"Disagree\"       \"Neutral\"           \"Disagree\"       \"Neutral\"           #> [5,] \"Neutral\"        \"Strongly Agree\"    \"Agree\"          \"Strongly Disagree\" #> [6,] \"Strongly Agree\" \"Agree\"             \"Strongly Agree\" \"Strongly Agree\"    #>      [,5]                [,6] [,7] [,8] [,9] [,10] #> [1,] \"Strongly Agree\"    \"SA\" \"A\"  \"SA\" \"N\"  \"D\"   #> [2,] \"Strongly Agree\"    \"D\"  \"D\"  \"SD\" \"SD\" \"D\"   #> [3,] \"Strongly Disagree\" \"N\"  \"N\"  \"SD\" \"A\"  \"N\"   #> [4,] \"Neutral\"           \"SD\" \"A\"  \"SA\" \"SD\" \"SA\"  #> [5,] \"Strongly Agree\"    \"SA\" \"N\"  \"N\"  \"SD\" \"A\"   #> [6,] \"Agree\"             \"A\"  \"D\"  \"SD\" \"SD\" \"SA\"  head(intdat) #>   V1 V2 V3 V4 V5 V6 V7 V8 V9 V10 #> 1  5  1 NA  3  5  5  4  5  3   2 #> 2  2 NA  4  2  5  2  2  1  1   2 #> 3  2  3 NA  2  1  3  3  1  4   3 #> 4  2  3  2  3  3  1  4  5  1   5 #> 5  3  5  4  1  5  5  3  3  1   4 #> 6  5  4  5  5  4  4  2  1  1   5   ##### # data.frame as input with ordered factors  dat1 <- data.frame(dat1) dat2 <- data.frame(dat2) dat.old <- cbind(dat1, dat2) colnames(dat.old) <- paste0('Item_', 1:10) str(dat.old) # factors are leveled alphabetically by default #> 'data.frame':\t1000 obs. of  10 variables: #>  $ Item_1 : chr  \"Strongly Agree\" \"Disagree\" \"Disagree\" \"Disagree\" ... #>  $ Item_2 : chr  \"Strongly Disagree\" NA \"Neutral\" \"Neutral\" ... #>  $ Item_3 : chr  NA \"Agree\" NA \"Disagree\" ... #>  $ Item_4 : chr  \"Neutral\" \"Disagree\" \"Disagree\" \"Neutral\" ... #>  $ Item_5 : chr  \"Strongly Agree\" \"Strongly Agree\" \"Strongly Disagree\" \"Neutral\" ... #>  $ Item_6 : chr  \"SA\" \"D\" \"N\" \"SD\" ... #>  $ Item_7 : chr  \"A\" \"D\" \"N\" \"A\" ... #>  $ Item_8 : chr  \"SA\" \"SD\" \"SD\" \"SA\" ... #>  $ Item_9 : chr  \"N\" \"SD\" \"A\" \"SD\" ... #>  $ Item_10: chr  \"D\" \"D\" \"N\" \"SA\" ...  # create explicit ordering in factor variables for(i in 1:ncol(dat1))    levels(dat1[[i]]) <- c('Strongly Disagree', 'Disagree', 'Neutral', 'Agree',                           'Strongly Agree')  for(i in 1:ncol(dat2))    levels(dat2[[i]]) <- c('SD', 'D', 'N', 'A', 'SA')  dat <- cbind(dat1, dat2) colnames(dat) <- colnames(dat.old) str(dat) # note ordering #> 'data.frame':\t1000 obs. of  10 variables: #>  $ Item_1 : chr  \"Strongly Agree\" \"Disagree\" \"Disagree\" \"Disagree\" ... #>   ..- attr(*, \"levels\")= chr [1:5] \"Strongly Disagree\" \"Disagree\" \"Neutral\" \"Agree\" ... #>  $ Item_2 : chr  \"Strongly Disagree\" NA \"Neutral\" \"Neutral\" ... #>   ..- attr(*, \"levels\")= chr [1:5] \"Strongly Disagree\" \"Disagree\" \"Neutral\" \"Agree\" ... #>  $ Item_3 : chr  NA \"Agree\" NA \"Disagree\" ... #>   ..- attr(*, \"levels\")= chr [1:5] \"Strongly Disagree\" \"Disagree\" \"Neutral\" \"Agree\" ... #>  $ Item_4 : chr  \"Neutral\" \"Disagree\" \"Disagree\" \"Neutral\" ... #>   ..- attr(*, \"levels\")= chr [1:5] \"Strongly Disagree\" \"Disagree\" \"Neutral\" \"Agree\" ... #>  $ Item_5 : chr  \"Strongly Agree\" \"Strongly Agree\" \"Strongly Disagree\" \"Neutral\" ... #>   ..- attr(*, \"levels\")= chr [1:5] \"Strongly Disagree\" \"Disagree\" \"Neutral\" \"Agree\" ... #>  $ Item_6 : chr  \"SA\" \"D\" \"N\" \"SD\" ... #>   ..- attr(*, \"levels\")= chr [1:5] \"SD\" \"D\" \"N\" \"A\" ... #>  $ Item_7 : chr  \"A\" \"D\" \"N\" \"A\" ... #>   ..- attr(*, \"levels\")= chr [1:5] \"SD\" \"D\" \"N\" \"A\" ... #>  $ Item_8 : chr  \"SA\" \"SD\" \"SD\" \"SA\" ... #>   ..- attr(*, \"levels\")= chr [1:5] \"SD\" \"D\" \"N\" \"A\" ... #>  $ Item_9 : chr  \"N\" \"SD\" \"A\" \"SD\" ... #>   ..- attr(*, \"levels\")= chr [1:5] \"SD\" \"D\" \"N\" \"A\" ... #>  $ Item_10: chr  \"D\" \"D\" \"N\" \"SA\" ... #>   ..- attr(*, \"levels\")= chr [1:5] \"SD\" \"D\" \"N\" \"A\" ...  intdat <- likert2int(dat) head(dat) #>           Item_1            Item_2         Item_3            Item_4 #> 1 Strongly Agree Strongly Disagree           <NA>           Neutral #> 2       Disagree              <NA>          Agree          Disagree #> 3       Disagree           Neutral           <NA>          Disagree #> 4       Disagree           Neutral       Disagree           Neutral #> 5        Neutral    Strongly Agree          Agree Strongly Disagree #> 6 Strongly Agree             Agree Strongly Agree    Strongly Agree #>              Item_5 Item_6 Item_7 Item_8 Item_9 Item_10 #> 1    Strongly Agree     SA      A     SA      N       D #> 2    Strongly Agree      D      D     SD     SD       D #> 3 Strongly Disagree      N      N     SD      A       N #> 4           Neutral     SD      A     SA     SD      SA #> 5    Strongly Agree     SA      N      N     SD       A #> 6             Agree      A      D     SD     SD      SA head(intdat) #>   Item_1 Item_2 Item_3 Item_4 Item_5 Item_6 Item_7 Item_8 Item_9 Item_10 #> 1      5      1     NA      3      5      5      4      5      3       2 #> 2      2     NA      4      2      5      2      2      1      1       2 #> 3      2      3     NA      2      1      3      3      1      4       3 #> 4      2      3      2      3      3      1      4      5      1       5 #> 5      3      5      4      1      5      5      3      3      1       4 #> 6      5      4      5      5      4      4      2      1      1       5  # }"},{"path":"https://philchalmers.github.io/mirt/reference/logLik-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract log-likelihood — logLik-method","title":"Extract log-likelihood — logLik-method","text":"Extract observed-data log-likelihood.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/logLik-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract log-likelihood — logLik-method","text":"","code":"# S4 method for class 'SingleGroupClass' logLik(object)"},{"path":"https://philchalmers.github.io/mirt/reference/logLik-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract log-likelihood — logLik-method","text":"object object class SingleGroupClass, MultipleGroupClass, MixedClass","code":""},{"path":"https://philchalmers.github.io/mirt/reference/logLik-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract log-likelihood — logLik-method","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/logLik-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract log-likelihood — logLik-method","text":"","code":"# \\donttest{ x <- mirt(Science, 1) #>  logLik(x) #> [1] -1608.87  # }"},{"path":"https://philchalmers.github.io/mirt/reference/marginal_rxx.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate the marginal reliability — marginal_rxx","title":"Function to calculate the marginal reliability — marginal_rxx","text":"Given estimated model prior density function, compute marginal reliability (Thissen Wainer, 2001). available unidimensional tests.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/marginal_rxx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate the marginal reliability — marginal_rxx","text":"","code":"marginal_rxx(mod, density = dnorm, ...)"},{"path":"https://philchalmers.github.io/mirt/reference/marginal_rxx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate the marginal reliability — marginal_rxx","text":"mod object class 'SingleGroupClass' density density function use integration. Default assumes latent traits normal (Gaussian) distribution ... additional arguments passed density function","code":""},{"path":"https://philchalmers.github.io/mirt/reference/marginal_rxx.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Function to calculate the marginal reliability — marginal_rxx","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06 Thissen, D. Wainer, H. (2001). Test Scoring. Lawrence Erlbaum Associates.","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/marginal_rxx.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to calculate the marginal reliability — marginal_rxx","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/marginal_rxx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to calculate the marginal reliability — marginal_rxx","text":"","code":"dat <- expand.table(deAyala) mod <- mirt(dat) #>   # marginal estimate treating item parameters as known marginal_rxx(mod) #> [1] 0.6092894  # compare to alpha itemstats(dat)$overall$alpha #> [1] 0.6077281  # \\donttest{  # empirical estimate (assuming the same prior) fscores(mod, returnER = TRUE) #>        F1  #> 0.6200703   # empirical rxx the alternative way, given theta scores and SEs fs <- fscores(mod, full.scores.SE=TRUE) head(fs) #>             F1     SE_F1 #> [1,] -1.580133 0.6699424 #> [2,] -1.580133 0.6699424 #> [3,] -1.580133 0.6699424 #> [4,] -1.580133 0.6699424 #> [5,] -1.580133 0.6699424 #> [6,] -1.580133 0.6699424 empirical_rxx(fs) #>        F1  #> 0.6200703   ############# # example demonstrating correlation attenuation  theta <- rnorm(1000) X <- theta + rnorm(1000, sd=2) cor(X, theta)    # correlation without measurement error (what you want) #> [1] 0.4644682  # measured with a 10 item GRM test nitems <- 10 a <- matrix(rlnorm(nitems,.2,.3)) diffs <- t(apply(matrix(runif(nitems*4, .3, 1), nitems), 1, cumsum)) diffs <- -(diffs - rowMeans(diffs)) d <- diffs + rnorm(nitems) dat <- simdata(a, d, itemtype = 'graded', Theta=matrix(theta))  # correlation with total score (attenuated) cor(rowSums(dat), X) #> [1] 0.4279283  # fit single group model mod <- mirt(dat) #>   # EAP correlation (also attenuated) fs <- fscores(mod) cor(fs, X) #>         [,1] #> F1 0.4302499  # correction for attenuation, r_x.theta = r_x.theta.hat / sqrt(rxx_theta.hat) (rxx <- marginal_rxx(mod))  # alternatively, could use empirical_rxx() #> [1] 0.8095505 cor(fs, X) / sqrt(rxx)  # correction estimate #>         [,1] #> F1 0.4781881 cor(X, theta)           # compare to true correlation #> [1] 0.4644682  # }"},{"path":"https://philchalmers.github.io/mirt/reference/mdirt.html","id":null,"dir":"Reference","previous_headings":"","what":"Multidimensional discrete item response theory — mdirt","title":"Multidimensional discrete item response theory — mdirt","text":"mdirt fits variety item response models discrete latent variables. include, limited , latent class analysis, multidimensional latent class models, multidimensional discrete latent class models, DINA/DINO models, grade measurement models, C-RUM, . response models defined explicitly customized models can defined using createItem function.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mdirt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multidimensional discrete item response theory — mdirt","text":"","code":"mdirt(   data,   model,   customTheta = NULL,   structure = NULL,   item.Q = NULL,   nruns = 1,   method = \"EM\",   covdata = NULL,   formula = NULL,   itemtype = \"lca\",   optimizer = \"nlminb\",   return_max = TRUE,   group = NULL,   GenRandomPars = FALSE,   verbose = TRUE,   pars = NULL,   technical = list(),   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/mdirt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multidimensional discrete item response theory — mdirt","text":"data matrix data.frame consists numerically ordered data, organized form integers,  missing data coded NA model number mutually exclusive classes fit, alternatively specific mirt.model definition (reflects -called Q-matrix). Note using mirt.model, order syntax factors/attributes defined associated columns customTheta input customTheta input passed technical = list(customTheta = ...), included directly function convenience. input interesting discrete latent models allows customized patterns latent classes (.e., defines possible combinations latent attribute profile). default builds pattern customTheta = diag(model), typical pattern traditional latent class analysis whereby class membership mutually distinct exhaustive. See thetaComb quick method generate matrix possible combinations structure R formula allowing profile probability patterns (.e., structural component model) fitted according log-linear model. NULL, profile probabilities (except one) estimated. Use input requires customTheta input supplied, column names matrix match names found within formula item.Q list item-level Q-matrices indicating respective categories modeled underlying attributes. matrix must represent \\(K_i \\times \\) matrix, \\(K_i\\) represents number categories ith item, \\(\\) number attributes included Theta matrix; otherwise, value ofNULL default matrix consisting 1's \\(K_i \\times \\) element except first row, contains 0's proper identification. Incidentally, first row matrix must contain 0's first category represents reference category identification nruns numeric value indicating many times model fit data using random starting values. greater 1, GenRandomPars set true default method estimation method. Can 'EM' 'BL' (see mirt details) covdata data.frame data used latent regression models formula R formula (list formulas) indicating latent traits can regressed using external covariates covdata. named list formulas supplied (names correspond latent trait/attribute names model) specific regression effects can estimated factor. Supplying single formula estimate regression parameters latent variables default itemtype vector indicating itemtype associated item. discrete models limited 'lca' items defined using createItem definition optimizer optimizer used M-step, set 'nlminb' default. See mirt details return_max logical; nruns > 1, return model optimal maximum likelihood criteria? FALSE, returns list estimated objects group factor variable indicating group membership used multiple group analyses GenRandomPars logical; use random starting values verbose logical; turn messages R console pars used modifying starting values; see mirt details technical list lower-level inputs. See mirt details ... additional arguments passed estimation engine. See mirt details examples","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mdirt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multidimensional discrete item response theory — mdirt","text":"Posterior classification accuracy response pattern may obtained via fscores function. summary() function display category probability values given class membership, can also displayed graphically plot(), coef() displays raw coefficient values (standard errors, estimated). Finally, anova() used compare nested models, M2 itemfit may used model fitting purposes.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mdirt.html","id":"-lca-model-definition","dir":"Reference","previous_headings":"","what":"'lca' model definition","title":"Multidimensional discrete item response theory — mdirt","text":"latent class IRT model two latent classes form $$P(x = k|\\theta_1, \\theta_2, a1, a2) = \\frac{exp(a1 \\theta_1 + a2 \\theta_2)}{   \\sum_j^K exp(a1 \\theta_1 + a2 \\theta_2)}$$ \\(\\theta\\) values generally take discrete points (0 1). proper identification, first category slope parameters (\\(a1\\) \\(a2\\)) never freely estimated. Alternatively, supplying different grid \\(\\theta\\) values allow estimation similar models (multidimensional discrete models, grade membership, etc.). See examples . item.Q utilized, equation can understood $$P(x = k|\\theta_1, \\theta_2, a1, a2) = \\frac{exp(a1 \\theta_1 Q_{j1} + a2 \\theta_2 Q_{j2})}{   \\sum_j^K exp(a1 \\theta_1 Q_{j1} + a2 \\theta_2 Q_{j2})}$$ construction Q \\(K_i \\times \\) matrix indicating whether category modeled according latent class structure. standard latent class model, Q-matrix many rows categories, many columns number classes/attributes modeled, consist 0's first row 1's elsewhere. course can -written passing alternative item.Q definition respective item.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mdirt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Multidimensional discrete item response theory — mdirt","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. Proctor, C. H. (1970). probabilistic formulation statistical analysis Guttman scaling.   Psychometrika, 35, 73-78. doi:10.18637/jss.v048.i06","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/mdirt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Multidimensional discrete item response theory — mdirt","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mdirt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multidimensional discrete item response theory — mdirt","text":"","code":"# LSAT6 dataset dat <- expand.table(LSAT6)  # fit with 2-3 latent classes (mod2 <- mdirt(dat, 2)) #>  #>  #> Call: #> mdirt(data = dat, model = 2) #>  #> Latent class model with 2 classes and 2 profiles. #> Converged within 1e-04 tolerance after 363 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: nlminb  #> EM acceleration: Ramsay #> Latent density type: discrete #>  #> Log-likelihood = -2467.408 #> Estimated parameters: 11  #> AIC = 4956.816 #> BIC = 5010.802; SABIC = 4975.865 #> G2 (20) = 22.74, p = 0.3018, RMSEA = 0.012 # \\donttest{ (mod3 <- mdirt(dat, 3)) #>  #> Warning: EM cycles terminated after 500 iterations. #>  #> Call: #> mdirt(data = dat, model = 3) #>  #> Latent class model with 3 classes and 3 profiles. #> FAILED TO CONVERGE within 1e-04 tolerance after 500 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: nlminb  #> EM acceleration: Ramsay #> Latent density type: discrete #>  #> Log-likelihood = -2465.249 #> Estimated parameters: 17  #> AIC = 4964.499 #> BIC = 5047.931; SABIC = 4993.938 #> G2 (14) = 18.42, p = 0.1882, RMSEA = 0.018 summary(mod2) #> $Item_1 #>        category_1 category_2 #> P[1 0]      0.156      0.844 #> P[0 1]      0.037      0.963 #>  #> $Item_2 #>        category_1 category_2 #> P[1 0]      0.485      0.515 #> P[0 1]      0.196      0.804 #>  #> $Item_3 #>        category_1 category_2 #> P[1 0]      0.713      0.287 #> P[0 1]      0.317      0.683 #>  #> $Item_4 #>        category_1 category_2 #> P[1 0]      0.401      0.599 #> P[0 1]      0.157      0.843 #>  #> $Item_5 #>        category_1 category_2 #> P[1 0]      0.232      0.768 #> P[0 1]      0.080      0.920 #>  #> $Class.Probability #>           F1 F2  prob #> Profile_1  1  0 0.329 #> Profile_2  0  1 0.671 #>  residuals(mod2) #>        Item_1 Item_2 Item_3 Item_4 Item_5 #> Item_1     NA  0.010  0.020 -0.011 -0.018 #> Item_2  0.109     NA  0.003 -0.018  0.022 #> Item_3  0.412  0.009     NA  0.008 -0.026 #> Item_4  0.132  0.313  0.060     NA  0.040 #> Item_5  0.331  0.487  0.680  1.566     NA residuals(mod2, type = 'exp') #>    Item_1 Item_2 Item_3 Item_4 Item_5 freq     exp std.res #> 1       0      0      0      0      0    3   1.662   1.038 #> 2       0      0      0      0      1    6   5.673   0.137 #> 3       0      0      0      1      0    2   2.556  -0.348 #> 4       0      0      0      1      1   11   9.333   0.546 #> 5       0      0      1      0      0    1   0.702   0.356 #> 6       0      0      1      0      1    1   2.670  -1.022 #> 7       0      0      1      1      0    3   1.211   1.626 #> 8       0      0      1      1      1    4   5.855  -0.767 #> 9       0      1      0      0      0    1   1.826  -0.611 #> 10      0      1      0      0      1    8   6.708   0.499 #> 11      0      1      0      1      1   16  13.561   0.662 #> 12      0      1      1      0      1    3   4.297  -0.625 #> 13      0      1      1      1      0    2   1.972   0.020 #> 14      0      1      1      1      1   15  14.075   0.247 #> 15      1      0      0      0      0   10   9.422   0.188 #> 16      1      0      0      0      1   29  35.372  -1.071 #> 17      1      0      0      1      0   14  16.027  -0.506 #> 18      1      0      0      1      1   81  75.302   0.657 #> 19      1      0      1      0      0    3   4.672  -0.773 #> 20      1      0      1      0      1   28  24.369   0.736 #> 21      1      0      1      1      0   15  11.213   1.131 #> 22      1      0      1      1      1   80  84.968  -0.539 #> 23      1      1      0      0      0   16  11.551   1.309 #> 24      1      1      0      0      1   56  55.154   0.114 #> 25      1      1      0      1      0   21  25.287  -0.853 #> 26      1      1      0      1      1  173 174.541  -0.117 #> 27      1      1      1      0      0   11   8.273   0.948 #> 28      1      1      1      0      1   61  63.783  -0.348 #> 29      1      1      1      1      0   28  29.723  -0.316 #> 30      1      1      1      1      1  298 294.334   0.214 anova(mod2, mod3) #>           AIC    SABIC       HQ      BIC    logLik    X2 df     p #> mod2 4956.816 4975.865 4977.335 5010.802 -2467.408                #> mod3 4964.499 4993.938 4996.209 5047.931 -2465.249 4.317  6 0.634 M2(mod2) #>             M2 df         p      RMSEA RMSEA_5   RMSEA_95      SRMSR      TLI #> stats 4.603509  4 0.3304498 0.01228935       0 0.05069941 0.02122285 0.973442 #>             CFI #> stats 0.9893768 itemfit(mod2) #>     item  S_X2 df.S_X2 RMSEA.S_X2 p.S_X2 #> 1 Item_1 0.433       2          0  0.805 #> 2 Item_2 1.702       2          0  0.427 #> 3 Item_3 0.747       1          0  0.387 #> 4 Item_4 0.184       2          0  0.912 #> 5 Item_5 0.145       2          0  0.930  # generate classification plots plot(mod2)  plot(mod2, facet_items = FALSE)  plot(mod2, profile = TRUE)   # available for polytomous data mod <- mdirt(Science, 2) #>  summary(mod) #> $Comfort #>        category_1 category_2 category_3 category_4 #> P[1 0]      0.021      0.097      0.773      0.109 #> P[0 1]      0.000      0.059      0.535      0.407 #>  #> $Work #>        category_1 category_2 category_3 category_4 #> P[1 0]      0.125      0.339      0.504      0.033 #> P[0 1]      0.023      0.115      0.559      0.303 #>  #> $Future #>        category_1 category_2 category_3 category_4 #> P[1 0]      0.058      0.305      0.637      0.000 #> P[0 1]      0.001      0.000      0.382      0.616 #>  #> $Benefit #>        category_1 category_2 category_3 category_4 #> P[1 0]      0.074      0.339      0.508      0.079 #> P[0 1]      0.022      0.128      0.469      0.382 #>  #> $Class.Probability #>           F1 F2  prob #> Profile_1  1  0 0.603 #> Profile_2  0  1 0.397 #>  plot(mod)  plot(mod, profile=TRUE)   # classification based on response patterns fscores(mod2, full.scores = FALSE) #>       Item_1 Item_2 Item_3 Item_4 Item_5    Class_1    Class_2 #>  [1,]      0      0      0      0      0 0.98832539 0.01167461 #>  [2,]      0      0      0      0      1 0.96080421 0.03919579 #>  [3,]      0      0      0      1      0 0.95911420 0.04088580 #>  [4,]      0      0      0      1      1 0.87167305 0.12832695 #>  [5,]      0      0      1      0      0 0.94030147 0.05969853 #>  [6,]      0      0      1      0      1 0.82016986 0.17983014 #>  [7,]      0      0      1      1      0 0.81359256 0.18640744 #>  [8,]      0      0      1      1      1 0.55826672 0.44173328 #>  [9,]      0      1      0      0      0 0.95646627 0.04353373 #> [10,]      0      1      0      0      1 0.86416411 0.13583589 #> [11,]      0      1      0      1      1 0.63805843 0.36194157 #> [12,]      0      1      1      0      1 0.54205358 0.45794642 #> [13,]      0      1      1      1      0 0.53111944 0.46888056 #> [14,]      0      1      1      1      1 0.24698538 0.75301462 #> [15,]      1      0      0      0      0 0.94648118 0.05351882 #> [16,]      1      0      0      0      1 0.83662440 0.16337560 #> [17,]      1      0      0      1      0 0.83052457 0.16947543 #> [18,]      1      0      0      1      1 0.58660671 0.41339329 #> [19,]      1      0      1      0      0 0.76692257 0.23307743 #> [20,]      1      0      1      0      1 0.48790756 0.51209244 #> [21,]      1      0      1      1      0 0.47692814 0.52307186 #> [22,]      1      0      1      1      1 0.20887048 0.79112952 #> [23,]      1      1      0      0      0 0.82110202 0.17889798 #> [24,]      1      1      0      0      1 0.57063375 0.42936625 #> [25,]      1      1      0      1      0 0.55982786 0.44017214 #> [26,]      1      1      0      1      1 0.26915168 0.73084832 #> [27,]      1      1      1      0      0 0.46061404 0.53938596 #> [28,]      1      1      1      0      1 0.19825043 0.80174957 #> [29,]      1      1      1      1      0 0.19135355 0.80864645 #> [30,]      1      1      1      1      1 0.06412585 0.93587415  # classify individuals either with the largest posterior probability..... fs <- fscores(mod2) head(fs) #>     Class_1    Class_2 #> 1 0.9883254 0.01167461 #> 2 0.9883254 0.01167461 #> 3 0.9883254 0.01167461 #> 4 0.9608042 0.03919579 #> 5 0.9608042 0.03919579 #> 6 0.9608042 0.03919579 classes <- 1:2 class_max <- classes[apply(apply(fs, 1, max) == fs, 1, which)] table(class_max) #> class_max #>   1   2  #> 291 709   # ... or by probability sampling (i.e., plausible value draws) class_prob <- apply(fs, 1, function(x) sample(1:2, 1, prob=x)) table(class_prob) #> class_prob #>   1   2  #> 345 655   # plausible value imputations for stochastic classification in both classes pvs <- fscores(mod2, plausible.draws=10) tabs <- lapply(pvs, function(x) apply(x, 2, table)) tabs[[1]] #>   [,1] [,2] #> 0  693  328 #> 1  307  672   # fit with random starting points (run in parallel to save time) if(interactive()) mirtCluster() mod <- mdirt(dat, 2, nruns=10) #> Model log-likelihoods: #>  [1] -2467.406 -2467.408 -2467.408 -2467.408 -2467.408 -2467.408 -2467.408 #>  [8] -2467.408 -2467.408 -2467.408  #-------------------------- # Grade of measurement model  # define a custom Theta grid for including a 'fuzzy' class membership (Theta <- matrix(c(1, 0, .5, .5, 0, 1), nrow=3 , ncol=2, byrow=TRUE)) #>      [,1] [,2] #> [1,]  1.0  0.0 #> [2,]  0.5  0.5 #> [3,]  0.0  1.0 (mod_gom <- mdirt(dat, 2, customTheta = Theta)) #>  #> Warning: EM cycles terminated after 500 iterations. #>  #> Call: #> mdirt(data = dat, model = 2, customTheta = Theta) #>  #> Latent class model with 2 classes and 3 profiles. #> FAILED TO CONVERGE within 1e-04 tolerance after 500 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: nlminb  #> EM acceleration: Ramsay #> Latent density type: discrete #>  #> Log-likelihood = -2466.602 #> Estimated parameters: 12  #> AIC = 4957.205 #> BIC = 5016.098; SABIC = 4977.985 #> G2 (19) = 21.13, p = 0.3298, RMSEA = 0.011 summary(mod_gom) #> $Item_1 #>            category_1 category_2 #> P[1 0]          0.322      0.678 #> P[0.5 0.5]      0.102      0.898 #> P[0 1]          0.026      0.974 #>  #> $Item_2 #>            category_1 category_2 #> P[1 0]          0.692      0.308 #> P[0.5 0.5]      0.386      0.614 #> P[0 1]          0.150      0.850 #>  #> $Item_3 #>            category_1 category_2 #> P[1 0]          0.866      0.134 #> P[0.5 0.5]      0.592      0.408 #> P[0 1]          0.247      0.753 #>  #> $Item_4 #>            category_1 category_2 #> P[1 0]          0.603      0.397 #> P[0.5 0.5]      0.313      0.687 #> P[0 1]          0.120      0.880 #>  #> $Item_5 #>            category_1 category_2 #> P[1 0]          0.398      0.602 #> P[0.5 0.5]      0.171      0.829 #> P[0 1]          0.061      0.939 #>  #> $Class.Probability #>            F1  F2  prob #> Profile_1 1.0 0.0 0.037 #> Profile_2 0.5 0.5 0.513 #> Profile_3 0.0 1.0 0.450 #>   #----------------- # Multidimensional discrete latent class model  dat <- key2binary(SAT12,      key = c(1,4,5,2,3,1,2,1,3,1,2,4,2,1,5,3,4,4,1,4,3,3,4,1,3,5,1,3,1,5,4,5))  # define Theta grid for three latent classes (Theta <- thetaComb(0:1, 3)) #>      [,1] [,2] [,3] #> [1,]    0    0    0 #> [2,]    1    0    0 #> [3,]    0    1    0 #> [4,]    1    1    0 #> [5,]    0    0    1 #> [6,]    1    0    1 #> [7,]    0    1    1 #> [8,]    1    1    1 (mod_discrete <- mdirt(dat, 3, customTheta = Theta)) #>  #>  #> Call: #> mdirt(data = dat, model = 3, customTheta = Theta) #>  #> Latent class model with 3 classes and 8 profiles. #> Converged within 1e-04 tolerance after 142 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: nlminb  #> EM acceleration: Ramsay #> Latent density type: discrete #>  #> Log-likelihood = -9429.715 #> Estimated parameters: 103  #> AIC = 19065.43 #> BIC = 19518.31; SABIC = 19191.32 #> G2 (4294967192) = 11189.71, p = 1, RMSEA = 0 summary(mod_discrete) #> $Item.1 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.868      0.132 #> P[0 1 0]      0.460      0.540 #> P[1 1 0]      0.849      0.151 #> P[0 0 1]      0.341      0.659 #> P[1 0 1]      0.773      0.227 #> P[0 1 1]      0.306      0.694 #> P[1 1 1]      0.744      0.256 #>  #> $Item.2 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.945      0.055 #> P[0 1 0]      0.165      0.835 #> P[1 1 0]      0.774      0.226 #> P[0 0 1]      0.072      0.928 #> P[1 0 1]      0.575      0.425 #> P[0 1 1]      0.015      0.985 #> P[1 1 1]      0.211      0.789 #>  #> $Item.3 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.929      0.071 #> P[0 1 0]      0.337      0.663 #> P[1 1 0]      0.870      0.130 #> P[0 0 1]      0.271      0.729 #> P[1 0 1]      0.830      0.170 #> P[0 1 1]      0.159      0.841 #> P[1 1 1]      0.713      0.287 #>  #> $Item.4 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.844      0.156 #> P[0 1 0]      0.223      0.777 #> P[1 1 0]      0.609      0.391 #> P[0 0 1]      0.428      0.572 #> P[1 0 1]      0.802      0.198 #> P[0 1 1]      0.177      0.823 #> P[1 1 1]      0.538      0.462 #>  #> $Item.5 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.837      0.163 #> P[0 1 0]      0.263      0.737 #> P[1 1 0]      0.647      0.353 #> P[0 0 1]      0.137      0.863 #> P[1 0 1]      0.449      0.551 #> P[0 1 1]      0.053      0.947 #> P[1 1 1]      0.225      0.775 #>  #> $Item.6 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.943      0.057 #> P[0 1 0]      0.334      0.666 #> P[1 1 0]      0.893      0.107 #> P[0 0 1]      0.473      0.527 #> P[1 0 1]      0.937      0.063 #> P[0 1 1]      0.311      0.689 #> P[1 1 1]      0.882      0.118 #>  #> $Item.7 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.766      0.234 #> P[0 1 0]      0.283      0.717 #> P[1 1 0]      0.563      0.437 #> P[0 0 1]      0.088      0.912 #> P[1 0 1]      0.240      0.760 #> P[0 1 1]      0.037      0.963 #> P[1 1 1]      0.111      0.889 #>  #> $Item.8 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.866      0.134 #> P[0 1 0]      0.573      0.427 #> P[1 1 0]      0.897      0.103 #> P[0 0 1]      0.422      0.578 #> P[1 0 1]      0.825      0.175 #> P[0 1 1]      0.495      0.505 #> P[1 1 1]      0.864      0.136 #>  #> $Item.9 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.457      0.543 #> P[0 1 0]      0.252      0.748 #> P[1 1 0]      0.221      0.779 #> P[0 0 1]      0.144      0.856 #> P[1 0 1]      0.124      0.876 #> P[0 1 1]      0.054      0.946 #> P[1 1 1]      0.046      0.954 #>  #> $Item.10 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.904      0.096 #> P[0 1 0]      0.298      0.702 #> P[1 1 0]      0.800      0.200 #> P[0 0 1]      0.189      0.811 #> P[1 0 1]      0.686      0.314 #> P[0 1 1]      0.090      0.910 #> P[1 1 1]      0.482      0.518 #>  #> $Item.11 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.989      0.011 #> P[0 1 0]      0.000      1.000 #> P[1 1 0]      0.039      0.961 #> P[0 0 1]      0.000      1.000 #> P[1 0 1]      0.014      0.986 #> P[0 1 1]      0.000      1.000 #> P[1 1 1]      0.000      1.000 #>  #> $Item.12 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.621      0.379 #> P[0 1 0]      0.434      0.566 #> P[1 1 0]      0.557      0.443 #> P[0 0 1]      0.523      0.477 #> P[1 0 1]      0.643      0.357 #> P[0 1 1]      0.457      0.543 #> P[1 1 1]      0.580      0.420 #>  #> $Item.13 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.849      0.151 #> P[0 1 0]      0.316      0.684 #> P[1 1 0]      0.722      0.278 #> P[0 0 1]      0.087      0.913 #> P[1 0 1]      0.348      0.652 #> P[0 1 1]      0.042      0.958 #> P[1 1 1]      0.198      0.802 #>  #> $Item.14 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.857      0.143 #> P[0 1 0]      0.108      0.892 #> P[1 1 0]      0.421      0.579 #> P[0 0 1]      0.112      0.888 #> P[1 0 1]      0.432      0.568 #> P[0 1 1]      0.015      0.985 #> P[1 1 1]      0.085      0.915 #>  #> $Item.15 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.742      0.258 #> P[0 1 0]      0.289      0.711 #> P[1 1 0]      0.539      0.461 #> P[0 0 1]      0.054      0.946 #> P[1 0 1]      0.141      0.859 #> P[0 1 1]      0.023      0.977 #> P[1 1 1]      0.062      0.938 #>  #> $Item.16 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.846      0.154 #> P[0 1 0]      0.298      0.702 #> P[1 1 0]      0.700      0.300 #> P[0 0 1]      0.315      0.685 #> P[1 0 1]      0.716      0.284 #> P[0 1 1]      0.164      0.836 #> P[1 1 1]      0.517      0.483 #>  #> $Item.17 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.695      0.305 #> P[0 1 0]      0.061      0.939 #> P[1 1 0]      0.130      0.870 #> P[0 0 1]      0.008      0.992 #> P[1 0 1]      0.018      0.982 #> P[0 1 1]      0.001      0.999 #> P[1 1 1]      0.001      0.999 #>  #> $Item.18 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.977      0.023 #> P[0 1 0]      0.217      0.783 #> P[1 1 0]      0.922      0.078 #> P[0 0 1]      0.090      0.910 #> P[1 0 1]      0.808      0.192 #> P[0 1 1]      0.027      0.973 #> P[1 1 1]      0.539      0.461 #>  #> $Item.19 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.830      0.170 #> P[0 1 0]      0.291      0.709 #> P[1 1 0]      0.668      0.332 #> P[0 0 1]      0.200      0.800 #> P[1 0 1]      0.550      0.450 #> P[0 1 1]      0.093      0.907 #> P[1 1 1]      0.334      0.666 #>  #> $Item.20 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.918      0.082 #> P[0 1 0]      0.038      0.962 #> P[1 1 0]      0.306      0.694 #> P[0 0 1]      0.017      0.983 #> P[1 0 1]      0.164      0.836 #> P[0 1 1]      0.001      0.999 #> P[1 1 1]      0.008      0.992 #>  #> $Item.21 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.434      0.566 #> P[0 1 0]      0.223      0.777 #> P[1 1 0]      0.180      0.820 #> P[0 0 1]      0.110      0.890 #> P[1 0 1]      0.086      0.914 #> P[0 1 1]      0.034      0.966 #> P[1 1 1]      0.026      0.974 #>  #> $Item.22 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.997      0.003 #> P[0 1 0]      0.001      0.999 #> P[1 1 0]      0.209      0.791 #> P[0 0 1]      0.000      1.000 #> P[1 0 1]      0.055      0.945 #> P[0 1 1]      0.000      1.000 #> P[1 1 1]      0.000      1.000 #>  #> $Item.23 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.864      0.136 #> P[0 1 0]      0.284      0.716 #> P[1 1 0]      0.717      0.283 #> P[0 0 1]      0.422      0.578 #> P[1 0 1]      0.823      0.177 #> P[0 1 1]      0.225      0.775 #> P[1 1 1]      0.649      0.351 #>  #> $Item.24 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.825      0.175 #> P[0 1 0]      0.300      0.700 #> P[1 1 0]      0.668      0.332 #> P[0 0 1]      0.068      0.932 #> P[1 0 1]      0.256      0.744 #> P[0 1 1]      0.030      0.970 #> P[1 1 1]      0.129      0.871 #>  #> $Item.25 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.869      0.131 #> P[0 1 0]      0.350      0.650 #> P[1 1 0]      0.782      0.218 #> P[0 0 1]      0.280      0.720 #> P[1 0 1]      0.721      0.279 #> P[0 1 1]      0.174      0.826 #> P[1 1 1]      0.583      0.417 #>  #> $Item.26 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.967      0.033 #> P[0 1 0]      0.140      0.860 #> P[1 1 0]      0.825      0.175 #> P[0 0 1]      0.093      0.907 #> P[1 0 1]      0.748      0.252 #> P[0 1 1]      0.016      0.984 #> P[1 1 1]      0.326      0.674 #>  #> $Item.27 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.839      0.161 #> P[0 1 0]      0.136      0.864 #> P[1 1 0]      0.451      0.549 #> P[0 0 1]      0.023      0.977 #> P[1 0 1]      0.110      0.890 #> P[0 1 1]      0.004      0.996 #> P[1 1 1]      0.019      0.981 #>  #> $Item.28 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.888      0.112 #> P[0 1 0]      0.222      0.778 #> P[1 1 0]      0.693      0.307 #> P[0 0 1]      0.163      0.837 #> P[1 0 1]      0.606      0.394 #> P[0 1 1]      0.053      0.947 #> P[1 1 1]      0.305      0.695 #>  #> $Item.29 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.893      0.107 #> P[0 1 0]      0.292      0.708 #> P[1 1 0]      0.774      0.226 #> P[0 0 1]      0.323      0.677 #> P[1 0 1]      0.799      0.201 #> P[0 1 1]      0.164      0.836 #> P[1 1 1]      0.620      0.380 #>  #> $Item.30 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.698      0.302 #> P[0 1 0]      0.455      0.545 #> P[1 1 0]      0.659      0.341 #> P[0 0 1]      0.378      0.622 #> P[1 0 1]      0.584      0.416 #> P[0 1 1]      0.336      0.664 #> P[1 1 1]      0.540      0.460 #>  #> $Item.31 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.977      0.023 #> P[0 1 0]      0.024      0.976 #> P[1 1 0]      0.509      0.491 #> P[0 0 1]      0.005      0.995 #> P[1 0 1]      0.166      0.834 #> P[0 1 1]      0.000      1.000 #> P[1 1 1]      0.005      0.995 #>  #> $Item.32 #>          category_1 category_2 #> P[0 0 0]      0.500      0.500 #> P[1 0 0]      0.728      0.272 #> P[0 1 0]      0.568      0.432 #> P[1 1 0]      0.779      0.221 #> P[0 0 1]      0.702      0.298 #> P[1 0 1]      0.863      0.137 #> P[0 1 1]      0.755      0.245 #> P[1 1 1]      0.892      0.108 #>  #> $Class.Probability #>           F1 F2 F3  prob #> Profile_1  0  0  0 0.000 #> Profile_2  1  0  0 0.004 #> Profile_3  0  1  0 0.002 #> Profile_4  1  1  0 0.194 #> Profile_5  0  0  1 0.084 #> Profile_6  1  0  1 0.368 #> Profile_7  0  1  1 0.058 #> Profile_8  1  1  1 0.290 #>   # Located latent class model model <- mirt.model('C1 = 1-32                      C2 = 1-32                      C3 = 1-32                      CONSTRAIN = (1-32, a1), (1-32, a2), (1-32, a3)') (mod_located <- mdirt(dat, model, customTheta = diag(3))) #>  #>  #> Call: #> mdirt(data = dat, model = model, customTheta = diag(3)) #>  #> Latent class model with 3 classes and 3 profiles. #> Converged within 1e-04 tolerance after 364 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: nlminb  #> EM acceleration: Ramsay #> Latent density type: discrete #>  #> Log-likelihood = -12771.08 #> Estimated parameters: 5  #> AIC = 25552.15 #> BIC = 25574.14; SABIC = 25558.26 #> G2 (4294967290) = 17872.43, p = 1, RMSEA = 0 summary(mod_located) #> $Item.1 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.2 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.3 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.4 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.5 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.6 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.7 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.8 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.9 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.10 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.11 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.12 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.13 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.14 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.15 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.16 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.17 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.18 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.19 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.20 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.21 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.22 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.23 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.24 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.25 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.26 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.27 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.28 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.29 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.30 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.31 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Item.32 #>          category_1 category_2 #> P[1 0 0]      0.578      0.422 #> P[0 1 0]      0.410      0.590 #> P[0 0 1]      0.190      0.810 #>  #> $Class.Probability #>           C1 C2 C3  prob #> Profile_1  1  0  0 0.339 #> Profile_2  0  1  0 0.498 #> Profile_3  0  0  1 0.164 #>   #----------------- ### DINA model example # generate some suitable data for a two dimensional DINA application #     (first columns are intercepts) set.seed(1) Theta <- expand.table(matrix(c(1,0,0,0,                                1,1,0,0,                                1,0,1,0,                                1,1,1,1), 4, 4, byrow=TRUE),                       freq = c(200,200,100,500)) a <- matrix(c(rnorm(15, -1.5, .5), rlnorm(5, .2, .3), numeric(15), rlnorm(5, .2, .3),               numeric(15), rlnorm(5, .2, .3)), 15, 4)  guess <- plogis(a[11:15,1]) # population guess slip <- 1 - plogis(rowSums(a[11:15,])) # population slip  dat <- simdata(a, Theta=Theta, itemtype = 'lca')  # first column is the intercept, 2nd and 3rd are attributes theta <- cbind(1, thetaComb(0:1, 2)) theta <- cbind(theta, theta[,2] * theta[,3]) #DINA interaction of main attributes model <- mirt.model('Intercept = 1-15                      A1 = 1-5                      A2 = 6-10                      A1A2 = 11-15')  # last 5 items are DINA (first 10 are unidimensional C-RUMs) DINA <- mdirt(dat, model, customTheta = theta) #>  coef(DINA, simplify=TRUE) #> $items #>             a1    a2    a3    a4 #> Item_1  -1.630 1.115 0.000 0.000 #> Item_2  -1.052 0.841 0.000 0.000 #> Item_3  -1.582 1.271 0.000 0.000 #> Item_4  -0.388 1.229 0.000 0.000 #> Item_5  -1.054 1.340 0.000 0.000 #> Item_6  -2.569 0.000 2.500 0.000 #> Item_7  -1.100 0.000 1.435 0.000 #> Item_8  -1.103 0.000 1.054 0.000 #> Item_9  -1.474 0.000 1.041 0.000 #> Item_10 -1.620 0.000 1.359 0.000 #> Item_11 -0.542 0.000 0.000 0.997 #> Item_12 -1.584 0.000 0.000 1.609 #> Item_13 -1.881 0.000 0.000 0.934 #> Item_14 -2.663 0.000 0.000 0.912 #> Item_15 -0.813 0.000 0.000 1.005 #>  #> $group.intercepts #>         c1    c2     c3 #> par -0.545 -1.53 -1.468 #>  summary(DINA) #> $Item_1 #>            category_1 category_2 #> P[1 0 0 0]      0.836      0.164 #> P[1 1 0 0]      0.626      0.374 #> P[1 0 1 0]      0.836      0.164 #> P[1 1 1 1]      0.626      0.374 #>  #> $Item_2 #>            category_1 category_2 #> P[1 0 0 0]      0.741      0.259 #> P[1 1 0 0]      0.553      0.447 #> P[1 0 1 0]      0.741      0.259 #> P[1 1 1 1]      0.553      0.447 #>  #> $Item_3 #>            category_1 category_2 #> P[1 0 0 0]      0.829      0.171 #> P[1 1 0 0]      0.577      0.423 #> P[1 0 1 0]      0.829      0.171 #> P[1 1 1 1]      0.577      0.423 #>  #> $Item_4 #>            category_1 category_2 #> P[1 0 0 0]      0.596      0.404 #> P[1 1 0 0]      0.301      0.699 #> P[1 0 1 0]      0.596      0.404 #> P[1 1 1 1]      0.301      0.699 #>  #> $Item_5 #>            category_1 category_2 #> P[1 0 0 0]      0.742      0.258 #> P[1 1 0 0]      0.429      0.571 #> P[1 0 1 0]      0.742      0.258 #> P[1 1 1 1]      0.429      0.571 #>  #> $Item_6 #>            category_1 category_2 #> P[1 0 0 0]      0.929      0.071 #> P[1 1 0 0]      0.929      0.071 #> P[1 0 1 0]      0.517      0.483 #> P[1 1 1 1]      0.517      0.483 #>  #> $Item_7 #>            category_1 category_2 #> P[1 0 0 0]      0.750      0.250 #> P[1 1 0 0]      0.750      0.250 #> P[1 0 1 0]      0.417      0.583 #> P[1 1 1 1]      0.417      0.583 #>  #> $Item_8 #>            category_1 category_2 #> P[1 0 0 0]      0.751      0.249 #> P[1 1 0 0]      0.751      0.249 #> P[1 0 1 0]      0.512      0.488 #> P[1 1 1 1]      0.512      0.488 #>  #> $Item_9 #>            category_1 category_2 #> P[1 0 0 0]      0.814      0.186 #> P[1 1 0 0]      0.814      0.186 #> P[1 0 1 0]      0.607      0.393 #> P[1 1 1 1]      0.607      0.393 #>  #> $Item_10 #>            category_1 category_2 #> P[1 0 0 0]      0.835      0.165 #> P[1 1 0 0]      0.835      0.165 #> P[1 0 1 0]      0.565      0.435 #> P[1 1 1 1]      0.565      0.435 #>  #> $Item_11 #>            category_1 category_2 #> P[1 0 0 0]      0.632      0.368 #> P[1 1 0 0]      0.632      0.368 #> P[1 0 1 0]      0.632      0.368 #> P[1 1 1 1]      0.388      0.612 #>  #> $Item_12 #>            category_1 category_2 #> P[1 0 0 0]      0.830      0.170 #> P[1 1 0 0]      0.830      0.170 #> P[1 0 1 0]      0.830      0.170 #> P[1 1 1 1]      0.494      0.506 #>  #> $Item_13 #>            category_1 category_2 #> P[1 0 0 0]      0.868      0.132 #> P[1 1 0 0]      0.868      0.132 #> P[1 0 1 0]      0.868      0.132 #> P[1 1 1 1]      0.720      0.280 #>  #> $Item_14 #>            category_1 category_2 #> P[1 0 0 0]      0.935      0.065 #> P[1 1 0 0]      0.935      0.065 #> P[1 0 1 0]      0.935      0.065 #> P[1 1 1 1]      0.852      0.148 #>  #> $Item_15 #>            category_1 category_2 #> P[1 0 0 0]      0.693      0.307 #> P[1 1 0 0]      0.693      0.307 #> P[1 0 1 0]      0.693      0.307 #> P[1 1 1 1]      0.452      0.548 #>  #> $Class.Probability #>           Intercept A1 A2 A1A2  prob #> Profile_1         1  0  0    0 0.286 #> Profile_2         1  1  0    0 0.107 #> Profile_3         1  0  1    0 0.114 #> Profile_4         1  1  1    1 0.493 #>  M2(DINA) # fits well (as it should) #>             M2 df         p      RMSEA RMSEA_5   RMSEA_95      SRMSR       TLI #> stats 96.49206 87 0.2281074 0.01045052       0 0.02080658 0.02972262 0.9655028 #>             CFI #> stats 0.9714166  cfs <- coef(DINA, simplify=TRUE)$items[11:15,] cbind(guess, estguess = plogis(cfs[,1])) #>              guess   estguess #> Item_11 0.32210618 0.36762331 #> Item_12 0.21331157 0.17019244 #> Item_13 0.14056317 0.13232904 #> Item_14 0.06866689 0.06517149 #> Item_15 0.28139862 0.30727217 cbind(slip, estslip = 1 - plogis(rowSums(cfs))) #>              slip   estslip #> Item_11 0.3877218 0.3883873 #> Item_12 0.5348058 0.4937323 #> Item_13 0.7359368 0.7203743 #> Item_14 0.8247931 0.8520713 #> Item_15 0.3900682 0.4520799   ### DINO model example theta <- cbind(1, thetaComb(0:1, 2)) # define theta matrix with negative interaction term (theta <- cbind(theta, -theta[,2] * theta[,3])) #>      [,1] [,2] [,3] [,4] #> [1,]    1    0    0    0 #> [2,]    1    1    0    0 #> [3,]    1    0    1    0 #> [4,]    1    1    1   -1  model <- mirt.model('Intercept = 1-15                      A1 = 1-5, 11-15                      A2 = 6-15                      Yoshi = 11-15                      CONSTRAIN = (11,a2,a3,a4), (12,a2,a3,a4), (13,a2,a3,a4),                                  (14,a2,a3,a4), (15,a2,a3,a4)')  # last five items are DINOs (first 10 are unidimensional C-RUMs) DINO <- mdirt(dat, model, customTheta = theta) #>  coef(DINO, simplify=TRUE) #> $items #>             a1     a2    a3    a4 #> Item_1  -0.742 -1.828 0.000 0.000 #> Item_2  -0.402 -1.136 0.000 0.000 #> Item_3  -0.548 -3.194 0.000 0.000 #> Item_4   0.579 -2.116 0.000 0.000 #> Item_5  -0.046 -1.620 0.000 0.000 #> Item_6  -2.818  0.000 2.659 0.000 #> Item_7  -1.187  0.000 1.457 0.000 #> Item_8  -1.154  0.000 1.055 0.000 #> Item_9  -1.583  0.000 1.121 0.000 #> Item_10 -1.736  0.000 1.427 0.000 #> Item_11 -0.937  1.163 1.163 1.163 #> Item_12 -1.957  1.577 1.577 1.577 #> Item_13 -2.088  0.915 0.915 0.915 #> Item_14 -3.713  1.840 1.840 1.840 #> Item_15 -1.130  1.075 1.075 1.075 #>  #> $group.intercepts #>        c1    c2    c3 #> par 2.029 1.084 2.947 #>  summary(DINO) #> $Item_1 #>             category_1 category_2 #> P[1 0 0 0]       0.678      0.322 #> P[1 1 0 0]       0.929      0.071 #> P[1 0 1 0]       0.678      0.322 #> P[1 1 1 -1]      0.929      0.071 #>  #> $Item_2 #>             category_1 category_2 #> P[1 0 0 0]       0.599      0.401 #> P[1 1 0 0]       0.823      0.177 #> P[1 0 1 0]       0.599      0.401 #> P[1 1 1 -1]      0.823      0.177 #>  #> $Item_3 #>             category_1 category_2 #> P[1 0 0 0]       0.634      0.366 #> P[1 1 0 0]       0.977      0.023 #> P[1 0 1 0]       0.634      0.366 #> P[1 1 1 -1]      0.977      0.023 #>  #> $Item_4 #>             category_1 category_2 #> P[1 0 0 0]       0.359      0.641 #> P[1 1 0 0]       0.823      0.177 #> P[1 0 1 0]       0.359      0.641 #> P[1 1 1 -1]      0.823      0.177 #>  #> $Item_5 #>             category_1 category_2 #> P[1 0 0 0]       0.511      0.489 #> P[1 1 0 0]       0.841      0.159 #> P[1 0 1 0]       0.511      0.489 #> P[1 1 1 -1]      0.841      0.159 #>  #> $Item_6 #>             category_1 category_2 #> P[1 0 0 0]       0.944      0.056 #> P[1 1 0 0]       0.944      0.056 #> P[1 0 1 0]       0.540      0.460 #> P[1 1 1 -1]      0.540      0.460 #>  #> $Item_7 #>             category_1 category_2 #> P[1 0 0 0]       0.766      0.234 #> P[1 1 0 0]       0.766      0.234 #> P[1 0 1 0]       0.433      0.567 #> P[1 1 1 -1]      0.433      0.567 #>  #> $Item_8 #>             category_1 category_2 #> P[1 0 0 0]       0.760      0.240 #> P[1 1 0 0]       0.760      0.240 #> P[1 0 1 0]       0.525      0.475 #> P[1 1 1 -1]      0.525      0.475 #>  #> $Item_9 #>             category_1 category_2 #> P[1 0 0 0]       0.830      0.170 #> P[1 1 0 0]       0.830      0.170 #> P[1 0 1 0]       0.613      0.387 #> P[1 1 1 -1]      0.613      0.387 #>  #> $Item_10 #>             category_1 category_2 #> P[1 0 0 0]       0.850      0.150 #> P[1 1 0 0]       0.850      0.150 #> P[1 0 1 0]       0.577      0.423 #> P[1 1 1 -1]      0.577      0.423 #>  #> $Item_11 #>             category_1 category_2 #> P[1 0 0 0]       0.718      0.282 #> P[1 1 0 0]       0.444      0.556 #> P[1 0 1 0]       0.444      0.556 #> P[1 1 1 -1]      0.444      0.556 #>  #> $Item_12 #>             category_1 category_2 #> P[1 0 0 0]       0.876      0.124 #> P[1 1 0 0]       0.594      0.406 #> P[1 0 1 0]       0.594      0.406 #> P[1 1 1 -1]      0.594      0.406 #>  #> $Item_13 #>             category_1 category_2 #> P[1 0 0 0]       0.890      0.110 #> P[1 1 0 0]       0.764      0.236 #> P[1 0 1 0]       0.764      0.236 #> P[1 1 1 -1]      0.764      0.236 #>  #> $Item_14 #>             category_1 category_2 #> P[1 0 0 0]       0.976      0.024 #> P[1 1 0 0]       0.867      0.133 #> P[1 0 1 0]       0.867      0.133 #> P[1 1 1 -1]      0.867      0.133 #>  #> $Item_15 #>             category_1 category_2 #> P[1 0 0 0]       0.756      0.244 #> P[1 1 0 0]       0.514      0.486 #> P[1 0 1 0]       0.514      0.486 #> P[1 1 1 -1]      0.514      0.486 #>  #> $Class.Probability #>           Intercept A1 A2 Yoshi  prob #> Profile_1         1  0  0     0 0.249 #> Profile_2         1  1  0     0 0.097 #> Profile_3         1  0  1     0 0.622 #> Profile_4         1  1  1    -1 0.033 #>  M2(DINO) #doesn't fit as well, because not the generating model #>            M2 df           p      RMSEA    RMSEA_5   RMSEA_95      SRMSR #> stats 146.478 87 6.93916e-05 0.02615988 0.01856199 0.03336756 0.04140113 #>             TLI       CFI #> stats 0.7838382 0.8208945  ## C-RUM (analogous to MIRT model) theta <- cbind(1, thetaComb(0:1, 2)) model <- mirt.model('Intercept = 1-15                      A1 = 1-5, 11-15                      A2 = 6-15')  CRUM <- mdirt(dat, model, customTheta = theta) #>  coef(CRUM, simplify=TRUE) #> $items #>             a1     a2    a3 #> Item_1  -1.405  0.996 0.000 #> Item_2  -0.950  0.876 0.000 #> Item_3  -1.328  1.145 0.000 #> Item_4  -0.235  1.309 0.000 #> Item_5  -0.855  1.342 0.000 #> Item_6  -2.592  0.000 2.479 #> Item_7  -1.095  0.000 1.388 #> Item_8  -1.127  0.000 1.061 #> Item_9  -1.505  0.000 1.058 #> Item_10 -1.674  0.000 1.399 #> Item_11 -0.589  0.491 0.500 #> Item_12 -1.730  1.049 0.743 #> Item_13 -2.052  0.255 0.820 #> Item_14 -3.276 -0.695 1.963 #> Item_15 -0.989 -0.008 1.069 #>  #> $group.intercepts #>         c1     c2     c3 #> par -0.225 -2.397 -0.726 #>  summary(CRUM) #> $Item_1 #>          category_1 category_2 #> P[1 0 0]      0.803      0.197 #> P[1 1 0]      0.601      0.399 #> P[1 0 1]      0.803      0.197 #> P[1 1 1]      0.601      0.399 #>  #> $Item_2 #>          category_1 category_2 #> P[1 0 0]      0.721      0.279 #> P[1 1 0]      0.519      0.481 #> P[1 0 1]      0.721      0.279 #> P[1 1 1]      0.519      0.481 #>  #> $Item_3 #>          category_1 category_2 #> P[1 0 0]      0.791      0.209 #> P[1 1 0]      0.546      0.454 #> P[1 0 1]      0.791      0.209 #> P[1 1 1]      0.546      0.454 #>  #> $Item_4 #>          category_1 category_2 #> P[1 0 0]      0.559      0.441 #> P[1 1 0]      0.255      0.745 #> P[1 0 1]      0.559      0.441 #> P[1 1 1]      0.255      0.745 #>  #> $Item_5 #>          category_1 category_2 #> P[1 0 0]      0.702      0.298 #> P[1 1 0]      0.381      0.619 #> P[1 0 1]      0.702      0.298 #> P[1 1 1]      0.381      0.619 #>  #> $Item_6 #>          category_1 category_2 #> P[1 0 0]      0.930      0.070 #> P[1 1 0]      0.930      0.070 #> P[1 0 1]      0.528      0.472 #> P[1 1 1]      0.528      0.472 #>  #> $Item_7 #>          category_1 category_2 #> P[1 0 0]      0.749      0.251 #> P[1 1 0]      0.749      0.251 #> P[1 0 1]      0.427      0.573 #> P[1 1 1]      0.427      0.573 #>  #> $Item_8 #>          category_1 category_2 #> P[1 0 0]      0.755      0.245 #> P[1 1 0]      0.755      0.245 #> P[1 0 1]      0.517      0.483 #> P[1 1 1]      0.517      0.483 #>  #> $Item_9 #>          category_1 category_2 #> P[1 0 0]      0.818      0.182 #> P[1 1 0]      0.818      0.182 #> P[1 0 1]      0.610      0.390 #> P[1 1 1]      0.610      0.390 #>  #> $Item_10 #>          category_1 category_2 #> P[1 0 0]      0.842      0.158 #> P[1 1 0]      0.842      0.158 #> P[1 0 1]      0.568      0.432 #> P[1 1 1]      0.568      0.432 #>  #> $Item_11 #>          category_1 category_2 #> P[1 0 0]      0.643      0.357 #> P[1 1 0]      0.525      0.475 #> P[1 0 1]      0.522      0.478 #> P[1 1 1]      0.401      0.599 #>  #> $Item_12 #>          category_1 category_2 #> P[1 0 0]      0.849      0.151 #> P[1 1 0]      0.664      0.336 #> P[1 0 1]      0.729      0.271 #> P[1 1 1]      0.485      0.515 #>  #> $Item_13 #>          category_1 category_2 #> P[1 0 0]      0.886      0.114 #> P[1 1 0]      0.858      0.142 #> P[1 0 1]      0.774      0.226 #> P[1 1 1]      0.727      0.273 #>  #> $Item_14 #>          category_1 category_2 #> P[1 0 0]      0.964      0.036 #> P[1 1 0]      0.981      0.019 #> P[1 0 1]      0.788      0.212 #> P[1 1 1]      0.882      0.118 #>  #> $Item_15 #>          category_1 category_2 #> P[1 0 0]      0.729      0.271 #> P[1 1 0]      0.730      0.270 #> P[1 0 1]      0.480      0.520 #> P[1 1 1]      0.482      0.518 #>  #> $Class.Probability #>           Intercept A1 A2  prob #> Profile_1         1  0  0 0.337 #> Profile_2         1  1  0 0.038 #> Profile_3         1  0  1 0.204 #> Profile_4         1  1  1 0.421 #>   # good fit, but over-saturated (main effects for items 11-15 can be set to 0) M2(CRUM) #>            M2 df         p       RMSEA RMSEA_5   RMSEA_95      SRMSR       TLI #> stats 85.5485 82 0.3725544 0.006581616       0 0.01905772 0.02788709 0.9863173 #>             CFI #> stats 0.9893144  #------------------ # multidimensional latent class model  dat <- key2binary(SAT12,      key = c(1,4,5,2,3,1,2,1,3,1,2,4,2,1,5,3,4,4,1,4,3,3,4,1,3,5,1,3,1,5,4,5))  # 5 latent classes within 2 different sets of items model <- mirt.model('C1 = 1-16                      C2 = 1-16                      C3 = 1-16                      C4 = 1-16                      C5 = 1-16                      C6 = 17-32                      C7 = 17-32                      C8 = 17-32                      C9 = 17-32                      C10 = 17-32                      CONSTRAIN = (1-16, a1), (1-16, a2), (1-16, a3), (1-16, a4), (1-16, a5),                        (17-32, a6), (17-32, a7), (17-32, a8), (17-32, a9), (17-32, a10)')  theta <- diag(10) # defined explicitly. Otherwise, this profile is assumed mod <- mdirt(dat, model, customTheta = theta) #>  coef(mod, simplify=TRUE) #> $items #>             a1     a2     a3     a4     a5   a6    a7    a8    a9   a10 #> Item.1  -0.921 -0.679 -0.574 -0.542 -0.363 0.00 0.000 0.000 0.000 0.000 #> Item.2  -0.921 -0.679 -0.574 -0.542 -0.363 0.00 0.000 0.000 0.000 0.000 #> Item.3  -0.921 -0.679 -0.574 -0.542 -0.363 0.00 0.000 0.000 0.000 0.000 #> Item.4  -0.921 -0.679 -0.574 -0.542 -0.363 0.00 0.000 0.000 0.000 0.000 #> Item.5  -0.921 -0.679 -0.574 -0.542 -0.363 0.00 0.000 0.000 0.000 0.000 #> Item.6  -0.921 -0.679 -0.574 -0.542 -0.363 0.00 0.000 0.000 0.000 0.000 #> Item.7  -0.921 -0.679 -0.574 -0.542 -0.363 0.00 0.000 0.000 0.000 0.000 #> Item.8  -0.921 -0.679 -0.574 -0.542 -0.363 0.00 0.000 0.000 0.000 0.000 #> Item.9  -0.921 -0.679 -0.574 -0.542 -0.363 0.00 0.000 0.000 0.000 0.000 #> Item.10 -0.921 -0.679 -0.574 -0.542 -0.363 0.00 0.000 0.000 0.000 0.000 #> Item.11 -0.921 -0.679 -0.574 -0.542 -0.363 0.00 0.000 0.000 0.000 0.000 #> Item.12 -0.921 -0.679 -0.574 -0.542 -0.363 0.00 0.000 0.000 0.000 0.000 #> Item.13 -0.921 -0.679 -0.574 -0.542 -0.363 0.00 0.000 0.000 0.000 0.000 #> Item.14 -0.921 -0.679 -0.574 -0.542 -0.363 0.00 0.000 0.000 0.000 0.000 #> Item.15 -0.921 -0.679 -0.574 -0.542 -0.363 0.00 0.000 0.000 0.000 0.000 #> Item.16 -0.921 -0.679 -0.574 -0.542 -0.363 0.00 0.000 0.000 0.000 0.000 #> Item.17  0.000  0.000  0.000  0.000  0.000 0.31 0.443 1.389 1.396 1.419 #> Item.18  0.000  0.000  0.000  0.000  0.000 0.31 0.443 1.389 1.396 1.419 #> Item.19  0.000  0.000  0.000  0.000  0.000 0.31 0.443 1.389 1.396 1.419 #> Item.20  0.000  0.000  0.000  0.000  0.000 0.31 0.443 1.389 1.396 1.419 #> Item.21  0.000  0.000  0.000  0.000  0.000 0.31 0.443 1.389 1.396 1.419 #> Item.22  0.000  0.000  0.000  0.000  0.000 0.31 0.443 1.389 1.396 1.419 #> Item.23  0.000  0.000  0.000  0.000  0.000 0.31 0.443 1.389 1.396 1.419 #> Item.24  0.000  0.000  0.000  0.000  0.000 0.31 0.443 1.389 1.396 1.419 #> Item.25  0.000  0.000  0.000  0.000  0.000 0.31 0.443 1.389 1.396 1.419 #> Item.26  0.000  0.000  0.000  0.000  0.000 0.31 0.443 1.389 1.396 1.419 #> Item.27  0.000  0.000  0.000  0.000  0.000 0.31 0.443 1.389 1.396 1.419 #> Item.28  0.000  0.000  0.000  0.000  0.000 0.31 0.443 1.389 1.396 1.419 #> Item.29  0.000  0.000  0.000  0.000  0.000 0.31 0.443 1.389 1.396 1.419 #> Item.30  0.000  0.000  0.000  0.000  0.000 0.31 0.443 1.389 1.396 1.419 #> Item.31  0.000  0.000  0.000  0.000  0.000 0.31 0.443 1.389 1.396 1.419 #> Item.32  0.000  0.000  0.000  0.000  0.000 0.31 0.443 1.389 1.396 1.419 #>  #> $group.intercepts #>         c1     c2    c3    c4    c5    c6    c7    c8    c9 #> par -2.737 -1.478 0.137 1.489 2.185 2.882 2.315 2.144 1.112 #>  summary(mod) #> $Item.1 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.715      0.285 #> P[0 1 0 0 0 0 0 0 0 0]      0.663      0.337 #> P[0 0 1 0 0 0 0 0 0 0]      0.640      0.360 #> P[0 0 0 1 0 0 0 0 0 0]      0.632      0.368 #> P[0 0 0 0 1 0 0 0 0 0]      0.590      0.410 #> P[0 0 0 0 0 1 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 1 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 1 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 1 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 0 1]      0.500      0.500 #>  #> $Item.2 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.715      0.285 #> P[0 1 0 0 0 0 0 0 0 0]      0.663      0.337 #> P[0 0 1 0 0 0 0 0 0 0]      0.640      0.360 #> P[0 0 0 1 0 0 0 0 0 0]      0.632      0.368 #> P[0 0 0 0 1 0 0 0 0 0]      0.590      0.410 #> P[0 0 0 0 0 1 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 1 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 1 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 1 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 0 1]      0.500      0.500 #>  #> $Item.3 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.715      0.285 #> P[0 1 0 0 0 0 0 0 0 0]      0.663      0.337 #> P[0 0 1 0 0 0 0 0 0 0]      0.640      0.360 #> P[0 0 0 1 0 0 0 0 0 0]      0.632      0.368 #> P[0 0 0 0 1 0 0 0 0 0]      0.590      0.410 #> P[0 0 0 0 0 1 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 1 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 1 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 1 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 0 1]      0.500      0.500 #>  #> $Item.4 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.715      0.285 #> P[0 1 0 0 0 0 0 0 0 0]      0.663      0.337 #> P[0 0 1 0 0 0 0 0 0 0]      0.640      0.360 #> P[0 0 0 1 0 0 0 0 0 0]      0.632      0.368 #> P[0 0 0 0 1 0 0 0 0 0]      0.590      0.410 #> P[0 0 0 0 0 1 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 1 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 1 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 1 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 0 1]      0.500      0.500 #>  #> $Item.5 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.715      0.285 #> P[0 1 0 0 0 0 0 0 0 0]      0.663      0.337 #> P[0 0 1 0 0 0 0 0 0 0]      0.640      0.360 #> P[0 0 0 1 0 0 0 0 0 0]      0.632      0.368 #> P[0 0 0 0 1 0 0 0 0 0]      0.590      0.410 #> P[0 0 0 0 0 1 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 1 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 1 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 1 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 0 1]      0.500      0.500 #>  #> $Item.6 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.715      0.285 #> P[0 1 0 0 0 0 0 0 0 0]      0.663      0.337 #> P[0 0 1 0 0 0 0 0 0 0]      0.640      0.360 #> P[0 0 0 1 0 0 0 0 0 0]      0.632      0.368 #> P[0 0 0 0 1 0 0 0 0 0]      0.590      0.410 #> P[0 0 0 0 0 1 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 1 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 1 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 1 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 0 1]      0.500      0.500 #>  #> $Item.7 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.715      0.285 #> P[0 1 0 0 0 0 0 0 0 0]      0.663      0.337 #> P[0 0 1 0 0 0 0 0 0 0]      0.640      0.360 #> P[0 0 0 1 0 0 0 0 0 0]      0.632      0.368 #> P[0 0 0 0 1 0 0 0 0 0]      0.590      0.410 #> P[0 0 0 0 0 1 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 1 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 1 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 1 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 0 1]      0.500      0.500 #>  #> $Item.8 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.715      0.285 #> P[0 1 0 0 0 0 0 0 0 0]      0.663      0.337 #> P[0 0 1 0 0 0 0 0 0 0]      0.640      0.360 #> P[0 0 0 1 0 0 0 0 0 0]      0.632      0.368 #> P[0 0 0 0 1 0 0 0 0 0]      0.590      0.410 #> P[0 0 0 0 0 1 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 1 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 1 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 1 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 0 1]      0.500      0.500 #>  #> $Item.9 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.715      0.285 #> P[0 1 0 0 0 0 0 0 0 0]      0.663      0.337 #> P[0 0 1 0 0 0 0 0 0 0]      0.640      0.360 #> P[0 0 0 1 0 0 0 0 0 0]      0.632      0.368 #> P[0 0 0 0 1 0 0 0 0 0]      0.590      0.410 #> P[0 0 0 0 0 1 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 1 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 1 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 1 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 0 1]      0.500      0.500 #>  #> $Item.10 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.715      0.285 #> P[0 1 0 0 0 0 0 0 0 0]      0.663      0.337 #> P[0 0 1 0 0 0 0 0 0 0]      0.640      0.360 #> P[0 0 0 1 0 0 0 0 0 0]      0.632      0.368 #> P[0 0 0 0 1 0 0 0 0 0]      0.590      0.410 #> P[0 0 0 0 0 1 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 1 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 1 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 1 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 0 1]      0.500      0.500 #>  #> $Item.11 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.715      0.285 #> P[0 1 0 0 0 0 0 0 0 0]      0.663      0.337 #> P[0 0 1 0 0 0 0 0 0 0]      0.640      0.360 #> P[0 0 0 1 0 0 0 0 0 0]      0.632      0.368 #> P[0 0 0 0 1 0 0 0 0 0]      0.590      0.410 #> P[0 0 0 0 0 1 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 1 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 1 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 1 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 0 1]      0.500      0.500 #>  #> $Item.12 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.715      0.285 #> P[0 1 0 0 0 0 0 0 0 0]      0.663      0.337 #> P[0 0 1 0 0 0 0 0 0 0]      0.640      0.360 #> P[0 0 0 1 0 0 0 0 0 0]      0.632      0.368 #> P[0 0 0 0 1 0 0 0 0 0]      0.590      0.410 #> P[0 0 0 0 0 1 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 1 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 1 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 1 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 0 1]      0.500      0.500 #>  #> $Item.13 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.715      0.285 #> P[0 1 0 0 0 0 0 0 0 0]      0.663      0.337 #> P[0 0 1 0 0 0 0 0 0 0]      0.640      0.360 #> P[0 0 0 1 0 0 0 0 0 0]      0.632      0.368 #> P[0 0 0 0 1 0 0 0 0 0]      0.590      0.410 #> P[0 0 0 0 0 1 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 1 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 1 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 1 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 0 1]      0.500      0.500 #>  #> $Item.14 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.715      0.285 #> P[0 1 0 0 0 0 0 0 0 0]      0.663      0.337 #> P[0 0 1 0 0 0 0 0 0 0]      0.640      0.360 #> P[0 0 0 1 0 0 0 0 0 0]      0.632      0.368 #> P[0 0 0 0 1 0 0 0 0 0]      0.590      0.410 #> P[0 0 0 0 0 1 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 1 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 1 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 1 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 0 1]      0.500      0.500 #>  #> $Item.15 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.715      0.285 #> P[0 1 0 0 0 0 0 0 0 0]      0.663      0.337 #> P[0 0 1 0 0 0 0 0 0 0]      0.640      0.360 #> P[0 0 0 1 0 0 0 0 0 0]      0.632      0.368 #> P[0 0 0 0 1 0 0 0 0 0]      0.590      0.410 #> P[0 0 0 0 0 1 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 1 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 1 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 1 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 0 1]      0.500      0.500 #>  #> $Item.16 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.715      0.285 #> P[0 1 0 0 0 0 0 0 0 0]      0.663      0.337 #> P[0 0 1 0 0 0 0 0 0 0]      0.640      0.360 #> P[0 0 0 1 0 0 0 0 0 0]      0.632      0.368 #> P[0 0 0 0 1 0 0 0 0 0]      0.590      0.410 #> P[0 0 0 0 0 1 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 1 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 1 0 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 1 0]      0.500      0.500 #> P[0 0 0 0 0 0 0 0 0 1]      0.500      0.500 #>  #> $Item.17 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 1 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 1 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 1 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 1 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 1 0 0 0 0]      0.423      0.577 #> P[0 0 0 0 0 0 1 0 0 0]      0.391      0.609 #> P[0 0 0 0 0 0 0 1 0 0]      0.200      0.800 #> P[0 0 0 0 0 0 0 0 1 0]      0.198      0.802 #> P[0 0 0 0 0 0 0 0 0 1]      0.195      0.805 #>  #> $Item.18 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 1 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 1 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 1 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 1 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 1 0 0 0 0]      0.423      0.577 #> P[0 0 0 0 0 0 1 0 0 0]      0.391      0.609 #> P[0 0 0 0 0 0 0 1 0 0]      0.200      0.800 #> P[0 0 0 0 0 0 0 0 1 0]      0.198      0.802 #> P[0 0 0 0 0 0 0 0 0 1]      0.195      0.805 #>  #> $Item.19 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 1 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 1 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 1 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 1 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 1 0 0 0 0]      0.423      0.577 #> P[0 0 0 0 0 0 1 0 0 0]      0.391      0.609 #> P[0 0 0 0 0 0 0 1 0 0]      0.200      0.800 #> P[0 0 0 0 0 0 0 0 1 0]      0.198      0.802 #> P[0 0 0 0 0 0 0 0 0 1]      0.195      0.805 #>  #> $Item.20 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 1 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 1 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 1 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 1 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 1 0 0 0 0]      0.423      0.577 #> P[0 0 0 0 0 0 1 0 0 0]      0.391      0.609 #> P[0 0 0 0 0 0 0 1 0 0]      0.200      0.800 #> P[0 0 0 0 0 0 0 0 1 0]      0.198      0.802 #> P[0 0 0 0 0 0 0 0 0 1]      0.195      0.805 #>  #> $Item.21 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 1 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 1 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 1 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 1 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 1 0 0 0 0]      0.423      0.577 #> P[0 0 0 0 0 0 1 0 0 0]      0.391      0.609 #> P[0 0 0 0 0 0 0 1 0 0]      0.200      0.800 #> P[0 0 0 0 0 0 0 0 1 0]      0.198      0.802 #> P[0 0 0 0 0 0 0 0 0 1]      0.195      0.805 #>  #> $Item.22 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 1 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 1 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 1 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 1 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 1 0 0 0 0]      0.423      0.577 #> P[0 0 0 0 0 0 1 0 0 0]      0.391      0.609 #> P[0 0 0 0 0 0 0 1 0 0]      0.200      0.800 #> P[0 0 0 0 0 0 0 0 1 0]      0.198      0.802 #> P[0 0 0 0 0 0 0 0 0 1]      0.195      0.805 #>  #> $Item.23 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 1 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 1 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 1 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 1 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 1 0 0 0 0]      0.423      0.577 #> P[0 0 0 0 0 0 1 0 0 0]      0.391      0.609 #> P[0 0 0 0 0 0 0 1 0 0]      0.200      0.800 #> P[0 0 0 0 0 0 0 0 1 0]      0.198      0.802 #> P[0 0 0 0 0 0 0 0 0 1]      0.195      0.805 #>  #> $Item.24 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 1 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 1 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 1 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 1 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 1 0 0 0 0]      0.423      0.577 #> P[0 0 0 0 0 0 1 0 0 0]      0.391      0.609 #> P[0 0 0 0 0 0 0 1 0 0]      0.200      0.800 #> P[0 0 0 0 0 0 0 0 1 0]      0.198      0.802 #> P[0 0 0 0 0 0 0 0 0 1]      0.195      0.805 #>  #> $Item.25 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 1 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 1 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 1 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 1 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 1 0 0 0 0]      0.423      0.577 #> P[0 0 0 0 0 0 1 0 0 0]      0.391      0.609 #> P[0 0 0 0 0 0 0 1 0 0]      0.200      0.800 #> P[0 0 0 0 0 0 0 0 1 0]      0.198      0.802 #> P[0 0 0 0 0 0 0 0 0 1]      0.195      0.805 #>  #> $Item.26 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 1 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 1 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 1 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 1 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 1 0 0 0 0]      0.423      0.577 #> P[0 0 0 0 0 0 1 0 0 0]      0.391      0.609 #> P[0 0 0 0 0 0 0 1 0 0]      0.200      0.800 #> P[0 0 0 0 0 0 0 0 1 0]      0.198      0.802 #> P[0 0 0 0 0 0 0 0 0 1]      0.195      0.805 #>  #> $Item.27 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 1 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 1 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 1 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 1 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 1 0 0 0 0]      0.423      0.577 #> P[0 0 0 0 0 0 1 0 0 0]      0.391      0.609 #> P[0 0 0 0 0 0 0 1 0 0]      0.200      0.800 #> P[0 0 0 0 0 0 0 0 1 0]      0.198      0.802 #> P[0 0 0 0 0 0 0 0 0 1]      0.195      0.805 #>  #> $Item.28 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 1 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 1 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 1 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 1 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 1 0 0 0 0]      0.423      0.577 #> P[0 0 0 0 0 0 1 0 0 0]      0.391      0.609 #> P[0 0 0 0 0 0 0 1 0 0]      0.200      0.800 #> P[0 0 0 0 0 0 0 0 1 0]      0.198      0.802 #> P[0 0 0 0 0 0 0 0 0 1]      0.195      0.805 #>  #> $Item.29 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 1 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 1 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 1 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 1 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 1 0 0 0 0]      0.423      0.577 #> P[0 0 0 0 0 0 1 0 0 0]      0.391      0.609 #> P[0 0 0 0 0 0 0 1 0 0]      0.200      0.800 #> P[0 0 0 0 0 0 0 0 1 0]      0.198      0.802 #> P[0 0 0 0 0 0 0 0 0 1]      0.195      0.805 #>  #> $Item.30 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 1 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 1 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 1 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 1 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 1 0 0 0 0]      0.423      0.577 #> P[0 0 0 0 0 0 1 0 0 0]      0.391      0.609 #> P[0 0 0 0 0 0 0 1 0 0]      0.200      0.800 #> P[0 0 0 0 0 0 0 0 1 0]      0.198      0.802 #> P[0 0 0 0 0 0 0 0 0 1]      0.195      0.805 #>  #> $Item.31 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 1 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 1 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 1 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 1 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 1 0 0 0 0]      0.423      0.577 #> P[0 0 0 0 0 0 1 0 0 0]      0.391      0.609 #> P[0 0 0 0 0 0 0 1 0 0]      0.200      0.800 #> P[0 0 0 0 0 0 0 0 1 0]      0.198      0.802 #> P[0 0 0 0 0 0 0 0 0 1]      0.195      0.805 #>  #> $Item.32 #>                        category_1 category_2 #> P[1 0 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 1 0 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 1 0 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 1 0 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 1 0 0 0 0 0]      0.500      0.500 #> P[0 0 0 0 0 1 0 0 0 0]      0.423      0.577 #> P[0 0 0 0 0 0 1 0 0 0]      0.391      0.609 #> P[0 0 0 0 0 0 0 1 0 0]      0.200      0.800 #> P[0 0 0 0 0 0 0 0 1 0]      0.198      0.802 #> P[0 0 0 0 0 0 0 0 0 1]      0.195      0.805 #>  #> $Class.Probability #>            C1 C2 C3 C4 C5 C6 C7 C8 C9 C10  prob #> Profile_1   1  0  0  0  0  0  0  0  0   0 0.001 #> Profile_2   0  1  0  0  0  0  0  0  0   0 0.004 #> Profile_3   0  0  1  0  0  0  0  0  0   0 0.021 #> Profile_4   0  0  0  1  0  0  0  0  0   0 0.080 #> Profile_5   0  0  0  0  1  0  0  0  0   0 0.161 #> Profile_6   0  0  0  0  0  1  0  0  0   0 0.323 #> Profile_7   0  0  0  0  0  0  1  0  0   0 0.183 #> Profile_8   0  0  0  0  0  0  0  1  0   0 0.154 #> Profile_9   0  0  0  0  0  0  0  0  1   0 0.055 #> Profile_10  0  0  0  0  0  0  0  0  0   1 0.018 #>   #------------------ # multiple group with constrained group probabilities  dat <- key2binary(SAT12,    key = c(1,4,5,2,3,1,2,1,3,1,2,4,2,1,5,3,4,4,1,4,3,3,4,1,3,5,1,3,1,5,4,5)) group <- rep(c('G1', 'G2'), each = nrow(SAT12)/2) Theta <- diag(2)  # the latent class parameters are technically located in the (nitems + 1) location model <- mirt.model('A1 = 1-32                      A2 = 1-32                      CONSTRAINB = (33, c1)') mod <- mdirt(dat, model, group = group, customTheta = Theta) #>  coef(mod, simplify=TRUE) #> $G1 #> $items #>             a1     a2 #> Item.1  -1.462 -0.238 #> Item.2  -0.522  1.905 #> Item.3  -1.639 -0.087 #> Item.4  -1.181  0.114 #> Item.5  -0.149  1.966 #> Item.6  -2.913 -1.120 #> Item.7   0.469  2.107 #> Item.8  -1.833 -0.731 #> Item.9   1.888  2.722 #> Item.10 -0.972  0.380 #> Item.11  4.484  9.810 #> Item.12 -0.381 -0.305 #> Item.13  0.008  1.820 #> Item.14  0.411  2.339 #> Item.15  0.737  3.359 #> Item.16 -0.997  0.141 #> Item.17  2.648  4.629 #> Item.18 -1.588  0.582 #> Item.19 -0.415  1.056 #> Item.20  1.253  4.570 #> Item.21  1.959  3.169 #> Item.22  1.965  9.847 #> Item.23 -1.633 -0.393 #> Item.24  0.270  2.349 #> Item.25 -1.224  0.328 #> Item.26 -0.973  1.196 #> Item.27  1.151  9.631 #> Item.28 -0.478  1.176 #> Item.29 -1.235  0.071 #> Item.30 -0.514  0.150 #> Item.31  0.761  9.640 #> Item.32 -1.380 -1.742 #>  #> $group.intercepts #>        c1 #> par 0.416 #>  #>  #> $G2 #> $items #>             a1     a2 #> Item.1  -1.384 -0.426 #> Item.2  -0.490  1.719 #> Item.3  -1.885 -0.062 #> Item.4  -0.826  0.229 #> Item.5   0.001  1.267 #> Item.6  -2.386 -0.601 #> Item.7   0.857  2.666 #> Item.8  -1.887 -0.942 #> Item.9   1.627  2.611 #> Item.10 -1.047  0.943 #> Item.11  3.082  9.727 #> Item.12 -0.487 -0.110 #> Item.13  0.251  1.767 #> Item.14  0.380  2.385 #> Item.15  1.233  2.786 #> Item.16 -0.740  0.606 #> Item.17  2.958  9.692 #> Item.18 -1.969  0.782 #> Item.19 -0.235  1.065 #> Item.20  1.454  5.474 #> Item.21  2.271  2.770 #> Item.22  2.280  6.826 #> Item.23 -1.107  0.202 #> Item.24  0.553  2.564 #> Item.25 -0.869  0.045 #> Item.26 -1.272  1.388 #> Item.27  1.381  3.529 #> Item.28 -0.607  1.313 #> Item.29 -1.391  0.200 #> Item.30 -0.476  0.112 #> Item.31  1.208  4.732 #> Item.32 -2.027 -1.482 #>  #> $group.intercepts #>        c1 #> par 0.416 #>  #>  summary(mod) #> $G1 #> $Item.1 #>        category_1 category_2 #> P[1 0]      0.812      0.188 #> P[0 1]      0.559      0.441 #>  #> $Item.2 #>        category_1 category_2 #> P[1 0]      0.628      0.372 #> P[0 1]      0.130      0.870 #>  #> $Item.3 #>        category_1 category_2 #> P[1 0]      0.837      0.163 #> P[0 1]      0.522      0.478 #>  #> $Item.4 #>        category_1 category_2 #> P[1 0]      0.765      0.235 #> P[0 1]      0.472      0.528 #>  #> $Item.5 #>        category_1 category_2 #> P[1 0]      0.537      0.463 #> P[0 1]      0.123      0.877 #>  #> $Item.6 #>        category_1 category_2 #> P[1 0]      0.948      0.052 #> P[0 1]      0.754      0.246 #>  #> $Item.7 #>        category_1 category_2 #> P[1 0]      0.385      0.615 #> P[0 1]      0.108      0.892 #>  #> $Item.8 #>        category_1 category_2 #> P[1 0]      0.862      0.138 #> P[0 1]      0.675      0.325 #>  #> $Item.9 #>        category_1 category_2 #> P[1 0]      0.131      0.869 #> P[0 1]      0.062      0.938 #>  #> $Item.10 #>        category_1 category_2 #> P[1 0]      0.726      0.274 #> P[0 1]      0.406      0.594 #>  #> $Item.11 #>        category_1 category_2 #> P[1 0]      0.011      0.989 #> P[0 1]      0.000      1.000 #>  #> $Item.12 #>        category_1 category_2 #> P[1 0]      0.594      0.406 #> P[0 1]      0.576      0.424 #>  #> $Item.13 #>        category_1 category_2 #> P[1 0]      0.498      0.502 #> P[0 1]      0.139      0.861 #>  #> $Item.14 #>        category_1 category_2 #> P[1 0]      0.399      0.601 #> P[0 1]      0.088      0.912 #>  #> $Item.15 #>        category_1 category_2 #> P[1 0]      0.324      0.676 #> P[0 1]      0.034      0.966 #>  #> $Item.16 #>        category_1 category_2 #> P[1 0]      0.731      0.269 #> P[0 1]      0.465      0.535 #>  #> $Item.17 #>        category_1 category_2 #> P[1 0]      0.066      0.934 #> P[0 1]      0.010      0.990 #>  #> $Item.18 #>        category_1 category_2 #> P[1 0]      0.830      0.170 #> P[0 1]      0.358      0.642 #>  #> $Item.19 #>        category_1 category_2 #> P[1 0]      0.602      0.398 #> P[0 1]      0.258      0.742 #>  #> $Item.20 #>        category_1 category_2 #> P[1 0]      0.222      0.778 #> P[0 1]      0.010      0.990 #>  #> $Item.21 #>        category_1 category_2 #> P[1 0]      0.124      0.876 #> P[0 1]      0.040      0.960 #>  #> $Item.22 #>        category_1 category_2 #> P[1 0]      0.123      0.877 #> P[0 1]      0.000      1.000 #>  #> $Item.23 #>        category_1 category_2 #> P[1 0]      0.837      0.163 #> P[0 1]      0.597      0.403 #>  #> $Item.24 #>        category_1 category_2 #> P[1 0]      0.433      0.567 #> P[0 1]      0.087      0.913 #>  #> $Item.25 #>        category_1 category_2 #> P[1 0]      0.773      0.227 #> P[0 1]      0.419      0.581 #>  #> $Item.26 #>        category_1 category_2 #> P[1 0]      0.726      0.274 #> P[0 1]      0.232      0.768 #>  #> $Item.27 #>        category_1 category_2 #> P[1 0]       0.24       0.76 #> P[0 1]       0.00       1.00 #>  #> $Item.28 #>        category_1 category_2 #> P[1 0]      0.617      0.383 #> P[0 1]      0.236      0.764 #>  #> $Item.29 #>        category_1 category_2 #> P[1 0]      0.775      0.225 #> P[0 1]      0.482      0.518 #>  #> $Item.30 #>        category_1 category_2 #> P[1 0]      0.626      0.374 #> P[0 1]      0.463      0.537 #>  #> $Item.31 #>        category_1 category_2 #> P[1 0]      0.318      0.682 #> P[0 1]      0.000      1.000 #>  #> $Item.32 #>        category_1 category_2 #> P[1 0]      0.799      0.201 #> P[0 1]      0.851      0.149 #>  #> $Class.Probability #>           A1 A2  prob #> Profile_1  1  0 0.602 #> Profile_2  0  1 0.398 #>  #>  #> $G2 #> $Item.1 #>        category_1 category_2 #> P[1 0]      0.800      0.200 #> P[0 1]      0.605      0.395 #>  #> $Item.2 #>        category_1 category_2 #> P[1 0]      0.620      0.380 #> P[0 1]      0.152      0.848 #>  #> $Item.3 #>        category_1 category_2 #> P[1 0]      0.868      0.132 #> P[0 1]      0.515      0.485 #>  #> $Item.4 #>        category_1 category_2 #> P[1 0]      0.696      0.304 #> P[0 1]      0.443      0.557 #>  #> $Item.5 #>        category_1 category_2 #> P[1 0]       0.50       0.50 #> P[0 1]       0.22       0.78 #>  #> $Item.6 #>        category_1 category_2 #> P[1 0]      0.916      0.084 #> P[0 1]      0.646      0.354 #>  #> $Item.7 #>        category_1 category_2 #> P[1 0]      0.298      0.702 #> P[0 1]      0.065      0.935 #>  #> $Item.8 #>        category_1 category_2 #> P[1 0]      0.868      0.132 #> P[0 1]      0.719      0.281 #>  #> $Item.9 #>        category_1 category_2 #> P[1 0]      0.164      0.836 #> P[0 1]      0.068      0.932 #>  #> $Item.10 #>        category_1 category_2 #> P[1 0]       0.74       0.26 #> P[0 1]       0.28       0.72 #>  #> $Item.11 #>        category_1 category_2 #> P[1 0]      0.044      0.956 #> P[0 1]      0.000      1.000 #>  #> $Item.12 #>        category_1 category_2 #> P[1 0]      0.619      0.381 #> P[0 1]      0.527      0.473 #>  #> $Item.13 #>        category_1 category_2 #> P[1 0]      0.438      0.562 #> P[0 1]      0.146      0.854 #>  #> $Item.14 #>        category_1 category_2 #> P[1 0]      0.406      0.594 #> P[0 1]      0.084      0.916 #>  #> $Item.15 #>        category_1 category_2 #> P[1 0]      0.226      0.774 #> P[0 1]      0.058      0.942 #>  #> $Item.16 #>        category_1 category_2 #> P[1 0]      0.677      0.323 #> P[0 1]      0.353      0.647 #>  #> $Item.17 #>        category_1 category_2 #> P[1 0]      0.049      0.951 #> P[0 1]      0.000      1.000 #>  #> $Item.18 #>        category_1 category_2 #> P[1 0]      0.878      0.122 #> P[0 1]      0.314      0.686 #>  #> $Item.19 #>        category_1 category_2 #> P[1 0]      0.558      0.442 #> P[0 1]      0.256      0.744 #>  #> $Item.20 #>        category_1 category_2 #> P[1 0]      0.189      0.811 #> P[0 1]      0.004      0.996 #>  #> $Item.21 #>        category_1 category_2 #> P[1 0]      0.094      0.906 #> P[0 1]      0.059      0.941 #>  #> $Item.22 #>        category_1 category_2 #> P[1 0]      0.093      0.907 #> P[0 1]      0.001      0.999 #>  #> $Item.23 #>        category_1 category_2 #> P[1 0]      0.752      0.248 #> P[0 1]      0.450      0.550 #>  #> $Item.24 #>        category_1 category_2 #> P[1 0]      0.365      0.635 #> P[0 1]      0.072      0.928 #>  #> $Item.25 #>        category_1 category_2 #> P[1 0]      0.705      0.295 #> P[0 1]      0.489      0.511 #>  #> $Item.26 #>        category_1 category_2 #> P[1 0]      0.781      0.219 #> P[0 1]      0.200      0.800 #>  #> $Item.27 #>        category_1 category_2 #> P[1 0]      0.201      0.799 #> P[0 1]      0.028      0.972 #>  #> $Item.28 #>        category_1 category_2 #> P[1 0]      0.647      0.353 #> P[0 1]      0.212      0.788 #>  #> $Item.29 #>        category_1 category_2 #> P[1 0]      0.801      0.199 #> P[0 1]      0.450      0.550 #>  #> $Item.30 #>        category_1 category_2 #> P[1 0]      0.617      0.383 #> P[0 1]      0.472      0.528 #>  #> $Item.31 #>        category_1 category_2 #> P[1 0]      0.230      0.770 #> P[0 1]      0.009      0.991 #>  #> $Item.32 #>        category_1 category_2 #> P[1 0]      0.884      0.116 #> P[0 1]      0.815      0.185 #>  #> $Class.Probability #>           A1 A2  prob #> Profile_1  1  0 0.602 #> Profile_2  0  1 0.398 #>  #>    #------------------ # Probabilistic Guttman Model (Proctor, 1970)  # example analysis can also be found in the sirt package (see ?prob.guttman) data(data.read, package = 'sirt') head(data.read) #>    A1 A2 A3 A4 B1 B2 B3 B4 C1 C2 C3 C4 #> 2   1  1  1  1  1  1  1  1  1  1  1  0 #> 22  1  1  0  0  1  0  1  1  1  0  1  0 #> 23  1  1  0  1  1  0  1  1  1  1  1  1 #> 41  1  1  1  1  1  1  1  1  1  1  1  1 #> 43  1  0  0  1  0  0  1  1  1  0  1  0 #> 63  1  1  0  0  1  0  1  1  1  1  1  1  Theta <- matrix(c(1,0,0,0,                   1,1,0,0,                   1,1,1,0,                   1,1,1,1), 4, byrow=TRUE)  model <- mirt.model(\"INTERCEPT = 1-12                      C1 = 1,7,9,11                      C2 = 2,5,8,10,12                      C3 = 3,4,6\")  mod <- mdirt(data.read, model, customTheta=Theta) #>  summary(mod) #> $A1 #>            category_1 category_2 #> P[1 0 0 0]      0.331      0.669 #> P[1 1 0 0]      0.037      0.963 #> P[1 1 1 0]      0.037      0.963 #> P[1 1 1 1]      0.037      0.963 #>  #> $A2 #>            category_1 category_2 #> P[1 0 0 0]      0.544      0.456 #> P[1 1 0 0]      0.544      0.456 #> P[1 1 1 0]      0.041      0.959 #> P[1 1 1 1]      0.041      0.959 #>  #> $A3 #>            category_1 category_2 #> P[1 0 0 0]      0.687      0.313 #> P[1 1 0 0]      0.687      0.313 #> P[1 1 1 0]      0.687      0.313 #> P[1 1 1 1]      0.097      0.903 #>  #> $A4 #>            category_1 category_2 #> P[1 0 0 0]      0.709      0.291 #> P[1 1 0 0]      0.709      0.291 #> P[1 1 1 0]      0.709      0.291 #> P[1 1 1 1]      0.315      0.685 #>  #> $B1 #>            category_1 category_2 #> P[1 0 0 0]      0.438      0.562 #> P[1 1 0 0]      0.438      0.562 #> P[1 1 1 0]      0.168      0.832 #> P[1 1 1 1]      0.168      0.832 #>  #> $B2 #>            category_1 category_2 #> P[1 0 0 0]      0.628      0.372 #> P[1 1 0 0]      0.628      0.372 #> P[1 1 1 0]      0.628      0.372 #> P[1 1 1 1]      0.317      0.683 #>  #> $B3 #>            category_1 category_2 #> P[1 0 0 0]      0.205      0.795 #> P[1 1 0 0]      0.021      0.979 #> P[1 1 1 0]      0.021      0.979 #> P[1 1 1 1]      0.021      0.979 #>  #> $B4 #>            category_1 category_2 #> P[1 0 0 0]      0.543      0.457 #> P[1 1 0 0]      0.543      0.457 #> P[1 1 1 0]      0.140      0.860 #> P[1 1 1 1]      0.140      0.860 #>  #> $C1 #>            category_1 category_2 #> P[1 0 0 0]      0.175      0.825 #> P[1 1 0 0]      0.000      1.000 #> P[1 1 1 0]      0.000      1.000 #> P[1 1 1 1]      0.000      1.000 #>  #> $C2 #>            category_1 category_2 #> P[1 0 0 0]      0.526      0.474 #> P[1 1 0 0]      0.526      0.474 #> P[1 1 1 0]      0.098      0.902 #> P[1 1 1 1]      0.098      0.902 #>  #> $C3 #>            category_1 category_2 #> P[1 0 0 0]      0.292      0.708 #> P[1 1 0 0]      0.026      0.974 #> P[1 1 1 0]      0.026      0.974 #> P[1 1 1 1]      0.026      0.974 #>  #> $C4 #>            category_1 category_2 #> P[1 0 0 0]      0.425      0.575 #> P[1 1 0 0]      0.425      0.575 #> P[1 1 1 0]      0.140      0.860 #> P[1 1 1 1]      0.140      0.860 #>  #> $Class.Probability #>           INTERCEPT C1 C2 C3  prob #> Profile_1         1  0  0  0 0.383 #> Profile_2         1  1  0  0 0.057 #> Profile_3         1  1  1  0 0.130 #> Profile_4         1  1  1  1 0.431 #>   M2(mod) #>             M2 df            p      RMSEA    RMSEA_5   RMSEA_95      SRMSR #> stats 145.0553 51 5.876977e-11 0.07509875 0.06080295 0.08947343 0.09158964 #>             TLI       CFI #> stats 0.8130941 0.8555727 itemfit(mod) #>    item   S_X2 df.S_X2 RMSEA.S_X2 p.S_X2 #> 1    A1 27.808       7      0.095  0.000 #> 2    A2  2.984       6      0.000  0.811 #> 3    A3 10.219       6      0.046  0.116 #> 4    A4  5.575       6      0.000  0.472 #> 5    B1  8.168       7      0.023  0.318 #> 6    B2  7.176       6      0.024  0.305 #> 7    B3  9.351       7      0.032  0.228 #> 8    B4  2.359       6      0.000  0.884 #> 9    C1  6.260       5      0.028  0.282 #> 10   C2  6.914       6      0.022  0.329 #> 11   C3 11.734       7      0.045  0.110 #> 12   C4  5.585       7      0.000  0.589   # }"},{"path":"https://philchalmers.github.io/mirt/reference/mirt-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Full information maximum likelihood estimation of IRT models. — mirt-package","title":"Full information maximum likelihood estimation of IRT models. — mirt-package","text":"Full information maximum likelihood estimation multidimensional IRT models","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirt-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Full information maximum likelihood estimation of IRT models. — mirt-package","text":"Analysis dichotomous polytomous response data using unidimensional multidimensional latent trait models Item Response Theory (IRT) paradigm. Exploratory confirmatory models can estimated quadrature (EM) stochastic (MHRM) methods. Confirmatory bi-factor two-tier analyses available modeling item testlets. Multiple group analysis mixed effects designs also available detecting differential item test functioning well modeling item person covariates. Finally, latent class models DINA, DINO, multidimensional latent class, mixture zero-inflated IRT models, several discrete variable models supported. Users interested recent version package can visit https://github.com/philchalmers/mirt follow instructions installing package source. Questions regarding package can sent mirt-package Google Group, located https://groups.google.com/forum/#!forum/mirt-package. User contributed files, workshop files, evaluated help files also available package wiki (https://github.com/philchalmers/mirt/wiki).","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirt-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Full information maximum likelihood estimation of IRT models. — mirt-package","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirt-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Full information maximum likelihood estimation of IRT models. — mirt-package","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirt.html","id":null,"dir":"Reference","previous_headings":"","what":"Full-Information Item Factor Analysis (Multidimensional Item Response Theory) — mirt","title":"Full-Information Item Factor Analysis (Multidimensional Item Response Theory) — mirt","text":"mirt fits maximum likelihood (maximum posteriori) factor analysis model mixture dichotomous polytomous data multidimensional item response theory paradigm using either Cai's (2010) Metropolis-Hastings Robbins-Monro (MHRM) algorithm, EM algorithm approach outlined Bock Aitkin (1981) using rectangular quasi-Monte Carlo integration grids, stochastic EM (.e., first two stages MH-RM algorithm). Unidimensional multidimensional dominance/compensatory response models unfolding/pairwise comparison models can specified independently via itemtype argument.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Full-Information Item Factor Analysis (Multidimensional Item Response Theory) — mirt","text":"","code":"mirt(   data,   model = 1,   itemtype = NULL,   guess = 0,   upper = 1,   SE = FALSE,   covdata = NULL,   formula = NULL,   itemdesign = NULL,   item.formula = NULL,   SE.type = \"Oakes\",   method = \"EM\",   optimizer = NULL,   dentype = \"Gaussian\",   pars = NULL,   constrain = NULL,   calcNull = FALSE,   draws = 5000,   survey.weights = NULL,   quadpts = NULL,   TOL = NULL,   gpcm_mats = list(),   grsm.block = NULL,   rsm.block = NULL,   monopoly.k = 1L,   key = NULL,   large = FALSE,   GenRandomPars = FALSE,   accelerate = \"Ramsay\",   verbose = TRUE,   solnp_args = list(),   nloptr_args = list(),   spline_args = list(),   control = list(),   technical = list(),   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/mirt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Full-Information Item Factor Analysis (Multidimensional Item Response Theory) — mirt","text":"data matrix data.frame consists numerically ordered data, organized form integers,  missing data coded NA (convert ordered factor data.frame see data.matrix) model string passed (object returned ) mirt.model, declaring IRT model estimated (loadings, constraints, priors, etc). exploratory IRT models, single numeric value indicating number factors extract also supported. Default 1, indicating unidimensional model fit unless otherwise specified itemtype type items modeled, declared either ) single value   recycled item, b) vector respective item, c) applicable,   matrix columns equal number items rows equal number   latent classes. NULL default assumes items follow graded   2PL structure, however may changed following: 'Rasch' - Rasch/partial credit model constraining slopes 1 freely estimating       variance parameters (alternatively, can specified applying equality constraints       slope parameters 'gpcm' '2PL'; Rasch, 1960) '1PL', '2PL', '3PL', '3PLu', '4PL' - 1-4 parameter logistic model,       3PL estimates lower asymptote 3PLu estimates upper asymptote       (Lord Novick, 1968; Lord, 1980). Note specifying '1PL' automatically estimate       variance latent trait compared 'Rasch' type '5PL' - 5 parameter logistic model estimate asymmetric logistic      response curves. Currently restricted unidimensional models 'CLL' - complementary log-log link model.       Currently restricted unidimensional models 'ULL' - unipolar log-logistic model (Lucke, 2015). Note use itemtype       automatically use log-normal distribution latent traits 'graded' - graded response model (Samejima, 1969) 'grsm' - graded ratings scale model       classical IRT parameterization (restricted unidimensional models; Muraki, 1992) 'gpcm' 'gpcmIRT' - generalized partial credit model slope-intercept       classical parameterization. 'gpcmIRT' restricted unidimensional models. Note       optional scoring matrices 'gpcm' available gpcm_mats input (Muraki, 1992) 'rsm' - Rasch rating scale model using 'gpcmIRT' structure       (unidimensional ; Andrich, 1978) 'nominal' - nominal response model (Bock, 1972) 'ideal' - dichotomous ideal point model (Maydeu-Olivares, 2006) 'ggum' - generalized graded unfolding model (Roberts, Donoghue, & Laughlin, 2000)       multidimensional extension 'hcm' 'ghcm' - (generalized) hyperbolic cosine model (Andrich Luo, 1993; Andrich, 1996)      dichotomous ordered polytomous items (see Luo, 2001) 'alm' 'galm' - (generalized) absolute logistic model (Luo Andrich, 2005) dichotomous      ordered polytomous items 'sslm' 'gsslm' - (generalized) simple squared logistic model (Andrich, 1988)      dichotomous ordered polytomous items (see Luo, 2001) 'paralla' 'gparalla' - (generalized) parallellogram analysis model (Hoijtink, 1990)      dichotomous ordered polytomous items (see Luo, 2001) 'sequential' - multidimensional sequential response model (Tutz, 1990) slope-intercept form 'Tutz' - 'sequential' itemtype, except slopes fixed 1       latent variance terms freely estimated (similar 'Rasch' itemtype input) 'PC1PL', 'PC2PL', 'PC3PL' - 1-3 parameter partially compensatory model.       Note constraining slopes equal across items also reduce model       Embretson's (.k.. Whitely's) multicomponent model (1980), 'PC1PL'       slopes fixed 1 latent trait variance terms estimated '2PLNRM', '3PLNRM', '3PLuNRM', '4PLNRM' - 2-4 parameter nested       logistic model, 3PLNRM estimates lower asymptote 3PLuNRM estimates       upper asymptote (Suh Bolt, 2010) 'spline' - spline response model bs (default)       ns function (Winsberg, Thissen, Wainer, 1984) 'monopoly' - monotonic polynomial model unidimensional tests       dichotomous polytomous response data (Falk Cai, 2016) Additionally, user defined item classes can also defined using createItem function guess fixed pseudo-guessing parameters. Can entered single value assign global guessing parameter may entered numeric vector corresponding item upper fixed upper bound parameters 4-PL model. Can entered single value assign global guessing parameter may entered numeric vector corresponding item SE logical; estimate standard errors computing parameter information matrix? See SE.type type estimates available covdata data.frame data used latent regression models formula R formula (list formulas) indicating latent traits can regressed using external covariates covdata. named list formulas supplied (names correspond latent trait names model) specific regression effects can estimated factor. Supplying single formula estimate regression parameters latent traits default itemdesign data.frame rows equal number items columns containing item-design effects. items included design structure (.e., left canonical structure) fewer rows can used, however rownames must defined matched colnames data input. item design matrix constructed use item.formula. Providing input fix associated 'd' intercepts 0, applicable item.formula R formula used specify intercept decomposition (e.g.,   LLTM; Fischer, 1983). Note right-hand side formula required   compensatory models. non-compensatory itemtypes (e.g., 'PC1PL') formula must include   name latent trait left hand side expression indicate   trait specification intercepts decomposed (see MLTM; Embretson, 1984) SE.type type estimation method use calculating parameter information matrix   computing standard errors wald tests. Can :  'Richardson', 'forward', 'central' numerical Richardson,       forward difference, central difference evaluation observed Hessian matrix 'crossprod' 'Louis' standard error computations based variance       Fisher scores well Louis' (1982) exact computation observed information matrix.       Note Louis' estimates can take long time obtain large sample sizes long tests 'sandwich' sandwich covariance estimate based       'crossprod' 'Oakes' estimates (see Chalmers, 2018, details) 'sandwich.Louis' sandwich covariance estimate based       'crossprod' 'Louis' estimates 'Oakes' Oakes' (1999) method using central difference approximation       (see Chalmers, 2018, details) 'SEM' supplemented EM (disables accelerate option automatically; EM ) 'Fisher' expected information, 'complete' information based       complete-data Hessian used EM algorithm 'MHRM' 'FMHRM' stochastic approximations observed information matrix       based Robbins-Monro filter fixed number MHRM draws without RM filter.       options supported method = 'MHRM' 'numerical' obtain numerical estimate call optim       method = 'BL' Note 'SEM' method becomes sensitive ML solution   reached sufficient precision, may sensitive   history EM cycles stable/sufficient convergence respective estimates.   Increasing number iterations (increasing NCYCLES decreasing   TOL, see ) help improve accuracy, can   run parallel mirtCluster object defined (  used Oakes' method well). Additionally,   inspecting symmetry ACOV matrix convergence issues passing   technical = list(symmetric = FALSE) can helpful determine sufficient   solution reached method character object specifying estimation algorithm used. default   'EM', standard EM algorithm fixed quadrature, 'QMCEM'   quasi-Monte Carlo EM estimation, 'MCEM' Monte Carlo EM estimation.   option 'MHRM' may also passed use MH-RM algorithm,   'SEM' Stochastic EM algorithm (first   two stages MH-RM stage using optimizer single Newton-Raphson iteration),   'BL' Bock Lieberman   approach (generally recommended longer tests). 'EM' generally effective 1-3 factors, methods 'QMCEM',   'MCEM', 'SEM', 'MHRM' used dimensions 3 . Note   optimizer stochastic associated SE.type automatically changed   SE.type = 'MHRM' default avoid use quadrature optimizer character indicating numerical optimizer use. default, EM   algorithm use 'BFGS' upper lower bounds box-constraints   'nlminb' . options include Newton-Raphson ('NR'),   can efficient 'BFGS' stable complex   IRT models (nominal nested logit models)   related 'NR1' also Newton-Raphson   consists 1 update coupled RM Hessian (  applicable MH-RM algorithm used). MH-RM algorithm uses 'NR1' default,   though currently 'BFGS', 'L-BFGS-B', 'NR'   also supported method (  fewer iterations default) emulate stochastic EM updates.   well, 'Nelder-Mead' 'SANN'   estimators available, routine use generally required recommended. Additionally, estimation subroutines Rsolnp nloptr   packages available passing arguments 'solnp' 'nloptr',   respectively. used conjunction solnp_args   nloptr_args specified . equality constraints specified   model definition parameter lowest parnum   pars = 'values' data.frame used estimation vector passed   objective function, group hyper-parameters omitted.   Equality inequality functions form function(p, optim_args),   optim_args list internally parameters largely can ignored   defining constraints (though use browser() may helpful) dentype type density form use latent trait parameters. Current options include  'Gaussian' (default) assumes multivariate Gaussian distribution associated       mean vector variance-covariance matrix 'empiricalhist' 'EH' estimates latent distribution using empirical histogram described       Bock Aitkin (1981). applicable unidimensional models estimated EM algorithm.       option, number cycles, TOL, quadpts adjusted accommodate       less precision estimation (namely: TOL = 3e-5, NCYCLES = 2000, quadpts = 121) 'empiricalhist_Woods' 'EHW' estimates latent distribution using empirical histogram described       Bock Aitkin (1981), specifications dentype = 'empiricalhist',       extrapolation-interpolation method described Woods (2007). NOTE: improve stability       presence extreme response styles (.e., highest lowest item) technical option       zeroExtreme = TRUE may required -weight contribution problematic patterns 'Davidian-#' estimates semi-parametric Davidian curves described Woods Lin (2009),       # placeholder represents number Davidian parameters estimate       (e.g., 'Davidian-6' estimate 6 smoothing parameters). default, number       quadpts increased 121, method applicable       unidimensional models estimated EM algorithm Note itemtype = 'ULL' log-normal(0,1) density used support unipolar scaling pars data.frame structure starting values, parameter numbers, estimation logical values, etc, defined. user may observe model defines values using pars = 'values', object can turn modified input back estimation pars = mymodifiedpars constrain list user declared equality constraints. see define parameters correctly use pars = 'values' initially see parameters labeled. constrain parameters equal create list separate concatenated vectors signifying parameters constrain. example, set parameters 1 5 equal, also set parameters 2, 6, 10 equal use constrain = list(c(1,5), c(2,6,10)). Constraints can also specified using mirt.model syntax (recommended) calcNull logical; calculate Null model additional fit statistics (e.g., TLI)? applicable data contains NA's data overly sparse draws number Monte Carlo draws estimate log-likelihood MH-RM algorithm. Default 5000 survey.weights optional numeric vector survey weights apply case data (EM estimation ). specified, cases weighted equally (standard IRT approach). sum survey.weights must equal total sample size proper weighting applied quadpts number quadrature points per dimension (must larger 2). default number quadrature uses following scheme: switch(.character(nfact), '1'=61, '2'=31, '3'=15, '4'=9, '5'=7, 3). However, method input set 'QMCEM' argument left blank default number quasi-Monte Carlo integration nodes set 5000 total TOL convergence threshold EM MH-RM; defaults .0001 .001. SE.type = 'SEM' value specified, default set 1e-5. evaluate model using starting values pass TOL = NaN, evaluate starting values without log-likelihood pass TOL = NA gpcm_mats list matrices specifying scoring coefficients (generalized) partial credit model constructed. omitted, standard gpcm format used (.e., seq(0, k, = 1) trait). input used traits scored different category (e.g., matrix(c(0:3, 1,0,0,0), 4, 2) two-dimensional model first trait scored like gpcm, second trait positively indicated first category selected). Can used itemtypes 'gpcm' 'Rasch', respective element gpcm_mats NULL grsm.block optional numeric vector indicating blocking occur using grsm, NA represents items belong grsm block (items may estimated test data). example, specify two blocks 3 2PL item last item: grsm.block = c(rep(1,3), rep(2,3), NA). NULL items assumed within group therefore number item categories rsm.block grsm.block, 'rsm' blocks monopoly.k vector values (single value repeated item) indicate degree monotone polynomial fitted, monotone polynomial corresponds monopoly.k * 2 + 1 (e.g., monopoly.k = 2 fits 5th degree polynomial). Default monopoly.k = 1, fits 3rd degree polynomial key numeric vector response scoring key. Required using nested logit item types, must length number items used. Items nested logit ignore vector, use NA item locations applicable large logical indicating whether unique response patterns obtained prior   performing estimation avoid repeating computations identical patterns.   default TRUE provides correct degrees freedom model since unique patterns   tallied (typically affects goodness fit statistics G2, also influence   nested model comparison methods anova(mod1, mod2)), FALSE use   number rows data placeholder total degrees freedom. , model   objects compared flags set TRUE set FALSE Alternatively, collapse table frequencies desired purpose saving computations   (.e., computing collapsed frequencies data onte-time) character vector can   passed arguement large = 'return' return list desired   table information used mirt. list object can reused passing back   large argument avoid re-tallying data   (, useful dataset large computing tabulated data   computationally burdensome). strategy shown : Compute organized data e.g., internaldat <- mirt(Science, 1, large = 'return') Pass organized data estimation functions e.g.,   mod <- mirt(Science, 1, large = internaldat) GenRandomPars logical; generate random starting values prior optimization instead using fixed internal starting values? accelerate character vector indicating type acceleration use. Default 'Ramsay', may also 'squarem' SQUAREM procedure (specifically, gSqS3 approach) described Varadhan Roldand (2008). disable acceleration, pass 'none' verbose logical; print observed- (EM) complete-data (MHRM) log-likelihood iteration cycle? Default TRUE solnp_args list arguments passed solnp::solnp() function equality constraints, inequality constraints, etc nloptr_args list arguments passed nloptr::nloptr() function equality constraints, inequality constraints, etc spline_args named list lists containing information passed bs (default)   ns spline itemtype. element must refer name itemtype   spline, internal list names refer arguments passed. example, item 2 called   'read2', item 5 called 'read5', itemtype 'spline' item 5 use   ns form, modified list input might form: spline_args = list(read2 = list(degree = 4),                            read5 = list(fun = 'ns', knots = c(-2, 2))) code input changes bs() splines function degree = 4 input,   second element changes ns() function knots set c(-2, 2) control list passed respective optimizers (.e., optim(), nlminb(), etc). Additional arguments included 'NR' optimizer: 'tol' convergence tolerance M-step (default TOL/1000), default number iterations Newton-Raphson optimizer 50 (modified 'maxit' control input) technical list containing lower level technical parameters estimation. May : NCYCLES maximum number EM MH-RM cycles; defaults 500 2000 MAXQUAD maximum number quadratures, can increase     4GB RAM PC; default 20000 theta_lim range integration grid dimension; default c(-6, 6). Note     itemtype = 'ULL' log-normal distribution used range change     c(.01, 6^2), second term square theta_lim input instead set.seed seed number used estimation. Default 12345 SEtol standard error tolerance criteria S-EM MHRM computation     information matrix. Default 1e-3 symmetric logical; force S-EM/Oakes information matrix estimates symmetric? Default TRUE     computation standard errors stable. Setting FALSE can help     detect solutions reached ML estimate SEM_window ratio values used define S-EM window based     observed likelihood differences across EM iterations. default     c(0, 1 - SEtol), provides nearly full S-EM window (.e.,     nearly EM cycles used). use smaller SEM window change window     something like c(.9, .999) start point farther EM history warn logical; include warning messages estimation? Default TRUE message logical; include general messages estimation? Default TRUE customK numeric vector used explicitly declare number response     categories item. used constructing mirt model     reasons parameter estimation (obtain factor scores), requires     input data 0 lowest category. format     extract.mirt(mod, 'K') slot converged models customPriorFun custom function used determine normalized density     integration EM algorithm. Must form function(Theta, Etable){...},     return numeric vector length number rows Theta.     Etable input contains aggregated table generated current E-step     computations. proper integration, returned vector sum     1 (.e., normalized). Note using Etable NULL     first call, therefore prior deal issue accordingly zeroExtreme logical; assign extreme response patterns survey.weight 0     (formally equivalent removing data vectors estimation)?     dentype = 'EHW', Woods' extrapolation utilized,     option may required extrapolation causes expected densities tend towards     positive negative infinity. default FALSE customTheta custom Theta grid, matrix form, used integration.     defined, grid determined internally based number quadpts nconstrain specification constrain list argument,     however imposes negative equality constraint instead (e.g., \\(a12 = -a21\\),     specified nconstrain = list(c(12, 21))). Note specification     list must length 2, second element taken -1 times     first element delta deviation term used numerical estimates computing ACOV matrix     'forward' 'central' numerical approaches, well Oakes' method     Richardson extrapolation. Default 1e-5 parallel logical; use parallel cluster defined mirtCluster?     Default TRUE storeEMhistory logical; store iteration history using EM algorithm?    Default FALSE. TRUE, use extract.mirt extract internal_constraints logical; include internal constraints using certain     IRT models (e.g., 'grsm' itemtype). Disable want use special optimizers     solnp. Default TRUE gain vector two values specifying numerator exponent        values RM gain function \\((val1 / cycle)^val2\\).        Default c(0.10, 0.75) BURNIN number burn cycles (stage 1) MH-RM; default 150 SEMCYCLES number SEM cycles (stage 2) MH-RM; default 100 MHDRAWS number Metropolis-Hasting draws use MH-RM iteration; default 5 MHcand vector values used tune MH sampler. Larger values     cause acceptance ratio decrease. One value required group     unconditional item factor analysis (mixedmirt() requires additional values     random effect). null, values determined internally, attempting     tune acceptance draws .1 .4 MHRM_SE_draws number fixed draws use SE=TRUE SE.type = 'FMHRM'     maximum number draws SE.type = 'MHRM'. Default 2000 MCEM_draws function used determine number quadrature points draw     'MCEM' method. Must include one argument indicates iteration number     EM cycle. Default function(cycles) 500 + (cycles - 1)*2, starts number     draws 500 increases 2 full EM iteration info_if_converged logical; compute information matrix using MH-RM algorithm     model converged within suitable number iterations? Default TRUE logLik_if_converged logical; compute observed log-likelihood using MH-RM algorithm     model converged within suitable number iterations? Default TRUE keep_vcov_PD logical; attempt keep variance-covariance matrix latent traits     positive definite estimation EM algorithm? generally improves convergence     properties traits highly correlated. Default TRUE ... additional arguments passed","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Full-Information Item Factor Analysis (Multidimensional Item Response Theory) — mirt","text":"function returns object class SingleGroupClass   (SingleGroupClass-class)","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Full-Information Item Factor Analysis (Multidimensional Item Response Theory) — mirt","text":"Models containing 'explanatory' person item level predictors can included using mixedmirt function, though latent regression models can fit using formula input function. Tests form two-tier bi-factor structure estimated bfactor function, uses dimension reduction EM algorithm modeling item parcels.  Multiple group analyses (useful DIF DTF testing) also available using multipleGroup function.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirt.html","id":"confirmatory-and-exploratory-irt","dir":"Reference","previous_headings":"","what":"Confirmatory and Exploratory IRT","title":"Full-Information Item Factor Analysis (Multidimensional Item Response Theory) — mirt","text":"Specification confirmatory item factor analysis model follows many rules structural equation modeling framework confirmatory factor analysis. variances latent factors automatically fixed 1 help facilitate model identification. parameters may fixed constant values set equal parameters using appropriate declarations. Confirmatory models may also contain 'explanatory' person item level predictors, though including predictors currently limited mixedmirt function. specifying single number greater 1 model input mirt exploratory IRT model estimated. Rotation target matrix options available passed generic functions summary-method fscores. Factor means variances fixed ensure proper identification. model exploratory item factor analysis estimation begin computing matrix quasi-polychoric correlations. factor analysis nfact extracted item parameters estimated \\(a_{ij} = f_{ij}/u_j\\), \\(f_{ij}\\) factor loading jth item ith factor, \\(u_j\\) square root factor uniqueness, \\(\\sqrt{1 - h_j^2}\\). initial intercept parameters determined calculating inverse normal item facility (.e., item easiness), \\(q_j\\), obtain \\(d_j = q_j / u_j\\). similar implementation also used obtaining initial values polytomous items.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirt.html","id":"a-note-on-upper-and-lower-bound-parameters","dir":"Reference","previous_headings":"","what":"A note on upper and lower bound parameters","title":"Full-Information Item Factor Analysis (Multidimensional Item Response Theory) — mirt","text":"Internally \\(g\\) \\(u\\) parameters transformed using logit transformation (\\(log(x/(1-x))\\)), can reversed using \\(1 / (1 + exp(-x))\\) following convergence. also applies computing confidence intervals parameters, done automatically coef(mod, rawug = FALSE). , applying prior distributions parameters recommended use prior ranges negative infinity positive infinity, normally distributed prior via 'norm' input (see mirt.model).","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirt.html","id":"convergence-for-quadrature-methods","dir":"Reference","previous_headings":"","what":"Convergence for quadrature methods","title":"Full-Information Item Factor Analysis (Multidimensional Item Response Theory) — mirt","text":"Unrestricted full-information factor analysis known problems convergence, items may need constrained removed entirely allow acceptable solution. general rule dichotomous items means greater .95, items .05 greater guessing parameter, considered removal analysis treated prior parameter distributions. type reasoning applicable including upper bound parameters well. polytomous items, categories rarely endorsed cause similar issues. Also, increasing number quadrature points per dimension, using quasi-Monte Carlo integration method, may help stabilize estimation process higher dimensions. Finally, solutions well defined also difficulty converging, can indicate model misspecified (e.g., extracting many dimensions).","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirt.html","id":"convergence-for-mh-rm-method","dir":"Reference","previous_headings":"","what":"Convergence for MH-RM method","title":"Full-Information Item Factor Analysis (Multidimensional Item Response Theory) — mirt","text":"MH-RM algorithm, number iterations grows high (e.g., greater 1500) Max Change = .2500 values repeatedly printed console often (indicating parameters constrained since naturally moving steps greater 0.25) model may either ill defined flat likelihood surface, genuine maximum-likelihood parameter estimates may difficult find. Standard errors computed following model convergence passing SE = TRUE, perform addition MH-RM stage treating maximum-likelihood estimates fixed points.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirt.html","id":"additional-helper-functions","dir":"Reference","previous_headings":"","what":"Additional helper functions","title":"Full-Information Item Factor Analysis (Multidimensional Item Response Theory) — mirt","text":"Additional functions available package can useful pre- post-estimation. : mirt.model Define IRT model specification use special syntax. Useful defining within     group parameter constraints, prior parameter distributions, specifying slope     coefficients factor coef-method Extract raw coefficients model, along standard errors confidence     intervals summary-method Extract standardized loadings model. Accepts rotate argument exploratory     item response model anova-method Compare nested models using likelihood ratio statistics well information criteria     AIC BIC residuals-method Compute pairwise residuals item using methods LD statistic     (Chen & Thissen, 1997), well response pattern residuals plot-method Plot various types test level plots including test score information functions     itemplot Plot various types item level plots, including score, standard error, information     functions, createItem Create customized itemtype currently exist package imputeMissing Impute missing data given computed Theta matrix fscores Find predicted scores latent traits using estimation methods EAP, MAP, ML,     WLE, EAPsum wald Compute Wald statistics follow convergence model suitable information matrix M2 Limited information goodness fit test statistic based determine well model fits     data itemfit personfit Goodness fit statistics item person levels, S-X2, infit, outfit,     boot.mirt Compute estimated parameter confidence intervals via bootstrap methods mirtCluster Define cluster package functions use capitalizing multi-core architecture     utilize available CPUs possible. help decrease estimation times tasks     can run parallel","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirt.html","id":"irt-models","dir":"Reference","previous_headings":"","what":"IRT Models","title":"Full-Information Item Factor Analysis (Multidimensional Item Response Theory) — mirt","text":"parameter labels use follow convention, using two factors \\(K\\) total number categories (using \\(k\\) specific category instances). Rasch one intercept estimated, latent variance \\(\\theta\\) freely estimated.     data two categories partial credit model used instead (see     'gpcm' ).      $$P(x = 1|\\theta, d) = \\frac{1}{1 + exp(-(\\theta + d))}$$ 1-4PL Depending model \\(u\\) may equal 1 (e.g., 3PL), \\(g\\) may equal 0 (e.g., 2PL),     may fixed 1 (e.g., 1PL).     $$P(x = 1|\\theta, \\psi) = g + \\frac{(u - g)}{       1 + exp(-(a_1 * \\theta_1 + a_2 * \\theta_2 + d))}$$ 5PL Currently restricted unidimensional models     $$P(x = 1|\\theta, \\psi) = g + \\frac{(u - g)}{       1 + exp(-(a_1 * \\theta_1 + d))^S}$$     \\(S\\) allows asymmetry response function     transformation constrained greater 0 (.e., log(S) estimated rather S) CLL Complementary log-log model (see Shim, Bonifay, Wiedermann, 2022)     $$P(x = 1|\\theta, b) = 1 - exp(-exp(\\theta - b))$$     Currently restricted unidimensional dichotomous data. graded graded model consists sequential 2PL models,     $$P(x = k | \\theta, \\psi) = P(x \\ge k | \\theta, \\phi) - P(x \\ge k + 1 | \\theta, \\phi)$$     Note \\(P(x \\ge 1 | \\theta, \\phi) = 1\\) \\(P(x \\ge K + 1 | \\theta, \\phi) = 0\\) ULL unipolar log-logistic model (ULL; Lucke, 2015) defined     graded response model, however     $$P(x \\le k | \\theta, \\psi) = \\frac{\\lambda_k\\theta^\\eta}{1 + \\lambda_k\\theta^\\eta}$$.     Internally \\(\\lambda\\) parameters exponentiated keep positive,     therefore reported estimates interpreted log units grsm constrained version graded model graded spacing equal across item     blocks adjusted single 'difficulty' parameter (c) latent variance     \\(\\theta\\) freely estimated (see Muraki, 1990 exact form).     restricted unidimensional models . gpcm/nominal gpcm \\(d\\) values treated fixed ordered values     \\(0:(K-1)\\) (nominal model \\(d_0\\) also set 0). Additionally,     identification nominal model \\(ak_0 = 0\\), \\(ak_{(K-1)} = (K - 1)\\).     $$P(x = k | \\theta, \\psi) =     \\frac{exp(ak_{k-1} * (a_1 * \\theta_1 + a_2 * \\theta_2) + d_{k-1})}     {\\sum_{k=1}^K exp(ak_{k-1} * (a_1 * \\theta_1 + a_2 * \\theta_2) + d_{k-1})}$$ partial credit model (itemtype = 'Rasch'; unidimensional )     model constrained \\(ak = (0,1,\\ldots, K-1)\\), \\(a_1 = 1\\),     latent variance \\(\\theta_1\\) freely estimated. Alternatively, partial credit model     can obtained containing slope parameters gpcms equal.     specific scoring function may included passing suitable list matrices     gpcm_mats input argument. nominal model parametrization helps identify empirical ordering     categories inspecting \\(ak\\) values. Larger values indicate item category     positively related latent trait(s) measured. instance, item     truly ordinal (Likert scale), 4 response categories, expect     see \\(ak_0 < ak_1 < ak_2 < ak_3\\) following estimation. hand     \\(ak_0 > ak_1\\) appear second category less related     trait first, therefore second category understood     'lowest score'. NOTE: nominal model can become numerical unstable poor choices high low     values chosen, resulting ak values greater abs(10) .     recommended choose high low anchors cause estimated parameters fall     0 \\(K - 1\\) either theoretical means re-estimating     model better values following convergence. gpcmIRT rsm gpcmIRT model classical generalized partial credit model unidimensional response      data. obtain fit gpcm presented , however parameterization      allows Rasch/generalized rating scale model special case. E.g., K = 4 category response model, $$P(x = 0 | \\theta, \\psi) = exp(0) / G$$      $$P(x = 1 | \\theta, \\psi) = exp((\\theta - b1) + c) / G$$      $$P(x = 2 | \\theta, \\psi) = exp((2\\theta - b1 - b2) + 2c) / G$$      $$P(x = 3 | \\theta, \\psi) = exp((3\\theta - b1 - b2 - b3) + 3c) / G$$           $$G = exp(0) + exp((\\theta - b1) + c) + exp((2\\theta - b1 - b2) + 2c) +        exp((3\\theta - b1 - b2 - b3) + 3c)$$      \\(\\) slope parameter, \\(b\\) parameters threshold      values adjacent category, \\(c\\) -called difficulty parameter      rating scale model fitted (otherwise, \\(c = 0\\) drops computations). gpcmIRT can constrained partial credit IRT model either constraining      slopes equal, setting slopes 1 freeing latent variance parameter. Finally, rsm constrained version (generalized) partial      credit model spacing equal      across item blocks adjusted single 'difficulty' parameter (c). Note      analogous relationship graded model grsm (additional      constraint regarding fixed discrimination parameters). sequential/Tutz multidimensional sequential response model form     $$P(x = k | \\theta, \\psi) = \\prod (1 - F(a_1 \\theta_1 + a_2 \\theta_2 + d_{sk}))       F(a_1 \\theta_1 + a_2 \\theta_2 + d_{jk})$$     \\(F(\\cdot)\\) cumulative logistic function.     Tutz variant model (Tutz, 1990) (via itemtype = 'Tutz')     assumes slope terms equal 1 latent     variance terms estimated (.e., Rasch variant).  ideal ideal point model form, upper bound constraint \\(d\\) set 0:     $$P(x = 1 | \\theta, \\psi) = exp(-0.5 * (a_1 * \\theta_1 + a_2 * \\theta_2 + d)^2)$$ partcomp Partially compensatory models consist product 2PL probability curves.     $$P(x = 1 | \\theta, \\psi) = g + (1 - g) (\\frac{1}{1 + exp(-(a_1 * \\theta_1 + d_1))}^c_1 *     \\frac{1}{1 + exp(-(a_2 * \\theta_2 + d_2))}^c_2)$$ \\(c_1\\) \\(c_2\\) binary indicator variables reflecting whether item include     select compensatory component (1) (0). Note constraining slopes     equal across items reduce model Embretson's (Whitely's) multicomponent model (1980). 2-4PLNRM Nested logistic curves modeling distractor items. Requires scoring key.     model broken two components probability endorsement. successful     endorsement probability trace 1-4PL model, unsuccessful endorsement:     $$P(x = 0 | \\theta, \\psi) =     (1 - P_{1-4PL}(x = 1 | \\theta, \\psi)) * P_{nominal}(x = k | \\theta, \\psi)$$     product complement dichotomous trace line nominal     response model. nominal model, slope parameters defined constrained     1's, last value \\(ak\\) freely estimated. ggum (multidimensional) generalized graded unfolding model     class ideal point models useful ordinal response data. form     $$P(z=k|\\theta,\\psi)=\\frac{exp\\left[\\left(z\\sqrt{\\sum_{d=1}^{D}     a_{id}^{2}(\\theta_{jd}-b_{id})^{2}}\\right)+\\sum_{k=0}^{z}\\psi_{ik}\\right]+     exp\\left[\\left((M-z)\\sqrt{\\sum_{d=1}^{D}a_{id}^{2}(\\theta_{jd}-b_{id})^{2}}\\right)+     \\sum_{k=0}^{z}\\psi_{ik}\\right]}{\\sum_{w=0}^{C}\\left(exp\\left[\\left(w     \\sqrt{\\sum_{d=1}^{D}a_{id}^{2}(\\theta_{jd}-b_{id})^{2}}\\right)+     \\sum_{k=0}^{z}\\psi_{ik}\\right]+exp\\left[\\left((M-w)     \\sqrt{\\sum_{d=1}^{D}a_{id}^{2}(\\theta_{jd}-b_{id})^{2}}\\right)+     \\sum_{k=0}^{z}\\psi_{ik}\\right]\\right)}$$     \\(\\theta_{jd}\\) location \\(j\\)th individual \\(d\\)th dimension,     \\(b_{id}\\) difficulty location \\(\\)th item \\(d\\)th dimension,     \\(a_{id}\\) discrimination \\(j\\)th individual \\(d\\)th dimension     (discrimination values constrained positive),     \\(\\psi_{ik}\\) \\(k\\)th subjective response category threshold \\(\\)th item,     assumed symmetric item constant across dimensions,     \\(\\psi_{ik} = \\sum_{d=1}^D a_{id} t_{ik}\\)     \\(z = 1,2,\\ldots, C\\) (\\(C\\) number categories minus 1),     \\(M = 2C + 1\\). (g)hcm, (g)alm, (g)sslm, (g)paralla Following Luo (2001), family response models     can characterized ordinal response functioning structure, differing     linking functions (\\(\\psi(x)\\)). example, two-dimensional model equation used     $$p_k =       \\frac{\\psi (\\rho_k)}{\\psi (\\rho_k) + \\psi (a_1 \\theta_1 + a_2 \\theta_2 + d)} $$     expressed slope-intercept form accommodate multidimensionality.     \"generalized\" versions family estimate slope rho     parameters, allow item     differ steepness unfolding model functions; otherwise, slopes fixed     value 1, though rho parameters must set 0 manually.     ordered polytomous items response function follows Guttman-scaling logic     $$P_1 = q_1\\cdot q_2 \\cdot q_3 \\cdots q_k$$     $$P_2 = p_1\\cdot q_2 \\cdot q_3 \\cdots q_k$$     $$P_3 = p_1\\cdot p_2 \\cdot q_3 \\cdots q_k$$     $$\\cdots$$     $$P_K = p_1\\cdot p_2 \\cdot p_3 \\cdots p_k$$     Note estimation purposes rho parameters expressed log units     remain positive estimation. Hence, parameterization used herein     $$p_k =       \\frac{\\psi (exp(\\rho^*_k))}{\\psi (exp(\\rho^*_k))) + \\psi (a_1 \\theta_1 + a_2 \\theta_2 + d)} $$     \\(\\rho^*_k\\) natural log units. Currently supported models family : (generalized) hyperbolic cosine model (\\(\\psi (x) = cosh(x)\\)), (generalized) absolute logistic model (\\(\\psi (x) = exp(|x|)\\)), (generalized) simple squared logistic model (\\(\\psi (x) = exp(x^2)\\)), (generalized) parallellogram analysis model (\\(\\psi (x) = x^2\\)), respectively. available dichotomous ordered polytomous response option items. spline Spline response models attempt model response curves uses non-linear potentially     non-monotonic patterns. form     $$P(x = 1|\\theta, \\eta) = \\frac{1}{1 + exp(-(\\eta_1 * X_1 + \\eta_2 * X_2 + \\cdots + \\eta_n * X_n))}$$     \\(X_n\\) spline design matrix \\(X\\) organized grid \\(\\theta\\)     values. B-splines natural polynomial basis supported, intercept input     set TRUE default. monopoly Monotone polynomial model polytomous response data form     $$P(x = k | \\theta, \\psi) =     \\frac{exp(\\sum_1^k (m^*(\\psi) + \\xi_{c-1})}     {\\sum_1^C exp(\\sum_1^K (m^*(\\psi) + \\xi_{c-1}))}$$     \\(m^*(\\psi)\\) monotone polynomial function without intercept.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirt.html","id":"html-help-files-exercises-and-examples","dir":"Reference","previous_headings":"","what":"HTML help files, exercises, and examples","title":"Full-Information Item Factor Analysis (Multidimensional Item Response Theory) — mirt","text":"access examples, vignettes, exercise files generated knitr please visit https://github.com/philchalmers/mirt/wiki.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Full-Information Item Factor Analysis (Multidimensional Item Response Theory) — mirt","text":"Andrich, D. (1978). rating scale formulation ordered response categories. Psychometrika, 43, 561-573. Andrich, D. (1996). Hyperbolic cosine latent trait models unfolding direct-responses pairwise preferences. Applied Psychological Measurement, 20, 269-290. Andrich, D., Luo, G. (1993). hyperbolic cosine latent trait model unfolding dichotomous single-     stimulus responses. Applied Psychological Measurement, 17, 253-276. Andrich, D. (1988). application unfolding model PIRT type measurement attitude. Applied Psychological Measurement, 12, 33-51. Bock, R. D., & Aitkin, M. (1981). Marginal maximum likelihood estimation item parameters: Application EM algorithm. Psychometrika, 46(4), 443-459. Bock, R. D., Gibbons, R., & Muraki, E. (1988). Full-Information Item Factor Analysis. Applied Psychological Measurement, 12(3), 261-280. Bock, R. D. & Lieberman, M. (1970). Fitting response model n dichotomously scored items. Psychometrika, 35, 179-197. Cai, L. (2010a). High-Dimensional exploratory item factor analysis Metropolis-Hastings Robbins-Monro algorithm. Psychometrika, 75, 33-57. Cai, L. (2010b). Metropolis-Hastings Robbins-Monro algorithm confirmatory item factor analysis. Journal Educational Behavioral Statistics, 35, 307-335. Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06 Chalmers, R. P. (2015). Extended Mixed-Effects Item Response Models MH-RM Algorithm. Journal Educational Measurement, 52, 200-222. doi:10.1111/jedm.12072 Chalmers, R. P. (2018). Numerical Approximation Observed Information Matrix Oakes' Identity. British Journal Mathematical Statistical Psychology DOI: 10.1111/bmsp.12127 Chalmers, R., P. & Flora, D. (2014). Maximum-likelihood Estimation Noncompensatory IRT Models MH-RM Algorithm. Applied Psychological Measurement, 38, 339-358. doi:10.1177/0146621614520958 Chen, W. H. & Thissen, D. (1997). Local dependence indices item pairs using item response theory. Journal Educational Behavioral Statistics, 22, 265-289. Embretson, S. E. (1984). general latent trait model response processes. Psychometrika, 49, 175-186. Falk, C. F. & Cai, L. (2016). Maximum Marginal Likelihood Estimation Monotonic Polynomial Generalized Partial Credit Model Applications Multiple Group Analysis. Psychometrika, 81, 434-460. Fischer, G. H. (1983). Logistic latent trait models linear constraints. Psychometrika, 48, 3-26. Hoijtink H. (1990). PARELLA: Measurement latent traits proximity items. Netherlands: University Groningen. Lord, F. M. & Novick, M. R. (1968). Statistical theory mental test scores. Addison-Wesley. Lucke, J. F. (2015). Unipolar item response models. S. P. Reise & D. . Revicki (Eds.), Handbook item response theory modeling: Applications typical performance assessment (pp. 272-284). New York, NY:  Routledge/Taylor & Francis Group. Luo G. (2001). class probabilistic unfolding models polytomous responses. Journal Mathematical Psychology. 45(2):224-248. 10.1006/jmps.2000.1310 Luo G, Andrich D. (2005). Information functions general dichotomous unfolding model. : Alagumalai S, Curtis D.D., & Hungi N., editor. Applied Rasch Measurement: Book Exemplars: Dordrecht, Netherlands: Springer. Maydeu-Olivares, ., Hernandez, . & McDonald, R. P. (2006). Multidimensional Ideal Point Item Response Theory Model Binary Data. Multivariate Behavioral Research, 41, 445-471. Muraki, E. (1990). Fitting polytomous item response model Likert-type data. Applied Psychological Measurement, 14, 59-71. Muraki, E. (1992). generalized partial credit model: Application EM algorithm. Applied Psychological Measurement, 16, 159-176. Muraki, E. & Carlson, E. B. (1995). Full-information factor analysis polytomous item responses. Applied Psychological Measurement, 19, 73-90. Ramsay, J. O. (1975). Solving implicit equations psychometric data analysis. Psychometrika, 40, 337-360. Rasch, G. (1960). Probabilistic models intelligence attainment tests. Danish Institute Educational Research. Roberts, J. S., Donoghue, J. R., & Laughlin, J. E. (2000). General Item Response Theory Model Unfolding Unidimensional Polytomous Responses. Applied Psychological Measurement, 24, 3-32. Samejima, F. (1969). Estimation latent ability using response pattern graded scores. Psychometrika Monographs, 34. Shim, H., Bonifay, W., & Wiedermann, W. (2022). Parsimonious asymmetric item response theory modeling complementary log-log link. Behavior Research Methods, 55, 200-219. Suh, Y. & Bolt, D. (2010). Nested logit models multiple-choice item response data. Psychometrika, 75, 454-473. Sympson, J. B. (1977). model testing multidimensional items. Proceedings 1977 Computerized Adaptive Testing Conference. Thissen, D. (1982). Marginal maximum likelihood estimation one-parameter logistic model. Psychometrika, 47, 175-186. Tutz, G. (1990). Sequential item response models ordered response. British Journal Mathematical Statistical Psychology, 43, 39-55. Varadhan, R. & Roland, C. (2008). Simple Globally Convergent Methods Accelerating Convergence EM Algorithm. Scandinavian Journal Statistics, 35, 335-353. Whitely, S. E. (1980). Multicomponent latent trait models ability tests. Psychometrika, 45(4), 470-494. Wood, R., Wilson, D. T., Gibbons, R. D., Schilling, S. G., Muraki, E., & Bock, R. D. (2003). TESTFACT 4 Windows: Test Scoring, Item Statistics, Full-information Item Factor Analysis [Computer software]. Lincolnwood, IL: Scientific Software International. Woods, C. M., Lin, N. (2009). Item Response Theory Estimation Latent Density Using Davidian Curves. Applied Psychological Measurement,33(2), 102-117.","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/mirt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Full-Information Item Factor Analysis (Multidimensional Item Response Theory) — mirt","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Full-Information Item Factor Analysis (Multidimensional Item Response Theory) — mirt","text":"","code":"# load LSAT section 7 data and compute 1 and 2 factor models data <- expand.table(LSAT7) itemstats(data) #> $overall #>     N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  1000            3.707          1.199 0.143 0.052 0.453     0.886 #>  #> $itemstats #>           N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item.1 1000 2 0.828 0.378   0.530         0.246       0.396 #> Item.2 1000 2 0.658 0.475   0.600         0.247       0.394 #> Item.3 1000 2 0.772 0.420   0.611         0.313       0.345 #> Item.4 1000 2 0.606 0.489   0.592         0.223       0.415 #> Item.5 1000 2 0.843 0.364   0.461         0.175       0.438 #>  #> $proportions #>            0     1 #> Item.1 0.172 0.828 #> Item.2 0.342 0.658 #> Item.3 0.228 0.772 #> Item.4 0.394 0.606 #> Item.5 0.157 0.843 #>   (mod1 <- mirt(data, 1)) #>  #>  #> Call: #> mirt(data = data, model = 1) #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 1e-04 tolerance after 28 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Log-likelihood = -2658.805 #> Estimated parameters: 10  #> AIC = 5337.61 #> BIC = 5386.688; SABIC = 5354.927 #> G2 (21) = 31.7, p = 0.0628 #> RMSEA = 0.023, CFI = NaN, TLI = NaN coef(mod1) #> $Item.1 #>        a1     d g u #> par 0.988 1.856 0 1 #>  #> $Item.2 #>        a1     d g u #> par 1.081 0.808 0 1 #>  #> $Item.3 #>        a1     d g u #> par 1.706 1.804 0 1 #>  #> $Item.4 #>        a1     d g u #> par 0.765 0.486 0 1 #>  #> $Item.5 #>        a1     d g u #> par 0.736 1.855 0 1 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0      1 #>  summary(mod1) #>           F1    h2 #> Item.1 0.502 0.252 #> Item.2 0.536 0.287 #> Item.3 0.708 0.501 #> Item.4 0.410 0.168 #> Item.5 0.397 0.157 #>  #> SS loadings:  1.366  #> Proportion Var:  0.273  #>  #> Factor correlations:  #>  #>    F1 #> F1  1 plot(mod1)  plot(mod1, type = 'trace')   # \\donttest{ (mod2 <- mirt(data, 1, SE = TRUE)) #standard errors via the Oakes method #>  #>  #> Calculating information matrix... #>  #> Call: #> mirt(data = data, model = 1, SE = TRUE) #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 1e-04 tolerance after 28 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Information matrix estimated with method: Oakes #> Second-order test: model is a possible local maximum #> Condition number of information matrix =  30.23088 #>  #> Log-likelihood = -2658.805 #> Estimated parameters: 10  #> AIC = 5337.61 #> BIC = 5386.688; SABIC = 5354.927 #> G2 (21) = 31.7, p = 0.0628 #> RMSEA = 0.023, CFI = NaN, TLI = NaN (mod2 <- mirt(data, 1, SE = TRUE, SE.type = 'SEM')) #standard errors with SEM method #>  #>  #> Calculating information matrix... #>  #> Call: #> mirt(data = data, model = 1, SE = TRUE, SE.type = \"SEM\") #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 1e-05 tolerance after 74 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: none  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Information matrix estimated with method: SEM #> Second-order test: model is a possible local maximum #> Condition number of information matrix =  30.12751 #>  #> Log-likelihood = -2658.805 #> Estimated parameters: 10  #> AIC = 5337.61 #> BIC = 5386.688; SABIC = 5354.927 #> G2 (21) = 31.7, p = 0.0628 #> RMSEA = 0.023, CFI = NaN, TLI = NaN coef(mod2) #> $Item.1 #>            a1     d  g  u #> par     0.988 1.856  0  1 #> CI_2.5  0.639 1.599 NA NA #> CI_97.5 1.336 2.112 NA NA #>  #> $Item.2 #>            a1     d  g  u #> par     1.081 0.808  0  1 #> CI_2.5  0.755 0.629 NA NA #> CI_97.5 1.407 0.987 NA NA #>  #> $Item.3 #>            a1     d  g  u #> par     1.707 1.805  0  1 #> CI_2.5  1.086 1.395 NA NA #> CI_97.5 2.329 2.215 NA NA #>  #> $Item.4 #>            a1     d  g  u #> par     0.765 0.486  0  1 #> CI_2.5  0.500 0.339 NA NA #> CI_97.5 1.030 0.633 NA NA #>  #> $Item.5 #>            a1     d  g  u #> par     0.736 1.854  0  1 #> CI_2.5  0.437 1.630 NA NA #> CI_97.5 1.034 2.079 NA NA #>  #> $GroupPars #>         MEAN_1 COV_11 #> par          0      1 #> CI_2.5      NA     NA #> CI_97.5     NA     NA #>  (mod3 <- mirt(data, 1, SE = TRUE, SE.type = 'Richardson')) #with numerical Richardson method #>  #>  #> Calculating information matrix... #>  #> Call: #> mirt(data = data, model = 1, SE = TRUE, SE.type = \"Richardson\") #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 1e-04 tolerance after 28 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Information matrix estimated with method: Richardson #> Second-order test: model is a possible local maximum #> Condition number of information matrix =  30.23102 #>  #> Log-likelihood = -2658.805 #> Estimated parameters: 10  #> AIC = 5337.61 #> BIC = 5386.688; SABIC = 5354.927 #> G2 (21) = 31.7, p = 0.0628 #> RMSEA = 0.023, CFI = NaN, TLI = NaN residuals(mod1) #> LD matrix (lower triangle) and standardized residual correlations (upper triangle) #>  #> Upper triangle summary: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  -0.037  -0.020  -0.007   0.001   0.024   0.051  #>  #>        Item.1 Item.2 Item.3 Item.4 Item.5 #> Item.1        -0.021 -0.029  0.051  0.049 #> Item.2  0.453         0.033 -0.016 -0.037 #> Item.3  0.854  1.060        -0.012 -0.002 #> Item.4  2.572  0.267  0.153         0.000 #> Item.5  2.389  1.384  0.003  0.000        plot(mod1) #test score function  plot(mod1, type = 'trace') #trace lines  plot(mod2, type = 'info') #test information  plot(mod2, MI=200) #expected total score with 95% confidence intervals   # estimated 3PL model for item 5 only (mod1.3PL <- mirt(data, 1, itemtype = c('2PL', '2PL', '2PL', '2PL', '3PL'))) #>  #>  #> Call: #> mirt(data = data, model = 1, itemtype = c(\"2PL\", \"2PL\", \"2PL\",  #>     \"2PL\", \"3PL\")) #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 1e-04 tolerance after 43 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Log-likelihood = -2658.794 #> Estimated parameters: 11  #> AIC = 5339.587 #> BIC = 5393.573; SABIC = 5358.636 #> G2 (20) = 31.68, p = 0.0469 #> RMSEA = 0.024, CFI = NaN, TLI = NaN coef(mod1.3PL) #> $Item.1 #>        a1     d g u #> par 0.987 1.855 0 1 #>  #> $Item.2 #>        a1     d g u #> par 1.082 0.808 0 1 #>  #> $Item.3 #>        a1     d g u #> par 1.706 1.805 0 1 #>  #> $Item.4 #>        a1     d g u #> par 0.764 0.486 0 1 #>  #> $Item.5 #>        a1     d     g u #> par 0.778 1.643 0.161 1 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0      1 #>   # internally g and u pars are stored as logits, so usually a good idea to include normal prior #  to help stabilize the parameters. For a value around .182 use a mean #  of -1.5 (since 1 / (1 + exp(-(-1.5))) == .182) model <- 'F = 1-5          PRIOR = (5, g, norm, -1.5, 3)' mod1.3PL.norm <- mirt(data, model, itemtype = c('2PL', '2PL', '2PL', '2PL', '3PL')) #>  coef(mod1.3PL.norm) #> $Item.1 #>        a1     d g u #> par 0.987 1.855 0 1 #>  #> $Item.2 #>        a1     d g u #> par 1.083 0.808 0 1 #>  #> $Item.3 #>        a1     d g u #> par 1.706 1.804 0 1 #>  #> $Item.4 #>        a1     d g u #> par 0.764 0.486 0 1 #>  #> $Item.5 #>        a1   d    g u #> par 0.788 1.6 0.19 1 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0      1 #>  #limited information fit statistics M2(mod1.3PL.norm) #>             M2 df          p      RMSEA RMSEA_5   RMSEA_95      SRMSR       TLI #> stats 8.800082  4 0.06629543 0.03465864       0 0.06610847 0.03207363 0.9454563 #>             CFI #> stats 0.9781825  # unidimensional ideal point model idealpt <- mirt(data, 1, itemtype = 'ideal') #>  plot(idealpt, type = 'trace', facet_items = TRUE)  plot(idealpt, type = 'trace', facet_items = FALSE)   # two factors (exploratory) mod2 <- mirt(data, 2) #>  coef(mod2) #> $Item.1 #>         a1   a2     d g u #> par -2.007 0.87 2.648 0 1 #>  #> $Item.2 #>         a1     a2     d g u #> par -0.849 -0.522 0.788 0 1 #>  #> $Item.3 #>         a1     a2     d g u #> par -2.153 -1.836 2.483 0 1 #>  #> $Item.4 #>         a1     a2     d g u #> par -0.756 -0.028 0.485 0 1 #>  #> $Item.5 #>         a1 a2     d g u #> par -0.757  0 1.864 0 1 #>  #> $GroupPars #>     MEAN_1 MEAN_2 COV_11 COV_21 COV_22 #> par      0      0      1      0      1 #>  summary(mod2, rotate = 'oblimin') #oblimin rotation #>  #> Rotation:  oblimin  #>  #> Rotated factor loadings:  #>  #>             F1      F2    h2 #> Item.1  0.7944 -0.0111 0.623 #> Item.2  0.0804  0.4630 0.255 #> Item.3 -0.0129  0.8628 0.734 #> Item.4  0.2794  0.1925 0.165 #> Item.5  0.2929  0.1772 0.165 #>  #> Rotated SS loadings:  0.802 1.027  #>  #> Factor correlations:  #>  #>       F1 F2 #> F1 1.000    #> F2 0.463  1 residuals(mod2) #> LD matrix (lower triangle) and standardized residual correlations (upper triangle) #>  #> Upper triangle summary: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  -0.018  -0.001   0.000   0.000   0.002   0.011  #>  #>        Item.1 Item.2 Item.3 Item.4 Item.5 #> Item.1        -0.001  0.001  0.002  0.003 #> Item.2  0.001         0.000  0.011 -0.018 #> Item.3  0.001  0.000        -0.002  0.006 #> Item.4  0.002  0.111  0.004        -0.001 #> Item.5  0.008  0.325  0.041  0.001        plot(mod2)  plot(mod2, rotate = 'oblimin')   anova(mod1, mod2) #compare the two models #>           AIC    SABIC       HQ      BIC    logLik     X2 df     p #> mod1 5337.610 5354.927 5356.263 5386.688 -2658.805                 #> mod2 5335.039 5359.283 5361.153 5403.748 -2653.520 10.571  4 0.032 scoresfull <- fscores(mod2) #factor scores for each response pattern head(scoresfull) #>             F1        F2 #> [1,] -1.700513 -1.711766 #> [2,] -1.700513 -1.711766 #> [3,] -1.700513 -1.711766 #> [4,] -1.700513 -1.711766 #> [5,] -1.700513 -1.711766 #> [6,] -1.700513 -1.711766 scorestable <- fscores(mod2, full.scores = FALSE) #save factor score table #>  #> Method:  EAP #> Rotate:  oblimin #>  #> Empirical Reliability: #>  #>     F1     F2  #> 0.2717 0.3565  head(scorestable) #>      Item.1 Item.2 Item.3 Item.4 Item.5        F1         F2     SE_F1 #> [1,]      0      0      0      0      0 -1.700513 -1.7117658 0.8233498 #> [2,]      0      0      0      0      1 -1.442213 -1.5315319 0.8291596 #> [3,]      0      0      0      1      0 -1.448997 -1.5246522 0.8289670 #> [4,]      0      0      0      1      1 -1.186286 -1.3432706 0.8376135 #> [5,]      0      0      1      0      0 -1.369479 -0.7080874 0.8344669 #> [6,]      0      0      1      0      1 -1.099364 -0.5102905 0.8455289 #>          SE_F2 #> [1,] 0.7705787 #> [2,] 0.7691522 #> [3,] 0.7691142 #> [4,] 0.7711322 #> [5,] 0.7962954 #> [6,] 0.8101333  # confirmatory (as an example, model is not identified since you need 3 items per factor) # Two ways to define a confirmatory model: with mirt.model, or with a string  # these model definitions are equivalent cmodel <- mirt.model('    F1 = 1,4,5    F2 = 2,3') cmodel2 <- 'F1 = 1,4,5             F2 = 2,3'  cmod <- mirt(data, cmodel) #>  # cmod <- mirt(data, cmodel2) # same as above coef(cmod) #> $Item.1 #>        a1 a2     d g u #> par 1.792  0 2.358 0 1 #>  #> $Item.2 #>     a1    a2   d g u #> par  0 1.427 0.9 0 1 #>  #> $Item.3 #>     a1    a2     d g u #> par  0 1.559 1.725 0 1 #>  #> $Item.4 #>        a1 a2     d g u #> par 0.743  0 0.483 0 1 #>  #> $Item.5 #>        a1 a2     d g u #> par 0.763  0 1.867 0 1 #>  #> $GroupPars #>     MEAN_1 MEAN_2 COV_11 COV_21 COV_22 #> par      0      0      1      0      1 #>  anova(cmod, mod2) #>           AIC    SABIC       HQ      BIC    logLik     X2 df p #> cmod 5392.596 5409.913 5411.249 5441.674 -2686.298             #> mod2 5335.039 5359.283 5361.153 5403.748 -2653.520 65.557  4 0 # check if identified by computing information matrix (cmod <- mirt(data, cmodel, SE = TRUE)) #>  #>  #> Calculating information matrix... #> Warning: Could not invert information matrix; model may not be (empirically) identified. #>  #> Call: #> mirt(data = data, model = cmodel, SE = TRUE) #>  #> Full-information item factor analysis with 2 factor(s). #> Converged within 1e-04 tolerance after 125 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 31 #> Latent density type: Gaussian  #>  #> Information matrix estimated with method: Oakes #> Second-order test: model is not a maximum or the information matrix is too inaccurate #>  #> Log-likelihood = -2686.298 #> Estimated parameters: 10  #> AIC = 5392.596 #> BIC = 5441.674; SABIC = 5409.913 #> G2 (21) = 86.69, p = 0 #> RMSEA = 0.056, CFI = NaN, TLI = NaN  ########### # data from the 'ltm' package in numeric format itemstats(Science) #> $overall #>    N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  392           11.668          2.003 0.275 0.098 0.598      1.27 #>  #> $itemstats #>           N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Comfort 392 4 3.120 0.588   0.596         0.352       0.552 #> Work    392 4 2.722 0.807   0.666         0.332       0.567 #> Future  392 4 2.990 0.757   0.748         0.488       0.437 #> Benefit 392 4 2.837 0.802   0.684         0.363       0.541 #>  #> $proportions #>             1     2     3     4 #> Comfort 0.013 0.082 0.679 0.227 #> Work    0.084 0.250 0.526 0.140 #> Future  0.036 0.184 0.536 0.245 #> Benefit 0.054 0.255 0.492 0.199 #>   pmod1 <- mirt(Science, 1) #>  plot(pmod1)  plot(pmod1, type = 'trace')  plot(pmod1, type = 'itemscore')  summary(pmod1) #>            F1    h2 #> Comfort 0.522 0.273 #> Work    0.584 0.342 #> Future  0.803 0.645 #> Benefit 0.541 0.293 #>  #> SS loadings:  1.552  #> Proportion Var:  0.388  #>  #> Factor correlations:  #>  #>    F1 #> F1  1  # Constrain all slopes to be equal with the constrain = list() input or mirt.model() syntax # first obtain parameter index values <- mirt(Science,1, pars = 'values') values #note that slopes are numbered 1,5,9,13, or index with values$parnum[values$name == 'a1'] #>    group    item     class   name parnum  value lbound ubound   est const #> 1    all Comfort    graded     a1      1  0.851   -Inf    Inf  TRUE  none #> 2    all Comfort    graded     d1      2  4.390   -Inf    Inf  TRUE  none #> 3    all Comfort    graded     d2      3  2.583   -Inf    Inf  TRUE  none #> 4    all Comfort    graded     d3      4 -1.471   -Inf    Inf  TRUE  none #> 5    all    Work    graded     a1      5  0.851   -Inf    Inf  TRUE  none #> 6    all    Work    graded     d1      6  2.707   -Inf    Inf  TRUE  none #> 7    all    Work    graded     d2      7  0.842   -Inf    Inf  TRUE  none #> 8    all    Work    graded     d3      8 -2.120   -Inf    Inf  TRUE  none #> 9    all  Future    graded     a1      9  0.851   -Inf    Inf  TRUE  none #> 10   all  Future    graded     d1     10  3.543   -Inf    Inf  TRUE  none #> 11   all  Future    graded     d2     11  1.522   -Inf    Inf  TRUE  none #> 12   all  Future    graded     d3     12 -1.357   -Inf    Inf  TRUE  none #> 13   all Benefit    graded     a1     13  0.851   -Inf    Inf  TRUE  none #> 14   all Benefit    graded     d1     14  3.166   -Inf    Inf  TRUE  none #> 15   all Benefit    graded     d2     15  0.982   -Inf    Inf  TRUE  none #> 16   all Benefit    graded     d3     16 -1.661   -Inf    Inf  TRUE  none #> 17   all   GROUP GroupPars MEAN_1     17  0.000   -Inf    Inf FALSE  none #> 18   all   GROUP GroupPars COV_11     18  1.000      0    Inf FALSE  none #>    nconst prior.type prior_1 prior_2 #> 1    none       none     NaN     NaN #> 2    none       none     NaN     NaN #> 3    none       none     NaN     NaN #> 4    none       none     NaN     NaN #> 5    none       none     NaN     NaN #> 6    none       none     NaN     NaN #> 7    none       none     NaN     NaN #> 8    none       none     NaN     NaN #> 9    none       none     NaN     NaN #> 10   none       none     NaN     NaN #> 11   none       none     NaN     NaN #> 12   none       none     NaN     NaN #> 13   none       none     NaN     NaN #> 14   none       none     NaN     NaN #> 15   none       none     NaN     NaN #> 16   none       none     NaN     NaN #> 17   none       none     NaN     NaN #> 18   none       none     NaN     NaN (pmod1_equalslopes <- mirt(Science, 1, constrain = list(c(1,5,9,13)))) #>  #>  #> Call: #> mirt(data = Science, model = 1, constrain = list(c(1, 5, 9, 13))) #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 1e-04 tolerance after 15 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Log-likelihood = -1613.899 #> Estimated parameters: 13  #> AIC = 3253.798 #> BIC = 3305.425; SABIC = 3264.176 #> G2 (242) = 223.62, p = 0.7959 #> RMSEA = 0, CFI = NaN, TLI = NaN coef(pmod1_equalslopes) #> $Comfort #>        a1    d1    d2     d3 #> par 1.321 5.165 2.844 -1.587 #>  #> $Work #>        a1    d1    d2     d3 #> par 1.321 2.992 0.934 -2.319 #>  #> $Future #>        a1    d1    d2     d3 #> par 1.321 4.067 1.662 -1.488 #>  #> $Benefit #>        a1   d1    d2     d3 #> par 1.321 3.55 1.057 -1.806 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0      1 #>   # using mirt.model syntax, constrain all item slopes to be equal model <- 'F = 1-4           CONSTRAIN = (1-4, a1)' (pmod1_equalslopes <- mirt(Science, model)) #>  #>  #> Call: #> mirt(data = Science, model = model) #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 1e-04 tolerance after 15 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Log-likelihood = -1613.899 #> Estimated parameters: 13  #> AIC = 3253.798 #> BIC = 3305.425; SABIC = 3264.176 #> G2 (242) = 223.62, p = 0.7959 #> RMSEA = 0, CFI = NaN, TLI = NaN coef(pmod1_equalslopes) #> $Comfort #>        a1    d1    d2     d3 #> par 1.321 5.165 2.844 -1.587 #>  #> $Work #>        a1    d1    d2     d3 #> par 1.321 2.992 0.934 -2.319 #>  #> $Future #>        a1    d1    d2     d3 #> par 1.321 4.067 1.662 -1.488 #>  #> $Benefit #>        a1   d1    d2     d3 #> par 1.321 3.55 1.057 -1.806 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0      1 #>   coef(pmod1_equalslopes) #> $Comfort #>        a1    d1    d2     d3 #> par 1.321 5.165 2.844 -1.587 #>  #> $Work #>        a1    d1    d2     d3 #> par 1.321 2.992 0.934 -2.319 #>  #> $Future #>        a1    d1    d2     d3 #> par 1.321 4.067 1.662 -1.488 #>  #> $Benefit #>        a1   d1    d2     d3 #> par 1.321 3.55 1.057 -1.806 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0      1 #>  anova(pmod1_equalslopes, pmod1) #significantly worse fit with almost all criteria #>                        AIC    SABIC       HQ      BIC    logLik     X2 df     p #> pmod1_equalslopes 3253.798 3264.176 3274.259 3305.425 -1613.899                 #> pmod1             3249.739 3262.512 3274.922 3313.279 -1608.870 10.059  3 0.018  pmod2 <- mirt(Science, 2) #>  summary(pmod2) #>  #> Rotation:  oblimin  #>  #> Rotated factor loadings:  #>  #>              F1      F2    h2 #> Comfort  0.6016  0.0312 0.382 #> Work    -0.0573  0.7971 0.592 #> Future   0.3302  0.5153 0.548 #> Benefit  0.7231 -0.0239 0.506 #>  #> Rotated SS loadings:  0.997 0.902  #>  #> Factor correlations:  #>  #>       F1 F2 #> F1 1.000    #> F2 0.511  1 plot(pmod2, rotate = 'oblimin')  itemplot(pmod2, 1, rotate = 'oblimin')  anova(pmod1, pmod2) #>            AIC    SABIC       HQ      BIC    logLik     X2 df     p #> pmod1 3249.739 3262.512 3274.922 3313.279 -1608.870                 #> pmod2 3241.938 3257.106 3271.843 3317.392 -1601.969 13.801  3 0.003  # unidimensional fit with a generalized partial credit and nominal model (gpcmod <- mirt(Science, 1, 'gpcm')) #>  #>  #> Call: #> mirt(data = Science, model = 1, itemtype = \"gpcm\") #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 1e-04 tolerance after 50 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Log-likelihood = -1612.683 #> Estimated parameters: 16  #> AIC = 3257.366 #> BIC = 3320.906; SABIC = 3270.139 #> G2 (239) = 221.19, p = 0.7896 #> RMSEA = 0, CFI = NaN, TLI = NaN coef(gpcmod) #> $Comfort #>        a1 ak0 ak1 ak2 ak3 d0    d1    d2    d3 #> par 0.865   0   1   2   3  0 2.831 5.324 3.998 #>  #> $Work #>        a1 ak0 ak1 ak2 ak3 d0    d1    d2    d3 #> par 0.841   0   1   2   3  0 1.711 2.578 0.848 #>  #> $Future #>        a1 ak0 ak1 ak2 ak3 d0    d1    d2    d3 #> par 2.204   0   1   2   3  0 4.601 6.759 4.918 #>  #> $Benefit #>        a1 ak0 ak1 ak2 ak3 d0    d1    d2    d3 #> par 0.724   0   1   2   3  0 2.099 2.899 1.721 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0      1 #>   # for the nominal model the lowest and highest categories are assumed to be the #  theoretically lowest and highest categories that related to the latent trait(s) (nomod <- mirt(Science, 1, 'nominal')) #>  #>  #> Call: #> mirt(data = Science, model = 1, itemtype = \"nominal\") #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 1e-04 tolerance after 71 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Log-likelihood = -1608.455 #> Estimated parameters: 24  #> AIC = 3264.91 #> BIC = 3360.22; SABIC = 3284.069 #> G2 (231) = 212.73, p = 0.8002 #> RMSEA = 0, CFI = NaN, TLI = NaN coef(nomod) #ordering of ak values suggest that the items are indeed ordinal #> $Comfort #>        a1 ak0   ak1   ak2 ak3 d0    d1    d2    d3 #> par 1.008   0 1.541 1.999   3  0 3.639 5.905 4.533 #>  #> $Work #>        a1 ak0   ak1 ak2 ak3 d0    d1    d2    d3 #> par 0.841   0 0.689 1.5   3  0 1.464 2.326 0.325 #>  #> $Future #>        a1 ak0   ak1   ak2 ak3 d0    d1    d2    d3 #> par 2.041   0 0.762 1.861   3  0 3.668 5.868 3.949 #>  #> $Benefit #>        a1 ak0   ak1   ak2 ak3 d0    d1    d2    d3 #> par 0.779   0 1.036 1.742   3  0 2.144 2.911 1.621 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0      1 #>  anova(gpcmod, nomod) #>             AIC    SABIC       HQ      BIC    logLik    X2 df    p #> gpcmod 3257.366 3270.139 3282.549 3320.906 -1612.683               #> nomod  3264.910 3284.069 3302.684 3360.220 -1608.455 8.456  8 0.39 itemplot(nomod, 3)   # generalized graded unfolding model (ggum <- mirt(Science, 1, 'ggum')) #>  #>  #> Call: #> mirt(data = Science, model = 1, itemtype = \"ggum\") #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 1e-04 tolerance after 89 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: nlminb  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Log-likelihood = -1611.484 #> Estimated parameters: 20  #> AIC = 3262.968 #> BIC = 3342.393; SABIC = 3278.934 #> G2 (235) = 218.79, p = 0.7687 #> RMSEA = 0, CFI = NaN, TLI = NaN coef(ggum, simplify=TRUE) #> $items #>            a1    b1    t1    t2    t3 #> Comfort 0.824 3.478 6.826 6.475 1.780 #> Work    0.818 3.217 5.280 4.274 0.969 #> Future  2.241 2.800 4.888 3.774 1.961 #> Benefit 0.696 3.584 6.556 4.725 1.744 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  plot(ggum)  plot(ggum, type = 'trace')  plot(ggum, type = 'itemscore')   # monotonic polyomial models (monopoly <- mirt(Science, 1, 'monopoly')) #>  #>  #> Call: #> mirt(data = Science, model = 1, itemtype = \"monopoly\") #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 1e-04 tolerance after 55 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Log-likelihood = -1601.174 #> Estimated parameters: 24  #> AIC = 3250.347 #> BIC = 3345.657; SABIC = 3269.506 #> G2 (231) = 198.17, p = 0.9424 #> RMSEA = 0, CFI = NaN, TLI = NaN coef(monopoly, simplify=TRUE) #> $items #>          omega   xi1   xi2    xi3 alpha1   tau2 #> Comfort -1.431 2.911 2.218 -1.469 -0.934  0.728 #> Work    -0.412 1.378 0.698 -2.152 -0.499 -1.151 #> Future   0.833 4.988 2.259 -1.910  0.019 -8.472 #> Benefit -1.714 1.883 0.618 -1.389 -1.424  0.716 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  plot(monopoly)  plot(monopoly, type = 'trace')  plot(monopoly, type = 'itemscore')   # unipolar IRT model unimod <- mirt(Science, itemtype = 'ULL') #>  coef(unimod, simplify=TRUE) #> $items #>          eta1 log_lambda1 log_lambda2 log_lambda3 #> Comfort 1.175       4.776       2.299      -1.709 #> Work    1.618       2.533       0.554      -2.736 #> Future  2.801       4.030       1.525      -2.594 #> Benefit 1.319       3.020       0.681      -1.995 #>  #> $GroupPars #>     meanlog sdlog #> par       0     1 #>  plot(unimod)  plot(unimod, type = 'trace')  itemplot(unimod, 1)   # following use the correct log-normal density for latent trait itemfit(unimod) #>      item   S_X2 df.S_X2 RMSEA.S_X2 p.S_X2 #> 1 Comfort  5.664       6      0.000  0.462 #> 2    Work 10.136       8      0.026  0.256 #> 3  Future 19.477       8      0.061  0.013 #> 4 Benefit 12.106      11      0.016  0.356 M2(unimod, type = 'C2') #>             M2 df            p     RMSEA    RMSEA_5  RMSEA_95     SRMSR #> stats 18.69535  2 8.716799e-05 0.1461148 0.09026025 0.2096111 0.0786373 #>             TLI       CFI #> stats 0.7376985 0.9125662 fs <- fscores(unimod) hist(fs, 20)  fscores(unimod, method = 'EAPsum', full.scores = FALSE) #>       df     X2 p.X2 SEM.alpha rxx.alpha rxx_F1 #> stats 10 33.926    0     1.305     0.658  0.531 #>  #>    Sum.Scores        F1      SE_F1 observed   expected    std.res #> 4           4 0.1376873 0.15335923        2  0.1272008 5.25105159 #> 5           5 0.3042890 0.08785157        1  0.7661176 0.26720824 #> 6           6 0.3284723 0.08391637        2  4.3386571 1.12276505 #> 7           7 0.3516712 0.12603932        1 13.9085516 3.46127864 #> 8           8 0.4073863 0.19870839       11 27.7386378 3.17817310 #> 9           9 0.5302420 0.30521408       32 40.6239017 1.35304731 #> 10         10 0.7480162 0.44003772       58 52.2707373 0.79244554 #> 11         11 1.0530929 0.60449010       70 63.5072412 0.81473738 #> 12         12 1.4783801 0.84469965       91 68.8793503 2.66534454 #> 13         13 2.1635583 1.28183452       56 54.4178539 0.21447460 #> 14         14 3.2989290 2.00103437       36 36.1867205 0.03103969 #> 15         15 5.1090423 3.23556487       20 20.8209294 0.17991019 #> 16         16 8.2218805 5.29778036       12  8.4141007 1.23621564  ## example applying survey weights. # weight the first half of the cases to be more representative of population survey.weights <- c(rep(2, nrow(Science)/2), rep(1, nrow(Science)/2)) survey.weights <- survey.weights/sum(survey.weights) * nrow(Science) unweighted <- mirt(Science, 1) #>  weighted <- mirt(Science, 1, survey.weights=survey.weights) #>   ########### # empirical dimensionality testing that includes 'guessing'  data(SAT12) data <- key2binary(SAT12,   key = c(1,4,5,2,3,1,2,1,3,1,2,4,2,1,5,3,4,4,1,4,3,3,4,1,3,5,1,3,1,5,4,5)) itemstats(data) #> $overall #>    N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  600           18.202          5.054 0.108 0.075 0.798     2.272 #>  #> $itemstats #>           N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item.1  600 2 0.283 0.451   0.380         0.300       0.793 #> Item.2  600 2 0.568 0.496   0.539         0.464       0.785 #> Item.3  600 2 0.280 0.449   0.446         0.371       0.789 #> Item.4  600 2 0.378 0.485   0.325         0.235       0.796 #> Item.5  600 2 0.620 0.486   0.424         0.340       0.791 #> Item.6  600 2 0.160 0.367   0.414         0.351       0.791 #> Item.7  600 2 0.760 0.427   0.366         0.289       0.793 #> Item.8  600 2 0.202 0.402   0.307         0.233       0.795 #> Item.9  600 2 0.885 0.319   0.189         0.127       0.798 #> Item.10 600 2 0.422 0.494   0.465         0.383       0.789 #> Item.11 600 2 0.983 0.128   0.181         0.156       0.797 #> Item.12 600 2 0.415 0.493   0.173         0.076       0.803 #> Item.13 600 2 0.662 0.474   0.438         0.358       0.790 #> Item.14 600 2 0.723 0.448   0.411         0.333       0.791 #> Item.15 600 2 0.817 0.387   0.393         0.325       0.792 #> Item.16 600 2 0.413 0.493   0.367         0.278       0.794 #> Item.17 600 2 0.963 0.188   0.238         0.202       0.796 #> Item.18 600 2 0.352 0.478   0.576         0.508       0.783 #> Item.19 600 2 0.548 0.498   0.401         0.314       0.792 #> Item.20 600 2 0.873 0.333   0.376         0.318       0.792 #> Item.21 600 2 0.915 0.279   0.190         0.136       0.798 #> Item.22 600 2 0.935 0.247   0.284         0.238       0.795 #> Item.23 600 2 0.313 0.464   0.338         0.253       0.795 #> Item.24 600 2 0.728 0.445   0.422         0.346       0.791 #> Item.25 600 2 0.375 0.485   0.383         0.297       0.793 #> Item.26 600 2 0.460 0.499   0.562         0.489       0.783 #> Item.27 600 2 0.862 0.346   0.425         0.367       0.791 #> Item.28 600 2 0.530 0.500   0.465         0.383       0.789 #> Item.29 600 2 0.340 0.474   0.407         0.324       0.791 #> Item.30 600 2 0.440 0.497   0.255         0.159       0.799 #> Item.31 600 2 0.833 0.373   0.479         0.419       0.788 #> Item.32 600 2 0.162 0.368   0.110         0.037       0.802 #>  #> $proportions #>             0     1 #> Item.1  0.717 0.283 #> Item.2  0.432 0.568 #> Item.3  0.720 0.280 #> Item.4  0.622 0.378 #> Item.5  0.380 0.620 #> Item.6  0.840 0.160 #> Item.7  0.240 0.760 #> Item.8  0.798 0.202 #> Item.9  0.115 0.885 #> Item.10 0.578 0.422 #> Item.11 0.017 0.983 #> Item.12 0.585 0.415 #> Item.13 0.338 0.662 #> Item.14 0.277 0.723 #> Item.15 0.183 0.817 #> Item.16 0.587 0.413 #> Item.17 0.037 0.963 #> Item.18 0.648 0.352 #> Item.19 0.452 0.548 #> Item.20 0.127 0.873 #> Item.21 0.085 0.915 #> Item.22 0.065 0.935 #> Item.23 0.687 0.313 #> Item.24 0.272 0.728 #> Item.25 0.625 0.375 #> Item.26 0.540 0.460 #> Item.27 0.138 0.862 #> Item.28 0.470 0.530 #> Item.29 0.660 0.340 #> Item.30 0.560 0.440 #> Item.31 0.167 0.833 #> Item.32 0.838 0.162 #>   mod1 <- mirt(data, 1) #>  extract.mirt(mod1, 'time') #time elapsed for each estimation component #> TOTAL:   Data  Estep  Mstep     SE   Post  #>  0.268  0.035  0.079  0.138  0.000  0.000   # optionally use Newton-Raphson for (generally) faster convergence in the M-step's mod1 <- mirt(data, 1, optimizer = 'NR') #>  extract.mirt(mod1, 'time') #> TOTAL:   Data  Estep  Mstep     SE   Post  #>  0.220  0.035  0.090  0.074  0.001  0.000   mod2 <- mirt(data, 2, optimizer = 'NR') #>  #> Warning: EM cycles terminated after 500 iterations. # difficulty converging with reduced quadpts, reduce TOL mod3 <- mirt(data, 3, TOL = .001, optimizer = 'NR') #>  anova(mod1,mod2) #>           AIC    SABIC       HQ      BIC    logLik     X2 df p #> mod1 19105.91 19184.13 19215.46 19387.31 -9488.955             #> mod2 19073.92 19190.03 19236.53 19491.63 -9441.963 93.985 31 0 anova(mod2, mod3) #negative AIC, 2 factors probably best #>           AIC    SABIC       HQ      BIC    logLik     X2 df     p #> mod2 19073.92 19190.03 19236.53 19491.63 -9441.963                 #> mod3 19080.18 19232.96 19294.13 19629.80 -9415.090 53.744 30 0.005  # same as above, but using the QMCEM method for generally better accuracy in mod3 mod3 <- mirt(data, 3, method = 'QMCEM', TOL = .001, optimizer = 'NR') #>  anova(mod2, mod3) #>           AIC    SABIC       HQ      BIC    logLik     X2 df     p #> mod2 19073.92 19190.03 19236.53 19491.63 -9441.963                 #> mod3 19081.58 19234.36 19295.54 19631.20 -9415.792 52.342 30 0.007  # with fixed guessing parameters mod1g <- mirt(data, 1, guess = .1) #>  coef(mod1g) #> $Item.1 #>        a1      d   g u #> par 1.211 -1.737 0.1 1 #>  #> $Item.2 #>       a1     d   g u #> par 1.78 0.147 0.1 1 #>  #> $Item.3 #>       a1    d   g u #> par 1.91 -2.2 0.1 1 #>  #> $Item.4 #>        a1      d   g u #> par 0.833 -0.944 0.1 1 #>  #> $Item.5 #>        a1     d   g u #> par 1.089 0.399 0.1 1 #>  #> $Item.6 #>        a1      d   g u #> par 3.265 -5.212 0.1 1 #>  #> $Item.7 #>       a1     d   g u #> par 1.02 1.224 0.1 1 #>  #> $Item.8 #>        a1      d   g u #> par 1.639 -2.977 0.1 1 #>  #> $Item.9 #>       a1     d   g u #> par 0.49 2.007 0.1 1 #>  #> $Item.10 #>        a1      d   g u #> par 1.257 -0.756 0.1 1 #>  #> $Item.11 #>       a1    d   g u #> par 1.68 5.18 0.1 1 #>  #> $Item.12 #>        a1      d   g u #> par 0.191 -0.625 0.1 1 #>  #> $Item.13 #>        a1     d   g u #> par 1.147 0.654 0.1 1 #>  #> $Item.14 #>        a1     d   g u #> par 1.099 1.008 0.1 1 #>  #> $Item.15 #>        a1    d   g u #> par 1.337 1.79 0.1 1 #>  #> $Item.16 #>        a1      d   g u #> par 0.923 -0.744 0.1 1 #>  #> $Item.17 #>        a1     d   g u #> par 1.519 4.077 0.1 1 #>  #> $Item.18 #>        a1      d   g u #> par 2.585 -1.749 0.1 1 #>  #> $Item.19 #>       a1      d   g u #> par 0.91 -0.002 0.1 1 #>  #> $Item.20 #>        a1     d   g u #> par 1.485 2.438 0.1 1 #>  #> $Item.21 #>        a1     d   g u #> par 0.616 2.407 0.1 1 #>  #> $Item.22 #>        a1     d   g u #> par 1.429 3.291 0.1 1 #>  #> $Item.23 #>       a1      d   g u #> par 0.96 -1.393 0.1 1 #>  #> $Item.24 #>        a1     d   g u #> par 1.282 1.099 0.1 1 #>  #> $Item.25 #>        a1  d   g u #> par 1.028 -1 0.1 1 #>  #> $Item.26 #>        a1      d   g u #> par 2.059 -0.658 0.1 1 #>  #> $Item.27 #>        a1     d   g u #> par 1.839 2.564 0.1 1 #>  #> $Item.28 #>        a1      d   g u #> par 1.222 -0.095 0.1 1 #>  #> $Item.29 #>        a1      d   g u #> par 1.281 -1.357 0.1 1 #>  #> $Item.30 #>        a1      d   g u #> par 0.444 -0.521 0.1 1 #>  #> $Item.31 #>        a1     d   g u #> par 2.476 2.697 0.1 1 #>  #> $Item.32 #>        a1      d   g u #> par 0.461 -2.742 0.1 1 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0      1 #>   ########### # graded rating scale example  # make some data set.seed(1234) a <- matrix(rep(1, 10)) d <- matrix(c(1,0.5,-.5,-1), 10, 4, byrow = TRUE) c <- seq(-1, 1, length.out=10) data <- simdata(a, d + c, 2000, itemtype = rep('graded',10)) itemstats(data) #> $overall #>     N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  2000           20.196           8.33 0.203 0.027 0.719     4.419 #>  #> $itemstats #>            N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item_1  2000 5 1.284 1.510   0.512         0.359       0.700 #> Item_2  2000 5 1.427 1.544   0.529         0.375       0.697 #> Item_3  2000 5 1.592 1.584   0.545         0.389       0.695 #> Item_4  2000 5 1.774 1.586   0.538         0.381       0.696 #> Item_5  2000 5 1.910 1.607   0.539         0.380       0.696 #> Item_6  2000 5 2.124 1.606   0.533         0.373       0.697 #> Item_7  2000 5 2.284 1.598   0.520         0.359       0.700 #> Item_8  2000 5 2.420 1.583   0.578         0.430       0.688 #> Item_9  2000 5 2.606 1.543   0.530         0.377       0.697 #> Item_10 2000 5 2.776 1.491   0.495         0.342       0.702 #>  #> $proportions #>             0     1     2     3     4 #> Item_1  0.500 0.096 0.182 0.065 0.158 #> Item_2  0.450 0.108 0.197 0.059 0.187 #> Item_3  0.407 0.108 0.182 0.092 0.212 #> Item_4  0.346 0.111 0.212 0.085 0.246 #> Item_5  0.319 0.102 0.211 0.086 0.281 #> Item_6  0.269 0.097 0.205 0.099 0.330 #> Item_7  0.244 0.073 0.211 0.101 0.372 #> Item_8  0.216 0.074 0.195 0.106 0.410 #> Item_9  0.175 0.072 0.196 0.083 0.473 #> Item_10 0.150 0.059 0.174 0.102 0.516 #>   mod1 <- mirt(data, 1) #>  mod2 <- mirt(data, 1, itemtype = 'grsm') #>  coef(mod2) #> $Item_1 #>        a1    b1     b2     b3     b4 c #> par 0.959 0.001 -0.507 -1.541 -2.032 0 #>  #> $Item_2 #>        a1    b1     b2     b3     b4     c #> par 0.987 0.001 -0.507 -1.541 -2.032 0.235 #>  #> $Item_3 #>        a1    b1     b2     b3     b4     c #> par 0.994 0.001 -0.507 -1.541 -2.032 0.457 #>  #> $Item_4 #>        a1    b1     b2     b3     b4     c #> par 1.027 0.001 -0.507 -1.541 -2.032 0.728 #>  #> $Item_5 #>        a1    b1     b2     b3     b4     c #> par 0.995 0.001 -0.507 -1.541 -2.032 0.895 #>  #> $Item_6 #>        a1    b1     b2     b3     b4     c #> par 0.987 0.001 -0.507 -1.541 -2.032 1.179 #>  #> $Item_7 #>        a1    b1     b2     b3     b4     c #> par 0.957 0.001 -0.507 -1.541 -2.032 1.404 #>  #> $Item_8 #>       a1    b1     b2     b3     b4     c #> par 1.04 0.001 -0.507 -1.541 -2.032 1.578 #>  #> $Item_9 #>        a1    b1     b2     b3     b4     c #> par 0.964 0.001 -0.507 -1.541 -2.032 1.878 #>  #> $Item_10 #>        a1    b1     b2     b3     b4     c #> par 0.947 0.001 -0.507 -1.541 -2.032 2.136 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0      1 #>  anova(mod2, mod1) #not sig, mod2 should be preferred #>           AIC    SABIC       HQ      BIC    logLik     X2 df     p #> mod2 55239.72 55295.47 55287.03 55368.55 -27596.86                 #> mod1 55252.05 55373.25 55354.88 55532.10 -27576.03 41.671 27 0.035 itemplot(mod2, 1)  itemplot(mod2, 5)  itemplot(mod2, 10)   ########### # 2PL nominal response model example (Suh and Bolt, 2010) data(SAT12) SAT12[SAT12 == 8] <- NA #set 8 as a missing value head(SAT12) #>   Item.1 Item.2 Item.3 Item.4 Item.5 Item.6 Item.7 Item.8 Item.9 Item.10 #> 1      1      4      5      2      3      1      2      1      3       1 #> 2      3      4      2     NA      3      3      2     NA      3       1 #> 3      1      4      5      4      3      2      2      3      3       2 #> 4      2      4      4      2      3      3      2      4      3       2 #> 5      2      4      5      2      3      2      2      1      1       2 #> 6      1      4      3      1      3      2      2      3      3       1 #>   Item.11 Item.12 Item.13 Item.14 Item.15 Item.16 Item.17 Item.18 Item.19 #> 1       2       4       2       1       5       3       4       4       1 #> 2       2      NA       2       1       5       2       4       1       1 #> 3       2       1       3       1       5       5       4       1       3 #> 4       2       4       2       1       5       2       4       1       3 #> 5       2       4       2       1       5       4       4       5       1 #> 6       2       3       2       1       5       5       4       4       1 #>   Item.20 Item.21 Item.22 Item.23 Item.24 Item.25 Item.26 Item.27 Item.28 #> 1       4       3       3       4       1       3       5       1       3 #> 2       4       3       3      NA       1      NA       4       1       4 #> 3       4       3       3       1       1       3       4       1       3 #> 4       4       3       1       5       2       5       4       1       3 #> 5       4       3       3       3       1       1       5       1       3 #> 6       4       3       3       4       1       1       4       1       4 #>   Item.29 Item.30 Item.31 Item.32 #> 1       1       5       4       5 #> 2       5      NA       4      NA #> 3       4       4       4       1 #> 4       4       2       4       2 #> 5       1       2       4       1 #> 6       2       3       4       3  # correct answer key key <- c(1,4,5,2,3,1,2,1,3,1,2,4,2,1,5,3,4,4,1,4,3,3,4,1,3,5,1,3,1,5,4,5) scoredSAT12 <- key2binary(SAT12, key) mod0 <- mirt(scoredSAT12, 1) #>   # for first 5 items use 2PLNRM and nominal scoredSAT12[,1:5] <- as.matrix(SAT12[,1:5]) mod1 <- mirt(scoredSAT12, 1, c(rep('nominal',5),rep('2PL', 27))) #>  mod2 <- mirt(scoredSAT12, 1, c(rep('2PLNRM',5),rep('2PL', 27)), key=key) #>  coef(mod0)$Item.1 #>            a1         d g u #> par 0.8107167 -1.042366 0 1 coef(mod1)$Item.1 #>             a1 ak0       ak1      ak2      ak3 ak4 d0         d1         d2 #> par -0.8772035   0 0.5286601 1.116593 1.129494   4  0 -0.1909232 0.01878861 #>             d3       d4 #> par -0.1258261 -5.65218 coef(mod2)$Item.1 #>            a1        d g u ak0        ak1        ak2       ak3 d0        d1 #> par 0.8102548 -1.04233 0 1   0 -0.5653287 -0.5712706 -3.025613  0 0.2117761 #>             d2        d3 #> par 0.06919723 -5.309272 itemplot(mod0, 1)  itemplot(mod1, 1)  itemplot(mod2, 1)   # compare added information from distractors Theta <- matrix(seq(-4,4,.01)) par(mfrow = c(2,3)) for(i in 1:5){     info <- iteminfo(extract.item(mod0,i), Theta)     info2 <- iteminfo(extract.item(mod2,i), Theta)     plot(Theta, info2, type = 'l', main = paste('Information for item', i), ylab = 'Information')     lines(Theta, info, col = 'red') } par(mfrow = c(1,1))   # test information plot(Theta, testinfo(mod2, Theta), type = 'l', main = 'Test information', ylab = 'Information') lines(Theta, testinfo(mod0, Theta), col = 'red')   ########### # using the MH-RM algorithm data(LSAT7) fulldata <- expand.table(LSAT7) (mod1 <- mirt(fulldata, 1, method = 'MHRM')) #> , Max-Change = 0.0343, Max-Change = 0.0321, Max-Change = 0.0244, Max-Change = 0.0454, Max-Change = 0.0518, Max-Change = 0.0217, Max-Change = 0.0328, Max-Change = 0.0227, Max-Change = 0.0287, Max-Change = 0.0194, Max-Change = 0.0210, Max-Change = 0.0517, Max-Change = 0.0631, Max-Change = 0.0216, Max-Change = 0.0277, Max-Change = 0.0191, Max-Change = 0.0253, Max-Change = 0.0380, Max-Change = 0.0219, Max-Change = 0.0382, Max-Change = 0.0325, Max-Change = 0.0429, Max-Change = 0.0375, Max-Change = 0.0238, Max-Change = 0.0391, Max-Change = 0.0400, Max-Change = 0.0139, Max-Change = 0.0325, Max-Change = 0.0143, Max-Change = 0.0271, Max-Change = 0.0202, Max-Change = 0.0155, Max-Change = 0.0353, Max-Change = 0.0603, Max-Change = 0.0193, Max-Change = 0.0270, Max-Change = 0.0234, Max-Change = 0.0329, Max-Change = 0.0450, Max-Change = 0.0438, Max-Change = 0.0420, Max-Change = 0.0558, Max-Change = 0.0300, Max-Change = 0.0203, Max-Change = 0.0384, Max-Change = 0.0183, Max-Change = 0.0178, Max-Change = 0.0142, Max-Change = 0.0165, Max-Change = 0.0152, Max-Change = 0.0430, Max-Change = 0.0577, Max-Change = 0.0273, Max-Change = 0.0351, Max-Change = 0.0191, Max-Change = 0.0106, Max-Change = 0.0242, Max-Change = 0.0290, Max-Change = 0.0189, Max-Change = 0.0211, Max-Change = 0.0176, Max-Change = 0.0322, Max-Change = 0.0263, Max-Change = 0.0259, Max-Change = 0.0295, Max-Change = 0.0401, Max-Change = 0.0123, Max-Change = 0.0411, Max-Change = 0.0175, Max-Change = 0.0356, Max-Change = 0.0190, Max-Change = 0.0254, Max-Change = 0.0190, Max-Change = 0.0235, Max-Change = 0.0216, Max-Change = 0.0183, Max-Change = 0.0151, Max-Change = 0.0392, Max-Change = 0.0207, Max-Change = 0.0135, Max-Change = 0.0314, Max-Change = 0.0380, Max-Change = 0.0442, Max-Change = 0.0163, Max-Change = 0.0227, Max-Change = 0.0268, Max-Change = 0.0140, Max-Change = 0.0211, Max-Change = 0.0146, Max-Change = 0.0419, Max-Change = 0.0299, Max-Change = 0.0168, Max-Change = 0.0297, Max-Change = 0.0207, Max-Change = 0.0229, Max-Change = 0.0329, Max-Change = 0.0384, Max-Change = 0.0203, Max-Change = 0.0273, Max-Change = 0.0129, Max-Change = 0.0143, Max-Change = 0.0248, Max-Change = 0.0268, Max-Change = 0.0267, Max-Change = 0.0342, Max-Change = 0.0256, Max-Change = 0.0346, Max-Change = 0.0357, Max-Change = 0.0225, Max-Change = 0.0236, Max-Change = 0.0390, Max-Change = 0.0243, Max-Change = 0.0328, Max-Change = 0.0294, Max-Change = 0.0478, Max-Change = 0.0269, Max-Change = 0.0292, Max-Change = 0.0329, Max-Change = 0.0127, Max-Change = 0.0280, Max-Change = 0.0355, Max-Change = 0.0357, Max-Change = 0.0183, Max-Change = 0.0201, Max-Change = 0.0258, Max-Change = 0.0241, Max-Change = 0.0265, Max-Change = 0.0413, Max-Change = 0.0309, Max-Change = 0.0368, Max-Change = 0.0182, Max-Change = 0.0521, Max-Change = 0.0192, Max-Change = 0.0279, Max-Change = 0.0287, Max-Change = 0.0111, Max-Change = 0.0109, Max-Change = 0.0181, Max-Change = 0.0334, Max-Change = 0.0324, Max-Change = 0.0434, Max-Change = 0.0336, Max-Change = 0.0361, Max-Change = 0.0365, Max-Change = 0.0401, Max-Change = 0.0390, Max-Change = 0.0134, Max-Change = 0.0310, Max-Change = 0.0252, Max-Change = 0.0230, Max-Change = 0.0128, Max-Change = 0.0381, Max-Change = 0.0210, Max-Change = 0.0256, Max-Change = 0.0320, Max-Change = 0.0227, Max-Change = 0.0332, Max-Change = 0.0103, Max-Change = 0.0267, Max-Change = 0.0244, Max-Change = 0.0244, Max-Change = 0.0336, Max-Change = 0.0209, Max-Change = 0.0287, Max-Change = 0.0210, Max-Change = 0.0163, Max-Change = 0.0394, Max-Change = 0.0194, Max-Change = 0.0141, Max-Change = 0.0347, Max-Change = 0.0188, Max-Change = 0.0249, Max-Change = 0.0504, Max-Change = 0.0254, Max-Change = 0.0192, Max-Change = 0.0197, Max-Change = 0.0477, Max-Change = 0.0258, Max-Change = 0.0296, Max-Change = 0.0425, Max-Change = 0.0353, Max-Change = 0.0328, Max-Change = 0.0186, Max-Change = 0.0190, Max-Change = 0.0243, Max-Change = 0.0284, Max-Change = 0.0441, Max-Change = 0.0193, Max-Change = 0.0185, Max-Change = 0.0279, Max-Change = 0.0206, Max-Change = 0.0270, Max-Change = 0.0225, Max-Change = 0.0261, Max-Change = 0.0200, Max-Change = 0.0242, Max-Change = 0.0229, Max-Change = 0.0176, Max-Change = 0.0300, Max-Change = 0.0435, Max-Change = 0.0193, Max-Change = 0.0254, Max-Change = 0.0431, Max-Change = 0.0187, Max-Change = 0.0259, Max-Change = 0.0235, Max-Change = 0.0274, Max-Change = 0.0291, Max-Change = 0.0226, Max-Change = 0.0347, Max-Change = 0.0352, Max-Change = 0.0129, Max-Change = 0.0599, Max-Change = 0.0234, Max-Change = 0.0325, Max-Change = 0.0117, Max-Change = 0.0211, Max-Change = 0.0094, Max-Change = 0.0331, Max-Change = 0.0236, Max-Change = 0.0391, Max-Change = 0.0287, Max-Change = 0.0359, Max-Change = 0.0266, Max-Change = 0.0286, Max-Change = 0.0188, Max-Change = 0.0268, Max-Change = 0.0187, Max-Change = 0.0217, Max-Change = 0.0414, Max-Change = 0.0215, Max-Change = 0.0299, Max-Change = 0.0270, Max-Change = 0.0305, Max-Change = 0.0661, Max-Change = 0.0131, Max-Change = 0.0423, Max-Change = 0.0174, Max-Change = 0.0311, Max-Change = 0.0227, Max-Change = 0.0335, Max-Change = 0.0233, Max-Change = 0.0172, Max-Change = 0.0584, Max-Change = 0.0442, Max-Change = 0.0101, Max-Change = 0.0284, Max-Change = 0.0279, Max-Change = 0.0353, Max-Change = 0.0325, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0136, gam = 0.1057, Max-Change = 0.0187, gam = 0.0780, Max-Change = 0.0054, gam = 0.0629, Max-Change = 0.0068, gam = 0.0532, Max-Change = 0.0054, gam = 0.0464, Max-Change = 0.0051, gam = 0.0413, Max-Change = 0.0079, gam = 0.0374, Max-Change = 0.0091, gam = 0.0342, Max-Change = 0.0035, gam = 0.0316, Max-Change = 0.0049, gam = 0.0294, Max-Change = 0.0015, gam = 0.0276, Max-Change = 0.0042, gam = 0.0260, Max-Change = 0.0040, gam = 0.0246, Max-Change = 0.0085, gam = 0.0233, Max-Change = 0.0034, gam = 0.0222, Max-Change = 0.0031, gam = 0.0212, Max-Change = 0.0021, gam = 0.0203, Max-Change = 0.0027, gam = 0.0195, Max-Change = 0.0016, gam = 0.0188, Max-Change = 0.0026, gam = 0.0181, Max-Change = 0.0033, gam = 0.0175, Max-Change = 0.0036, gam = 0.0169, Max-Change = 0.0023, gam = 0.0164, Max-Change = 0.0019, gam = 0.0159, Max-Change = 0.0020, gam = 0.0154, Max-Change = 0.0024, gam = 0.0150, Max-Change = 0.0012, gam = 0.0146, Max-Change = 0.0021, gam = 0.0142, Max-Change = 0.0013, gam = 0.0139, Max-Change = 0.0034, gam = 0.0135, Max-Change = 0.0010, gam = 0.0132, Max-Change = 0.0017, gam = 0.0129, Max-Change = 0.0029, gam = 0.0126, Max-Change = 0.0019, gam = 0.0124, Max-Change = 0.0015, gam = 0.0121, Max-Change = 0.0030, gam = 0.0119, Max-Change = 0.0017, gam = 0.0116, Max-Change = 0.0006, gam = 0.0114, Max-Change = 0.0007, gam = 0.0112, Max-Change = 0.0013, gam = 0.0110, Max-Change = 0.0008, gam = 0.0108, Max-Change = 0.0011, gam = 0.0106, Max-Change = 0.0010, gam = 0.0104, Max-Change = 0.0014, gam = 0.0102, Max-Change = 0.0023, gam = 0.0101, Max-Change = 0.0025, gam = 0.0099, Max-Change = 0.0013, gam = 0.0098, Max-Change = 0.0014, gam = 0.0096, Max-Change = 0.0018, gam = 0.0095, Max-Change = 0.0012, gam = 0.0093, Max-Change = 0.0008, gam = 0.0092, Max-Change = 0.0009, gam = 0.0091, Max-Change = 0.0019, gam = 0.0089, Max-Change = 0.0030, gam = 0.0088, Max-Change = 0.0014, gam = 0.0087, Max-Change = 0.0004, gam = 0.0086, Max-Change = 0.0010, gam = 0.0085, Max-Change = 0.0009, gam = 0.0084, Max-Change = 0.0023, gam = 0.0082, Max-Change = 0.0013, gam = 0.0081, Max-Change = 0.0007, gam = 0.0080, Max-Change = 0.0006, gam = 0.0080, Max-Change = 0.0015, gam = 0.0079, Max-Change = 0.0006, gam = 0.0078, Max-Change = 0.0023, gam = 0.0077, Max-Change = 0.0007, gam = 0.0076, Max-Change = 0.0003, gam = 0.0075, Max-Change = 0.0014, gam = 0.0074, Max-Change = 0.0012, gam = 0.0073, Max-Change = 0.0009, gam = 0.0073, Max-Change = 0.0008, gam = 0.0072, Max-Change = 0.0006 #>  #> Calculating log-likelihood... #>  #> Call: #> mirt(data = fulldata, model = 1, method = \"MHRM\") #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 0.001 tolerance after 73 MHRM iterations. #> mirt version: 1.45.2  #> M-step optimizer: NR1  #> Latent density type: Gaussian  #> Average MH acceptance ratio(s): 0.4  #>  #> Log-likelihood = -2659.472, SE = 0.018 #> Estimated parameters: 10  #> AIC = 5338.944 #> BIC = 5388.022; SABIC = 5356.261 #> G2 (21) = 32.89, p = 0.0475 #> RMSEA = 0.024, CFI = NaN, TLI = NaN  # Confirmatory models  # simulate data a <- matrix(c( 1.5,NA, 0.5,NA, 1.0,NA, 1.0,0.5,  NA,1.5,  NA,0.5,  NA,1.0,  NA,1.0),ncol=2,byrow=TRUE)  d <- matrix(c( -1.0,NA,NA, -1.5,NA,NA,  1.5,NA,NA,  0.0,NA,NA, 3.0,2.0,-0.5, 2.5,1.0,-1, 2.0,0.0,NA, 1.0,NA,NA),ncol=3,byrow=TRUE)  sigma <- diag(2) sigma[1,2] <- sigma[2,1] <- .4 items <- c(rep('2PL',4), rep('graded',3), '2PL') dataset <- simdata(a,d,2000,items,sigma)  # analyses # CIFA for 2 factor crossed structure  model.1 <- '   F1 = 1-4   F2 = 4-8   COV = F1*F2'  # compute model, and use parallel computation of the log-likelihood if(interactive()) mirtCluster() mod1 <- mirt(dataset, model.1, method = 'MHRM') #> , Max-Change = 0.0379, Max-Change = 0.0279, Max-Change = 0.0335, Max-Change = 0.0244, Max-Change = 0.0278, Max-Change = 0.0178, Max-Change = 0.0288, Max-Change = 0.0359, Max-Change = 0.0489, Max-Change = 0.0193, Max-Change = 0.0297, Max-Change = 0.0280, Max-Change = 0.0180, Max-Change = 0.0340, Max-Change = 0.0292, Max-Change = 0.0244, Max-Change = 0.0213, Max-Change = 0.0198, Max-Change = 0.0253, Max-Change = 0.0304, Max-Change = 0.0139, Max-Change = 0.0251, Max-Change = 0.0180, Max-Change = 0.0243, Max-Change = 0.0196, Max-Change = 0.0194, Max-Change = 0.0108, Max-Change = 0.0202, Max-Change = 0.0157, Max-Change = 0.0217, Max-Change = 0.0316, Max-Change = 0.0232, Max-Change = 0.0176, Max-Change = 0.0290, Max-Change = 0.0136, Max-Change = 0.0136, Max-Change = 0.0258, Max-Change = 0.0217, Max-Change = 0.0147, Max-Change = 0.0186, Max-Change = 0.0167, Max-Change = 0.0169, Max-Change = 0.0114, Max-Change = 0.0143, Max-Change = 0.0188, Max-Change = 0.0168, Max-Change = 0.0255, Max-Change = 0.0275, Max-Change = 0.0164, Max-Change = 0.0135, Max-Change = 0.0226, Max-Change = 0.0234, Max-Change = 0.0375, Max-Change = 0.0211, Max-Change = 0.0129, Max-Change = 0.0187, Max-Change = 0.0175, Max-Change = 0.0240, Max-Change = 0.0164, Max-Change = 0.0167, Max-Change = 0.0436, Max-Change = 0.0302, Max-Change = 0.0093, Max-Change = 0.0199, Max-Change = 0.0224, Max-Change = 0.0331, Max-Change = 0.0149, Max-Change = 0.0246, Max-Change = 0.0224, Max-Change = 0.0153, Max-Change = 0.0065, Max-Change = 0.0157, Max-Change = 0.0166, Max-Change = 0.0191, Max-Change = 0.0136, Max-Change = 0.0170, Max-Change = 0.0137, Max-Change = 0.0326, Max-Change = 0.0174, Max-Change = 0.0153, Max-Change = 0.0144, Max-Change = 0.0088, Max-Change = 0.0200, Max-Change = 0.0175, Max-Change = 0.0182, Max-Change = 0.0236, Max-Change = 0.0157, Max-Change = 0.0214, Max-Change = 0.0279, Max-Change = 0.0117, Max-Change = 0.0103, Max-Change = 0.0182, Max-Change = 0.0230, Max-Change = 0.0250, Max-Change = 0.0120, Max-Change = 0.0205, Max-Change = 0.0170, Max-Change = 0.0144, Max-Change = 0.0178, Max-Change = 0.0309, Max-Change = 0.0363, Max-Change = 0.0250, Max-Change = 0.0235, Max-Change = 0.0173, Max-Change = 0.0226, Max-Change = 0.0209, Max-Change = 0.0241, Max-Change = 0.0180, Max-Change = 0.0171, Max-Change = 0.0156, Max-Change = 0.0197, Max-Change = 0.0170, Max-Change = 0.0130, Max-Change = 0.0107, Max-Change = 0.0192, Max-Change = 0.0223, Max-Change = 0.0158, Max-Change = 0.0240, Max-Change = 0.0383, Max-Change = 0.0110, Max-Change = 0.0132, Max-Change = 0.0224, Max-Change = 0.0147, Max-Change = 0.0132, Max-Change = 0.0261, Max-Change = 0.0144, Max-Change = 0.0287, Max-Change = 0.0106, Max-Change = 0.0183, Max-Change = 0.0161, Max-Change = 0.0148, Max-Change = 0.0210, Max-Change = 0.0146, Max-Change = 0.0121, Max-Change = 0.0192, Max-Change = 0.0187, Max-Change = 0.0130, Max-Change = 0.0115, Max-Change = 0.0146, Max-Change = 0.0223, Max-Change = 0.0164, Max-Change = 0.0111, Max-Change = 0.0105, Max-Change = 0.0201, Max-Change = 0.0263, Max-Change = 0.0130, Max-Change = 0.0190, Max-Change = 0.0160, Max-Change = 0.0268, Max-Change = 0.0231, Max-Change = 0.0144, Max-Change = 0.0262, Max-Change = 0.0188, Max-Change = 0.0143, Max-Change = 0.0178, Max-Change = 0.0135, Max-Change = 0.0161, Max-Change = 0.0205, Max-Change = 0.0085, Max-Change = 0.0164, Max-Change = 0.0173, Max-Change = 0.0211, Max-Change = 0.0179, Max-Change = 0.0150, Max-Change = 0.0186, Max-Change = 0.0197, Max-Change = 0.0194, Max-Change = 0.0170, Max-Change = 0.0213, Max-Change = 0.0247, Max-Change = 0.0159, Max-Change = 0.0526, Max-Change = 0.0118, Max-Change = 0.0257, Max-Change = 0.0150, Max-Change = 0.0166, Max-Change = 0.0107, Max-Change = 0.0153, Max-Change = 0.0285, Max-Change = 0.0171, Max-Change = 0.0207, Max-Change = 0.0237, Max-Change = 0.0243, Max-Change = 0.0118, Max-Change = 0.0181, Max-Change = 0.0159, Max-Change = 0.0159, Max-Change = 0.0415, Max-Change = 0.0103, Max-Change = 0.0157, Max-Change = 0.0146, Max-Change = 0.0212, Max-Change = 0.0175, Max-Change = 0.0135, Max-Change = 0.0199, Max-Change = 0.0114, Max-Change = 0.0164, Max-Change = 0.0208, Max-Change = 0.0155, Max-Change = 0.0231, Max-Change = 0.0177, Max-Change = 0.0125, Max-Change = 0.0134, Max-Change = 0.0242, Max-Change = 0.0126, Max-Change = 0.0140, Max-Change = 0.0171, Max-Change = 0.0113, Max-Change = 0.0315, Max-Change = 0.0142, Max-Change = 0.0098, Max-Change = 0.0299, Max-Change = 0.0171, Max-Change = 0.0228, Max-Change = 0.0236, Max-Change = 0.0151, Max-Change = 0.0151, Max-Change = 0.0093, Max-Change = 0.0220, Max-Change = 0.0236, Max-Change = 0.0195, Max-Change = 0.0342, Max-Change = 0.0263, Max-Change = 0.0235, Max-Change = 0.0305, Max-Change = 0.0145, Max-Change = 0.0230, Max-Change = 0.0169, Max-Change = 0.0207, Max-Change = 0.0164, Max-Change = 0.0215, Max-Change = 0.0216, Max-Change = 0.0154, Max-Change = 0.0205, Max-Change = 0.0136, Max-Change = 0.0202, Max-Change = 0.0250, Max-Change = 0.0137, Max-Change = 0.0143, Max-Change = 0.0201, Max-Change = 0.0078, Max-Change = 0.0268, Max-Change = 0.0188, Max-Change = 0.0217, Max-Change = 0.0267, Max-Change = 0.0175, Max-Change = 0.0341, Max-Change = 0.0223, Max-Change = 0.0267, Max-Change = 0.0322, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0139, gam = 0.1057, Max-Change = 0.0147, gam = 0.0780, Max-Change = 0.0045, gam = 0.0629, Max-Change = 0.0077, gam = 0.0532, Max-Change = 0.0072, gam = 0.0464, Max-Change = 0.0027, gam = 0.0413, Max-Change = 0.0036, gam = 0.0374, Max-Change = 0.0032, gam = 0.0342, Max-Change = 0.0031, gam = 0.0316, Max-Change = 0.0035, gam = 0.0294, Max-Change = 0.0023, gam = 0.0276, Max-Change = 0.0028, gam = 0.0260, Max-Change = 0.0018, gam = 0.0246, Max-Change = 0.0017, gam = 0.0233, Max-Change = 0.0052, gam = 0.0222, Max-Change = 0.0023, gam = 0.0212, Max-Change = 0.0014, gam = 0.0203, Max-Change = 0.0024, gam = 0.0195, Max-Change = 0.0024, gam = 0.0188, Max-Change = 0.0017, gam = 0.0181, Max-Change = 0.0020, gam = 0.0175, Max-Change = 0.0015, gam = 0.0169, Max-Change = 0.0012, gam = 0.0164, Max-Change = 0.0025, gam = 0.0159, Max-Change = 0.0016, gam = 0.0154, Max-Change = 0.0011, gam = 0.0150, Max-Change = 0.0017, gam = 0.0146, Max-Change = 0.0019, gam = 0.0142, Max-Change = 0.0017, gam = 0.0139, Max-Change = 0.0013, gam = 0.0135, Max-Change = 0.0014, gam = 0.0132, Max-Change = 0.0014, gam = 0.0129, Max-Change = 0.0006, gam = 0.0126, Max-Change = 0.0008, gam = 0.0124, Max-Change = 0.0012, gam = 0.0121, Max-Change = 0.0007, gam = 0.0119, Max-Change = 0.0021, gam = 0.0116, Max-Change = 0.0008, gam = 0.0114, Max-Change = 0.0012, gam = 0.0112, Max-Change = 0.0013, gam = 0.0110, Max-Change = 0.0020, gam = 0.0108, Max-Change = 0.0009, gam = 0.0106, Max-Change = 0.0008, gam = 0.0104, Max-Change = 0.0009 #>  #> Calculating log-likelihood... coef(mod1) #> $Item_1 #>        a1 a2      d g u #> par 1.662  0 -1.176 0 1 #>  #> $Item_2 #>        a1 a2      d g u #> par 0.533  0 -1.546 0 1 #>  #> $Item_3 #>        a1 a2     d g u #> par 1.132  0 1.521 0 1 #>  #> $Item_4 #>        a1    a2     d g u #> par 1.122 0.646 0.043 0 1 #>  #> $Item_5 #>     a1    a2    d1    d2     d3 #> par  0 1.476 2.979 1.976 -0.504 #>  #> $Item_6 #>     a1   a2    d1    d2     d3 #> par  0 0.54 2.471 1.001 -1.044 #>  #> $Item_7 #>     a1    a2    d1    d2 #> par  0 0.944 1.939 -0.04 #>  #> $Item_8 #>     a1    a2     d g u #> par  0 1.024 0.903 0 1 #>  #> $GroupPars #>     MEAN_1 MEAN_2 COV_11 COV_21 COV_22 #> par      0      0      1  0.397      1 #>  summary(mod1) #>           F1    F2     h2 #> Item_1 0.699       0.4880 #> Item_2 0.299       0.0893 #> Item_3 0.554       0.3065 #> Item_4 0.525 0.302 0.3666 #> Item_5       0.655 0.4293 #> Item_6       0.302 0.0915 #> Item_7       0.485 0.2351 #> Item_8       0.516 0.2660 #>  #> SS loadings:  1.159 1.113  #> Proportion Var:  0.145 0.139  #>  #> Factor correlations:  #>  #>       F1 F2 #> F1 1.000    #> F2 0.397  1 residuals(mod1) #> LD matrix (lower triangle) and standardized residual correlations (upper triangle) #>  #> Upper triangle summary: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  -0.081  -0.022   0.003   0.000   0.023   0.079  #>  #>        Item_1 Item_2 Item_3 Item_4 Item_5 Item_6 Item_7 Item_8 #> Item_1         0.003 -0.006  0.009 -0.013 -0.059 -0.081 -0.032 #> Item_2  0.020         0.012 -0.008 -0.060  0.053  0.039  0.002 #> Item_3  0.073  0.283        -0.013  0.079  0.045 -0.019  0.010 #> Item_4  0.172  0.115  0.351        -0.035  0.037  0.019  0.011 #> Item_5  0.349  7.178 12.420  2.385         0.044  0.039 -0.011 #> Item_6  6.973  5.569  4.006  2.792 11.604        -0.030  0.019 #> Item_7 13.067  2.973  0.716  0.704  6.038  3.710        -0.041 #> Item_8  2.005  0.008  0.214  0.249  0.249  0.708  3.414         ##### # bifactor model.3 <- '   G = 1-8   F1 = 1-4   F2 = 5-8'  mod3 <- mirt(dataset,model.3, method = 'MHRM') #> , Max-Change = 0.1415, Max-Change = 0.1012, Max-Change = 0.0922, Max-Change = 0.0679, Max-Change = 0.0528, Max-Change = 0.0571, Max-Change = 0.0356, Max-Change = 0.0290, Max-Change = 0.0403, Max-Change = 0.0258, Max-Change = 0.0268, Max-Change = 0.0316, Max-Change = 0.0179, Max-Change = 0.0252, Max-Change = 0.0184, Max-Change = 0.0270, Max-Change = 0.0243, Max-Change = 0.0213, Max-Change = 0.0124, Max-Change = 0.0250, Max-Change = 0.0248, Max-Change = 0.0213, Max-Change = 0.0316, Max-Change = 0.0315, Max-Change = 0.0247, Max-Change = 0.0153, Max-Change = 0.0144, Max-Change = 0.0188, Max-Change = 0.0171, Max-Change = 0.0197, Max-Change = 0.0284, Max-Change = 0.0291, Max-Change = 0.0134, Max-Change = 0.0254, Max-Change = 0.0331, Max-Change = 0.0220, Max-Change = 0.0141, Max-Change = 0.0169, Max-Change = 0.0237, Max-Change = 0.0263, Max-Change = 0.0222, Max-Change = 0.0232, Max-Change = 0.0286, Max-Change = 0.0227, Max-Change = 0.0196, Max-Change = 0.0209, Max-Change = 0.0183, Max-Change = 0.0239, Max-Change = 0.0416, Max-Change = 0.0142, Max-Change = 0.0342, Max-Change = 0.0249, Max-Change = 0.0218, Max-Change = 0.0289, Max-Change = 0.0183, Max-Change = 0.0264, Max-Change = 0.0191, Max-Change = 0.0293, Max-Change = 0.0354, Max-Change = 0.0219, Max-Change = 0.0275, Max-Change = 0.0130, Max-Change = 0.0169, Max-Change = 0.0208, Max-Change = 0.0173, Max-Change = 0.0185, Max-Change = 0.0260, Max-Change = 0.0193, Max-Change = 0.0248, Max-Change = 0.0302, Max-Change = 0.0230, Max-Change = 0.0155, Max-Change = 0.0184, Max-Change = 0.0250, Max-Change = 0.0165, Max-Change = 0.0255, Max-Change = 0.0228, Max-Change = 0.0289, Max-Change = 0.0178, Max-Change = 0.0254, Max-Change = 0.0201, Max-Change = 0.0246, Max-Change = 0.0396, Max-Change = 0.0137, Max-Change = 0.0203, Max-Change = 0.0162, Max-Change = 0.0152, Max-Change = 0.0156, Max-Change = 0.0197, Max-Change = 0.0232, Max-Change = 0.0278, Max-Change = 0.0227, Max-Change = 0.0284, Max-Change = 0.0225, Max-Change = 0.0205, Max-Change = 0.0165, Max-Change = 0.0178, Max-Change = 0.0198, Max-Change = 0.0231, Max-Change = 0.0166, Max-Change = 0.0219, Max-Change = 0.0269, Max-Change = 0.0161, Max-Change = 0.0179, Max-Change = 0.0242, Max-Change = 0.0194, Max-Change = 0.0210, Max-Change = 0.0329, Max-Change = 0.0096, Max-Change = 0.0189, Max-Change = 0.0201, Max-Change = 0.0233, Max-Change = 0.0282, Max-Change = 0.0247, Max-Change = 0.0205, Max-Change = 0.0266, Max-Change = 0.0214, Max-Change = 0.0206, Max-Change = 0.0266, Max-Change = 0.0185, Max-Change = 0.0170, Max-Change = 0.0208, Max-Change = 0.0147, Max-Change = 0.0336, Max-Change = 0.0155, Max-Change = 0.0254, Max-Change = 0.0162, Max-Change = 0.0254, Max-Change = 0.0325, Max-Change = 0.0163, Max-Change = 0.0211, Max-Change = 0.0234, Max-Change = 0.0256, Max-Change = 0.0255, Max-Change = 0.0248, Max-Change = 0.0376, Max-Change = 0.0349, Max-Change = 0.0200, Max-Change = 0.0272, Max-Change = 0.0163, Max-Change = 0.0196, Max-Change = 0.0219, Max-Change = 0.0155, Max-Change = 0.0156, Max-Change = 0.0196, Max-Change = 0.0194, Max-Change = 0.0154, Max-Change = 0.0325, Max-Change = 0.0162, Max-Change = 0.0309, Max-Change = 0.0221, Max-Change = 0.0173, Max-Change = 0.0181, Max-Change = 0.0273, Max-Change = 0.0289, Max-Change = 0.0142, Max-Change = 0.0163, Max-Change = 0.0240, Max-Change = 0.0168, Max-Change = 0.0227, Max-Change = 0.0213, Max-Change = 0.0154, Max-Change = 0.0120, Max-Change = 0.0143, Max-Change = 0.0205, Max-Change = 0.0204, Max-Change = 0.0160, Max-Change = 0.0148, Max-Change = 0.0201, Max-Change = 0.0383, Max-Change = 0.0292, Max-Change = 0.0246, Max-Change = 0.0312, Max-Change = 0.0483, Max-Change = 0.0164, Max-Change = 0.0221, Max-Change = 0.0167, Max-Change = 0.0358, Max-Change = 0.0228, Max-Change = 0.0305, Max-Change = 0.0230, Max-Change = 0.0183, Max-Change = 0.0135, Max-Change = 0.0192, Max-Change = 0.0207, Max-Change = 0.0192, Max-Change = 0.0290, Max-Change = 0.0212, Max-Change = 0.0154, Max-Change = 0.0161, Max-Change = 0.0280, Max-Change = 0.0231, Max-Change = 0.0156, Max-Change = 0.0191, Max-Change = 0.0129, Max-Change = 0.0275, Max-Change = 0.0242, Max-Change = 0.0220, Max-Change = 0.0269, Max-Change = 0.0177, Max-Change = 0.0247, Max-Change = 0.0236, Max-Change = 0.0166, Max-Change = 0.0265, Max-Change = 0.0189, Max-Change = 0.0277, Max-Change = 0.0347, Max-Change = 0.0212, Max-Change = 0.0201, Max-Change = 0.0138, Max-Change = 0.0171, Max-Change = 0.0367, Max-Change = 0.0178, Max-Change = 0.0297, Max-Change = 0.0146, Max-Change = 0.0263, Max-Change = 0.0163, Max-Change = 0.0194, Max-Change = 0.0240, Max-Change = 0.0243, Max-Change = 0.0225, Max-Change = 0.0374, Max-Change = 0.0200, Max-Change = 0.0182, Max-Change = 0.0272, Max-Change = 0.0151, Max-Change = 0.0273, Max-Change = 0.0253, Max-Change = 0.0269, Max-Change = 0.0215, Max-Change = 0.0139, Max-Change = 0.0247, Max-Change = 0.0224, Max-Change = 0.0179, Max-Change = 0.0202, Max-Change = 0.0164, Max-Change = 0.0188, Max-Change = 0.0443, Max-Change = 0.0251, Max-Change = 0.0444, Max-Change = 0.0166, Max-Change = 0.0284, Max-Change = 0.0251, Max-Change = 0.0214, Max-Change = 0.0216, Max-Change = 0.0170, Max-Change = 0.0252, Max-Change = 0.0238, Max-Change = 0.0237, Max-Change = 0.0220, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0234, gam = 0.1057, Max-Change = 0.0117, gam = 0.0780, Max-Change = 0.0050, gam = 0.0629, Max-Change = 0.0093, gam = 0.0532, Max-Change = 0.0058, gam = 0.0464, Max-Change = 0.0032, gam = 0.0413, Max-Change = 0.0033, gam = 0.0374, Max-Change = 0.0040, gam = 0.0342, Max-Change = 0.0062, gam = 0.0316, Max-Change = 0.0043, gam = 0.0294, Max-Change = 0.0025, gam = 0.0276, Max-Change = 0.0023, gam = 0.0260, Max-Change = 0.0028, gam = 0.0246, Max-Change = 0.0032, gam = 0.0233, Max-Change = 0.0021, gam = 0.0222, Max-Change = 0.0032, gam = 0.0212, Max-Change = 0.0018, gam = 0.0203, Max-Change = 0.0029, gam = 0.0195, Max-Change = 0.0023, gam = 0.0188, Max-Change = 0.0041, gam = 0.0181, Max-Change = 0.0016, gam = 0.0175, Max-Change = 0.0015, gam = 0.0169, Max-Change = 0.0014, gam = 0.0164, Max-Change = 0.0014, gam = 0.0159, Max-Change = 0.0016, gam = 0.0154, Max-Change = 0.0019, gam = 0.0150, Max-Change = 0.0014, gam = 0.0146, Max-Change = 0.0019, gam = 0.0142, Max-Change = 0.0017, gam = 0.0139, Max-Change = 0.0012, gam = 0.0135, Max-Change = 0.0013, gam = 0.0132, Max-Change = 0.0014, gam = 0.0129, Max-Change = 0.0016, gam = 0.0126, Max-Change = 0.0014, gam = 0.0124, Max-Change = 0.0011, gam = 0.0121, Max-Change = 0.0012, gam = 0.0119, Max-Change = 0.0010, gam = 0.0116, Max-Change = 0.0014, gam = 0.0114, Max-Change = 0.0011, gam = 0.0112, Max-Change = 0.0012, gam = 0.0110, Max-Change = 0.0015, gam = 0.0108, Max-Change = 0.0018, gam = 0.0106, Max-Change = 0.0010, gam = 0.0104, Max-Change = 0.0014, gam = 0.0102, Max-Change = 0.0008, gam = 0.0101, Max-Change = 0.0006, gam = 0.0099, Max-Change = 0.0009 #>  #> Calculating log-likelihood... coef(mod3) #> $Item_1 #>        a1    a2 a3      d g u #> par 0.816 1.897  0 -1.326 0 1 #>  #> $Item_2 #>        a1    a2 a3      d g u #> par 0.218 0.497  0 -1.548 0 1 #>  #> $Item_3 #>        a1    a2 a3     d g u #> par 0.693 0.751  0 1.479 0 1 #>  #> $Item_4 #>        a1    a2 a3     d g u #> par 1.512 0.825  0 0.058 0 1 #>  #> $Item_5 #>       a1 a2    a3    d1   d2     d3 #> par 1.21  0 1.033 3.094 2.06 -0.514 #>  #> $Item_6 #>        a1 a2    a3    d1    d2     d3 #> par 0.436  0 0.284 2.467 1.001 -1.037 #>  #> $Item_7 #>        a1 a2    a3    d1     d2 #> par 0.754  0 0.507 1.926 -0.034 #>  #> $Item_8 #>        a1 a2    a3     d g u #> par 0.789  0 0.562 0.895 0 1 #>  #> $GroupPars #>     MEAN_1 MEAN_2 MEAN_3 COV_11 COV_21 COV_31 COV_22 COV_32 COV_33 #> par      0      0      0      1      0      0      1      0      1 #>  summary(mod3) #>            G    F1    F2     h2 #> Item_1 0.305 0.709       0.5954 #> Item_2 0.122 0.278       0.0922 #> Item_3 0.349 0.378       0.2649 #> Item_4 0.624 0.341       0.5060 #> Item_5 0.519       0.444 0.4664 #> Item_6 0.245       0.160 0.0856 #> Item_7 0.391       0.263 0.2217 #> Item_8 0.403       0.287 0.2449 #>  #> SS loadings:  1.264 0.839 0.374  #> Proportion Var:  0.158 0.105 0.047  #>  #> Factor correlations:  #>  #>    G F1 F2 #> G  1       #> F1 0  1    #> F2 0  0  1 residuals(mod3) #> LD matrix (lower triangle) and standardized residual correlations (upper triangle) #>  #> Upper triangle summary: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  -0.079  -0.030   0.000  -0.002   0.020   0.062  #>  #>        Item_1 Item_2 Item_3 Item_4 Item_5 Item_6 Item_7 Item_8 #> Item_1        -0.011  0.003  0.007  0.009 -0.053 -0.079 -0.020 #> Item_2  0.232         0.020 -0.003 -0.056  0.056  0.039  0.008 #> Item_3  0.019  0.782        -0.019  0.062  0.035 -0.035 -0.006 #> Item_4  0.098  0.022  0.728        -0.037 -0.038  0.017  0.010 #> Item_5  0.147  6.369  7.647  2.698         0.044 -0.040 -0.012 #> Item_6  5.662  6.190  2.502  2.864 11.658        -0.029  0.021 #> Item_7 12.541  3.029  2.431  0.553  6.343  3.339         0.041 #> Item_8  0.794  0.123  0.075  0.187  0.306  0.849  3.374        anova(mod1,mod3) #>           AIC    SABIC       HQ      BIC    logLik    X2 df     p #> mod1 24794.77 24850.52 24842.07 24923.59 -12374.39                #> mod3 24804.66 24874.95 24864.30 24967.09 -12373.33 2.108  6 0.909  ##### # polynomial/combinations data(SAT12) data <- key2binary(SAT12,                   key = c(1,4,5,2,3,1,2,1,3,1,2,4,2,1,5,3,4,4,1,4,3,3,4,1,3,5,1,3,1,5,4,5))  model.quad <- '        F1 = 1-32   (F1*F1) = 1-32'   model.combo <- '        F1 = 1-16        F2 = 17-32   (F1*F2) = 1-8'  (mod.quad <- mirt(data, model.quad)) #>  #> Warning: EM cycles terminated after 500 iterations. #>  #> Call: #> mirt(data = data, model = model.quad) #>  #> Full-information item factor analysis with 1 factor(s). #> FAILED TO CONVERGE within 1e-04 tolerance after 500 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Log-likelihood = -9424.25 #> Estimated parameters: 96  #> AIC = 19040.5 #> BIC = 19462.61; SABIC = 19157.83 #>  summary(mod.quad) #>               F1 (F1*F1)     h2 #> Item.1   0.24781  0.3206 0.1642 #> Item.2   0.31819  0.6617 0.5390 #> Item.3   0.18997  0.4629 0.2504 #> Item.4   0.22615  0.2802 0.1297 #> Item.5   0.27007  0.4764 0.2999 #> Item.6   0.23129  0.4340 0.2418 #> Item.7  -0.23295  0.6835 0.5215 #> Item.8   0.07142  0.3230 0.1094 #> Item.9   0.07120  0.2448 0.0650 #> Item.10  0.12985  0.4483 0.2178 #> Item.11  0.00489  0.9832 0.9667 #> Item.12  0.13130  0.0666 0.0217 #> Item.13 -0.12244  0.6412 0.4261 #> Item.14  0.42256  0.5436 0.4741 #> Item.15 -0.25904  0.8074 0.7190 #> Item.16  0.15771  0.3584 0.1533 #> Item.17 -0.30637  0.8837 0.8747 #> Item.18  0.22597  0.6542 0.4790 #> Item.19  0.17275  0.4037 0.1928 #> Item.20  0.37087  0.7925 0.7656 #> Item.21 -0.36576  0.5739 0.4631 #> Item.22 -0.27360  0.9330 0.9454 #> Item.23  0.41421  0.2192 0.2196 #> Item.24 -0.13434  0.7637 0.6012 #> Item.25  0.60732  0.2554 0.4341 #> Item.26  0.35413  0.6293 0.5214 #> Item.27 -0.05234  0.9284 0.8647 #> Item.28  0.09058  0.5130 0.2714 #> Item.29  0.26616  0.3615 0.2016 #> Item.30  0.05551  0.1696 0.0319 #> Item.31  0.25711  0.9259 0.9234 #> Item.32  0.01322  0.1086 0.0120 #>  #> SS loadings:  2.116 10.985  #> Proportion Var:  0.066 0.343  #>  #> Factor correlations:  #>  #>    F1 #> F1  1 (mod.combo <- mirt(data, model.combo)) #>  #>  #> Call: #> mirt(data = data, model = model.combo) #>  #> Full-information item factor analysis with 2 factor(s). #> Converged within 1e-04 tolerance after 22 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 31 #> Latent density type: Gaussian  #>  #> Log-likelihood = -9619.871 #> Estimated parameters: 72  #> AIC = 19383.74 #> BIC = 19700.32; SABIC = 19471.74 #>  anova(mod.combo, mod.quad) #>                AIC    SABIC       HQ      BIC    logLik      X2 df p #> mod.combo 19383.74 19471.74 19506.98 19700.32 -9619.871              #> mod.quad  19040.50 19157.83 19204.82 19462.60 -9424.250 391.241 24 0  # non-linear item and test plots plot(mod.quad)  plot(mod.combo, type = 'SE')  itemplot(mod.quad, 1, type = 'score')  itemplot(mod.combo, 2, type = 'score')  itemplot(mod.combo, 2, type = 'infocontour')   ## empirical histogram examples (normal, skew and bimodality) # make some data set.seed(1234) a <- matrix(rlnorm(50, .2, .2)) d <- matrix(rnorm(50)) ThetaNormal <- matrix(rnorm(2000)) ThetaBimodal <- scale(matrix(c(rnorm(1000, -2), rnorm(1000,2)))) #bimodal ThetaSkew <- scale(matrix(rchisq(2000, 3))) #positive skew datNormal <- simdata(a, d, 2000, itemtype = '2PL', Theta=ThetaNormal) datBimodal <- simdata(a, d, 2000, itemtype = '2PL', Theta=ThetaBimodal) datSkew <- simdata(a, d, 2000, itemtype = '2PL', Theta=ThetaSkew)  normal <- mirt(datNormal, 1, dentype = \"empiricalhist\") #>  plot(normal, type = 'empiricalhist')  histogram(ThetaNormal, breaks=30)   bimodal <- mirt(datBimodal, 1, dentype = \"empiricalhist\") #>  plot(bimodal, type = 'empiricalhist')  histogram(ThetaBimodal, breaks=30)   skew <- mirt(datSkew, 1, dentype = \"empiricalhist\") #>  plot(skew, type = 'empiricalhist')  histogram(ThetaSkew, breaks=30)   ##### # non-linear parameter constraints with Rsolnp package (nloptr supported as well): # Find Rasch model subject to the constraint that the intercepts sum to 0  dat <- expand.table(LSAT6) itemstats(dat) #> $overall #>     N mean_total.score sd_total.score ave.r sd.r alpha SEM.alpha #>  1000            3.819          1.035 0.077 0.03 0.295     0.869 #>  #> $itemstats #>           N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item_1 1000 2 0.924 0.265   0.362         0.113       0.275 #> Item_2 1000 2 0.709 0.454   0.567         0.153       0.238 #> Item_3 1000 2 0.553 0.497   0.618         0.173       0.217 #> Item_4 1000 2 0.763 0.425   0.534         0.144       0.246 #> Item_5 1000 2 0.870 0.336   0.435         0.122       0.266 #>  #> $proportions #>            0     1 #> Item_1 0.076 0.924 #> Item_2 0.291 0.709 #> Item_3 0.447 0.553 #> Item_4 0.237 0.763 #> Item_5 0.130 0.870 #>   # free latent mean and variance terms model <- 'Theta = 1-5           MEAN = Theta           COV = Theta*Theta'  # view how vector of parameters is organized internally sv <- mirt(dat, model, itemtype = 'Rasch', pars = 'values') sv[sv$est, ] #>    group   item     class   name parnum value lbound ubound  est const nconst #> 2    all Item_1      dich      d      2 2.815   -Inf    Inf TRUE  none   none #> 6    all Item_2      dich      d      6 1.082   -Inf    Inf TRUE  none   none #> 10   all Item_3      dich      d     10 0.262   -Inf    Inf TRUE  none   none #> 14   all Item_4      dich      d     14 1.407   -Inf    Inf TRUE  none   none #> 18   all Item_5      dich      d     18 2.214   -Inf    Inf TRUE  none   none #> 21   all  GROUP GroupPars MEAN_1     21 0.000   -Inf    Inf TRUE  none   none #> 22   all  GROUP GroupPars COV_11     22 1.000      0    Inf TRUE  none   none #>    prior.type prior_1 prior_2 #> 2        none     NaN     NaN #> 6        none     NaN     NaN #> 10       none     NaN     NaN #> 14       none     NaN     NaN #> 18       none     NaN     NaN #> 21       none     NaN     NaN #> 22       none     NaN     NaN  # constraint: create function for solnp to compute constraint, and declare value in eqB eqfun <- function(p, optim_args) sum(p[1:5]) #could use browser() here, if it helps LB <- c(rep(-15, 6), 1e-4) # more reasonable lower bound for variance term  mod <- mirt(dat, model, sv=sv, itemtype = 'Rasch', optimizer = 'solnp',    solnp_args=list(eqfun=eqfun, eqB=0, LB=LB)) #>  print(mod) #>  #> Call: #> mirt(data = dat, model = model, itemtype = \"Rasch\", optimizer = \"solnp\",  #>     solnp_args = list(eqfun = eqfun, eqB = 0, LB = LB), sv = sv) #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 1e-04 tolerance after 34 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: solnp  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Log-likelihood = -2466.943 #> Estimated parameters: 7  #> AIC = 4947.887 #> BIC = 4982.241; SABIC = 4960.009 #> G2 (25) = 21.81, p = 0.6467 #> RMSEA = 0, CFI = NaN, TLI = NaN coef(mod) #> $Item_1 #>     a1     d g u #> par  1 1.253 0 1 #>  #> $Item_2 #>     a1      d g u #> par  1 -0.475 0 1 #>  #> $Item_3 #>     a1      d g u #> par  1 -1.233 0 1 #>  #> $Item_4 #>     a1      d g u #> par  1 -0.168 0 1 #>  #> $Item_5 #>     a1     d g u #> par  1 0.623 0 1 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par  1.472  0.559 #>  (ds <- sapply(coef(mod)[1:5], function(x) x[,'d'])) #>     Item_1     Item_2     Item_3     Item_4     Item_5  #>  1.2529432 -0.4754429 -1.2327196 -0.1681687  0.6233879  sum(ds) #> [1] 4.635181e-15  # same likelihood location as: mirt(dat, 1, itemtype = 'Rasch')   ####### # latent regression Rasch model  # simulate data set.seed(1234) N <- 1000  # covariates X1 <- rnorm(N); X2 <- rnorm(N) covdata <- data.frame(X1, X2, X3 = rnorm(N)) Theta <- matrix(0.5 * X1 + -1 * X2 + rnorm(N, sd = 0.5))  # items and response data a <- matrix(1, 20); d <- matrix(rnorm(20)) dat <- simdata(a, d, 1000, itemtype = '2PL', Theta=Theta)  # unconditional Rasch model mod0 <- mirt(dat, 1, 'Rasch', SE=TRUE) #>  #>  #> Calculating information matrix... coef(mod0, printSE=TRUE) #> $Item_1 #>     a1      d logit(g) logit(u) #> par  1 -0.998     -999      999 #> SE  NA  0.085       NA       NA #>  #> $Item_2 #>     a1      d logit(g) logit(u) #> par  1 -0.917     -999      999 #> SE  NA  0.085       NA       NA #>  #> $Item_3 #>     a1      d logit(g) logit(u) #> par  1 -0.099     -999      999 #> SE  NA  0.081       NA       NA #>  #> $Item_4 #>     a1     d logit(g) logit(u) #> par  1 1.893     -999      999 #> SE  NA 0.099       NA       NA #>  #> $Item_5 #>     a1     d logit(g) logit(u) #> par  1 0.610     -999      999 #> SE  NA 0.082       NA       NA #>  #> $Item_6 #>     a1     d logit(g) logit(u) #> par  1 1.071     -999      999 #> SE  NA 0.086       NA       NA #>  #> $Item_7 #>     a1      d logit(g) logit(u) #> par  1 -0.074     -999      999 #> SE  NA  0.081       NA       NA #>  #> $Item_8 #>     a1      d logit(g) logit(u) #> par  1 -1.405     -999      999 #> SE  NA  0.090       NA       NA #>  #> $Item_9 #>     a1     d logit(g) logit(u) #> par  1 0.707     -999      999 #> SE  NA 0.083       NA       NA #>  #> $Item_10 #>     a1      d logit(g) logit(u) #> par  1 -0.258     -999      999 #> SE  NA  0.081       NA       NA #>  #> $Item_11 #>     a1     d logit(g) logit(u) #> par  1 0.336     -999      999 #> SE  NA 0.081       NA       NA #>  #> $Item_12 #>     a1     d logit(g) logit(u) #> par  1 0.891     -999      999 #> SE  NA 0.084       NA       NA #>  #> $Item_13 #>     a1     d logit(g) logit(u) #> par  1 0.653     -999      999 #> SE  NA 0.083       NA       NA #>  #> $Item_14 #>     a1      d logit(g) logit(u) #> par  1 -1.942     -999      999 #> SE  NA  0.099       NA       NA #>  #> $Item_15 #>     a1      d logit(g) logit(u) #> par  1 -2.143     -999      999 #> SE  NA  0.104       NA       NA #>  #> $Item_16 #>     a1     d logit(g) logit(u) #> par  1 1.759     -999      999 #> SE  NA 0.096       NA       NA #>  #> $Item_17 #>     a1      d logit(g) logit(u) #> par  1 -1.015     -999      999 #> SE  NA  0.085       NA       NA #>  #> $Item_18 #>     a1      d logit(g) logit(u) #> par  1 -1.009     -999      999 #> SE  NA  0.085       NA       NA #>  #> $Item_19 #>     a1      d logit(g) logit(u) #> par  1 -1.251     -999      999 #> SE  NA  0.088       NA       NA #>  #> $Item_20 #>     a1      d logit(g) logit(u) #> par  1 -0.619     -999      999 #> SE  NA  0.082       NA       NA #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0  1.393 #> SE      NA  0.085 #>   # conditional model using X1, X2, and X3 (bad) as predictors of Theta mod1 <- mirt(dat, 1, 'Rasch', covdata=covdata, formula = ~ X1 + X2 + X3, SE=TRUE) #>  #>  #> Calculating information matrix... coef(mod1, printSE=TRUE) #> $Item_1 #>     a1      d logit(g) logit(u) #> par  1 -0.967     -999      999 #> SE  NA  0.078       NA       NA #>  #> $Item_2 #>     a1      d logit(g) logit(u) #> par  1 -0.887     -999      999 #> SE  NA  0.077       NA       NA #>  #> $Item_3 #>     a1      d logit(g) logit(u) #> par  1 -0.068     -999      999 #> SE  NA  0.073       NA       NA #>  #> $Item_4 #>     a1     d logit(g) logit(u) #> par  1 1.920     -999      999 #> SE  NA 0.092       NA       NA #>  #> $Item_5 #>     a1     d logit(g) logit(u) #> par  1 0.640     -999      999 #> SE  NA 0.075       NA       NA #>  #> $Item_6 #>     a1     d logit(g) logit(u) #> par  1 1.100     -999      999 #> SE  NA 0.079       NA       NA #>  #> $Item_7 #>     a1      d logit(g) logit(u) #> par  1 -0.043     -999      999 #> SE  NA  0.073       NA       NA #>  #> $Item_8 #>     a1      d logit(g) logit(u) #> par  1 -1.375     -999      999 #> SE  NA  0.083       NA       NA #>  #> $Item_9 #>     a1     d logit(g) logit(u) #> par  1 0.737     -999      999 #> SE  NA 0.076       NA       NA #>  #> $Item_10 #>     a1      d logit(g) logit(u) #> par  1 -0.227     -999      999 #> SE  NA  0.073       NA       NA #>  #> $Item_11 #>     a1     d logit(g) logit(u) #> par  1 0.367     -999      999 #> SE  NA 0.074       NA       NA #>  #> $Item_12 #>     a1     d logit(g) logit(u) #> par  1 0.921     -999      999 #> SE  NA 0.077       NA       NA #>  #> $Item_13 #>     a1     d logit(g) logit(u) #> par  1 0.683     -999      999 #> SE  NA 0.075       NA       NA #>  #> $Item_14 #>     a1      d logit(g) logit(u) #> par  1 -1.913     -999      999 #> SE  NA  0.093       NA       NA #>  #> $Item_15 #>     a1      d logit(g) logit(u) #> par  1 -2.114     -999      999 #> SE  NA  0.098       NA       NA #>  #> $Item_16 #>     a1     d logit(g) logit(u) #> par  1 1.786     -999      999 #> SE  NA 0.090       NA       NA #>  #> $Item_17 #>     a1      d logit(g) logit(u) #> par  1 -0.985     -999      999 #> SE  NA  0.078       NA       NA #>  #> $Item_18 #>     a1      d logit(g) logit(u) #> par  1 -0.979     -999      999 #> SE  NA  0.078       NA       NA #>  #> $Item_19 #>     a1      d logit(g) logit(u) #> par  1 -1.221     -999      999 #> SE  NA  0.081       NA       NA #>  #> $Item_20 #>     a1      d logit(g) logit(u) #> par  1 -0.589     -999      999 #> SE  NA  0.075       NA       NA #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0  0.210 #> SE      NA  0.011 #>  #> $lr.betas #> $lr.betas$betas #>                 F1 #> (Intercept)  0.000 #> X1           0.513 #> X2          -1.003 #> X3          -0.003 #>  #> $lr.betas$SE #>                F1 #> (Intercept)    NA #> X1          0.015 #> X2          0.015 #> X3          0.014 #>  #>  coef(mod1, simplify=TRUE) #> $items #>         a1      d g u #> Item_1   1 -0.967 0 1 #> Item_2   1 -0.887 0 1 #> Item_3   1 -0.068 0 1 #> Item_4   1  1.920 0 1 #> Item_5   1  0.640 0 1 #> Item_6   1  1.100 0 1 #> Item_7   1 -0.043 0 1 #> Item_8   1 -1.375 0 1 #> Item_9   1  0.737 0 1 #> Item_10  1 -0.227 0 1 #> Item_11  1  0.367 0 1 #> Item_12  1  0.921 0 1 #> Item_13  1  0.683 0 1 #> Item_14  1 -1.913 0 1 #> Item_15  1 -2.114 0 1 #> Item_16  1  1.786 0 1 #> Item_17  1 -0.985 0 1 #> Item_18  1 -0.979 0 1 #> Item_19  1 -1.221 0 1 #> Item_20  1 -0.589 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>      F1 #> F1 0.21 #>  #> $lr.betas #> $lr.betas$betas #>                 F1 #> (Intercept)  0.000 #> X1           0.513 #> X2          -1.003 #> X3          -0.003 #>  #> $lr.betas$CI_2.5 #>                 F1 #> (Intercept)     NA #> X1           0.485 #> X2          -1.032 #> X3          -0.031 #>  #> $lr.betas$CI_97.5 #>                 F1 #> (Intercept)     NA #> X1           0.542 #> X2          -0.974 #> X3           0.025 #>  #>  anova(mod0, mod1)  # jointly significant predictors of theta #>           AIC    SABIC       HQ      BIC    logLik       X2 df p #> mod0 21935.46 21971.83 21974.63 22038.53 -10946.73               #> mod1 20756.61 20798.17 20801.38 20874.40 -10354.31 1184.851  3 0  # large sample z-ratios and p-values (if one cares) cfs <- coef(mod1, printSE=TRUE) (z <- cfs$lr.betas[[1]] / cfs$lr.betas[[2]]) #>                      F1 #> (Intercept)          NA #> X1           35.2668946 #> X2          -67.5847949 #> X3           -0.2114561 round(pnorm(abs(z[,1]), lower.tail=FALSE)*2, 3) #> (Intercept)          X1          X2          X3  #>          NA       0.000       0.000       0.833   # drop predictor for nested comparison mod1b <- mirt(dat, 1, 'Rasch', covdata=covdata, formula = ~ X1 + X2) #>  anova(mod1b, mod1) #>            AIC    SABIC       HQ      BIC    logLik    X2 df     p #> mod1b 20754.63 20794.46 20797.53 20867.51 -10354.32                #> mod1  20756.61 20798.17 20801.38 20874.40 -10354.31 0.018  1 0.893  # compare to mixedmirt() version of the same model mod1.mixed <- mixedmirt(dat, 1, itemtype='Rasch',                         covdata=covdata, lr.fixed = ~ X1 + X2 + X3, SE=TRUE) #> , Max-Change = 0.1317, Max-Change = 0.1109, Max-Change = 0.0928, Max-Change = 0.2000, Max-Change = 0.0832, Max-Change = 0.0494, Max-Change = 0.0447, Max-Change = 0.0467, Max-Change = 0.0290, Max-Change = 0.0373, Max-Change = 0.0231, Max-Change = 0.0177, Max-Change = 0.0250, Max-Change = 0.0135, Max-Change = 0.0126, Max-Change = 0.0102, Max-Change = 0.0078, Max-Change = 0.0107, Max-Change = 0.0102, Max-Change = 0.0073, Max-Change = 0.0075, Max-Change = 0.0059, Max-Change = 0.0071, Max-Change = 0.0106, Max-Change = 0.0133, Max-Change = 0.0034, Max-Change = 0.0015, Max-Change = 0.0054, Max-Change = 0.0074, Max-Change = 0.0034, Max-Change = 0.0037, Max-Change = 0.0062, Max-Change = 0.0042, Max-Change = 0.0055, Max-Change = 0.0040, Max-Change = 0.0024, Max-Change = 0.0034, Max-Change = 0.0049, Max-Change = 0.0043, Max-Change = 0.0024, Max-Change = 0.0024, Max-Change = 0.0032, Max-Change = 0.0032, Max-Change = 0.0040, Max-Change = 0.0022, Max-Change = 0.0031, Max-Change = 0.0010, Max-Change = 0.0035, Max-Change = 0.0025, Max-Change = 0.0016, Max-Change = 0.0031, Max-Change = 0.0033, Max-Change = 0.0033, Max-Change = 0.0024, Max-Change = 0.0025, Max-Change = 0.0029, Max-Change = 0.0014, Max-Change = 0.0025, Max-Change = 0.0028, Max-Change = 0.0024, Max-Change = 0.0023, Max-Change = 0.0028, Max-Change = 0.0025, Max-Change = 0.0033, Max-Change = 0.0055, Max-Change = 0.0030, Max-Change = 0.0016, Max-Change = 0.0034, Max-Change = 0.0030, Max-Change = 0.0026, Max-Change = 0.0033, Max-Change = 0.0006, Max-Change = 0.0026, Max-Change = 0.0041, Max-Change = 0.0029, Max-Change = 0.0015, Max-Change = 0.0026, Max-Change = 0.0024, Max-Change = 0.0050, Max-Change = 0.0037, Max-Change = 0.0017, Max-Change = 0.0027, Max-Change = 0.0042, Max-Change = 0.0027, Max-Change = 0.0037, Max-Change = 0.0048, Max-Change = 0.0020, Max-Change = 0.0024, Max-Change = 0.0039, Max-Change = 0.0027, Max-Change = 0.0018, Max-Change = 0.0015, Max-Change = 0.0019, Max-Change = 0.0022, Max-Change = 0.0019, Max-Change = 0.0022, Max-Change = 0.0024, Max-Change = 0.0024, Max-Change = 0.0018, Max-Change = 0.0029, Max-Change = 0.0042, Max-Change = 0.0017, Max-Change = 0.0013, Max-Change = 0.0029, Max-Change = 0.0016, Max-Change = 0.0027, Max-Change = 0.0021, Max-Change = 0.0027, Max-Change = 0.0026, Max-Change = 0.0019, Max-Change = 0.0008, Max-Change = 0.0019, Max-Change = 0.0043, Max-Change = 0.0016, Max-Change = 0.0032, Max-Change = 0.0024, Max-Change = 0.0043, Max-Change = 0.0022, Max-Change = 0.0026, Max-Change = 0.0037, Max-Change = 0.0034, Max-Change = 0.0029, Max-Change = 0.0016, Max-Change = 0.0033, Max-Change = 0.0014, Max-Change = 0.0035, Max-Change = 0.0023, Max-Change = 0.0027, Max-Change = 0.0010, Max-Change = 0.0018, Max-Change = 0.0015, Max-Change = 0.0009, Max-Change = 0.0017, Max-Change = 0.0026, Max-Change = 0.0035, Max-Change = 0.0030, Max-Change = 0.0052, Max-Change = 0.0011, Max-Change = 0.0025, Max-Change = 0.0043, Max-Change = 0.0016, Max-Change = 0.0028, Max-Change = 0.0021, Max-Change = 0.0028, Max-Change = 0.0026, Max-Change = 0.0032, Max-Change = 0.0020, Max-Change = 0.0021, Max-Change = 0.0051, Max-Change = 0.0025, Max-Change = 0.0024, Max-Change = 0.0018, Max-Change = 0.0014, Max-Change = 0.0029, Max-Change = 0.0029, Max-Change = 0.0009, Max-Change = 0.0022, Max-Change = 0.0029, Max-Change = 0.0015, Max-Change = 0.0018, Max-Change = 0.0032, Max-Change = 0.0027, Max-Change = 0.0011, Max-Change = 0.0019, Max-Change = 0.0027, Max-Change = 0.0039, Max-Change = 0.0032, Max-Change = 0.0031, Max-Change = 0.0026, Max-Change = 0.0036, Max-Change = 0.0021, Max-Change = 0.0019, Max-Change = 0.0011, Max-Change = 0.0029, Max-Change = 0.0017, Max-Change = 0.0012, Max-Change = 0.0014, Max-Change = 0.0040, Max-Change = 0.0017, Max-Change = 0.0028, Max-Change = 0.0019, Max-Change = 0.0015, Max-Change = 0.0026, Max-Change = 0.0026, Max-Change = 0.0025, Max-Change = 0.0032, Max-Change = 0.0019, Max-Change = 0.0019, Max-Change = 0.0025, Max-Change = 0.0020, Max-Change = 0.0027, Max-Change = 0.0019, Max-Change = 0.0011, Max-Change = 0.0034, Max-Change = 0.0035, Max-Change = 0.0029, Max-Change = 0.0015, Max-Change = 0.0034, Max-Change = 0.0019, Max-Change = 0.0015, Max-Change = 0.0013, Max-Change = 0.0031, Max-Change = 0.0028, Max-Change = 0.0017, Max-Change = 0.0023, Max-Change = 0.0033, Max-Change = 0.0031, Max-Change = 0.0019, Max-Change = 0.0034, Max-Change = 0.0025, Max-Change = 0.0028, Max-Change = 0.0020, Max-Change = 0.0027, Max-Change = 0.0023, Max-Change = 0.0053, Max-Change = 0.0036, Max-Change = 0.0026, Max-Change = 0.0024, Max-Change = 0.0024, Max-Change = 0.0029, Max-Change = 0.0021, Max-Change = 0.0011, Max-Change = 0.0020, Max-Change = 0.0018, Max-Change = 0.0020, Max-Change = 0.0016, Max-Change = 0.0012, Max-Change = 0.0025, Max-Change = 0.0040, Max-Change = 0.0030, Max-Change = 0.0019, Max-Change = 0.0039, Max-Change = 0.0017, Max-Change = 0.0022, Max-Change = 0.0013, Max-Change = 0.0013, Max-Change = 0.0034, Max-Change = 0.0010, Max-Change = 0.0014, Max-Change = 0.0015, Max-Change = 0.0014, Max-Change = 0.0011, Max-Change = 0.0036, Max-Change = 0.0013, Max-Change = 0.0020, Max-Change = 0.0024, Max-Change = 0.0018, Max-Change = 0.0029, Max-Change = 0.0051, Max-Change = 0.0023, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0033, gam = 0.1057, Max-Change = 0.0012, gam = 0.0780, Max-Change = 0.0010, gam = 0.0629, Max-Change = 0.0005, gam = 0.0532, Max-Change = 0.0008, gam = 0.0464, Max-Change = 0.0006 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood... coef(mod1.mixed) #> $Item_1 #>         (Intercept) a1  d  g  u #> par          -0.131  1  0  0  1 #> CI_2.5       -0.166 NA NA NA NA #> CI_97.5      -0.097 NA NA NA NA #>  #> $Item_2 #>         (Intercept) a1  d  g  u #> par          -0.131  1  0  0  1 #> CI_2.5       -0.166 NA NA NA NA #> CI_97.5      -0.097 NA NA NA NA #>  #> $Item_3 #>         (Intercept) a1  d  g  u #> par          -0.131  1  0  0  1 #> CI_2.5       -0.166 NA NA NA NA #> CI_97.5      -0.097 NA NA NA NA #>  #> $Item_4 #>         (Intercept) a1  d  g  u #> par          -0.131  1  0  0  1 #> CI_2.5       -0.166 NA NA NA NA #> CI_97.5      -0.097 NA NA NA NA #>  #> $Item_5 #>         (Intercept) a1  d  g  u #> par          -0.131  1  0  0  1 #> CI_2.5       -0.166 NA NA NA NA #> CI_97.5      -0.097 NA NA NA NA #>  #> $Item_6 #>         (Intercept) a1  d  g  u #> par          -0.131  1  0  0  1 #> CI_2.5       -0.166 NA NA NA NA #> CI_97.5      -0.097 NA NA NA NA #>  #> $Item_7 #>         (Intercept) a1  d  g  u #> par          -0.131  1  0  0  1 #> CI_2.5       -0.166 NA NA NA NA #> CI_97.5      -0.097 NA NA NA NA #>  #> $Item_8 #>         (Intercept) a1  d  g  u #> par          -0.131  1  0  0  1 #> CI_2.5       -0.166 NA NA NA NA #> CI_97.5      -0.097 NA NA NA NA #>  #> $Item_9 #>         (Intercept) a1  d  g  u #> par          -0.131  1  0  0  1 #> CI_2.5       -0.166 NA NA NA NA #> CI_97.5      -0.097 NA NA NA NA #>  #> $Item_10 #>         (Intercept) a1  d  g  u #> par          -0.131  1  0  0  1 #> CI_2.5       -0.166 NA NA NA NA #> CI_97.5      -0.097 NA NA NA NA #>  #> $Item_11 #>         (Intercept) a1  d  g  u #> par          -0.131  1  0  0  1 #> CI_2.5       -0.166 NA NA NA NA #> CI_97.5      -0.097 NA NA NA NA #>  #> $Item_12 #>         (Intercept) a1  d  g  u #> par          -0.131  1  0  0  1 #> CI_2.5       -0.166 NA NA NA NA #> CI_97.5      -0.097 NA NA NA NA #>  #> $Item_13 #>         (Intercept) a1  d  g  u #> par          -0.131  1  0  0  1 #> CI_2.5       -0.166 NA NA NA NA #> CI_97.5      -0.097 NA NA NA NA #>  #> $Item_14 #>         (Intercept) a1  d  g  u #> par          -0.131  1  0  0  1 #> CI_2.5       -0.166 NA NA NA NA #> CI_97.5      -0.097 NA NA NA NA #>  #> $Item_15 #>         (Intercept) a1  d  g  u #> par          -0.131  1  0  0  1 #> CI_2.5       -0.166 NA NA NA NA #> CI_97.5      -0.097 NA NA NA NA #>  #> $Item_16 #>         (Intercept) a1  d  g  u #> par          -0.131  1  0  0  1 #> CI_2.5       -0.166 NA NA NA NA #> CI_97.5      -0.097 NA NA NA NA #>  #> $Item_17 #>         (Intercept) a1  d  g  u #> par          -0.131  1  0  0  1 #> CI_2.5       -0.166 NA NA NA NA #> CI_97.5      -0.097 NA NA NA NA #>  #> $Item_18 #>         (Intercept) a1  d  g  u #> par          -0.131  1  0  0  1 #> CI_2.5       -0.166 NA NA NA NA #> CI_97.5      -0.097 NA NA NA NA #>  #> $Item_19 #>         (Intercept) a1  d  g  u #> par          -0.131  1  0  0  1 #> CI_2.5       -0.166 NA NA NA NA #> CI_97.5      -0.097 NA NA NA NA #>  #> $Item_20 #>         (Intercept) a1  d  g  u #> par          -0.131  1  0  0  1 #> CI_2.5       -0.166 NA NA NA NA #> CI_97.5      -0.097 NA NA NA NA #>  #> $GroupPars #>         MEAN_1 COV_11 #> par          0  0.087 #> CI_2.5      NA  0.068 #> CI_97.5     NA  0.105 #>  #> $lr.betas #>         F1_(Intercept) F1_X1  F1_X2  F1_X3 #> par                  0 0.409 -0.795 -0.007 #> CI_2.5              NA 0.376 -0.837 -0.040 #> CI_97.5             NA 0.441 -0.753  0.027 #>  coef(mod1.mixed, printSE=TRUE) #> $Item_1 #>     (Intercept) a1  d    g   u #> par      -0.131  1  0 -999 999 #> SE        0.018 NA NA   NA  NA #>  #> $Item_2 #>     (Intercept) a1  d    g   u #> par      -0.131  1  0 -999 999 #> SE        0.018 NA NA   NA  NA #>  #> $Item_3 #>     (Intercept) a1  d    g   u #> par      -0.131  1  0 -999 999 #> SE        0.018 NA NA   NA  NA #>  #> $Item_4 #>     (Intercept) a1  d    g   u #> par      -0.131  1  0 -999 999 #> SE        0.018 NA NA   NA  NA #>  #> $Item_5 #>     (Intercept) a1  d    g   u #> par      -0.131  1  0 -999 999 #> SE        0.018 NA NA   NA  NA #>  #> $Item_6 #>     (Intercept) a1  d    g   u #> par      -0.131  1  0 -999 999 #> SE        0.018 NA NA   NA  NA #>  #> $Item_7 #>     (Intercept) a1  d    g   u #> par      -0.131  1  0 -999 999 #> SE        0.018 NA NA   NA  NA #>  #> $Item_8 #>     (Intercept) a1  d    g   u #> par      -0.131  1  0 -999 999 #> SE        0.018 NA NA   NA  NA #>  #> $Item_9 #>     (Intercept) a1  d    g   u #> par      -0.131  1  0 -999 999 #> SE        0.018 NA NA   NA  NA #>  #> $Item_10 #>     (Intercept) a1  d    g   u #> par      -0.131  1  0 -999 999 #> SE        0.018 NA NA   NA  NA #>  #> $Item_11 #>     (Intercept) a1  d    g   u #> par      -0.131  1  0 -999 999 #> SE        0.018 NA NA   NA  NA #>  #> $Item_12 #>     (Intercept) a1  d    g   u #> par      -0.131  1  0 -999 999 #> SE        0.018 NA NA   NA  NA #>  #> $Item_13 #>     (Intercept) a1  d    g   u #> par      -0.131  1  0 -999 999 #> SE        0.018 NA NA   NA  NA #>  #> $Item_14 #>     (Intercept) a1  d    g   u #> par      -0.131  1  0 -999 999 #> SE        0.018 NA NA   NA  NA #>  #> $Item_15 #>     (Intercept) a1  d    g   u #> par      -0.131  1  0 -999 999 #> SE        0.018 NA NA   NA  NA #>  #> $Item_16 #>     (Intercept) a1  d    g   u #> par      -0.131  1  0 -999 999 #> SE        0.018 NA NA   NA  NA #>  #> $Item_17 #>     (Intercept) a1  d    g   u #> par      -0.131  1  0 -999 999 #> SE        0.018 NA NA   NA  NA #>  #> $Item_18 #>     (Intercept) a1  d    g   u #> par      -0.131  1  0 -999 999 #> SE        0.018 NA NA   NA  NA #>  #> $Item_19 #>     (Intercept) a1  d    g   u #> par      -0.131  1  0 -999 999 #> SE        0.018 NA NA   NA  NA #>  #> $Item_20 #>     (Intercept) a1  d    g   u #> par      -0.131  1  0 -999 999 #> SE        0.018 NA NA   NA  NA #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0  0.087 #> SE      NA  0.009 #>  #> $lr.betas #>     F1_(Intercept) F1_X1  F1_X2  F1_X3 #> par              0 0.409 -0.795 -0.007 #> SE              NA 0.016  0.021  0.017 #>   # draw plausible values for secondary analyses pv <- fscores(mod1, plausible.draws = 10) pvmods <- lapply(pv, function(x, covdata) lm(x ~ covdata$X1 + covdata$X2),                  covdata=covdata) # population characteristics recovered well, and can be averaged over so <- lapply(pvmods, summary) so #> [[1]] #>  #> Call: #> lm(formula = x ~ covdata$X1 + covdata$X2) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.44835 -0.30075 -0.00725  0.30023  1.39928  #>  #> Coefficients: #>               Estimate Std. Error t value Pr(>|t|)     #> (Intercept) -0.0008575  0.0144889  -0.059    0.953     #> covdata$X1   0.4976041  0.0145511  34.197   <2e-16 *** #> covdata$X2  -0.9825724  0.0147905 -66.433   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.458 on 997 degrees of freedom #> Multiple R-squared:  0.8427,\tAdjusted R-squared:  0.8424  #> F-statistic:  2671 on 2 and 997 DF,  p-value: < 2.2e-16 #>  #>  #> [[2]] #>  #> Call: #> lm(formula = x ~ covdata$X1 + covdata$X2) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.63081 -0.32312 -0.00072  0.32619  1.42939  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  0.007569   0.014633   0.517    0.605     #> covdata$X1   0.505676   0.014696  34.409   <2e-16 *** #> covdata$X2  -0.997150   0.014938 -66.753   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.4625 on 997 degrees of freedom #> Multiple R-squared:  0.8441,\tAdjusted R-squared:  0.8438  #> F-statistic:  2699 on 2 and 997 DF,  p-value: < 2.2e-16 #>  #>  #> [[3]] #>  #> Call: #> lm(formula = x ~ covdata$X1 + covdata$X2) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.31740 -0.29192  0.00436  0.28769  1.29179  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  0.002859   0.013912   0.206    0.837     #> covdata$X1   0.494665   0.013972  35.404   <2e-16 *** #> covdata$X2  -1.026517   0.014202 -72.280   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.4397 on 997 degrees of freedom #> Multiple R-squared:  0.8616,\tAdjusted R-squared:  0.8613  #> F-statistic:  3104 on 2 and 997 DF,  p-value: < 2.2e-16 #>  #>  #> [[4]] #>  #> Call: #> lm(formula = x ~ covdata$X1 + covdata$X2) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.23967 -0.29093  0.01153  0.28700  1.49564  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  0.004753   0.013959   0.341    0.734     #> covdata$X1   0.521242   0.014019  37.180   <2e-16 *** #> covdata$X2  -0.998308   0.014250 -70.057   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.4412 on 997 degrees of freedom #> Multiple R-squared:  0.8578,\tAdjusted R-squared:  0.8575  #> F-statistic:  3007 on 2 and 997 DF,  p-value: < 2.2e-16 #>  #>  #> [[5]] #>  #> Call: #> lm(formula = x ~ covdata$X1 + covdata$X2) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.50658 -0.33733  0.00413  0.30474  1.48835  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept) -0.01256    0.01461   -0.86     0.39     #> covdata$X1   0.51689    0.01467   35.23   <2e-16 *** #> covdata$X2  -1.01739    0.01491  -68.23   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.4617 on 997 degrees of freedom #> Multiple R-squared:  0.8498,\tAdjusted R-squared:  0.8495  #> F-statistic:  2821 on 2 and 997 DF,  p-value: < 2.2e-16 #>  #>  #> [[6]] #>  #> Call: #> lm(formula = x ~ covdata$X1 + covdata$X2) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.64543 -0.31438 -0.01742  0.32933  1.58741  #>  #> Coefficients: #>               Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  0.0004054  0.0144326   0.028    0.978     #> covdata$X1   0.5175722  0.0144945  35.708   <2e-16 *** #> covdata$X2  -0.9891850  0.0147330 -67.141   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.4562 on 997 degrees of freedom #> Multiple R-squared:  0.8472,\tAdjusted R-squared:  0.8469  #> F-statistic:  2765 on 2 and 997 DF,  p-value: < 2.2e-16 #>  #>  #> [[7]] #>  #> Call: #> lm(formula = x ~ covdata$X1 + covdata$X2) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.50762 -0.29865  0.01047  0.31591  1.44265  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  0.006128   0.014265    0.43    0.668     #> covdata$X1   0.528305   0.014326   36.88   <2e-16 *** #> covdata$X2  -1.001678   0.014562  -68.79   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.4509 on 997 degrees of freedom #> Multiple R-squared:  0.8538,\tAdjusted R-squared:  0.8535  #> F-statistic:  2912 on 2 and 997 DF,  p-value: < 2.2e-16 #>  #>  #> [[8]] #>  #> Call: #> lm(formula = x ~ covdata$X1 + covdata$X2) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.65793 -0.31574  0.01326  0.31157  1.67938  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  0.02015    0.01477   1.364    0.173     #> covdata$X1   0.49680    0.01484  33.482   <2e-16 *** #> covdata$X2  -1.00406    0.01508 -66.575   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.467 on 997 degrees of freedom #> Multiple R-squared:  0.8421,\tAdjusted R-squared:  0.8418  #> F-statistic:  2659 on 2 and 997 DF,  p-value: < 2.2e-16 #>  #>  #> [[9]] #>  #> Call: #> lm(formula = x ~ covdata$X1 + covdata$X2) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.65512 -0.30475 -0.00809  0.30790  1.36290  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)     #> (Intercept) -0.008583   0.014219  -0.604    0.546     #> covdata$X1   0.509558   0.014280  35.682   <2e-16 *** #> covdata$X2  -0.999097   0.014515 -68.830   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.4494 on 997 degrees of freedom #> Multiple R-squared:  0.8523,\tAdjusted R-squared:  0.852  #> F-statistic:  2876 on 2 and 997 DF,  p-value: < 2.2e-16 #>  #>  #> [[10]] #>  #> Call: #> lm(formula = x ~ covdata$X1 + covdata$X2) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.46921 -0.29404 -0.02075  0.30942  1.42610  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  0.007394   0.014915   0.496     0.62     #> covdata$X1   0.498804   0.014979  33.301   <2e-16 *** #> covdata$X2  -0.995348   0.015225 -65.376   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.4714 on 997 degrees of freedom #> Multiple R-squared:  0.8379,\tAdjusted R-squared:  0.8376  #> F-statistic:  2576 on 2 and 997 DF,  p-value: < 2.2e-16 #>  #>   # compute Rubin's multiple imputation average par <- lapply(so, function(x) x$coefficients[, 'Estimate']) SEpar <- lapply(so, function(x) x$coefficients[, 'Std. Error']) averageMI(par, SEpar) #>                par SEpar       t     df     p #> (Intercept)  0.003 0.017   0.158 97.207 0.219 #> covdata$X1   0.509 0.019  26.683 50.375     0 #> covdata$X2  -1.001 0.020 -50.307 43.947     0  ############ # Example using Gauss-Hermite quadrature with custom input functions  if (FALSE) { # \\dontrun{ library(fastGHQuad) data(SAT12) data <- key2binary(SAT12,                    key = c(1,4,5,2,3,1,2,1,3,1,2,4,2,1,5,3,4,4,1,4,3,3,4,1,3,5,1,3,1,5,4,5)) GH <- gaussHermiteData(50) Theta <- matrix(GH$x)  # This prior works for uni- and multi-dimensional models prior <- function(Theta, Etable){     P <- grid <- GH$w / sqrt(pi)     if(ncol(Theta) > 1)         for(i in 2:ncol(Theta))             P <- expand.grid(P, grid)      if(!is.vector(P)) P <- apply(P, 1, prod)      P }  GHmod1 <- mirt(data, 1, optimizer = 'NR',               technical = list(customTheta = Theta, customPriorFun = prior)) coef(GHmod1, simplify=TRUE)  Theta2 <- as.matrix(expand.grid(Theta, Theta)) GHmod2 <- mirt(data, 2, optimizer = 'NR', TOL = .0002,               technical = list(customTheta = Theta2, customPriorFun = prior)) summary(GHmod2, suppress=.2) } # }  ############ # Davidian curve example  dat <- key2binary(SAT12,                    key = c(1,4,5,2,3,1,2,1,3,1,2,4,2,1,5,3,4,4,1,4,3,3,4,1,3,5,1,3,1,5,4,5)) dav <- mirt(dat, 1, dentype = 'Davidian-4') # use four smoothing parameters #>  plot(dav, type = 'Davidian') # shape of latent trait distribution  coef(dav, simplify=TRUE) #> $items #>            a1      d g u #> Item.1  0.774 -1.048 0 1 #> Item.2  1.684  0.495 0 1 #> Item.3  1.051 -1.114 0 1 #> Item.4  0.582 -0.531 0 1 #> Item.5  1.043  0.613 0 1 #> Item.6  1.037 -2.030 0 1 #> Item.7  1.096  1.397 0 1 #> Item.8  0.639 -1.513 0 1 #> Item.9  0.543  2.128 0 1 #> Item.10 0.993 -0.352 0 1 #> Item.11 2.130  5.453 0 1 #> Item.12 0.163 -0.338 0 1 #> Item.13 1.204  0.867 0 1 #> Item.14 1.171  1.211 0 1 #> Item.15 1.387  1.925 0 1 #> Item.16 0.725 -0.389 0 1 #> Item.17 1.860  4.273 0 1 #> Item.18 1.763 -0.788 0 1 #> Item.19 0.880  0.236 0 1 #> Item.20 1.866  2.743 0 1 #> Item.21 0.695  2.552 0 1 #> Item.22 1.863  3.592 0 1 #> Item.23 0.590 -0.851 0 1 #> Item.24 1.335  1.296 0 1 #> Item.25 0.733 -0.558 0 1 #> Item.26 1.649 -0.125 0 1 #> Item.27 2.356  2.968 0 1 #> Item.28 1.060  0.184 0 1 #> Item.29 0.803 -0.742 0 1 #> Item.30 0.352 -0.241 0 1 #> Item.31 2.944  3.061 0 1 #> Item.32 0.169 -1.651 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  #> $Davidian_phis #> [1]  1.289  0.086 -0.443  1.245 #>   fs <- fscores(dav) # assume normal prior fs2 <- fscores(dav, use_dentype_estimate=TRUE) # use Davidian estimated prior shape head(cbind(fs, fs2)) #>               F1           F1 #> [1,]  2.66818540  3.599616034 #> [2,]  0.14648879  0.070501775 #> [3,]  0.06802365  0.004037417 #> [4,] -0.41577386 -0.426755059 #> [5,]  0.67027700  0.559830142 #> [6,]  0.45477422  0.353831282  itemfit(dav) # assume normal prior #> Error: Only X2, G2, PV_Q1, PV_Q1*, infit, X2*, and X2*_df can be computed with missing data. #>              Pass na.rm=TRUE to remove missing data row-wise itemfit(dav, use_dentype_estimate=TRUE) # use Davidian estimated prior shape #> Error: Only X2, G2, PV_Q1, PV_Q1*, infit, X2*, and X2*_df can be computed with missing data. #>              Pass na.rm=TRUE to remove missing data row-wise  ############ # Unfolding models  # polytomous hyperbolic cosine model with #  estimated latitude of acceptance (rho parameters) mod <- mirt(Science, model=1, itemtype = 'hcm') #>  coef(mod, simplify=TRUE)$items #>         a1        d log_rho1 log_rho2  log_rho3 #> Comfort  1 1.989655 1.625421 1.526102 -16.17198 #> Work     1 2.485054 1.478531 1.224489 -20.39161 #> Future   1 1.801569 1.491945 1.185052 -15.30324 #> Benefit  1 1.903674 1.471276 1.039336 -17.53716 coef(mod, simplify=TRUE, IRTpars=TRUE)$items #>         a         b     rho1     rho2         rho3 #> Comfort 1 -1.989655 5.080557 4.600212 9.475379e-08 #> Work    1 -2.485054 4.386497 3.402426 1.393270e-09 #> Future  1 -1.801569 4.445732 3.270856 2.258856e-07 #> Benefit 1 -1.903674 4.354789 2.827339 2.419408e-08  plot(mod)  plot(mod, type = 'trace')  plot(mod, type = 'itemscore')   # EAP estimates fs <- fscores(mod) head(fs) #>              F1 #> [1,] -0.6675994 #> [2,] -0.1584800 #> [3,]  0.6560938 #> [4,]  0.6560938 #> [5,] -0.2058628 #> [6,] -1.0079077  itemfit(mod) #>      item   S_X2 df.S_X2 RMSEA.S_X2 p.S_X2 #> 1 Comfort  4.437       6      0.000  0.618 #> 2    Work 10.778       8      0.030  0.215 #> 3  Future 18.242      10      0.046  0.051 #> 4 Benefit 12.020      11      0.015  0.362 M2(mod, type = 'C2') #>             M2 df            p     RMSEA    RMSEA_5 RMSEA_95      TLI       CFI #> stats 18.78276  2 8.344004e-05 0.1464969 0.09063855 0.209979 0.736325 0.9121083  ########### # 5PL and restricted 5PL example dat <- expand.table(LSAT7)  mod2PL <- mirt(dat) #>  mod2PL #>  #> Call: #> mirt(data = dat) #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 1e-04 tolerance after 28 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Log-likelihood = -2658.805 #> Estimated parameters: 10  #> AIC = 5337.61 #> BIC = 5386.688; SABIC = 5354.927 #> G2 (21) = 31.7, p = 0.0628 #> RMSEA = 0.023, CFI = NaN, TLI = NaN  # Following does not converge without including strong priors # mod5PL <- mirt(dat, itemtype = '5PL') # mod5PL  # restricted version of 5PL (asymmetric 2PL) model <- 'Theta = 1-5           FIXED = (1-5, g), (1-5, u)'  mod2PL_asym <- mirt(dat, model=model, itemtype = '5PL') #>  mod2PL_asym #>  #> Call: #> mirt(data = dat, model = model, itemtype = \"5PL\") #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 1e-04 tolerance after 69 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Log-likelihood = -2657.911 #> Estimated parameters: 15  #> AIC = 5345.822 #> BIC = 5419.438; SABIC = 5371.797 #> G2 (16) = 29.91, p = 0.0185 #> RMSEA = 0.03, CFI = NaN, TLI = NaN coef(mod2PL_asym, simplify=TRUE) #> $items #>           a1      d g u   logS #> Item.1 0.926  2.882 0 1  0.962 #> Item.2 2.141 -1.547 0 1 -1.454 #> Item.3 1.589  2.066 0 1  0.264 #> Item.4 0.613  2.223 0 1  1.518 #> Item.5 0.748  1.948 0 1  0.079 #>  #> $means #> Theta  #>     0  #>  #> $cov #>       Theta #> Theta     1 #>  coef(mod2PL_asym, simplify=TRUE, IRTpars=TRUE) #> $items #>            a      b g u     S #> Item.1 0.926 -3.113 0 1 2.618 #> Item.2 2.141  0.722 0 1 0.234 #> Item.3 1.589 -1.301 0 1 1.301 #> Item.4 0.613 -3.627 0 1 4.563 #> Item.5 0.748 -2.605 0 1 1.082 #>  #> $means #> Theta  #>     0  #>  #> $cov #>       Theta #> Theta     1 #>   # no big difference statistically or visually anova(mod2PL, mod2PL_asym) #>                  AIC    SABIC       HQ      BIC    logLik    X2 df     p #> mod2PL      5337.610 5354.927 5356.263 5386.688 -2658.805                #> mod2PL_asym 5345.822 5371.797 5373.801 5419.438 -2657.911 1.788  5 0.878 plot(mod2PL, type = 'trace')  plot(mod2PL_asym, type = 'trace')    ################### # LLTM example  a <- matrix(rep(1,30)) d <- rep(c(1,0, -1),each = 10)  # first easy, then medium, last difficult dat <- simdata(a, d, 1000, itemtype = '2PL')  # unconditional model for intercept comparisons mod <- mirt(dat, itemtype = 'Rasch') #>  coef(mod, simplify=TRUE) #> $items #>         a1      d g u #> Item_1   1  1.040 0 1 #> Item_2   1  1.006 0 1 #> Item_3   1  1.121 0 1 #> Item_4   1  1.092 0 1 #> Item_5   1  0.961 0 1 #> Item_6   1  0.995 0 1 #> Item_7   1  1.040 0 1 #> Item_8   1  1.138 0 1 #> Item_9   1  1.051 0 1 #> Item_10  1  1.051 0 1 #> Item_11  1  0.074 0 1 #> Item_12  1  0.010 0 1 #> Item_13  1  0.049 0 1 #> Item_14  1  0.211 0 1 #> Item_15  1  0.030 0 1 #> Item_16  1  0.020 0 1 #> Item_17  1  0.025 0 1 #> Item_18  1  0.103 0 1 #> Item_19  1 -0.009 0 1 #> Item_20  1  0.035 0 1 #> Item_21  1 -0.960 0 1 #> Item_22  1 -0.865 0 1 #> Item_23  1 -0.971 0 1 #> Item_24  1 -0.871 0 1 #> Item_25  1 -0.977 0 1 #> Item_26  1 -1.000 0 1 #> Item_27  1 -0.943 0 1 #> Item_28  1 -0.915 0 1 #> Item_29  1 -0.926 0 1 #> Item_30  1 -1.045 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>       F1 #> F1 1.089 #>   # Suppose that the first 10 items were suspected to be easy, followed by 10 medium difficulty items, # then finally the last 10 items are difficult, # and we wish to test this item structure hypothesis (more intercept designs are possible # by including more columns). itemdesign <- data.frame(difficulty =    factor(c(rep('easy', 10), rep('medium', 10), rep('hard', 10)))) rownames(itemdesign) <- colnames(dat) itemdesign #>         difficulty #> Item_1        easy #> Item_2        easy #> Item_3        easy #> Item_4        easy #> Item_5        easy #> Item_6        easy #> Item_7        easy #> Item_8        easy #> Item_9        easy #> Item_10       easy #> Item_11     medium #> Item_12     medium #> Item_13     medium #> Item_14     medium #> Item_15     medium #> Item_16     medium #> Item_17     medium #> Item_18     medium #> Item_19     medium #> Item_20     medium #> Item_21       hard #> Item_22       hard #> Item_23       hard #> Item_24       hard #> Item_25       hard #> Item_26       hard #> Item_27       hard #> Item_28       hard #> Item_29       hard #> Item_30       hard  # LLTM with mirt() lltm <- mirt(dat, itemtype = 'Rasch', SE=TRUE,    item.formula = ~ 0 + difficulty, itemdesign=itemdesign) #>  #>  #> Calculating information matrix... coef(lltm, simplify=TRUE) #> $items #>         difficultyeasy difficultyhard difficultymedium a1 d g u #> Item_1           1.049          0.000            0.000  1 0 0 1 #> Item_2           1.049          0.000            0.000  1 0 0 1 #> Item_3           1.049          0.000            0.000  1 0 0 1 #> Item_4           1.049          0.000            0.000  1 0 0 1 #> Item_5           1.049          0.000            0.000  1 0 0 1 #> Item_6           1.049          0.000            0.000  1 0 0 1 #> Item_7           1.049          0.000            0.000  1 0 0 1 #> Item_8           1.049          0.000            0.000  1 0 0 1 #> Item_9           1.049          0.000            0.000  1 0 0 1 #> Item_10          1.049          0.000            0.000  1 0 0 1 #> Item_11          0.000          0.000            0.055  1 0 0 1 #> Item_12          0.000          0.000            0.055  1 0 0 1 #> Item_13          0.000          0.000            0.055  1 0 0 1 #> Item_14          0.000          0.000            0.055  1 0 0 1 #> Item_15          0.000          0.000            0.055  1 0 0 1 #> Item_16          0.000          0.000            0.055  1 0 0 1 #> Item_17          0.000          0.000            0.055  1 0 0 1 #> Item_18          0.000          0.000            0.055  1 0 0 1 #> Item_19          0.000          0.000            0.055  1 0 0 1 #> Item_20          0.000          0.000            0.055  1 0 0 1 #> Item_21          0.000         -0.947            0.000  1 0 0 1 #> Item_22          0.000         -0.947            0.000  1 0 0 1 #> Item_23          0.000         -0.947            0.000  1 0 0 1 #> Item_24          0.000         -0.947            0.000  1 0 0 1 #> Item_25          0.000         -0.947            0.000  1 0 0 1 #> Item_26          0.000         -0.947            0.000  1 0 0 1 #> Item_27          0.000         -0.947            0.000  1 0 0 1 #> Item_28          0.000         -0.947            0.000  1 0 0 1 #> Item_29          0.000         -0.947            0.000  1 0 0 1 #> Item_30          0.000         -0.947            0.000  1 0 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>       F1 #> F1 1.087 #>  coef(lltm, printSE=TRUE) #> $Item_1 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_2 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_3 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_4 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_5 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_6 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_7 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_8 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_9 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_10 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_11 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_12 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_13 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_14 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_15 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_16 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_17 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_18 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_19 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_20 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_21 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_22 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_23 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_24 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_25 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_26 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_27 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_28 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_29 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $Item_30 #>     difficultyeasy difficultyhard difficultymedium a1  d logit(g) logit(u) #> par          1.049         -0.947            0.055  1  0     -999      999 #> SE           0.041          0.041            0.040 NA NA       NA       NA #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0  1.087 #> SE      NA  0.061 #>  anova(lltm, mod)  # models fit effectively the same; hence, intercept variability well captured #>           AIC    SABIC       HQ      BIC    logLik     X2 df     p #> lltm 34957.38 34964.31 34964.84 34977.01 -17474.69                 #> mod  34994.12 35047.80 35051.94 35146.26 -17466.06 17.259 27 0.925  # additional information for LLTM plot(lltm)  plot(lltm, type = 'trace')  itemplot(lltm, item=1)  itemfit(lltm) #>       item   S_X2 df.S_X2 RMSEA.S_X2 p.S_X2 #> 1   Item_1 24.926      21      0.014  0.250 #> 2   Item_2 25.450      21      0.015  0.228 #> 3   Item_3 26.853      21      0.017  0.176 #> 4   Item_4 13.876      21      0.000  0.875 #> 5   Item_5 21.532      21      0.005  0.427 #> 6   Item_6 26.546      21      0.016  0.186 #> 7   Item_7 22.068      21      0.007  0.396 #> 8   Item_8 26.263      21      0.016  0.197 #> 9   Item_9 28.722      21      0.019  0.121 #> 10 Item_10 31.938      21      0.023  0.059 #> 11 Item_11 30.955      21      0.022  0.074 #> 12 Item_12 27.258      21      0.017  0.162 #> 13 Item_13 40.510      21      0.030  0.006 #> 14 Item_14 44.155      21      0.033  0.002 #> 15 Item_15 18.240      21      0.000  0.634 #> 16 Item_16 19.533      21      0.000  0.551 #> 17 Item_17 38.888      21      0.029  0.010 #> 18 Item_18 20.311      21      0.000  0.502 #> 19 Item_19 28.758      21      0.019  0.120 #> 20 Item_20  9.866      21      0.000  0.981 #> 21 Item_21 14.852      21      0.000  0.830 #> 22 Item_22 44.590      21      0.034  0.002 #> 23 Item_23 11.498      21      0.000  0.952 #> 24 Item_24 39.674      21      0.030  0.008 #> 25 Item_25 13.721      21      0.000  0.881 #> 26 Item_26 27.361      21      0.017  0.159 #> 27 Item_27 25.580      21      0.015  0.223 #> 28 Item_28 35.287      21      0.026  0.026 #> 29 Item_29 19.392      21      0.000  0.560 #> 30 Item_30 36.611      21      0.027  0.019 head(fscores(lltm))  #EAP estimates #>               F1 #> [1,] -0.75331341 #> [2,] -0.04577798 #> [3,]  0.37309376 #> [4,]  0.09282707 #> [5,]  0.23219904 #> [6,]  0.81353220 fscores(lltm, method='EAPsum', full.scores=FALSE) #>       df     X2  p.X2 SEM.alpha rxx.alpha rxx_F1 #> stats 30 29.644 0.484     2.368     0.859  0.854 #>  #>    Sum.Scores          F1     SE_F1 observed  expected    std.res #> 0           0 -2.79897328 0.5792129        0  1.291155 1.13628984 #> 1           1 -2.48910297 0.5355387        4  3.960778 0.01970788 #> 2           2 -2.22108100 0.5010288       11  7.688918 1.19409093 #> 3           3 -1.98404074 0.4736104        8 12.126626 1.18501847 #> 4           4 -1.77034102 0.4516537       15 16.985231 0.48169860 #> 5           5 -1.57452132 0.4339420       20 22.038665 0.43426340 #> 6           6 -1.39259177 0.4195785       25 27.108481 0.40496469 #> 7           7 -1.22156604 0.4079016       25 32.049782 1.24526885 #> 8           8 -1.05915348 0.3984209       41 36.741299 0.70258661 #> 9           9 -0.90355316 0.3907707       48 41.079207 1.07980376 #> 10         10 -0.75331341 0.3846774       60 44.973595 2.24066170 #> 11         11 -0.60723348 0.3799373       53 48.346697 0.66923392 #> 12         12 -0.46429279 0.3764003       53 51.132185 0.26120811 #> 13         13 -0.32359837 0.3739592       53 53.275070 0.03768612 #> 14         14 -0.18434417 0.3725424       43 54.731903 1.58579916 #> 15         15 -0.04577798 0.3721092       53 55.471097 0.33178480 #> 16         16  0.09282707 0.3726470       60 55.473268 0.60777507 #> 17         17  0.23219904 0.3741706       50 54.731528 0.63956198 #> 18         18  0.37309376 0.3767235       60 53.251728 0.92475295 #> 19         19  0.51632370 0.3803801       48 51.052649 0.42723585 #> 20         20  0.66279163 0.3852510       49 48.166193 0.12014193 #> 21         21  0.81353220 0.3914908       34 44.637689 1.59219565 #> 22         22  0.96976603 0.3993088       35 40.526526 0.86812554 #> 23         23  1.13297255 0.4089863       42 35.907491 1.01672536 #> 24         24  1.30499167 0.4208990       29 30.873437 0.33716812 #> 25         25  1.48816938 0.4355516       26 25.540266 0.09096918 #> 26         26  1.68557155 0.4536249       26 20.055709 1.32733643 #> 27         27  1.90130412 0.4760423       11 14.613939 0.94535981 #> 28         28  2.14099944 0.5040561        7  9.478029 0.80491004 #> 29         29  2.41255459 0.5393400        7  5.008946 0.88963093 #> 30         30  2.72721444 0.5840124        4  1.681915 1.78742341 M2(lltm) # goodness of fit #>            M2  df        p       RMSEA RMSEA_5   RMSEA_95      SRMSR       TLI #> stats 471.366 461 0.359133 0.004744303       0 0.01193726 0.03136646 0.9992018 #>             CFI #> stats 0.9991541 head(personfit(lltm)) #>     outfit   z.outfit    infit    z.infit         Zh #> 1 1.345635  1.5078875 1.273821  1.6171720 -1.6681967 #> 2 1.125953  0.8323450 1.115221  0.8284470 -0.8110866 #> 3 1.055873  0.3650222 1.010712  0.1212935 -0.1546905 #> 4 1.039127  0.2970994 1.045587  0.3617163 -0.2951228 #> 5 0.869016 -0.7684769 0.896185 -0.6925245  0.7406538 #> 6 1.300801  1.2023058 1.267961  1.4880523 -1.4472748 residuals(lltm) #> LD matrix (lower triangle) and standardized residual correlations (upper triangle) #>  #> Upper triangle summary: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  -0.128  -0.040  -0.013  -0.003   0.037   0.094  #>  #>         Item_1 Item_2 Item_3 Item_4 Item_5 Item_6 Item_7 Item_8 Item_9 Item_10 #> Item_1         -0.035 -0.045  0.017  0.057  0.046  0.006 -0.040 -0.009   0.038 #> Item_2   1.254         0.040 -0.030  0.039  0.034  0.024 -0.075 -0.033  -0.020 #> Item_3   1.980  1.589        -0.028 -0.052 -0.061 -0.035 -0.042 -0.027  -0.041 #> Item_4   0.293  0.901  0.808        -0.056  0.029  0.019 -0.035 -0.023   0.038 #> Item_5   3.194  1.500  2.721  3.159        -0.046  0.044  0.063  0.052   0.039 #> Item_6   2.103  1.127  3.706  0.867  2.104         0.046 -0.075 -0.024   0.066 #> Item_7   0.040  0.559  1.204  0.345  1.896  2.103        -0.040  0.007   0.038 #> Item_8   1.599  5.587  1.773  1.204  4.001  5.647  1.599        -0.043  -0.049 #> Item_9   0.088  1.069  0.719  0.515  2.733  0.552  0.053  1.812         -0.023 #> Item_10  1.476  0.396  1.702  1.424  1.495  4.351  1.476  2.392  0.552         #> Item_11  0.103  2.811  6.948  2.892  1.783  0.591  4.838  4.443  0.076   0.431 #> Item_12  0.450  0.679  1.551  0.837  1.658  1.110  0.685  2.956  2.945   1.648 #> Item_13  0.359  0.903  1.102  6.038  1.550  0.901  1.011 10.370  1.271   0.213 #> Item_14  4.648  4.929  8.934  5.250  6.787  8.858  4.286  5.560  4.151   3.975 #> Item_15  0.253  1.506  5.349  2.118  4.220  1.354  0.451  3.638  0.891   1.457 #> Item_16  1.478  0.692  1.198  3.820  1.352  1.440  1.636  1.869  1.441   0.855 #> Item_17  0.825  0.607  1.463  0.565  1.693  1.884  0.825  1.549  0.321   0.267 #> Item_18  0.463  0.782  0.864  0.749  1.823  1.836  0.569  1.252  0.601   1.851 #> Item_19  0.930  3.920  2.048  1.448  2.138  2.085  2.260  4.209  0.863   3.104 #> Item_20  0.418  2.925  1.087  0.561  2.945  0.785  2.168  1.889  0.393   1.319 #> Item_21  0.089  1.912  0.854  0.502  2.274  2.301  0.684  1.488  0.192   0.192 #> Item_22  2.398  1.503  1.737  1.547  3.787  3.222  2.037  3.163  4.011   1.304 #> Item_23  0.127  0.771  0.933  1.442  1.994  0.834  0.431  3.165  0.117   0.565 #> Item_24  1.416  1.951  1.905  1.760  2.492  1.500  1.685  2.174  0.919   4.629 #> Item_25  2.938  0.485  1.108  0.577  1.626  1.923  4.134  1.399  0.172   0.465 #> Item_26  1.351  1.260  1.749  1.256  1.682  2.197  0.744  4.950  0.954   1.360 #> Item_27  1.167  0.344  0.916  0.241  3.395  0.502  0.077  1.105  0.114   0.686 #> Item_28  1.741  0.895  0.745  4.505  2.442  1.864  0.521  1.115  1.355   2.393 #> Item_29  0.353  1.154  0.783  0.350  1.387  0.584  4.081  1.779  3.139   0.246 #> Item_30  1.552  1.855  3.510  2.688  2.455  3.621  2.018  3.041  1.564   1.631 #>         Item_11 Item_12 Item_13 Item_14 Item_15 Item_16 Item_17 Item_18 Item_19 #> Item_1    0.010  -0.021  -0.019  -0.068  -0.016  -0.038   0.029   0.022   0.030 #> Item_2   -0.053  -0.026  -0.030  -0.070   0.039  -0.026  -0.025  -0.028   0.063 #> Item_3   -0.083  -0.039  -0.033  -0.095   0.073  -0.035  -0.038   0.029  -0.045 #> Item_4   -0.054   0.029  -0.078  -0.072  -0.046  -0.062  -0.024  -0.027  -0.038 #> Item_5   -0.042  -0.041  -0.039  -0.082  -0.065  -0.037  -0.041  -0.043  -0.046 #> Item_6    0.024   0.033  -0.030  -0.094   0.037  -0.038  -0.043   0.043   0.046 #> Item_7    0.070   0.026   0.032  -0.065   0.021   0.040   0.029   0.024   0.048 #> Item_8   -0.067  -0.054  -0.102  -0.075  -0.060   0.043  -0.039  -0.035  -0.065 #> Item_9   -0.009  -0.054  -0.036  -0.064  -0.030  -0.038  -0.018  -0.025  -0.029 #> Item_10  -0.021   0.041   0.015   0.063  -0.038   0.029   0.016  -0.043   0.056 #> Item_11           0.074   0.027  -0.094  -0.034   0.023  -0.017   0.019  -0.032 #> Item_12   5.537           0.029  -0.071   0.022  -0.040  -0.024   0.037   0.038 #> Item_13   0.733   0.822          -0.075  -0.063  -0.023  -0.049  -0.027  -0.043 #> Item_14   8.852   5.083   5.669          -0.077  -0.068  -0.075  -0.075  -0.077 #> Item_15   1.176   0.506   3.920   5.985           0.038  -0.043   0.027  -0.044 #> Item_16   0.537   1.636   0.541   4.653   1.412           0.070   0.028   0.031 #> Item_17   0.297   0.567   2.423   5.634   1.808   4.904          -0.045  -0.046 #> Item_18   0.371   1.368   0.736   5.652   0.750   0.802   2.019          -0.037 #> Item_19   1.033   1.463   1.866   5.986   1.910   0.949   2.077   1.351         #> Item_20   0.179   0.660   7.130   4.956   0.327   0.358   1.070   0.526   0.932 #> Item_21   4.996   0.566   1.753   4.155   0.176   0.578   0.567   0.483   0.829 #> Item_22   1.902   2.779   2.140  10.921   1.456   2.585   2.594   2.062   3.034 #> Item_23   0.492   0.467   0.125   4.406   0.446   0.432   0.356   0.535   4.727 #> Item_24   0.908   3.257   1.840  16.312   1.376   1.598   2.275   1.590   3.663 #> Item_25   0.234   0.751   0.192   4.467   2.540   3.616   0.358   3.288   1.660 #> Item_26   1.232   2.627   0.513   5.264   0.951   3.083   3.352   0.956   1.398 #> Item_27   1.012   2.002   0.835   9.828   0.434   1.069   0.535   1.661   1.573 #> Item_28   0.146   0.797   0.210   4.013   1.069   0.846   0.907   0.936   2.239 #> Item_29   1.113   3.445   3.819   7.722   4.644   0.774   0.431   0.330   0.940 #> Item_30   2.774   1.694   2.200   8.757   1.680   1.685   2.162   2.758   2.848 #>         Item_20 Item_21 Item_22 Item_23 Item_24 Item_25 Item_26 Item_27 Item_28 #> Item_1   -0.020  -0.009  -0.049   0.011   0.038   0.054  -0.037   0.034   0.042 #> Item_2   -0.054  -0.044  -0.039   0.028  -0.044   0.022   0.035   0.019  -0.030 #> Item_3   -0.033   0.029  -0.042  -0.031  -0.044  -0.033   0.042  -0.030  -0.027 #> Item_4   -0.024   0.022  -0.039   0.038  -0.042  -0.024   0.035   0.016   0.067 #> Item_5    0.054   0.048  -0.062  -0.045  -0.050   0.040   0.041   0.058  -0.049 #> Item_6    0.028  -0.048   0.057   0.029  -0.039   0.044   0.047  -0.022   0.043 #> Item_7    0.047   0.026  -0.045   0.021   0.041   0.064   0.027  -0.009   0.023 #> Item_8   -0.043  -0.039  -0.056   0.056  -0.047   0.037  -0.070  -0.033   0.033 #> Item_9   -0.020   0.014  -0.063  -0.011   0.030  -0.013  -0.031   0.011  -0.037 #> Item_10  -0.036   0.014  -0.036  -0.024  -0.068  -0.022   0.037   0.026   0.049 #> Item_11   0.013   0.071  -0.044  -0.022   0.030  -0.015   0.035   0.032  -0.012 #> Item_12   0.026   0.024   0.053  -0.022  -0.057  -0.027   0.051   0.045  -0.028 #> Item_13  -0.084   0.042  -0.046   0.011  -0.043   0.014  -0.023  -0.029   0.014 #> Item_14  -0.070  -0.064  -0.105   0.066  -0.128   0.067   0.073  -0.099  -0.063 #> Item_15  -0.018  -0.013  -0.038  -0.021  -0.037  -0.050   0.031   0.021  -0.033 #> Item_16   0.019  -0.024  -0.051   0.021  -0.040   0.060   0.056   0.033   0.029 #> Item_17   0.033  -0.024  -0.051  -0.019  -0.048  -0.019   0.058   0.023   0.030 #> Item_18  -0.023  -0.022   0.045   0.023   0.040   0.057   0.031   0.041   0.031 #> Item_19  -0.031  -0.029  -0.055   0.069  -0.061  -0.041   0.037   0.040  -0.047 #> Item_20           0.026   0.064   0.040  -0.042   0.047   0.043   0.015   0.023 #> Item_21   0.661           0.037   0.018   0.049   0.036   0.062   0.042   0.036 #> Item_22   4.132   1.382           0.036  -0.038  -0.044   0.066   0.035   0.041 #> Item_23   1.565   0.326   1.327          -0.055   0.036  -0.025   0.012  -0.028 #> Item_24   1.759   2.362   1.467   3.027           0.035  -0.040  -0.049   0.041 #> Item_25   2.179   1.309   1.949   1.287   1.235           0.036   0.036   0.051 #> Item_26   1.855   3.872   4.406   0.629   1.579   1.284           0.045   0.081 #> Item_27   0.229   1.776   1.254   0.136   2.363   1.264   2.055          -0.017 #> Item_28   0.517   1.295   1.703   0.774   1.677   2.582   6.555   0.276         #> Item_29   2.431   0.861   0.942   3.744   2.164   5.621   0.577   3.499   2.247 #> Item_30   4.804   1.594   2.932   2.690   2.732   1.857   1.846   1.576   1.810 #>         Item_29 Item_30 #> Item_1    0.019   0.039 #> Item_2   -0.034   0.043 #> Item_3    0.028  -0.059 #> Item_4   -0.019   0.052 #> Item_5    0.037   0.050 #> Item_6    0.024   0.060 #> Item_7    0.064   0.045 #> Item_8    0.042  -0.055 #> Item_9    0.056  -0.040 #> Item_10   0.016   0.040 #> Item_11   0.033   0.053 #> Item_12   0.059   0.041 #> Item_13   0.062  -0.047 #> Item_14  -0.088   0.094 #> Item_15  -0.068  -0.041 #> Item_16   0.028  -0.041 #> Item_17  -0.021   0.046 #> Item_18  -0.018   0.053 #> Item_19   0.031   0.053 #> Item_20   0.049   0.069 #> Item_21   0.029  -0.040 #> Item_22  -0.031  -0.054 #> Item_23  -0.061   0.052 #> Item_24   0.047   0.052 #> Item_25   0.075   0.043 #> Item_26   0.024   0.043 #> Item_27   0.059  -0.040 #> Item_28   0.047   0.043 #> Item_29          -0.059 #> Item_30   3.478          # intercept across items also possible by removing ~ 0 portion, just interpreted differently lltm.int <- mirt(dat, itemtype = 'Rasch',    item.formula = ~ difficulty, itemdesign=itemdesign) #>  anova(lltm, lltm.int) # same #>               AIC    SABIC       HQ      BIC    logLik X2 df   p #> lltm     34957.38 34964.31 34964.84 34977.01 -17474.69           #> lltm.int 34957.38 34964.31 34964.84 34977.01 -17474.69  0  0 NaN coef(lltm.int, simplify=TRUE) #> $items #>         (Intercept) difficultyhard difficultymedium a1 d g u #> Item_1        1.049          0.000            0.000  1 0 0 1 #> Item_2        1.049          0.000            0.000  1 0 0 1 #> Item_3        1.049          0.000            0.000  1 0 0 1 #> Item_4        1.049          0.000            0.000  1 0 0 1 #> Item_5        1.049          0.000            0.000  1 0 0 1 #> Item_6        1.049          0.000            0.000  1 0 0 1 #> Item_7        1.049          0.000            0.000  1 0 0 1 #> Item_8        1.049          0.000            0.000  1 0 0 1 #> Item_9        1.049          0.000            0.000  1 0 0 1 #> Item_10       1.049          0.000            0.000  1 0 0 1 #> Item_11       1.049          0.000           -0.994  1 0 0 1 #> Item_12       1.049          0.000           -0.994  1 0 0 1 #> Item_13       1.049          0.000           -0.994  1 0 0 1 #> Item_14       1.049          0.000           -0.994  1 0 0 1 #> Item_15       1.049          0.000           -0.994  1 0 0 1 #> Item_16       1.049          0.000           -0.994  1 0 0 1 #> Item_17       1.049          0.000           -0.994  1 0 0 1 #> Item_18       1.049          0.000           -0.994  1 0 0 1 #> Item_19       1.049          0.000           -0.994  1 0 0 1 #> Item_20       1.049          0.000           -0.994  1 0 0 1 #> Item_21       1.049         -1.996            0.000  1 0 0 1 #> Item_22       1.049         -1.996            0.000  1 0 0 1 #> Item_23       1.049         -1.996            0.000  1 0 0 1 #> Item_24       1.049         -1.996            0.000  1 0 0 1 #> Item_25       1.049         -1.996            0.000  1 0 0 1 #> Item_26       1.049         -1.996            0.000  1 0 0 1 #> Item_27       1.049         -1.996            0.000  1 0 0 1 #> Item_28       1.049         -1.996            0.000  1 0 0 1 #> Item_29       1.049         -1.996            0.000  1 0 0 1 #> Item_30       1.049         -1.996            0.000  1 0 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>       F1 #> F1 1.087 #>   # using unconditional modeling for first four items itemdesign.sub <- itemdesign[5:nrow(itemdesign), , drop=FALSE] itemdesign.sub    # note that rownames are required in this case #>         difficulty #> Item_5        easy #> Item_6        easy #> Item_7        easy #> Item_8        easy #> Item_9        easy #> Item_10       easy #> Item_11     medium #> Item_12     medium #> Item_13     medium #> Item_14     medium #> Item_15     medium #> Item_16     medium #> Item_17     medium #> Item_18     medium #> Item_19     medium #> Item_20     medium #> Item_21       hard #> Item_22       hard #> Item_23       hard #> Item_24       hard #> Item_25       hard #> Item_26       hard #> Item_27       hard #> Item_28       hard #> Item_29       hard #> Item_30       hard lltm.4 <- mirt(dat, itemtype = 'Rasch',    item.formula = ~ 0 + difficulty, itemdesign=itemdesign.sub) #>  coef(lltm.4, simplify=TRUE) # first four items are the standard Rasch #> $items #>         difficultyeasy difficultyhard difficultymedium a1     d g u #> Item_1           0.000          0.000            0.000  1 1.040 0 1 #> Item_2           0.000          0.000            0.000  1 1.006 0 1 #> Item_3           0.000          0.000            0.000  1 1.121 0 1 #> Item_4           0.000          0.000            0.000  1 1.092 0 1 #> Item_5           1.039          0.000            0.000  1 0.000 0 1 #> Item_6           1.039          0.000            0.000  1 0.000 0 1 #> Item_7           1.039          0.000            0.000  1 0.000 0 1 #> Item_8           1.039          0.000            0.000  1 0.000 0 1 #> Item_9           1.039          0.000            0.000  1 0.000 0 1 #> Item_10          1.039          0.000            0.000  1 0.000 0 1 #> Item_11          0.000          0.000            0.055  1 0.000 0 1 #> Item_12          0.000          0.000            0.055  1 0.000 0 1 #> Item_13          0.000          0.000            0.055  1 0.000 0 1 #> Item_14          0.000          0.000            0.055  1 0.000 0 1 #> Item_15          0.000          0.000            0.055  1 0.000 0 1 #> Item_16          0.000          0.000            0.055  1 0.000 0 1 #> Item_17          0.000          0.000            0.055  1 0.000 0 1 #> Item_18          0.000          0.000            0.055  1 0.000 0 1 #> Item_19          0.000          0.000            0.055  1 0.000 0 1 #> Item_20          0.000          0.000            0.055  1 0.000 0 1 #> Item_21          0.000         -0.946            0.000  1 0.000 0 1 #> Item_22          0.000         -0.946            0.000  1 0.000 0 1 #> Item_23          0.000         -0.946            0.000  1 0.000 0 1 #> Item_24          0.000         -0.946            0.000  1 0.000 0 1 #> Item_25          0.000         -0.946            0.000  1 0.000 0 1 #> Item_26          0.000         -0.946            0.000  1 0.000 0 1 #> Item_27          0.000         -0.946            0.000  1 0.000 0 1 #> Item_28          0.000         -0.946            0.000  1 0.000 0 1 #> Item_29          0.000         -0.946            0.000  1 0.000 0 1 #> Item_30          0.000         -0.946            0.000  1 0.000 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>       F1 #> F1 1.087 #>  anova(lltm, lltm.4) # similar fit, hence more constrained model preferred #>             AIC    SABIC       HQ      BIC    logLik    X2 df   p #> lltm   34957.38 34964.31 34964.84 34977.01 -17474.69              #> lltm.4 34963.73 34977.58 34978.65 35002.99 -17473.86 1.651  4 0.8  # LLTM with mixedmirt() (more flexible in general, but slower) LLTM <- mixedmirt(dat, model=1, fixed = ~ 0 + difficulty,                   itemdesign=itemdesign, SE=FALSE) #> , Max-Change = 0.1861, Max-Change = 0.1517, Max-Change = 0.1266, Max-Change = 0.0988, Max-Change = 0.0822, Max-Change = 0.0666, Max-Change = 0.0551, Max-Change = 0.0452, Max-Change = 0.0395, Max-Change = 0.0312, Max-Change = 0.0272, Max-Change = 0.0232, Max-Change = 0.0176, Max-Change = 0.0151, Max-Change = 0.0130, Max-Change = 0.0106, Max-Change = 0.0133, Max-Change = 0.0102, Max-Change = 0.0056, Max-Change = 0.0081, Max-Change = 0.0092, Max-Change = 0.0072, Max-Change = 0.0051, Max-Change = 0.0045, Max-Change = 0.0036, Max-Change = 0.0035, Max-Change = 0.0082, Max-Change = 0.0066, Max-Change = 0.0055, Max-Change = 0.0083, Max-Change = 0.0056, Max-Change = 0.0096, Max-Change = 0.0072, Max-Change = 0.0043, Max-Change = 0.0006, Max-Change = 0.0038, Max-Change = 0.0026, Max-Change = 0.0030, Max-Change = 0.0078, Max-Change = 0.0030, Max-Change = 0.0117, Max-Change = 0.0018, Max-Change = 0.0030, Max-Change = 0.0092, Max-Change = 0.0069, Max-Change = 0.0034, Max-Change = 0.0085, Max-Change = 0.0007, Max-Change = 0.0049, Max-Change = 0.0039, Max-Change = 0.0007, Max-Change = 0.0037, Max-Change = 0.0039, Max-Change = 0.0063, Max-Change = 0.0041, Max-Change = 0.0016, Max-Change = 0.0057, Max-Change = 0.0026, Max-Change = 0.0059, Max-Change = 0.0040, Max-Change = 0.0084, Max-Change = 0.0013, Max-Change = 0.0052, Max-Change = 0.0027, Max-Change = 0.0082, Max-Change = 0.0020, Max-Change = 0.0057, Max-Change = 0.0039, Max-Change = 0.0039, Max-Change = 0.0044, Max-Change = 0.0016, Max-Change = 0.0049, Max-Change = 0.0018, Max-Change = 0.0088, Max-Change = 0.0059, Max-Change = 0.0099, Max-Change = 0.0133, Max-Change = 0.0034, Max-Change = 0.0051, Max-Change = 0.0022, Max-Change = 0.0045, Max-Change = 0.0114, Max-Change = 0.0074, Max-Change = 0.0039, Max-Change = 0.0065, Max-Change = 0.0031, Max-Change = 0.0042, Max-Change = 0.0073, Max-Change = 0.0027, Max-Change = 0.0106, Max-Change = 0.0076, Max-Change = 0.0118, Max-Change = 0.0084, Max-Change = 0.0088, Max-Change = 0.0037, Max-Change = 0.0024, Max-Change = 0.0008, Max-Change = 0.0032, Max-Change = 0.0044, Max-Change = 0.0038, Max-Change = 0.0054, Max-Change = 0.0042, Max-Change = 0.0023, Max-Change = 0.0011, Max-Change = 0.0011, Max-Change = 0.0110, Max-Change = 0.0074, Max-Change = 0.0067, Max-Change = 0.0043, Max-Change = 0.0104, Max-Change = 0.0066, Max-Change = 0.0044, Max-Change = 0.0066, Max-Change = 0.0043, Max-Change = 0.0062, Max-Change = 0.0034, Max-Change = 0.0113, Max-Change = 0.0046, Max-Change = 0.0022, Max-Change = 0.0016, Max-Change = 0.0029, Max-Change = 0.0089, Max-Change = 0.0030, Max-Change = 0.0063, Max-Change = 0.0047, Max-Change = 0.0078, Max-Change = 0.0065, Max-Change = 0.0047, Max-Change = 0.0044, Max-Change = 0.0046, Max-Change = 0.0034, Max-Change = 0.0020, Max-Change = 0.0111, Max-Change = 0.0066, Max-Change = 0.0025, Max-Change = 0.0087, Max-Change = 0.0118, Max-Change = 0.0028, Max-Change = 0.0015, Max-Change = 0.0103, Max-Change = 0.0017, Max-Change = 0.0025, Max-Change = 0.0055, Max-Change = 0.0017, Max-Change = 0.0066, Max-Change = 0.0060, Max-Change = 0.0049, Max-Change = 0.0011, Max-Change = 0.0050, Max-Change = 0.0027, Max-Change = 0.0068, Max-Change = 0.0061, Max-Change = 0.0099, Max-Change = 0.0053, Max-Change = 0.0038, Max-Change = 0.0035, Max-Change = 0.0055, Max-Change = 0.0028, Max-Change = 0.0060, Max-Change = 0.0062, Max-Change = 0.0030, Max-Change = 0.0073, Max-Change = 0.0051, Max-Change = 0.0015, Max-Change = 0.0046, Max-Change = 0.0076, Max-Change = 0.0028, Max-Change = 0.0133, Max-Change = 0.0023, Max-Change = 0.0074, Max-Change = 0.0070, Max-Change = 0.0036, Max-Change = 0.0024, Max-Change = 0.0029, Max-Change = 0.0089, Max-Change = 0.0020, Max-Change = 0.0028, Max-Change = 0.0033, Max-Change = 0.0039, Max-Change = 0.0049, Max-Change = 0.0040, Max-Change = 0.0046, Max-Change = 0.0011, Max-Change = 0.0090, Max-Change = 0.0051, Max-Change = 0.0030, Max-Change = 0.0043, Max-Change = 0.0015, Max-Change = 0.0041, Max-Change = 0.0013, Max-Change = 0.0018, Max-Change = 0.0100, Max-Change = 0.0094, Max-Change = 0.0058, Max-Change = 0.0040, Max-Change = 0.0108, Max-Change = 0.0046, Max-Change = 0.0066, Max-Change = 0.0080, Max-Change = 0.0048, Max-Change = 0.0048, Max-Change = 0.0032, Max-Change = 0.0070, Max-Change = 0.0007, Max-Change = 0.0105, Max-Change = 0.0018, Max-Change = 0.0080, Max-Change = 0.0022, Max-Change = 0.0127, Max-Change = 0.0014, Max-Change = 0.0056, Max-Change = 0.0033, Max-Change = 0.0148, Max-Change = 0.0057, Max-Change = 0.0039, Max-Change = 0.0030, Max-Change = 0.0061, Max-Change = 0.0019, Max-Change = 0.0162, Max-Change = 0.0031, Max-Change = 0.0071, Max-Change = 0.0113, Max-Change = 0.0027, Max-Change = 0.0045, Max-Change = 0.0020, Max-Change = 0.0033, Max-Change = 0.0069, Max-Change = 0.0071, Max-Change = 0.0054, Max-Change = 0.0047, Max-Change = 0.0036, Max-Change = 0.0026, Max-Change = 0.0018, Max-Change = 0.0020, Max-Change = 0.0191, Max-Change = 0.0039, Max-Change = 0.0072, Max-Change = 0.0011, Max-Change = 0.0035, Max-Change = 0.0052, Max-Change = 0.0073, Max-Change = 0.0083, Max-Change = 0.0069, Max-Change = 0.0046, Max-Change = 0.0079, Max-Change = 0.0145, Max-Change = 0.0032, Max-Change = 0.0021, Max-Change = 0.0040, Max-Change = 0.0038, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0070, gam = 0.1057, Max-Change = 0.0024, gam = 0.0780, Max-Change = 0.0009, gam = 0.0629, Max-Change = 0.0003, gam = 0.0532, Max-Change = 0.0020, gam = 0.0464, Max-Change = 0.0006, gam = 0.0413, Max-Change = 0.0023, gam = 0.0374, Max-Change = 0.0008, gam = 0.0342, Max-Change = 0.0008, gam = 0.0316, Max-Change = 0.0003 #>  #> Calculating log-likelihood... summary(LLTM) #>  #> Call: #> mixedmirt(data = dat, model = 1, fixed = ~0 + difficulty, itemdesign = itemdesign,  #>     SE = FALSE) #>  #> -------------- #> FIXED EFFECTS: #>                  Estimate Std.Error z.value #> difficultyeasy      1.052        NA      NA #> difficultyhard     -0.942        NA      NA #> difficultymedium    0.059        NA      NA #>  #> -------------- #> RANDOM EFFECT COVARIANCE(S): #> Correlations on upper diagonal #>  #> $Theta #>      F1 #> F1 1.08 #>  coef(LLTM) #> $Item_1 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_2 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_3 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_4 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_5 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_6 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_7 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_8 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_9 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_10 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_11 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_12 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_13 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_14 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_15 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_16 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_17 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_18 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_19 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_20 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_21 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_22 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_23 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_24 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_25 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_26 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_27 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_28 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_29 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $Item_30 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.052         -0.942            0.059  1 0 0 1 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0  1.079 #>   # LLTM with random error estimate (not supported with mirt() ) LLTM.e <- mixedmirt(dat, model=1, fixed = ~ 0 + difficulty,                   random = ~ 1|items, itemdesign=itemdesign, SE=FALSE) #> , Max-Change = 0.1861, Max-Change = 0.1517, Max-Change = 0.1266, Max-Change = 0.0988, Max-Change = 0.0822, Max-Change = 0.0666, Max-Change = 0.0551, Max-Change = 0.0452, Max-Change = 0.0395, Max-Change = 0.0312, Max-Change = 0.0272, Max-Change = 0.0232, Max-Change = 0.0176, Max-Change = 0.0151, Max-Change = 0.0130, Max-Change = 0.0106, Max-Change = 0.0133, Max-Change = 0.0102, Max-Change = 0.0056, Max-Change = 0.0081, Max-Change = 0.0092, Max-Change = 0.0072, Max-Change = 0.0051, Max-Change = 0.0045, Max-Change = 0.0036, Max-Change = 0.0035, Max-Change = 0.0082, Max-Change = 0.0066, Max-Change = 0.0055, Max-Change = 0.0083, Max-Change = 0.0056, Max-Change = 0.0096, Max-Change = 0.0072, Max-Change = 0.0043, Max-Change = 0.0006, Max-Change = 0.0038, Max-Change = 0.0026, Max-Change = 0.0030, Max-Change = 0.0078, Max-Change = 0.0030, Max-Change = 0.0117, Max-Change = 0.0018, Max-Change = 0.0030, Max-Change = 0.0092, Max-Change = 0.0069, Max-Change = 0.0034, Max-Change = 0.0085, Max-Change = 0.0007, Max-Change = 0.0049, Max-Change = 0.0039, Max-Change = 0.0007, Max-Change = 0.0037, Max-Change = 0.0039, Max-Change = 0.0063, Max-Change = 0.0041, Max-Change = 0.0016, Max-Change = 0.0057, Max-Change = 0.0026, Max-Change = 0.0059, Max-Change = 0.0040, Max-Change = 0.0084, Max-Change = 0.0013, Max-Change = 0.0052, Max-Change = 0.0027, Max-Change = 0.0082, Max-Change = 0.0020, Max-Change = 0.0057, Max-Change = 0.0039, Max-Change = 0.0039, Max-Change = 0.0044, Max-Change = 0.0016, Max-Change = 0.0049, Max-Change = 0.0018, Max-Change = 0.0088, Max-Change = 0.0059, Max-Change = 0.0099, Max-Change = 0.0133, Max-Change = 0.0034, Max-Change = 0.0051, Max-Change = 0.0022, Max-Change = 0.0045, Max-Change = 0.0114, Max-Change = 0.0074, Max-Change = 0.0039, Max-Change = 0.0065, Max-Change = 0.0031, Max-Change = 0.0042, Max-Change = 0.0073, Max-Change = 0.0027, Max-Change = 0.0106, Max-Change = 0.0076, Max-Change = 0.0118, Max-Change = 0.0084, Max-Change = 0.0088, Max-Change = 0.0037, Max-Change = 0.0024, Max-Change = 0.0008, Max-Change = 0.0032, Max-Change = 0.0044, Max-Change = 0.0339, Max-Change = 0.2000, Max-Change = 0.1630, Max-Change = 0.1305, Max-Change = 0.1034, Max-Change = 0.0821, Max-Change = 0.0658, Max-Change = 0.0527, Max-Change = 0.0423, Max-Change = 0.0339, Max-Change = 0.0274, Max-Change = 0.0219, Max-Change = 0.0180, Max-Change = 0.0150, Max-Change = 0.0124, Max-Change = 0.0115, Max-Change = 0.0221, Max-Change = 0.0034, Max-Change = 0.0044, Max-Change = 0.0079, Max-Change = 0.0093, Max-Change = 0.0058, Max-Change = 0.0036, Max-Change = 0.0049, Max-Change = 0.0065, Max-Change = 0.0074, Max-Change = 0.0026, Max-Change = 0.0063, Max-Change = 0.0027, Max-Change = 0.0029, Max-Change = 0.0061, Max-Change = 0.0028, Max-Change = 0.0041, Max-Change = 0.0052, Max-Change = 0.0058, Max-Change = 0.0106, Max-Change = 0.0068, Max-Change = 0.0011, Max-Change = 0.0174, Max-Change = 0.0088, Max-Change = 0.0039, Max-Change = 0.0052, Max-Change = 0.0114, Max-Change = 0.0064, Max-Change = 0.0037, Max-Change = 0.0045, Max-Change = 0.0055, Max-Change = 0.0043, Max-Change = 0.0022, Max-Change = 0.0118, Max-Change = 0.0053, Max-Change = 0.0050, Max-Change = 0.0097, Max-Change = 0.0062, Max-Change = 0.0035, Max-Change = 0.0024, Max-Change = 0.0072, Max-Change = 0.0091, Max-Change = 0.0071, Max-Change = 0.0048, Max-Change = 0.0118, Max-Change = 0.0080, Max-Change = 0.0220, Max-Change = 0.0065, Max-Change = 0.0053, Max-Change = 0.0090, Max-Change = 0.0050, Max-Change = 0.0061, Max-Change = 0.0019, Max-Change = 0.0032, Max-Change = 0.0049, Max-Change = 0.0059, Max-Change = 0.0059, Max-Change = 0.0036, Max-Change = 0.0044, Max-Change = 0.0036, Max-Change = 0.0032, Max-Change = 0.0064, Max-Change = 0.0032, Max-Change = 0.0045, Max-Change = 0.0033, Max-Change = 0.0033, Max-Change = 0.0105, Max-Change = 0.0027, Max-Change = 0.0089, Max-Change = 0.0081, Max-Change = 0.0012, Max-Change = 0.0053, Max-Change = 0.0021, Max-Change = 0.0057, Max-Change = 0.0028, Max-Change = 0.0017, Max-Change = 0.0018, Max-Change = 0.0049, Max-Change = 0.0015, Max-Change = 0.0085, Max-Change = 0.0074, Max-Change = 0.0020, Max-Change = 0.0079, Max-Change = 0.0054, Max-Change = 0.0043, Max-Change = 0.0030, Max-Change = 0.0075, Max-Change = 0.0034, Max-Change = 0.0080, Max-Change = 0.0028, Max-Change = 0.0085, Max-Change = 0.0084, Max-Change = 0.0109, Max-Change = 0.0088, Max-Change = 0.0130, Max-Change = 0.0063, Max-Change = 0.0129, Max-Change = 0.0021, Max-Change = 0.0033, Max-Change = 0.0026, Max-Change = 0.0056, Max-Change = 0.0035, Max-Change = 0.0043, Max-Change = 0.0011, Max-Change = 0.0058, Max-Change = 0.0040, Max-Change = 0.0044, Max-Change = 0.0054, Max-Change = 0.0054, Max-Change = 0.0053, Max-Change = 0.0030, Max-Change = 0.0039, Max-Change = 0.0022, Max-Change = 0.0034, Max-Change = 0.0014, Max-Change = 0.0158, Max-Change = 0.0014, Max-Change = 0.0099, Max-Change = 0.0069, Max-Change = 0.0050, Max-Change = 0.0038, Max-Change = 0.0024, Max-Change = 0.0016, Max-Change = 0.0030, Max-Change = 0.0070, Max-Change = 0.0007, Max-Change = 0.0017, Max-Change = 0.0012, Max-Change = 0.0016, Max-Change = 0.0047, Max-Change = 0.0082, Max-Change = 0.0115, Max-Change = 0.0068, Max-Change = 0.0011, Max-Change = 0.0024, Max-Change = 0.0146, Max-Change = 0.0030, Max-Change = 0.0082, Max-Change = 0.0117, Max-Change = 0.0039, Max-Change = 0.0043, Max-Change = 0.0041, Max-Change = 0.0108, Max-Change = 0.0026, Max-Change = 0.0034, Max-Change = 0.0102, Max-Change = 0.0025, Max-Change = 0.0022, Max-Change = 0.0028, Max-Change = 0.0025, Max-Change = 0.0017, Max-Change = 0.0092, Max-Change = 0.0057, Max-Change = 0.0030, Max-Change = 0.0051, Max-Change = 0.0015, Max-Change = 0.0034, Max-Change = 0.0063, Max-Change = 0.0027, Max-Change = 0.0062, Max-Change = 0.0023, Max-Change = 0.0015, Max-Change = 0.0095, Max-Change = 0.0017, Max-Change = 0.0046, Max-Change = 0.0072, Max-Change = 0.0063, Max-Change = 0.0057, Max-Change = 0.0083, Max-Change = 0.0061, Max-Change = 0.0012, Max-Change = 0.0038, Max-Change = 0.0034, Max-Change = 0.0057, Max-Change = 0.0029, Max-Change = 0.0118, Max-Change = 0.0071, Max-Change = 0.0037, Max-Change = 0.0027, Max-Change = 0.0036, Max-Change = 0.0071, Max-Change = 0.0029, Max-Change = 0.0035, Max-Change = 0.0037, Max-Change = 0.0020, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0105, gam = 0.1057, Max-Change = 0.0049, gam = 0.0780, Max-Change = 0.0025, gam = 0.0629, Max-Change = 0.0014, gam = 0.0532, Max-Change = 0.0003, gam = 0.0464, Max-Change = 0.0002, gam = 0.0413, Max-Change = 0.0006 #>  #> Calculating log-likelihood... coef(LLTM.e) #> $Item_1 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_2 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_3 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_4 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_5 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_6 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_7 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_8 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_9 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_10 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_11 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_12 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_13 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_14 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_15 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_16 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_17 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_18 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_19 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_20 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_21 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_22 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_23 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_24 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_25 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_26 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_27 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_28 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_29 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $Item_30 #>     difficultyeasy difficultyhard difficultymedium a1 d g u #> par          1.044         -0.946            0.065  1 0 0 1 #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0  1.087 #>  #> $items #>     COV_items_items #> par           0.002 #>    ################### # General MLTM example (Embretson, 1984)  set.seed(42)  as <- matrix(rep(1,60), ncol=2) as[11:18,1] <- as[1:9,2] <- 0 d1 <- rep(c(3,1),each = 6)  # first easy, then medium, last difficult for first trait d2 <- rep(c(0,1,2),times = 4)    # difficult to easy d <- rnorm(18) ds <- rbind(cbind(d1=NA, d2=d), cbind(d1, d2)) (pars <- data.frame(a=as, d=ds)) #>    a.1 a.2 d.d1        d.d2 #> 1    1   0   NA  1.37095845 #> 2    1   0   NA -0.56469817 #> 3    1   0   NA  0.36312841 #> 4    1   0   NA  0.63286260 #> 5    1   0   NA  0.40426832 #> 6    1   0   NA -0.10612452 #> 7    1   0   NA  1.51152200 #> 8    1   0   NA -0.09465904 #> 9    1   0   NA  2.01842371 #> 10   1   1   NA -0.06271410 #> 11   0   1   NA  1.30486965 #> 12   0   1   NA  2.28664539 #> 13   0   1   NA -1.38886070 #> 14   0   1   NA -0.27878877 #> 15   0   1   NA -0.13332134 #> 16   0   1   NA  0.63595040 #> 17   0   1   NA -0.28425292 #> 18   0   1   NA -2.65645542 #> 19   1   1    3  0.00000000 #> 20   1   1    3  1.00000000 #> 21   1   1    3  2.00000000 #> 22   1   1    3  0.00000000 #> 23   1   1    3  1.00000000 #> 24   1   1    3  2.00000000 #> 25   1   1    1  0.00000000 #> 26   1   1    1  1.00000000 #> 27   1   1    1  2.00000000 #> 28   1   1    1  0.00000000 #> 29   1   1    1  1.00000000 #> 30   1   1    1  2.00000000 dat <- simdata(as, ds, 2500,   itemtype = c(rep('dich', 18), rep('partcomp', 12))) itemstats(dat) #> $overall #>     N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  2500           16.494           4.83 0.088 0.059 0.747     2.428 #>  #> $itemstats #>            N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item_1  2500 2 0.752 0.432   0.265         0.180       0.745 #> Item_2  2500 2 0.384 0.486   0.328         0.234       0.742 #> Item_3  2500 2 0.563 0.496   0.319         0.222       0.743 #> Item_4  2500 2 0.635 0.481   0.318         0.224       0.743 #> Item_5  2500 2 0.582 0.493   0.320         0.224       0.743 #> Item_6  2500 2 0.478 0.500   0.329         0.233       0.742 #> Item_7  2500 2 0.767 0.423   0.274         0.191       0.744 #> Item_8  2500 2 0.469 0.499   0.315         0.218       0.743 #> Item_9  2500 2 0.849 0.358   0.233         0.161       0.745 #> Item_10 2500 2 0.471 0.499   0.557         0.480       0.727 #> Item_11 2500 2 0.736 0.441   0.352         0.268       0.740 #> Item_12 2500 2 0.882 0.323   0.246         0.182       0.745 #> Item_13 2500 2 0.232 0.422   0.302         0.220       0.743 #> Item_14 2500 2 0.460 0.499   0.319         0.222       0.743 #> Item_15 2500 2 0.480 0.500   0.387         0.294       0.739 #> Item_16 2500 2 0.627 0.484   0.352         0.260       0.741 #> Item_17 2500 2 0.441 0.497   0.318         0.222       0.743 #> Item_18 2500 2 0.097 0.296   0.209         0.149       0.746 #> Item_19 2500 2 0.466 0.499   0.381         0.287       0.739 #> Item_20 2500 2 0.643 0.479   0.360         0.269       0.740 #> Item_21 2500 2 0.788 0.409   0.335         0.257       0.741 #> Item_22 2500 2 0.456 0.498   0.406         0.315       0.737 #> Item_23 2500 2 0.646 0.478   0.403         0.315       0.737 #> Item_24 2500 2 0.769 0.422   0.364         0.284       0.740 #> Item_25 2500 2 0.349 0.477   0.408         0.321       0.737 #> Item_26 2500 2 0.492 0.500   0.414         0.323       0.737 #> Item_27 2500 2 0.586 0.493   0.381         0.289       0.739 #> Item_28 2500 2 0.330 0.470   0.388         0.300       0.738 #> Item_29 2500 2 0.477 0.500   0.361         0.266       0.740 #> Item_30 2500 2 0.587 0.492   0.371         0.278       0.740 #>  #> $proportions #>             0     1 #> Item_1  0.248 0.752 #> Item_2  0.616 0.384 #> Item_3  0.437 0.563 #> Item_4  0.365 0.635 #> Item_5  0.418 0.582 #> Item_6  0.522 0.478 #> Item_7  0.233 0.767 #> Item_8  0.531 0.469 #> Item_9  0.151 0.849 #> Item_10 0.529 0.471 #> Item_11 0.264 0.736 #> Item_12 0.118 0.882 #> Item_13 0.768 0.232 #> Item_14 0.540 0.460 #> Item_15 0.520 0.480 #> Item_16 0.373 0.627 #> Item_17 0.559 0.441 #> Item_18 0.903 0.097 #> Item_19 0.534 0.466 #> Item_20 0.357 0.643 #> Item_21 0.212 0.788 #> Item_22 0.544 0.456 #> Item_23 0.354 0.646 #> Item_24 0.231 0.769 #> Item_25 0.651 0.349 #> Item_26 0.508 0.492 #> Item_27 0.414 0.586 #> Item_28 0.670 0.330 #> Item_29 0.523 0.477 #> Item_30 0.413 0.587 #>   # unconditional model syntax <- \"theta1 = 1-9, 19-30            theta2 = 10-30            COV = theta1*theta2\" itemtype <- c(rep('Rasch', 18), rep('PC1PL', 12)) mod <- mirt(dat, syntax, itemtype=itemtype) #>  coef(mod, simplify=TRUE) #> $items #>         a1 a2      d g u    d1     d2 #> Item_1   1  0  1.313 0 1    NA     NA #> Item_2   1  0 -0.563 0 1    NA     NA #> Item_3   1  0  0.303 0 1    NA     NA #> Item_4   1  0  0.660 0 1    NA     NA #> Item_5   1  0  0.393 0 1    NA     NA #> Item_6   1  0 -0.105 0 1    NA     NA #> Item_7   1  0  1.404 0 1    NA     NA #> Item_8   1  0 -0.147 0 1    NA     NA #> Item_9   1  0  2.013 0 1    NA     NA #> Item_10  0  1 -0.141 0 1    NA     NA #> Item_11  0  1  1.227 0 1    NA     NA #> Item_12  0  1  2.350 0 1    NA     NA #> Item_13  0  1 -1.429 0 1    NA     NA #> Item_14  0  1 -0.193 0 1    NA     NA #> Item_15  0  1 -0.098 0 1    NA     NA #> Item_16  0  1  0.623 0 1    NA     NA #> Item_17  0  1 -0.286 0 1    NA     NA #> Item_18  0  1 -2.592 0 1    NA     NA #> Item_19  1  1     NA 0 1 2.870  0.013 #> Item_20  1  1     NA 0 1 3.716  0.832 #> Item_21  1  1     NA 0 1 3.238  1.900 #> Item_22  1  1     NA 0 1 4.407 -0.174 #> Item_23  1  1     NA 0 1 3.538  0.866 #> Item_24  1  1     NA 0 1 2.851  1.890 #> Item_25  1  1     NA 0 1 1.197 -0.137 #> Item_26  1  1     NA 0 1 1.038  0.975 #> Item_27  1  1     NA 0 1 1.063  1.818 #> Item_28  1  1     NA 0 1 0.970 -0.138 #> Item_29  1  1     NA 0 1 0.902  1.010 #> Item_30  1  1     NA 0 1 1.015  1.914 #>  #> $means #> theta1 theta2  #>      0      0  #>  #> $cov #>        theta1 theta2 #> theta1  0.917  0.081 #> theta2  0.081  0.984 #>  data.frame(est=coef(mod, simplify=TRUE)$items, pop=data.frame(a=as, d=ds)) #>         est.a1 est.a2       est.d est.g est.u    est.d1      est.d2 pop.a.1 #> Item_1       1      0  1.31307855     0     1        NA          NA       1 #> Item_2       1      0 -0.56331423     0     1        NA          NA       1 #> Item_3       1      0  0.30311181     0     1        NA          NA       1 #> Item_4       1      0  0.66017201     0     1        NA          NA       1 #> Item_5       1      0  0.39267181     0     1        NA          NA       1 #> Item_6       1      0 -0.10529560     0     1        NA          NA       1 #> Item_7       1      0  1.40429460     0     1        NA          NA       1 #> Item_8       1      0 -0.14742905     0     1        NA          NA       1 #> Item_9       1      0  2.01310778     0     1        NA          NA       1 #> Item_10      0      1 -0.14050425     0     1        NA          NA       1 #> Item_11      0      1  1.22727159     0     1        NA          NA       0 #> Item_12      0      1  2.35002102     0     1        NA          NA       0 #> Item_13      0      1 -1.42944927     0     1        NA          NA       0 #> Item_14      0      1 -0.19283592     0     1        NA          NA       0 #> Item_15      0      1 -0.09794928     0     1        NA          NA       0 #> Item_16      0      1  0.62283206     0     1        NA          NA       0 #> Item_17      0      1 -0.28628773     0     1        NA          NA       0 #> Item_18      0      1 -2.59213954     0     1        NA          NA       0 #> Item_19      1      1          NA     0     1 2.8695796  0.01318001       1 #> Item_20      1      1          NA     0     1 3.7157820  0.83154537       1 #> Item_21      1      1          NA     0     1 3.2383233  1.90018431       1 #> Item_22      1      1          NA     0     1 4.4073154 -0.17448556       1 #> Item_23      1      1          NA     0     1 3.5382631  0.86641897       1 #> Item_24      1      1          NA     0     1 2.8505117  1.88958564       1 #> Item_25      1      1          NA     0     1 1.1972230 -0.13675332       1 #> Item_26      1      1          NA     0     1 1.0378260  0.97497271       1 #> Item_27      1      1          NA     0     1 1.0634033  1.81828381       1 #> Item_28      1      1          NA     0     1 0.9704764 -0.13769090       1 #> Item_29      1      1          NA     0     1 0.9017976  1.00959896       1 #> Item_30      1      1          NA     0     1 1.0149521  1.91386682       1 #>         pop.a.2 pop.d.d1    pop.d.d2 #> Item_1        0       NA  1.37095845 #> Item_2        0       NA -0.56469817 #> Item_3        0       NA  0.36312841 #> Item_4        0       NA  0.63286260 #> Item_5        0       NA  0.40426832 #> Item_6        0       NA -0.10612452 #> Item_7        0       NA  1.51152200 #> Item_8        0       NA -0.09465904 #> Item_9        0       NA  2.01842371 #> Item_10       1       NA -0.06271410 #> Item_11       1       NA  1.30486965 #> Item_12       1       NA  2.28664539 #> Item_13       1       NA -1.38886070 #> Item_14       1       NA -0.27878877 #> Item_15       1       NA -0.13332134 #> Item_16       1       NA  0.63595040 #> Item_17       1       NA -0.28425292 #> Item_18       1       NA -2.65645542 #> Item_19       1        3  0.00000000 #> Item_20       1        3  1.00000000 #> Item_21       1        3  2.00000000 #> Item_22       1        3  0.00000000 #> Item_23       1        3  1.00000000 #> Item_24       1        3  2.00000000 #> Item_25       1        1  0.00000000 #> Item_26       1        1  1.00000000 #> Item_27       1        1  2.00000000 #> Item_28       1        1  0.00000000 #> Item_29       1        1  1.00000000 #> Item_30       1        1  2.00000000 itemplot(mod, 1)  itemplot(mod, 30)   # MLTM design only for PC1PL items itemdesign <- data.frame(t1_difficulty= factor(d1, labels=c('medium', 'easy')),                         t2_difficulty=factor(d2, labels=c('hard', 'medium', 'easy'))) rownames(itemdesign) <- colnames(dat)[19:30] itemdesign #>         t1_difficulty t2_difficulty #> Item_19          easy          hard #> Item_20          easy        medium #> Item_21          easy          easy #> Item_22          easy          hard #> Item_23          easy        medium #> Item_24          easy          easy #> Item_25        medium          hard #> Item_26        medium        medium #> Item_27        medium          easy #> Item_28        medium          hard #> Item_29        medium        medium #> Item_30        medium          easy  # fit MLTM design, leaving first 18 items as 'Rasch' type mltm <- mirt(dat, syntax, itemtype=itemtype, itemdesign=itemdesign,              item.formula = list(theta1 ~ 0 + t1_difficulty,                                  theta2 ~ 0 + t2_difficulty), SE=TRUE) #>  #>  #> Calculating information matrix... coef(mltm, simplify=TRUE) #> $items #>         theta1.t1_difficultyeasy theta1.t1_difficultymedium #> Item_1                      0.00                      0.000 #> Item_2                      0.00                      0.000 #> Item_3                      0.00                      0.000 #> Item_4                      0.00                      0.000 #> Item_5                      0.00                      0.000 #> Item_6                      0.00                      0.000 #> Item_7                      0.00                      0.000 #> Item_8                      0.00                      0.000 #> Item_9                      0.00                      0.000 #> Item_10                     0.00                      0.000 #> Item_11                     0.00                      0.000 #> Item_12                     0.00                      0.000 #> Item_13                     0.00                      0.000 #> Item_14                     0.00                      0.000 #> Item_15                     0.00                      0.000 #> Item_16                     0.00                      0.000 #> Item_17                     0.00                      0.000 #> Item_18                     0.00                      0.000 #> Item_19                     3.19                      0.000 #> Item_20                     3.19                      0.000 #> Item_21                     3.19                      0.000 #> Item_22                     3.19                      0.000 #> Item_23                     3.19                      0.000 #> Item_24                     3.19                      0.000 #> Item_25                     0.00                      1.031 #> Item_26                     0.00                      1.031 #> Item_27                     0.00                      1.031 #> Item_28                     0.00                      1.031 #> Item_29                     0.00                      1.031 #> Item_30                     0.00                      1.031 #>         theta2.t2_difficultyeasy theta2.t2_difficultyhard #> Item_1                     0.000                    0.000 #> Item_2                     0.000                    0.000 #> Item_3                     0.000                    0.000 #> Item_4                     0.000                    0.000 #> Item_5                     0.000                    0.000 #> Item_6                     0.000                    0.000 #> Item_7                     0.000                    0.000 #> Item_8                     0.000                    0.000 #> Item_9                     0.000                    0.000 #> Item_10                    0.000                    0.000 #> Item_11                    0.000                    0.000 #> Item_12                    0.000                    0.000 #> Item_13                    0.000                    0.000 #> Item_14                    0.000                    0.000 #> Item_15                    0.000                    0.000 #> Item_16                    0.000                    0.000 #> Item_17                    0.000                    0.000 #> Item_18                    0.000                    0.000 #> Item_19                    0.000                   -0.078 #> Item_20                    0.000                    0.000 #> Item_21                    1.857                    0.000 #> Item_22                    0.000                   -0.078 #> Item_23                    0.000                    0.000 #> Item_24                    1.857                    0.000 #> Item_25                    0.000                   -0.078 #> Item_26                    0.000                    0.000 #> Item_27                    1.857                    0.000 #> Item_28                    0.000                   -0.078 #> Item_29                    0.000                    0.000 #> Item_30                    1.857                    0.000 #>         theta2.t2_difficultymedium a1 a2      d g u d1 d2 #> Item_1                       0.000  1  0  1.314 0 1 NA NA #> Item_2                       0.000  1  0 -0.563 0 1 NA NA #> Item_3                       0.000  1  0  0.303 0 1 NA NA #> Item_4                       0.000  1  0  0.661 0 1 NA NA #> Item_5                       0.000  1  0  0.393 0 1 NA NA #> Item_6                       0.000  1  0 -0.105 0 1 NA NA #> Item_7                       0.000  1  0  1.405 0 1 NA NA #> Item_8                       0.000  1  0 -0.147 0 1 NA NA #> Item_9                       0.000  1  0  2.014 0 1 NA NA #> Item_10                      0.000  0  1 -0.140 0 1 NA NA #> Item_11                      0.000  0  1  1.228 0 1 NA NA #> Item_12                      0.000  0  1  2.351 0 1 NA NA #> Item_13                      0.000  0  1 -1.430 0 1 NA NA #> Item_14                      0.000  0  1 -0.193 0 1 NA NA #> Item_15                      0.000  0  1 -0.098 0 1 NA NA #> Item_16                      0.000  0  1  0.623 0 1 NA NA #> Item_17                      0.000  0  1 -0.286 0 1 NA NA #> Item_18                      0.000  0  1 -2.594 0 1 NA NA #> Item_19                      0.000  1  1     NA 0 1  0  0 #> Item_20                      0.924  1  1     NA 0 1  0  0 #> Item_21                      0.000  1  1     NA 0 1  0  0 #> Item_22                      0.000  1  1     NA 0 1  0  0 #> Item_23                      0.924  1  1     NA 0 1  0  0 #> Item_24                      0.000  1  1     NA 0 1  0  0 #> Item_25                      0.000  1  1     NA 0 1  0  0 #> Item_26                      0.924  1  1     NA 0 1  0  0 #> Item_27                      0.000  1  1     NA 0 1  0  0 #> Item_28                      0.000  1  1     NA 0 1  0  0 #> Item_29                      0.924  1  1     NA 0 1  0  0 #> Item_30                      0.000  1  1     NA 0 1  0  0 #>  #> $means #> theta1 theta2  #>      0      0  #>  #> $cov #>        theta1 theta2 #> theta1  0.919  0.074 #> theta2  0.074  0.988 #>  coef(mltm, printSE=TRUE) #> $Item_1 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                        0                          0 #> SE                        NA                         NA #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                        0                        0 #> SE                        NA                       NA #>     theta2.t2_difficultymedium a1 a2     d logit(g) logit(u) #> par                          0  1  0 1.314     -999      999 #> SE                          NA NA NA 0.054       NA       NA #>  #> $Item_2 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                        0                          0 #> SE                        NA                         NA #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                        0                        0 #> SE                        NA                       NA #>     theta2.t2_difficultymedium a1 a2      d logit(g) logit(u) #> par                          0  1  0 -0.563     -999      999 #> SE                          NA NA NA  0.049       NA       NA #>  #> $Item_3 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                        0                          0 #> SE                        NA                         NA #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                        0                        0 #> SE                        NA                       NA #>     theta2.t2_difficultymedium a1 a2     d logit(g) logit(u) #> par                          0  1  0 0.303     -999      999 #> SE                          NA NA NA 0.048       NA       NA #>  #> $Item_4 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                        0                          0 #> SE                        NA                         NA #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                        0                        0 #> SE                        NA                       NA #>     theta2.t2_difficultymedium a1 a2     d logit(g) logit(u) #> par                          0  1  0 0.661     -999      999 #> SE                          NA NA NA 0.049       NA       NA #>  #> $Item_5 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                        0                          0 #> SE                        NA                         NA #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                        0                        0 #> SE                        NA                       NA #>     theta2.t2_difficultymedium a1 a2     d logit(g) logit(u) #> par                          0  1  0 0.393     -999      999 #> SE                          NA NA NA 0.048       NA       NA #>  #> $Item_6 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                        0                          0 #> SE                        NA                         NA #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                        0                        0 #> SE                        NA                       NA #>     theta2.t2_difficultymedium a1 a2      d logit(g) logit(u) #> par                          0  1  0 -0.105     -999      999 #> SE                          NA NA NA  0.048       NA       NA #>  #> $Item_7 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                        0                          0 #> SE                        NA                         NA #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                        0                        0 #> SE                        NA                       NA #>     theta2.t2_difficultymedium a1 a2     d logit(g) logit(u) #> par                          0  1  0 1.405     -999      999 #> SE                          NA NA NA 0.055       NA       NA #>  #> $Item_8 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                        0                          0 #> SE                        NA                         NA #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                        0                        0 #> SE                        NA                       NA #>     theta2.t2_difficultymedium a1 a2      d logit(g) logit(u) #> par                          0  1  0 -0.147     -999      999 #> SE                          NA NA NA  0.048       NA       NA #>  #> $Item_9 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                        0                          0 #> SE                        NA                         NA #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                        0                        0 #> SE                        NA                       NA #>     theta2.t2_difficultymedium a1 a2     d logit(g) logit(u) #> par                          0  1  0 2.014     -999      999 #> SE                          NA NA NA 0.063       NA       NA #>  #> $Item_10 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                        0                          0 #> SE                        NA                         NA #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                        0                        0 #> SE                        NA                       NA #>     theta2.t2_difficultymedium a1 a2      d logit(g) logit(u) #> par                          0  0  1 -0.140     -999      999 #> SE                          NA NA NA  0.048       NA       NA #>  #> $Item_11 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                        0                          0 #> SE                        NA                         NA #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                        0                        0 #> SE                        NA                       NA #>     theta2.t2_difficultymedium a1 a2     d logit(g) logit(u) #> par                          0  0  1 1.228     -999      999 #> SE                          NA NA NA 0.053       NA       NA #>  #> $Item_12 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                        0                          0 #> SE                        NA                         NA #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                        0                        0 #> SE                        NA                       NA #>     theta2.t2_difficultymedium a1 a2     d logit(g) logit(u) #> par                          0  0  1 2.351     -999      999 #> SE                          NA NA NA 0.069       NA       NA #>  #> $Item_13 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                        0                          0 #> SE                        NA                         NA #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                        0                        0 #> SE                        NA                       NA #>     theta2.t2_difficultymedium a1 a2      d logit(g) logit(u) #> par                          0  0  1 -1.430     -999      999 #> SE                          NA NA NA  0.055       NA       NA #>  #> $Item_14 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                        0                          0 #> SE                        NA                         NA #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                        0                        0 #> SE                        NA                       NA #>     theta2.t2_difficultymedium a1 a2      d logit(g) logit(u) #> par                          0  0  1 -0.193     -999      999 #> SE                          NA NA NA  0.048       NA       NA #>  #> $Item_15 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                        0                          0 #> SE                        NA                         NA #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                        0                        0 #> SE                        NA                       NA #>     theta2.t2_difficultymedium a1 a2      d logit(g) logit(u) #> par                          0  0  1 -0.098     -999      999 #> SE                          NA NA NA  0.048       NA       NA #>  #> $Item_16 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                        0                          0 #> SE                        NA                         NA #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                        0                        0 #> SE                        NA                       NA #>     theta2.t2_difficultymedium a1 a2     d logit(g) logit(u) #> par                          0  0  1 0.623     -999      999 #> SE                          NA NA NA 0.050       NA       NA #>  #> $Item_17 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                        0                          0 #> SE                        NA                         NA #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                        0                        0 #> SE                        NA                       NA #>     theta2.t2_difficultymedium a1 a2      d logit(g) logit(u) #> par                          0  0  1 -0.286     -999      999 #> SE                          NA NA NA  0.049       NA       NA #>  #> $Item_18 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                        0                          0 #> SE                        NA                         NA #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                        0                        0 #> SE                        NA                       NA #>     theta2.t2_difficultymedium a1 a2      d logit(g) logit(u) #> par                          0  0  1 -2.594     -999      999 #> SE                          NA NA NA  0.074       NA       NA #>  #> $Item_19 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                    3.190                      1.031 #> SE                     0.145                      0.048 #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                    1.857                   -0.078 #> SE                     0.065                    0.037 #>     theta2.t2_difficultymedium a1 a2 d1 d2 logit(g) logit(u) #> par                      0.924  1  1  0  0     -999      999 #> SE                       0.046 NA NA NA NA       NA       NA #>  #> $Item_20 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                    3.190                      1.031 #> SE                     0.145                      0.048 #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                    1.857                   -0.078 #> SE                     0.065                    0.037 #>     theta2.t2_difficultymedium a1 a2 d1 d2 logit(g) logit(u) #> par                      0.924  1  1  0  0     -999      999 #> SE                       0.046 NA NA NA NA       NA       NA #>  #> $Item_21 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                    3.190                      1.031 #> SE                     0.145                      0.048 #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                    1.857                   -0.078 #> SE                     0.065                    0.037 #>     theta2.t2_difficultymedium a1 a2 d1 d2 logit(g) logit(u) #> par                      0.924  1  1  0  0     -999      999 #> SE                       0.046 NA NA NA NA       NA       NA #>  #> $Item_22 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                    3.190                      1.031 #> SE                     0.145                      0.048 #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                    1.857                   -0.078 #> SE                     0.065                    0.037 #>     theta2.t2_difficultymedium a1 a2 d1 d2 logit(g) logit(u) #> par                      0.924  1  1  0  0     -999      999 #> SE                       0.046 NA NA NA NA       NA       NA #>  #> $Item_23 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                    3.190                      1.031 #> SE                     0.145                      0.048 #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                    1.857                   -0.078 #> SE                     0.065                    0.037 #>     theta2.t2_difficultymedium a1 a2 d1 d2 logit(g) logit(u) #> par                      0.924  1  1  0  0     -999      999 #> SE                       0.046 NA NA NA NA       NA       NA #>  #> $Item_24 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                    3.190                      1.031 #> SE                     0.145                      0.048 #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                    1.857                   -0.078 #> SE                     0.065                    0.037 #>     theta2.t2_difficultymedium a1 a2 d1 d2 logit(g) logit(u) #> par                      0.924  1  1  0  0     -999      999 #> SE                       0.046 NA NA NA NA       NA       NA #>  #> $Item_25 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                    3.190                      1.031 #> SE                     0.145                      0.048 #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                    1.857                   -0.078 #> SE                     0.065                    0.037 #>     theta2.t2_difficultymedium a1 a2 d1 d2 logit(g) logit(u) #> par                      0.924  1  1  0  0     -999      999 #> SE                       0.046 NA NA NA NA       NA       NA #>  #> $Item_26 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                    3.190                      1.031 #> SE                     0.145                      0.048 #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                    1.857                   -0.078 #> SE                     0.065                    0.037 #>     theta2.t2_difficultymedium a1 a2 d1 d2 logit(g) logit(u) #> par                      0.924  1  1  0  0     -999      999 #> SE                       0.046 NA NA NA NA       NA       NA #>  #> $Item_27 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                    3.190                      1.031 #> SE                     0.145                      0.048 #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                    1.857                   -0.078 #> SE                     0.065                    0.037 #>     theta2.t2_difficultymedium a1 a2 d1 d2 logit(g) logit(u) #> par                      0.924  1  1  0  0     -999      999 #> SE                       0.046 NA NA NA NA       NA       NA #>  #> $Item_28 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                    3.190                      1.031 #> SE                     0.145                      0.048 #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                    1.857                   -0.078 #> SE                     0.065                    0.037 #>     theta2.t2_difficultymedium a1 a2 d1 d2 logit(g) logit(u) #> par                      0.924  1  1  0  0     -999      999 #> SE                       0.046 NA NA NA NA       NA       NA #>  #> $Item_29 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                    3.190                      1.031 #> SE                     0.145                      0.048 #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                    1.857                   -0.078 #> SE                     0.065                    0.037 #>     theta2.t2_difficultymedium a1 a2 d1 d2 logit(g) logit(u) #> par                      0.924  1  1  0  0     -999      999 #> SE                       0.046 NA NA NA NA       NA       NA #>  #> $Item_30 #>     theta1.t1_difficultyeasy theta1.t1_difficultymedium #> par                    3.190                      1.031 #> SE                     0.145                      0.048 #>     theta2.t2_difficultyeasy theta2.t2_difficultyhard #> par                    1.857                   -0.078 #> SE                     0.065                    0.037 #>     theta2.t2_difficultymedium a1 a2 d1 d2 logit(g) logit(u) #> par                      0.924  1  1  0  0     -999      999 #> SE                       0.046 NA NA NA NA       NA       NA #>  #> $GroupPars #>     MEAN_1 MEAN_2 COV_11 COV_21 COV_22 #> par      0      0  0.919  0.074  0.988 #> SE      NA     NA  0.047  0.029  0.045 #>  anova(mltm, mod) # similar fit; hence more constrained version preferred #>           AIC    SABIC       HQ      BIC    logLik     X2 df     p #> mltm 87789.31 87858.12 87844.28 87940.73 -43868.65                 #> mod  87810.34 87929.44 87905.48 88072.42 -43860.17 16.972 19 0.592 M2(mltm) # goodness of fit #>             M2  df            p      RMSEA    RMSEA_5   RMSEA_95      SRMSR #> stats 724.3175 439 2.220446e-16 0.01612682 0.01400712 0.01819185 0.03054497 #>             TLI       CFI #> stats 0.9760504 0.9758302 head(personfit(mltm)) #>      outfit   z.outfit     infit    z.infit         Zh #> 1 0.4099102 -2.3020948 0.5059336 -2.9261983  2.2862274 #> 2 1.9123368  2.2520109 1.2180485  1.0684326 -1.5047067 #> 3 0.6286135 -0.8426793 0.7783421 -0.9888073  1.0049591 #> 4 0.7758581 -0.9554199 0.8563428 -0.8899493  0.9411033 #> 5 0.7022093 -0.8066740 0.8190887 -0.9254922  0.9442138 #> 6 0.4515079 -1.3679137 0.5692678 -1.6827425  1.4501646 residuals(mltm) #> LD matrix (lower triangle) and standardized residual correlations (upper triangle) #>  #> Upper triangle summary: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  -0.064  -0.024  -0.007   0.000   0.019   0.174  #>  #>         Item_1 Item_2 Item_3 Item_4 Item_5 Item_6 Item_7 Item_8 Item_9 Item_10 #> Item_1         -0.010 -0.027 -0.040 -0.031  0.029  0.000  0.003 -0.012   0.098 #> Item_2   0.229         0.008  0.013  0.041  0.049  0.015  0.003 -0.004   0.142 #> Item_3   1.788  0.156        -0.025 -0.007 -0.012  0.012 -0.014 -0.015   0.174 #> Item_4   3.964  0.437  1.577        -0.006  0.014 -0.014  0.008  0.018   0.134 #> Item_5   2.393  4.302  0.134  0.085         0.021  0.010 -0.015 -0.005   0.154 #> Item_6   2.036  5.900  0.344  0.505  1.137         0.005 -0.012 -0.003   0.127 #> Item_7   0.000  0.581  0.363  0.498  0.261  0.064         0.005  0.006   0.134 #> Item_8   0.029  0.019  0.490  0.155  0.560  0.341  0.075        -0.011   0.166 #> Item_9   0.389  0.035  0.534  0.827  0.072  0.029  0.097  0.280          0.093 #> Item_10 23.809 50.189 75.667 44.656 59.644 40.070 45.056 68.776 21.841         #> Item_11  0.009  0.716  0.194  0.626  0.034  0.175  0.028  0.385  0.126   1.843 #> Item_12  0.753  0.236  3.918  0.095  1.109  0.582  0.818  1.181  5.494   0.011 #> Item_13  1.267  4.570  0.152  0.017  0.396  2.507  3.411  0.105  2.038   3.111 #> Item_14  7.361  0.214  0.172  0.934  1.965  4.761  4.570  0.319  3.784   1.714 #> Item_15  0.081  0.605  1.939  0.315  0.397  0.037  0.590  0.408  0.605   0.871 #> Item_16  1.749  0.256  2.779  0.965  1.745  0.134  2.493  0.001  3.477   0.281 #> Item_17  3.492  0.001  0.804  0.708  0.094  2.145  3.168  6.440  0.076   6.330 #> Item_18  1.296  0.205  0.068  0.911  0.003  0.029  0.301  0.309  0.158   0.447 #> Item_19  1.950  1.095  0.940  1.227  3.901  2.358  0.879  2.427  1.078   0.912 #> Item_20  0.821  1.556  0.836  0.291  0.071  0.862  1.370  0.069  6.617   0.072 #> Item_21  3.887  1.725  3.272  1.120  1.616  0.749  1.266  0.857  0.744   4.508 #> Item_22  2.670  0.247  0.016  4.552  0.345  0.736  0.650  0.010  0.030   1.904 #> Item_23  1.723  2.043  0.011  0.415  0.958  0.032  0.670  0.042  0.005   3.678 #> Item_24  6.039  2.418  3.100  6.560  2.357  5.733  2.198  2.200  4.635   7.501 #> Item_25  0.562  0.795  0.373  4.838  1.043  3.118  0.468  1.310  0.631  11.477 #> Item_26  4.256  1.169  0.889  0.700  1.184  0.633  3.494  1.488  3.177  20.873 #> Item_27  0.025  0.170  0.067  0.374  2.965  0.050  0.179  0.187  2.212  30.192 #> Item_28  2.586  7.102  3.183  2.042  2.136  2.200  2.730  3.809  2.120  13.578 #> Item_29  1.392  0.557  1.223  0.458  0.710  1.588  2.200  0.723  3.080  11.310 #> Item_30  0.831  1.556  1.214  0.302  0.109  0.449  0.573  0.340  0.424  20.892 #>         Item_11 Item_12 Item_13 Item_14 Item_15 Item_16 Item_17 Item_18 Item_19 #> Item_1    0.002  -0.017  -0.023  -0.054  -0.006  -0.026  -0.037  -0.023  -0.028 #> Item_2   -0.017  -0.010  -0.043  -0.009  -0.016  -0.010   0.000  -0.009   0.021 #> Item_3    0.009  -0.040   0.008  -0.008   0.028  -0.033  -0.018  -0.005  -0.019 #> Item_4   -0.016  -0.006  -0.003  -0.019  -0.011  -0.020  -0.017   0.019   0.022 #> Item_5   -0.004  -0.021  -0.013  -0.028  -0.013  -0.026   0.006  -0.001   0.040 #> Item_6    0.008  -0.015  -0.032  -0.044   0.004   0.007  -0.029  -0.003   0.031 #> Item_7    0.003   0.018  -0.037  -0.043  -0.015  -0.032  -0.036   0.011   0.019 #> Item_8    0.012  -0.022   0.006  -0.011   0.013   0.001  -0.051  -0.011   0.031 #> Item_9    0.007  -0.047  -0.029  -0.039  -0.016  -0.037   0.006   0.008   0.021 #> Item_10   0.027   0.002   0.035  -0.026   0.019   0.011  -0.050   0.013  -0.019 #> Item_11          -0.022   0.022  -0.006   0.009  -0.009  -0.027   0.006  -0.019 #> Item_12   1.214          -0.008  -0.027   0.011  -0.003  -0.014  -0.028  -0.020 #> Item_13   1.222   0.141          -0.013   0.035   0.017  -0.008  -0.027  -0.023 #> Item_14   0.096   1.802   0.404          -0.014   0.018  -0.013  -0.038  -0.042 #> Item_15   0.208   0.293   3.129   0.460           0.021  -0.011  -0.026   0.029 #> Item_16   0.208   0.018   0.759   0.815   1.060          -0.007  -0.003  -0.019 #> Item_17   1.773   0.461   0.180   0.392   0.290   0.140           0.005  -0.023 #> Item_18   0.100   1.944   1.860   3.653   1.691   0.020   0.064          -0.033 #> Item_19   0.913   1.015   1.284   4.468   2.033   0.859   1.304   2.695         #> Item_20   1.446   0.039   0.045   2.772   4.411   0.072   0.042   3.259   0.949 #> Item_21   0.747   0.875   1.773   1.730   0.759   1.420   0.979   1.137   5.069 #> Item_22   0.717   0.201   0.020   0.388   5.866   0.030   0.071   1.091   1.009 #> Item_23   8.564   1.754   4.656   0.443   1.035   0.005   0.173   1.152   0.997 #> Item_24   3.006   2.617   2.265   2.175   2.826   2.329   2.261   4.236   6.280 #> Item_25   0.480   0.827   0.946   0.373   0.576   1.593   2.431   1.596   1.146 #> Item_26   1.356   0.825   1.879   2.200   0.954   1.012   5.500   4.288   1.332 #> Item_27   0.144   1.132   0.112   0.783   0.837   1.936   4.920   3.868   1.314 #> Item_28   2.097   4.981   2.166   2.329   2.583   3.338   2.228   2.049   3.566 #> Item_29   0.736   0.533   1.869   2.544   2.516   1.394  10.093   0.484   5.562 #> Item_30   0.221   0.086   5.871   2.007   0.460   0.201   5.445   2.127   0.862 #>         Item_20 Item_21 Item_22 Item_23 Item_24 Item_25 Item_26 Item_27 Item_28 #> Item_1   -0.018   0.039  -0.033  -0.026   0.049   0.015   0.041   0.003  -0.032 #> Item_2   -0.025  -0.026   0.010   0.029   0.031   0.018   0.022  -0.008   0.053 #> Item_3   -0.018  -0.036   0.003   0.002   0.035   0.012   0.019   0.005  -0.036 #> Item_4   -0.011   0.021   0.043   0.013   0.051  -0.044   0.017   0.012  -0.029 #> Item_5   -0.005  -0.025   0.012  -0.020   0.031  -0.020   0.022  -0.034   0.029 #> Item_6    0.019  -0.017  -0.017   0.004   0.048   0.035  -0.016  -0.004   0.030 #> Item_7   -0.023   0.023  -0.016  -0.016   0.030   0.014  -0.037  -0.008   0.033 #> Item_8    0.005  -0.019   0.002   0.004   0.030  -0.023  -0.024   0.009  -0.039 #> Item_9   -0.051  -0.017  -0.003  -0.001   0.043  -0.016  -0.036   0.030   0.029 #> Item_10  -0.005   0.042   0.028   0.038   0.055   0.068   0.091   0.110   0.074 #> Item_11   0.024  -0.017  -0.017   0.059   0.035  -0.014   0.023   0.008   0.029 #> Item_12  -0.004  -0.019   0.009   0.026  -0.032   0.018   0.018   0.021  -0.045 #> Item_13  -0.004  -0.027  -0.003   0.043  -0.030  -0.019  -0.027   0.007  -0.029 #> Item_14  -0.033  -0.026  -0.012  -0.013   0.029  -0.012  -0.030  -0.018  -0.031 #> Item_15   0.042  -0.017   0.048   0.020  -0.034   0.015  -0.020   0.018  -0.032 #> Item_16   0.005  -0.024   0.003   0.001   0.031   0.025   0.020  -0.028  -0.037 #> Item_17  -0.004   0.020   0.005  -0.008  -0.030  -0.031  -0.047  -0.044  -0.030 #> Item_18  -0.036   0.021   0.021  -0.021   0.041  -0.025  -0.041  -0.039  -0.029 #> Item_19   0.019  -0.045   0.020   0.020  -0.050   0.021  -0.023  -0.023  -0.038 #> Item_20           0.021   0.029   0.011  -0.045  -0.015  -0.019  -0.026  -0.036 #> Item_21   1.097          -0.018   0.022   0.041   0.031  -0.023   0.027   0.041 #> Item_22   2.114   0.778           0.023   0.046   0.035   0.016   0.005  -0.033 #> Item_23   0.304   1.176   1.318           0.036  -0.019   0.022  -0.003   0.037 #> Item_24   5.068   4.269   5.374   3.166           0.034   0.050  -0.030  -0.047 #> Item_25   0.569   2.467   3.060   0.871   2.822           0.019   0.020  -0.039 #> Item_26   0.944   1.268   0.663   1.248   6.316   0.862           0.032   0.036 #> Item_27   1.693   1.795   0.068   0.021   2.264   0.969   2.522          -0.033 #> Item_28   3.193   4.110   2.716   3.385   5.434   3.775   3.228   2.749         #> Item_29   0.841   1.320   2.280   2.795   4.367   1.522   2.260   5.717   4.057 #> Item_30   6.126   0.904   0.633   3.421   3.815   0.664   1.371   0.140   3.142 #>         Item_29 Item_30 #> Item_1   -0.024  -0.018 #> Item_2   -0.015   0.025 #> Item_3    0.022   0.022 #> Item_4    0.014  -0.011 #> Item_5    0.017   0.007 #> Item_6   -0.025  -0.013 #> Item_7   -0.030  -0.015 #> Item_8   -0.017  -0.012 #> Item_9   -0.035  -0.013 #> Item_10   0.067   0.091 #> Item_11  -0.017  -0.009 #> Item_12  -0.015  -0.006 #> Item_13  -0.027  -0.048 #> Item_14  -0.032  -0.028 #> Item_15  -0.032   0.014 #> Item_16  -0.024  -0.009 #> Item_17  -0.064  -0.047 #> Item_18  -0.014  -0.029 #> Item_19  -0.047  -0.019 #> Item_20  -0.018  -0.050 #> Item_21  -0.023  -0.019 #> Item_22  -0.030   0.016 #> Item_23  -0.033   0.037 #> Item_24  -0.042  -0.039 #> Item_25  -0.025   0.016 #> Item_26  -0.030   0.023 #> Item_27  -0.048   0.007 #> Item_28  -0.040  -0.035 #> Item_29          -0.029 #> Item_30   2.120          # EAP estimates fscores(mltm) |> head() #>           theta1     theta2 #> [1,] -2.00196078 -0.4814752 #> [2,]  1.13844928  0.3697978 #> [3,]  0.14931661  1.7928628 #> [4,] -1.30231356 -0.2349522 #> [5,] -0.09142943  1.4551918 #> [6,]  1.47204612  1.1222933  # }"},{"path":"https://philchalmers.github.io/mirt/reference/mirt.model.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify model information — mirt.model","title":"Specify model information — mirt.model","text":"mirt.model function scans/reads user input specify confirmatory model. Item locations must used specifications itemnames argument supplied. called implicitly estimation functions string passed model argument.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirt.model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify model information — mirt.model","text":"","code":"mirt.model(   input = NULL,   itemnames = NULL,   file = \"\",   COV = NULL,   quiet = TRUE,   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/mirt.model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify model information — mirt.model","text":"input input writing model syntax. Can either string declaration class character -called Q-matrix class matrix specifies model either integer logical values. Q-matrix method chosen covariances terms can specified COV input itemnames character vector factor indicating item names. data.frame matrix object supplied names extracted using colnames(itemnames). Supplying input allows syntax specified raw item names rather item locations file input specifying external file declares input. COV symmetric, logical matrix used declare covariance terms estimated quiet logical argument passed scan() suppress console read message ... additional arguments scan()","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirt.model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify model information — mirt.model","text":"Returns model specification object used   mirt, bfactor, multipleGroup,   mixedmirt","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirt.model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify model information — mirt.model","text":"Factors first named specify numerical items affect (.e., slope equal 0), separated either commas - indicate range items. Products factors may specified enclosing left hand term within brackets. finish declaration model simply enter blank line carriage return (.e., 'enter' 'return' key), instead read input version model syntax. associated slopes throughout package label coefficients a1, a2, ..., ak, associated number assigned according respective order defined factors. example, syntax \"G = 1-10        F = 1-5        = 6-10\" G factor assigned slopes a1 item, F assigned slopes a2, assigned slopes a3. principle applies bfactor function whereby slopes automatically included specific factors general factor structure assigned. optional keyword specifying correlation relationships factors called COV, non-linear factor products can included enclosing product combination left hand side declaration (e.g., (F1*F1) create quadratic factor F1). keywords CONSTRAIN, CONSTRAINB, PRIOR, FIXED, FREE, START, UBOUND, LBOUND can applied specific sub-groups multiple-group models included square brackets = sign, groups separated commas. example, apply within-group equality constraints group called \"male\", specifying: CONSTRAIN [male] = (1-5, a1) appropriate, specifying constraints sub-groups \"male\" \"female\" appear CONSTRAIN [male, female] = (1-5, a1) groups multi-group model, within-group equality constraints appear. Therefore, bracketed group specifications useful modifying priors, starting values, /within group equality constraints, specifications sub-group may differ. Additionally, use negations can used omit specific groups constraint specifications prefixing string - operator, following applies -group  constraints groups except \"Group2\" \"Group3\": CONSTRAINB [-Group2, -Group3] = (1-5, a1) Finally, keyword GROUP can used specify group-level hyper-parameter terms, means variance default Gaussian distribution. example, set starting value variance parameter (COV_11) 1.5: START = (GROUP, COV_11, 1.5) COV Specify relationship latent factors.   Estimating correlation factors declared joining two   factors asterisk (e.g., F1*F2), asterisk three factors   estimate possible correlations (e.g., F1*F2*F3). Specifications factor   (e.g., F1*F1) free variance said factor instead MEAN comma separated list specifying latent factor means freely estimate.   E.g., MEAN = F1, F2 free latent means factors F1 F2 CONSTRAIN bracketed, comma separated list specifying equality constrains items.   input format   CONSTRAIN = (items, ..., parameterName(s)),   (items, ..., parameterName). example, single group 10-item dichotomous tests, using default 2PL model,   first last 5 item slopes (a1) can constrained equal using   CONSTRAIN = (1-5, a1), (6-10, a1), combination   CONSTRAIN = (1-3,4,5,a1), (6,7,8-10,a1). constraining parameters equal across items different parameter names,   balanced bracketed vector must supplied. E.g., setting first slope item 1 equal   second slope item 3 CONSTRAIN = (1, 3, a1, a2) CONSTRAINB bracketed, comma separate list specifying equality constrains groups.   input format CONSTRAINB = (items, ..., parameterName),   (items, ..., parameterName). example, two group 10-item dichotomous tests, using default 2PL model, first   5 item slopes (a1) can constrained equal across groups using   CONSTRAINB = (1-5, a1), combination CONSTRAINB = (1-3,4,5,a1) PRIOR bracketed, comma separate list specifying prior parameter distributions.   input format   PRIOR = (items, ..., parameterName, priorType, val1, val2),   (items, ..., parameterName, priorType, val1, val2).   example, single group 10-item dichotomous tests, using default 2PL model,   defining normal prior N(0,2) first 5 item intercepts (d) can defined   PRIOR = (1-5, d, norm, 0, 2) Currently supported priors form: (items, norm, mean, sd)   normal/Gaussian, (items, lnorm, log_mean, log_sd) log-normal,   (items, beta, alpha, beta) beta, (items, expbeta, alpha, beta)   beta distribution applying   function plogis input value (note, specifically applying beta   prior lower-bound parameters 3/4PL models) LBOUND bracketed, comma separate list specifying lower bounds estimated   parameters (used optimizers L-BFGS-B nlminb).   input format LBOUND = (items, ..., parameterName, value),   (items, ..., parameterName, value). example, single group 10-item dichotomous tests, using 3PL model   setting lower bounds 'g' parameters first 5 items 0.2 accomplished   LBOUND = (1-5, g, 0.2) UBOUND LBOUND, specifying upper bounds estimated parameters START bracketed, comma separate list specifying starting values individual parameters.   input form (items, ..., parameterName, value). instance, setting 10th   12th 15th item slope parameters (a1) 1.0 specified START = (10, 12-15, a1, 1.0) hands control starting values pass argument pars = 'values'   whatever estimation function used FIXED bracketed, comma separate list specifying parameters fixed   starting values (.e., freely estimated).   input form (items, ..., parameterName). instance, fixing 10th   12th 15th item slope parameters (a1) accomplished FIXED = (10, 12-15, a1) hands control estimated values pass argument pars = 'values'   whatever estimation function used FREE Equivalent FIXED input, except parameters freely estimated instead   fixed starting value NEXPLORE Number exploratory factors extract. Usually required   passing numeric value model argument estimation function   generate exploratory factor analysis model, however different start values,   priors, lower upper bounds, etc, desired input can used","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirt.model.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Specify model information — mirt.model","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirt.model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Specify model information — mirt.model","text":"Phil Chalmers rphilip.chalmers@gmail.com Alexander Robitzsch","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirt.model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify model information — mirt.model","text":"","code":"# \\donttest{  # interactively through the console (not run) #model <- mirt.model() #  F1 = 1,2,3,4-10 #  F2 = 10-20 #  (F1*F2) = 1,2,3,4-10 #  COV = F1*F2   # Or alternatively with a string input s <- 'F1 = 1,2,3,4-10       F2 = 10-20       (F1*F2) = 1,2,3,4-10       COV = F1*F2' model <- mirt.model(s)  # strings can also be passed to the estimation functions directly, #   which silently calls mirt.model(). E.g., using the string above: # mod <- mirt(data, s)   # Q-matrix specification Q <- matrix(c(1,1,1,0,0,0,0,0,0,1,1,1), ncol=2, dimnames = list(NULL, c('Factor1', 'Factor2'))) COV <- matrix(c(FALSE, TRUE, TRUE, FALSE), 2) model <- mirt.model(Q, COV=COV)  ## constrain various items slopes and all intercepts in single group model to be equal, #   and use a log-normal prior for all the slopes s <- 'F = 1-10       CONSTRAIN = (1-3, 5, 6, a1), (1-10, d)       PRIOR = (1-10, a1, lnorm, .2, .2)' model <- mirt.model(s)   ## constrain various items slopes and intercepts across groups for use in multipleGroup(), #  and constrain first two slopes within 'group1' to be equal s <- 'F = 1-10       CONSTRAIN = (1-2, a1)       CONSTRAINB = (1-3, 5, 6, a1), (1-10, d)' model <- mirt.model(s)   ## specify model using raw item names data(data.read, package = 'sirt') dat <- data.read  # syntax with variable names mirtsyn2 <- \"        F1 = A1,B2,B3,C4        F2 = A1-A4,C2,C4        MEAN = F1        COV = F1*F1, F1*F2        CONSTRAIN=(A2-A4,a2),(A3,C2,d)        PRIOR = (C3,A2-A4,a2,lnorm, .2, .2),(B3,d,norm,0,.0001)\" # create a mirt model mirtmodel <- mirt.model(mirtsyn2, itemnames=dat) # or equivalently: # mirtmodel <- mirt.model(mirtsyn2, itemnames=colnames(dat))  # mod <- mirt(dat , mirtmodel)  # using sprintf() to functionally fill in information (useful for long tests # or more complex specifications) nitems <- 100 s <- sprintf('F = 1-%i       CONSTRAIN = (%s, a1)       CONSTRAINB = (%s, a1), (1-%i, d)',       nitems, \"1,2,4,50,100\",       paste0(1:45, collapse=','),       nitems) cat(s) #> F = 1-100 #>       CONSTRAIN = (1,2,4,50,100, a1) #>       CONSTRAINB = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45, a1), (1-100, d) model <- mirt.model(s)      # }"},{"path":"https://philchalmers.github.io/mirt/reference/mirtCluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a parallel cluster object to be used in internal functions — mirtCluster","title":"Define a parallel cluster object to be used in internal functions — mirtCluster","text":"function defines object placed relevant internal environment defined mirt. Internal functions calcLogLik, fscores, etc, utilize object automatically capitalize parallel processing architecture. object defined call parallel::makeCluster(). Note defining parallel objects (simulation designs, example) recommended define mirtCluster.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirtCluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a parallel cluster object to be used in internal functions — mirtCluster","text":"","code":"mirtCluster(spec, omp_threads, remove = FALSE, ...)"},{"path":"https://philchalmers.github.io/mirt/reference/mirtCluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a parallel cluster object to be used in internal functions — mirtCluster","text":"spec input passed parallel::makeCluster(). input given maximum number available local cores minus 1 used. Setting NULL skip new definition (allows omp_threads used independently) omp_threads number OpenMP threads use (currently applies E-step computations ). used argument input missing remove logical; remove previously defined mirtCluster()? ... additional arguments pass parallel::makeCluster","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirtCluster.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Define a parallel cluster object to be used in internal functions — mirtCluster","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirtCluster.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Define a parallel cluster object to be used in internal functions — mirtCluster","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mirtCluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define a parallel cluster object to be used in internal functions — mirtCluster","text":"","code":"if (FALSE) { # \\dontrun{ if(interactive()){   # use all available cores   mirtCluster()   mirtCluster(remove = TRUE)    # make 4 cores available for parallel computing   mirtCluster(4)   mirtCluster(remove = TRUE)    # create 3 core architecture in R, and 4 thread architecture with OpenMP   mirtCluster(spec = 3, omp_threads = 4)    # leave previous multicore objects, but change omp_threads   mirtCluster(spec = NULL, omp_threads = 2) }  } # }"},{"path":"https://philchalmers.github.io/mirt/reference/mixedmirt.html","id":null,"dir":"Reference","previous_headings":"","what":"Mixed effects modeling for MIRT models — mixedmirt","title":"Mixed effects modeling for MIRT models — mixedmirt","text":"mixedmirt fits MIRT models using FIML estimation dichotomous polytomous IRT models conditional fixed random effect person item level covariates. can also understood 'explanatory IRT' fixed effects modeled, multilevel/mixed IRT random fixed effects included. method uses MH-RM algorithm exclusively. Additionally, computation log-likelihood can sped using parallel estimation via mirtCluster.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mixedmirt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mixed effects modeling for MIRT models — mixedmirt","text":"","code":"mixedmirt(   data,   covdata = NULL,   model = 1,   fixed = ~1,   random = NULL,   itemtype = \"Rasch\",   lr.fixed = ~1,   lr.random = NULL,   itemdesign = NULL,   constrain = NULL,   pars = NULL,   return.design = FALSE,   SE = TRUE,   internal_constraints = TRUE,   technical = list(SEtol = 1e-04),   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/mixedmirt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mixed effects modeling for MIRT models — mixedmirt","text":"data matrix data.frame consists numerically ordered data, organized form integers,  missing data coded NA covdata data.frame consists nrow(data) K 'person level' fixed random predictors. missing data present object observations covdata data removed row-wise via rowSums(.na(covdata)) > 0 model object returned , string passed , mirt.model() declare IRT model estimated. See mirt.model mirt detail fixed right sided R formula specifying fixed effect (aka 'explanatory') predictors covdata itemdesign. estimate intercepts item keyword items reserved automatically added itemdesign input. polytomous items model items argument valid since intercept parameters freely estimated identified parameterizations found mirt, first column fixed design matrix (commonly intercept reference group) omitted random right sided formula list formulas containing crossed random effects form v1 + ... v_n | G, G grouping variable v_n random numeric predictors within group. intercept value specified default correlations v's G estimated, can suppressed including ~ -1 + ... 0 constant. G may contain interaction terms, group:items include cross person-level interactions effects itemtype itemtype mirt, except fixed random inputs used support following item types: c('PC2PL', 'PC3PL', '2PLNRM', '3PLNRM', '3PLuNRM', '4PLNRM') lr.fixed R formula (list formulas) specify regression effects latent variables variables covdata. used construct models -called 'latent regression model' explain person-level ability/trait differences. named list formulas supplied (names correspond latent trait names model) specific regression effects can estimated factor. Supplying single formula estimate regression parameters latent traits default. lr.random list random effect terms modeling variability latent trait scores, syntax uses style random argument. Useful building -called 'multilevel IRT' models non-Rasch (multilevel Rasch models technically require can built using fixed random inputs alone) itemdesign data.frame object used create design matrix items, nrow(itemdesign) == nitems number columns equal number fixed effect predictors (.e., item intercepts). default items variable reserved modeling item intercept parameters constrain list indicating parameter equality constrains. See mirt detail pars used parameter starting values. See mirt detail return.design logical; return design matrices (potentially) reassigned? SE logical; compute standard errors approximating information matrix using MHRM algorithm? Default TRUE internal_constraints logical; use internally defined constraints constraining effects across persons items? Default TRUE. Setting FALSE runs risk -identification technical technical list passed MH-RM estimation engine, SEtol default increased .0001. Additionally, argument RANDSTART available indicate iteration (burn-stage) additional random effect variables begin approximated (.e., elements lr.random random). default RANDSTART start iteration 100, random effects included default number burn-iterations increased 150 200. See mirt details ... additional arguments passed MH-RM estimation engine. See mirt details examples","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mixedmirt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mixed effects modeling for MIRT models — mixedmirt","text":"function returns object class MixedClass   (MixedClass-class).","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mixedmirt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mixed effects modeling for MIRT models — mixedmirt","text":"dichotomous response models, mixedmirt follows general form $$P(x = 1|\\theta, \\psi) = g + \\frac{(u - g)}{1 + exp(-1 * [\\theta +  X \\beta + Z \\delta])}$$ X design matrix associated \\(\\beta\\) fixed effect intercept coefficients,  Z design matrix associated \\(\\delta\\) random effects intercepts.  simplicity easier interpretation, unique item intercept values typically found  \\(X \\beta\\)  extracted reassigned within mirt's 'intercept' parameters (e.g., 'd').  observe design matrices structured prior reassignment estimation pass  argument return.design = TRUE. Polytomous IRT models follow similar format except item intercepts automatically  estimated internally, rendering items argument fixed formula redundant  therefore must omitted specification. mixture dichotomous  polytomous items intercepts dichotomous models also estimated consistency. decomposition \\(\\theta\\) parameters also possible form  latent regression multilevel IRT models using lr.fixed lr.random  inputs. effects decompose \\(\\theta\\) $$\\theta = V \\Gamma + W \\zeta + \\epsilon$$ V W fixed random effects design matrices associated coefficients. simulate expected posteriori predictions random effect terms  use randef function.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mixedmirt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mixed effects modeling for MIRT models — mixedmirt","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06 Chalmers, R. P. (2015). Extended Mixed-Effects Item Response Models MH-RM Algorithm. Journal Educational Measurement, 52, 200-222. doi:10.1111/jedm.12072","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/mixedmirt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Mixed effects modeling for MIRT models — mixedmirt","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mixedmirt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mixed effects modeling for MIRT models — mixedmirt","text":"","code":"# \\donttest{  # make some data set.seed(1234) N <- 750 a <- matrix(rlnorm(10,.3,1),10,1) d <- matrix(rnorm(10), 10) Theta <- matrix(sort(rnorm(N))) pseudoIQ <- Theta * 5 + 100  + rnorm(N, 0 , 5) pseudoIQ <- (pseudoIQ - mean(pseudoIQ))/10  #rescale variable for numerical stability group <- factor(rep(c('G1','G2','G3'), each = N/3)) data <- simdata(a,d,N, itemtype = rep('2PL',10), Theta=Theta) covdata <- data.frame(group, pseudoIQ)  itemstats(data) #> $overall #>    N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  750            4.655          2.346 0.166 0.133 0.671     1.345 #>  #> $itemstats #>           N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item_1  750 2 0.363 0.481   0.368         0.172       0.678 #> Item_2  750 2 0.335 0.472   0.631         0.485       0.617 #> Item_3  750 2 0.428 0.495   0.711         0.580       0.594 #> Item_4  750 2 0.512 0.500   0.234         0.021       0.708 #> Item_5  750 2 0.628 0.484   0.638         0.490       0.615 #> Item_6  750 2 0.472 0.500   0.669         0.523       0.607 #> Item_7  750 2 0.385 0.487   0.471         0.286       0.657 #> Item_8  750 2 0.301 0.459   0.483         0.312       0.651 #> Item_9  750 2 0.319 0.466   0.481         0.307       0.652 #> Item_10 750 2 0.912 0.283   0.295         0.180       0.670 #>  #> $proportions #>             0     1 #> Item_1  0.637 0.363 #> Item_2  0.665 0.335 #> Item_3  0.572 0.428 #> Item_4  0.488 0.512 #> Item_5  0.372 0.628 #> Item_6  0.528 0.472 #> Item_7  0.615 0.385 #> Item_8  0.699 0.301 #> Item_9  0.681 0.319 #> Item_10 0.088 0.912 #>   # use parallel computing if(interactive()) mirtCluster()  # specify IRT model model <- 'Theta = 1-10'  # model with no person predictors mod0 <- mirt(data, model, itemtype = 'Rasch') #>   # group as a fixed effect predictor (aka, uniform dif) mod1 <- mixedmirt(data, covdata, model, fixed = ~ 0 + group + items) #> , Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.1804, Max-Change = 0.1582, Max-Change = 0.1359, Max-Change = 0.1172, Max-Change = 0.1000, Max-Change = 0.0848, Max-Change = 0.0698, Max-Change = 0.0570, Max-Change = 0.0459, Max-Change = 0.0370, Max-Change = 0.0293, Max-Change = 0.0246, Max-Change = 0.0201, Max-Change = 0.0183, Max-Change = 0.0156, Max-Change = 0.0103, Max-Change = 0.0106, Max-Change = 0.0098, Max-Change = 0.0093, Max-Change = 0.0055, Max-Change = 0.0062, Max-Change = 0.0108, Max-Change = 0.0065, Max-Change = 0.0076, Max-Change = 0.0137, Max-Change = 0.0067, Max-Change = 0.0036, Max-Change = 0.0023, Max-Change = 0.0095, Max-Change = 0.0108, Max-Change = 0.0141, Max-Change = 0.0083, Max-Change = 0.0064, Max-Change = 0.0056, Max-Change = 0.0151, Max-Change = 0.0066, Max-Change = 0.0049, Max-Change = 0.0097, Max-Change = 0.0052, Max-Change = 0.0064, Max-Change = 0.0080, Max-Change = 0.0028, Max-Change = 0.0076, Max-Change = 0.0055, Max-Change = 0.0063, Max-Change = 0.0047, Max-Change = 0.0077, Max-Change = 0.0048, Max-Change = 0.0053, Max-Change = 0.0095, Max-Change = 0.0085, Max-Change = 0.0055, Max-Change = 0.0095, Max-Change = 0.0115, Max-Change = 0.0062, Max-Change = 0.0076, Max-Change = 0.0043, Max-Change = 0.0053, Max-Change = 0.0035, Max-Change = 0.0064, Max-Change = 0.0078, Max-Change = 0.0051, Max-Change = 0.0046, Max-Change = 0.0057, Max-Change = 0.0020, Max-Change = 0.0050, Max-Change = 0.0058, Max-Change = 0.0027, Max-Change = 0.0093, Max-Change = 0.0032, Max-Change = 0.0042, Max-Change = 0.0052, Max-Change = 0.0036, Max-Change = 0.0018, Max-Change = 0.0045, Max-Change = 0.0024, Max-Change = 0.0042, Max-Change = 0.0082, Max-Change = 0.0086, Max-Change = 0.0041, Max-Change = 0.0053, Max-Change = 0.0045, Max-Change = 0.0170, Max-Change = 0.0099, Max-Change = 0.0101, Max-Change = 0.0036, Max-Change = 0.0036, Max-Change = 0.0038, Max-Change = 0.0076, Max-Change = 0.0062, Max-Change = 0.0065, Max-Change = 0.0065, Max-Change = 0.0056, Max-Change = 0.0076, Max-Change = 0.0084, Max-Change = 0.0055, Max-Change = 0.0083, Max-Change = 0.0023, Max-Change = 0.0065, Max-Change = 0.0067, Max-Change = 0.0066, Max-Change = 0.0082, Max-Change = 0.0057, Max-Change = 0.0032, Max-Change = 0.0022, Max-Change = 0.0035, Max-Change = 0.0064, Max-Change = 0.0047, Max-Change = 0.0093, Max-Change = 0.0073, Max-Change = 0.0025, Max-Change = 0.0040, Max-Change = 0.0090, Max-Change = 0.0089, Max-Change = 0.0055, Max-Change = 0.0073, Max-Change = 0.0068, Max-Change = 0.0070, Max-Change = 0.0012, Max-Change = 0.0116, Max-Change = 0.0067, Max-Change = 0.0072, Max-Change = 0.0057, Max-Change = 0.0018, Max-Change = 0.0095, Max-Change = 0.0058, Max-Change = 0.0035, Max-Change = 0.0024, Max-Change = 0.0059, Max-Change = 0.0059, Max-Change = 0.0058, Max-Change = 0.0080, Max-Change = 0.0033, Max-Change = 0.0074, Max-Change = 0.0073, Max-Change = 0.0078, Max-Change = 0.0066, Max-Change = 0.0064, Max-Change = 0.0035, Max-Change = 0.0048, Max-Change = 0.0064, Max-Change = 0.0050, Max-Change = 0.0039, Max-Change = 0.0038, Max-Change = 0.0065, Max-Change = 0.0068, Max-Change = 0.0092, Max-Change = 0.0043, Max-Change = 0.0068, Max-Change = 0.0037, Max-Change = 0.0050, Max-Change = 0.0054, Max-Change = 0.0032, Max-Change = 0.0052, Max-Change = 0.0028, Max-Change = 0.0067, Max-Change = 0.0052, Max-Change = 0.0035, Max-Change = 0.0057, Max-Change = 0.0049, Max-Change = 0.0056, Max-Change = 0.0030, Max-Change = 0.0007, Max-Change = 0.0016, Max-Change = 0.0075, Max-Change = 0.0040, Max-Change = 0.0058, Max-Change = 0.0023, Max-Change = 0.0035, Max-Change = 0.0011, Max-Change = 0.0046, Max-Change = 0.0061, Max-Change = 0.0018, Max-Change = 0.0095, Max-Change = 0.0076, Max-Change = 0.0073, Max-Change = 0.0022, Max-Change = 0.0035, Max-Change = 0.0048, Max-Change = 0.0053, Max-Change = 0.0102, Max-Change = 0.0054, Max-Change = 0.0048, Max-Change = 0.0028, Max-Change = 0.0055, Max-Change = 0.0081, Max-Change = 0.0010, Max-Change = 0.0050, Max-Change = 0.0072, Max-Change = 0.0047, Max-Change = 0.0100, Max-Change = 0.0074, Max-Change = 0.0054, Max-Change = 0.0040, Max-Change = 0.0051, Max-Change = 0.0031, Max-Change = 0.0062, Max-Change = 0.0077, Max-Change = 0.0071, Max-Change = 0.0033, Max-Change = 0.0062, Max-Change = 0.0026, Max-Change = 0.0040, Max-Change = 0.0086, Max-Change = 0.0046, Max-Change = 0.0067, Max-Change = 0.0048, Max-Change = 0.0070, Max-Change = 0.0062, Max-Change = 0.0078, Max-Change = 0.0077, Max-Change = 0.0041, Max-Change = 0.0018, Max-Change = 0.0074, Max-Change = 0.0023, Max-Change = 0.0036, Max-Change = 0.0037, Max-Change = 0.0045, Max-Change = 0.0059, Max-Change = 0.0057, Max-Change = 0.0042, Max-Change = 0.0059, Max-Change = 0.0054, Max-Change = 0.0096, Max-Change = 0.0061, Max-Change = 0.0041, Max-Change = 0.0048, Max-Change = 0.0029, Max-Change = 0.0087, Max-Change = 0.0017, Max-Change = 0.0022, Max-Change = 0.0036, Max-Change = 0.0031, Max-Change = 0.0031, Max-Change = 0.0025, Max-Change = 0.0085, Max-Change = 0.0045, Max-Change = 0.0064, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0048, gam = 0.1057, Max-Change = 0.0032, gam = 0.0780, Max-Change = 0.0010, gam = 0.0629, Max-Change = 0.0022, gam = 0.0532, Max-Change = 0.0012, gam = 0.0464, Max-Change = 0.0022, gam = 0.0413, Max-Change = 0.0008, gam = 0.0374, Max-Change = 0.0012, gam = 0.0342, Max-Change = 0.0016, gam = 0.0316, Max-Change = 0.0006, gam = 0.0294, Max-Change = 0.0006, gam = 0.0276, Max-Change = 0.0006 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood... anova(mod0, mod1) #>           AIC    SABIC       HQ      BIC    logLik      X2 df p #> mod0 8799.543 8815.435 8819.126 8850.364 -4388.772              #> mod1 8111.326 8130.107 8134.469 8171.387 -4042.663 692.217  2 0 summary(mod1) #>  #> Call: #> mixedmirt(data = data, covdata = covdata, model = model, fixed = ~0 +  #>     group + items) #>  #> -------------- #> FIXED EFFECTS: #>         Estimate Std.Error z.value #> groupG1   -1.858     0.100 -18.495 #> groupG2   -0.748     0.094  -7.979 #> groupG3    0.515     0.094   5.493 #>  #> -------------- #> RANDOM EFFECT COVARIANCE(S): #> Correlations on upper diagonal #>  #> $Theta #>       Theta #> Theta 0.118 #>  coef(mod1) #> $Item_1 #>         groupG1 groupG2 groupG3 a1  d  g  u #> par      -1.858  -0.748   0.515  1  0  0  1 #> CI_2.5   -2.055  -0.931   0.331 NA NA NA NA #> CI_97.5  -1.661  -0.564   0.699 NA NA NA NA #>  #> $Item_2 #>         groupG1 groupG2 groupG3 a1      d  g  u #> par      -1.858  -0.748   0.515  1 -0.152  0  1 #> CI_2.5   -2.055  -0.931   0.331 NA -0.388 NA NA #> CI_97.5  -1.661  -0.564   0.699 NA  0.084 NA NA #>  #> $Item_3 #>         groupG1 groupG2 groupG3 a1     d  g  u #> par      -1.858  -0.748   0.515  1 0.340  0  1 #> CI_2.5   -2.055  -0.931   0.331 NA 0.109 NA NA #> CI_97.5  -1.661  -0.564   0.699 NA 0.572 NA NA #>  #> $Item_4 #>         groupG1 groupG2 groupG3 a1     d  g  u #> par      -1.858  -0.748   0.515  1 0.763  0  1 #> CI_2.5   -2.055  -0.931   0.331 NA 0.532 NA NA #> CI_97.5  -1.661  -0.564   0.699 NA 0.994 NA NA #>  #> $Item_5 #>         groupG1 groupG2 groupG3 a1     d  g  u #> par      -1.858  -0.748   0.515  1 1.353  0  1 #> CI_2.5   -2.055  -0.931   0.331 NA 1.119 NA NA #> CI_97.5  -1.661  -0.564   0.699 NA 1.588 NA NA #>  #> $Item_6 #>         groupG1 groupG2 groupG3 a1     d  g  u #> par      -1.858  -0.748   0.515  1 0.563  0  1 #> CI_2.5   -2.055  -0.931   0.331 NA 0.332 NA NA #> CI_97.5  -1.661  -0.564   0.699 NA 0.793 NA NA #>  #> $Item_7 #>         groupG1 groupG2 groupG3 a1      d  g  u #> par      -1.858  -0.748   0.515  1  0.120  0  1 #> CI_2.5   -2.055  -0.931   0.331 NA -0.113 NA NA #> CI_97.5  -1.661  -0.564   0.699 NA  0.353 NA NA #>  #> $Item_8 #>         groupG1 groupG2 groupG3 a1      d  g  u #> par      -1.858  -0.748   0.515  1 -0.339  0  1 #> CI_2.5   -2.055  -0.931   0.331 NA -0.578 NA NA #> CI_97.5  -1.661  -0.564   0.699 NA -0.101 NA NA #>  #> $Item_9 #>         groupG1 groupG2 groupG3 a1      d  g  u #> par      -1.858  -0.748   0.515  1 -0.241  0  1 #> CI_2.5   -2.055  -0.931   0.331 NA -0.478 NA NA #> CI_97.5  -1.661  -0.564   0.699 NA -0.004 NA NA #>  #> $Item_10 #>         groupG1 groupG2 groupG3 a1     d  g  u #> par      -1.858  -0.748   0.515  1 3.432  0  1 #> CI_2.5   -2.055  -0.931   0.331 NA 3.117 NA NA #> CI_97.5  -1.661  -0.564   0.699 NA 3.747 NA NA #>  #> $GroupPars #>         MEAN_1 COV_11 #> par          0  0.118 #> CI_2.5      NA  0.072 #> CI_97.5     NA  0.164 #>   if (FALSE) { # \\dontrun{ # same model as above in lme4 wide <- data.frame(id=1:nrow(data),data,covdata) long <- reshape2::melt(wide, id.vars = c('id', 'group', 'pseudoIQ')) library(lme4) lmod0 <- glmer(value ~ 0 + variable + (1|id), long, family = binomial) lmod1 <- glmer(value ~ 0 + group + variable + (1|id), long, family = binomial) anova(lmod0, lmod1) } # }  # model using 2PL items instead of Rasch mod1b <- mixedmirt(data, covdata, model, fixed = ~ 0 + group + items, itemtype = '2PL') #> , Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.1860, Max-Change = 0.1696, Max-Change = 0.1434, Max-Change = 0.1281, Max-Change = 0.1024, Max-Change = 0.0980, Max-Change = 0.0816, Max-Change = 0.0806, Max-Change = 0.0636, Max-Change = 0.0644, Max-Change = 0.0457, Max-Change = 0.0484, Max-Change = 0.0573, Max-Change = 0.0544, Max-Change = 0.0444, Max-Change = 0.0289, Max-Change = 0.0242, Max-Change = 0.0313, Max-Change = 0.0332, Max-Change = 0.0317, Max-Change = 0.0343, Max-Change = 0.0348, Max-Change = 0.0514, Max-Change = 0.0715, Max-Change = 0.0273, Max-Change = 0.0443, Max-Change = 0.0254, Max-Change = 0.0261, Max-Change = 0.0364, Max-Change = 0.0200, Max-Change = 0.0392, Max-Change = 0.0491, Max-Change = 0.0365, Max-Change = 0.0491, Max-Change = 0.0339, Max-Change = 0.0376, Max-Change = 0.0239, Max-Change = 0.0464, Max-Change = 0.0513, Max-Change = 0.0378, Max-Change = 0.0793, Max-Change = 0.0370, Max-Change = 0.0447, Max-Change = 0.0359, Max-Change = 0.0696, Max-Change = 0.0790, Max-Change = 0.0264, Max-Change = 0.0346, Max-Change = 0.0233, Max-Change = 0.0334, Max-Change = 0.0345, Max-Change = 0.0441, Max-Change = 0.0441, Max-Change = 0.0380, Max-Change = 0.0255, Max-Change = 0.0391, Max-Change = 0.0394, Max-Change = 0.0293, Max-Change = 0.0720, Max-Change = 0.0462, Max-Change = 0.0417, Max-Change = 0.0285, Max-Change = 0.0245, Max-Change = 0.0603, Max-Change = 0.0343, Max-Change = 0.0166, Max-Change = 0.0561, Max-Change = 0.0314, Max-Change = 0.0257, Max-Change = 0.0314, Max-Change = 0.0342, Max-Change = 0.0598, Max-Change = 0.0402, Max-Change = 0.0349, Max-Change = 0.0471, Max-Change = 0.0189, Max-Change = 0.0324, Max-Change = 0.0257, Max-Change = 0.0750, Max-Change = 0.0510, Max-Change = 0.0721, Max-Change = 0.0339, Max-Change = 0.0547, Max-Change = 0.0469, Max-Change = 0.0607, Max-Change = 0.0375, Max-Change = 0.0417, Max-Change = 0.0378, Max-Change = 0.0610, Max-Change = 0.0517, Max-Change = 0.0244, Max-Change = 0.0349, Max-Change = 0.0239, Max-Change = 0.0503, Max-Change = 0.0232, Max-Change = 0.0854, Max-Change = 0.0282, Max-Change = 0.0397, Max-Change = 0.0406, Max-Change = 0.0820, Max-Change = 0.0267, Max-Change = 0.0839, Max-Change = 0.0307, Max-Change = 0.0237, Max-Change = 0.0285, Max-Change = 0.1084, Max-Change = 0.1160, Max-Change = 0.0390, Max-Change = 0.0355, Max-Change = 0.0703, Max-Change = 0.0391, Max-Change = 0.0954, Max-Change = 0.0553, Max-Change = 0.0308, Max-Change = 0.0652, Max-Change = 0.0169, Max-Change = 0.0664, Max-Change = 0.1173, Max-Change = 0.0311, Max-Change = 0.0509, Max-Change = 0.1200, Max-Change = 0.0904, Max-Change = 0.1736, Max-Change = 0.0696, Max-Change = 0.0348, Max-Change = 0.0707, Max-Change = 0.0487, Max-Change = 0.0574, Max-Change = 0.0342, Max-Change = 0.0850, Max-Change = 0.0477, Max-Change = 0.0656, Max-Change = 0.0731, Max-Change = 0.0842, Max-Change = 0.1089, Max-Change = 0.0266, Max-Change = 0.1092, Max-Change = 0.0731, Max-Change = 0.0200, Max-Change = 0.0487, Max-Change = 0.0573, Max-Change = 0.1227, Max-Change = 0.0633, Max-Change = 0.0499, Max-Change = 0.0307, Max-Change = 0.1556, Max-Change = 0.0620, Max-Change = 0.0445, Max-Change = 0.1713, Max-Change = 0.0844, Max-Change = 0.0719, Max-Change = 0.0258, Max-Change = 0.0742, Max-Change = 0.0565, Max-Change = 0.0339, Max-Change = 0.0182, Max-Change = 0.0373, Max-Change = 0.1227, Max-Change = 0.0404, Max-Change = 0.0894, Max-Change = 0.0172, Max-Change = 0.1133, Max-Change = 0.0502, Max-Change = 0.0338, Max-Change = 0.0758, Max-Change = 0.0635, Max-Change = 0.0280, Max-Change = 0.0781, Max-Change = 0.0398, Max-Change = 0.0805, Max-Change = 0.1266, Max-Change = 0.1815, Max-Change = 0.0498, Max-Change = 0.0387, Max-Change = 0.0311, Max-Change = 0.0463, Max-Change = 0.1127, Max-Change = 0.0519, Max-Change = 0.1120, Max-Change = 0.2000, Max-Change = 0.0178, Max-Change = 0.0509, Max-Change = 0.1411, Max-Change = 0.1258, Max-Change = 0.0486, Max-Change = 0.0713, Max-Change = 0.0751, Max-Change = 0.1150, Max-Change = 0.0370, Max-Change = 0.1355, Max-Change = 0.2000, Max-Change = 0.1107, Max-Change = 0.0404, Max-Change = 0.1141, Max-Change = 0.1374, Max-Change = 0.1567, Max-Change = 0.0502, Max-Change = 0.0305, Max-Change = 0.0899, Max-Change = 0.0245, Max-Change = 0.0828, Max-Change = 0.1181, Max-Change = 0.0241, Max-Change = 0.0989, Max-Change = 0.1326, Max-Change = 0.0390, Max-Change = 0.1871, Max-Change = 0.0252, Max-Change = 0.0234, Max-Change = 0.0791, Max-Change = 0.1058, Max-Change = 0.0712, Max-Change = 0.1591, Max-Change = 0.0433, Max-Change = 0.0432, Max-Change = 0.0488, Max-Change = 0.1257, Max-Change = 0.2000, Max-Change = 0.1857, Max-Change = 0.0790, Max-Change = 0.0391, Max-Change = 0.0559, Max-Change = 0.2000, Max-Change = 0.1776, Max-Change = 0.0181, Max-Change = 0.0494, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.1295, Max-Change = 0.1152, Max-Change = 0.2000, Max-Change = 0.1530, Max-Change = 0.0186, Max-Change = 0.1586, Max-Change = 0.0536, Max-Change = 0.0350, Max-Change = 0.0466, Max-Change = 0.0195, Max-Change = 0.0606, Max-Change = 0.1190, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.1087, gam = 0.1057, Max-Change = 0.0780, gam = 0.0780, Max-Change = 0.0283, gam = 0.0629, Max-Change = 0.0549, gam = 0.0532, Max-Change = 0.0181, gam = 0.0464, Max-Change = 0.0171, gam = 0.0413, Max-Change = 0.0038, gam = 0.0374, Max-Change = 0.0220, gam = 0.0342, Max-Change = 0.0112, gam = 0.0316, Max-Change = 0.0208, gam = 0.0294, Max-Change = 0.0122, gam = 0.0276, Max-Change = 0.0115, gam = 0.0260, Max-Change = 0.0075, gam = 0.0246, Max-Change = 0.0027, gam = 0.0233, Max-Change = 0.0056, gam = 0.0222, Max-Change = 0.0078, gam = 0.0212, Max-Change = 0.0072, gam = 0.0203, Max-Change = 0.0164, gam = 0.0195, Max-Change = 0.0044, gam = 0.0188, Max-Change = 0.0097, gam = 0.0181, Max-Change = 0.0156, gam = 0.0175, Max-Change = 0.0020, gam = 0.0169, Max-Change = 0.0043, gam = 0.0164, Max-Change = 0.0047, gam = 0.0159, Max-Change = 0.0035, gam = 0.0154, Max-Change = 0.0101, gam = 0.0150, Max-Change = 0.0149, gam = 0.0146, Max-Change = 0.0065, gam = 0.0142, Max-Change = 0.0078, gam = 0.0139, Max-Change = 0.0128, gam = 0.0135, Max-Change = 0.0101, gam = 0.0132, Max-Change = 0.0038, gam = 0.0129, Max-Change = 0.0029, gam = 0.0126, Max-Change = 0.0119, gam = 0.0124, Max-Change = 0.0033, gam = 0.0121, Max-Change = 0.0080, gam = 0.0119, Max-Change = 0.0169, gam = 0.0116, Max-Change = 0.0034, gam = 0.0114, Max-Change = 0.0056, gam = 0.0112, Max-Change = 0.0060, gam = 0.0110, Max-Change = 0.0023, gam = 0.0108, Max-Change = 0.0043, gam = 0.0106, Max-Change = 0.0020, gam = 0.0104, Max-Change = 0.0057, gam = 0.0102, Max-Change = 0.0074, gam = 0.0101, Max-Change = 0.0063, gam = 0.0099, Max-Change = 0.0016, gam = 0.0098, Max-Change = 0.0024, gam = 0.0096, Max-Change = 0.0020, gam = 0.0095, Max-Change = 0.0067, gam = 0.0093, Max-Change = 0.0017, gam = 0.0092, Max-Change = 0.0083, gam = 0.0091, Max-Change = 0.0015, gam = 0.0089, Max-Change = 0.0056, gam = 0.0088, Max-Change = 0.0027, gam = 0.0087, Max-Change = 0.0033, gam = 0.0086, Max-Change = 0.0011, gam = 0.0085, Max-Change = 0.0055, gam = 0.0084, Max-Change = 0.0023, gam = 0.0082, Max-Change = 0.0023, gam = 0.0081, Max-Change = 0.0026, gam = 0.0080, Max-Change = 0.0037, gam = 0.0080, Max-Change = 0.0017, gam = 0.0079, Max-Change = 0.0048, gam = 0.0078, Max-Change = 0.0043, gam = 0.0077, Max-Change = 0.0037, gam = 0.0076, Max-Change = 0.0094, gam = 0.0075, Max-Change = 0.0067, gam = 0.0074, Max-Change = 0.0068, gam = 0.0073, Max-Change = 0.0047, gam = 0.0073, Max-Change = 0.0012, gam = 0.0072, Max-Change = 0.0018, gam = 0.0071, Max-Change = 0.0062, gam = 0.0070, Max-Change = 0.0020, gam = 0.0070, Max-Change = 0.0033, gam = 0.0069, Max-Change = 0.0012, gam = 0.0068, Max-Change = 0.0033, gam = 0.0068, Max-Change = 0.0062, gam = 0.0067, Max-Change = 0.0011, gam = 0.0066, Max-Change = 0.0029, gam = 0.0066, Max-Change = 0.0041, gam = 0.0065, Max-Change = 0.0012, gam = 0.0065, Max-Change = 0.0057, gam = 0.0064, Max-Change = 0.0021, gam = 0.0064, Max-Change = 0.0071, gam = 0.0063, Max-Change = 0.0066, gam = 0.0062, Max-Change = 0.0013, gam = 0.0062, Max-Change = 0.0006, gam = 0.0061, Max-Change = 0.0019, gam = 0.0061, Max-Change = 0.0009, gam = 0.0060, Max-Change = 0.0007, gam = 0.0060, Max-Change = 0.0083, gam = 0.0059, Max-Change = 0.0034, gam = 0.0059, Max-Change = 0.0028, gam = 0.0058, Max-Change = 0.0063, gam = 0.0058, Max-Change = 0.0073, gam = 0.0058, Max-Change = 0.0037, gam = 0.0057, Max-Change = 0.0018, gam = 0.0057, Max-Change = 0.0017, gam = 0.0056, Max-Change = 0.0037, gam = 0.0056, Max-Change = 0.0027, gam = 0.0055, Max-Change = 0.0012, gam = 0.0055, Max-Change = 0.0006, gam = 0.0055, Max-Change = 0.0031, gam = 0.0054, Max-Change = 0.0048, gam = 0.0054, Max-Change = 0.0019, gam = 0.0053, Max-Change = 0.0032, gam = 0.0053, Max-Change = 0.0005, gam = 0.0053, Max-Change = 0.0049, gam = 0.0052, Max-Change = 0.0029, gam = 0.0052, Max-Change = 0.0023, gam = 0.0052, Max-Change = 0.0056, gam = 0.0051, Max-Change = 0.0060, gam = 0.0051, Max-Change = 0.0031, gam = 0.0051, Max-Change = 0.0050, gam = 0.0050, Max-Change = 0.0049, gam = 0.0050, Max-Change = 0.0009, gam = 0.0050, Max-Change = 0.0036, gam = 0.0049, Max-Change = 0.0055, gam = 0.0049, Max-Change = 0.0032, gam = 0.0049, Max-Change = 0.0043, gam = 0.0048, Max-Change = 0.0007, gam = 0.0048, Max-Change = 0.0024, gam = 0.0048, Max-Change = 0.0019, gam = 0.0048, Max-Change = 0.0025, gam = 0.0047, Max-Change = 0.0025, gam = 0.0047, Max-Change = 0.0007, gam = 0.0047, Max-Change = 0.0005, gam = 0.0046, Max-Change = 0.0008 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood... anova(mod1, mod1b) #better with 2PL models using all criteria (as expected, given simdata pars) #>            AIC    SABIC       HQ      BIC    logLik     X2 df p #> mod1  8111.326 8130.107 8134.469 8171.387 -4042.663             #> mod1b 7975.487 8007.270 8014.651 8077.128 -3965.743 153.84  9 0  # continuous predictor with group mod2 <- mixedmirt(data, covdata, model, fixed = ~ 0 + group + items + pseudoIQ) #> , Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.1807, Max-Change = 0.1593, Max-Change = 0.1350, Max-Change = 0.1155, Max-Change = 0.1001, Max-Change = 0.0861, Max-Change = 0.0702, Max-Change = 0.0585, Max-Change = 0.0465, Max-Change = 0.0362, Max-Change = 0.0292, Max-Change = 0.0245, Max-Change = 0.0166, Max-Change = 0.0178, Max-Change = 0.0144, Max-Change = 0.0085, Max-Change = 0.0130, Max-Change = 0.0096, Max-Change = 0.0103, Max-Change = 0.0061, Max-Change = 0.0049, Max-Change = 0.0084, Max-Change = 0.0113, Max-Change = 0.0152, Max-Change = 0.0156, Max-Change = 0.0068, Max-Change = 0.0083, Max-Change = 0.0068, Max-Change = 0.0079, Max-Change = 0.0075, Max-Change = 0.0149, Max-Change = 0.0082, Max-Change = 0.0035, Max-Change = 0.0157, Max-Change = 0.0115, Max-Change = 0.0088, Max-Change = 0.0055, Max-Change = 0.0128, Max-Change = 0.0083, Max-Change = 0.0046, Max-Change = 0.0066, Max-Change = 0.0040, Max-Change = 0.0086, Max-Change = 0.0020, Max-Change = 0.0069, Max-Change = 0.0051, Max-Change = 0.0081, Max-Change = 0.0034, Max-Change = 0.0156, Max-Change = 0.0074, Max-Change = 0.0066, Max-Change = 0.0084, Max-Change = 0.0088, Max-Change = 0.0151, Max-Change = 0.0069, Max-Change = 0.0178, Max-Change = 0.0042, Max-Change = 0.0129, Max-Change = 0.0094, Max-Change = 0.0068, Max-Change = 0.0076, Max-Change = 0.0032, Max-Change = 0.0093, Max-Change = 0.0067, Max-Change = 0.0026, Max-Change = 0.0060, Max-Change = 0.0056, Max-Change = 0.0064, Max-Change = 0.0079, Max-Change = 0.0038, Max-Change = 0.0052, Max-Change = 0.0105, Max-Change = 0.0046, Max-Change = 0.0047, Max-Change = 0.0059, Max-Change = 0.0055, Max-Change = 0.0067, Max-Change = 0.0072, Max-Change = 0.0068, Max-Change = 0.0074, Max-Change = 0.0033, Max-Change = 0.0105, Max-Change = 0.0133, Max-Change = 0.0075, Max-Change = 0.0087, Max-Change = 0.0052, Max-Change = 0.0040, Max-Change = 0.0056, Max-Change = 0.0094, Max-Change = 0.0095, Max-Change = 0.0116, Max-Change = 0.0043, Max-Change = 0.0044, Max-Change = 0.0038, Max-Change = 0.0096, Max-Change = 0.0055, Max-Change = 0.0047, Max-Change = 0.0035, Max-Change = 0.0089, Max-Change = 0.0055, Max-Change = 0.0059, Max-Change = 0.0088, Max-Change = 0.0103, Max-Change = 0.0040, Max-Change = 0.0033, Max-Change = 0.0102, Max-Change = 0.0063, Max-Change = 0.0033, Max-Change = 0.0072, Max-Change = 0.0095, Max-Change = 0.0037, Max-Change = 0.0092, Max-Change = 0.0103, Max-Change = 0.0058, Max-Change = 0.0068, Max-Change = 0.0071, Max-Change = 0.0047, Max-Change = 0.0138, Max-Change = 0.0077, Max-Change = 0.0070, Max-Change = 0.0086, Max-Change = 0.0091, Max-Change = 0.0099, Max-Change = 0.0031, Max-Change = 0.0124, Max-Change = 0.0060, Max-Change = 0.0074, Max-Change = 0.0038, Max-Change = 0.0101, Max-Change = 0.0044, Max-Change = 0.0073, Max-Change = 0.0048, Max-Change = 0.0057, Max-Change = 0.0058, Max-Change = 0.0079, Max-Change = 0.0054, Max-Change = 0.0106, Max-Change = 0.0074, Max-Change = 0.0023, Max-Change = 0.0120, Max-Change = 0.0061, Max-Change = 0.0063, Max-Change = 0.0069, Max-Change = 0.0075, Max-Change = 0.0097, Max-Change = 0.0032, Max-Change = 0.0077, Max-Change = 0.0058, Max-Change = 0.0041, Max-Change = 0.0022, Max-Change = 0.0034, Max-Change = 0.0067, Max-Change = 0.0071, Max-Change = 0.0055, Max-Change = 0.0043, Max-Change = 0.0030, Max-Change = 0.0056, Max-Change = 0.0043, Max-Change = 0.0119, Max-Change = 0.0053, Max-Change = 0.0059, Max-Change = 0.0087, Max-Change = 0.0026, Max-Change = 0.0041, Max-Change = 0.0052, Max-Change = 0.0077, Max-Change = 0.0074, Max-Change = 0.0031, Max-Change = 0.0066, Max-Change = 0.0108, Max-Change = 0.0058, Max-Change = 0.0067, Max-Change = 0.0018, Max-Change = 0.0069, Max-Change = 0.0096, Max-Change = 0.0059, Max-Change = 0.0066, Max-Change = 0.0018, Max-Change = 0.0049, Max-Change = 0.0040, Max-Change = 0.0106, Max-Change = 0.0046, Max-Change = 0.0021, Max-Change = 0.0047, Max-Change = 0.0034, Max-Change = 0.0067, Max-Change = 0.0070, Max-Change = 0.0061, Max-Change = 0.0059, Max-Change = 0.0024, Max-Change = 0.0069, Max-Change = 0.0041, Max-Change = 0.0036, Max-Change = 0.0061, Max-Change = 0.0058, Max-Change = 0.0057, Max-Change = 0.0072, Max-Change = 0.0068, Max-Change = 0.0071, Max-Change = 0.0056, Max-Change = 0.0109, Max-Change = 0.0047, Max-Change = 0.0063, Max-Change = 0.0082, Max-Change = 0.0020, Max-Change = 0.0107, Max-Change = 0.0032, Max-Change = 0.0050, Max-Change = 0.0109, Max-Change = 0.0056, Max-Change = 0.0076, Max-Change = 0.0024, Max-Change = 0.0072, Max-Change = 0.0038, Max-Change = 0.0062, Max-Change = 0.0041, Max-Change = 0.0049, Max-Change = 0.0037, Max-Change = 0.0042, Max-Change = 0.0044, Max-Change = 0.0017, Max-Change = 0.0054, Max-Change = 0.0066, Max-Change = 0.0098, Max-Change = 0.0067, Max-Change = 0.0066, Max-Change = 0.0087, Max-Change = 0.0095, Max-Change = 0.0073, Max-Change = 0.0092, Max-Change = 0.0051, Max-Change = 0.0043, Max-Change = 0.0059, Max-Change = 0.0057, Max-Change = 0.0041, Max-Change = 0.0052, Max-Change = 0.0076, Max-Change = 0.0058, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0043, gam = 0.1057, Max-Change = 0.0022, gam = 0.0780, Max-Change = 0.0015, gam = 0.0629, Max-Change = 0.0023, gam = 0.0532, Max-Change = 0.0019, gam = 0.0464, Max-Change = 0.0010, gam = 0.0413, Max-Change = 0.0004, gam = 0.0374, Max-Change = 0.0012, gam = 0.0342, Max-Change = 0.0014, gam = 0.0316, Max-Change = 0.0007, gam = 0.0294, Max-Change = 0.0007, gam = 0.0276, Max-Change = 0.0006 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood... summary(mod2) #>  #> Call: #> mixedmirt(data = data, covdata = covdata, model = model, fixed = ~0 +  #>     group + items + pseudoIQ) #>  #> -------------- #> FIXED EFFECTS: #>          Estimate Std.Error z.value #> groupG1    -1.711     0.105 -16.317 #> groupG2    -0.750     0.093  -8.029 #> groupG3     0.366     0.099   3.714 #> pseudoIQ    0.268     0.058   4.594 #>  #> -------------- #> RANDOM EFFECT COVARIANCE(S): #> Correlations on upper diagonal #>  #> $Theta #>       Theta #> Theta 0.105 #>  anova(mod1b, mod2) #>            AIC    SABIC       HQ      BIC    logLik       X2 df   p #> mod1b 7975.487 8007.270 8014.651 8077.128 -3965.743                 #> mod2  8090.269 8110.494 8115.192 8154.950 -4031.134 -130.782 -8 NaN  # view fixed design matrix with and without unique item level intercepts withint <- mixedmirt(data, covdata, model, fixed = ~ 0 + items + group, return.design = TRUE) withoutint <- mixedmirt(data, covdata, model, fixed = ~ 0 + group, return.design = TRUE)  # notice that in result above, the intercepts 'items1 to items 10' were reassigned to 'd' head(withint$X) #>     items1 items2 items3 items4 items5 items6 items7 items8 items9 items10 #> 1.1      1      0      0      0      0      0      0      0      0       0 #> 2.1      1      0      0      0      0      0      0      0      0       0 #> 3.1      1      0      0      0      0      0      0      0      0       0 #> 4.1      1      0      0      0      0      0      0      0      0       0 #> 5.1      1      0      0      0      0      0      0      0      0       0 #> 6.1      1      0      0      0      0      0      0      0      0       0 #>     groupG2 groupG3 #> 1.1       0       0 #> 2.1       0       0 #> 3.1       0       0 #> 4.1       0       0 #> 5.1       0       0 #> 6.1       0       0 tail(withint$X) #>        items1 items2 items3 items4 items5 items6 items7 items8 items9 items10 #> 745.10      0      0      0      0      0      0      0      0      0       1 #> 746.10      0      0      0      0      0      0      0      0      0       1 #> 747.10      0      0      0      0      0      0      0      0      0       1 #> 748.10      0      0      0      0      0      0      0      0      0       1 #> 749.10      0      0      0      0      0      0      0      0      0       1 #> 750.10      0      0      0      0      0      0      0      0      0       1 #>        groupG2 groupG3 #> 745.10       0       1 #> 746.10       0       1 #> 747.10       0       1 #> 748.10       0       1 #> 749.10       0       1 #> 750.10       0       1 head(withoutint$X) # no intercepts design here to be reassigned into item intercepts #>     groupG1 groupG2 groupG3 #> 1.1       1       0       0 #> 2.1       1       0       0 #> 3.1       1       0       0 #> 4.1       1       0       0 #> 5.1       1       0       0 #> 6.1       1       0       0 tail(withoutint$X) #>        groupG1 groupG2 groupG3 #> 745.10       0       0       1 #> 746.10       0       0       1 #> 747.10       0       0       1 #> 748.10       0       0       1 #> 749.10       0       0       1 #> 750.10       0       0       1  ################################################### ### random effects # make the number of groups much larger covdata$group <- factor(rep(paste0('G',1:50), each = N/50))  # random groups rmod1 <- mixedmirt(data, covdata, 1, fixed = ~ 0 + items, random = ~ 1|group) #> , Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.1864, Max-Change = 0.1623, Max-Change = 0.1436, Max-Change = 0.1243, Max-Change = 0.1035, Max-Change = 0.0953, Max-Change = 0.0862, Max-Change = 0.0730, Max-Change = 0.0612, Max-Change = 0.0490, Max-Change = 0.0426, Max-Change = 0.0342, Max-Change = 0.0359, Max-Change = 0.0255, Max-Change = 0.0251, Max-Change = 0.0175, Max-Change = 0.0105, Max-Change = 0.0121, Max-Change = 0.0184, Max-Change = 0.0194, Max-Change = 0.0092, Max-Change = 0.0064, Max-Change = 0.0083, Max-Change = 0.0065, Max-Change = 0.0026, Max-Change = 0.0066, Max-Change = 0.0110, Max-Change = 0.0004, Max-Change = 0.0044, Max-Change = 0.0104, Max-Change = 0.0118, Max-Change = 0.0071, Max-Change = 0.0056, Max-Change = 0.0073, Max-Change = 0.0134, Max-Change = 0.0043, Max-Change = 0.0143, Max-Change = 0.0042, Max-Change = 0.0109, Max-Change = 0.0061, Max-Change = 0.0096, Max-Change = 0.0130, Max-Change = 0.0158, Max-Change = 0.0124, Max-Change = 0.0075, Max-Change = 0.0080, Max-Change = 0.0056, Max-Change = 0.0025, Max-Change = 0.0109, Max-Change = 0.0030, Max-Change = 0.0135, Max-Change = 0.0156, Max-Change = 0.0136, Max-Change = 0.0085, Max-Change = 0.0083, Max-Change = 0.0118, Max-Change = 0.0017, Max-Change = 0.0074, Max-Change = 0.0278, Max-Change = 0.0030, Max-Change = 0.0086, Max-Change = 0.0053, Max-Change = 0.0006, Max-Change = 0.0139, Max-Change = 0.0106, Max-Change = 0.0060, Max-Change = 0.0048, Max-Change = 0.0084, Max-Change = 0.0076, Max-Change = 0.0094, Max-Change = 0.0090, Max-Change = 0.0120, Max-Change = 0.0036, Max-Change = 0.0029, Max-Change = 0.0089, Max-Change = 0.0036, Max-Change = 0.0030, Max-Change = 0.0074, Max-Change = 0.0044, Max-Change = 0.0153, Max-Change = 0.0043, Max-Change = 0.0295, Max-Change = 0.0054, Max-Change = 0.0105, Max-Change = 0.0154, Max-Change = 0.0094, Max-Change = 0.0021, Max-Change = 0.0077, Max-Change = 0.0113, Max-Change = 0.0035, Max-Change = 0.0045, Max-Change = 0.0065, Max-Change = 0.2000, Max-Change = 0.1344, Max-Change = 0.0744, Max-Change = 0.0786, Max-Change = 0.0581, Max-Change = 0.0426, Max-Change = 0.0315, Max-Change = 0.0381, Max-Change = 0.0227, Max-Change = 0.0228, Max-Change = 0.0159, Max-Change = 0.0193, Max-Change = 0.0112, Max-Change = 0.0092, Max-Change = 0.0150, Max-Change = 0.0126, Max-Change = 0.0093, Max-Change = 0.0185, Max-Change = 0.0088, Max-Change = 0.0108, Max-Change = 0.0167, Max-Change = 0.0128, Max-Change = 0.0118, Max-Change = 0.0094, Max-Change = 0.0056, Max-Change = 0.0258, Max-Change = 0.0316, Max-Change = 0.0118, Max-Change = 0.0106, Max-Change = 0.0198, Max-Change = 0.0252, Max-Change = 0.0309, Max-Change = 0.0159, Max-Change = 0.0162, Max-Change = 0.0087, Max-Change = 0.0045, Max-Change = 0.0110, Max-Change = 0.0057, Max-Change = 0.0069, Max-Change = 0.0039, Max-Change = 0.0225, Max-Change = 0.0115, Max-Change = 0.0144, Max-Change = 0.0102, Max-Change = 0.0078, Max-Change = 0.0102, Max-Change = 0.0065, Max-Change = 0.0275, Max-Change = 0.0248, Max-Change = 0.0045, Max-Change = 0.0114, Max-Change = 0.0065, Max-Change = 0.0160, Max-Change = 0.0145, Max-Change = 0.0068, Max-Change = 0.0129, Max-Change = 0.0116, Max-Change = 0.0161, Max-Change = 0.0138, Max-Change = 0.0076, Max-Change = 0.0139, Max-Change = 0.0116, Max-Change = 0.0067, Max-Change = 0.0162, Max-Change = 0.0228, Max-Change = 0.0090, Max-Change = 0.0079, Max-Change = 0.0054, Max-Change = 0.0223, Max-Change = 0.0171, Max-Change = 0.0075, Max-Change = 0.0105, Max-Change = 0.0246, Max-Change = 0.0028, Max-Change = 0.0061, Max-Change = 0.0095, Max-Change = 0.0026, Max-Change = 0.0123, Max-Change = 0.0207, Max-Change = 0.0063, Max-Change = 0.0044, Max-Change = 0.0084, Max-Change = 0.0051, Max-Change = 0.0050, Max-Change = 0.0085, Max-Change = 0.0051, Max-Change = 0.0207, Max-Change = 0.0080, Max-Change = 0.0121, Max-Change = 0.0258, Max-Change = 0.0036, Max-Change = 0.0144, Max-Change = 0.0108, Max-Change = 0.0057, Max-Change = 0.0055, Max-Change = 0.0196, Max-Change = 0.0071, Max-Change = 0.0062, Max-Change = 0.0077, Max-Change = 0.0068, Max-Change = 0.0187, Max-Change = 0.0174, Max-Change = 0.0161, Max-Change = 0.0129, Max-Change = 0.0047, Max-Change = 0.0088, Max-Change = 0.0096, Max-Change = 0.0171, Max-Change = 0.0073, Max-Change = 0.0098, Max-Change = 0.0079, Max-Change = 0.0198, Max-Change = 0.0111, Max-Change = 0.0425, Max-Change = 0.0146, Max-Change = 0.0073, Max-Change = 0.0110, Max-Change = 0.0258, Max-Change = 0.0168, Max-Change = 0.0345, Max-Change = 0.0010, Max-Change = 0.0187, Max-Change = 0.0113, Max-Change = 0.0134, Max-Change = 0.0198, Max-Change = 0.0027, Max-Change = 0.0127, Max-Change = 0.0065, Max-Change = 0.0132, Max-Change = 0.0139, Max-Change = 0.0045, Max-Change = 0.0400, Max-Change = 0.0098, Max-Change = 0.0053, Max-Change = 0.0015, Max-Change = 0.0103, Max-Change = 0.0102, Max-Change = 0.0054, Max-Change = 0.0199, Max-Change = 0.0100, Max-Change = 0.0041, Max-Change = 0.0184, Max-Change = 0.0145, Max-Change = 0.0103, Max-Change = 0.0038, Max-Change = 0.0143, Max-Change = 0.0152, Max-Change = 0.0110, Max-Change = 0.0068, Max-Change = 0.0118, Max-Change = 0.0066, Max-Change = 0.0130, Max-Change = 0.0208, Max-Change = 0.0037, Max-Change = 0.0121, Max-Change = 0.0141, Max-Change = 0.0072, Max-Change = 0.0143, Max-Change = 0.0123, Max-Change = 0.0070, Max-Change = 0.0035, Max-Change = 0.0055, Max-Change = 0.0196, Max-Change = 0.0027, Max-Change = 0.0068, Max-Change = 0.0078, Max-Change = 0.0070, Max-Change = 0.0023, Max-Change = 0.0069, Max-Change = 0.0069, Max-Change = 0.0115, Max-Change = 0.0052, Max-Change = 0.0048, Max-Change = 0.0232, Max-Change = 0.0055, Max-Change = 0.0128, Max-Change = 0.0051, Max-Change = 0.0093, Max-Change = 0.0252, Max-Change = 0.0142, Max-Change = 0.0101, Max-Change = 0.0092, Max-Change = 0.0333, Max-Change = 0.0122, Max-Change = 0.0084, Max-Change = 0.0098, Max-Change = 0.0081, Max-Change = 0.0300, Max-Change = 0.0306, Max-Change = 0.0112, Max-Change = 0.0048, Max-Change = 0.0091, Max-Change = 0.0088, Max-Change = 0.0263, Max-Change = 0.0100, Max-Change = 0.0118, Max-Change = 0.0103, Max-Change = 0.0021, Max-Change = 0.0084, Max-Change = 0.0130, Max-Change = 0.0080, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0151, gam = 0.1057, Max-Change = 0.0072, gam = 0.0780, Max-Change = 0.0048, gam = 0.0629, Max-Change = 0.0014, gam = 0.0532, Max-Change = 0.0047, gam = 0.0464, Max-Change = 0.0016, gam = 0.0413, Max-Change = 0.0021, gam = 0.0374, Max-Change = 0.0007, gam = 0.0342, Max-Change = 0.0026, gam = 0.0316, Max-Change = 0.0035, gam = 0.0294, Max-Change = 0.0018, gam = 0.0276, Max-Change = 0.0009, gam = 0.0260, Max-Change = 0.0013, gam = 0.0246, Max-Change = 0.0007, gam = 0.0233, Max-Change = 0.0016, gam = 0.0222, Max-Change = 0.0012, gam = 0.0212, Max-Change = 0.0011, gam = 0.0203, Max-Change = 0.0024, gam = 0.0195, Max-Change = 0.0020, gam = 0.0188, Max-Change = 0.0010, gam = 0.0181, Max-Change = 0.0013, gam = 0.0175, Max-Change = 0.0003, gam = 0.0169, Max-Change = 0.0011, gam = 0.0164, Max-Change = 0.0008, gam = 0.0159, Max-Change = 0.0007, gam = 0.0154, Max-Change = 0.0008 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood... summary(rmod1) #>  #> Call: #> mixedmirt(data = data, covdata = covdata, model = 1, fixed = ~0 +  #>     items, random = ~1 | group) #>  #>  #> -------------- #> RANDOM EFFECT COVARIANCE(S): #> Correlations on upper diagonal #>  #> $Theta #>       F1 #> F1 0.062 #>  #> $group #>           COV_group #> COV_group      1.11 #>  coef(rmod1) #> $Item_1 #>         a1      d  g  u #> par      1 -0.713  0  1 #> CI_2.5  NA -0.927 NA NA #> CI_97.5 NA -0.500 NA NA #>  #> $Item_2 #>         a1      d  g  u #> par      1 -0.867  0  1 #> CI_2.5  NA -1.081 NA NA #> CI_97.5 NA -0.653 NA NA #>  #> $Item_3 #>         a1      d  g  u #> par      1 -0.370  0  1 #> CI_2.5  NA -0.583 NA NA #> CI_97.5 NA -0.156 NA NA #>  #> $Item_4 #>         a1      d  g  u #> par      1  0.057  0  1 #> CI_2.5  NA -0.161 NA NA #> CI_97.5 NA  0.276 NA NA #>  #> $Item_5 #>         a1     d  g  u #> par      1 0.654  0  1 #> CI_2.5  NA 0.422 NA NA #> CI_97.5 NA 0.886 NA NA #>  #> $Item_6 #>         a1      d  g  u #> par      1 -0.145  0  1 #> CI_2.5  NA -0.361 NA NA #> CI_97.5 NA  0.071 NA NA #>  #> $Item_7 #>         a1      d  g  u #> par      1 -0.592  0  1 #> CI_2.5  NA -0.805 NA NA #> CI_97.5 NA -0.379 NA NA #>  #> $Item_8 #>         a1      d  g  u #> par      1 -1.057  0  1 #> CI_2.5  NA -1.273 NA NA #> CI_97.5 NA -0.842 NA NA #>  #> $Item_9 #>         a1      d  g  u #> par      1 -0.957  0  1 #> CI_2.5  NA -1.172 NA NA #> CI_97.5 NA -0.743 NA NA #>  #> $Item_10 #>         a1     d  g  u #> par      1 2.769  0  1 #> CI_2.5  NA 2.425 NA NA #> CI_97.5 NA 3.113 NA NA #>  #> $GroupPars #>         MEAN_1 COV_11 #> par          0  0.062 #> CI_2.5      NA  0.004 #> CI_97.5     NA  0.120 #>  #> $group #>         COV_group_group #> par               1.112 #> CI_2.5            0.631 #> CI_97.5           1.592 #>   # random groups and random items rmod2 <- mixedmirt(data, covdata, 1, random = list(~ 1|group, ~ 1|items)) #> , Max-Change = 0.0274, Max-Change = 0.0217, Max-Change = 0.0087, Max-Change = 0.0228, Max-Change = 0.0182, Max-Change = 0.0177, Max-Change = 0.0220, Max-Change = 0.0255, Max-Change = 0.0132, Max-Change = 0.0106, Max-Change = 0.0070, Max-Change = 0.0106, Max-Change = 0.0120, Max-Change = 0.0060, Max-Change = 0.0116, Max-Change = 0.0019, Max-Change = 0.0029, Max-Change = 0.0069, Max-Change = 0.0130, Max-Change = 0.0098, Max-Change = 0.0232, Max-Change = 0.0104, Max-Change = 0.0034, Max-Change = 0.0054, Max-Change = 0.0075, Max-Change = 0.0051, Max-Change = 0.0113, Max-Change = 0.0033, Max-Change = 0.0032, Max-Change = 0.0056, Max-Change = 0.0037, Max-Change = 0.0047, Max-Change = 0.0051, Max-Change = 0.0028, Max-Change = 0.0024, Max-Change = 0.0006, Max-Change = 0.0045, Max-Change = 0.0037, Max-Change = 0.0007, Max-Change = 0.0013, Max-Change = 0.0057, Max-Change = 0.0169, Max-Change = 0.0131, Max-Change = 0.0095, Max-Change = 0.0038, Max-Change = 0.0032, Max-Change = 0.0049, Max-Change = 0.0047, Max-Change = 0.0137, Max-Change = 0.0022, Max-Change = 0.0077, Max-Change = 0.0074, Max-Change = 0.0048, Max-Change = 0.0044, Max-Change = 0.0044, Max-Change = 0.0059, Max-Change = 0.0017, Max-Change = 0.0037, Max-Change = 0.0062, Max-Change = 0.0062, Max-Change = 0.0026, Max-Change = 0.0063, Max-Change = 0.0057, Max-Change = 0.0151, Max-Change = 0.0044, Max-Change = 0.0059, Max-Change = 0.0086, Max-Change = 0.0036, Max-Change = 0.0044, Max-Change = 0.0054, Max-Change = 0.0030, Max-Change = 0.0035, Max-Change = 0.0056, Max-Change = 0.0004, Max-Change = 0.0009, Max-Change = 0.0027, Max-Change = 0.0004, Max-Change = 0.0020, Max-Change = 0.0066, Max-Change = 0.0013, Max-Change = 0.0023, Max-Change = 0.0045, Max-Change = 0.0076, Max-Change = 0.0024, Max-Change = 0.0015, Max-Change = 0.0012, Max-Change = 0.0033, Max-Change = 0.0040, Max-Change = 0.0105, Max-Change = 0.0004, Max-Change = 0.0064, Max-Change = 0.0121, Max-Change = 0.0016, Max-Change = 0.0090, Max-Change = 0.0018, Max-Change = 0.0069, Max-Change = 0.0070, Max-Change = 0.0055, Max-Change = 0.0037, Max-Change = 0.0504, Max-Change = 0.1569, Max-Change = 0.0713, Max-Change = 0.0281, Max-Change = 0.0327, Max-Change = 0.0567, Max-Change = 0.0160, Max-Change = 0.0127, Max-Change = 0.0138, Max-Change = 0.0226, Max-Change = 0.0120, Max-Change = 0.0178, Max-Change = 0.0122, Max-Change = 0.0057, Max-Change = 0.0087, Max-Change = 0.0137, Max-Change = 0.0088, Max-Change = 0.0196, Max-Change = 0.0088, Max-Change = 0.0167, Max-Change = 0.0123, Max-Change = 0.0119, Max-Change = 0.0139, Max-Change = 0.0092, Max-Change = 0.0199, Max-Change = 0.0132, Max-Change = 0.0030, Max-Change = 0.0045, Max-Change = 0.0065, Max-Change = 0.0194, Max-Change = 0.0114, Max-Change = 0.0146, Max-Change = 0.0089, Max-Change = 0.0129, Max-Change = 0.0156, Max-Change = 0.0131, Max-Change = 0.0130, Max-Change = 0.0087, Max-Change = 0.0086, Max-Change = 0.0054, Max-Change = 0.0052, Max-Change = 0.0106, Max-Change = 0.0146, Max-Change = 0.0035, Max-Change = 0.0120, Max-Change = 0.0061, Max-Change = 0.0061, Max-Change = 0.0023, Max-Change = 0.0062, Max-Change = 0.0086, Max-Change = 0.0083, Max-Change = 0.0035, Max-Change = 0.0077, Max-Change = 0.0064, Max-Change = 0.0033, Max-Change = 0.0061, Max-Change = 0.0065, Max-Change = 0.0129, Max-Change = 0.0230, Max-Change = 0.0068, Max-Change = 0.0033, Max-Change = 0.0121, Max-Change = 0.0015, Max-Change = 0.0018, Max-Change = 0.0051, Max-Change = 0.0016, Max-Change = 0.0140, Max-Change = 0.0063, Max-Change = 0.0193, Max-Change = 0.0179, Max-Change = 0.0064, Max-Change = 0.0051, Max-Change = 0.0061, Max-Change = 0.0067, Max-Change = 0.0110, Max-Change = 0.0131, Max-Change = 0.0151, Max-Change = 0.0057, Max-Change = 0.0098, Max-Change = 0.0081, Max-Change = 0.0068, Max-Change = 0.0101, Max-Change = 0.0025, Max-Change = 0.0068, Max-Change = 0.0015, Max-Change = 0.0160, Max-Change = 0.0077, Max-Change = 0.0060, Max-Change = 0.0057, Max-Change = 0.0068, Max-Change = 0.0053, Max-Change = 0.0143, Max-Change = 0.0049, Max-Change = 0.0012, Max-Change = 0.0075, Max-Change = 0.0059, Max-Change = 0.0126, Max-Change = 0.0084, Max-Change = 0.0163, Max-Change = 0.0068, Max-Change = 0.0511, Max-Change = 0.0088, Max-Change = 0.0075, Max-Change = 0.0063, Max-Change = 0.0070, Max-Change = 0.0058, Max-Change = 0.0064, Max-Change = 0.0086, Max-Change = 0.0082, Max-Change = 0.0145, Max-Change = 0.0049, Max-Change = 0.0087, Max-Change = 0.0072, Max-Change = 0.0055, Max-Change = 0.0123, Max-Change = 0.0124, Max-Change = 0.0067, Max-Change = 0.0308, Max-Change = 0.0055, Max-Change = 0.0237, Max-Change = 0.0222, Max-Change = 0.0140, Max-Change = 0.0075, Max-Change = 0.0180, Max-Change = 0.0111, Max-Change = 0.0081, Max-Change = 0.0086, Max-Change = 0.0068, Max-Change = 0.0053, Max-Change = 0.0135, Max-Change = 0.0094, Max-Change = 0.0109, Max-Change = 0.0093, Max-Change = 0.0060, Max-Change = 0.0103, Max-Change = 0.0121, Max-Change = 0.0125, Max-Change = 0.0084, Max-Change = 0.0025, Max-Change = 0.0033, Max-Change = 0.0045, Max-Change = 0.0197, Max-Change = 0.0107, Max-Change = 0.0052, Max-Change = 0.0106, Max-Change = 0.0027, Max-Change = 0.0060, Max-Change = 0.0156, Max-Change = 0.0083, Max-Change = 0.0089, Max-Change = 0.0035, Max-Change = 0.0071, Max-Change = 0.0058, Max-Change = 0.0088, Max-Change = 0.0106, Max-Change = 0.0061, Max-Change = 0.0024, Max-Change = 0.0024, Max-Change = 0.0082, Max-Change = 0.0089, Max-Change = 0.0078, Max-Change = 0.0087, Max-Change = 0.0008, Max-Change = 0.0146, Max-Change = 0.0082, Max-Change = 0.0179, Max-Change = 0.0087, Max-Change = 0.0155, Max-Change = 0.0085, Max-Change = 0.0156, Max-Change = 0.0047, Max-Change = 0.0068, Max-Change = 0.0045, Max-Change = 0.0033, Max-Change = 0.0102, Max-Change = 0.0098, Max-Change = 0.0087, Max-Change = 0.0054, Max-Change = 0.0097, Max-Change = 0.0142, Max-Change = 0.0110, Max-Change = 0.0107, Max-Change = 0.0042, Max-Change = 0.0030, Max-Change = 0.0054, Max-Change = 0.0063, Max-Change = 0.0173, Max-Change = 0.0087, Max-Change = 0.0167, Max-Change = 0.0098, Max-Change = 0.0046, Max-Change = 0.0170, Max-Change = 0.0173, Max-Change = 0.0085, Max-Change = 0.0076, Max-Change = 0.0287, Max-Change = 0.0082, Max-Change = 0.0072, Max-Change = 0.0086, Max-Change = 0.0074, Max-Change = 0.0086, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0048, gam = 0.1057, Max-Change = 0.0035, gam = 0.0780, Max-Change = 0.0012, gam = 0.0629, Max-Change = 0.0029, gam = 0.0532, Max-Change = 0.0044, gam = 0.0464, Max-Change = 0.0044, gam = 0.0413, Max-Change = 0.0006, gam = 0.0374, Max-Change = 0.0018, gam = 0.0342, Max-Change = 0.0023, gam = 0.0316, Max-Change = 0.0016, gam = 0.0294, Max-Change = 0.0028, gam = 0.0276, Max-Change = 0.0004, gam = 0.0260, Max-Change = 0.0009, gam = 0.0246, Max-Change = 0.0004 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood... summary(rmod2) #>  #> Call: #> mixedmirt(data = data, covdata = covdata, model = 1, random = list(~1 |  #>     group, ~1 | items)) #>  #> -------------- #> FIXED EFFECTS: #>             Estimate Std.Error z.value #> (Intercept)   -0.605     0.013 -47.455 #>  #> -------------- #> RANDOM EFFECT COVARIANCE(S): #> Correlations on upper diagonal #>  #> $Theta #>        F1 #> F1 0.0593 #>  #> $group #>           COV_group #> COV_group     0.969 #>  #> $items #>           COV_items #> COV_items     0.694 #>  eff <- randef(rmod2) #estimate random effects  # random slopes with fixed intercepts (suppressed correlation) rmod3 <- mixedmirt(data, covdata, 1, fixed = ~ 0 + items, random = ~ -1 + pseudoIQ|group) #> , Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.1864, Max-Change = 0.1623, Max-Change = 0.1436, Max-Change = 0.1243, Max-Change = 0.1035, Max-Change = 0.0953, Max-Change = 0.0862, Max-Change = 0.0730, Max-Change = 0.0612, Max-Change = 0.0490, Max-Change = 0.0426, Max-Change = 0.0342, Max-Change = 0.0359, Max-Change = 0.0255, Max-Change = 0.0251, Max-Change = 0.0175, Max-Change = 0.0105, Max-Change = 0.0121, Max-Change = 0.0184, Max-Change = 0.0194, Max-Change = 0.0092, Max-Change = 0.0064, Max-Change = 0.0083, Max-Change = 0.0065, Max-Change = 0.0026, Max-Change = 0.0066, Max-Change = 0.0110, Max-Change = 0.0004, Max-Change = 0.0044, Max-Change = 0.0104, Max-Change = 0.0118, Max-Change = 0.0071, Max-Change = 0.0056, Max-Change = 0.0073, Max-Change = 0.0134, Max-Change = 0.0043, Max-Change = 0.0143, Max-Change = 0.0042, Max-Change = 0.0109, Max-Change = 0.0061, Max-Change = 0.0096, Max-Change = 0.0130, Max-Change = 0.0158, Max-Change = 0.0124, Max-Change = 0.0075, Max-Change = 0.0080, Max-Change = 0.0056, Max-Change = 0.0025, Max-Change = 0.0109, Max-Change = 0.0030, Max-Change = 0.0135, Max-Change = 0.0156, Max-Change = 0.0136, Max-Change = 0.0085, Max-Change = 0.0083, Max-Change = 0.0118, Max-Change = 0.0017, Max-Change = 0.0074, Max-Change = 0.0278, Max-Change = 0.0030, Max-Change = 0.0086, Max-Change = 0.0053, Max-Change = 0.0006, Max-Change = 0.0139, Max-Change = 0.0106, Max-Change = 0.0060, Max-Change = 0.0048, Max-Change = 0.0084, Max-Change = 0.0076, Max-Change = 0.0094, Max-Change = 0.0090, Max-Change = 0.0120, Max-Change = 0.0036, Max-Change = 0.0029, Max-Change = 0.0089, Max-Change = 0.0036, Max-Change = 0.0030, Max-Change = 0.0074, Max-Change = 0.0044, Max-Change = 0.0153, Max-Change = 0.0043, Max-Change = 0.0295, Max-Change = 0.0054, Max-Change = 0.0105, Max-Change = 0.0154, Max-Change = 0.0094, Max-Change = 0.0021, Max-Change = 0.0077, Max-Change = 0.0113, Max-Change = 0.0035, Max-Change = 0.0045, Max-Change = 0.0065, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.0620, Max-Change = 0.0394, Max-Change = 0.0281, Max-Change = 0.0205, Max-Change = 0.0199, Max-Change = 0.0517, Max-Change = 0.0185, Max-Change = 0.0067, Max-Change = 0.0141, Max-Change = 0.0170, Max-Change = 0.0190, Max-Change = 0.0213, Max-Change = 0.0206, Max-Change = 0.0102, Max-Change = 0.0144, Max-Change = 0.0149, Max-Change = 0.0186, Max-Change = 0.0133, Max-Change = 0.0153, Max-Change = 0.0083, Max-Change = 0.0201, Max-Change = 0.0119, Max-Change = 0.0101, Max-Change = 0.0102, Max-Change = 0.0116, Max-Change = 0.0103, Max-Change = 0.0138, Max-Change = 0.0114, Max-Change = 0.0096, Max-Change = 0.0143, Max-Change = 0.0112, Max-Change = 0.0052, Max-Change = 0.0129, Max-Change = 0.0050, Max-Change = 0.0069, Max-Change = 0.0115, Max-Change = 0.0161, Max-Change = 0.0211, Max-Change = 0.0159, Max-Change = 0.0214, Max-Change = 0.0115, Max-Change = 0.0161, Max-Change = 0.0133, Max-Change = 0.0057, Max-Change = 0.0090, Max-Change = 0.0073, Max-Change = 0.0074, Max-Change = 0.0091, Max-Change = 0.0059, Max-Change = 0.0164, Max-Change = 0.0378, Max-Change = 0.0162, Max-Change = 0.0071, Max-Change = 0.0116, Max-Change = 0.0195, Max-Change = 0.0175, Max-Change = 0.0311, Max-Change = 0.0127, Max-Change = 0.0213, Max-Change = 0.0165, Max-Change = 0.0228, Max-Change = 0.0124, Max-Change = 0.0231, Max-Change = 0.0031, Max-Change = 0.0051, Max-Change = 0.0071, Max-Change = 0.0128, Max-Change = 0.0067, Max-Change = 0.0103, Max-Change = 0.0062, Max-Change = 0.0078, Max-Change = 0.0059, Max-Change = 0.0112, Max-Change = 0.0211, Max-Change = 0.0079, Max-Change = 0.0113, Max-Change = 0.0155, Max-Change = 0.0214, Max-Change = 0.0076, Max-Change = 0.0141, Max-Change = 0.0077, Max-Change = 0.0132, Max-Change = 0.0065, Max-Change = 0.0096, Max-Change = 0.0197, Max-Change = 0.0292, Max-Change = 0.0085, Max-Change = 0.0121, Max-Change = 0.0045, Max-Change = 0.0164, Max-Change = 0.0094, Max-Change = 0.0174, Max-Change = 0.0066, Max-Change = 0.0051, Max-Change = 0.0148, Max-Change = 0.0141, Max-Change = 0.0092, Max-Change = 0.0097, Max-Change = 0.0092, Max-Change = 0.0047, Max-Change = 0.0197, Max-Change = 0.0115, Max-Change = 0.0174, Max-Change = 0.0189, Max-Change = 0.0048, Max-Change = 0.0090, Max-Change = 0.0168, Max-Change = 0.0043, Max-Change = 0.0088, Max-Change = 0.0175, Max-Change = 0.0223, Max-Change = 0.0080, Max-Change = 0.0114, Max-Change = 0.0086, Max-Change = 0.0130, Max-Change = 0.0102, Max-Change = 0.0142, Max-Change = 0.0136, Max-Change = 0.0089, Max-Change = 0.0116, Max-Change = 0.0048, Max-Change = 0.0155, Max-Change = 0.0401, Max-Change = 0.0167, Max-Change = 0.0126, Max-Change = 0.0013, Max-Change = 0.0050, Max-Change = 0.0060, Max-Change = 0.0117, Max-Change = 0.0052, Max-Change = 0.0086, Max-Change = 0.0101, Max-Change = 0.0164, Max-Change = 0.0097, Max-Change = 0.0056, Max-Change = 0.0179, Max-Change = 0.0056, Max-Change = 0.0072, Max-Change = 0.0118, Max-Change = 0.0031, Max-Change = 0.0076, Max-Change = 0.0171, Max-Change = 0.0125, Max-Change = 0.0159, Max-Change = 0.0089, Max-Change = 0.0146, Max-Change = 0.0109, Max-Change = 0.0075, Max-Change = 0.0102, Max-Change = 0.0110, Max-Change = 0.0174, Max-Change = 0.0163, Max-Change = 0.0087, Max-Change = 0.0054, Max-Change = 0.0102, Max-Change = 0.0127, Max-Change = 0.0176, Max-Change = 0.0243, Max-Change = 0.0061, Max-Change = 0.0035, Max-Change = 0.0121, Max-Change = 0.0134, Max-Change = 0.0163, Max-Change = 0.0043, Max-Change = 0.0094, Max-Change = 0.0096, Max-Change = 0.0183, Max-Change = 0.0114, Max-Change = 0.0099, Max-Change = 0.0313, Max-Change = 0.0248, Max-Change = 0.0163, Max-Change = 0.0125, Max-Change = 0.0056, Max-Change = 0.0097, Max-Change = 0.0210, Max-Change = 0.0163, Max-Change = 0.0101, Max-Change = 0.0173, Max-Change = 0.0129, Max-Change = 0.0087, Max-Change = 0.0150, Max-Change = 0.0198, Max-Change = 0.0080, Max-Change = 0.0213, Max-Change = 0.0164, Max-Change = 0.0118, Max-Change = 0.0174, Max-Change = 0.0076, Max-Change = 0.0076, Max-Change = 0.0159, Max-Change = 0.0115, Max-Change = 0.0215, Max-Change = 0.0067, Max-Change = 0.0148, Max-Change = 0.0073, Max-Change = 0.0075, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0050, gam = 0.1057, Max-Change = 0.0160, gam = 0.0780, Max-Change = 0.0089, gam = 0.0629, Max-Change = 0.0076, gam = 0.0532, Max-Change = 0.0028, gam = 0.0464, Max-Change = 0.0033, gam = 0.0413, Max-Change = 0.0039, gam = 0.0374, Max-Change = 0.0038, gam = 0.0342, Max-Change = 0.0013, gam = 0.0316, Max-Change = 0.0024, gam = 0.0294, Max-Change = 0.0012, gam = 0.0276, Max-Change = 0.0031, gam = 0.0260, Max-Change = 0.0046, gam = 0.0246, Max-Change = 0.0009, gam = 0.0233, Max-Change = 0.0039, gam = 0.0222, Max-Change = 0.0026, gam = 0.0212, Max-Change = 0.0005, gam = 0.0203, Max-Change = 0.0010, gam = 0.0195, Max-Change = 0.0004 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood... summary(rmod3) #>  #> Call: #> mixedmirt(data = data, covdata = covdata, model = 1, fixed = ~0 +  #>     items, random = ~-1 + pseudoIQ | group) #>  #>  #> -------------- #> RANDOM EFFECT COVARIANCE(S): #> Correlations on upper diagonal #>  #> $Theta #>       F1 #> F1 0.073 #>  #> $group #>              COV_group COV_pseudoIQ #> COV_group        0.903         0.00 #> COV_pseudoIQ     0.000         0.16 #>  eff <- randef(rmod3) str(eff) #> List of 2 #>  $ Theta: num [1:750, 1] -0.0435 0.0259 0.0351 0.0329 -0.0365 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : NULL #>   .. ..$ : chr \"F1\" #>  $ group: num [1:50, 1:2] -1.63 -1.2 -1.37 -1.59 -1.53 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:50] \"G1\" \"G2\" \"G3\" \"G4\" ... #>   .. ..$ : chr [1:2] \"group\" \"pseudoIQ\"  ################################################### ## LLTM, and 2PL version of LLTM data(SAT12) data <- key2binary(SAT12,                    key = c(1,4,5,2,3,1,2,1,3,1,2,4,2,1,5,3,4,4,1,4,3,3,4,1,3,5,1,3,1,5,4,5)) model <- 'Theta = 1-32'  # for unconditional intercept comparison mod <- mirt(data, model, itemtype='Rasch') #>  coef(mod, simplify=TRUE) #> $items #>         a1      d g u #> Item.1   1 -1.077 0 1 #> Item.2   1  0.331 0 1 #> Item.3   1 -1.096 0 1 #> Item.4   1 -0.574 0 1 #> Item.5   1  0.581 0 1 #> Item.6   1 -1.912 0 1 #> Item.7   1  1.342 0 1 #> Item.8   1 -1.593 0 1 #> Item.9   1  2.324 0 1 #> Item.10  1 -0.362 0 1 #> Item.11  1  4.449 0 1 #> Item.12  1 -0.394 0 1 #> Item.13  1  0.791 0 1 #> Item.14  1  1.124 0 1 #> Item.15  1  1.724 0 1 #> Item.16  1 -0.402 0 1 #> Item.17  1  3.620 0 1 #> Item.18  1 -0.709 0 1 #> Item.19  1  0.237 0 1 #> Item.20  1  2.204 0 1 #> Item.21  1  2.684 0 1 #> Item.22  1  2.991 0 1 #> Item.23  1 -0.910 0 1 #> Item.24  1  1.153 0 1 #> Item.25  1 -0.590 0 1 #> Item.26  1 -0.179 0 1 #> Item.27  1  2.094 0 1 #> Item.28  1  0.150 0 1 #> Item.29  1 -0.769 0 1 #> Item.30  1 -0.274 0 1 #> Item.31  1  1.852 0 1 #> Item.32  1 -1.899 0 1 #>  #> $means #> Theta  #>     0  #>  #> $cov #>       Theta #> Theta  0.82 #>   # Suppose that the first 16 items were suspected to be easier than the last 16 items, #   and we wish to test this item structure hypothesis (more intercept designs are possible #   by including more columns). itemdesign <- data.frame(itemorder = factor(c(rep('easier', 16), rep('harder', 16)))) rownames(itemdesign) <- colnames(data) itemdesign #>         itemorder #> Item.1     easier #> Item.2     easier #> Item.3     easier #> Item.4     easier #> Item.5     easier #> Item.6     easier #> Item.7     easier #> Item.8     easier #> Item.9     easier #> Item.10    easier #> Item.11    easier #> Item.12    easier #> Item.13    easier #> Item.14    easier #> Item.15    easier #> Item.16    easier #> Item.17    harder #> Item.18    harder #> Item.19    harder #> Item.20    harder #> Item.21    harder #> Item.22    harder #> Item.23    harder #> Item.24    harder #> Item.25    harder #> Item.26    harder #> Item.27    harder #> Item.28    harder #> Item.29    harder #> Item.30    harder #> Item.31    harder #> Item.32    harder  # notice that the 'fixed = ~ ... + items' argument is omitted LLTM <- mixedmirt(data, model = model, fixed = ~ 0 + itemorder, itemdesign = itemdesign,    SE = TRUE) # SE argument ensures that the information matrix is computed accurately #> , Max-Change = 0.2000, Max-Change = 0.1211, Max-Change = 0.0434, Max-Change = 0.0359, Max-Change = 0.0327, Max-Change = 0.0388, Max-Change = 0.0141, Max-Change = 0.0267, Max-Change = 0.0141, Max-Change = 0.0104, Max-Change = 0.0137, Max-Change = 0.0148, Max-Change = 0.0114, Max-Change = 0.0116, Max-Change = 0.0112, Max-Change = 0.0118, Max-Change = 0.0093, Max-Change = 0.0096, Max-Change = 0.0059, Max-Change = 0.0056, Max-Change = 0.0114, Max-Change = 0.0124, Max-Change = 0.0062, Max-Change = 0.0059, Max-Change = 0.0072, Max-Change = 0.0089, Max-Change = 0.0046, Max-Change = 0.0061, Max-Change = 0.0051, Max-Change = 0.0022, Max-Change = 0.0050, Max-Change = 0.0068, Max-Change = 0.0016, Max-Change = 0.0028, Max-Change = 0.0049, Max-Change = 0.0067, Max-Change = 0.0019, Max-Change = 0.0038, Max-Change = 0.0054, Max-Change = 0.0082, Max-Change = 0.0038, Max-Change = 0.0019, Max-Change = 0.0055, Max-Change = 0.0044, Max-Change = 0.0065, Max-Change = 0.0020, Max-Change = 0.0034, Max-Change = 0.0029, Max-Change = 0.0062, Max-Change = 0.0021, Max-Change = 0.0029, Max-Change = 0.0023, Max-Change = 0.0030, Max-Change = 0.0008, Max-Change = 0.0130, Max-Change = 0.0023, Max-Change = 0.0062, Max-Change = 0.0028, Max-Change = 0.0057, Max-Change = 0.0035, Max-Change = 0.0029, Max-Change = 0.0017, Max-Change = 0.0020, Max-Change = 0.0012, Max-Change = 0.0021, Max-Change = 0.0028, Max-Change = 0.0012, Max-Change = 0.0020, Max-Change = 0.0019, Max-Change = 0.0036, Max-Change = 0.0029, Max-Change = 0.0029, Max-Change = 0.0051, Max-Change = 0.0044, Max-Change = 0.0053, Max-Change = 0.0021, Max-Change = 0.0016, Max-Change = 0.0037, Max-Change = 0.0021, Max-Change = 0.0044, Max-Change = 0.0073, Max-Change = 0.0023, Max-Change = 0.0070, Max-Change = 0.0025, Max-Change = 0.0043, Max-Change = 0.0035, Max-Change = 0.0026, Max-Change = 0.0011, Max-Change = 0.0024, Max-Change = 0.0019, Max-Change = 0.0024, Max-Change = 0.0031, Max-Change = 0.0037, Max-Change = 0.0065, Max-Change = 0.0016, Max-Change = 0.0041, Max-Change = 0.0015, Max-Change = 0.0028, Max-Change = 0.0038, Max-Change = 0.0031, Max-Change = 0.0016, Max-Change = 0.0069, Max-Change = 0.0031, Max-Change = 0.0026, Max-Change = 0.0034, Max-Change = 0.0028, Max-Change = 0.0035, Max-Change = 0.0050, Max-Change = 0.0047, Max-Change = 0.0036, Max-Change = 0.0028, Max-Change = 0.0040, Max-Change = 0.0049, Max-Change = 0.0024, Max-Change = 0.0062, Max-Change = 0.0044, Max-Change = 0.0023, Max-Change = 0.0040, Max-Change = 0.0037, Max-Change = 0.0031, Max-Change = 0.0024, Max-Change = 0.0037, Max-Change = 0.0040, Max-Change = 0.0030, Max-Change = 0.0023, Max-Change = 0.0020, Max-Change = 0.0022, Max-Change = 0.0064, Max-Change = 0.0008, Max-Change = 0.0028, Max-Change = 0.0063, Max-Change = 0.0073, Max-Change = 0.0020, Max-Change = 0.0055, Max-Change = 0.0041, Max-Change = 0.0032, Max-Change = 0.0033, Max-Change = 0.0030, Max-Change = 0.0027, Max-Change = 0.0036, Max-Change = 0.0049, Max-Change = 0.0020, Max-Change = 0.0024, Max-Change = 0.0041, Max-Change = 0.0026, Max-Change = 0.0031, Max-Change = 0.0018, Max-Change = 0.0002, Max-Change = 0.0031, Max-Change = 0.0031, Max-Change = 0.0054, Max-Change = 0.0037, Max-Change = 0.0008, Max-Change = 0.0040, Max-Change = 0.0019, Max-Change = 0.0045, Max-Change = 0.0029, Max-Change = 0.0032, Max-Change = 0.0029, Max-Change = 0.0013, Max-Change = 0.0032, Max-Change = 0.0034, Max-Change = 0.0036, Max-Change = 0.0046, Max-Change = 0.0044, Max-Change = 0.0075, Max-Change = 0.0045, Max-Change = 0.0043, Max-Change = 0.0046, Max-Change = 0.0012, Max-Change = 0.0027, Max-Change = 0.0060, Max-Change = 0.0018, Max-Change = 0.0031, Max-Change = 0.0019, Max-Change = 0.0085, Max-Change = 0.0035, Max-Change = 0.0013, Max-Change = 0.0054, Max-Change = 0.0023, Max-Change = 0.0016, Max-Change = 0.0031, Max-Change = 0.0021, Max-Change = 0.0027, Max-Change = 0.0059, Max-Change = 0.0024, Max-Change = 0.0027, Max-Change = 0.0041, Max-Change = 0.0032, Max-Change = 0.0014, Max-Change = 0.0021, Max-Change = 0.0075, Max-Change = 0.0044, Max-Change = 0.0061, Max-Change = 0.0026, Max-Change = 0.0014, Max-Change = 0.0076, Max-Change = 0.0022, Max-Change = 0.0014, Max-Change = 0.0052, Max-Change = 0.0035, Max-Change = 0.0014, Max-Change = 0.0029, Max-Change = 0.0028, Max-Change = 0.0006, Max-Change = 0.0050, Max-Change = 0.0027, Max-Change = 0.0054, Max-Change = 0.0038, Max-Change = 0.0051, Max-Change = 0.0040, Max-Change = 0.0028, Max-Change = 0.0055, Max-Change = 0.0050, Max-Change = 0.0020, Max-Change = 0.0037, Max-Change = 0.0067, Max-Change = 0.0031, Max-Change = 0.0011, Max-Change = 0.0024, Max-Change = 0.0075, Max-Change = 0.0025, Max-Change = 0.0044, Max-Change = 0.0043, Max-Change = 0.0024, Max-Change = 0.0034, Max-Change = 0.0008, Max-Change = 0.0025, Max-Change = 0.0021, Max-Change = 0.0031, Max-Change = 0.0038, Max-Change = 0.0012, Max-Change = 0.0064, Max-Change = 0.0045, Max-Change = 0.0014, Max-Change = 0.0030, Max-Change = 0.0028, Max-Change = 0.0024, Max-Change = 0.0055, Max-Change = 0.0039, Max-Change = 0.0063, Max-Change = 0.0022, Max-Change = 0.0013, Max-Change = 0.0015, Max-Change = 0.0027, Max-Change = 0.0006, Max-Change = 0.0032, Max-Change = 0.0020, Max-Change = 0.0071, Max-Change = 0.0010, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0050, gam = 0.1057, Max-Change = 0.0015, gam = 0.0780, Max-Change = 0.0014, gam = 0.0629, Max-Change = 0.0005, gam = 0.0532, Max-Change = 0.0005, gam = 0.0464, Max-Change = 0.0008 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood... summary(LLTM) #>  #> Call: #> mixedmirt(data = data, model = model, fixed = ~0 + itemorder,  #>     itemdesign = itemdesign, SE = TRUE) #>  #> -------------- #> FIXED EFFECTS: #>                 Estimate Std.Error z.value #> itemordereasier    0.165     0.029   5.746 #> itemorderharder    0.456     0.029  15.757 #>  #> -------------- #> RANDOM EFFECT COVARIANCE(S): #> Correlations on upper diagonal #>  #> $Theta #>       Theta #> Theta 0.359 #>  coef(LLTM) #> $Item.1 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.2 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.3 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.4 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.5 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.6 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.7 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.8 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.9 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.10 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.11 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.12 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.13 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.14 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.15 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.16 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.17 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.18 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.19 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.20 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.21 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.22 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.23 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.24 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.25 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.26 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.27 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.28 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.29 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.30 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.31 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $Item.32 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.165           0.456  1  0  0  1 #> CI_2.5            0.109           0.400 NA NA NA NA #> CI_97.5           0.221           0.513 NA NA NA NA #>  #> $GroupPars #>         MEAN_1 COV_11 #> par          0  0.359 #> CI_2.5      NA  0.300 #> CI_97.5     NA  0.417 #>  wald(LLTM) #> itemordereasier.1.7.13.19.25.31.37.43.49.55.61.67.73.79.85.91.97.103.109.115.121.127.133.139.145.151.157.163.169.175.181.187  #>                                                                                                                        0.165  #> itemorderharder.2.8.14.20.26.32.38.44.50.56.62.68.74.80.86.92.98.104.110.116.122.128.134.140.146.152.158.164.170.176.182.188  #>                                                                                                                        0.456  #>                                                                                                                   COV_11.194  #>                                                                                                                        0.359  L <- matrix(c(-1, 1, 0), 1) wald(LLTM, L) #first half different from second #>          W df p #> 1 92.08467  1 0  # compare to items with estimated slopes (2PL) twoPL <- mixedmirt(data, model = model, fixed = ~ 0 + itemorder, itemtype = '2PL',                    itemdesign = itemdesign) #> , Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.1442, Max-Change = 0.1334, Max-Change = 0.1011, Max-Change = 0.1513, Max-Change = 0.1542, Max-Change = 0.1931, Max-Change = 0.1260, Max-Change = 0.1033, Max-Change = 0.0642, Max-Change = 0.0382, Max-Change = 0.0362, Max-Change = 0.0938, Max-Change = 0.1657, Max-Change = 0.0519, Max-Change = 0.0473, Max-Change = 0.0912, Max-Change = 0.1021, Max-Change = 0.0542, Max-Change = 0.0314, Max-Change = 0.0865, Max-Change = 0.1497, Max-Change = 0.0749, Max-Change = 0.0938, Max-Change = 0.0806, Max-Change = 0.0620, Max-Change = 0.1095, Max-Change = 0.0995, Max-Change = 0.0615, Max-Change = 0.0376, Max-Change = 0.0565, Max-Change = 0.1273, Max-Change = 0.0580, Max-Change = 0.0892, Max-Change = 0.1018, Max-Change = 0.1197, Max-Change = 0.0277, Max-Change = 0.0370, Max-Change = 0.0888, Max-Change = 0.1287, Max-Change = 0.0706, Max-Change = 0.0717, Max-Change = 0.1049, Max-Change = 0.0358, Max-Change = 0.0426, Max-Change = 0.0958, Max-Change = 0.0737, Max-Change = 0.0686, Max-Change = 0.0378, Max-Change = 0.0280, Max-Change = 0.0456, Max-Change = 0.0404, Max-Change = 0.0484, Max-Change = 0.0489, Max-Change = 0.0659, Max-Change = 0.0907, Max-Change = 0.0830, Max-Change = 0.0461, Max-Change = 0.0758, Max-Change = 0.0964, Max-Change = 0.0503, Max-Change = 0.1839, Max-Change = 0.0628, Max-Change = 0.0445, Max-Change = 0.0308, Max-Change = 0.1108, Max-Change = 0.0750, Max-Change = 0.0491, Max-Change = 0.1908, Max-Change = 0.0673, Max-Change = 0.1160, Max-Change = 0.0179, Max-Change = 0.0481, Max-Change = 0.1369, Max-Change = 0.0348, Max-Change = 0.0430, Max-Change = 0.0454, Max-Change = 0.0662, Max-Change = 0.1296, Max-Change = 0.0452, Max-Change = 0.0481, Max-Change = 0.1019, Max-Change = 0.0639, Max-Change = 0.0883, Max-Change = 0.0408, Max-Change = 0.1144, Max-Change = 0.0848, Max-Change = 0.0220, Max-Change = 0.0204, Max-Change = 0.1042, Max-Change = 0.0727, Max-Change = 0.0235, Max-Change = 0.1152, Max-Change = 0.1283, Max-Change = 0.2000, Max-Change = 0.1024, Max-Change = 0.0790, Max-Change = 0.0530, Max-Change = 0.1599, Max-Change = 0.0882, Max-Change = 0.0701, Max-Change = 0.0432, Max-Change = 0.0908, Max-Change = 0.0740, Max-Change = 0.0306, Max-Change = 0.1226, Max-Change = 0.0799, Max-Change = 0.0216, Max-Change = 0.0709, Max-Change = 0.0772, Max-Change = 0.0427, Max-Change = 0.0283, Max-Change = 0.1534, Max-Change = 0.0620, Max-Change = 0.1452, Max-Change = 0.0580, Max-Change = 0.1788, Max-Change = 0.0190, Max-Change = 0.0533, Max-Change = 0.0625, Max-Change = 0.0330, Max-Change = 0.0542, Max-Change = 0.1262, Max-Change = 0.0511, Max-Change = 0.0660, Max-Change = 0.0970, Max-Change = 0.0928, Max-Change = 0.0803, Max-Change = 0.0857, Max-Change = 0.0280, Max-Change = 0.1594, Max-Change = 0.0863, Max-Change = 0.0378, Max-Change = 0.0311, Max-Change = 0.0886, Max-Change = 0.0715, Max-Change = 0.1207, Max-Change = 0.0359, Max-Change = 0.0906, Max-Change = 0.1337, Max-Change = 0.0909, Max-Change = 0.0324, Max-Change = 0.1398, Max-Change = 0.1323, Max-Change = 0.0913, Max-Change = 0.0333, Max-Change = 0.0595, Max-Change = 0.0449, Max-Change = 0.1344, Max-Change = 0.2000, Max-Change = 0.0278, Max-Change = 0.0459, Max-Change = 0.1154, Max-Change = 0.0319, Max-Change = 0.0714, Max-Change = 0.1099, Max-Change = 0.0942, Max-Change = 0.0636, Max-Change = 0.0819, Max-Change = 0.0860, Max-Change = 0.0412, Max-Change = 0.2000, Max-Change = 0.0422, Max-Change = 0.1284, Max-Change = 0.0594, Max-Change = 0.0843, Max-Change = 0.0775, Max-Change = 0.0348, Max-Change = 0.1056, Max-Change = 0.0353, Max-Change = 0.0363, Max-Change = 0.1896, Max-Change = 0.0535, Max-Change = 0.0978, Max-Change = 0.0959, Max-Change = 0.0827, Max-Change = 0.0291, Max-Change = 0.1093, Max-Change = 0.0862, Max-Change = 0.1114, Max-Change = 0.0440, Max-Change = 0.0922, Max-Change = 0.0546, Max-Change = 0.0655, Max-Change = 0.1098, Max-Change = 0.0620, Max-Change = 0.0964, Max-Change = 0.1176, Max-Change = 0.0687, Max-Change = 0.0395, Max-Change = 0.1172, Max-Change = 0.1350, Max-Change = 0.1815, Max-Change = 0.0760, Max-Change = 0.0625, Max-Change = 0.0623, Max-Change = 0.1998, Max-Change = 0.0979, Max-Change = 0.1779, Max-Change = 0.0804, Max-Change = 0.1349, Max-Change = 0.0441, Max-Change = 0.0772, Max-Change = 0.1331, Max-Change = 0.1961, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0468, gam = 0.1057, Max-Change = 0.0182, gam = 0.0780, Max-Change = 0.0097, gam = 0.0629, Max-Change = 0.0159, gam = 0.0532, Max-Change = 0.0087, gam = 0.0464, Max-Change = 0.0160, gam = 0.0413, Max-Change = 0.0233, gam = 0.0374, Max-Change = 0.0305, gam = 0.0342, Max-Change = 0.0305, gam = 0.0316, Max-Change = 0.0061, gam = 0.0294, Max-Change = 0.0088, gam = 0.0276, Max-Change = 0.0146, gam = 0.0260, Max-Change = 0.0119, gam = 0.0246, Max-Change = 0.0078, gam = 0.0233, Max-Change = 0.0162, gam = 0.0222, Max-Change = 0.0076, gam = 0.0212, Max-Change = 0.0183, gam = 0.0203, Max-Change = 0.0075, gam = 0.0195, Max-Change = 0.0028, gam = 0.0188, Max-Change = 0.0026, gam = 0.0181, Max-Change = 0.0044, gam = 0.0175, Max-Change = 0.0026, gam = 0.0169, Max-Change = 0.0029, gam = 0.0164, Max-Change = 0.0043, gam = 0.0159, Max-Change = 0.0071, gam = 0.0154, Max-Change = 0.0045, gam = 0.0150, Max-Change = 0.0026, gam = 0.0146, Max-Change = 0.0028, gam = 0.0142, Max-Change = 0.0063, gam = 0.0139, Max-Change = 0.0102, gam = 0.0135, Max-Change = 0.0182, gam = 0.0132, Max-Change = 0.0051, gam = 0.0129, Max-Change = 0.0043, gam = 0.0126, Max-Change = 0.0050, gam = 0.0124, Max-Change = 0.0074, gam = 0.0121, Max-Change = 0.0018, gam = 0.0119, Max-Change = 0.0029, gam = 0.0116, Max-Change = 0.0115, gam = 0.0114, Max-Change = 0.0030, gam = 0.0112, Max-Change = 0.0032, gam = 0.0110, Max-Change = 0.0031, gam = 0.0108, Max-Change = 0.0034, gam = 0.0106, Max-Change = 0.0090, gam = 0.0104, Max-Change = 0.0032, gam = 0.0102, Max-Change = 0.0048, gam = 0.0101, Max-Change = 0.0014, gam = 0.0099, Max-Change = 0.0040, gam = 0.0098, Max-Change = 0.0042, gam = 0.0096, Max-Change = 0.0083, gam = 0.0095, Max-Change = 0.0041, gam = 0.0093, Max-Change = 0.0031, gam = 0.0092, Max-Change = 0.0018, gam = 0.0091, Max-Change = 0.0060, gam = 0.0089, Max-Change = 0.0014, gam = 0.0088, Max-Change = 0.0051, gam = 0.0087, Max-Change = 0.0093, gam = 0.0086, Max-Change = 0.0104, gam = 0.0085, Max-Change = 0.0017, gam = 0.0084, Max-Change = 0.0053, gam = 0.0082, Max-Change = 0.0017, gam = 0.0081, Max-Change = 0.0012, gam = 0.0080, Max-Change = 0.0032, gam = 0.0080, Max-Change = 0.0047, gam = 0.0079, Max-Change = 0.0016, gam = 0.0078, Max-Change = 0.0063, gam = 0.0077, Max-Change = 0.0021, gam = 0.0076, Max-Change = 0.0013, gam = 0.0075, Max-Change = 0.0016, gam = 0.0074, Max-Change = 0.0012, gam = 0.0073, Max-Change = 0.0017, gam = 0.0073, Max-Change = 0.0027, gam = 0.0072, Max-Change = 0.0019, gam = 0.0071, Max-Change = 0.0018, gam = 0.0070, Max-Change = 0.0038, gam = 0.0070, Max-Change = 0.0019, gam = 0.0069, Max-Change = 0.0021, gam = 0.0068, Max-Change = 0.0023, gam = 0.0068, Max-Change = 0.0064, gam = 0.0067, Max-Change = 0.0011, gam = 0.0066, Max-Change = 0.0022, gam = 0.0066, Max-Change = 0.0022, gam = 0.0065, Max-Change = 0.0008, gam = 0.0065, Max-Change = 0.0018, gam = 0.0064, Max-Change = 0.0019, gam = 0.0064, Max-Change = 0.0021, gam = 0.0063, Max-Change = 0.0035, gam = 0.0062, Max-Change = 0.0023, gam = 0.0062, Max-Change = 0.0014, gam = 0.0061, Max-Change = 0.0013, gam = 0.0061, Max-Change = 0.0028, gam = 0.0060, Max-Change = 0.0055, gam = 0.0060, Max-Change = 0.0030, gam = 0.0059, Max-Change = 0.0029, gam = 0.0059, Max-Change = 0.0025, gam = 0.0058, Max-Change = 0.0026, gam = 0.0058, Max-Change = 0.0021, gam = 0.0058, Max-Change = 0.0017, gam = 0.0057, Max-Change = 0.0016, gam = 0.0057, Max-Change = 0.0056, gam = 0.0056, Max-Change = 0.0021, gam = 0.0056, Max-Change = 0.0011, gam = 0.0055, Max-Change = 0.0018, gam = 0.0055, Max-Change = 0.0034, gam = 0.0055, Max-Change = 0.0019, gam = 0.0054, Max-Change = 0.0007, gam = 0.0054, Max-Change = 0.0020, gam = 0.0053, Max-Change = 0.0019, gam = 0.0053, Max-Change = 0.0032, gam = 0.0053, Max-Change = 0.0030, gam = 0.0052, Max-Change = 0.0024, gam = 0.0052, Max-Change = 0.0029, gam = 0.0052, Max-Change = 0.0014, gam = 0.0051, Max-Change = 0.0017, gam = 0.0051, Max-Change = 0.0045, gam = 0.0051, Max-Change = 0.0023, gam = 0.0050, Max-Change = 0.0024, gam = 0.0050, Max-Change = 0.0018, gam = 0.0050, Max-Change = 0.0020, gam = 0.0049, Max-Change = 0.0011, gam = 0.0049, Max-Change = 0.0010, gam = 0.0049, Max-Change = 0.0007, gam = 0.0048, Max-Change = 0.0018, gam = 0.0048, Max-Change = 0.0034, gam = 0.0048, Max-Change = 0.0037, gam = 0.0048, Max-Change = 0.0018, gam = 0.0047, Max-Change = 0.0018, gam = 0.0047, Max-Change = 0.0005, gam = 0.0047, Max-Change = 0.0036, gam = 0.0046, Max-Change = 0.0017, gam = 0.0046, Max-Change = 0.0010, gam = 0.0046, Max-Change = 0.0020, gam = 0.0046, Max-Change = 0.0016, gam = 0.0045, Max-Change = 0.0022, gam = 0.0045, Max-Change = 0.0008, gam = 0.0045, Max-Change = 0.0031, gam = 0.0045, Max-Change = 0.0011, gam = 0.0044, Max-Change = 0.0013, gam = 0.0044, Max-Change = 0.0016, gam = 0.0044, Max-Change = 0.0031, gam = 0.0044, Max-Change = 0.0027, gam = 0.0043, Max-Change = 0.0013, gam = 0.0043, Max-Change = 0.0033, gam = 0.0043, Max-Change = 0.0022, gam = 0.0043, Max-Change = 0.0024, gam = 0.0043, Max-Change = 0.0007, gam = 0.0042, Max-Change = 0.0015, gam = 0.0042, Max-Change = 0.0030, gam = 0.0042, Max-Change = 0.0014, gam = 0.0042, Max-Change = 0.0015, gam = 0.0041, Max-Change = 0.0012, gam = 0.0041, Max-Change = 0.0013, gam = 0.0041, Max-Change = 0.0032, gam = 0.0041, Max-Change = 0.0025, gam = 0.0041, Max-Change = 0.0008, gam = 0.0040, Max-Change = 0.0015, gam = 0.0040, Max-Change = 0.0012, gam = 0.0040, Max-Change = 0.0010, gam = 0.0040, Max-Change = 0.0017, gam = 0.0040, Max-Change = 0.0020, gam = 0.0040, Max-Change = 0.0017, gam = 0.0039, Max-Change = 0.0031, gam = 0.0039, Max-Change = 0.0007, gam = 0.0039, Max-Change = 0.0017, gam = 0.0039, Max-Change = 0.0013, gam = 0.0039, Max-Change = 0.0014, gam = 0.0038, Max-Change = 0.0016, gam = 0.0038, Max-Change = 0.0010, gam = 0.0038, Max-Change = 0.0015, gam = 0.0038, Max-Change = 0.0006, gam = 0.0038, Max-Change = 0.0020, gam = 0.0038, Max-Change = 0.0009, gam = 0.0037, Max-Change = 0.0018, gam = 0.0037, Max-Change = 0.0020, gam = 0.0037, Max-Change = 0.0009, gam = 0.0037, Max-Change = 0.0017, gam = 0.0037, Max-Change = 0.0011, gam = 0.0037, Max-Change = 0.0004, gam = 0.0036, Max-Change = 0.0011, gam = 0.0036, Max-Change = 0.0011, gam = 0.0036, Max-Change = 0.0013, gam = 0.0036, Max-Change = 0.0039, gam = 0.0036, Max-Change = 0.0023, gam = 0.0036, Max-Change = 0.0013, gam = 0.0036, Max-Change = 0.0013, gam = 0.0035, Max-Change = 0.0012, gam = 0.0035, Max-Change = 0.0028, gam = 0.0035, Max-Change = 0.0011, gam = 0.0035, Max-Change = 0.0021, gam = 0.0035, Max-Change = 0.0020, gam = 0.0035, Max-Change = 0.0018, gam = 0.0035, Max-Change = 0.0012, gam = 0.0034, Max-Change = 0.0007, gam = 0.0034, Max-Change = 0.0011, gam = 0.0034, Max-Change = 0.0011, gam = 0.0034, Max-Change = 0.0007, gam = 0.0034, Max-Change = 0.0034, gam = 0.0034, Max-Change = 0.0012, gam = 0.0034, Max-Change = 0.0008, gam = 0.0034, Max-Change = 0.0009, gam = 0.0033, Max-Change = 0.0007 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood... # twoPL not mixing too well (AR should be between .2 and .5), decrease MHcand twoPL <- mixedmirt(data, model = model, fixed = ~ 0 + itemorder, itemtype = '2PL',                   itemdesign = itemdesign, technical = list(MHcand = 0.8)) #> , Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.1580, Max-Change = 0.1493, Max-Change = 0.1590, Max-Change = 0.1453, Max-Change = 0.1497, Max-Change = 0.2000, Max-Change = 0.1382, Max-Change = 0.1473, Max-Change = 0.0963, Max-Change = 0.0840, Max-Change = 0.0516, Max-Change = 0.0416, Max-Change = 0.0567, Max-Change = 0.0582, Max-Change = 0.0715, Max-Change = 0.0502, Max-Change = 0.0950, Max-Change = 0.0412, Max-Change = 0.0287, Max-Change = 0.0941, Max-Change = 0.1107, Max-Change = 0.1413, Max-Change = 0.1043, Max-Change = 0.0567, Max-Change = 0.0544, Max-Change = 0.0555, Max-Change = 0.0547, Max-Change = 0.0563, Max-Change = 0.0415, Max-Change = 0.0593, Max-Change = 0.0620, Max-Change = 0.0563, Max-Change = 0.1559, Max-Change = 0.1268, Max-Change = 0.0883, Max-Change = 0.1939, Max-Change = 0.0395, Max-Change = 0.0775, Max-Change = 0.1430, Max-Change = 0.2000, Max-Change = 0.0591, Max-Change = 0.0400, Max-Change = 0.0300, Max-Change = 0.0472, Max-Change = 0.0765, Max-Change = 0.0602, Max-Change = 0.0876, Max-Change = 0.0224, Max-Change = 0.0339, Max-Change = 0.0400, Max-Change = 0.0394, Max-Change = 0.0533, Max-Change = 0.0396, Max-Change = 0.0462, Max-Change = 0.0959, Max-Change = 0.0746, Max-Change = 0.1065, Max-Change = 0.1064, Max-Change = 0.1416, Max-Change = 0.1050, Max-Change = 0.0815, Max-Change = 0.0823, Max-Change = 0.2000, Max-Change = 0.0448, Max-Change = 0.0489, Max-Change = 0.0875, Max-Change = 0.0658, Max-Change = 0.1561, Max-Change = 0.1379, Max-Change = 0.1195, Max-Change = 0.1394, Max-Change = 0.1107, Max-Change = 0.0919, Max-Change = 0.0363, Max-Change = 0.0454, Max-Change = 0.0601, Max-Change = 0.0507, Max-Change = 0.0918, Max-Change = 0.0841, Max-Change = 0.0292, Max-Change = 0.0758, Max-Change = 0.0761, Max-Change = 0.1493, Max-Change = 0.0472, Max-Change = 0.1030, Max-Change = 0.0278, Max-Change = 0.0412, Max-Change = 0.0247, Max-Change = 0.0416, Max-Change = 0.1399, Max-Change = 0.1462, Max-Change = 0.2000, Max-Change = 0.0908, Max-Change = 0.2000, Max-Change = 0.1294, Max-Change = 0.0560, Max-Change = 0.0362, Max-Change = 0.1113, Max-Change = 0.0892, Max-Change = 0.0927, Max-Change = 0.0413, Max-Change = 0.0558, Max-Change = 0.0763, Max-Change = 0.1423, Max-Change = 0.0551, Max-Change = 0.0409, Max-Change = 0.0732, Max-Change = 0.1227, Max-Change = 0.0615, Max-Change = 0.1213, Max-Change = 0.1253, Max-Change = 0.0463, Max-Change = 0.0600, Max-Change = 0.1780, Max-Change = 0.1414, Max-Change = 0.0771, Max-Change = 0.1539, Max-Change = 0.0594, Max-Change = 0.0397, Max-Change = 0.0837, Max-Change = 0.0690, Max-Change = 0.0433, Max-Change = 0.0624, Max-Change = 0.0244, Max-Change = 0.0493, Max-Change = 0.1388, Max-Change = 0.0777, Max-Change = 0.0834, Max-Change = 0.0300, Max-Change = 0.0289, Max-Change = 0.0614, Max-Change = 0.1249, Max-Change = 0.0689, Max-Change = 0.0364, Max-Change = 0.0754, Max-Change = 0.1376, Max-Change = 0.0851, Max-Change = 0.0522, Max-Change = 0.0723, Max-Change = 0.0945, Max-Change = 0.1353, Max-Change = 0.0725, Max-Change = 0.0754, Max-Change = 0.1172, Max-Change = 0.0907, Max-Change = 0.2000, Max-Change = 0.0900, Max-Change = 0.0957, Max-Change = 0.1489, Max-Change = 0.0403, Max-Change = 0.0805, Max-Change = 0.1271, Max-Change = 0.0559, Max-Change = 0.0699, Max-Change = 0.0948, Max-Change = 0.0515, Max-Change = 0.0648, Max-Change = 0.1273, Max-Change = 0.0964, Max-Change = 0.0342, Max-Change = 0.1370, Max-Change = 0.0237, Max-Change = 0.0425, Max-Change = 0.0494, Max-Change = 0.0508, Max-Change = 0.0394, Max-Change = 0.1035, Max-Change = 0.0739, Max-Change = 0.0707, Max-Change = 0.0908, Max-Change = 0.0850, Max-Change = 0.0558, Max-Change = 0.1103, Max-Change = 0.1808, Max-Change = 0.1738, Max-Change = 0.1432, Max-Change = 0.0501, Max-Change = 0.2000, Max-Change = 0.0585, Max-Change = 0.1046, Max-Change = 0.1443, Max-Change = 0.1918, Max-Change = 0.0686, Max-Change = 0.0578, Max-Change = 0.0658, Max-Change = 0.0790, Max-Change = 0.1219, Max-Change = 0.1074, Max-Change = 0.1143, Max-Change = 0.1944, Max-Change = 0.2000, Max-Change = 0.0279, Max-Change = 0.1737, Max-Change = 0.0589, Max-Change = 0.1507, Max-Change = 0.1349, Max-Change = 0.0647, Max-Change = 0.1399, Max-Change = 0.0462, Max-Change = 0.1044, Max-Change = 0.0908, Max-Change = 0.0564, Max-Change = 0.0726, Max-Change = 0.1225, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0746, gam = 0.1057, Max-Change = 0.0272, gam = 0.0780, Max-Change = 0.0412, gam = 0.0629, Max-Change = 0.0188, gam = 0.0532, Max-Change = 0.0088, gam = 0.0464, Max-Change = 0.0202, gam = 0.0413, Max-Change = 0.0106, gam = 0.0374, Max-Change = 0.0108, gam = 0.0342, Max-Change = 0.0181, gam = 0.0316, Max-Change = 0.0109, gam = 0.0294, Max-Change = 0.0220, gam = 0.0276, Max-Change = 0.0024, gam = 0.0260, Max-Change = 0.0170, gam = 0.0246, Max-Change = 0.0048, gam = 0.0233, Max-Change = 0.0220, gam = 0.0222, Max-Change = 0.0166, gam = 0.0212, Max-Change = 0.0132, gam = 0.0203, Max-Change = 0.0060, gam = 0.0195, Max-Change = 0.0056, gam = 0.0188, Max-Change = 0.0016, gam = 0.0181, Max-Change = 0.0061, gam = 0.0175, Max-Change = 0.0037, gam = 0.0169, Max-Change = 0.0085, gam = 0.0164, Max-Change = 0.0039, gam = 0.0159, Max-Change = 0.0031, gam = 0.0154, Max-Change = 0.0112, gam = 0.0150, Max-Change = 0.0045, gam = 0.0146, Max-Change = 0.0044, gam = 0.0142, Max-Change = 0.0059, gam = 0.0139, Max-Change = 0.0052, gam = 0.0135, Max-Change = 0.0117, gam = 0.0132, Max-Change = 0.0068, gam = 0.0129, Max-Change = 0.0021, gam = 0.0126, Max-Change = 0.0019, gam = 0.0124, Max-Change = 0.0023, gam = 0.0121, Max-Change = 0.0069, gam = 0.0119, Max-Change = 0.0021, gam = 0.0116, Max-Change = 0.0033, gam = 0.0114, Max-Change = 0.0018, gam = 0.0112, Max-Change = 0.0051, gam = 0.0110, Max-Change = 0.0019, gam = 0.0108, Max-Change = 0.0025, gam = 0.0106, Max-Change = 0.0068, gam = 0.0104, Max-Change = 0.0052, gam = 0.0102, Max-Change = 0.0087, gam = 0.0101, Max-Change = 0.0064, gam = 0.0099, Max-Change = 0.0088, gam = 0.0098, Max-Change = 0.0082, gam = 0.0096, Max-Change = 0.0075, gam = 0.0095, Max-Change = 0.0048, gam = 0.0093, Max-Change = 0.0023, gam = 0.0092, Max-Change = 0.0030, gam = 0.0091, Max-Change = 0.0031, gam = 0.0089, Max-Change = 0.0021, gam = 0.0088, Max-Change = 0.0045, gam = 0.0087, Max-Change = 0.0025, gam = 0.0086, Max-Change = 0.0039, gam = 0.0085, Max-Change = 0.0046, gam = 0.0084, Max-Change = 0.0100, gam = 0.0082, Max-Change = 0.0049, gam = 0.0081, Max-Change = 0.0032, gam = 0.0080, Max-Change = 0.0046, gam = 0.0080, Max-Change = 0.0049, gam = 0.0079, Max-Change = 0.0015, gam = 0.0078, Max-Change = 0.0015, gam = 0.0077, Max-Change = 0.0033, gam = 0.0076, Max-Change = 0.0011, gam = 0.0075, Max-Change = 0.0021, gam = 0.0074, Max-Change = 0.0011, gam = 0.0073, Max-Change = 0.0030, gam = 0.0073, Max-Change = 0.0022, gam = 0.0072, Max-Change = 0.0013, gam = 0.0071, Max-Change = 0.0025, gam = 0.0070, Max-Change = 0.0018, gam = 0.0070, Max-Change = 0.0041, gam = 0.0069, Max-Change = 0.0017, gam = 0.0068, Max-Change = 0.0009, gam = 0.0068, Max-Change = 0.0009, gam = 0.0067, Max-Change = 0.0033, gam = 0.0066, Max-Change = 0.0023, gam = 0.0066, Max-Change = 0.0013, gam = 0.0065, Max-Change = 0.0049, gam = 0.0065, Max-Change = 0.0013, gam = 0.0064, Max-Change = 0.0012, gam = 0.0064, Max-Change = 0.0048, gam = 0.0063, Max-Change = 0.0051, gam = 0.0062, Max-Change = 0.0041, gam = 0.0062, Max-Change = 0.0081, gam = 0.0061, Max-Change = 0.0026, gam = 0.0061, Max-Change = 0.0031, gam = 0.0060, Max-Change = 0.0029, gam = 0.0060, Max-Change = 0.0040, gam = 0.0059, Max-Change = 0.0034, gam = 0.0059, Max-Change = 0.0018, gam = 0.0058, Max-Change = 0.0015, gam = 0.0058, Max-Change = 0.0046, gam = 0.0058, Max-Change = 0.0012, gam = 0.0057, Max-Change = 0.0017, gam = 0.0057, Max-Change = 0.0007, gam = 0.0056, Max-Change = 0.0009, gam = 0.0056, Max-Change = 0.0025, gam = 0.0055, Max-Change = 0.0017, gam = 0.0055, Max-Change = 0.0020, gam = 0.0055, Max-Change = 0.0016, gam = 0.0054, Max-Change = 0.0013, gam = 0.0054, Max-Change = 0.0015, gam = 0.0053, Max-Change = 0.0018, gam = 0.0053, Max-Change = 0.0012, gam = 0.0053, Max-Change = 0.0023, gam = 0.0052, Max-Change = 0.0026, gam = 0.0052, Max-Change = 0.0011, gam = 0.0052, Max-Change = 0.0024, gam = 0.0051, Max-Change = 0.0017, gam = 0.0051, Max-Change = 0.0011, gam = 0.0051, Max-Change = 0.0007, gam = 0.0050, Max-Change = 0.0030, gam = 0.0050, Max-Change = 0.0017, gam = 0.0050, Max-Change = 0.0009, gam = 0.0049, Max-Change = 0.0018, gam = 0.0049, Max-Change = 0.0022, gam = 0.0049, Max-Change = 0.0015, gam = 0.0048, Max-Change = 0.0026, gam = 0.0048, Max-Change = 0.0009, gam = 0.0048, Max-Change = 0.0028, gam = 0.0048, Max-Change = 0.0064, gam = 0.0047, Max-Change = 0.0041, gam = 0.0047, Max-Change = 0.0020, gam = 0.0047, Max-Change = 0.0019, gam = 0.0046, Max-Change = 0.0017, gam = 0.0046, Max-Change = 0.0010, gam = 0.0046, Max-Change = 0.0030, gam = 0.0046, Max-Change = 0.0026, gam = 0.0045, Max-Change = 0.0017, gam = 0.0045, Max-Change = 0.0027, gam = 0.0045, Max-Change = 0.0016, gam = 0.0045, Max-Change = 0.0031, gam = 0.0044, Max-Change = 0.0011, gam = 0.0044, Max-Change = 0.0027, gam = 0.0044, Max-Change = 0.0007, gam = 0.0044, Max-Change = 0.0012, gam = 0.0043, Max-Change = 0.0018, gam = 0.0043, Max-Change = 0.0026, gam = 0.0043, Max-Change = 0.0032, gam = 0.0043, Max-Change = 0.0051, gam = 0.0043, Max-Change = 0.0007, gam = 0.0042, Max-Change = 0.0020, gam = 0.0042, Max-Change = 0.0013, gam = 0.0042, Max-Change = 0.0013, gam = 0.0042, Max-Change = 0.0018, gam = 0.0041, Max-Change = 0.0016, gam = 0.0041, Max-Change = 0.0010, gam = 0.0041, Max-Change = 0.0010, gam = 0.0041, Max-Change = 0.0012, gam = 0.0041, Max-Change = 0.0021, gam = 0.0040, Max-Change = 0.0011, gam = 0.0040, Max-Change = 0.0021, gam = 0.0040, Max-Change = 0.0007, gam = 0.0040, Max-Change = 0.0016, gam = 0.0040, Max-Change = 0.0016, gam = 0.0040, Max-Change = 0.0009, gam = 0.0039, Max-Change = 0.0005, gam = 0.0039, Max-Change = 0.0017, gam = 0.0039, Max-Change = 0.0007, gam = 0.0039, Max-Change = 0.0017, gam = 0.0039, Max-Change = 0.0009, gam = 0.0038, Max-Change = 0.0022, gam = 0.0038, Max-Change = 0.0009, gam = 0.0038, Max-Change = 0.0010, gam = 0.0038, Max-Change = 0.0026, gam = 0.0038, Max-Change = 0.0039, gam = 0.0038, Max-Change = 0.0021, gam = 0.0037, Max-Change = 0.0011, gam = 0.0037, Max-Change = 0.0017, gam = 0.0037, Max-Change = 0.0013, gam = 0.0037, Max-Change = 0.0016, gam = 0.0037, Max-Change = 0.0011, gam = 0.0037, Max-Change = 0.0024, gam = 0.0036, Max-Change = 0.0034, gam = 0.0036, Max-Change = 0.0008, gam = 0.0036, Max-Change = 0.0013, gam = 0.0036, Max-Change = 0.0030, gam = 0.0036, Max-Change = 0.0009, gam = 0.0036, Max-Change = 0.0008, gam = 0.0036, Max-Change = 0.0018, gam = 0.0035, Max-Change = 0.0021, gam = 0.0035, Max-Change = 0.0004, gam = 0.0035, Max-Change = 0.0009, gam = 0.0035, Max-Change = 0.0005 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood... anova(twoPL, LLTM) #much better fit #>            AIC    SABIC       HQ      BIC    logLik        X2  df   p #> twoPL 20484.33 20525.88 20542.52 20633.82 -10208.16                   #> LLTM  25464.27 25467.94 25469.41 25477.47 -12729.14 -5041.948 -31 NaN summary(twoPL) #>  #> Call: #> mixedmirt(data = data, model = model, fixed = ~0 + itemorder,  #>     itemtype = \"2PL\", itemdesign = itemdesign, technical = list(MHcand = 0.8)) #>  #> -------------- #> FIXED EFFECTS: #>                 Estimate Std.Error z.value #> itemordereasier   -1.669     0.087 -19.127 #> itemorderharder   -1.644     0.095 -17.316 #>  #> -------------- #> RANDOM EFFECT COVARIANCE(S): #> Correlations on upper diagonal #>  #> $Theta #>       Theta #> Theta     1 #>  coef(twoPL) #> $Item.1 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 0.930  0  0  1 #> CI_2.5           -1.840          -1.831 0.696 NA NA NA #> CI_97.5          -1.498          -1.458 1.165 NA NA NA #>  #> $Item.2 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 2.526  0  0  1 #> CI_2.5           -1.840          -1.831 2.201 NA NA NA #> CI_97.5          -1.498          -1.458 2.851 NA NA NA #>  #> $Item.3 #>         itemordereasier itemorderharder   a1  d  g  u #> par              -1.669          -1.644 1.00  0  0  1 #> CI_2.5           -1.840          -1.831 0.77 NA NA NA #> CI_97.5          -1.498          -1.458 1.23 NA NA NA #>  #> $Item.4 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 1.288  0  0  1 #> CI_2.5           -1.840          -1.831 1.035 NA NA NA #> CI_97.5          -1.498          -1.458 1.540 NA NA NA #>  #> $Item.5 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 2.704  0  0  1 #> CI_2.5           -1.840          -1.831 2.359 NA NA NA #> CI_97.5          -1.498          -1.458 3.049 NA NA NA #>  #> $Item.6 #>         itemordereasier itemorderharder   a1  d  g  u #> par              -1.669          -1.644 0.42  0  0  1 #> CI_2.5           -1.840          -1.831 0.19 NA NA NA #> CI_97.5          -1.498          -1.458 0.65 NA NA NA #>  #> $Item.7 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 3.913  0  0  1 #> CI_2.5           -1.840          -1.831 3.461 NA NA NA #> CI_97.5          -1.498          -1.458 4.365 NA NA NA #>  #> $Item.8 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 0.513  0  0  1 #> CI_2.5           -1.840          -1.831 0.282 NA NA NA #> CI_97.5          -1.498          -1.458 0.744 NA NA NA #>  #> $Item.9 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 5.455  0  0  1 #> CI_2.5           -1.840          -1.831 4.840 NA NA NA #> CI_97.5          -1.498          -1.458 6.071 NA NA NA #>  #> $Item.10 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 1.628  0  0  1 #> CI_2.5           -1.840          -1.831 1.352 NA NA NA #> CI_97.5          -1.498          -1.458 1.905 NA NA NA #>  #> $Item.11 #>         itemordereasier itemorderharder     a1  d  g  u #> par              -1.669          -1.644 13.512  0  0  1 #> CI_2.5           -1.840          -1.831 10.680 NA NA NA #> CI_97.5          -1.498          -1.458 16.344 NA NA NA #>  #> $Item.12 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 1.245  0  0  1 #> CI_2.5           -1.840          -1.831 0.974 NA NA NA #> CI_97.5          -1.498          -1.458 1.515 NA NA NA #>  #> $Item.13 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 3.042  0  0  1 #> CI_2.5           -1.840          -1.831 2.668 NA NA NA #> CI_97.5          -1.498          -1.458 3.416 NA NA NA #>  #> $Item.14 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 3.488  0  0  1 #> CI_2.5           -1.840          -1.831 3.076 NA NA NA #> CI_97.5          -1.498          -1.458 3.899 NA NA NA #>  #> $Item.15 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 4.749  0  0  1 #> CI_2.5           -1.840          -1.831 4.225 NA NA NA #> CI_97.5          -1.498          -1.458 5.272 NA NA NA #>  #> $Item.16 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 1.469  0  0  1 #> CI_2.5           -1.840          -1.831 1.205 NA NA NA #> CI_97.5          -1.498          -1.458 1.733 NA NA NA #>  #> $Item.17 #>         itemordereasier itemorderharder     a1  d  g  u #> par              -1.669          -1.644  9.952  0  0  1 #> CI_2.5           -1.840          -1.831  8.451 NA NA NA #> CI_97.5          -1.498          -1.458 11.454 NA NA NA #>  #> $Item.18 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 1.408  0  0  1 #> CI_2.5           -1.840          -1.831 1.145 NA NA NA #> CI_97.5          -1.498          -1.458 1.670 NA NA NA #>  #> $Item.19 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 2.155  0  0  1 #> CI_2.5           -1.840          -1.831 1.825 NA NA NA #> CI_97.5          -1.498          -1.458 2.486 NA NA NA #>  #> $Item.20 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 5.787  0  0  1 #> CI_2.5           -1.840          -1.831 5.118 NA NA NA #> CI_97.5          -1.498          -1.458 6.456 NA NA NA #>  #> $Item.21 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 6.345  0  0  1 #> CI_2.5           -1.840          -1.831 5.595 NA NA NA #> CI_97.5          -1.498          -1.458 7.094 NA NA NA #>  #> $Item.22 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 7.826  0  0  1 #> CI_2.5           -1.840          -1.831 6.827 NA NA NA #> CI_97.5          -1.498          -1.458 8.824 NA NA NA #>  #> $Item.23 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 0.982  0  0  1 #> CI_2.5           -1.840          -1.831 0.732 NA NA NA #> CI_97.5          -1.498          -1.458 1.231 NA NA NA #>  #> $Item.24 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 3.622  0  0  1 #> CI_2.5           -1.840          -1.831 3.186 NA NA NA #> CI_97.5          -1.498          -1.458 4.057 NA NA NA #>  #> $Item.25 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 1.293  0  0  1 #> CI_2.5           -1.840          -1.831 1.021 NA NA NA #> CI_97.5          -1.498          -1.458 1.565 NA NA NA #>  #> $Item.26 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 1.907  0  0  1 #> CI_2.5           -1.840          -1.831 1.608 NA NA NA #> CI_97.5          -1.498          -1.458 2.205 NA NA NA #>  #> $Item.27 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 5.656  0  0  1 #> CI_2.5           -1.840          -1.831 5.018 NA NA NA #> CI_97.5          -1.498          -1.458 6.293 NA NA NA #>  #> $Item.28 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 2.120  0  0  1 #> CI_2.5           -1.840          -1.831 1.807 NA NA NA #> CI_97.5          -1.498          -1.458 2.433 NA NA NA #>  #> $Item.29 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 1.165  0  0  1 #> CI_2.5           -1.840          -1.831 0.910 NA NA NA #> CI_97.5          -1.498          -1.458 1.420 NA NA NA #>  #> $Item.30 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 1.442  0  0  1 #> CI_2.5           -1.840          -1.831 1.156 NA NA NA #> CI_97.5          -1.498          -1.458 1.727 NA NA NA #>  #> $Item.31 #>         itemordereasier itemorderharder    a1  d  g  u #> par              -1.669          -1.644 5.235  0  0  1 #> CI_2.5           -1.840          -1.831 4.637 NA NA NA #> CI_97.5          -1.498          -1.458 5.832 NA NA NA #>  #> $Item.32 #>         itemordereasier itemorderharder     a1  d  g  u #> par              -1.669          -1.644  0.097  0  0  1 #> CI_2.5           -1.840          -1.831 -0.163 NA NA NA #> CI_97.5          -1.498          -1.458  0.357 NA NA NA #>  #> $GroupPars #>         MEAN_1 COV_11 #> par          0      1 #> CI_2.5      NA     NA #> CI_97.5     NA     NA #>   wald(twoPL) #> itemordereasier.1.7.13.19.25.31.37.43.49.55.61.67.73.79.85.91.97.103.109.115.121.127.133.139.145.151.157.163.169.175.181.187  #>                                                                                                                       -1.669  #> itemorderharder.2.8.14.20.26.32.38.44.50.56.62.68.74.80.86.92.98.104.110.116.122.128.134.140.146.152.158.164.170.176.182.188  #>                                                                                                                       -1.644  #>                                                                                                                         a1.3  #>                                                                                                                        0.930  #>                                                                                                                         a1.9  #>                                                                                                                        2.526  #>                                                                                                                        a1.15  #>                                                                                                                        1.000  #>                                                                                                                        a1.21  #>                                                                                                                        1.288  #>                                                                                                                        a1.27  #>                                                                                                                        2.704  #>                                                                                                                        a1.33  #>                                                                                                                        0.420  #>                                                                                                                        a1.39  #>                                                                                                                        3.913  #>                                                                                                                        a1.45  #>                                                                                                                        0.513  #>                                                                                                                        a1.51  #>                                                                                                                        5.455  #>                                                                                                                        a1.57  #>                                                                                                                        1.628  #>                                                                                                                        a1.63  #>                                                                                                                       13.512  #>                                                                                                                        a1.69  #>                                                                                                                        1.245  #>                                                                                                                        a1.75  #>                                                                                                                        3.042  #>                                                                                                                        a1.81  #>                                                                                                                        3.488  #>                                                                                                                        a1.87  #>                                                                                                                        4.749  #>                                                                                                                        a1.93  #>                                                                                                                        1.469  #>                                                                                                                        a1.99  #>                                                                                                                        9.952  #>                                                                                                                       a1.105  #>                                                                                                                        1.408  #>                                                                                                                       a1.111  #>                                                                                                                        2.155  #>                                                                                                                       a1.117  #>                                                                                                                        5.787  #>                                                                                                                       a1.123  #>                                                                                                                        6.345  #>                                                                                                                       a1.129  #>                                                                                                                        7.826  #>                                                                                                                       a1.135  #>                                                                                                                        0.982  #>                                                                                                                       a1.141  #>                                                                                                                        3.622  #>                                                                                                                       a1.147  #>                                                                                                                        1.293  #>                                                                                                                       a1.153  #>                                                                                                                        1.907  #>                                                                                                                       a1.159  #>                                                                                                                        5.656  #>                                                                                                                       a1.165  #>                                                                                                                        2.120  #>                                                                                                                       a1.171  #>                                                                                                                        1.165  #>                                                                                                                       a1.177  #>                                                                                                                        1.442  #>                                                                                                                       a1.183  #>                                                                                                                        5.235  #>                                                                                                                       a1.189  #>                                                                                                                        0.097  L <- matrix(0, 1, 34) L[1, 1] <- 1 L[1, 2] <- -1 wald(twoPL, L) # n.s., which is the correct conclusion. Rasch approach gave wrong inference #>            W df         p #> 1 0.07451603  1 0.7848715  ## LLTM with item error term LLTMwithError <- mixedmirt(data, model = model, fixed = ~ 0 + itemorder, random = ~ 1|items,     itemdesign = itemdesign) #> , Max-Change = 0.2000, Max-Change = 0.1211, Max-Change = 0.0434, Max-Change = 0.0359, Max-Change = 0.0327, Max-Change = 0.0388, Max-Change = 0.0141, Max-Change = 0.0267, Max-Change = 0.0141, Max-Change = 0.0104, Max-Change = 0.0137, Max-Change = 0.0148, Max-Change = 0.0114, Max-Change = 0.0116, Max-Change = 0.0112, Max-Change = 0.0118, Max-Change = 0.0093, Max-Change = 0.0096, Max-Change = 0.0059, Max-Change = 0.0056, Max-Change = 0.0114, Max-Change = 0.0124, Max-Change = 0.0062, Max-Change = 0.0059, Max-Change = 0.0072, Max-Change = 0.0089, Max-Change = 0.0046, Max-Change = 0.0061, Max-Change = 0.0051, Max-Change = 0.0022, Max-Change = 0.0050, Max-Change = 0.0068, Max-Change = 0.0016, Max-Change = 0.0028, Max-Change = 0.0049, Max-Change = 0.0067, Max-Change = 0.0019, Max-Change = 0.0038, Max-Change = 0.0054, Max-Change = 0.0082, Max-Change = 0.0038, Max-Change = 0.0019, Max-Change = 0.0055, Max-Change = 0.0044, Max-Change = 0.0065, Max-Change = 0.0020, Max-Change = 0.0034, Max-Change = 0.0029, Max-Change = 0.0062, Max-Change = 0.0021, Max-Change = 0.0029, Max-Change = 0.0023, Max-Change = 0.0030, Max-Change = 0.0008, Max-Change = 0.0130, Max-Change = 0.0023, Max-Change = 0.0062, Max-Change = 0.0028, Max-Change = 0.0057, Max-Change = 0.0035, Max-Change = 0.0029, Max-Change = 0.0017, Max-Change = 0.0020, Max-Change = 0.0012, Max-Change = 0.0021, Max-Change = 0.0028, Max-Change = 0.0012, Max-Change = 0.0020, Max-Change = 0.0019, Max-Change = 0.0036, Max-Change = 0.0029, Max-Change = 0.0029, Max-Change = 0.0051, Max-Change = 0.0044, Max-Change = 0.0053, Max-Change = 0.0021, Max-Change = 0.0016, Max-Change = 0.0037, Max-Change = 0.0021, Max-Change = 0.0044, Max-Change = 0.0073, Max-Change = 0.0023, Max-Change = 0.0070, Max-Change = 0.0025, Max-Change = 0.0043, Max-Change = 0.0035, Max-Change = 0.0026, Max-Change = 0.0011, Max-Change = 0.0024, Max-Change = 0.0019, Max-Change = 0.0024, Max-Change = 0.0031, Max-Change = 0.0037, Max-Change = 0.0065, Max-Change = 0.0016, Max-Change = 0.0041, Max-Change = 0.0015, Max-Change = 0.0028, Max-Change = 0.0038, Max-Change = 0.0162, Max-Change = 0.0703, Max-Change = 0.0721, Max-Change = 0.0756, Max-Change = 0.0767, Max-Change = 0.0753, Max-Change = 0.0733, Max-Change = 0.0733, Max-Change = 0.0746, Max-Change = 0.0813, Max-Change = 0.0766, Max-Change = 0.0805, Max-Change = 0.0598, Max-Change = 0.0810, Max-Change = 0.0682, Max-Change = 0.0495, Max-Change = 0.0376, Max-Change = 0.0505, Max-Change = 0.0389, Max-Change = 0.0431, Max-Change = 0.0425, Max-Change = 0.0365, Max-Change = 0.0017, Max-Change = 0.0223, Max-Change = 0.0212, Max-Change = 0.0175, Max-Change = 0.0118, Max-Change = 0.0094, Max-Change = 0.0110, Max-Change = 0.0050, Max-Change = 0.0071, Max-Change = 0.0469, Max-Change = 0.0090, Max-Change = 0.0240, Max-Change = 0.0292, Max-Change = 0.0250, Max-Change = 0.0413, Max-Change = 0.0280, Max-Change = 0.0109, Max-Change = 0.0112, Max-Change = 0.0110, Max-Change = 0.0070, Max-Change = 0.0045, Max-Change = 0.0100, Max-Change = 0.0423, Max-Change = 0.0076, Max-Change = 0.0067, Max-Change = 0.0157, Max-Change = 0.0166, Max-Change = 0.0028, Max-Change = 0.0170, Max-Change = 0.0066, Max-Change = 0.0326, Max-Change = 0.0109, Max-Change = 0.0608, Max-Change = 0.0353, Max-Change = 0.0181, Max-Change = 0.0166, Max-Change = 0.0089, Max-Change = 0.0236, Max-Change = 0.0192, Max-Change = 0.0196, Max-Change = 0.0130, Max-Change = 0.0084, Max-Change = 0.0269, Max-Change = 0.0053, Max-Change = 0.0115, Max-Change = 0.0035, Max-Change = 0.0131, Max-Change = 0.0098, Max-Change = 0.0172, Max-Change = 0.0192, Max-Change = 0.0064, Max-Change = 0.0090, Max-Change = 0.0053, Max-Change = 0.0098, Max-Change = 0.0136, Max-Change = 0.0036, Max-Change = 0.0086, Max-Change = 0.0073, Max-Change = 0.0156, Max-Change = 0.0275, Max-Change = 0.0075, Max-Change = 0.0196, Max-Change = 0.0265, Max-Change = 0.0065, Max-Change = 0.0024, Max-Change = 0.0069, Max-Change = 0.0211, Max-Change = 0.0112, Max-Change = 0.0036, Max-Change = 0.0203, Max-Change = 0.0169, Max-Change = 0.0201, Max-Change = 0.0116, Max-Change = 0.0366, Max-Change = 0.0321, Max-Change = 0.0214, Max-Change = 0.0076, Max-Change = 0.0036, Max-Change = 0.0295, Max-Change = 0.0102, Max-Change = 0.0080, Max-Change = 0.0075, Max-Change = 0.0052, Max-Change = 0.0053, Max-Change = 0.0056, Max-Change = 0.0135, Max-Change = 0.0038, Max-Change = 0.0131, Max-Change = 0.0118, Max-Change = 0.0025, Max-Change = 0.0028, Max-Change = 0.0016, Max-Change = 0.0049, Max-Change = 0.0037, Max-Change = 0.0056, Max-Change = 0.0049, Max-Change = 0.0053, Max-Change = 0.0093, Max-Change = 0.0041, Max-Change = 0.0051, Max-Change = 0.0041, Max-Change = 0.0045, Max-Change = 0.0218, Max-Change = 0.0083, Max-Change = 0.0033, Max-Change = 0.0025, Max-Change = 0.0034, Max-Change = 0.0044, Max-Change = 0.0031, Max-Change = 0.0012, Max-Change = 0.0034, Max-Change = 0.0059, Max-Change = 0.0066, Max-Change = 0.0054, Max-Change = 0.0035, Max-Change = 0.0013, Max-Change = 0.0056, Max-Change = 0.0026, Max-Change = 0.0028, Max-Change = 0.0015, Max-Change = 0.0034, Max-Change = 0.0090, Max-Change = 0.0061, Max-Change = 0.0072, Max-Change = 0.0051, Max-Change = 0.0036, Max-Change = 0.0027, Max-Change = 0.0047, Max-Change = 0.0005, Max-Change = 0.0095, Max-Change = 0.0015, Max-Change = 0.0021, Max-Change = 0.0031, Max-Change = 0.0042, Max-Change = 0.0020, Max-Change = 0.0016, Max-Change = 0.0061, Max-Change = 0.0032, Max-Change = 0.0063, Max-Change = 0.0035, Max-Change = 0.0016, Max-Change = 0.0042, Max-Change = 0.0032, Max-Change = 0.0039, Max-Change = 0.0085, Max-Change = 0.0131, Max-Change = 0.0041, Max-Change = 0.0046, Max-Change = 0.0041, Max-Change = 0.0125, Max-Change = 0.0036, Max-Change = 0.0048, Max-Change = 0.0058, Max-Change = 0.0059, Max-Change = 0.0079, Max-Change = 0.0025, Max-Change = 0.0065, Max-Change = 0.0044, Max-Change = 0.0013, Max-Change = 0.0040, Max-Change = 0.0020, Max-Change = 0.0077, Max-Change = 0.0023, Max-Change = 0.0028, Max-Change = 0.0068, Max-Change = 0.0068, Max-Change = 0.0090, Max-Change = 0.0024, Max-Change = 0.0017, Max-Change = 0.0051, Max-Change = 0.0049, Max-Change = 0.0061, Max-Change = 0.0052, Max-Change = 0.0062, Max-Change = 0.0030, Max-Change = 0.0112, Max-Change = 0.0029, Max-Change = 0.0061, Max-Change = 0.0036, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0037, gam = 0.1057, Max-Change = 0.0038, gam = 0.0780, Max-Change = 0.0033, gam = 0.0629, Max-Change = 0.0032, gam = 0.0532, Max-Change = 0.0016, gam = 0.0464, Max-Change = 0.0012, gam = 0.0413, Max-Change = 0.0016, gam = 0.0374, Max-Change = 0.0008, gam = 0.0342, Max-Change = 0.0003, gam = 0.0316, Max-Change = 0.0010 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood... summary(LLTMwithError) #>  #> Call: #> mixedmirt(data = data, model = model, fixed = ~0 + itemorder,  #>     random = ~1 | items, itemdesign = itemdesign) #>  #> -------------- #> FIXED EFFECTS: #>                 Estimate Std.Error z.value #> itemordereasier    0.147     0.153   0.961 #> itemorderharder    0.567     0.138   4.107 #>  #> -------------- #> RANDOM EFFECT COVARIANCE(S): #> Correlations on upper diagonal #>  #> $Theta #>       Theta #> Theta  0.77 #>  #> $items #>           COV_items #> COV_items      2.36 #>  # large item level variance after itemorder is regressed; not a great predictor of item difficulty coef(LLTMwithError) #> $Item.1 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.2 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.3 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.4 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.5 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.6 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.7 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.8 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.9 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.10 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.11 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.12 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.13 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.14 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.15 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.16 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.17 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.18 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.19 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.20 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.21 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.22 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.23 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.24 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.25 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.26 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.27 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.28 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.29 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.30 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.31 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $Item.32 #>         itemordereasier itemorderharder a1  d  g  u #> par               0.147           0.567  1  0  0  1 #> CI_2.5           -0.153           0.296 NA NA NA NA #> CI_97.5           0.446           0.838 NA NA NA NA #>  #> $GroupPars #>         MEAN_1 COV_11 #> par          0  0.770 #> CI_2.5      NA  0.656 #> CI_97.5     NA  0.884 #>  #> $items #>         COV_items_items #> par               2.363 #> CI_2.5            1.229 #> CI_97.5           3.497 #>   ################################################### ### Polytomous example  # make an arbitrary group difference covdat <- data.frame(group = rep(c('m', 'f'), nrow(Science)/2))  # partial credit model mod <- mixedmirt(Science, covdat, model=1, fixed = ~ 0 + group) #> , Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.1962, Max-Change = 0.1682, Max-Change = 0.1133, Max-Change = 0.0674, Max-Change = 0.0992, Max-Change = 0.0598, Max-Change = 0.0391, Max-Change = 0.0767, Max-Change = 0.0756, Max-Change = 0.0498, Max-Change = 0.0341, Max-Change = 0.0267, Max-Change = 0.0180, Max-Change = 0.0456, Max-Change = 0.0402, Max-Change = 0.0274, Max-Change = 0.0393, Max-Change = 0.0554, Max-Change = 0.0284, Max-Change = 0.0071, Max-Change = 0.0122, Max-Change = 0.0220, Max-Change = 0.0069, Max-Change = 0.0146, Max-Change = 0.0283, Max-Change = 0.0373, Max-Change = 0.0308, Max-Change = 0.0094, Max-Change = 0.0156, Max-Change = 0.0788, Max-Change = 0.0158, Max-Change = 0.0216, Max-Change = 0.0166, Max-Change = 0.0117, Max-Change = 0.0380, Max-Change = 0.0473, Max-Change = 0.0301, Max-Change = 0.0510, Max-Change = 0.0303, Max-Change = 0.0534, Max-Change = 0.0369, Max-Change = 0.0366, Max-Change = 0.0164, Max-Change = 0.0112, Max-Change = 0.0184, Max-Change = 0.0241, Max-Change = 0.0132, Max-Change = 0.0130, Max-Change = 0.0322, Max-Change = 0.0117, Max-Change = 0.0257, Max-Change = 0.0167, Max-Change = 0.0103, Max-Change = 0.0230, Max-Change = 0.0250, Max-Change = 0.0330, Max-Change = 0.0080, Max-Change = 0.0185, Max-Change = 0.0132, Max-Change = 0.0584, Max-Change = 0.0139, Max-Change = 0.0264, Max-Change = 0.0230, Max-Change = 0.0302, Max-Change = 0.0573, Max-Change = 0.0190, Max-Change = 0.0394, Max-Change = 0.0492, Max-Change = 0.1002, Max-Change = 0.0201, Max-Change = 0.0600, Max-Change = 0.0258, Max-Change = 0.0563, Max-Change = 0.0101, Max-Change = 0.0197, Max-Change = 0.0245, Max-Change = 0.0342, Max-Change = 0.0495, Max-Change = 0.0175, Max-Change = 0.0301, Max-Change = 0.0319, Max-Change = 0.0743, Max-Change = 0.0160, Max-Change = 0.0126, Max-Change = 0.0248, Max-Change = 0.0238, Max-Change = 0.0409, Max-Change = 0.0393, Max-Change = 0.0248, Max-Change = 0.0402, Max-Change = 0.0136, Max-Change = 0.0208, Max-Change = 0.0514, Max-Change = 0.0607, Max-Change = 0.0259, Max-Change = 0.0346, Max-Change = 0.0313, Max-Change = 0.0295, Max-Change = 0.0630, Max-Change = 0.0644, Max-Change = 0.0463, Max-Change = 0.0292, Max-Change = 0.0367, Max-Change = 0.0403, Max-Change = 0.0443, Max-Change = 0.0677, Max-Change = 0.0219, Max-Change = 0.0139, Max-Change = 0.0540, Max-Change = 0.0469, Max-Change = 0.0200, Max-Change = 0.0142, Max-Change = 0.0141, Max-Change = 0.0355, Max-Change = 0.0165, Max-Change = 0.0266, Max-Change = 0.0173, Max-Change = 0.0206, Max-Change = 0.0325, Max-Change = 0.0488, Max-Change = 0.0090, Max-Change = 0.0374, Max-Change = 0.0068, Max-Change = 0.0110, Max-Change = 0.0160, Max-Change = 0.0323, Max-Change = 0.0151, Max-Change = 0.0225, Max-Change = 0.0657, Max-Change = 0.0597, Max-Change = 0.0197, Max-Change = 0.0156, Max-Change = 0.0257, Max-Change = 0.0453, Max-Change = 0.0137, Max-Change = 0.0347, Max-Change = 0.0347, Max-Change = 0.0123, Max-Change = 0.0305, Max-Change = 0.0093, Max-Change = 0.0487, Max-Change = 0.0134, Max-Change = 0.0418, Max-Change = 0.0272, Max-Change = 0.0292, Max-Change = 0.0300, Max-Change = 0.0573, Max-Change = 0.0277, Max-Change = 0.0086, Max-Change = 0.0474, Max-Change = 0.0222, Max-Change = 0.0189, Max-Change = 0.0280, Max-Change = 0.0296, Max-Change = 0.0060, Max-Change = 0.0725, Max-Change = 0.0465, Max-Change = 0.0170, Max-Change = 0.0170, Max-Change = 0.0480, Max-Change = 0.0664, Max-Change = 0.0191, Max-Change = 0.0223, Max-Change = 0.0139, Max-Change = 0.0465, Max-Change = 0.0288, Max-Change = 0.0670, Max-Change = 0.0177, Max-Change = 0.0684, Max-Change = 0.0415, Max-Change = 0.0246, Max-Change = 0.0121, Max-Change = 0.0224, Max-Change = 0.0199, Max-Change = 0.0073, Max-Change = 0.0258, Max-Change = 0.0154, Max-Change = 0.0388, Max-Change = 0.0320, Max-Change = 0.0259, Max-Change = 0.0501, Max-Change = 0.1062, Max-Change = 0.0204, Max-Change = 0.0840, Max-Change = 0.0111, Max-Change = 0.0397, Max-Change = 0.0191, Max-Change = 0.0168, Max-Change = 0.0256, Max-Change = 0.0382, Max-Change = 0.0726, Max-Change = 0.0670, Max-Change = 0.0159, Max-Change = 0.0099, Max-Change = 0.0558, Max-Change = 0.0305, Max-Change = 0.0040, Max-Change = 0.0227, Max-Change = 0.0270, Max-Change = 0.0105, Max-Change = 0.0755, Max-Change = 0.0284, Max-Change = 0.0125, Max-Change = 0.0220, Max-Change = 0.0491, Max-Change = 0.0176, Max-Change = 0.0107, Max-Change = 0.0212, Max-Change = 0.0090, Max-Change = 0.0251, Max-Change = 0.0252, Max-Change = 0.0374, Max-Change = 0.0572, Max-Change = 0.0189, Max-Change = 0.0261, Max-Change = 0.0190, Max-Change = 0.0336, Max-Change = 0.0352, Max-Change = 0.0230, Max-Change = 0.0160, Max-Change = 0.0347, Max-Change = 0.0476, Max-Change = 0.0099, Max-Change = 0.0521, Max-Change = 0.0576, Max-Change = 0.0144, Max-Change = 0.0152, Max-Change = 0.0292, Max-Change = 0.0164, Max-Change = 0.0307, Max-Change = 0.0539, Max-Change = 0.0581, Max-Change = 0.0183, Max-Change = 0.0614, Max-Change = 0.0283, Max-Change = 0.0063, Max-Change = 0.0422, Max-Change = 0.0528, Max-Change = 0.0289, Max-Change = 0.0444, Max-Change = 0.0230, Max-Change = 0.0127, Max-Change = 0.0158, Max-Change = 0.0254, Max-Change = 0.0421, Max-Change = 0.0088, Max-Change = 0.0437, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0321, gam = 0.1057, Max-Change = 0.0075, gam = 0.0780, Max-Change = 0.0111, gam = 0.0629, Max-Change = 0.0052, gam = 0.0532, Max-Change = 0.0125, gam = 0.0464, Max-Change = 0.0073, gam = 0.0413, Max-Change = 0.0042, gam = 0.0374, Max-Change = 0.0100, gam = 0.0342, Max-Change = 0.0023, gam = 0.0316, Max-Change = 0.0089, gam = 0.0294, Max-Change = 0.0029, gam = 0.0276, Max-Change = 0.0057, gam = 0.0260, Max-Change = 0.0063, gam = 0.0246, Max-Change = 0.0033, gam = 0.0233, Max-Change = 0.0053, gam = 0.0222, Max-Change = 0.0039, gam = 0.0212, Max-Change = 0.0055, gam = 0.0203, Max-Change = 0.0013, gam = 0.0195, Max-Change = 0.0041, gam = 0.0188, Max-Change = 0.0022, gam = 0.0181, Max-Change = 0.0027, gam = 0.0175, Max-Change = 0.0050, gam = 0.0169, Max-Change = 0.0055, gam = 0.0164, Max-Change = 0.0043, gam = 0.0159, Max-Change = 0.0011, gam = 0.0154, Max-Change = 0.0016, gam = 0.0150, Max-Change = 0.0014, gam = 0.0146, Max-Change = 0.0014, gam = 0.0142, Max-Change = 0.0016, gam = 0.0139, Max-Change = 0.0026, gam = 0.0135, Max-Change = 0.0041, gam = 0.0132, Max-Change = 0.0024, gam = 0.0129, Max-Change = 0.0024, gam = 0.0126, Max-Change = 0.0012, gam = 0.0124, Max-Change = 0.0010, gam = 0.0121, Max-Change = 0.0047, gam = 0.0119, Max-Change = 0.0034, gam = 0.0116, Max-Change = 0.0035, gam = 0.0114, Max-Change = 0.0021, gam = 0.0112, Max-Change = 0.0016, gam = 0.0110, Max-Change = 0.0016, gam = 0.0108, Max-Change = 0.0022, gam = 0.0106, Max-Change = 0.0027, gam = 0.0104, Max-Change = 0.0019, gam = 0.0102, Max-Change = 0.0012, gam = 0.0101, Max-Change = 0.0024, gam = 0.0099, Max-Change = 0.0007, gam = 0.0098, Max-Change = 0.0020, gam = 0.0096, Max-Change = 0.0020, gam = 0.0095, Max-Change = 0.0023, gam = 0.0093, Max-Change = 0.0021, gam = 0.0092, Max-Change = 0.0010, gam = 0.0091, Max-Change = 0.0006, gam = 0.0089, Max-Change = 0.0012, gam = 0.0088, Max-Change = 0.0012, gam = 0.0087, Max-Change = 0.0010, gam = 0.0086, Max-Change = 0.0014, gam = 0.0085, Max-Change = 0.0008, gam = 0.0084, Max-Change = 0.0007, gam = 0.0082, Max-Change = 0.0017, gam = 0.0081, Max-Change = 0.0018, gam = 0.0080, Max-Change = 0.0010, gam = 0.0080, Max-Change = 0.0007, gam = 0.0079, Max-Change = 0.0024, gam = 0.0078, Max-Change = 0.0003, gam = 0.0077, Max-Change = 0.0009, gam = 0.0076, Max-Change = 0.0014, gam = 0.0075, Max-Change = 0.0013, gam = 0.0074, Max-Change = 0.0022, gam = 0.0073, Max-Change = 0.0009, gam = 0.0073, Max-Change = 0.0011, gam = 0.0072, Max-Change = 0.0027, gam = 0.0071, Max-Change = 0.0010, gam = 0.0070, Max-Change = 0.0007, gam = 0.0070, Max-Change = 0.0008, gam = 0.0069, Max-Change = 0.0006 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood... coef(mod) #> $Comfort #>         groupm a1 ak0 ak1 ak2 ak3 d0    d1    d2    d3 #> par     -0.084  1   0   1   2   3  0 3.098 5.718 4.364 #> CI_2.5  -0.336 NA  NA  NA  NA  NA NA 2.086 4.677 3.257 #> CI_97.5  0.167 NA  NA  NA  NA  NA NA 4.110 6.759 5.472 #>  #> $Work #>         groupm a1 ak0 ak1 ak2 ak3 d0    d1    d2    d3 #> par     -0.084  1   0   1   2   3  0 1.919 2.859 1.038 #> CI_2.5  -0.336 NA  NA  NA  NA  NA NA 1.455 2.311 0.352 #> CI_97.5  0.167 NA  NA  NA  NA  NA NA 2.382 3.406 1.723 #>  #> $Future #>         groupm a1 ak0 ak1 ak2 ak3 d0    d1    d2    d3 #> par     -0.084  1   0   1   2   3  0 2.665 4.114 3.013 #> CI_2.5  -0.336 NA  NA  NA  NA  NA NA 2.026 3.406 2.214 #> CI_97.5  0.167 NA  NA  NA  NA  NA NA 3.304 4.822 3.813 #>  #> $Benefit #>         groupm a1 ak0 ak1 ak2 ak3 d0    d1    d2    d3 #> par     -0.084  1   0   1   2   3  0 2.469 3.398 2.076 #> CI_2.5  -0.336 NA  NA  NA  NA  NA NA 1.932 2.779 1.349 #> CI_97.5  0.167 NA  NA  NA  NA  NA NA 3.006 4.016 2.803 #>  #> $GroupPars #>         MEAN_1 COV_11 #> par          0  0.985 #> CI_2.5      NA  0.707 #> CI_97.5     NA  1.264 #>   # gpcm to estimate slopes mod2 <- mixedmirt(Science, covdat, model=1, fixed = ~ 0 + group,                  itemtype = 'gpcm') #> , Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.1776, Max-Change = 0.1068, Max-Change = 0.1180, Max-Change = 0.1121, Max-Change = 0.0996, Max-Change = 0.1305, Max-Change = 0.0338, Max-Change = 0.1041, Max-Change = 0.0588, Max-Change = 0.0460, Max-Change = 0.0885, Max-Change = 0.0954, Max-Change = 0.0450, Max-Change = 0.1303, Max-Change = 0.0976, Max-Change = 0.1155, Max-Change = 0.0919, Max-Change = 0.1057, Max-Change = 0.0780, Max-Change = 0.0979, Max-Change = 0.0675, Max-Change = 0.1021, Max-Change = 0.0427, Max-Change = 0.0814, Max-Change = 0.0625, Max-Change = 0.0662, Max-Change = 0.0919, Max-Change = 0.1059, Max-Change = 0.1302, Max-Change = 0.0629, Max-Change = 0.0813, Max-Change = 0.0782, Max-Change = 0.1577, Max-Change = 0.0302, Max-Change = 0.0778, Max-Change = 0.1032, Max-Change = 0.0458, Max-Change = 0.0519, Max-Change = 0.0532, Max-Change = 0.1538, Max-Change = 0.1558, Max-Change = 0.1330, Max-Change = 0.0485, Max-Change = 0.0976, Max-Change = 0.0576, Max-Change = 0.0236, Max-Change = 0.1744, Max-Change = 0.0174, Max-Change = 0.0716, Max-Change = 0.1091, Max-Change = 0.0652, Max-Change = 0.0722, Max-Change = 0.1248, Max-Change = 0.0696, Max-Change = 0.0928, Max-Change = 0.0199, Max-Change = 0.1060, Max-Change = 0.0868, Max-Change = 0.0901, Max-Change = 0.1216, Max-Change = 0.0595, Max-Change = 0.0360, Max-Change = 0.0834, Max-Change = 0.1512, Max-Change = 0.0561, Max-Change = 0.1249, Max-Change = 0.0744, Max-Change = 0.1373, Max-Change = 0.1111, Max-Change = 0.0304, Max-Change = 0.1097, Max-Change = 0.0966, Max-Change = 0.0830, Max-Change = 0.0232, Max-Change = 0.0628, Max-Change = 0.0403, Max-Change = 0.1226, Max-Change = 0.0310, Max-Change = 0.0457, Max-Change = 0.1221, Max-Change = 0.1108, Max-Change = 0.1636, Max-Change = 0.1611, Max-Change = 0.1112, Max-Change = 0.0778, Max-Change = 0.1025, Max-Change = 0.0633, Max-Change = 0.0344, Max-Change = 0.0296, Max-Change = 0.0352, Max-Change = 0.0954, Max-Change = 0.1280, Max-Change = 0.0501, Max-Change = 0.1303, Max-Change = 0.0549, Max-Change = 0.1357, Max-Change = 0.1346, Max-Change = 0.0546, Max-Change = 0.0694, Max-Change = 0.0904, Max-Change = 0.1042, Max-Change = 0.0233, Max-Change = 0.0545, Max-Change = 0.1438, Max-Change = 0.0567, Max-Change = 0.0701, Max-Change = 0.0924, Max-Change = 0.0772, Max-Change = 0.1517, Max-Change = 0.0887, Max-Change = 0.0719, Max-Change = 0.0368, Max-Change = 0.1098, Max-Change = 0.1057, Max-Change = 0.0267, Max-Change = 0.2000, Max-Change = 0.0747, Max-Change = 0.0943, Max-Change = 0.0283, Max-Change = 0.0432, Max-Change = 0.0995, Max-Change = 0.0564, Max-Change = 0.0250, Max-Change = 0.1342, Max-Change = 0.0971, Max-Change = 0.0706, Max-Change = 0.1048, Max-Change = 0.0733, Max-Change = 0.0640, Max-Change = 0.1025, Max-Change = 0.0336, Max-Change = 0.0938, Max-Change = 0.0412, Max-Change = 0.0341, Max-Change = 0.0649, Max-Change = 0.1457, Max-Change = 0.0507, Max-Change = 0.0572, Max-Change = 0.1275, Max-Change = 0.0559, Max-Change = 0.0260, Max-Change = 0.1585, Max-Change = 0.0572, Max-Change = 0.1437, Max-Change = 0.0925, Max-Change = 0.0352, Max-Change = 0.0378, Max-Change = 0.1587, Max-Change = 0.0881, Max-Change = 0.1472, Max-Change = 0.0677, Max-Change = 0.0775, Max-Change = 0.1794, Max-Change = 0.0888, Max-Change = 0.1212, Max-Change = 0.0466, Max-Change = 0.0483, Max-Change = 0.0559, Max-Change = 0.0440, Max-Change = 0.1637, Max-Change = 0.0334, Max-Change = 0.0264, Max-Change = 0.0531, Max-Change = 0.0262, Max-Change = 0.1146, Max-Change = 0.0283, Max-Change = 0.0489, Max-Change = 0.1149, Max-Change = 0.1332, Max-Change = 0.1170, Max-Change = 0.0390, Max-Change = 0.0484, Max-Change = 0.0567, Max-Change = 0.0678, Max-Change = 0.0505, Max-Change = 0.0526, Max-Change = 0.2000, Max-Change = 0.0915, Max-Change = 0.0471, Max-Change = 0.1616, Max-Change = 0.0679, Max-Change = 0.1139, Max-Change = 0.0587, Max-Change = 0.0723, Max-Change = 0.1630, Max-Change = 0.1455, Max-Change = 0.0390, Max-Change = 0.1358, Max-Change = 0.1216, Max-Change = 0.1024, Max-Change = 0.0847, Max-Change = 0.1856, Max-Change = 0.1123, Max-Change = 0.0340, Max-Change = 0.1251, Max-Change = 0.0451, Max-Change = 0.0858, Max-Change = 0.1119, Max-Change = 0.0819, Max-Change = 0.1402, Max-Change = 0.0619, Max-Change = 0.0700, Max-Change = 0.0546, Max-Change = 0.0847, Max-Change = 0.0283, Max-Change = 0.0607, Max-Change = 0.1731, Max-Change = 0.0976, Max-Change = 0.0916, Max-Change = 0.1646, Max-Change = 0.0688, Max-Change = 0.0275, Max-Change = 0.2000, Max-Change = 0.0603, Max-Change = 0.0934, Max-Change = 0.0944, Max-Change = 0.1044, Max-Change = 0.1739, Max-Change = 0.0828, Max-Change = 0.0794, Max-Change = 0.0359, Max-Change = 0.0265, Max-Change = 0.1483, Max-Change = 0.0836, Max-Change = 0.2000, Max-Change = 0.0339, Max-Change = 0.0317, Max-Change = 0.0652, Max-Change = 0.0273, Max-Change = 0.1724, Max-Change = 0.0454, Max-Change = 0.0369, Max-Change = 0.0521, Max-Change = 0.0760, Max-Change = 0.0256, Max-Change = 0.1141, Max-Change = 0.0382, Max-Change = 0.0813, Max-Change = 0.1710, Max-Change = 0.0684, Max-Change = 0.0900, Max-Change = 0.2000, Max-Change = 0.0473, Max-Change = 0.0458, Max-Change = 0.1378, Max-Change = 0.0302, Max-Change = 0.0392, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0665, gam = 0.1057, Max-Change = 0.0327, gam = 0.0780, Max-Change = 0.0223, gam = 0.0629, Max-Change = 0.0178, gam = 0.0532, Max-Change = 0.0253, gam = 0.0464, Max-Change = 0.0294, gam = 0.0413, Max-Change = 0.0359, gam = 0.0374, Max-Change = 0.0188, gam = 0.0342, Max-Change = 0.0164, gam = 0.0316, Max-Change = 0.0080, gam = 0.0294, Max-Change = 0.0069, gam = 0.0276, Max-Change = 0.0225, gam = 0.0260, Max-Change = 0.0079, gam = 0.0246, Max-Change = 0.0040, gam = 0.0233, Max-Change = 0.0105, gam = 0.0222, Max-Change = 0.0049, gam = 0.0212, Max-Change = 0.0051, gam = 0.0203, Max-Change = 0.0124, gam = 0.0195, Max-Change = 0.0096, gam = 0.0188, Max-Change = 0.0145, gam = 0.0181, Max-Change = 0.0066, gam = 0.0175, Max-Change = 0.0234, gam = 0.0169, Max-Change = 0.0129, gam = 0.0164, Max-Change = 0.0096, gam = 0.0159, Max-Change = 0.0039, gam = 0.0154, Max-Change = 0.0066, gam = 0.0150, Max-Change = 0.0084, gam = 0.0146, Max-Change = 0.0173, gam = 0.0142, Max-Change = 0.0095, gam = 0.0139, Max-Change = 0.0080, gam = 0.0135, Max-Change = 0.0065, gam = 0.0132, Max-Change = 0.0055, gam = 0.0129, Max-Change = 0.0156, gam = 0.0126, Max-Change = 0.0010, gam = 0.0124, Max-Change = 0.0063, gam = 0.0121, Max-Change = 0.0083, gam = 0.0119, Max-Change = 0.0064, gam = 0.0116, Max-Change = 0.0040, gam = 0.0114, Max-Change = 0.0010, gam = 0.0112, Max-Change = 0.0047, gam = 0.0110, Max-Change = 0.0012, gam = 0.0108, Max-Change = 0.0062, gam = 0.0106, Max-Change = 0.0039, gam = 0.0104, Max-Change = 0.0026, gam = 0.0102, Max-Change = 0.0022, gam = 0.0101, Max-Change = 0.0069, gam = 0.0099, Max-Change = 0.0022, gam = 0.0098, Max-Change = 0.0016, gam = 0.0096, Max-Change = 0.0025, gam = 0.0095, Max-Change = 0.0068, gam = 0.0093, Max-Change = 0.0016, gam = 0.0092, Max-Change = 0.0033, gam = 0.0091, Max-Change = 0.0024, gam = 0.0089, Max-Change = 0.0008, gam = 0.0088, Max-Change = 0.0018, gam = 0.0087, Max-Change = 0.0037, gam = 0.0086, Max-Change = 0.0033, gam = 0.0085, Max-Change = 0.0043, gam = 0.0084, Max-Change = 0.0015, gam = 0.0082, Max-Change = 0.0033, gam = 0.0081, Max-Change = 0.0017, gam = 0.0080, Max-Change = 0.0015, gam = 0.0080, Max-Change = 0.0023, gam = 0.0079, Max-Change = 0.0045, gam = 0.0078, Max-Change = 0.0084, gam = 0.0077, Max-Change = 0.0039, gam = 0.0076, Max-Change = 0.0057, gam = 0.0075, Max-Change = 0.0074, gam = 0.0074, Max-Change = 0.0028, gam = 0.0073, Max-Change = 0.0050, gam = 0.0073, Max-Change = 0.0041, gam = 0.0072, Max-Change = 0.0015, gam = 0.0071, Max-Change = 0.0017, gam = 0.0070, Max-Change = 0.0032, gam = 0.0070, Max-Change = 0.0028, gam = 0.0069, Max-Change = 0.0059, gam = 0.0068, Max-Change = 0.0013, gam = 0.0068, Max-Change = 0.0025, gam = 0.0067, Max-Change = 0.0022, gam = 0.0066, Max-Change = 0.0029, gam = 0.0066, Max-Change = 0.0010, gam = 0.0065, Max-Change = 0.0021, gam = 0.0065, Max-Change = 0.0022, gam = 0.0064, Max-Change = 0.0038, gam = 0.0064, Max-Change = 0.0062, gam = 0.0063, Max-Change = 0.0027, gam = 0.0062, Max-Change = 0.0034, gam = 0.0062, Max-Change = 0.0016, gam = 0.0061, Max-Change = 0.0009, gam = 0.0061, Max-Change = 0.0035, gam = 0.0060, Max-Change = 0.0053, gam = 0.0060, Max-Change = 0.0045, gam = 0.0059, Max-Change = 0.0027, gam = 0.0059, Max-Change = 0.0033, gam = 0.0058, Max-Change = 0.0043, gam = 0.0058, Max-Change = 0.0009, gam = 0.0058, Max-Change = 0.0033, gam = 0.0057, Max-Change = 0.0026, gam = 0.0057, Max-Change = 0.0025, gam = 0.0056, Max-Change = 0.0036, gam = 0.0056, Max-Change = 0.0012, gam = 0.0055, Max-Change = 0.0011, gam = 0.0055, Max-Change = 0.0044, gam = 0.0055, Max-Change = 0.0023, gam = 0.0054, Max-Change = 0.0014, gam = 0.0054, Max-Change = 0.0018, gam = 0.0053, Max-Change = 0.0028, gam = 0.0053, Max-Change = 0.0013, gam = 0.0053, Max-Change = 0.0060, gam = 0.0052, Max-Change = 0.0042, gam = 0.0052, Max-Change = 0.0029, gam = 0.0052, Max-Change = 0.0013, gam = 0.0051, Max-Change = 0.0012, gam = 0.0051, Max-Change = 0.0016, gam = 0.0051, Max-Change = 0.0022, gam = 0.0050, Max-Change = 0.0018, gam = 0.0050, Max-Change = 0.0008, gam = 0.0050, Max-Change = 0.0027, gam = 0.0049, Max-Change = 0.0021, gam = 0.0049, Max-Change = 0.0042, gam = 0.0049, Max-Change = 0.0008, gam = 0.0048, Max-Change = 0.0034, gam = 0.0048, Max-Change = 0.0020, gam = 0.0048, Max-Change = 0.0019, gam = 0.0048, Max-Change = 0.0020, gam = 0.0047, Max-Change = 0.0009, gam = 0.0047, Max-Change = 0.0027, gam = 0.0047, Max-Change = 0.0064, gam = 0.0046, Max-Change = 0.0032, gam = 0.0046, Max-Change = 0.0016, gam = 0.0046, Max-Change = 0.0038, gam = 0.0046, Max-Change = 0.0044, gam = 0.0045, Max-Change = 0.0015, gam = 0.0045, Max-Change = 0.0018, gam = 0.0045, Max-Change = 0.0019, gam = 0.0045, Max-Change = 0.0023, gam = 0.0044, Max-Change = 0.0010, gam = 0.0044, Max-Change = 0.0006, gam = 0.0044, Max-Change = 0.0012, gam = 0.0044, Max-Change = 0.0014, gam = 0.0043, Max-Change = 0.0025, gam = 0.0043, Max-Change = 0.0044, gam = 0.0043, Max-Change = 0.0040, gam = 0.0043, Max-Change = 0.0023, gam = 0.0043, Max-Change = 0.0011, gam = 0.0042, Max-Change = 0.0013, gam = 0.0042, Max-Change = 0.0020, gam = 0.0042, Max-Change = 0.0012, gam = 0.0042, Max-Change = 0.0027, gam = 0.0041, Max-Change = 0.0016, gam = 0.0041, Max-Change = 0.0035, gam = 0.0041, Max-Change = 0.0036, gam = 0.0041, Max-Change = 0.0044, gam = 0.0041, Max-Change = 0.0009, gam = 0.0040, Max-Change = 0.0007, gam = 0.0040, Max-Change = 0.0028, gam = 0.0040, Max-Change = 0.0029, gam = 0.0040, Max-Change = 0.0011, gam = 0.0040, Max-Change = 0.0026, gam = 0.0040, Max-Change = 0.0008, gam = 0.0039, Max-Change = 0.0011, gam = 0.0039, Max-Change = 0.0011, gam = 0.0039, Max-Change = 0.0017, gam = 0.0039, Max-Change = 0.0028, gam = 0.0039, Max-Change = 0.0012, gam = 0.0038, Max-Change = 0.0014, gam = 0.0038, Max-Change = 0.0020, gam = 0.0038, Max-Change = 0.0017, gam = 0.0038, Max-Change = 0.0020, gam = 0.0038, Max-Change = 0.0010, gam = 0.0038, Max-Change = 0.0028, gam = 0.0037, Max-Change = 0.0010, gam = 0.0037, Max-Change = 0.0015, gam = 0.0037, Max-Change = 0.0007, gam = 0.0037, Max-Change = 0.0008, gam = 0.0037, Max-Change = 0.0021, gam = 0.0037, Max-Change = 0.0017, gam = 0.0036, Max-Change = 0.0007, gam = 0.0036, Max-Change = 0.0020, gam = 0.0036, Max-Change = 0.0024, gam = 0.0036, Max-Change = 0.0015, gam = 0.0036, Max-Change = 0.0030, gam = 0.0036, Max-Change = 0.0018, gam = 0.0036, Max-Change = 0.0007, gam = 0.0035, Max-Change = 0.0012, gam = 0.0035, Max-Change = 0.0009, gam = 0.0035, Max-Change = 0.0007, gam = 0.0035, Max-Change = 0.0021, gam = 0.0035, Max-Change = 0.0040, gam = 0.0035, Max-Change = 0.0013, gam = 0.0035, Max-Change = 0.0032, gam = 0.0034, Max-Change = 0.0028, gam = 0.0034, Max-Change = 0.0010, gam = 0.0034, Max-Change = 0.0015, gam = 0.0034, Max-Change = 0.0009, gam = 0.0034, Max-Change = 0.0017, gam = 0.0034, Max-Change = 0.0024, gam = 0.0034, Max-Change = 0.0009, gam = 0.0034, Max-Change = 0.0003, gam = 0.0033, Max-Change = 0.0013, gam = 0.0033, Max-Change = 0.0014, gam = 0.0033, Max-Change = 0.0006, gam = 0.0033, Max-Change = 0.0013, gam = 0.0033, Max-Change = 0.0013, gam = 0.0033, Max-Change = 0.0011, gam = 0.0033, Max-Change = 0.0005, gam = 0.0033, Max-Change = 0.0046, gam = 0.0032, Max-Change = 0.0016, gam = 0.0032, Max-Change = 0.0018, gam = 0.0032, Max-Change = 0.0004, gam = 0.0032, Max-Change = 0.0020, gam = 0.0032, Max-Change = 0.0020, gam = 0.0032, Max-Change = 0.0007, gam = 0.0032, Max-Change = 0.0012, gam = 0.0032, Max-Change = 0.0015, gam = 0.0032, Max-Change = 0.0020, gam = 0.0031, Max-Change = 0.0005, gam = 0.0031, Max-Change = 0.0015, gam = 0.0031, Max-Change = 0.0017, gam = 0.0031, Max-Change = 0.0010, gam = 0.0031, Max-Change = 0.0008, gam = 0.0031, Max-Change = 0.0018, gam = 0.0031, Max-Change = 0.0024, gam = 0.0031, Max-Change = 0.0031, gam = 0.0031, Max-Change = 0.0023, gam = 0.0031, Max-Change = 0.0031, gam = 0.0030, Max-Change = 0.0004, gam = 0.0030, Max-Change = 0.0004, gam = 0.0030, Max-Change = 0.0009 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood... summary(mod2) #>  #> Call: #> mixedmirt(data = Science, covdata = covdat, model = 1, fixed = ~0 +  #>     group, itemtype = \"gpcm\") #>  #> -------------- #> FIXED EFFECTS: #>        Estimate Std.Error z.value #> groupm   -0.176     0.118  -1.494 #>  #> -------------- #> RANDOM EFFECT COVARIANCE(S): #> Correlations on upper diagonal #>  #> $Theta #>    F1 #> F1  1 #>  anova(mod, mod2) #>           AIC    SABIC       HQ      BIC    logLik   X2 df     p #> mod  3264.979 3276.155 3287.014 3320.577 -1618.489               #> mod2 3258.379 3271.950 3285.136 3325.891 -1612.190 12.6  3 0.006  # graded model mod3 <- mixedmirt(Science, covdat, model=1, fixed = ~ 0 + group,                  itemtype = 'graded') #> , Max-Change = 0.0936, Max-Change = 0.0628, Max-Change = 0.0682, Max-Change = 0.0779, Max-Change = 0.0530, Max-Change = 0.0384, Max-Change = 0.0643, Max-Change = 0.0358, Max-Change = 0.1088, Max-Change = 0.0556, Max-Change = 0.0754, Max-Change = 0.0696, Max-Change = 0.0500, Max-Change = 0.0316, Max-Change = 0.0371, Max-Change = 0.0448, Max-Change = 0.0569, Max-Change = 0.0753, Max-Change = 0.0459, Max-Change = 0.0565, Max-Change = 0.0385, Max-Change = 0.0177, Max-Change = 0.0258, Max-Change = 0.0425, Max-Change = 0.0579, Max-Change = 0.0233, Max-Change = 0.0269, Max-Change = 0.0206, Max-Change = 0.0494, Max-Change = 0.0379, Max-Change = 0.0439, Max-Change = 0.0775, Max-Change = 0.0386, Max-Change = 0.0435, Max-Change = 0.0212, Max-Change = 0.0944, Max-Change = 0.0190, Max-Change = 0.0412, Max-Change = 0.0670, Max-Change = 0.0318, Max-Change = 0.0405, Max-Change = 0.0383, Max-Change = 0.0675, Max-Change = 0.0429, Max-Change = 0.0710, Max-Change = 0.0385, Max-Change = 0.0516, Max-Change = 0.0490, Max-Change = 0.0381, Max-Change = 0.0909, Max-Change = 0.0201, Max-Change = 0.0393, Max-Change = 0.0424, Max-Change = 0.0310, Max-Change = 0.0379, Max-Change = 0.0371, Max-Change = 0.1221, Max-Change = 0.0474, Max-Change = 0.0486, Max-Change = 0.0651, Max-Change = 0.0363, Max-Change = 0.0310, Max-Change = 0.0917, Max-Change = 0.0539, Max-Change = 0.0282, Max-Change = 0.0437, Max-Change = 0.0413, Max-Change = 0.0446, Max-Change = 0.0343, Max-Change = 0.0360, Max-Change = 0.0701, Max-Change = 0.0552, Max-Change = 0.0295, Max-Change = 0.0505, Max-Change = 0.0599, Max-Change = 0.0442, Max-Change = 0.0321, Max-Change = 0.0408, Max-Change = 0.0260, Max-Change = 0.0358, Max-Change = 0.0379, Max-Change = 0.0366, Max-Change = 0.0425, Max-Change = 0.0911, Max-Change = 0.0482, Max-Change = 0.0729, Max-Change = 0.0495, Max-Change = 0.0480, Max-Change = 0.0313, Max-Change = 0.0560, Max-Change = 0.0323, Max-Change = 0.0339, Max-Change = 0.0423, Max-Change = 0.0947, Max-Change = 0.0268, Max-Change = 0.0233, Max-Change = 0.0482, Max-Change = 0.0317, Max-Change = 0.0484, Max-Change = 0.0427, Max-Change = 0.0749, Max-Change = 0.0558, Max-Change = 0.0468, Max-Change = 0.0896, Max-Change = 0.0333, Max-Change = 0.0351, Max-Change = 0.0371, Max-Change = 0.0444, Max-Change = 0.0392, Max-Change = 0.0493, Max-Change = 0.0454, Max-Change = 0.0264, Max-Change = 0.0272, Max-Change = 0.0301, Max-Change = 0.0299, Max-Change = 0.0344, Max-Change = 0.0460, Max-Change = 0.0483, Max-Change = 0.0884, Max-Change = 0.0503, Max-Change = 0.0337, Max-Change = 0.0218, Max-Change = 0.0212, Max-Change = 0.0804, Max-Change = 0.0338, Max-Change = 0.0272, Max-Change = 0.0332, Max-Change = 0.0395, Max-Change = 0.0609, Max-Change = 0.0310, Max-Change = 0.0271, Max-Change = 0.0554, Max-Change = 0.0289, Max-Change = 0.0460, Max-Change = 0.0677, Max-Change = 0.0711, Max-Change = 0.0312, Max-Change = 0.0287, Max-Change = 0.0526, Max-Change = 0.0342, Max-Change = 0.0345, Max-Change = 0.0297, Max-Change = 0.0384, Max-Change = 0.0285, Max-Change = 0.0479, Max-Change = 0.0354, Max-Change = 0.1089, Max-Change = 0.0675, Max-Change = 0.0314, Max-Change = 0.0452, Max-Change = 0.1232, Max-Change = 0.0390, Max-Change = 0.0892, Max-Change = 0.0303, Max-Change = 0.0327, Max-Change = 0.1439, Max-Change = 0.0321, Max-Change = 0.0940, Max-Change = 0.0379, Max-Change = 0.0813, Max-Change = 0.0346, Max-Change = 0.0404, Max-Change = 0.0554, Max-Change = 0.0336, Max-Change = 0.0281, Max-Change = 0.0589, Max-Change = 0.0316, Max-Change = 0.0912, Max-Change = 0.0500, Max-Change = 0.0364, Max-Change = 0.1087, Max-Change = 0.0267, Max-Change = 0.0234, Max-Change = 0.0413, Max-Change = 0.0177, Max-Change = 0.0276, Max-Change = 0.0715, Max-Change = 0.0415, Max-Change = 0.0250, Max-Change = 0.1006, Max-Change = 0.0210, Max-Change = 0.0568, Max-Change = 0.1370, Max-Change = 0.0315, Max-Change = 0.0599, Max-Change = 0.0186, Max-Change = 0.0953, Max-Change = 0.0973, Max-Change = 0.0536, Max-Change = 0.0967, Max-Change = 0.0323, Max-Change = 0.0438, Max-Change = 0.0825, Max-Change = 0.0453, Max-Change = 0.0471, Max-Change = 0.0624, Max-Change = 0.0290, Max-Change = 0.0384, Max-Change = 0.0372, Max-Change = 0.0810, Max-Change = 0.0457, Max-Change = 0.0415, Max-Change = 0.0329, Max-Change = 0.0675, Max-Change = 0.0283, Max-Change = 0.0571, Max-Change = 0.0277, Max-Change = 0.0567, Max-Change = 0.0597, Max-Change = 0.1081, Max-Change = 0.0365, Max-Change = 0.0409, Max-Change = 0.0624, Max-Change = 0.0567, Max-Change = 0.0347, Max-Change = 0.1347, Max-Change = 0.0570, Max-Change = 0.0683, Max-Change = 0.0604, Max-Change = 0.0916, Max-Change = 0.0895, Max-Change = 0.0384, Max-Change = 0.0310, Max-Change = 0.0302, Max-Change = 0.0528, Max-Change = 0.0244, Max-Change = 0.0991, Max-Change = 0.0630, Max-Change = 0.0419, Max-Change = 0.0702, Max-Change = 0.0346, Max-Change = 0.0397, Max-Change = 0.0542, Max-Change = 0.0295, Max-Change = 0.0251, Max-Change = 0.0376, Max-Change = 0.0436, Max-Change = 0.0139, Max-Change = 0.0323, Max-Change = 0.0293, Max-Change = 0.0452, Max-Change = 0.1383, Max-Change = 0.0361, Max-Change = 0.0899, Max-Change = 0.0155, Max-Change = 0.0330, Max-Change = 0.0329, Max-Change = 0.0665, Max-Change = 0.0744, Max-Change = 0.0201, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0371, gam = 0.1057, Max-Change = 0.0347, gam = 0.0780, Max-Change = 0.0089, gam = 0.0629, Max-Change = 0.0091, gam = 0.0532, Max-Change = 0.0179, gam = 0.0464, Max-Change = 0.0041, gam = 0.0413, Max-Change = 0.0156, gam = 0.0374, Max-Change = 0.0204, gam = 0.0342, Max-Change = 0.0039, gam = 0.0316, Max-Change = 0.0069, gam = 0.0294, Max-Change = 0.0038, gam = 0.0276, Max-Change = 0.0136, gam = 0.0260, Max-Change = 0.0049, gam = 0.0246, Max-Change = 0.0066, gam = 0.0233, Max-Change = 0.0074, gam = 0.0222, Max-Change = 0.0075, gam = 0.0212, Max-Change = 0.0039, gam = 0.0203, Max-Change = 0.0053, gam = 0.0195, Max-Change = 0.0072, gam = 0.0188, Max-Change = 0.0108, gam = 0.0181, Max-Change = 0.0049, gam = 0.0175, Max-Change = 0.0108, gam = 0.0169, Max-Change = 0.0109, gam = 0.0164, Max-Change = 0.0079, gam = 0.0159, Max-Change = 0.0041, gam = 0.0154, Max-Change = 0.0025, gam = 0.0150, Max-Change = 0.0063, gam = 0.0146, Max-Change = 0.0015, gam = 0.0142, Max-Change = 0.0017, gam = 0.0139, Max-Change = 0.0084, gam = 0.0135, Max-Change = 0.0026, gam = 0.0132, Max-Change = 0.0021, gam = 0.0129, Max-Change = 0.0017, gam = 0.0126, Max-Change = 0.0022, gam = 0.0124, Max-Change = 0.0036, gam = 0.0121, Max-Change = 0.0035, gam = 0.0119, Max-Change = 0.0030, gam = 0.0116, Max-Change = 0.0023, gam = 0.0114, Max-Change = 0.0019, gam = 0.0112, Max-Change = 0.0028, gam = 0.0110, Max-Change = 0.0014, gam = 0.0108, Max-Change = 0.0045, gam = 0.0106, Max-Change = 0.0017, gam = 0.0104, Max-Change = 0.0016, gam = 0.0102, Max-Change = 0.0021, gam = 0.0101, Max-Change = 0.0019, gam = 0.0099, Max-Change = 0.0030, gam = 0.0098, Max-Change = 0.0021, gam = 0.0096, Max-Change = 0.0016, gam = 0.0095, Max-Change = 0.0009, gam = 0.0093, Max-Change = 0.0015, gam = 0.0092, Max-Change = 0.0024, gam = 0.0091, Max-Change = 0.0024, gam = 0.0089, Max-Change = 0.0015, gam = 0.0088, Max-Change = 0.0032, gam = 0.0087, Max-Change = 0.0023, gam = 0.0086, Max-Change = 0.0046, gam = 0.0085, Max-Change = 0.0013, gam = 0.0084, Max-Change = 0.0015, gam = 0.0082, Max-Change = 0.0019, gam = 0.0081, Max-Change = 0.0014, gam = 0.0080, Max-Change = 0.0016, gam = 0.0080, Max-Change = 0.0030, gam = 0.0079, Max-Change = 0.0009, gam = 0.0078, Max-Change = 0.0022, gam = 0.0077, Max-Change = 0.0009, gam = 0.0076, Max-Change = 0.0027, gam = 0.0075, Max-Change = 0.0026, gam = 0.0074, Max-Change = 0.0018, gam = 0.0073, Max-Change = 0.0044, gam = 0.0073, Max-Change = 0.0013, gam = 0.0072, Max-Change = 0.0018, gam = 0.0071, Max-Change = 0.0013, gam = 0.0070, Max-Change = 0.0015, gam = 0.0070, Max-Change = 0.0030, gam = 0.0069, Max-Change = 0.0032, gam = 0.0068, Max-Change = 0.0006, gam = 0.0068, Max-Change = 0.0016, gam = 0.0067, Max-Change = 0.0018, gam = 0.0066, Max-Change = 0.0017, gam = 0.0066, Max-Change = 0.0020, gam = 0.0065, Max-Change = 0.0007, gam = 0.0065, Max-Change = 0.0008, gam = 0.0064, Max-Change = 0.0013, gam = 0.0064, Max-Change = 0.0023, gam = 0.0063, Max-Change = 0.0024, gam = 0.0062, Max-Change = 0.0020, gam = 0.0062, Max-Change = 0.0009, gam = 0.0061, Max-Change = 0.0008, gam = 0.0061, Max-Change = 0.0016, gam = 0.0060, Max-Change = 0.0011, gam = 0.0060, Max-Change = 0.0005, gam = 0.0059, Max-Change = 0.0013, gam = 0.0059, Max-Change = 0.0007, gam = 0.0058, Max-Change = 0.0009, gam = 0.0058, Max-Change = 0.0007 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood... coef(mod3) #> $Comfort #>         groupm    a1    d1    d2     d3 #> par     -0.248 1.000 4.951 2.735 -1.327 #> CI_2.5  -0.578 0.636 3.989 2.289 -1.682 #> CI_97.5  0.082 1.363 5.913 3.181 -0.971 #>  #> $Work #>         groupm    a1    d1    d2     d3 #> par     -0.248 1.212 3.034 1.020 -2.133 #> CI_2.5  -0.578 0.873 2.545 0.697 -2.554 #> CI_97.5  0.082 1.551 3.522 1.342 -1.712 #>  #> $Future #>         groupm    a1    d1    d2     d3 #> par     -0.248 2.581 5.761 2.524 -1.995 #> CI_2.5  -0.578 1.251 3.733 1.497 -2.807 #> CI_97.5  0.082 3.911 7.789 3.551 -1.182 #>  #> $Benefit #>         groupm    a1    d1    d2     d3 #> par     -0.248 1.075 3.456 1.110 -1.554 #> CI_2.5  -0.578 0.728 2.905 0.796 -1.925 #> CI_97.5  0.082 1.423 4.007 1.423 -1.183 #>  #> $GroupPars #>         MEAN_1 COV_11 #> par          0      1 #> CI_2.5      NA     NA #> CI_97.5     NA     NA #>    ################################################### # latent regression with Rasch and 2PL models  set.seed(1) n <- 300 a <- matrix(1, 10) d <- matrix(rnorm(10)) Theta <- matrix(c(rnorm(n, 0), rnorm(n, 1), rnorm(n, 2))) covdata <- data.frame(group=rep(c('g1','g2','g3'), each=n)) dat <- simdata(a, d, N=n*3, Theta=Theta, itemtype = '2PL') itemstats(dat) #> $overall #>    N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  900            6.932          2.347 0.197 0.035 0.709     1.266 #>  #> $itemstats #>           N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item_1  900 2 0.570 0.495   0.604         0.443       0.673 #> Item_2  900 2 0.689 0.463   0.518         0.351       0.690 #> Item_3  900 2 0.526 0.500   0.531         0.352       0.691 #> Item_4  900 2 0.892 0.310   0.422         0.305       0.698 #> Item_5  900 2 0.748 0.435   0.522         0.367       0.687 #> Item_6  900 2 0.543 0.498   0.569         0.398       0.682 #> Item_7  900 2 0.759 0.428   0.530         0.379       0.685 #> Item_8  900 2 0.803 0.398   0.516         0.375       0.686 #> Item_9  900 2 0.777 0.417   0.489         0.337       0.692 #> Item_10 900 2 0.626 0.484   0.548         0.378       0.685 #>  #> $proportions #>             0     1 #> Item_1  0.430 0.570 #> Item_2  0.311 0.689 #> Item_3  0.474 0.526 #> Item_4  0.108 0.892 #> Item_5  0.252 0.748 #> Item_6  0.457 0.543 #> Item_7  0.241 0.759 #> Item_8  0.197 0.803 #> Item_9  0.223 0.777 #> Item_10 0.374 0.626 #>   # had we known the latent abilities, we could have computed the regression coefs summary(lm(Theta ~ covdata$group)) #>  #> Call: #> lm(formula = Theta ~ covdata$group) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -2.9871 -0.6851 -0.0427  0.7170  3.8313  #>  #> Coefficients: #>                 Estimate Std. Error t value Pr(>|t|)     #> (Intercept)      0.04434    0.05970   0.743    0.458     #> covdata$groupg2  0.93468    0.08443  11.071   <2e-16 *** #> covdata$groupg3  1.88134    0.08443  22.284   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 1.034 on 897 degrees of freedom #> Multiple R-squared:  0.3563,\tAdjusted R-squared:  0.3549  #> F-statistic: 248.3 on 2 and 897 DF,  p-value: < 2.2e-16 #>   # but all we have is observed test data. Latent regression helps to recover these coefs # Rasch model approach (and mirt equivalent) rmod0 <- mirt(dat, 1, 'Rasch') # unconditional #>   # these two models are equivalent rmod1a <- mirt(dat, 1, 'Rasch', covdata = covdata, formula = ~ group) #>  rmod1b <- mixedmirt(dat, covdata, 1, fixed = ~ 0 + items + group) #> , Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.1660, Max-Change = 0.1608, Max-Change = 0.1153, Max-Change = 0.1284, Max-Change = 0.1084, Max-Change = 0.0957, Max-Change = 0.0911, Max-Change = 0.0686, Max-Change = 0.0641, Max-Change = 0.0574, Max-Change = 0.0470, Max-Change = 0.0606, Max-Change = 0.0515, Max-Change = 0.0547, Max-Change = 0.0557, Max-Change = 0.0498, Max-Change = 0.0395, Max-Change = 0.0418, Max-Change = 0.0242, Max-Change = 0.0275, Max-Change = 0.0258, Max-Change = 0.0452, Max-Change = 0.0276, Max-Change = 0.0125, Max-Change = 0.0253, Max-Change = 0.0108, Max-Change = 0.0333, Max-Change = 0.0210, Max-Change = 0.0134, Max-Change = 0.0152, Max-Change = 0.0231, Max-Change = 0.0217, Max-Change = 0.0079, Max-Change = 0.0055, Max-Change = 0.0177, Max-Change = 0.0161, Max-Change = 0.0112, Max-Change = 0.0215, Max-Change = 0.0093, Max-Change = 0.0148, Max-Change = 0.0046, Max-Change = 0.0062, Max-Change = 0.0209, Max-Change = 0.0151, Max-Change = 0.0218, Max-Change = 0.0196, Max-Change = 0.0184, Max-Change = 0.0086, Max-Change = 0.0131, Max-Change = 0.0063, Max-Change = 0.0094, Max-Change = 0.0153, Max-Change = 0.0218, Max-Change = 0.0101, Max-Change = 0.0083, Max-Change = 0.0093, Max-Change = 0.0063, Max-Change = 0.0164, Max-Change = 0.0056, Max-Change = 0.0080, Max-Change = 0.0213, Max-Change = 0.0182, Max-Change = 0.0181, Max-Change = 0.0143, Max-Change = 0.0046, Max-Change = 0.0158, Max-Change = 0.0097, Max-Change = 0.0053, Max-Change = 0.0100, Max-Change = 0.0160, Max-Change = 0.0180, Max-Change = 0.0125, Max-Change = 0.0130, Max-Change = 0.0052, Max-Change = 0.0130, Max-Change = 0.0063, Max-Change = 0.0151, Max-Change = 0.0077, Max-Change = 0.0175, Max-Change = 0.0040, Max-Change = 0.0118, Max-Change = 0.0074, Max-Change = 0.0119, Max-Change = 0.0034, Max-Change = 0.0066, Max-Change = 0.0120, Max-Change = 0.0091, Max-Change = 0.0088, Max-Change = 0.0247, Max-Change = 0.0402, Max-Change = 0.0111, Max-Change = 0.0130, Max-Change = 0.0303, Max-Change = 0.0130, Max-Change = 0.0019, Max-Change = 0.0164, Max-Change = 0.0046, Max-Change = 0.0144, Max-Change = 0.0129, Max-Change = 0.0112, Max-Change = 0.0158, Max-Change = 0.0095, Max-Change = 0.0094, Max-Change = 0.0093, Max-Change = 0.0221, Max-Change = 0.0065, Max-Change = 0.0094, Max-Change = 0.0084, Max-Change = 0.0103, Max-Change = 0.0149, Max-Change = 0.0050, Max-Change = 0.0116, Max-Change = 0.0152, Max-Change = 0.0187, Max-Change = 0.0131, Max-Change = 0.0103, Max-Change = 0.0097, Max-Change = 0.0067, Max-Change = 0.0101, Max-Change = 0.0154, Max-Change = 0.0066, Max-Change = 0.0054, Max-Change = 0.0095, Max-Change = 0.0134, Max-Change = 0.0274, Max-Change = 0.0198, Max-Change = 0.0215, Max-Change = 0.0062, Max-Change = 0.0192, Max-Change = 0.0136, Max-Change = 0.0070, Max-Change = 0.0231, Max-Change = 0.0084, Max-Change = 0.0036, Max-Change = 0.0111, Max-Change = 0.0212, Max-Change = 0.0077, Max-Change = 0.0103, Max-Change = 0.0066, Max-Change = 0.0145, Max-Change = 0.0148, Max-Change = 0.0220, Max-Change = 0.0106, Max-Change = 0.0029, Max-Change = 0.0118, Max-Change = 0.0063, Max-Change = 0.0111, Max-Change = 0.0124, Max-Change = 0.0123, Max-Change = 0.0334, Max-Change = 0.0058, Max-Change = 0.0069, Max-Change = 0.0107, Max-Change = 0.0096, Max-Change = 0.0085, Max-Change = 0.0131, Max-Change = 0.0087, Max-Change = 0.0044, Max-Change = 0.0128, Max-Change = 0.0061, Max-Change = 0.0071, Max-Change = 0.0255, Max-Change = 0.0085, Max-Change = 0.0039, Max-Change = 0.0073, Max-Change = 0.0116, Max-Change = 0.0178, Max-Change = 0.0079, Max-Change = 0.0110, Max-Change = 0.0258, Max-Change = 0.0104, Max-Change = 0.0107, Max-Change = 0.0188, Max-Change = 0.0064, Max-Change = 0.0130, Max-Change = 0.0245, Max-Change = 0.0130, Max-Change = 0.0056, Max-Change = 0.0093, Max-Change = 0.0055, Max-Change = 0.0215, Max-Change = 0.0085, Max-Change = 0.0101, Max-Change = 0.0114, Max-Change = 0.0121, Max-Change = 0.0113, Max-Change = 0.0278, Max-Change = 0.0092, Max-Change = 0.0157, Max-Change = 0.0057, Max-Change = 0.0107, Max-Change = 0.0197, Max-Change = 0.0160, Max-Change = 0.0130, Max-Change = 0.0111, Max-Change = 0.0104, Max-Change = 0.0099, Max-Change = 0.0070, Max-Change = 0.0122, Max-Change = 0.0056, Max-Change = 0.0191, Max-Change = 0.0057, Max-Change = 0.0093, Max-Change = 0.0135, Max-Change = 0.0127, Max-Change = 0.0101, Max-Change = 0.0207, Max-Change = 0.0223, Max-Change = 0.0166, Max-Change = 0.0193, Max-Change = 0.0147, Max-Change = 0.0132, Max-Change = 0.0091, Max-Change = 0.0186, Max-Change = 0.0149, Max-Change = 0.0111, Max-Change = 0.0074, Max-Change = 0.0106, Max-Change = 0.0046, Max-Change = 0.0145, Max-Change = 0.0145, Max-Change = 0.0062, Max-Change = 0.0128, Max-Change = 0.0127, Max-Change = 0.0167, Max-Change = 0.0117, Max-Change = 0.0079, Max-Change = 0.0170, Max-Change = 0.0163, Max-Change = 0.0093, Max-Change = 0.0094, Max-Change = 0.0147, Max-Change = 0.0057, Max-Change = 0.0175, Max-Change = 0.0084, Max-Change = 0.0149, Max-Change = 0.0051, Max-Change = 0.0126, Max-Change = 0.0149, Max-Change = 0.0224, Max-Change = 0.0094, Max-Change = 0.0108, Max-Change = 0.0175, Max-Change = 0.0080, Max-Change = 0.0122, Max-Change = 0.0100, Max-Change = 0.0113, Max-Change = 0.0164, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0118, gam = 0.1057, Max-Change = 0.0087, gam = 0.0780, Max-Change = 0.0021, gam = 0.0629, Max-Change = 0.0056, gam = 0.0532, Max-Change = 0.0039, gam = 0.0464, Max-Change = 0.0022, gam = 0.0413, Max-Change = 0.0034, gam = 0.0374, Max-Change = 0.0035, gam = 0.0342, Max-Change = 0.0008, gam = 0.0316, Max-Change = 0.0007, gam = 0.0294, Max-Change = 0.0039, gam = 0.0276, Max-Change = 0.0024, gam = 0.0260, Max-Change = 0.0019, gam = 0.0246, Max-Change = 0.0009, gam = 0.0233, Max-Change = 0.0017, gam = 0.0222, Max-Change = 0.0011, gam = 0.0212, Max-Change = 0.0014, gam = 0.0203, Max-Change = 0.0008, gam = 0.0195, Max-Change = 0.0002, gam = 0.0188, Max-Change = 0.0021, gam = 0.0181, Max-Change = 0.0009, gam = 0.0175, Max-Change = 0.0015, gam = 0.0169, Max-Change = 0.0011, gam = 0.0164, Max-Change = 0.0010, gam = 0.0159, Max-Change = 0.0004, gam = 0.0154, Max-Change = 0.0009, gam = 0.0150, Max-Change = 0.0003 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood... anova(rmod0, rmod1b) #>             AIC    SABIC       HQ      BIC    logLik      X2 df p #> rmod0  9698.483 9716.375 9718.663 9751.310 -4838.242              #> rmod1b 9472.610 9493.755 9496.459 9535.041 -4723.305 229.873  2 0 coef(rmod1a, simplify=TRUE) #> $items #>         a1      d g u #> Item_1   1 -0.466 0 1 #> Item_2   1  0.193 0 1 #> Item_3   1 -0.699 0 1 #> Item_4   1  1.795 0 1 #> Item_5   1  0.561 0 1 #> Item_6   1 -0.607 0 1 #> Item_7   1  0.636 0 1 #> Item_8   1  0.957 0 1 #> Item_9   1  0.759 0 1 #> Item_10  1 -0.167 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>       F1 #> F1 1.005 #>  #> $lr.betas #>                F1 #> (Intercept) 0.000 #> groupg2     0.797 #> groupg3     1.707 #>  summary(rmod1b) #>  #> Call: #> mixedmirt(data = dat, covdata = covdata, model = 1, fixed = ~0 +  #>     items + group) #>  #> -------------- #> FIXED EFFECTS: #>         Estimate Std.Error z.value #> groupg2    0.821     0.118   6.972 #> groupg3    1.683     0.111  15.140 #>  #> -------------- #> RANDOM EFFECT COVARIANCE(S): #> Correlations on upper diagonal #>  #> $Theta #>    F1 #> F1  1 #>   # 2PL, requires different input to allow Theta variance to remain fixed mod0 <- mirt(dat, 1) # unconditional #>  mod1a <- mirt(dat, 1, covdata = covdata, formula = ~ group, itemtype = '2PL') #>  mod1b <- mixedmirt(dat, covdata, 1, fixed = ~ 0 + items, lr.fixed = ~group, itemtype = '2PL') #> , Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.1937, Max-Change = 0.1590, Max-Change = 0.1455, Max-Change = 0.1217, Max-Change = 0.1043, Max-Change = 0.0948, Max-Change = 0.0799, Max-Change = 0.0691, Max-Change = 0.0633, Max-Change = 0.0481, Max-Change = 0.0417, Max-Change = 0.0393, Max-Change = 0.0264, Max-Change = 0.0549, Max-Change = 0.0198, Max-Change = 0.0260, Max-Change = 0.0205, Max-Change = 0.0201, Max-Change = 0.0274, Max-Change = 0.0250, Max-Change = 0.0381, Max-Change = 0.0146, Max-Change = 0.0227, Max-Change = 0.0456, Max-Change = 0.0278, Max-Change = 0.0151, Max-Change = 0.0267, Max-Change = 0.0274, Max-Change = 0.0234, Max-Change = 0.0229, Max-Change = 0.0192, Max-Change = 0.0254, Max-Change = 0.0336, Max-Change = 0.0151, Max-Change = 0.0182, Max-Change = 0.0177, Max-Change = 0.0190, Max-Change = 0.0151, Max-Change = 0.0118, Max-Change = 0.0229, Max-Change = 0.0186, Max-Change = 0.0140, Max-Change = 0.0197, Max-Change = 0.0176, Max-Change = 0.0128, Max-Change = 0.0154, Max-Change = 0.0254, Max-Change = 0.0187, Max-Change = 0.0143, Max-Change = 0.0170, Max-Change = 0.0234, Max-Change = 0.0362, Max-Change = 0.0341, Max-Change = 0.0320, Max-Change = 0.0249, Max-Change = 0.0158, Max-Change = 0.0274, Max-Change = 0.0170, Max-Change = 0.0274, Max-Change = 0.0203, Max-Change = 0.0240, Max-Change = 0.0293, Max-Change = 0.0185, Max-Change = 0.0166, Max-Change = 0.0328, Max-Change = 0.0220, Max-Change = 0.0272, Max-Change = 0.0278, Max-Change = 0.0197, Max-Change = 0.0209, Max-Change = 0.0114, Max-Change = 0.0254, Max-Change = 0.0274, Max-Change = 0.0209, Max-Change = 0.0179, Max-Change = 0.0176, Max-Change = 0.0122, Max-Change = 0.0209, Max-Change = 0.0207, Max-Change = 0.0190, Max-Change = 0.0240, Max-Change = 0.0207, Max-Change = 0.0182, Max-Change = 0.0190, Max-Change = 0.0265, Max-Change = 0.0289, Max-Change = 0.0183, Max-Change = 0.0164, Max-Change = 0.0246, Max-Change = 0.0345, Max-Change = 0.0196, Max-Change = 0.0266, Max-Change = 0.0163, Max-Change = 0.0237, Max-Change = 0.0174, Max-Change = 0.0131, Max-Change = 0.0152, Max-Change = 0.0165, Max-Change = 0.0232, Max-Change = 0.0191, Max-Change = 0.0154, Max-Change = 0.0209, Max-Change = 0.0144, Max-Change = 0.0282, Max-Change = 0.0247, Max-Change = 0.0117, Max-Change = 0.0103, Max-Change = 0.0224, Max-Change = 0.0156, Max-Change = 0.0179, Max-Change = 0.0159, Max-Change = 0.0229, Max-Change = 0.0217, Max-Change = 0.0193, Max-Change = 0.0191, Max-Change = 0.0189, Max-Change = 0.0414, Max-Change = 0.0325, Max-Change = 0.0230, Max-Change = 0.0280, Max-Change = 0.0241, Max-Change = 0.0183, Max-Change = 0.0318, Max-Change = 0.0178, Max-Change = 0.0209, Max-Change = 0.0166, Max-Change = 0.0181, Max-Change = 0.0169, Max-Change = 0.0252, Max-Change = 0.0146, Max-Change = 0.0267, Max-Change = 0.0209, Max-Change = 0.0270, Max-Change = 0.0175, Max-Change = 0.0263, Max-Change = 0.0149, Max-Change = 0.0140, Max-Change = 0.0228, Max-Change = 0.0180, Max-Change = 0.0383, Max-Change = 0.0207, Max-Change = 0.0251, Max-Change = 0.0118, Max-Change = 0.0148, Max-Change = 0.0181, Max-Change = 0.0310, Max-Change = 0.0256, Max-Change = 0.0140, Max-Change = 0.0130, Max-Change = 0.0195, Max-Change = 0.0199, Max-Change = 0.0365, Max-Change = 0.0221, Max-Change = 0.0294, Max-Change = 0.0219, Max-Change = 0.0207, Max-Change = 0.0159, Max-Change = 0.0211, Max-Change = 0.0287, Max-Change = 0.0139, Max-Change = 0.0225, Max-Change = 0.0134, Max-Change = 0.0103, Max-Change = 0.0168, Max-Change = 0.0301, Max-Change = 0.0250, Max-Change = 0.0232, Max-Change = 0.0402, Max-Change = 0.0227, Max-Change = 0.0194, Max-Change = 0.0263, Max-Change = 0.0164, Max-Change = 0.0164, Max-Change = 0.0213, Max-Change = 0.0324, Max-Change = 0.0187, Max-Change = 0.0201, Max-Change = 0.0249, Max-Change = 0.0327, Max-Change = 0.0269, Max-Change = 0.0392, Max-Change = 0.0311, Max-Change = 0.0137, Max-Change = 0.0276, Max-Change = 0.0189, Max-Change = 0.0218, Max-Change = 0.0157, Max-Change = 0.0336, Max-Change = 0.0302, Max-Change = 0.0216, Max-Change = 0.0214, Max-Change = 0.0190, Max-Change = 0.0213, Max-Change = 0.0266, Max-Change = 0.0149, Max-Change = 0.0213, Max-Change = 0.0228, Max-Change = 0.0215, Max-Change = 0.0333, Max-Change = 0.0090, Max-Change = 0.0261, Max-Change = 0.0156, Max-Change = 0.0148, Max-Change = 0.0208, Max-Change = 0.0142, Max-Change = 0.0172, Max-Change = 0.0320, Max-Change = 0.0210, Max-Change = 0.0249, Max-Change = 0.0289, Max-Change = 0.0183, Max-Change = 0.0131, Max-Change = 0.0257, Max-Change = 0.0169, Max-Change = 0.0257, Max-Change = 0.0114, Max-Change = 0.0163, Max-Change = 0.0158, Max-Change = 0.0116, Max-Change = 0.0185, Max-Change = 0.0238, Max-Change = 0.0268, Max-Change = 0.0185, Max-Change = 0.0219, Max-Change = 0.0204, Max-Change = 0.0216, Max-Change = 0.0216, Max-Change = 0.0324, Max-Change = 0.0184, Max-Change = 0.0172, Max-Change = 0.0248, Max-Change = 0.0177, Max-Change = 0.0218, Max-Change = 0.0126, Max-Change = 0.0175, Max-Change = 0.0239, Max-Change = 0.0197, Max-Change = 0.0267, Max-Change = 0.0247, Max-Change = 0.0338, Max-Change = 0.0156, Max-Change = 0.0186, Max-Change = 0.0153, Max-Change = 0.0425, Max-Change = 0.0265, Max-Change = 0.0145, Max-Change = 0.0254, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0225, gam = 0.1057, Max-Change = 0.0134, gam = 0.0780, Max-Change = 0.0108, gam = 0.0629, Max-Change = 0.0051, gam = 0.0532, Max-Change = 0.0074, gam = 0.0464, Max-Change = 0.0045, gam = 0.0413, Max-Change = 0.0046, gam = 0.0374, Max-Change = 0.0044, gam = 0.0342, Max-Change = 0.0056, gam = 0.0316, Max-Change = 0.0034, gam = 0.0294, Max-Change = 0.0035, gam = 0.0276, Max-Change = 0.0032, gam = 0.0260, Max-Change = 0.0024, gam = 0.0246, Max-Change = 0.0036, gam = 0.0233, Max-Change = 0.0029, gam = 0.0222, Max-Change = 0.0030, gam = 0.0212, Max-Change = 0.0034, gam = 0.0203, Max-Change = 0.0021, gam = 0.0195, Max-Change = 0.0019, gam = 0.0188, Max-Change = 0.0016, gam = 0.0181, Max-Change = 0.0019, gam = 0.0175, Max-Change = 0.0018, gam = 0.0169, Max-Change = 0.0011, gam = 0.0164, Max-Change = 0.0027, gam = 0.0159, Max-Change = 0.0013, gam = 0.0154, Max-Change = 0.0008, gam = 0.0150, Max-Change = 0.0019, gam = 0.0146, Max-Change = 0.0022, gam = 0.0142, Max-Change = 0.0011, gam = 0.0139, Max-Change = 0.0012, gam = 0.0135, Max-Change = 0.0015, gam = 0.0132, Max-Change = 0.0016, gam = 0.0129, Max-Change = 0.0012, gam = 0.0126, Max-Change = 0.0018, gam = 0.0124, Max-Change = 0.0013, gam = 0.0121, Max-Change = 0.0013, gam = 0.0119, Max-Change = 0.0008, gam = 0.0116, Max-Change = 0.0008, gam = 0.0114, Max-Change = 0.0011, gam = 0.0112, Max-Change = 0.0009, gam = 0.0110, Max-Change = 0.0022, gam = 0.0108, Max-Change = 0.0014, gam = 0.0106, Max-Change = 0.0014, gam = 0.0104, Max-Change = 0.0016, gam = 0.0102, Max-Change = 0.0011, gam = 0.0101, Max-Change = 0.0005, gam = 0.0099, Max-Change = 0.0009, gam = 0.0098, Max-Change = 0.0010 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood... anova(mod0, mod1b) #>            AIC    SABIC       HQ      BIC    logLik      X2 df p #> mod0  9706.089 9738.620 9742.780 9802.136 -4833.044              #> mod1b 9481.042 9516.826 9521.402 9586.694 -4718.521 229.047  2 0 coef(mod1a)$lr.betas #>                    F1 #> (Intercept) 0.0000000 #> groupg2     0.7910307 #> groupg3     1.7064184 summary(mod1b) #>  #> Call: #> mixedmirt(data = dat, covdata = covdata, model = 1, fixed = ~0 +  #>     items, itemtype = \"2PL\", lr.fixed = ~group) #>  #>  #> -------------- #> RANDOM EFFECT COVARIANCE(S): #> Correlations on upper diagonal #>  #> $Theta #>    F1 #> F1  1 #>  #> -------------- #> LATENT REGRESSION FIXED EFFECTS: #>  #>                F1 #> (Intercept) 0.000 #> groupg2     0.767 #> groupg3     1.711 #>  #>             Std.Error_F1 z_F1 #> (Intercept)           NA   NA #> groupg2              NaN  NaN #> groupg3              NaN  NaN  # specifying specific regression effects is accomplished by passing a list of formula model <- 'F1 = 1-5          F2 = 6-10' covdata$contvar <- rnorm(nrow(covdata)) mod2 <- mirt(dat, model, itemtype = 'Rasch', covdata=covdata,         formula = list(F1 = ~ group + contvar, F2 = ~ group)) #>  coef(mod2)[11:12] #> $GroupPars #>     MEAN_1 MEAN_2   COV_11 COV_21   COV_22 #> par      0      0 1.034151      0 1.103469 #>  #> $lr.betas #>                     F1        F2 #> (Intercept) 0.00000000 0.0000000 #> groupg2     0.71964300 0.9025485 #> groupg3     1.74224986 1.6947594 #> contvar     0.08607095 0.0000000 #>  mod2b <- mixedmirt(dat, covdata, model, fixed = ~ 0 + items,         lr.fixed = list(F1 = ~ group + contvar, F2 = ~ group)) #> , Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.1883, Max-Change = 0.1650, Max-Change = 0.1425, Max-Change = 0.1196, Max-Change = 0.0963, Max-Change = 0.0807, Max-Change = 0.0685, Max-Change = 0.0556, Max-Change = 0.0466, Max-Change = 0.0472, Max-Change = 0.0390, Max-Change = 0.0317, Max-Change = 0.0255, Max-Change = 0.0232, Max-Change = 0.0269, Max-Change = 0.0205, Max-Change = 0.0404, Max-Change = 0.0180, Max-Change = 0.0142, Max-Change = 0.0080, Max-Change = 0.0157, Max-Change = 0.0374, Max-Change = 0.0174, Max-Change = 0.0236, Max-Change = 0.0228, Max-Change = 0.0158, Max-Change = 0.0160, Max-Change = 0.0123, Max-Change = 0.0086, Max-Change = 0.0162, Max-Change = 0.0185, Max-Change = 0.0169, Max-Change = 0.0136, Max-Change = 0.0162, Max-Change = 0.0197, Max-Change = 0.0202, Max-Change = 0.0148, Max-Change = 0.0186, Max-Change = 0.0100, Max-Change = 0.0172, Max-Change = 0.0177, Max-Change = 0.0128, Max-Change = 0.0166, Max-Change = 0.0164, Max-Change = 0.0112, Max-Change = 0.0121, Max-Change = 0.0180, Max-Change = 0.0131, Max-Change = 0.0175, Max-Change = 0.0169, Max-Change = 0.0108, Max-Change = 0.0142, Max-Change = 0.0172, Max-Change = 0.0212, Max-Change = 0.0142, Max-Change = 0.0214, Max-Change = 0.0185, Max-Change = 0.0110, Max-Change = 0.0161, Max-Change = 0.0159, Max-Change = 0.0115, Max-Change = 0.0100, Max-Change = 0.0234, Max-Change = 0.0184, Max-Change = 0.0124, Max-Change = 0.0160, Max-Change = 0.0188, Max-Change = 0.0169, Max-Change = 0.0151, Max-Change = 0.0154, Max-Change = 0.0123, Max-Change = 0.0129, Max-Change = 0.0181, Max-Change = 0.0158, Max-Change = 0.0118, Max-Change = 0.0149, Max-Change = 0.0116, Max-Change = 0.0235, Max-Change = 0.0141, Max-Change = 0.0091, Max-Change = 0.0090, Max-Change = 0.0143, Max-Change = 0.0101, Max-Change = 0.0198, Max-Change = 0.0188, Max-Change = 0.0175, Max-Change = 0.0139, Max-Change = 0.0197, Max-Change = 0.0194, Max-Change = 0.0168, Max-Change = 0.0204, Max-Change = 0.0143, Max-Change = 0.0194, Max-Change = 0.0106, Max-Change = 0.0157, Max-Change = 0.0112, Max-Change = 0.0063, Max-Change = 0.0169, Max-Change = 0.0149, Max-Change = 0.0125, Max-Change = 0.0061, Max-Change = 0.0066, Max-Change = 0.0145, Max-Change = 0.0156, Max-Change = 0.0191, Max-Change = 0.0206, Max-Change = 0.0111, Max-Change = 0.0107, Max-Change = 0.0120, Max-Change = 0.0093, Max-Change = 0.0094, Max-Change = 0.0214, Max-Change = 0.0180, Max-Change = 0.0214, Max-Change = 0.0122, Max-Change = 0.0072, Max-Change = 0.0105, Max-Change = 0.0151, Max-Change = 0.0192, Max-Change = 0.0149, Max-Change = 0.0183, Max-Change = 0.0221, Max-Change = 0.0133, Max-Change = 0.0165, Max-Change = 0.0076, Max-Change = 0.0261, Max-Change = 0.0132, Max-Change = 0.0190, Max-Change = 0.0211, Max-Change = 0.0192, Max-Change = 0.0219, Max-Change = 0.0094, Max-Change = 0.0067, Max-Change = 0.0181, Max-Change = 0.0200, Max-Change = 0.0245, Max-Change = 0.0084, Max-Change = 0.0112, Max-Change = 0.0109, Max-Change = 0.0112, Max-Change = 0.0171, Max-Change = 0.0154, Max-Change = 0.0127, Max-Change = 0.0190, Max-Change = 0.0245, Max-Change = 0.0113, Max-Change = 0.0149, Max-Change = 0.0155, Max-Change = 0.0159, Max-Change = 0.0152, Max-Change = 0.0187, Max-Change = 0.0203, Max-Change = 0.0080, Max-Change = 0.0154, Max-Change = 0.0175, Max-Change = 0.0194, Max-Change = 0.0160, Max-Change = 0.0137, Max-Change = 0.0100, Max-Change = 0.0170, Max-Change = 0.0280, Max-Change = 0.0181, Max-Change = 0.0120, Max-Change = 0.0091, Max-Change = 0.0207, Max-Change = 0.0099, Max-Change = 0.0212, Max-Change = 0.0202, Max-Change = 0.0218, Max-Change = 0.0189, Max-Change = 0.0199, Max-Change = 0.0170, Max-Change = 0.0128, Max-Change = 0.0265, Max-Change = 0.0096, Max-Change = 0.0114, Max-Change = 0.0136, Max-Change = 0.0143, Max-Change = 0.0071, Max-Change = 0.0117, Max-Change = 0.0166, Max-Change = 0.0161, Max-Change = 0.0176, Max-Change = 0.0249, Max-Change = 0.0131, Max-Change = 0.0146, Max-Change = 0.0128, Max-Change = 0.0197, Max-Change = 0.0209, Max-Change = 0.0149, Max-Change = 0.0203, Max-Change = 0.0226, Max-Change = 0.0092, Max-Change = 0.0130, Max-Change = 0.0257, Max-Change = 0.0115, Max-Change = 0.0170, Max-Change = 0.0095, Max-Change = 0.0125, Max-Change = 0.0077, Max-Change = 0.0110, Max-Change = 0.0153, Max-Change = 0.0060, Max-Change = 0.0143, Max-Change = 0.0105, Max-Change = 0.0184, Max-Change = 0.0132, Max-Change = 0.0119, Max-Change = 0.0092, Max-Change = 0.0108, Max-Change = 0.0106, Max-Change = 0.0102, Max-Change = 0.0135, Max-Change = 0.0115, Max-Change = 0.0162, Max-Change = 0.0307, Max-Change = 0.0202, Max-Change = 0.0134, Max-Change = 0.0163, Max-Change = 0.0135, Max-Change = 0.0234, Max-Change = 0.0183, Max-Change = 0.0218, Max-Change = 0.0083, Max-Change = 0.0202, Max-Change = 0.0127, Max-Change = 0.0167, Max-Change = 0.0111, Max-Change = 0.0140, Max-Change = 0.0143, Max-Change = 0.0206, Max-Change = 0.0100, Max-Change = 0.0225, Max-Change = 0.0134, Max-Change = 0.0305, Max-Change = 0.0269, Max-Change = 0.0157, Max-Change = 0.0146, Max-Change = 0.0137, Max-Change = 0.0130, Max-Change = 0.0149, Max-Change = 0.0203, Max-Change = 0.0114, Max-Change = 0.0156, Max-Change = 0.0186, Max-Change = 0.0123, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0183, gam = 0.1057, Max-Change = 0.0058, gam = 0.0780, Max-Change = 0.0061, gam = 0.0629, Max-Change = 0.0072, gam = 0.0532, Max-Change = 0.0045, gam = 0.0464, Max-Change = 0.0030, gam = 0.0413, Max-Change = 0.0038, gam = 0.0374, Max-Change = 0.0030, gam = 0.0342, Max-Change = 0.0038, gam = 0.0316, Max-Change = 0.0014, gam = 0.0294, Max-Change = 0.0013, gam = 0.0276, Max-Change = 0.0019, gam = 0.0260, Max-Change = 0.0021, gam = 0.0246, Max-Change = 0.0025, gam = 0.0233, Max-Change = 0.0026, gam = 0.0222, Max-Change = 0.0026, gam = 0.0212, Max-Change = 0.0016, gam = 0.0203, Max-Change = 0.0015, gam = 0.0195, Max-Change = 0.0011, gam = 0.0188, Max-Change = 0.0014, gam = 0.0181, Max-Change = 0.0009, gam = 0.0175, Max-Change = 0.0010, gam = 0.0169, Max-Change = 0.0009, gam = 0.0164, Max-Change = 0.0016, gam = 0.0159, Max-Change = 0.0021, gam = 0.0154, Max-Change = 0.0013, gam = 0.0150, Max-Change = 0.0007, gam = 0.0146, Max-Change = 0.0015, gam = 0.0142, Max-Change = 0.0021, gam = 0.0139, Max-Change = 0.0011, gam = 0.0135, Max-Change = 0.0007, gam = 0.0132, Max-Change = 0.0008, gam = 0.0129, Max-Change = 0.0009 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood... summary(mod2b) #>  #> Call: #> mixedmirt(data = dat, covdata = covdata, model = model, fixed = ~0 +  #>     items, lr.fixed = list(F1 = ~group + contvar, F2 = ~group)) #>  #>  #> -------------- #> RANDOM EFFECT COVARIANCE(S): #> Correlations on upper diagonal #>  #> $Theta #>      F1   F2 #> F1 1.02 0.00 #> F2 0.00 1.09 #>  #> -------------- #> LATENT REGRESSION FIXED EFFECTS: #>  #>                F1    F2 #> (Intercept) 0.000 0.000 #> groupg2     0.727 0.823 #> groupg3     1.764 1.637 #> contvar     0.080 0.000 #>  #>             Std.Error_F1 Std.Error_F2  z_F1   z_F2 #> (Intercept)           NA           NA    NA     NA #> groupg2            0.134        0.105 5.438  7.841 #> groupg3            0.177        0.107 9.959 15.259 #> contvar            0.058           NA 1.379     NA  #################################################### ## Simulated Multilevel Rasch Model  set.seed(1) N <- 2000 a <- matrix(rep(1,10),10,1) d <- matrix(rnorm(10)) cluster = 100 random_intercept = rnorm(cluster,0,1) Theta = numeric() for (i in 1:cluster)     Theta <- c(Theta, rnorm(N/cluster,0,1) + random_intercept[i])  group = factor(rep(paste0('G',1:cluster), each = N/cluster)) covdata <- data.frame(group) dat <- simdata(a,d,N, itemtype = rep('2PL',10), Theta=matrix(Theta)) itemstats(dat) #> $overall #>     N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  2000            5.414          2.749  0.25 0.019 0.769     1.321 #>  #> $itemstats #>            N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item_1  2000 2 0.424 0.494   0.573         0.433       0.750 #> Item_2  2000 2 0.560 0.497   0.602         0.467       0.745 #> Item_3  2000 2 0.373 0.484   0.547         0.405       0.754 #> Item_4  2000 2 0.781 0.414   0.524         0.402       0.754 #> Item_5  2000 2 0.577 0.494   0.585         0.447       0.748 #> Item_6  2000 2 0.378 0.485   0.571         0.434       0.750 #> Item_7  2000 2 0.598 0.491   0.568         0.428       0.751 #> Item_8  2000 2 0.652 0.476   0.568         0.432       0.750 #> Item_9  2000 2 0.620 0.486   0.577         0.440       0.749 #> Item_10 2000 2 0.453 0.498   0.584         0.445       0.748 #>  #> $proportions #>             0     1 #> Item_1  0.577 0.424 #> Item_2  0.440 0.560 #> Item_3  0.627 0.373 #> Item_4  0.219 0.781 #> Item_5  0.424 0.577 #> Item_6  0.622 0.378 #> Item_7  0.402 0.598 #> Item_8  0.348 0.652 #> Item_9  0.380 0.620 #> Item_10 0.547 0.453 #>   # null model mod1 <- mixedmirt(dat, covdata, 1, fixed = ~ 0 + items, random = ~ 1|group) #> , Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.1825, Max-Change = 0.1571, Max-Change = 0.1285, Max-Change = 0.1118, Max-Change = 0.0969, Max-Change = 0.0772, Max-Change = 0.0708, Max-Change = 0.0561, Max-Change = 0.0421, Max-Change = 0.0388, Max-Change = 0.0371, Max-Change = 0.0292, Max-Change = 0.0279, Max-Change = 0.0280, Max-Change = 0.0298, Max-Change = 0.0281, Max-Change = 0.0155, Max-Change = 0.0170, Max-Change = 0.0196, Max-Change = 0.0178, Max-Change = 0.0237, Max-Change = 0.0187, Max-Change = 0.0213, Max-Change = 0.0099, Max-Change = 0.0244, Max-Change = 0.0166, Max-Change = 0.0162, Max-Change = 0.0050, Max-Change = 0.0021, Max-Change = 0.0102, Max-Change = 0.0067, Max-Change = 0.0116, Max-Change = 0.0072, Max-Change = 0.0132, Max-Change = 0.0120, Max-Change = 0.0046, Max-Change = 0.0212, Max-Change = 0.0191, Max-Change = 0.0018, Max-Change = 0.0017, Max-Change = 0.0211, Max-Change = 0.0152, Max-Change = 0.0106, Max-Change = 0.0155, Max-Change = 0.0061, Max-Change = 0.0041, Max-Change = 0.0070, Max-Change = 0.0047, Max-Change = 0.0054, Max-Change = 0.0031, Max-Change = 0.0151, Max-Change = 0.0071, Max-Change = 0.0130, Max-Change = 0.0058, Max-Change = 0.0035, Max-Change = 0.0044, Max-Change = 0.0068, Max-Change = 0.0106, Max-Change = 0.0058, Max-Change = 0.0065, Max-Change = 0.0030, Max-Change = 0.0078, Max-Change = 0.0160, Max-Change = 0.0089, Max-Change = 0.0077, Max-Change = 0.0106, Max-Change = 0.0092, Max-Change = 0.0155, Max-Change = 0.0181, Max-Change = 0.0104, Max-Change = 0.0151, Max-Change = 0.0145, Max-Change = 0.0030, Max-Change = 0.0058, Max-Change = 0.0041, Max-Change = 0.0064, Max-Change = 0.0187, Max-Change = 0.0024, Max-Change = 0.0019, Max-Change = 0.0066, Max-Change = 0.0035, Max-Change = 0.0057, Max-Change = 0.0059, Max-Change = 0.0063, Max-Change = 0.0050, Max-Change = 0.0150, Max-Change = 0.0118, Max-Change = 0.0072, Max-Change = 0.0049, Max-Change = 0.0037, Max-Change = 0.0012, Max-Change = 0.0023, Max-Change = 0.0076, Max-Change = 0.0033, Max-Change = 0.0071, Max-Change = 0.0045, Max-Change = 0.0169, Max-Change = 0.1604, Max-Change = 0.0823, Max-Change = 0.0655, Max-Change = 0.0506, Max-Change = 0.0506, Max-Change = 0.0465, Max-Change = 0.0366, Max-Change = 0.0268, Max-Change = 0.0292, Max-Change = 0.0274, Max-Change = 0.0089, Max-Change = 0.0328, Max-Change = 0.0200, Max-Change = 0.0162, Max-Change = 0.0139, Max-Change = 0.0238, Max-Change = 0.0122, Max-Change = 0.0054, Max-Change = 0.0121, Max-Change = 0.0102, Max-Change = 0.0059, Max-Change = 0.0210, Max-Change = 0.0241, Max-Change = 0.0091, Max-Change = 0.0027, Max-Change = 0.0034, Max-Change = 0.0108, Max-Change = 0.0070, Max-Change = 0.0126, Max-Change = 0.0176, Max-Change = 0.0136, Max-Change = 0.0162, Max-Change = 0.0077, Max-Change = 0.0107, Max-Change = 0.0056, Max-Change = 0.0137, Max-Change = 0.0097, Max-Change = 0.0057, Max-Change = 0.0045, Max-Change = 0.0058, Max-Change = 0.0074, Max-Change = 0.0012, Max-Change = 0.0096, Max-Change = 0.0073, Max-Change = 0.0058, Max-Change = 0.0048, Max-Change = 0.0091, Max-Change = 0.0057, Max-Change = 0.0058, Max-Change = 0.0106, Max-Change = 0.0070, Max-Change = 0.0027, Max-Change = 0.0044, Max-Change = 0.0036, Max-Change = 0.0032, Max-Change = 0.0063, Max-Change = 0.0053, Max-Change = 0.0049, Max-Change = 0.0114, Max-Change = 0.0080, Max-Change = 0.0054, Max-Change = 0.0143, Max-Change = 0.0183, Max-Change = 0.0110, Max-Change = 0.0025, Max-Change = 0.0047, Max-Change = 0.0071, Max-Change = 0.0039, Max-Change = 0.0101, Max-Change = 0.0093, Max-Change = 0.0067, Max-Change = 0.0014, Max-Change = 0.0041, Max-Change = 0.0047, Max-Change = 0.0073, Max-Change = 0.0108, Max-Change = 0.0033, Max-Change = 0.0120, Max-Change = 0.0109, Max-Change = 0.0149, Max-Change = 0.0138, Max-Change = 0.0082, Max-Change = 0.0119, Max-Change = 0.0063, Max-Change = 0.0074, Max-Change = 0.0123, Max-Change = 0.0063, Max-Change = 0.0044, Max-Change = 0.0047, Max-Change = 0.0098, Max-Change = 0.0102, Max-Change = 0.0207, Max-Change = 0.0144, Max-Change = 0.0101, Max-Change = 0.0039, Max-Change = 0.0079, Max-Change = 0.0092, Max-Change = 0.0020, Max-Change = 0.0040, Max-Change = 0.0080, Max-Change = 0.0104, Max-Change = 0.0072, Max-Change = 0.0118, Max-Change = 0.0109, Max-Change = 0.0041, Max-Change = 0.0042, Max-Change = 0.0096, Max-Change = 0.0043, Max-Change = 0.0046, Max-Change = 0.0031, Max-Change = 0.0090, Max-Change = 0.0019, Max-Change = 0.0042, Max-Change = 0.0068, Max-Change = 0.0022, Max-Change = 0.0023, Max-Change = 0.0132, Max-Change = 0.0032, Max-Change = 0.0025, Max-Change = 0.0070, Max-Change = 0.0065, Max-Change = 0.0040, Max-Change = 0.0055, Max-Change = 0.0056, Max-Change = 0.0031, Max-Change = 0.0085, Max-Change = 0.0067, Max-Change = 0.0029, Max-Change = 0.0080, Max-Change = 0.0046, Max-Change = 0.0137, Max-Change = 0.0070, Max-Change = 0.0052, Max-Change = 0.0119, Max-Change = 0.0087, Max-Change = 0.0039, Max-Change = 0.0069, Max-Change = 0.0050, Max-Change = 0.0104, Max-Change = 0.0009, Max-Change = 0.0057, Max-Change = 0.0095, Max-Change = 0.0100, Max-Change = 0.0024, Max-Change = 0.0044, Max-Change = 0.0044, Max-Change = 0.0057, Max-Change = 0.0026, Max-Change = 0.0058, Max-Change = 0.0074, Max-Change = 0.0071, Max-Change = 0.0028, Max-Change = 0.0094, Max-Change = 0.0088, Max-Change = 0.0034, Max-Change = 0.0017, Max-Change = 0.0107, Max-Change = 0.0048, Max-Change = 0.0058, Max-Change = 0.0038, Max-Change = 0.0046, Max-Change = 0.0038, Max-Change = 0.0072, Max-Change = 0.0089, Max-Change = 0.0011, Max-Change = 0.0016, Max-Change = 0.0039, Max-Change = 0.0060, Max-Change = 0.0053, Max-Change = 0.0025, Max-Change = 0.0028, Max-Change = 0.0076, Max-Change = 0.0029, Max-Change = 0.0118, Max-Change = 0.0030, Max-Change = 0.0035, Max-Change = 0.0043, Max-Change = 0.0055, Max-Change = 0.0024, Max-Change = 0.0072, Max-Change = 0.0038, Max-Change = 0.0030, Max-Change = 0.0019, Max-Change = 0.0023, Max-Change = 0.0024, Max-Change = 0.0070, Max-Change = 0.0108, Max-Change = 0.0044, Max-Change = 0.0071, Max-Change = 0.0100, Max-Change = 0.0029, Max-Change = 0.0073, Max-Change = 0.0056, Max-Change = 0.0049, Max-Change = 0.0081, Max-Change = 0.0053, Max-Change = 0.0076, Max-Change = 0.0016, Max-Change = 0.0056, Max-Change = 0.0062, Max-Change = 0.0020, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0020, gam = 0.1057, Max-Change = 0.0083, gam = 0.0780, Max-Change = 0.0013, gam = 0.0629, Max-Change = 0.0017, gam = 0.0532, Max-Change = 0.0011, gam = 0.0464, Max-Change = 0.0002, gam = 0.0413, Max-Change = 0.0012, gam = 0.0374, Max-Change = 0.0004, gam = 0.0342, Max-Change = 0.0012, gam = 0.0316, Max-Change = 0.0003, gam = 0.0294, Max-Change = 0.0004, gam = 0.0276, Max-Change = 0.0010, gam = 0.0260, Max-Change = 0.0006, gam = 0.0246, Max-Change = 0.0004, gam = 0.0233, Max-Change = 0.0003 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood... summary(mod1) #>  #> Call: #> mixedmirt(data = dat, covdata = covdata, model = 1, fixed = ~0 +  #>     items, random = ~1 | group) #>  #>  #> -------------- #> RANDOM EFFECT COVARIANCE(S): #> Correlations on upper diagonal #>  #> $Theta #>      F1 #> F1 1.02 #>  #> $group #>           COV_group #> COV_group     0.853 #>   # include level 2 predictor for 'group' variance covdata$group_pred <- rep(random_intercept, each = N/cluster) mod2 <- mixedmirt(dat, covdata, 1, fixed = ~ 0 + items + group_pred, random = ~ 1|group) #> , Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.1797, Max-Change = 0.1540, Max-Change = 0.1292, Max-Change = 0.1114, Max-Change = 0.0981, Max-Change = 0.0797, Max-Change = 0.0726, Max-Change = 0.0565, Max-Change = 0.0436, Max-Change = 0.0397, Max-Change = 0.0353, Max-Change = 0.0313, Max-Change = 0.0278, Max-Change = 0.0326, Max-Change = 0.0265, Max-Change = 0.0204, Max-Change = 0.0212, Max-Change = 0.0173, Max-Change = 0.0144, Max-Change = 0.0184, Max-Change = 0.0145, Max-Change = 0.0115, Max-Change = 0.0066, Max-Change = 0.0137, Max-Change = 0.0068, Max-Change = 0.0131, Max-Change = 0.0088, Max-Change = 0.0131, Max-Change = 0.0121, Max-Change = 0.0098, Max-Change = 0.0085, Max-Change = 0.0064, Max-Change = 0.0127, Max-Change = 0.0081, Max-Change = 0.0079, Max-Change = 0.0073, Max-Change = 0.0062, Max-Change = 0.0087, Max-Change = 0.0085, Max-Change = 0.0046, Max-Change = 0.0091, Max-Change = 0.0039, Max-Change = 0.0077, Max-Change = 0.0035, Max-Change = 0.0032, Max-Change = 0.0047, Max-Change = 0.0046, Max-Change = 0.0074, Max-Change = 0.0039, Max-Change = 0.0037, Max-Change = 0.0104, Max-Change = 0.0064, Max-Change = 0.0067, Max-Change = 0.0035, Max-Change = 0.0043, Max-Change = 0.0088, Max-Change = 0.0028, Max-Change = 0.0047, Max-Change = 0.0040, Max-Change = 0.0024, Max-Change = 0.0078, Max-Change = 0.0162, Max-Change = 0.0064, Max-Change = 0.0054, Max-Change = 0.0070, Max-Change = 0.0016, Max-Change = 0.0066, Max-Change = 0.0069, Max-Change = 0.0076, Max-Change = 0.0078, Max-Change = 0.0057, Max-Change = 0.0103, Max-Change = 0.0023, Max-Change = 0.0051, Max-Change = 0.0057, Max-Change = 0.0055, Max-Change = 0.0184, Max-Change = 0.0044, Max-Change = 0.0037, Max-Change = 0.0050, Max-Change = 0.0042, Max-Change = 0.0070, Max-Change = 0.0010, Max-Change = 0.0078, Max-Change = 0.0022, Max-Change = 0.0104, Max-Change = 0.0058, Max-Change = 0.0075, Max-Change = 0.0049, Max-Change = 0.0010, Max-Change = 0.0014, Max-Change = 0.0033, Max-Change = 0.0029, Max-Change = 0.0033, Max-Change = 0.0053, Max-Change = 0.0015, Max-Change = 0.0026, Max-Change = 0.0172, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.1757, Max-Change = 0.1798, Max-Change = 0.1665, Max-Change = 0.0043, Max-Change = 0.0036, Max-Change = 0.0047, Max-Change = 0.0044, Max-Change = 0.0095, Max-Change = 0.0068, Max-Change = 0.0034, Max-Change = 0.0076, Max-Change = 0.0038, Max-Change = 0.0058, Max-Change = 0.0064, Max-Change = 0.0070, Max-Change = 0.0053, Max-Change = 0.0115, Max-Change = 0.0084, Max-Change = 0.0088, Max-Change = 0.0042, Max-Change = 0.0051, Max-Change = 0.0060, Max-Change = 0.0075, Max-Change = 0.0062, Max-Change = 0.0056, Max-Change = 0.0088, Max-Change = 0.0070, Max-Change = 0.0040, Max-Change = 0.0161, Max-Change = 0.0061, Max-Change = 0.0044, Max-Change = 0.0038, Max-Change = 0.0070, Max-Change = 0.0018, Max-Change = 0.0071, Max-Change = 0.0095, Max-Change = 0.0081, Max-Change = 0.0092, Max-Change = 0.0070, Max-Change = 0.0144, Max-Change = 0.0061, Max-Change = 0.0084, Max-Change = 0.0076, Max-Change = 0.0065, Max-Change = 0.0046, Max-Change = 0.0049, Max-Change = 0.0092, Max-Change = 0.0063, Max-Change = 0.0027, Max-Change = 0.0061, Max-Change = 0.0085, Max-Change = 0.0043, Max-Change = 0.0063, Max-Change = 0.0052, Max-Change = 0.0028, Max-Change = 0.0054, Max-Change = 0.0076, Max-Change = 0.0027, Max-Change = 0.0039, Max-Change = 0.0033, Max-Change = 0.0041, Max-Change = 0.0082, Max-Change = 0.0050, Max-Change = 0.0104, Max-Change = 0.0078, Max-Change = 0.0037, Max-Change = 0.0060, Max-Change = 0.0080, Max-Change = 0.0045, Max-Change = 0.0068, Max-Change = 0.0039, Max-Change = 0.0078, Max-Change = 0.0041, Max-Change = 0.0038, Max-Change = 0.0019, Max-Change = 0.0061, Max-Change = 0.0112, Max-Change = 0.0074, Max-Change = 0.0025, Max-Change = 0.0039, Max-Change = 0.0087, Max-Change = 0.0016, Max-Change = 0.0032, Max-Change = 0.0020, Max-Change = 0.0066, Max-Change = 0.0022, Max-Change = 0.0048, Max-Change = 0.0050, Max-Change = 0.0066, Max-Change = 0.0036, Max-Change = 0.0040, Max-Change = 0.0049, Max-Change = 0.0049, Max-Change = 0.0078, Max-Change = 0.0041, Max-Change = 0.0093, Max-Change = 0.0046, Max-Change = 0.0109, Max-Change = 0.0053, Max-Change = 0.0105, Max-Change = 0.0050, Max-Change = 0.0022, Max-Change = 0.0057, Max-Change = 0.0064, Max-Change = 0.0040, Max-Change = 0.0044, Max-Change = 0.0053, Max-Change = 0.0095, Max-Change = 0.0033, Max-Change = 0.0030, Max-Change = 0.0066, Max-Change = 0.0019, Max-Change = 0.0035, Max-Change = 0.0124, Max-Change = 0.0072, Max-Change = 0.0072, Max-Change = 0.0075, Max-Change = 0.0074, Max-Change = 0.0034, Max-Change = 0.0055, Max-Change = 0.0036, Max-Change = 0.0020, Max-Change = 0.0090, Max-Change = 0.0070, Max-Change = 0.0048, Max-Change = 0.0064, Max-Change = 0.0046, Max-Change = 0.0049, Max-Change = 0.0049, Max-Change = 0.0042, Max-Change = 0.0090, Max-Change = 0.0049, Max-Change = 0.0034, Max-Change = 0.0071, Max-Change = 0.0040, Max-Change = 0.0124, Max-Change = 0.0072, Max-Change = 0.0065, Max-Change = 0.0072, Max-Change = 0.0140, Max-Change = 0.0046, Max-Change = 0.0095, Max-Change = 0.0052, Max-Change = 0.0078, Max-Change = 0.0026, Max-Change = 0.0081, Max-Change = 0.0097, Max-Change = 0.0031, Max-Change = 0.0037, Max-Change = 0.0112, Max-Change = 0.0082, Max-Change = 0.0051, Max-Change = 0.0026, Max-Change = 0.0031, Max-Change = 0.0055, Max-Change = 0.0118, Max-Change = 0.0060, Max-Change = 0.0030, Max-Change = 0.0054, Max-Change = 0.0032, Max-Change = 0.0106, Max-Change = 0.0020, Max-Change = 0.0077, Max-Change = 0.0047, Max-Change = 0.0053, Max-Change = 0.0060, Max-Change = 0.0062, Max-Change = 0.0019, Max-Change = 0.0039, Max-Change = 0.0009, Max-Change = 0.0143, Max-Change = 0.0031, Max-Change = 0.0069, Max-Change = 0.0050, Max-Change = 0.0027, Max-Change = 0.0020, Max-Change = 0.0085, Max-Change = 0.0023, Max-Change = 0.0040, Max-Change = 0.0049, Max-Change = 0.0040, Max-Change = 0.0048, Max-Change = 0.0056, Max-Change = 0.0050, Max-Change = 0.0046, Max-Change = 0.0065, Max-Change = 0.0133, Max-Change = 0.0035, Max-Change = 0.0059, Max-Change = 0.0067, Max-Change = 0.0044, Max-Change = 0.0060, Max-Change = 0.0030, Max-Change = 0.0072, Max-Change = 0.0066, Max-Change = 0.0067, Max-Change = 0.0045, Max-Change = 0.0033, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0026, gam = 0.1057, Max-Change = 0.0077, gam = 0.0780, Max-Change = 0.0018, gam = 0.0629, Max-Change = 0.0029, gam = 0.0532, Max-Change = 0.0016, gam = 0.0464, Max-Change = 0.0007, gam = 0.0413, Max-Change = 0.0006, gam = 0.0374, Max-Change = 0.0004 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood...  # including group means predicts nearly all variability in 'group' summary(mod2) #>  #> Call: #> mixedmirt(data = dat, covdata = covdata, model = 1, fixed = ~0 +  #>     items + group_pred, random = ~1 | group) #>  #> -------------- #> FIXED EFFECTS: #>            Estimate Std.Error z.value #> group_pred    1.017      0.05  20.282 #>  #> -------------- #> RANDOM EFFECT COVARIANCE(S): #> Correlations on upper diagonal #>  #> $Theta #>      F1 #> F1 1.04 #>  #> $group #>           COV_group #> COV_group    0.0335 #>  anova(mod1, mod2) #>           AIC    SABIC       HQ      BIC    logLik     X2 df p #> mod1 23548.80 23577.89 23573.48 23616.01 -11762.40             #> mod2 22744.85 22776.36 22771.59 22817.66 -11359.43 805.95  1 0  # can also be fit for Rasch/non-Rasch models with the lr.random input mod1b <- mixedmirt(dat, covdata, 1, fixed = ~ 0 + items, lr.random = ~ 1|group) #> , Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.1825, Max-Change = 0.1571, Max-Change = 0.1285, Max-Change = 0.1118, Max-Change = 0.0969, Max-Change = 0.0772, Max-Change = 0.0708, Max-Change = 0.0561, Max-Change = 0.0421, Max-Change = 0.0388, Max-Change = 0.0371, Max-Change = 0.0292, Max-Change = 0.0279, Max-Change = 0.0280, Max-Change = 0.0298, Max-Change = 0.0281, Max-Change = 0.0155, Max-Change = 0.0170, Max-Change = 0.0196, Max-Change = 0.0178, Max-Change = 0.0237, Max-Change = 0.0187, Max-Change = 0.0213, Max-Change = 0.0099, Max-Change = 0.0244, Max-Change = 0.0166, Max-Change = 0.0162, Max-Change = 0.0050, Max-Change = 0.0021, Max-Change = 0.0102, Max-Change = 0.0067, Max-Change = 0.0116, Max-Change = 0.0072, Max-Change = 0.0132, Max-Change = 0.0120, Max-Change = 0.0046, Max-Change = 0.0212, Max-Change = 0.0191, Max-Change = 0.0018, Max-Change = 0.0017, Max-Change = 0.0211, Max-Change = 0.0152, Max-Change = 0.0106, Max-Change = 0.0155, Max-Change = 0.0061, Max-Change = 0.0041, Max-Change = 0.0070, Max-Change = 0.0047, Max-Change = 0.0054, Max-Change = 0.0031, Max-Change = 0.0151, Max-Change = 0.0071, Max-Change = 0.0130, Max-Change = 0.0058, Max-Change = 0.0035, Max-Change = 0.0044, Max-Change = 0.0068, Max-Change = 0.0106, Max-Change = 0.0058, Max-Change = 0.0065, Max-Change = 0.0030, Max-Change = 0.0078, Max-Change = 0.0160, Max-Change = 0.0089, Max-Change = 0.0077, Max-Change = 0.0106, Max-Change = 0.0092, Max-Change = 0.0155, Max-Change = 0.0181, Max-Change = 0.0104, Max-Change = 0.0151, Max-Change = 0.0145, Max-Change = 0.0030, Max-Change = 0.0058, Max-Change = 0.0041, Max-Change = 0.0064, Max-Change = 0.0187, Max-Change = 0.0024, Max-Change = 0.0019, Max-Change = 0.0066, Max-Change = 0.0035, Max-Change = 0.0057, Max-Change = 0.0059, Max-Change = 0.0063, Max-Change = 0.0050, Max-Change = 0.0150, Max-Change = 0.0118, Max-Change = 0.0072, Max-Change = 0.0049, Max-Change = 0.0037, Max-Change = 0.0012, Max-Change = 0.0023, Max-Change = 0.0076, Max-Change = 0.0033, Max-Change = 0.0071, Max-Change = 0.0045, Max-Change = 0.0169, Max-Change = 0.0704, Max-Change = 0.0689, Max-Change = 0.0489, Max-Change = 0.0433, Max-Change = 0.0410, Max-Change = 0.0380, Max-Change = 0.0347, Max-Change = 0.0321, Max-Change = 0.0280, Max-Change = 0.0249, Max-Change = 0.0214, Max-Change = 0.0182, Max-Change = 0.0159, Max-Change = 0.0134, Max-Change = 0.0112, Max-Change = 0.0144, Max-Change = 0.0072, Max-Change = 0.0063, Max-Change = 0.0066, Max-Change = 0.0080, Max-Change = 0.0093, Max-Change = 0.0062, Max-Change = 0.0128, Max-Change = 0.0042, Max-Change = 0.0035, Max-Change = 0.0051, Max-Change = 0.0045, Max-Change = 0.0125, Max-Change = 0.0124, Max-Change = 0.0186, Max-Change = 0.0070, Max-Change = 0.0146, Max-Change = 0.0084, Max-Change = 0.0090, Max-Change = 0.0087, Max-Change = 0.0026, Max-Change = 0.0069, Max-Change = 0.0104, Max-Change = 0.0086, Max-Change = 0.0023, Max-Change = 0.0116, Max-Change = 0.0048, Max-Change = 0.0024, Max-Change = 0.0099, Max-Change = 0.0040, Max-Change = 0.0122, Max-Change = 0.0177, Max-Change = 0.0101, Max-Change = 0.0027, Max-Change = 0.0057, Max-Change = 0.0282, Max-Change = 0.0083, Max-Change = 0.0079, Max-Change = 0.0087, Max-Change = 0.0150, Max-Change = 0.0057, Max-Change = 0.0038, Max-Change = 0.0046, Max-Change = 0.0086, Max-Change = 0.0077, Max-Change = 0.0059, Max-Change = 0.0037, Max-Change = 0.0041, Max-Change = 0.0053, Max-Change = 0.0033, Max-Change = 0.0042, Max-Change = 0.0113, Max-Change = 0.0037, Max-Change = 0.0240, Max-Change = 0.0113, Max-Change = 0.0101, Max-Change = 0.0107, Max-Change = 0.0018, Max-Change = 0.0060, Max-Change = 0.0068, Max-Change = 0.0036, Max-Change = 0.0208, Max-Change = 0.0056, Max-Change = 0.0050, Max-Change = 0.0046, Max-Change = 0.0040, Max-Change = 0.0077, Max-Change = 0.0057, Max-Change = 0.0027, Max-Change = 0.0062, Max-Change = 0.0106, Max-Change = 0.0084, Max-Change = 0.0156, Max-Change = 0.0045, Max-Change = 0.0033, Max-Change = 0.0047, Max-Change = 0.0060, Max-Change = 0.0102, Max-Change = 0.0108, Max-Change = 0.0071, Max-Change = 0.0064, Max-Change = 0.0054, Max-Change = 0.0063, Max-Change = 0.0056, Max-Change = 0.0072, Max-Change = 0.0031, Max-Change = 0.0037, Max-Change = 0.0040, Max-Change = 0.0152, Max-Change = 0.0039, Max-Change = 0.0064, Max-Change = 0.0041, Max-Change = 0.0056, Max-Change = 0.0082, Max-Change = 0.0027, Max-Change = 0.0019, Max-Change = 0.0034, Max-Change = 0.0036, Max-Change = 0.0074, Max-Change = 0.0074, Max-Change = 0.0067, Max-Change = 0.0098, Max-Change = 0.0066, Max-Change = 0.0039, Max-Change = 0.0180, Max-Change = 0.0060, Max-Change = 0.0005, Max-Change = 0.0055, Max-Change = 0.0100, Max-Change = 0.0078, Max-Change = 0.0070, Max-Change = 0.0094, Max-Change = 0.0027, Max-Change = 0.0117, Max-Change = 0.0056, Max-Change = 0.0116, Max-Change = 0.0065, Max-Change = 0.0048, Max-Change = 0.0084, Max-Change = 0.0158, Max-Change = 0.0072, Max-Change = 0.0078, Max-Change = 0.0027, Max-Change = 0.0103, Max-Change = 0.0035, Max-Change = 0.0060, Max-Change = 0.0029, Max-Change = 0.0074, Max-Change = 0.0067, Max-Change = 0.0049, Max-Change = 0.0053, Max-Change = 0.0152, Max-Change = 0.0037, Max-Change = 0.0036, Max-Change = 0.0120, Max-Change = 0.0011, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0146, gam = 0.1057, Max-Change = 0.0034, gam = 0.0780, Max-Change = 0.0012, gam = 0.0629, Max-Change = 0.0018, gam = 0.0532, Max-Change = 0.0005, gam = 0.0464, Max-Change = 0.0018, gam = 0.0413, Max-Change = 0.0019, gam = 0.0374, Max-Change = 0.0007, gam = 0.0342, Max-Change = 0.0006, gam = 0.0316, Max-Change = 0.0006 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood... summary(mod1b) #>  #> Call: #> mixedmirt(data = dat, covdata = covdata, model = 1, fixed = ~0 +  #>     items, lr.random = ~1 | group) #>  #>  #> -------------- #> RANDOM EFFECT COVARIANCE(S): #> Correlations on upper diagonal #>  #> $Theta #>      F1 #> F1 1.54 #>  #>  #> -------------- #> RANDOM EFFECT COVARIANCE(S): #> Correlations on upper diagonal #>  #> $group #>           COV_group #> COV_group      1.45 #>   mod2b <- mixedmirt(dat, covdata, 1, fixed = ~ 0 + items + group_pred, lr.random = ~ 1|group) #> , Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.1797, Max-Change = 0.1540, Max-Change = 0.1292, Max-Change = 0.1114, Max-Change = 0.0981, Max-Change = 0.0797, Max-Change = 0.0726, Max-Change = 0.0565, Max-Change = 0.0436, Max-Change = 0.0397, Max-Change = 0.0353, Max-Change = 0.0313, Max-Change = 0.0278, Max-Change = 0.0326, Max-Change = 0.0265, Max-Change = 0.0204, Max-Change = 0.0212, Max-Change = 0.0173, Max-Change = 0.0144, Max-Change = 0.0184, Max-Change = 0.0145, Max-Change = 0.0115, Max-Change = 0.0066, Max-Change = 0.0137, Max-Change = 0.0068, Max-Change = 0.0131, Max-Change = 0.0088, Max-Change = 0.0131, Max-Change = 0.0121, Max-Change = 0.0098, Max-Change = 0.0085, Max-Change = 0.0064, Max-Change = 0.0127, Max-Change = 0.0081, Max-Change = 0.0079, Max-Change = 0.0073, Max-Change = 0.0062, Max-Change = 0.0087, Max-Change = 0.0085, Max-Change = 0.0046, Max-Change = 0.0091, Max-Change = 0.0039, Max-Change = 0.0077, Max-Change = 0.0035, Max-Change = 0.0032, Max-Change = 0.0047, Max-Change = 0.0046, Max-Change = 0.0074, Max-Change = 0.0039, Max-Change = 0.0037, Max-Change = 0.0104, Max-Change = 0.0064, Max-Change = 0.0067, Max-Change = 0.0035, Max-Change = 0.0043, Max-Change = 0.0088, Max-Change = 0.0028, Max-Change = 0.0047, Max-Change = 0.0040, Max-Change = 0.0024, Max-Change = 0.0078, Max-Change = 0.0162, Max-Change = 0.0064, Max-Change = 0.0054, Max-Change = 0.0070, Max-Change = 0.0016, Max-Change = 0.0066, Max-Change = 0.0069, Max-Change = 0.0076, Max-Change = 0.0078, Max-Change = 0.0057, Max-Change = 0.0103, Max-Change = 0.0023, Max-Change = 0.0051, Max-Change = 0.0057, Max-Change = 0.0055, Max-Change = 0.0184, Max-Change = 0.0044, Max-Change = 0.0037, Max-Change = 0.0050, Max-Change = 0.0042, Max-Change = 0.0070, Max-Change = 0.0010, Max-Change = 0.0078, Max-Change = 0.0022, Max-Change = 0.0104, Max-Change = 0.0058, Max-Change = 0.0075, Max-Change = 0.0049, Max-Change = 0.0010, Max-Change = 0.0014, Max-Change = 0.0033, Max-Change = 0.0029, Max-Change = 0.0033, Max-Change = 0.0053, Max-Change = 0.0015, Max-Change = 0.0026, Max-Change = 0.0504, Max-Change = 0.0563, Max-Change = 0.0438, Max-Change = 0.0414, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.0674, Max-Change = 0.0488, Max-Change = 0.1112, Max-Change = 0.0397, Max-Change = 0.0278, Max-Change = 0.0117, Max-Change = 0.0143, Max-Change = 0.0157, Max-Change = 0.0098, Max-Change = 0.0107, Max-Change = 0.0456, Max-Change = 0.0102, Max-Change = 0.0108, Max-Change = 0.0286, Max-Change = 0.0242, Max-Change = 0.0158, Max-Change = 0.0098, Max-Change = 0.0145, Max-Change = 0.0062, Max-Change = 0.0076, Max-Change = 0.0117, Max-Change = 0.0107, Max-Change = 0.0120, Max-Change = 0.0100, Max-Change = 0.0085, Max-Change = 0.0268, Max-Change = 0.0089, Max-Change = 0.0072, Max-Change = 0.0066, Max-Change = 0.0051, Max-Change = 0.0076, Max-Change = 0.0049, Max-Change = 0.0051, Max-Change = 0.0058, Max-Change = 0.0080, Max-Change = 0.0052, Max-Change = 0.0136, Max-Change = 0.0078, Max-Change = 0.0079, Max-Change = 0.0079, Max-Change = 0.0061, Max-Change = 0.0028, Max-Change = 0.0061, Max-Change = 0.0110, Max-Change = 0.0032, Max-Change = 0.0023, Max-Change = 0.0071, Max-Change = 0.0048, Max-Change = 0.0087, Max-Change = 0.0048, Max-Change = 0.0096, Max-Change = 0.0060, Max-Change = 0.0052, Max-Change = 0.0035, Max-Change = 0.0057, Max-Change = 0.0061, Max-Change = 0.0036, Max-Change = 0.0041, Max-Change = 0.0070, Max-Change = 0.0063, Max-Change = 0.0112, Max-Change = 0.0021, Max-Change = 0.0141, Max-Change = 0.0145, Max-Change = 0.0035, Max-Change = 0.0038, Max-Change = 0.0023, Max-Change = 0.0084, Max-Change = 0.0054, Max-Change = 0.0073, Max-Change = 0.0036, Max-Change = 0.0117, Max-Change = 0.0045, Max-Change = 0.0050, Max-Change = 0.0066, Max-Change = 0.0070, Max-Change = 0.0050, Max-Change = 0.0008, Max-Change = 0.0061, Max-Change = 0.0089, Max-Change = 0.0036, Max-Change = 0.0127, Max-Change = 0.0072, Max-Change = 0.0045, Max-Change = 0.0094, Max-Change = 0.0102, Max-Change = 0.0087, Max-Change = 0.0114, Max-Change = 0.0088, Max-Change = 0.0058, Max-Change = 0.0016, Max-Change = 0.0072, Max-Change = 0.0096, Max-Change = 0.0061, Max-Change = 0.0060, Max-Change = 0.0020, Max-Change = 0.0113, Max-Change = 0.0087, Max-Change = 0.0036, Max-Change = 0.0066, Max-Change = 0.0037, Max-Change = 0.0041, Max-Change = 0.0044, Max-Change = 0.0051, Max-Change = 0.0075, Max-Change = 0.0020, Max-Change = 0.0050, Max-Change = 0.0055, Max-Change = 0.0047, Max-Change = 0.0049, Max-Change = 0.0113, Max-Change = 0.0050, Max-Change = 0.0044, Max-Change = 0.0080, Max-Change = 0.0076, Max-Change = 0.0047, Max-Change = 0.0054, Max-Change = 0.0075, Max-Change = 0.0026, Max-Change = 0.0035, Max-Change = 0.0099, Max-Change = 0.0038, Max-Change = 0.0108, Max-Change = 0.0072, Max-Change = 0.0086, Max-Change = 0.0042, Max-Change = 0.0025, Max-Change = 0.0094, Max-Change = 0.0063, Max-Change = 0.0023, Max-Change = 0.0100, Max-Change = 0.0037, Max-Change = 0.0064, Max-Change = 0.0031, Max-Change = 0.0068, Max-Change = 0.0047, Max-Change = 0.0077, Max-Change = 0.0042, Max-Change = 0.0045, Max-Change = 0.0079, Max-Change = 0.0060, Max-Change = 0.0025, Max-Change = 0.0040, Max-Change = 0.0071, Max-Change = 0.0033, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0065, gam = 0.1057, Max-Change = 0.0048, gam = 0.0780, Max-Change = 0.0016, gam = 0.0629, Max-Change = 0.0011, gam = 0.0532, Max-Change = 0.0018, gam = 0.0464, Max-Change = 0.0011, gam = 0.0413, Max-Change = 0.0015, gam = 0.0374, Max-Change = 0.0010, gam = 0.0342, Max-Change = 0.0007, gam = 0.0316, Max-Change = 0.0013, gam = 0.0294, Max-Change = 0.0007, gam = 0.0276, Max-Change = 0.0015, gam = 0.0260, Max-Change = 0.0004, gam = 0.0246, Max-Change = 0.0005, gam = 0.0233, Max-Change = 0.0006 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood... summary(mod2b) #>  #> Call: #> mixedmirt(data = dat, covdata = covdata, model = 1, fixed = ~0 +  #>     items + group_pred, lr.random = ~1 | group) #>  #> -------------- #> FIXED EFFECTS: #>            Estimate Std.Error z.value #> group_pred    1.036     0.044  23.766 #>  #> -------------- #> RANDOM EFFECT COVARIANCE(S): #> Correlations on upper diagonal #>  #> $Theta #>      F1 #> F1 1.12 #>  #>  #> -------------- #> RANDOM EFFECT COVARIANCE(S): #> Correlations on upper diagonal #>  #> $group #>           COV_group #> COV_group       0.1 #>  anova(mod1b, mod2b) #>            AIC    SABIC       HQ      BIC    logLik     X2 df p #> mod1b 23637.58 23664.24 23660.20 23699.19 -11807.79             #> mod2b 22749.34 22778.43 22774.02 22816.55 -11362.67 890.24  1 0  mod3 <- mixedmirt(dat, covdata, 1, fixed = ~ 0 + items, lr.random = ~ 1|group, itemtype = '2PL') #> , Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.1738, Max-Change = 0.1500, Max-Change = 0.1263, Max-Change = 0.1114, Max-Change = 0.1014, Max-Change = 0.0822, Max-Change = 0.0827, Max-Change = 0.0623, Max-Change = 0.0533, Max-Change = 0.0476, Max-Change = 0.0405, Max-Change = 0.0350, Max-Change = 0.0288, Max-Change = 0.0341, Max-Change = 0.0200, Max-Change = 0.0251, Max-Change = 0.0278, Max-Change = 0.0296, Max-Change = 0.0227, Max-Change = 0.0251, Max-Change = 0.0128, Max-Change = 0.0190, Max-Change = 0.0346, Max-Change = 0.0151, Max-Change = 0.0156, Max-Change = 0.0152, Max-Change = 0.0234, Max-Change = 0.0312, Max-Change = 0.0126, Max-Change = 0.0161, Max-Change = 0.0104, Max-Change = 0.0176, Max-Change = 0.0121, Max-Change = 0.0184, Max-Change = 0.0109, Max-Change = 0.0192, Max-Change = 0.0312, Max-Change = 0.0234, Max-Change = 0.0202, Max-Change = 0.0160, Max-Change = 0.0187, Max-Change = 0.0125, Max-Change = 0.0146, Max-Change = 0.0210, Max-Change = 0.0128, Max-Change = 0.0280, Max-Change = 0.0095, Max-Change = 0.0179, Max-Change = 0.0180, Max-Change = 0.0198, Max-Change = 0.0162, Max-Change = 0.0227, Max-Change = 0.0190, Max-Change = 0.0175, Max-Change = 0.0161, Max-Change = 0.0179, Max-Change = 0.0180, Max-Change = 0.0196, Max-Change = 0.0331, Max-Change = 0.0150, Max-Change = 0.0124, Max-Change = 0.0152, Max-Change = 0.0151, Max-Change = 0.0181, Max-Change = 0.0116, Max-Change = 0.0185, Max-Change = 0.0169, Max-Change = 0.0155, Max-Change = 0.0132, Max-Change = 0.0220, Max-Change = 0.0219, Max-Change = 0.0216, Max-Change = 0.0183, Max-Change = 0.0150, Max-Change = 0.0161, Max-Change = 0.0175, Max-Change = 0.0191, Max-Change = 0.0234, Max-Change = 0.0195, Max-Change = 0.0121, Max-Change = 0.0264, Max-Change = 0.0156, Max-Change = 0.0221, Max-Change = 0.0141, Max-Change = 0.0168, Max-Change = 0.0245, Max-Change = 0.0215, Max-Change = 0.0192, Max-Change = 0.0181, Max-Change = 0.0134, Max-Change = 0.0205, Max-Change = 0.0155, Max-Change = 0.0164, Max-Change = 0.0185, Max-Change = 0.0150, Max-Change = 0.0166, Max-Change = 0.0210, Max-Change = 0.0473, Max-Change = 0.0461, Max-Change = 0.0412, Max-Change = 0.0413, Max-Change = 0.0340, Max-Change = 0.0316, Max-Change = 0.0291, Max-Change = 0.0308, Max-Change = 0.0263, Max-Change = 0.0238, Max-Change = 0.0303, Max-Change = 0.0196, Max-Change = 0.0270, Max-Change = 0.0153, Max-Change = 0.0199, Max-Change = 0.0317, Max-Change = 0.0225, Max-Change = 0.0130, Max-Change = 0.0198, Max-Change = 0.0186, Max-Change = 0.0191, Max-Change = 0.0128, Max-Change = 0.0198, Max-Change = 0.0147, Max-Change = 0.0193, Max-Change = 0.0131, Max-Change = 0.0147, Max-Change = 0.0083, Max-Change = 0.0112, Max-Change = 0.0137, Max-Change = 0.0113, Max-Change = 0.0099, Max-Change = 0.0167, Max-Change = 0.0127, Max-Change = 0.0201, Max-Change = 0.0106, Max-Change = 0.0136, Max-Change = 0.0101, Max-Change = 0.0236, Max-Change = 0.0105, Max-Change = 0.0137, Max-Change = 0.0112, Max-Change = 0.0255, Max-Change = 0.0077, Max-Change = 0.0084, Max-Change = 0.0166, Max-Change = 0.0123, Max-Change = 0.0106, Max-Change = 0.0126, Max-Change = 0.0116, Max-Change = 0.0607, Max-Change = 0.0115, Max-Change = 0.0106, Max-Change = 0.0147, Max-Change = 0.0134, Max-Change = 0.0115, Max-Change = 0.0167, Max-Change = 0.0107, Max-Change = 0.0197, Max-Change = 0.0114, Max-Change = 0.0129, Max-Change = 0.0109, Max-Change = 0.0091, Max-Change = 0.0131, Max-Change = 0.0050, Max-Change = 0.0086, Max-Change = 0.0109, Max-Change = 0.0122, Max-Change = 0.0118, Max-Change = 0.0093, Max-Change = 0.0092, Max-Change = 0.0115, Max-Change = 0.0121, Max-Change = 0.0123, Max-Change = 0.0128, Max-Change = 0.0101, Max-Change = 0.0093, Max-Change = 0.0131, Max-Change = 0.0152, Max-Change = 0.0073, Max-Change = 0.0066, Max-Change = 0.0100, Max-Change = 0.0141, Max-Change = 0.0091, Max-Change = 0.0114, Max-Change = 0.0183, Max-Change = 0.0095, Max-Change = 0.0086, Max-Change = 0.0208, Max-Change = 0.0086, Max-Change = 0.0149, Max-Change = 0.0069, Max-Change = 0.0095, Max-Change = 0.0091, Max-Change = 0.0139, Max-Change = 0.0117, Max-Change = 0.0094, Max-Change = 0.0104, Max-Change = 0.0130, Max-Change = 0.0095, Max-Change = 0.0111, Max-Change = 0.0144, Max-Change = 0.0103, Max-Change = 0.0111, Max-Change = 0.0168, Max-Change = 0.0082, Max-Change = 0.0091, Max-Change = 0.0100, Max-Change = 0.0122, Max-Change = 0.0162, Max-Change = 0.0082, Max-Change = 0.0097, Max-Change = 0.0077, Max-Change = 0.0198, Max-Change = 0.0207, Max-Change = 0.0113, Max-Change = 0.0158, Max-Change = 0.0121, Max-Change = 0.0188, Max-Change = 0.0107, Max-Change = 0.0114, Max-Change = 0.0156, Max-Change = 0.0122, Max-Change = 0.0133, Max-Change = 0.0126, Max-Change = 0.0077, Max-Change = 0.0111, Max-Change = 0.0134, Max-Change = 0.0164, Max-Change = 0.0138, Max-Change = 0.0115, Max-Change = 0.0137, Max-Change = 0.0124, Max-Change = 0.0099, Max-Change = 0.0106, Max-Change = 0.0096, Max-Change = 0.0151, Max-Change = 0.0135, Max-Change = 0.0120, Max-Change = 0.0106, Max-Change = 0.0117, Max-Change = 0.0133, Max-Change = 0.0083, Max-Change = 0.0150, Max-Change = 0.0153, Max-Change = 0.0076, Max-Change = 0.0113, Max-Change = 0.0138, Max-Change = 0.0088, Max-Change = 0.0066, Max-Change = 0.0110, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0088, gam = 0.1057, Max-Change = 0.0072, gam = 0.0780, Max-Change = 0.0034, gam = 0.0629, Max-Change = 0.0035, gam = 0.0532, Max-Change = 0.0031, gam = 0.0464, Max-Change = 0.0023, gam = 0.0413, Max-Change = 0.0020, gam = 0.0374, Max-Change = 0.0019, gam = 0.0342, Max-Change = 0.0024, gam = 0.0316, Max-Change = 0.0020, gam = 0.0294, Max-Change = 0.0011, gam = 0.0276, Max-Change = 0.0026, gam = 0.0260, Max-Change = 0.0019, gam = 0.0246, Max-Change = 0.0019, gam = 0.0233, Max-Change = 0.0010, gam = 0.0222, Max-Change = 0.0012, gam = 0.0212, Max-Change = 0.0015, gam = 0.0203, Max-Change = 0.0012, gam = 0.0195, Max-Change = 0.0008, gam = 0.0188, Max-Change = 0.0008, gam = 0.0181, Max-Change = 0.0008 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood... summary(mod3) #>  #> Call: #> mixedmirt(data = dat, covdata = covdata, model = 1, fixed = ~0 +  #>     items, itemtype = \"2PL\", lr.random = ~1 | group) #>  #>  #> -------------- #> RANDOM EFFECT COVARIANCE(S): #> Correlations on upper diagonal #>  #> $Theta #>    F1 #> F1  1 #>  #>  #> -------------- #> RANDOM EFFECT COVARIANCE(S): #> Correlations on upper diagonal #>  #> $group #>           COV_group #> COV_group         1 #>  anova(mod1b, mod3) #>            AIC    SABIC       HQ      BIC    logLik     X2 df p #> mod1b 23637.58 23664.24 23660.20 23699.19 -11807.79             #> mod3  23571.39 23619.87 23612.52 23683.41 -11765.69 84.189  9 0  head(cbind(randef(mod3)$group, random_intercept)) #>         group random_intercept #> G1  1.2096184       1.51178117 #> G2 -0.3622806       0.38984324 #> G3 -0.6254070      -0.62124058 #> G4 -2.5131776      -2.21469989 #> G5  0.6524811       1.12493092 #> G6 -0.7583594      -0.04493361  # }"},{"path":"https://philchalmers.github.io/mirt/reference/mod2values.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an estimated mirt model to a data.frame — mod2values","title":"Convert an estimated mirt model to a data.frame — mod2values","text":"Given estimated model mirt's model fitting functions function convert model parameters design data frame starting values parameter characteristics (similar using pars = 'values' obtaining starting values).","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mod2values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an estimated mirt model to a data.frame — mod2values","text":"","code":"mod2values(x)"},{"path":"https://philchalmers.github.io/mirt/reference/mod2values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an estimated mirt model to a data.frame — mod2values","text":"x estimated model x mirt package","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mod2values.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert an estimated mirt model to a data.frame — mod2values","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/mod2values.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert an estimated mirt model to a data.frame — mod2values","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/mod2values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an estimated mirt model to a data.frame — mod2values","text":"","code":"# \\donttest{ dat <- expand.table(LSAT7) mod <- mirt(dat, \"F=1-5                   CONSTRAIN=(1-5, a1)\") #>  values <- mod2values(mod) values #>    group   item     class   name parnum value lbound ubound   est const nconst #> 1    all Item.1      dich     a1      1 1.011   -Inf    Inf  TRUE     1   none #> 2    all Item.1      dich      d      2 1.868   -Inf    Inf  TRUE  none   none #> 3    all Item.1      dich      g      3 0.000      0      1 FALSE  none   none #> 4    all Item.1      dich      u      4 1.000      0      1 FALSE  none   none #> 5    all Item.2      dich     a1      5 1.011   -Inf    Inf  TRUE     1   none #> 6    all Item.2      dich      d      6 0.791   -Inf    Inf  TRUE  none   none #> 7    all Item.2      dich      g      7 0.000      0      1 FALSE  none   none #> 8    all Item.2      dich      u      8 1.000      0      1 FALSE  none   none #> 9    all Item.3      dich     a1      9 1.011   -Inf    Inf  TRUE     1   none #> 10   all Item.3      dich      d     10 1.461   -Inf    Inf  TRUE  none   none #> 11   all Item.3      dich      g     11 0.000      0      1 FALSE  none   none #> 12   all Item.3      dich      u     12 1.000      0      1 FALSE  none   none #> 13   all Item.4      dich     a1     13 1.011   -Inf    Inf  TRUE     1   none #> 14   all Item.4      dich      d     14 0.521   -Inf    Inf  TRUE  none   none #> 15   all Item.4      dich      g     15 0.000      0      1 FALSE  none   none #> 16   all Item.4      dich      u     16 1.000      0      1 FALSE  none   none #> 17   all Item.5      dich     a1     17 1.011   -Inf    Inf  TRUE     1   none #> 18   all Item.5      dich      d     18 1.993   -Inf    Inf  TRUE  none   none #> 19   all Item.5      dich      g     19 0.000      0      1 FALSE  none   none #> 20   all Item.5      dich      u     20 1.000      0      1 FALSE  none   none #> 21   all  GROUP GroupPars MEAN_1     21 0.000   -Inf    Inf FALSE  none   none #> 22   all  GROUP GroupPars COV_11     22 1.000      0    Inf FALSE  none   none #>    prior.type prior_1 prior_2 #> 1        none     NaN     NaN #> 2        none     NaN     NaN #> 3        none     NaN     NaN #> 4        none     NaN     NaN #> 5        none     NaN     NaN #> 6        none     NaN     NaN #> 7        none     NaN     NaN #> 8        none     NaN     NaN #> 9        none     NaN     NaN #> 10       none     NaN     NaN #> 11       none     NaN     NaN #> 12       none     NaN     NaN #> 13       none     NaN     NaN #> 14       none     NaN     NaN #> 15       none     NaN     NaN #> 16       none     NaN     NaN #> 17       none     NaN     NaN #> 18       none     NaN     NaN #> 19       none     NaN     NaN #> 20       none     NaN     NaN #> 21       none     NaN     NaN #> 22       none     NaN     NaN  # use the converted values as starting values in a new model, and reduce TOL mod2 <- mirt(dat, 1, pars = values, TOL=1e-5) #>  coef(mod2, simplify=TRUE) #> $items #>           a1     d g u #> Item.1 1.011 1.868 0 1 #> Item.2 1.011 0.791 0 1 #> Item.3 1.011 1.461 0 1 #> Item.4 1.011 0.521 0 1 #> Item.5 1.011 1.993 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>   # use parameters on different dataset mod3 <- mirt(expand.table(LSAT6), pars=values) #>  coef(mod3, simplify=TRUE) #> $items #>           a1     d g u #> Item_1 0.755 2.730 0 1 #> Item_2 0.755 0.999 0 1 #> Item_3 0.755 0.240 0 1 #> Item_4 0.755 1.307 0 1 #> Item_5 0.755 2.100 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>   # supports differing itemtypes on second model sv <- mirt(Science, itemtype=c('graded', rep('gpcm', 3)), pars='values') mod3 <- mirt(Science, pars = sv)  # itemtype omitted #>  coef(mod3, simplify=TRUE)$items #>                a1       d1       d2         d3 ak0 ak1 ak2 ak3 d0 #> Comfort 1.0278666 4.842467 2.629427 -1.4610757  NA  NA  NA  NA NA #> Work    0.8622915 1.735970 2.608453  0.8615093   0   1   2   3  0 #> Future  2.1388465 4.498623 6.612162  4.8108956   0   1   2   3  0 #> Benefit 0.7208997 2.096130 2.894803  1.7189648   0   1   2   3  0 extract.mirt(mod3, 'itemtype') #> [1] \"graded\" \"gpcm\"   \"gpcm\"   \"gpcm\"     # }"},{"path":"https://philchalmers.github.io/mirt/reference/multipleGroup.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple Group Estimation — multipleGroup","title":"Multiple Group Estimation — multipleGroup","text":"multipleGroup performs full-information maximum-likelihood multiple group analysis combination dichotomous polytomous data item response theory paradigm using either Cai's (2010) Metropolis-Hastings Robbins-Monro (MHRM) algorithm EM algorithm approach. function may used detecting differential item functioning (DIF), thought DIF function may provide convenient approach. grouping variable specified dentype input can modified fit mixture models estimate latent group components.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/multipleGroup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple Group Estimation — multipleGroup","text":"","code":"multipleGroup(   data,   model = 1,   group,   itemtype = NULL,   invariance = \"\",   method = \"EM\",   dentype = \"Gaussian\",   itemdesign = NULL,   item.formula = NULL,   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/multipleGroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple Group Estimation — multipleGroup","text":"data matrix data.frame consists numerically ordered data, organized form integers,  missing data coded NA model string passed , model object returned , mirt.model declaring global model estimated (useful apply constraints ) group character factor vector indicating group membership. character vector supplied automatically transformed factor variable. well, first level (factorized) grouping variable treated \"reference\" group itemtype can type input documented mirt, however may also ngroups nitems matrix specifying type IRT models group, respectively. Rows input correspond levels group input. mixture models rows correspond respective mixture grouping variables constructed, IRT models within mixtures invariance character vector containing following possible options: 'free_mean' 'free_means' freely estimate latent means focal groups       (reference group constrained vector 0's) 'free_var', 'free_vars', 'free_variance', 'free_variances' freely estimate latent variances focal groups       (reference group variances constrained 1) 'slopes' constrain slopes equal across groups 'intercepts' constrain intercepts equal across       groups, note nominal models also includes category specific slope parameters Additionally, specifying specific item name bundles (colnames(data))   constrain freely estimated parameters item equal across groups.   useful selecting 'anchor' items vertical horizontal scaling, detecting   differential item functioning (DIF) across groups method character object either 'EM', 'QMCEM', 'MHRM' (default 'EM'). See mirt details dentype type density form use latent trait parameters. Current options include   methods described mirt, well  'mixture-#' estimates mixtures Gaussian distributions,       # placeholder represents number potential grouping variables       (e.g., 'mixture-3' estimate 3 underlying classes). class       assigned group name MIXTURE_#, # class number.       Note internally mixture coefficients stored log values       first mixture group coefficient fixed 0 itemdesign see mirt details item.formula see mirt details ... additional arguments passed estimation engine. See mirt details examples","code":""},{"path":"https://philchalmers.github.io/mirt/reference/multipleGroup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiple Group Estimation — multipleGroup","text":"function returns object class MultipleGroupClass   (MultipleGroupClass-class).","code":""},{"path":"https://philchalmers.github.io/mirt/reference/multipleGroup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiple Group Estimation — multipleGroup","text":"default estimation multipleGroup assumes models maximally independent, therefore initially performed sub-setting data running identical models mirt aggregating results (e.g., log-likelihood). However, constrains may automatically imposed across groups invoking various invariance keywords. Users may also supply list parameter equality constraints constrain argument, define equality constraints using mirt.model syntax (recommended).","code":""},{"path":"https://philchalmers.github.io/mirt/reference/multipleGroup.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Multiple Group Estimation — multipleGroup","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06 Magnus, B. E.  Garnier-Villarreal (2022). multidimensional zero-inflated graded response model ordinal symptom data. Psychological Methods, 27, 261-279. Wall, M., M., Park, J., Y., Moustaki . (2015). IRT modeling presence zero-inflation application psychiatric disorder severity. Applied Psychological Measurement 39: 583-597.","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/multipleGroup.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Multiple Group Estimation — multipleGroup","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/multipleGroup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiple Group Estimation — multipleGroup","text":"","code":"# \\donttest{  # single factor set.seed(12345) a <- matrix(abs(rnorm(15,1,.3)), ncol=1) d <- matrix(rnorm(15,0,.7),ncol=1) itemtype <- rep('2PL', nrow(a)) N <- 1000 dataset1 <- simdata(a, d, N, itemtype) dataset2 <- simdata(a, d, N, itemtype, mu = .1, sigma = matrix(1.5)) dat <- rbind(dataset1, dataset2) group <- c(rep('D1', N), rep('D2', N))  # marginal information itemstats(dat) #> $overall #>     N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  2000            7.888          3.555 0.188 0.053 0.777     1.678 #>  #> $itemstats #>            N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item_1  2000 2 0.609 0.488   0.525         0.414       0.762 #> Item_2  2000 2 0.392 0.488   0.540         0.431       0.761 #> Item_3  2000 2 0.456 0.498   0.526         0.413       0.762 #> Item_4  2000 2 0.684 0.465   0.461         0.349       0.768 #> Item_5  2000 2 0.538 0.499   0.528         0.415       0.762 #> Item_6  2000 2 0.649 0.477   0.334         0.207       0.779 #> Item_7  2000 2 0.681 0.466   0.524         0.419       0.762 #> Item_8  2000 2 0.432 0.495   0.504         0.389       0.764 #> Item_9  2000 2 0.302 0.459   0.446         0.334       0.769 #> Item_10 2000 2 0.274 0.446   0.388         0.273       0.774 #> Item_11 2000 2 0.734 0.442   0.457         0.351       0.768 #> Item_12 2000 2 0.470 0.499   0.585         0.481       0.756 #> Item_13 2000 2 0.585 0.493   0.561         0.455       0.759 #> Item_14 2000 2 0.592 0.492   0.538         0.428       0.761 #> Item_15 2000 2 0.490 0.500   0.458         0.336       0.769 #>  #> $proportions #>             0     1 #> Item_1  0.392 0.609 #> Item_2  0.608 0.392 #> Item_3  0.544 0.456 #> Item_4  0.316 0.684 #> Item_5  0.462 0.538 #> Item_6  0.351 0.649 #> Item_7  0.318 0.681 #> Item_8  0.569 0.432 #> Item_9  0.698 0.302 #> Item_10 0.726 0.274 #> Item_11 0.266 0.734 #> Item_12 0.530 0.470 #> Item_13 0.416 0.585 #> Item_14 0.408 0.592 #> Item_15 0.509 0.490 #>   # conditional information itemstats(dat, group=group) #> $D1 #> $D1$overall #>     N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  1000             7.82          3.346 0.159 0.047  0.74     1.705 #>  #> $D1$itemstats #>            N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item_1  1000 2 0.605 0.489   0.484         0.361       0.725 #> Item_2  1000 2 0.368 0.483   0.507         0.388       0.722 #> Item_3  1000 2 0.461 0.499   0.471         0.343       0.727 #> Item_4  1000 2 0.673 0.469   0.439         0.315       0.729 #> Item_5  1000 2 0.526 0.500   0.500         0.376       0.723 #> Item_6  1000 2 0.654 0.476   0.355         0.222       0.739 #> Item_7  1000 2 0.683 0.466   0.508         0.394       0.722 #> Item_8  1000 2 0.431 0.495   0.462         0.333       0.728 #> Item_9  1000 2 0.287 0.453   0.419         0.298       0.731 #> Item_10 1000 2 0.274 0.446   0.372         0.249       0.735 #> Item_11 1000 2 0.739 0.439   0.401         0.282       0.732 #> Item_12 1000 2 0.456 0.498   0.563         0.448       0.715 #> Item_13 1000 2 0.584 0.493   0.535         0.416       0.719 #> Item_14 1000 2 0.592 0.492   0.483         0.358       0.725 #> Item_15 1000 2 0.487 0.500   0.451         0.321       0.729 #>  #> $D1$proportions #>             0     1 #> Item_1  0.395 0.605 #> Item_2  0.632 0.368 #> Item_3  0.539 0.461 #> Item_4  0.327 0.673 #> Item_5  0.474 0.526 #> Item_6  0.346 0.654 #> Item_7  0.317 0.683 #> Item_8  0.569 0.431 #> Item_9  0.713 0.287 #> Item_10 0.726 0.274 #> Item_11 0.261 0.739 #> Item_12 0.544 0.456 #> Item_13 0.416 0.584 #> Item_14 0.408 0.592 #> Item_15 0.513 0.487 #>  #>  #> $D2 #> $D2$overall #>     N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  1000            7.955          3.754 0.217 0.065 0.807      1.65 #>  #> $D2$itemstats #>            N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item_1  1000 2 0.612 0.488   0.563         0.464       0.792 #> Item_2  1000 2 0.417 0.493   0.569         0.469       0.792 #> Item_3  1000 2 0.450 0.498   0.578         0.479       0.791 #> Item_4  1000 2 0.695 0.461   0.484         0.381       0.798 #> Item_5  1000 2 0.551 0.498   0.553         0.451       0.793 #> Item_6  1000 2 0.644 0.479   0.316         0.195       0.811 #> Item_7  1000 2 0.680 0.467   0.540         0.443       0.794 #> Item_8  1000 2 0.432 0.496   0.544         0.440       0.794 #> Item_9  1000 2 0.317 0.466   0.470         0.365       0.799 #> Item_10 1000 2 0.275 0.447   0.403         0.297       0.804 #> Item_11 1000 2 0.729 0.445   0.508         0.413       0.796 #> Item_12 1000 2 0.483 0.500   0.606         0.511       0.788 #> Item_13 1000 2 0.585 0.493   0.587         0.491       0.790 #> Item_14 1000 2 0.591 0.492   0.589         0.493       0.790 #> Item_15 1000 2 0.494 0.500   0.466         0.351       0.801 #>  #> $D2$proportions #>             0     1 #> Item_1  0.388 0.612 #> Item_2  0.583 0.417 #> Item_3  0.550 0.450 #> Item_4  0.305 0.695 #> Item_5  0.449 0.551 #> Item_6  0.356 0.644 #> Item_7  0.320 0.680 #> Item_8  0.568 0.432 #> Item_9  0.683 0.317 #> Item_10 0.725 0.275 #> Item_11 0.271 0.729 #> Item_12 0.517 0.483 #> Item_13 0.415 0.585 #> Item_14 0.409 0.591 #> Item_15 0.506 0.494 #>  #>   mod_configural <- multipleGroup(dat, 1, group = group) #completely separate analyses #>  # limited information fit statistics M2(mod_configural) #>             M2  df         p RMSEA RMSEA_5 RMSEA_95   SRMSR.D1   SRMSR.D2 #> stats 142.9866 180 0.9806548     0       0        0 0.02414868 0.01901262 #>            TLI CFI #> stats 1.005381   1  mod_metric <- multipleGroup(dat, 1, group = group, invariance=c('slopes')) #equal slopes #>  # equal intercepts, free variance and means mod_scalar2 <- multipleGroup(dat, 1, group = group,                              invariance=c('slopes', 'intercepts', 'free_var','free_means')) #>  mod_scalar1 <- multipleGroup(dat, 1, group = group,  #fixed means                              invariance=c('slopes', 'intercepts', 'free_var')) #>  mod_fullconstrain <- multipleGroup(dat, 1, group = group,                              invariance=c('slopes', 'intercepts')) #>  extract.mirt(mod_fullconstrain, 'time') #time of estimation components #> TOTAL:   Data  Estep  Mstep     SE   Post  #>  0.309  0.057  0.065  0.161  0.000  0.001   # optionally use Newton-Raphson for (generally) faster convergence in the #  M-step's, though occasionally less stable mod_fullconstrain <- multipleGroup(dat, 1, group = group, optimizer = 'NR',                              invariance=c('slopes', 'intercepts')) #>  extract.mirt(mod_fullconstrain, 'time') #time of estimation components #> TOTAL:   Data  Estep  Mstep     SE   Post  #>  0.197  0.055  0.074  0.050  0.000  0.000   summary(mod_scalar2) #>  #> ---------- #> GROUP: D1  #>          F1     h2 #>  [1,] 0.544 0.2962 #>  [2,] 0.577 0.3324 #>  [3,] 0.529 0.2799 #>  [4,] 0.460 0.2118 #>  [5,] 0.536 0.2877 #>  [6,] 0.253 0.0639 #>  [7,] 0.570 0.3247 #>  [8,] 0.498 0.2479 #>  [9,] 0.459 0.2104 #> [10,] 0.373 0.1393 #> [11,] 0.487 0.2368 #> [12,] 0.632 0.3998 #> [13,] 0.596 0.3547 #> [14,] 0.561 0.3147 #> [15,] 0.414 0.1715 #>  #> SS loadings:  3.872  #> Proportion Var:  0.258  #>  #> Factor correlations:  #>  #>    F1 #> F1  1 #>  #> ---------- #> GROUP: D2  #>          F1     h2 #>  [1,] 0.634 0.4017 #>  [2,] 0.665 0.4426 #>  [3,] 0.619 0.3827 #>  [4,] 0.548 0.3000 #>  [5,] 0.626 0.3919 #>  [6,] 0.313 0.0981 #>  [7,] 0.659 0.4341 #>  [8,] 0.587 0.3446 #>  [9,] 0.546 0.2983 #> [10,] 0.453 0.2052 #> [11,] 0.575 0.3311 #> [12,] 0.718 0.5152 #> [13,] 0.683 0.4671 #> [14,] 0.650 0.4228 #> [15,] 0.498 0.2483 #>  #> SS loadings:  5.284  #> Proportion Var:  0.352  #>  #> Factor correlations:  #>  #>    F1 #> F1  1 coef(mod_scalar2, simplify=TRUE) #> $D1 #> $items #>            a1      d g u #> Item_1  1.104  0.538 0 1 #> Item_2  1.201 -0.630 0 1 #> Item_3  1.061 -0.265 0 1 #> Item_4  0.882  0.900 0 1 #> Item_5  1.082  0.164 0 1 #> Item_6  0.445  0.636 0 1 #> Item_7  1.180  0.976 0 1 #> Item_8  0.977 -0.377 0 1 #> Item_9  0.879 -1.035 0 1 #> Item_10 0.685 -1.118 0 1 #> Item_11 0.948  1.213 0 1 #> Item_12 1.389 -0.224 0 1 #> Item_13 1.262  0.429 0 1 #> Item_14 1.153  0.453 0 1 #> Item_15 0.774 -0.070 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  #>  #> $D2 #> $items #>            a1      d g u #> Item_1  1.104  0.538 0 1 #> Item_2  1.201 -0.630 0 1 #> Item_3  1.061 -0.265 0 1 #> Item_4  0.882  0.900 0 1 #> Item_5  1.082  0.164 0 1 #> Item_6  0.445  0.636 0 1 #> Item_7  1.180  0.976 0 1 #> Item_8  0.977 -0.377 0 1 #> Item_9  0.879 -1.035 0 1 #> Item_10 0.685 -1.118 0 1 #> Item_11 0.948  1.213 0 1 #> Item_12 1.389 -0.224 0 1 #> Item_13 1.262  0.429 0 1 #> Item_14 1.153  0.453 0 1 #> Item_15 0.774 -0.070 0 1 #>  #> $means #>    F1  #> 0.066  #>  #> $cov #>       F1 #> F1 1.595 #>  #>  residuals(mod_scalar2) #> $D1 #>         Item_1 Item_2 Item_3 Item_4 Item_5 Item_6 Item_7 Item_8 Item_9 Item_10 #> Item_1      NA -0.036 -0.056  0.036 -0.014  0.014  0.017 -0.020 -0.008  -0.066 #> Item_2   1.305     NA -0.052 -0.032 -0.031  0.033 -0.028  0.034  0.038   0.042 #> Item_3   3.144  2.659     NA -0.047  0.057  0.071 -0.037 -0.050  0.033  -0.047 #> Item_4   1.279  1.040  2.173     NA  0.029  0.035  0.032 -0.039 -0.038   0.032 #> Item_5   0.198  0.932  3.291  0.862     NA  0.029  0.048 -0.028  0.027  -0.027 #> Item_6   0.204  1.059  5.032  1.197  0.830     NA  0.020  0.034  0.023   0.041 #> Item_7   0.277  0.804  1.362  1.018  2.337  0.392     NA -0.023 -0.040   0.038 #> Item_8   0.402  1.143  2.484  1.545  0.774  1.125  0.518     NA -0.027   0.025 #> Item_9   0.067  1.478  1.062  1.471  0.717  0.523  1.631  0.726     NA   0.052 #> Item_10  4.303  1.756  2.228  1.054  0.744  1.650  1.453  0.610  2.692      NA #> Item_11  0.361  3.951  0.988  1.197  0.910  1.320  0.139  2.072  2.295   1.368 #> Item_12  1.718  0.586  1.038  0.725  0.218  0.454  1.323  0.473  0.322   0.604 #> Item_13  0.194  3.315  1.368  1.158  0.797  0.517  0.045  0.395  0.200   2.690 #> Item_14  0.074  0.804  3.798  2.946  0.648  0.228  0.223  0.464  0.693   0.378 #> Item_15  0.164  1.266  0.869  6.382  4.884  1.983  0.583  1.563  1.130   2.406 #>         Item_11 Item_12 Item_13 Item_14 Item_15 #> Item_1   -0.019   0.041  -0.014  -0.009   0.013 #> Item_2   -0.063   0.024   0.058   0.028   0.036 #> Item_3   -0.031   0.032  -0.037  -0.062   0.029 #> Item_4    0.035   0.027  -0.034  -0.054   0.080 #> Item_5   -0.030   0.015   0.028  -0.025  -0.070 #> Item_6    0.036   0.021   0.023  -0.015   0.045 #> Item_7    0.012   0.036  -0.007   0.015   0.024 #> Item_8   -0.046   0.022   0.020  -0.022   0.040 #> Item_9   -0.048  -0.018  -0.014   0.026   0.034 #> Item_10   0.037   0.025   0.052  -0.019  -0.049 #> Item_11      NA   0.010  -0.024  -0.053   0.021 #> Item_12   0.094      NA  -0.016  -0.016   0.012 #> Item_13   0.555   0.254      NA  -0.013   0.022 #> Item_14   2.862   0.255   0.159      NA   0.009 #> Item_15   0.424   0.148   0.486   0.073      NA #>  #> $D2 #>         Item_1 Item_2 Item_3 Item_4 Item_5 Item_6 Item_7 Item_8 Item_9 Item_10 #> Item_1      NA -0.029  0.031 -0.026  0.021 -0.042 -0.006  0.039  0.010  -0.029 #> Item_2   0.861     NA  0.047 -0.060  0.049 -0.061 -0.036 -0.036  0.043   0.035 #> Item_3   0.973  2.251     NA  0.064  0.039 -0.029  0.033  0.045  0.042   0.031 #> Item_4   0.673  3.546  4.082     NA  0.034  0.045  0.029  0.033 -0.031  -0.053 #> Item_5   0.455  2.426  1.534  1.151     NA -0.042 -0.043 -0.030  0.034  -0.026 #> Item_6   1.750  3.773  0.861  2.016  1.752     NA -0.038  0.023 -0.060   0.022 #> Item_7   0.040  1.293  1.085  0.831  1.854  1.475     NA  0.023 -0.021   0.025 #> Item_8   1.530  1.310  1.985  1.122  0.915  0.545  0.539     NA -0.028  -0.026 #> Item_9   0.106  1.832  1.780  0.934  1.137  3.654  0.453  0.760     NA   0.037 #> Item_10  0.815  1.230  0.958  2.779  0.685  0.466  0.622  0.690  1.393      NA #> Item_11  0.822  0.826  0.800  1.861  0.336  0.218  0.062  2.847  0.285   0.407 #> Item_12  0.087  1.536  1.097  0.639  0.309  0.454  0.096  0.556  0.398   0.520 #> Item_13  0.582  1.458  0.844  1.093  0.620  0.403  0.401  0.619  1.349   0.478 #> Item_14  0.403  1.550  0.914  1.292  0.544  0.799  0.534  3.153  0.137   0.344 #> Item_15  0.338  1.306  1.241  0.979  2.379  1.262  0.615  0.292  0.276   0.325 #>         Item_11 Item_12 Item_13 Item_14 Item_15 #> Item_1    0.029   0.009   0.024   0.020   0.018 #> Item_2    0.029  -0.039   0.038   0.039  -0.036 #> Item_3    0.028   0.033   0.029   0.030   0.035 #> Item_4    0.043  -0.025  -0.033   0.036  -0.031 #> Item_5    0.018  -0.018  -0.025   0.023  -0.049 #> Item_6    0.015  -0.021   0.020  -0.028  -0.036 #> Item_7   -0.008  -0.010  -0.020   0.023  -0.025 #> Item_8    0.053  -0.024  -0.025   0.056   0.017 #> Item_9   -0.017  -0.020  -0.037   0.012  -0.017 #> Item_10   0.020   0.023  -0.022   0.019   0.018 #> Item_11      NA   0.032   0.017   0.018   0.024 #> Item_12   1.010      NA   0.014  -0.022  -0.011 #> Item_13   0.280   0.185      NA   0.022  -0.012 #> Item_14   0.333   0.480   0.479      NA  -0.007 #> Item_15   0.580   0.131   0.145   0.048      NA #>  plot(mod_configural)  plot(mod_configural, type = 'info')  plot(mod_configural, type = 'trace')  plot(mod_configural, type = 'trace', which.items = 1:4)  itemplot(mod_configural, 2)  itemplot(mod_configural, 2, type = 'RE')   anova(mod_metric, mod_configural) #equal slopes only #>                     AIC    SABIC       HQ      BIC    logLik    X2 df p #> mod_metric     35937.61 36046.68 36030.15 36189.65 -17923.80            #> mod_configural 35927.53 36072.96 36050.92 36263.58 -17903.76 40.08 15 0 anova(mod_scalar2, mod_metric) #equal intercepts, free variance and mean #>                  AIC    SABIC       HQ      BIC    logLik      X2 df   p #> mod_scalar2 35894.66 35972.22 35960.47 36073.89 -17915.33                #> mod_metric  35937.61 36046.68 36030.15 36189.65 -17923.80 -16.947 13 NaN anova(mod_scalar1, mod_scalar2) #fix mean #>                  AIC    SABIC       HQ      BIC    logLik    X2 df     p #> mod_scalar1 35893.96 35969.10 35957.71 36067.58 -17915.98                #> mod_scalar2 35894.66 35972.22 35960.47 36073.89 -17915.33 1.296  1 0.255 anova(mod_fullconstrain, mod_scalar1) #fix variance #>                        AIC    SABIC       HQ      BIC    logLik     X2 df p #> mod_fullconstrain 35917.51 35990.22 35979.20 36085.53 -17928.75             #> mod_scalar1       35893.96 35969.10 35957.71 36067.58 -17915.98 25.552  1 0  # compared all at once (in order of most constrained to least) anova(mod_fullconstrain, mod_scalar2, mod_configural) #>                        AIC    SABIC       HQ      BIC    logLik     X2 df     p #> mod_fullconstrain 35917.51 35990.22 35979.20 36085.53 -17928.75                 #> mod_scalar2       35894.66 35972.22 35960.47 36073.89 -17915.33 26.848  2     0 #> mod_configural    35927.53 36072.96 36050.92 36263.58 -17903.76 23.133 28 0.726   # test whether first 6 slopes should be equal across groups values <- multipleGroup(dat, 1, group = group, pars = 'values') values #>     group    item     class   name parnum  value lbound ubound   est const #> 1      D1  Item_1      dich     a1      1  0.851   -Inf    Inf  TRUE  none #> 2      D1  Item_1      dich      d      2  0.541   -Inf    Inf  TRUE  none #> 3      D1  Item_1      dich      g      3  0.000      0      1 FALSE  none #> 4      D1  Item_1      dich      u      4  1.000      0      1 FALSE  none #> 5      D1  Item_2      dich     a1      5  0.851   -Inf    Inf  TRUE  none #> 6      D1  Item_2      dich      d      6 -0.536   -Inf    Inf  TRUE  none #> 7      D1  Item_2      dich      g      7  0.000      0      1 FALSE  none #> 8      D1  Item_2      dich      u      8  1.000      0      1 FALSE  none #> 9      D1  Item_3      dich     a1      9  0.851   -Inf    Inf  TRUE  none #> 10     D1  Item_3      dich      d     10 -0.220   -Inf    Inf  TRUE  none #> 11     D1  Item_3      dich      g     11  0.000      0      1 FALSE  none #> 12     D1  Item_3      dich      u     12  1.000      0      1 FALSE  none #> 13     D1  Item_4      dich     a1     13  0.851   -Inf    Inf  TRUE  none #> 14     D1  Item_4      dich      d     14  0.941   -Inf    Inf  TRUE  none #> 15     D1  Item_4      dich      g     15  0.000      0      1 FALSE  none #> 16     D1  Item_4      dich      u     16  1.000      0      1 FALSE  none #> 17     D1  Item_5      dich     a1     17  0.851   -Inf    Inf  TRUE  none #> 18     D1  Item_5      dich      d     18  0.190   -Inf    Inf  TRUE  none #> 19     D1  Item_5      dich      g     19  0.000      0      1 FALSE  none #> 20     D1  Item_5      dich      u     20  1.000      0      1 FALSE  none #> 21     D1  Item_6      dich     a1     21  0.851   -Inf    Inf  TRUE  none #> 22     D1  Item_6      dich      d     22  0.752   -Inf    Inf  TRUE  none #> 23     D1  Item_6      dich      g     23  0.000      0      1 FALSE  none #> 24     D1  Item_6      dich      u     24  1.000      0      1 FALSE  none #> 25     D1  Item_7      dich     a1     25  0.851   -Inf    Inf  TRUE  none #> 26     D1  Item_7      dich      d     26  0.927   -Inf    Inf  TRUE  none #> 27     D1  Item_7      dich      g     27  0.000      0      1 FALSE  none #> 28     D1  Item_7      dich      u     28  1.000      0      1 FALSE  none #> 29     D1  Item_8      dich     a1     29  0.851   -Inf    Inf  TRUE  none #> 30     D1  Item_8      dich      d     30 -0.339   -Inf    Inf  TRUE  none #> 31     D1  Item_8      dich      g     31  0.000      0      1 FALSE  none #> 32     D1  Item_8      dich      u     32  1.000      0      1 FALSE  none #> 33     D1  Item_9      dich     a1     33  0.851   -Inf    Inf  TRUE  none #> 34     D1  Item_9      dich      d     34 -1.019   -Inf    Inf  TRUE  none #> 35     D1  Item_9      dich      g     35  0.000      0      1 FALSE  none #> 36     D1  Item_9      dich      u     36  1.000      0      1 FALSE  none #> 37     D1 Item_10      dich     a1     37  0.851   -Inf    Inf  TRUE  none #> 38     D1 Item_10      dich      d     38 -1.178   -Inf    Inf  TRUE  none #> 39     D1 Item_10      dich      g     39  0.000      0      1 FALSE  none #> 40     D1 Item_10      dich      u     40  1.000      0      1 FALSE  none #> 41     D1 Item_11      dich     a1     41  0.851   -Inf    Inf  TRUE  none #> 42     D1 Item_11      dich      d     42  1.228   -Inf    Inf  TRUE  none #> 43     D1 Item_11      dich      g     43  0.000      0      1 FALSE  none #> 44     D1 Item_11      dich      u     44  1.000      0      1 FALSE  none #> 45     D1 Item_12      dich     a1     45  0.851   -Inf    Inf  TRUE  none #> 46     D1 Item_12      dich      d     46 -0.150   -Inf    Inf  TRUE  none #> 47     D1 Item_12      dich      g     47  0.000      0      1 FALSE  none #> 48     D1 Item_12      dich      u     48  1.000      0      1 FALSE  none #> 49     D1 Item_13      dich     a1     49  0.851   -Inf    Inf  TRUE  none #> 50     D1 Item_13      dich      d     50  0.419   -Inf    Inf  TRUE  none #> 51     D1 Item_13      dich      g     51  0.000      0      1 FALSE  none #> 52     D1 Item_13      dich      u     52  1.000      0      1 FALSE  none #> 53     D1 Item_14      dich     a1     53  0.851   -Inf    Inf  TRUE  none #> 54     D1 Item_14      dich      d     54  0.455   -Inf    Inf  TRUE  none #> 55     D1 Item_14      dich      g     55  0.000      0      1 FALSE  none #> 56     D1 Item_14      dich      u     56  1.000      0      1 FALSE  none #> 57     D1 Item_15      dich     a1     57  0.851   -Inf    Inf  TRUE  none #> 58     D1 Item_15      dich      d     58 -0.047   -Inf    Inf  TRUE  none #> 59     D1 Item_15      dich      g     59  0.000      0      1 FALSE  none #> 60     D1 Item_15      dich      u     60  1.000      0      1 FALSE  none #> 61     D1   GROUP GroupPars MEAN_1     61  0.000   -Inf    Inf FALSE  none #> 62     D1   GROUP GroupPars COV_11     62  1.000      0    Inf FALSE  none #> 63     D2  Item_1      dich     a1     63  0.851   -Inf    Inf  TRUE  none #> 64     D2  Item_1      dich      d     64  0.541   -Inf    Inf  TRUE  none #> 65     D2  Item_1      dich      g     65  0.000      0      1 FALSE  none #> 66     D2  Item_1      dich      u     66  1.000      0      1 FALSE  none #> 67     D2  Item_2      dich     a1     67  0.851   -Inf    Inf  TRUE  none #> 68     D2  Item_2      dich      d     68 -0.536   -Inf    Inf  TRUE  none #> 69     D2  Item_2      dich      g     69  0.000      0      1 FALSE  none #> 70     D2  Item_2      dich      u     70  1.000      0      1 FALSE  none #> 71     D2  Item_3      dich     a1     71  0.851   -Inf    Inf  TRUE  none #> 72     D2  Item_3      dich      d     72 -0.220   -Inf    Inf  TRUE  none #> 73     D2  Item_3      dich      g     73  0.000      0      1 FALSE  none #> 74     D2  Item_3      dich      u     74  1.000      0      1 FALSE  none #> 75     D2  Item_4      dich     a1     75  0.851   -Inf    Inf  TRUE  none #> 76     D2  Item_4      dich      d     76  0.941   -Inf    Inf  TRUE  none #> 77     D2  Item_4      dich      g     77  0.000      0      1 FALSE  none #> 78     D2  Item_4      dich      u     78  1.000      0      1 FALSE  none #> 79     D2  Item_5      dich     a1     79  0.851   -Inf    Inf  TRUE  none #> 80     D2  Item_5      dich      d     80  0.190   -Inf    Inf  TRUE  none #> 81     D2  Item_5      dich      g     81  0.000      0      1 FALSE  none #> 82     D2  Item_5      dich      u     82  1.000      0      1 FALSE  none #> 83     D2  Item_6      dich     a1     83  0.851   -Inf    Inf  TRUE  none #> 84     D2  Item_6      dich      d     84  0.752   -Inf    Inf  TRUE  none #> 85     D2  Item_6      dich      g     85  0.000      0      1 FALSE  none #> 86     D2  Item_6      dich      u     86  1.000      0      1 FALSE  none #> 87     D2  Item_7      dich     a1     87  0.851   -Inf    Inf  TRUE  none #> 88     D2  Item_7      dich      d     88  0.927   -Inf    Inf  TRUE  none #> 89     D2  Item_7      dich      g     89  0.000      0      1 FALSE  none #> 90     D2  Item_7      dich      u     90  1.000      0      1 FALSE  none #> 91     D2  Item_8      dich     a1     91  0.851   -Inf    Inf  TRUE  none #> 92     D2  Item_8      dich      d     92 -0.339   -Inf    Inf  TRUE  none #> 93     D2  Item_8      dich      g     93  0.000      0      1 FALSE  none #> 94     D2  Item_8      dich      u     94  1.000      0      1 FALSE  none #> 95     D2  Item_9      dich     a1     95  0.851   -Inf    Inf  TRUE  none #> 96     D2  Item_9      dich      d     96 -1.019   -Inf    Inf  TRUE  none #> 97     D2  Item_9      dich      g     97  0.000      0      1 FALSE  none #> 98     D2  Item_9      dich      u     98  1.000      0      1 FALSE  none #> 99     D2 Item_10      dich     a1     99  0.851   -Inf    Inf  TRUE  none #> 100    D2 Item_10      dich      d    100 -1.178   -Inf    Inf  TRUE  none #> 101    D2 Item_10      dich      g    101  0.000      0      1 FALSE  none #> 102    D2 Item_10      dich      u    102  1.000      0      1 FALSE  none #> 103    D2 Item_11      dich     a1    103  0.851   -Inf    Inf  TRUE  none #> 104    D2 Item_11      dich      d    104  1.228   -Inf    Inf  TRUE  none #> 105    D2 Item_11      dich      g    105  0.000      0      1 FALSE  none #> 106    D2 Item_11      dich      u    106  1.000      0      1 FALSE  none #> 107    D2 Item_12      dich     a1    107  0.851   -Inf    Inf  TRUE  none #> 108    D2 Item_12      dich      d    108 -0.150   -Inf    Inf  TRUE  none #> 109    D2 Item_12      dich      g    109  0.000      0      1 FALSE  none #> 110    D2 Item_12      dich      u    110  1.000      0      1 FALSE  none #> 111    D2 Item_13      dich     a1    111  0.851   -Inf    Inf  TRUE  none #> 112    D2 Item_13      dich      d    112  0.419   -Inf    Inf  TRUE  none #> 113    D2 Item_13      dich      g    113  0.000      0      1 FALSE  none #> 114    D2 Item_13      dich      u    114  1.000      0      1 FALSE  none #> 115    D2 Item_14      dich     a1    115  0.851   -Inf    Inf  TRUE  none #> 116    D2 Item_14      dich      d    116  0.455   -Inf    Inf  TRUE  none #> 117    D2 Item_14      dich      g    117  0.000      0      1 FALSE  none #> 118    D2 Item_14      dich      u    118  1.000      0      1 FALSE  none #> 119    D2 Item_15      dich     a1    119  0.851   -Inf    Inf  TRUE  none #> 120    D2 Item_15      dich      d    120 -0.047   -Inf    Inf  TRUE  none #> 121    D2 Item_15      dich      g    121  0.000      0      1 FALSE  none #> 122    D2 Item_15      dich      u    122  1.000      0      1 FALSE  none #> 123    D2   GROUP GroupPars MEAN_1    123  0.000   -Inf    Inf FALSE  none #> 124    D2   GROUP GroupPars COV_11    124  1.000      0    Inf FALSE  none #>     nconst prior.type prior_1 prior_2 #> 1     none       none     NaN     NaN #> 2     none       none     NaN     NaN #> 3     none       none     NaN     NaN #> 4     none       none     NaN     NaN #> 5     none       none     NaN     NaN #> 6     none       none     NaN     NaN #> 7     none       none     NaN     NaN #> 8     none       none     NaN     NaN #> 9     none       none     NaN     NaN #> 10    none       none     NaN     NaN #> 11    none       none     NaN     NaN #> 12    none       none     NaN     NaN #> 13    none       none     NaN     NaN #> 14    none       none     NaN     NaN #> 15    none       none     NaN     NaN #> 16    none       none     NaN     NaN #> 17    none       none     NaN     NaN #> 18    none       none     NaN     NaN #> 19    none       none     NaN     NaN #> 20    none       none     NaN     NaN #> 21    none       none     NaN     NaN #> 22    none       none     NaN     NaN #> 23    none       none     NaN     NaN #> 24    none       none     NaN     NaN #> 25    none       none     NaN     NaN #> 26    none       none     NaN     NaN #> 27    none       none     NaN     NaN #> 28    none       none     NaN     NaN #> 29    none       none     NaN     NaN #> 30    none       none     NaN     NaN #> 31    none       none     NaN     NaN #> 32    none       none     NaN     NaN #> 33    none       none     NaN     NaN #> 34    none       none     NaN     NaN #> 35    none       none     NaN     NaN #> 36    none       none     NaN     NaN #> 37    none       none     NaN     NaN #> 38    none       none     NaN     NaN #> 39    none       none     NaN     NaN #> 40    none       none     NaN     NaN #> 41    none       none     NaN     NaN #> 42    none       none     NaN     NaN #> 43    none       none     NaN     NaN #> 44    none       none     NaN     NaN #> 45    none       none     NaN     NaN #> 46    none       none     NaN     NaN #> 47    none       none     NaN     NaN #> 48    none       none     NaN     NaN #> 49    none       none     NaN     NaN #> 50    none       none     NaN     NaN #> 51    none       none     NaN     NaN #> 52    none       none     NaN     NaN #> 53    none       none     NaN     NaN #> 54    none       none     NaN     NaN #> 55    none       none     NaN     NaN #> 56    none       none     NaN     NaN #> 57    none       none     NaN     NaN #> 58    none       none     NaN     NaN #> 59    none       none     NaN     NaN #> 60    none       none     NaN     NaN #> 61    none       none     NaN     NaN #> 62    none       none     NaN     NaN #> 63    none       none     NaN     NaN #> 64    none       none     NaN     NaN #> 65    none       none     NaN     NaN #> 66    none       none     NaN     NaN #> 67    none       none     NaN     NaN #> 68    none       none     NaN     NaN #> 69    none       none     NaN     NaN #> 70    none       none     NaN     NaN #> 71    none       none     NaN     NaN #> 72    none       none     NaN     NaN #> 73    none       none     NaN     NaN #> 74    none       none     NaN     NaN #> 75    none       none     NaN     NaN #> 76    none       none     NaN     NaN #> 77    none       none     NaN     NaN #> 78    none       none     NaN     NaN #> 79    none       none     NaN     NaN #> 80    none       none     NaN     NaN #> 81    none       none     NaN     NaN #> 82    none       none     NaN     NaN #> 83    none       none     NaN     NaN #> 84    none       none     NaN     NaN #> 85    none       none     NaN     NaN #> 86    none       none     NaN     NaN #> 87    none       none     NaN     NaN #> 88    none       none     NaN     NaN #> 89    none       none     NaN     NaN #> 90    none       none     NaN     NaN #> 91    none       none     NaN     NaN #> 92    none       none     NaN     NaN #> 93    none       none     NaN     NaN #> 94    none       none     NaN     NaN #> 95    none       none     NaN     NaN #> 96    none       none     NaN     NaN #> 97    none       none     NaN     NaN #> 98    none       none     NaN     NaN #> 99    none       none     NaN     NaN #> 100   none       none     NaN     NaN #> 101   none       none     NaN     NaN #> 102   none       none     NaN     NaN #> 103   none       none     NaN     NaN #> 104   none       none     NaN     NaN #> 105   none       none     NaN     NaN #> 106   none       none     NaN     NaN #> 107   none       none     NaN     NaN #> 108   none       none     NaN     NaN #> 109   none       none     NaN     NaN #> 110   none       none     NaN     NaN #> 111   none       none     NaN     NaN #> 112   none       none     NaN     NaN #> 113   none       none     NaN     NaN #> 114   none       none     NaN     NaN #> 115   none       none     NaN     NaN #> 116   none       none     NaN     NaN #> 117   none       none     NaN     NaN #> 118   none       none     NaN     NaN #> 119   none       none     NaN     NaN #> 120   none       none     NaN     NaN #> 121   none       none     NaN     NaN #> 122   none       none     NaN     NaN #> 123   none       none     NaN     NaN #> 124   none       none     NaN     NaN constrain <- list(c(1, 63), c(5,67), c(9,71), c(13,75), c(17,79), c(21,83)) equalslopes <- multipleGroup(dat, 1, group = group, constrain = constrain) #>  anova(equalslopes, mod_configural) #>                     AIC    SABIC       HQ      BIC    logLik     X2 df     p #> equalslopes    35935.51 36066.40 36046.56 36237.96 -17913.76                 #> mod_configural 35927.53 36072.96 36050.92 36263.58 -17903.76 19.983  6 0.003  # same as above, but using mirt.model syntax newmodel <- '     F = 1-15     CONSTRAINB = (1-6, a1)' equalslopes <- multipleGroup(dat, newmodel, group = group) #>  coef(equalslopes, simplify=TRUE) #> $D1 #> $items #>            a1      d g u #> Item_1  1.246  0.546 0 1 #> Item_2  1.356 -0.720 0 1 #> Item_3  1.199 -0.201 0 1 #> Item_4  1.006  0.861 0 1 #> Item_5  1.224  0.131 0 1 #> Item_6  0.515  0.673 0 1 #> Item_7  1.305  0.999 0 1 #> Item_8  0.943 -0.328 0 1 #> Item_9  0.916 -1.058 0 1 #> Item_10 0.731 -1.079 0 1 #> Item_11 0.851  1.186 0 1 #> Item_12 1.515 -0.251 0 1 #> Item_13 1.322  0.444 0 1 #> Item_14 1.058  0.451 0 1 #> Item_15 0.885 -0.061 0 1 #>  #> $means #> F  #> 0  #>  #> $cov #>   F #> F 1 #>  #>  #> $D2 #> $items #>            a1      d g u #> Item_1  1.246  0.599 0 1 #> Item_2  1.356 -0.462 0 1 #> Item_3  1.199 -0.264 0 1 #> Item_4  1.006  1.001 0 1 #> Item_5  1.224  0.266 0 1 #> Item_6  0.515  0.631 0 1 #> Item_7  1.374  1.031 0 1 #> Item_8  1.268 -0.367 0 1 #> Item_9  1.061 -0.952 0 1 #> Item_10 0.826 -1.115 0 1 #> Item_11 1.282  1.308 0 1 #> Item_12 1.625 -0.107 0 1 #> Item_13 1.523  0.493 0 1 #> Item_14 1.545  0.532 0 1 #> Item_15 0.885 -0.030 0 1 #>  #> $means #> F  #> 0  #>  #> $cov #>   F #> F 1 #>  #>   ############ # vertical scaling (i.e., equating when groups answer items others do not) dat2 <- dat dat2[group == 'D1', 1:2] <- dat2[group != 'D1', 14:15] <- NA head(dat2) #>      Item_1 Item_2 Item_3 Item_4 Item_5 Item_6 Item_7 Item_8 Item_9 Item_10 #> [1,]     NA     NA      1      1      1      0      1      1      0       0 #> [2,]     NA     NA      1      1      1      1      1      0      1       0 #> [3,]     NA     NA      0      1      1      1      1      1      0       0 #> [4,]     NA     NA      1      1      1      1      1      1      0       0 #> [5,]     NA     NA      1      0      1      1      1      1      1       0 #> [6,]     NA     NA      1      1      1      1      1      0      0       0 #>      Item_11 Item_12 Item_13 Item_14 Item_15 #> [1,]       1       1       0       1       1 #> [2,]       0       1       1       1       1 #> [3,]       1       0       1       1       1 #> [4,]       1       1       1       1       1 #> [5,]       1       1       1       1       1 #> [6,]       1       1       1       1       0 tail(dat2) #>         Item_1 Item_2 Item_3 Item_4 Item_5 Item_6 Item_7 Item_8 Item_9 Item_10 #> [1995,]      1      1      0      0      0      1      1      1      0       0 #> [1996,]      1      0      1      1      1      0      1      1      1       1 #> [1997,]      0      1      0      0      0      1      0      1      0       0 #> [1998,]      0      1      0      0      1      0      0      0      0       0 #> [1999,]      1      1      0      1      1      1      1      1      0       0 #> [2000,]      0      0      0      0      0      0      1      0      0       0 #>         Item_11 Item_12 Item_13 Item_14 Item_15 #> [1995,]       1       0       1      NA      NA #> [1996,]       1       1       0      NA      NA #> [1997,]       1       0       1      NA      NA #> [1998,]       0       1       0      NA      NA #> [1999,]       1       1       1      NA      NA #> [2000,]       0       0       0      NA      NA  # items with missing responses need to be constrained across groups for identification nms <- colnames(dat2) mod <- multipleGroup(dat2, 1, group, invariance = nms[c(1:2, 14:15)]) #>   # this will throw an error without proper constraints (SEs cannot be computed either) # mod <- multipleGroup(dat2, 1, group)  # model still does not have anchors, therefore need to add a few (here use items 3-5) mod_anchor <- multipleGroup(dat2, 1, group,                             invariance = c(nms[c(1:5, 14:15)], 'free_means', 'free_var')) #>  coef(mod_anchor, simplify=TRUE) #> $D1 #> $items #>            a1      d g u #> Item_1  1.108  0.542 0 1 #> Item_2  1.160 -0.564 0 1 #> Item_3  1.073 -0.272 0 1 #> Item_4  0.871  0.895 0 1 #> Item_5  1.089  0.160 0 1 #> Item_6  0.582  0.685 0 1 #> Item_7  1.292  1.009 0 1 #> Item_8  0.906 -0.328 0 1 #> Item_9  0.855 -1.049 0 1 #> Item_10 0.746 -1.089 0 1 #> Item_11 0.866  1.200 0 1 #> Item_12 1.432 -0.247 0 1 #> Item_13 1.244  0.440 0 1 #> Item_14 1.000  0.449 0 1 #> Item_15 0.852 -0.061 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  #>  #> $D2 #> $items #>            a1      d g u #> Item_1  1.108  0.542 0 1 #> Item_2  1.160 -0.564 0 1 #> Item_3  1.073 -0.272 0 1 #> Item_4  0.871  0.895 0 1 #> Item_5  1.089  0.160 0 1 #> Item_6  0.374  0.596 0 1 #> Item_7  1.090  0.942 0 1 #> Item_8  0.988 -0.437 0 1 #> Item_9  0.854 -1.018 0 1 #> Item_10 0.657 -1.164 0 1 #> Item_11 1.023  1.228 0 1 #> Item_12 1.324 -0.207 0 1 #> Item_13 1.212  0.399 0 1 #> Item_14 1.000  0.449 0 1 #> Item_15 0.852 -0.061 0 1 #>  #> $means #>    F1  #> 0.077  #>  #> $cov #>       F1 #> F1 1.658 #>  #>   # check if identified by computing information matrix mod_anchor <- multipleGroup(dat2, 1, group, pars = mod2values(mod_anchor), TOL=NaN, SE=TRUE,                             invariance = c(nms[c(1:5, 14:15)], 'free_means', 'free_var')) mod_anchor #>  #> Call: #> multipleGroup(data = dat2, model = 1, group = group, invariance = c(nms[c(1:5,  #>     14:15)], \"free_means\", \"free_var\"), pars = mod2values(mod_anchor),  #>     TOL = NaN, SE = TRUE) #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within NaN tolerance after 1 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: nlminb  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Information matrix estimated with method: Oakes #> Second-order test: model is a possible local maximum #> Condition number of information matrix =  87.67822 #>  #> Log-likelihood = -15563.53 #> Estimated parameters: 48  #> AIC = 31223.06 #> BIC = 31491.91; SABIC = 31339.41 #>  coef(mod_anchor) #> $D1 #> $Item_1 #>            a1     d  g  u #> par     1.108 0.542  0  1 #> CI_2.5  0.842 0.330 NA NA #> CI_97.5 1.375 0.753 NA NA #>  #> $Item_2 #>            a1      d  g  u #> par     1.160 -0.564  0  1 #> CI_2.5  0.883 -0.785 NA NA #> CI_97.5 1.436 -0.342 NA NA #>  #> $Item_3 #>            a1      d  g  u #> par     1.073 -0.272  0  1 #> CI_2.5  0.896 -0.408 NA NA #> CI_97.5 1.250 -0.137 NA NA #>  #> $Item_4 #>            a1     d  g  u #> par     0.871 0.895  0  1 #> CI_2.5  0.710 0.765 NA NA #> CI_97.5 1.031 1.026 NA NA #>  #> $Item_5 #>            a1     d  g  u #> par     1.089 0.160  0  1 #> CI_2.5  0.906 0.024 NA NA #> CI_97.5 1.272 0.295 NA NA #>  #> $Item_6 #>            a1     d  g  u #> par     0.582 0.685  0  1 #> CI_2.5  0.405 0.543 NA NA #> CI_97.5 0.760 0.828 NA NA #>  #> $Item_7 #>            a1     d  g  u #> par     1.292 1.009  0  1 #> CI_2.5  1.027 0.818 NA NA #> CI_97.5 1.558 1.199 NA NA #>  #> $Item_8 #>            a1      d  g  u #> par     0.906 -0.328  0  1 #> CI_2.5  0.702 -0.476 NA NA #> CI_97.5 1.111 -0.179 NA NA #>  #> $Item_9 #>            a1      d  g  u #> par     0.855 -1.049  0  1 #> CI_2.5  0.642 -1.216 NA NA #> CI_97.5 1.069 -0.882 NA NA #>  #> $Item_10 #>            a1      d  g  u #> par     0.746 -1.089  0  1 #> CI_2.5  0.542 -1.253 NA NA #> CI_97.5 0.950 -0.926 NA NA #>  #> $Item_11 #>            a1     d  g  u #> par     0.866 1.200  0  1 #> CI_2.5  0.651 1.025 NA NA #> CI_97.5 1.081 1.375 NA NA #>  #> $Item_12 #>            a1      d  g  u #> par     1.432 -0.247  0  1 #> CI_2.5  1.152 -0.421 NA NA #> CI_97.5 1.713 -0.074 NA NA #>  #> $Item_13 #>            a1     d  g  u #> par     1.244 0.440  0  1 #> CI_2.5  0.994 0.273 NA NA #> CI_97.5 1.494 0.607 NA NA #>  #> $Item_14 #>            a1     d  g  u #> par     1.000 0.449  0  1 #> CI_2.5  0.785 0.294 NA NA #> CI_97.5 1.215 0.603 NA NA #>  #> $Item_15 #>            a1      d  g  u #> par     0.852 -0.061  0  1 #> CI_2.5  0.655 -0.205 NA NA #> CI_97.5 1.049  0.083 NA NA #>  #> $GroupPars #>         MEAN_1 COV_11 #> par          0      1 #> CI_2.5      NA     NA #> CI_97.5     NA     NA #>  #>  #> $D2 #> $Item_1 #>            a1     d  g  u #> par     1.108 0.542  0  1 #> CI_2.5  0.842 0.330 NA NA #> CI_97.5 1.375 0.753 NA NA #>  #> $Item_2 #>            a1      d  g  u #> par     1.160 -0.564  0  1 #> CI_2.5  0.883 -0.785 NA NA #> CI_97.5 1.436 -0.342 NA NA #>  #> $Item_3 #>            a1      d  g  u #> par     1.073 -0.272  0  1 #> CI_2.5  0.896 -0.408 NA NA #> CI_97.5 1.250 -0.137 NA NA #>  #> $Item_4 #>            a1     d  g  u #> par     0.871 0.895  0  1 #> CI_2.5  0.710 0.765 NA NA #> CI_97.5 1.031 1.026 NA NA #>  #> $Item_5 #>            a1     d  g  u #> par     1.089 0.160  0  1 #> CI_2.5  0.906 0.024 NA NA #> CI_97.5 1.272 0.295 NA NA #>  #> $Item_6 #>            a1     d  g  u #> par     0.374 0.596  0  1 #> CI_2.5  0.236 0.454 NA NA #> CI_97.5 0.512 0.738 NA NA #>  #> $Item_7 #>            a1     d  g  u #> par     1.090 0.942  0  1 #> CI_2.5  0.823 0.722 NA NA #> CI_97.5 1.357 1.163 NA NA #>  #> $Item_8 #>            a1      d  g  u #> par     0.988 -0.437  0  1 #> CI_2.5  0.747 -0.636 NA NA #> CI_97.5 1.228 -0.239 NA NA #>  #> $Item_9 #>            a1      d  g  u #> par     0.854 -1.018  0  1 #> CI_2.5  0.635 -1.219 NA NA #> CI_97.5 1.072 -0.817 NA NA #>  #> $Item_10 #>            a1      d  g  u #> par     0.657 -1.164  0  1 #> CI_2.5  0.469 -1.350 NA NA #> CI_97.5 0.845 -0.978 NA NA #>  #> $Item_11 #>            a1     d  g  u #> par     1.023 1.228  0  1 #> CI_2.5  0.766 1.003 NA NA #> CI_97.5 1.280 1.452 NA NA #>  #> $Item_12 #>            a1      d  g  u #> par     1.324 -0.207  0  1 #> CI_2.5  1.010 -0.442 NA NA #> CI_97.5 1.637  0.027 NA NA #>  #> $Item_13 #>            a1     d  g  u #> par     1.212 0.399  0  1 #> CI_2.5  0.923 0.178 NA NA #> CI_97.5 1.502 0.620 NA NA #>  #> $Item_14 #>            a1     d  g  u #> par     1.000 0.449  0  1 #> CI_2.5  0.785 0.294 NA NA #> CI_97.5 1.215 0.603 NA NA #>  #> $Item_15 #>            a1      d  g  u #> par     0.852 -0.061  0  1 #> CI_2.5  0.655 -0.205 NA NA #> CI_97.5 1.049  0.083 NA NA #>  #> $GroupPars #>         MEAN_1 COV_11 #> par      0.008  1.658 #> CI_2.5  -0.148  1.093 #> CI_97.5  0.164  2.222 #>  #>  coef(mod_anchor, printSE=TRUE) #> $D1 #> $Item_1 #>        a1     d logit(g) logit(u) #> par 1.108 0.542     -999      999 #> SE  0.136 0.108       NA       NA #>  #> $Item_2 #>        a1      d logit(g) logit(u) #> par 1.160 -0.564     -999      999 #> SE  0.141  0.113       NA       NA #>  #> $Item_3 #>        a1      d logit(g) logit(u) #> par 1.073 -0.272     -999      999 #> SE  0.090  0.069       NA       NA #>  #> $Item_4 #>        a1     d logit(g) logit(u) #> par 0.871 0.895     -999      999 #> SE  0.082 0.066       NA       NA #>  #> $Item_5 #>        a1     d logit(g) logit(u) #> par 1.089 0.160     -999      999 #> SE  0.093 0.069       NA       NA #>  #> $Item_6 #>        a1     d logit(g) logit(u) #> par 0.582 0.685     -999      999 #> SE  0.091 0.073       NA       NA #>  #> $Item_7 #>        a1     d logit(g) logit(u) #> par 1.292 1.009     -999      999 #> SE  0.135 0.097       NA       NA #>  #> $Item_8 #>        a1      d logit(g) logit(u) #> par 0.906 -0.328     -999      999 #> SE  0.104  0.076       NA       NA #>  #> $Item_9 #>        a1      d logit(g) logit(u) #> par 0.855 -1.049     -999      999 #> SE  0.109  0.085       NA       NA #>  #> $Item_10 #>        a1      d logit(g) logit(u) #> par 0.746 -1.089     -999      999 #> SE  0.104  0.083       NA       NA #>  #> $Item_11 #>        a1     d logit(g) logit(u) #> par 0.866 1.200     -999      999 #> SE  0.110 0.089       NA       NA #>  #> $Item_12 #>        a1      d logit(g) logit(u) #> par 1.432 -0.247     -999      999 #> SE  0.143  0.089       NA       NA #>  #> $Item_13 #>        a1     d logit(g) logit(u) #> par 1.244 0.440     -999      999 #> SE  0.127 0.085       NA       NA #>  #> $Item_14 #>       a1     d logit(g) logit(u) #> par 1.00 0.449     -999      999 #> SE  0.11 0.079       NA       NA #>  #> $Item_15 #>        a1      d logit(g) logit(u) #> par 0.852 -0.061     -999      999 #> SE  0.100  0.073       NA       NA #>  #> $GroupPars #>     MEAN_1 COV_11 #> par      0      1 #> SE      NA     NA #>  #>  #> $D2 #> $Item_1 #>        a1     d logit(g) logit(u) #> par 1.108 0.542     -999      999 #> SE  0.136 0.108       NA       NA #>  #> $Item_2 #>        a1      d logit(g) logit(u) #> par 1.160 -0.564     -999      999 #> SE  0.141  0.113       NA       NA #>  #> $Item_3 #>        a1      d logit(g) logit(u) #> par 1.073 -0.272     -999      999 #> SE  0.090  0.069       NA       NA #>  #> $Item_4 #>        a1     d logit(g) logit(u) #> par 0.871 0.895     -999      999 #> SE  0.082 0.066       NA       NA #>  #> $Item_5 #>        a1     d logit(g) logit(u) #> par 1.089 0.160     -999      999 #> SE  0.093 0.069       NA       NA #>  #> $Item_6 #>        a1     d logit(g) logit(u) #> par 0.374 0.596     -999      999 #> SE  0.071 0.073       NA       NA #>  #> $Item_7 #>        a1     d logit(g) logit(u) #> par 1.090 0.942     -999      999 #> SE  0.136 0.112       NA       NA #>  #> $Item_8 #>        a1      d logit(g) logit(u) #> par 0.988 -0.437     -999      999 #> SE  0.123  0.101       NA       NA #>  #> $Item_9 #>        a1      d logit(g) logit(u) #> par 0.854 -1.018     -999      999 #> SE  0.111  0.102       NA       NA #>  #> $Item_10 #>        a1      d logit(g) logit(u) #> par 0.657 -1.164     -999      999 #> SE  0.096  0.095       NA       NA #>  #> $Item_11 #>        a1     d logit(g) logit(u) #> par 1.023 1.228     -999      999 #> SE  0.131 0.114       NA       NA #>  #> $Item_12 #>        a1      d logit(g) logit(u) #> par 1.324 -0.207     -999      999 #> SE  0.160  0.120       NA       NA #>  #> $Item_13 #>        a1     d logit(g) logit(u) #> par 1.212 0.399     -999      999 #> SE  0.148 0.113       NA       NA #>  #> $Item_14 #>       a1     d logit(g) logit(u) #> par 1.00 0.449     -999      999 #> SE  0.11 0.079       NA       NA #>  #> $Item_15 #>        a1      d logit(g) logit(u) #> par 0.852 -0.061     -999      999 #> SE  0.100  0.073       NA       NA #>  #> $GroupPars #>     MEAN_1 COV_11 #> par  0.008  1.658 #> SE   0.080  0.288 #>  #>    ############# # DIF test for each item (using all other items as anchors) itemnames <- colnames(dat) refmodel <- multipleGroup(dat, 1, group = group, SE=TRUE,                           invariance=c('free_means', 'free_var', itemnames)) #>  #>  #> Calculating information matrix...  # loop over items (in practice, run in parallel to increase speed). May be better to use ?DIF estmodels <- vector('list', ncol(dat)) for(i in 1:ncol(dat))     estmodels[[i]] <- multipleGroup(dat, 1, group = group, verbose = FALSE,                              invariance=c('free_means', 'free_var', itemnames[-i])) anova(refmodel, estmodels[[1]]) #>                     AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel       35894.66 35972.22 35960.47 36073.89 -17915.33                #> estmodels[[1]] 35898.45 35980.86 35968.37 36088.88 -17915.22 0.213  2 0.899 (anovas <- lapply(estmodels, function(x, refmodel) anova(refmodel, x),    refmodel=refmodel)) #> [[1]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33                #> x        35898.45 35980.86 35968.37 36088.88 -17915.22 0.213  2 0.899 #>  #> [[2]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33                #> x        35896.81 35979.22 35966.73 36087.24 -17914.41 1.847  2 0.397 #>  #> [[3]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33                #> x        35893.66 35976.07 35963.58 36084.09 -17912.83 5.001  2 0.082 #>  #> [[4]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33                #> x        35897.07 35979.48 35967.00 36087.50 -17914.54 1.586  2 0.453 #>  #> [[5]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33                #> x        35897.97 35980.38 35967.89 36088.40 -17914.99 0.688  2 0.709 #>  #> [[6]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df    p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33               #> x        35894.87 35977.28 35964.79 36085.30 -17913.43 3.793  2 0.15 #>  #> [[7]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33                #> x        35897.53 35979.94 35967.45 36087.96 -17914.76 1.131  2 0.568 #>  #> [[8]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33                #> x        35897.20 35979.61 35967.12 36087.63 -17914.60 1.462  2 0.481 #>  #> [[9]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33                #> x        35898.46 35980.87 35968.38 36088.89 -17915.23 0.197  2 0.906 #>  #> [[10]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33                #> x        35897.67 35980.08 35967.59 36088.10 -17914.83 0.993  2 0.609 #>  #> [[11]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33                #> x        35896.07 35978.48 35965.99 36086.50 -17914.03 2.593  2 0.273 #>  #> [[12]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33                #> x        35897.57 35979.98 35967.49 36088.00 -17914.78 1.092  2 0.579 #>  #> [[13]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33                #> x        35898.47 35980.88 35968.39 36088.90 -17915.23 0.192  2 0.908 #>  #> [[14]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33                #> x        35896.15 35978.57 35966.08 36086.58 -17914.08 2.505  2 0.286 #>  #> [[15]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33                #> x        35896.96 35979.37 35966.88 36087.39 -17914.48 1.699  2 0.428 #>   # family-wise error control p <- do.call(rbind, lapply(anovas, function(x) x[2, 'p'])) p.adjust(p, method = 'BH') #>  [1] 0.9084069 0.8299980 0.8299980 0.8299980 0.8862364 0.8299980 0.8299980 #>  [8] 0.8299980 0.9084069 0.8299980 0.8299980 0.8299980 0.9084069 0.8299980 #> [15] 0.8299980  # same as above, except only test if slopes vary (1 df) # constrain all intercepts estmodels <- vector('list', ncol(dat)) for(i in 1:ncol(dat))     estmodels[[i]] <- multipleGroup(dat, 1, group = group, verbose = FALSE,                              invariance=c('free_means', 'free_var', 'intercepts',                              itemnames[-i]))  (anovas <- lapply(estmodels, function(x, refmodel) anova(refmodel, x),    refmodel=refmodel)) #> [[1]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33                #> x        35896.52 35976.50 35964.38 36081.35 -17915.26 0.143  1 0.705 #>  #> [[2]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33                #> x        35896.60 35976.58 35964.46 36081.43 -17915.30 0.061  1 0.804 #>  #> [[3]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33                #> x        35894.66 35974.65 35962.53 36079.49 -17914.33 1.997  1 0.158 #>  #> [[4]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33                #> x        35896.39 35976.38 35964.26 36081.22 -17915.20 0.268  1 0.605 #>  #> [[5]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33                #> x        35896.56 35976.54 35964.42 36081.39 -17915.28 0.103  1 0.748 #>  #> [[6]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33                #> x        35893.62 35973.60 35961.48 36078.45 -17913.81 3.042  1 0.081 #>  #> [[7]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33                #> x        35895.67 35975.66 35963.54 36080.50 -17914.84 0.985  1 0.321 #>  #> [[8]] #>               AIC    SABIC       HQ      BIC    logLik   X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33               #> x        35896.27 35976.26 35964.13 36081.10 -17915.13 0.39  1 0.532 #>  #> [[9]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33                #> x        35896.66 35976.64 35964.52 36081.49 -17915.33 0.001  1 0.979 #>  #> [[10]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33                #> x        35896.12 35976.11 35963.99 36080.95 -17915.06 0.538  1 0.463 #>  #> [[11]] #>               AIC    SABIC       HQ      BIC    logLik   X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33               #> x        35894.22 35974.21 35962.08 36079.05 -17914.11 2.44  1 0.118 #>  #> [[12]] #>               AIC    SABIC       HQ      BIC    logLik   X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33               #> x        35895.87 35975.86 35963.74 36080.70 -17914.94 0.79  1 0.374 #>  #> [[13]] #>               AIC    SABIC       HQ      BIC    logLik   X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33               #> x        35896.58 35976.57 35964.44 36081.41 -17915.29 0.08  1 0.778 #>  #> [[14]] #>               AIC    SABIC       HQ      BIC    logLik  X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33              #> x        35894.16 35974.15 35962.02 36078.99 -17914.08 2.5  1 0.114 #>  #> [[15]] #>               AIC    SABIC       HQ      BIC    logLik    X2 df     p #> refmodel 35894.66 35972.22 35960.47 36073.89 -17915.33                #> x        35894.99 35974.97 35962.85 36079.82 -17914.49 1.672  1 0.196 #>   # quickly test with Wald test using DIF() mod_configural2 <- multipleGroup(dat, 1, group = group, SE=TRUE) #>  #>  #> Calculating information matrix... DIF(mod_configural2, which.par = c('a1', 'd'), Wald=TRUE, p.adjust = 'fdr') #> NOTE: No hyper-parameters were estimated in the DIF model.  #>       For effective DIF testing, freeing the focal group hyper-parameters is recommended. #>         groups      W df     p adj_p #> Item_1   D1,D2  4.636  2 0.098 0.246 #> Item_2   D1,D2  7.265  2 0.026 0.099 #> Item_3   D1,D2 10.375  2 0.006 0.055 #> Item_4   D1,D2  3.210  2 0.201 0.335 #> Item_5   D1,D2  3.618  2 0.164 0.307 #> Item_6   D1,D2  0.820  2 0.664 0.804 #> Item_7   D1,D2  0.575  2  0.75 0.804 #> Item_8   D1,D2  5.782  2 0.056 0.167 #> Item_9   D1,D2  3.802  2 0.149 0.307 #> Item_10  D1,D2  0.722  2 0.697 0.804 #> Item_11  D1,D2  8.922  2 0.012 0.058 #> Item_12  D1,D2  2.340  2  0.31 0.463 #> Item_13  D1,D2  2.162  2 0.339 0.463 #> Item_14  D1,D2  9.848  2 0.007 0.055 #> Item_15  D1,D2  0.204  2 0.903 0.903    ############# # Three group model where the latent variable parameters are constrained to # be equal in the focal groups  set.seed(12345) a <- matrix(abs(rnorm(15,1,.3)), ncol=1) d <- matrix(rnorm(15,0,.7),ncol=1) itemtype <- rep('2PL', nrow(a)) N <- 1000 dataset1 <- simdata(a, d, N, itemtype) dataset2 <- simdata(a, d, N, itemtype, mu = .1, sigma = matrix(1.5)) dataset3 <- simdata(a, d, N, itemtype, mu = .1, sigma = matrix(1.5)) dat <- rbind(dataset1, dataset2, dataset3) group <- rep(c('D1', 'D2', 'D3'), each=N)  # marginal information itemstats(dat) #> $overall #>     N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  3000             7.89          3.567  0.19 0.054 0.779     1.676 #>  #> $itemstats #>            N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item_1  3000 2 0.605 0.489   0.525         0.415       0.764 #> Item_2  3000 2 0.403 0.491   0.563         0.458       0.761 #> Item_3  3000 2 0.457 0.498   0.504         0.388       0.767 #> Item_4  3000 2 0.676 0.468   0.458         0.345       0.770 #> Item_5  3000 2 0.545 0.498   0.539         0.429       0.763 #> Item_6  3000 2 0.645 0.478   0.334         0.207       0.782 #> Item_7  3000 2 0.688 0.464   0.529         0.426       0.764 #> Item_8  3000 2 0.427 0.495   0.498         0.382       0.767 #> Item_9  3000 2 0.292 0.455   0.454         0.344       0.770 #> Item_10 3000 2 0.284 0.451   0.393         0.279       0.775 #> Item_11 3000 2 0.738 0.440   0.451         0.345       0.770 #> Item_12 3000 2 0.460 0.499   0.598         0.496       0.757 #> Item_13 3000 2 0.591 0.492   0.556         0.449       0.761 #> Item_14 3000 2 0.591 0.492   0.548         0.441       0.762 #> Item_15 3000 2 0.488 0.500   0.452         0.330       0.772 #>  #> $proportions #>             0     1 #> Item_1  0.395 0.605 #> Item_2  0.597 0.403 #> Item_3  0.543 0.457 #> Item_4  0.324 0.676 #> Item_5  0.455 0.545 #> Item_6  0.355 0.645 #> Item_7  0.312 0.688 #> Item_8  0.573 0.427 #> Item_9  0.708 0.292 #> Item_10 0.716 0.284 #> Item_11 0.262 0.738 #> Item_12 0.540 0.460 #> Item_13 0.409 0.591 #> Item_14 0.409 0.591 #> Item_15 0.512 0.488 #>   # conditional information itemstats(dat, group=group) #> $D1 #> $D1$overall #>     N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  1000             7.82          3.346 0.159 0.047  0.74     1.705 #>  #> $D1$itemstats #>            N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item_1  1000 2 0.605 0.489   0.484         0.361       0.725 #> Item_2  1000 2 0.368 0.483   0.507         0.388       0.722 #> Item_3  1000 2 0.461 0.499   0.471         0.343       0.727 #> Item_4  1000 2 0.673 0.469   0.439         0.315       0.729 #> Item_5  1000 2 0.526 0.500   0.500         0.376       0.723 #> Item_6  1000 2 0.654 0.476   0.355         0.222       0.739 #> Item_7  1000 2 0.683 0.466   0.508         0.394       0.722 #> Item_8  1000 2 0.431 0.495   0.462         0.333       0.728 #> Item_9  1000 2 0.287 0.453   0.419         0.298       0.731 #> Item_10 1000 2 0.274 0.446   0.372         0.249       0.735 #> Item_11 1000 2 0.739 0.439   0.401         0.282       0.732 #> Item_12 1000 2 0.456 0.498   0.563         0.448       0.715 #> Item_13 1000 2 0.584 0.493   0.535         0.416       0.719 #> Item_14 1000 2 0.592 0.492   0.483         0.358       0.725 #> Item_15 1000 2 0.487 0.500   0.451         0.321       0.729 #>  #> $D1$proportions #>             0     1 #> Item_1  0.395 0.605 #> Item_2  0.632 0.368 #> Item_3  0.539 0.461 #> Item_4  0.327 0.673 #> Item_5  0.474 0.526 #> Item_6  0.346 0.654 #> Item_7  0.317 0.683 #> Item_8  0.569 0.431 #> Item_9  0.713 0.287 #> Item_10 0.726 0.274 #> Item_11 0.261 0.739 #> Item_12 0.544 0.456 #> Item_13 0.416 0.584 #> Item_14 0.408 0.592 #> Item_15 0.513 0.487 #>  #>  #> $D2 #> $D2$overall #>     N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  1000            7.955          3.754 0.217 0.065 0.807      1.65 #>  #> $D2$itemstats #>            N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item_1  1000 2 0.612 0.488   0.563         0.464       0.792 #> Item_2  1000 2 0.417 0.493   0.569         0.469       0.792 #> Item_3  1000 2 0.450 0.498   0.578         0.479       0.791 #> Item_4  1000 2 0.695 0.461   0.484         0.381       0.798 #> Item_5  1000 2 0.551 0.498   0.553         0.451       0.793 #> Item_6  1000 2 0.644 0.479   0.316         0.195       0.811 #> Item_7  1000 2 0.680 0.467   0.540         0.443       0.794 #> Item_8  1000 2 0.432 0.496   0.544         0.440       0.794 #> Item_9  1000 2 0.317 0.466   0.470         0.365       0.799 #> Item_10 1000 2 0.275 0.447   0.403         0.297       0.804 #> Item_11 1000 2 0.729 0.445   0.508         0.413       0.796 #> Item_12 1000 2 0.483 0.500   0.606         0.511       0.788 #> Item_13 1000 2 0.585 0.493   0.587         0.491       0.790 #> Item_14 1000 2 0.591 0.492   0.589         0.493       0.790 #> Item_15 1000 2 0.494 0.500   0.466         0.351       0.801 #>  #> $D2$proportions #>             0     1 #> Item_1  0.388 0.612 #> Item_2  0.583 0.417 #> Item_3  0.550 0.450 #> Item_4  0.305 0.695 #> Item_5  0.449 0.551 #> Item_6  0.356 0.644 #> Item_7  0.320 0.680 #> Item_8  0.568 0.432 #> Item_9  0.683 0.317 #> Item_10 0.725 0.275 #> Item_11 0.271 0.729 #> Item_12 0.517 0.483 #> Item_13 0.415 0.585 #> Item_14 0.409 0.591 #> Item_15 0.506 0.494 #>  #>  #> $D3 #> $D3$overall #>     N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  1000            7.894          3.592 0.194 0.064 0.783     1.672 #>  #> $D3$itemstats #>            N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item_1  1000 2 0.599 0.490   0.526         0.416       0.769 #> Item_2  1000 2 0.424 0.494   0.610         0.512       0.761 #> Item_3  1000 2 0.459 0.499   0.460         0.340       0.776 #> Item_4  1000 2 0.659 0.474   0.452         0.338       0.775 #> Item_5  1000 2 0.557 0.497   0.562         0.456       0.766 #> Item_6  1000 2 0.638 0.481   0.334         0.208       0.786 #> Item_7  1000 2 0.700 0.458   0.539         0.439       0.767 #> Item_8  1000 2 0.419 0.494   0.485         0.369       0.773 #> Item_9  1000 2 0.272 0.445   0.470         0.365       0.773 #> Item_10 1000 2 0.303 0.460   0.405         0.290       0.779 #> Item_11 1000 2 0.747 0.435   0.438         0.333       0.776 #> Item_12 1000 2 0.442 0.497   0.622         0.526       0.759 #> Item_13 1000 2 0.604 0.489   0.545         0.438       0.767 #> Item_14 1000 2 0.589 0.492   0.569         0.465       0.765 #> Item_15 1000 2 0.482 0.500   0.439         0.317       0.778 #>  #> $D3$proportions #>             0     1 #> Item_1  0.401 0.599 #> Item_2  0.576 0.424 #> Item_3  0.541 0.459 #> Item_4  0.341 0.659 #> Item_5  0.443 0.557 #> Item_6  0.362 0.638 #> Item_7  0.300 0.700 #> Item_8  0.581 0.419 #> Item_9  0.728 0.272 #> Item_10 0.697 0.303 #> Item_11 0.253 0.747 #> Item_12 0.558 0.442 #> Item_13 0.396 0.604 #> Item_14 0.411 0.589 #> Item_15 0.518 0.482 #>  #>   model <- 'F1 = 1-15           FREE[D2, D3] = (GROUP, MEAN_1), (GROUP, COV_11)           CONSTRAINB[D2,D3] = (GROUP, MEAN_1), (GROUP, COV_11)'  mod <- multipleGroup(dat, model, group = group, invariance = colnames(dat)) #>  coef(mod, simplify=TRUE) #> $D1 #> $items #>            a1      d g u #> Item_1  1.089  0.517 0 1 #> Item_2  1.302 -0.601 0 1 #> Item_3  0.950 -0.251 0 1 #> Item_4  0.857  0.847 0 1 #> Item_5  1.119  0.195 0 1 #> Item_6  0.447  0.618 0 1 #> Item_7  1.209  1.023 0 1 #> Item_8  0.939 -0.396 0 1 #> Item_9  0.909 -1.110 0 1 #> Item_10 0.695 -1.073 0 1 #> Item_11 0.929  1.232 0 1 #> Item_12 1.454 -0.290 0 1 #> Item_13 1.216  0.457 0 1 #> Item_14 1.199  0.453 0 1 #> Item_15 0.751 -0.085 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  #>  #> $D2 #> $items #>            a1      d g u #> Item_1  1.089  0.517 0 1 #> Item_2  1.302 -0.601 0 1 #> Item_3  0.950 -0.251 0 1 #> Item_4  0.857  0.847 0 1 #> Item_5  1.119  0.195 0 1 #> Item_6  0.447  0.618 0 1 #> Item_7  1.209  1.023 0 1 #> Item_8  0.939 -0.396 0 1 #> Item_9  0.909 -1.110 0 1 #> Item_10 0.695 -1.073 0 1 #> Item_11 0.929  1.232 0 1 #> Item_12 1.454 -0.290 0 1 #> Item_13 1.216  0.457 0 1 #> Item_14 1.199  0.453 0 1 #> Item_15 0.751 -0.085 0 1 #>  #> $means #>    F1  #> 0.055  #>  #> $cov #>       F1 #> F1 1.467 #>  #>  #> $D3 #> $items #>            a1      d g u #> Item_1  1.089  0.517 0 1 #> Item_2  1.302 -0.601 0 1 #> Item_3  0.950 -0.251 0 1 #> Item_4  0.857  0.847 0 1 #> Item_5  1.119  0.195 0 1 #> Item_6  0.447  0.618 0 1 #> Item_7  1.209  1.023 0 1 #> Item_8  0.939 -0.396 0 1 #> Item_9  0.909 -1.110 0 1 #> Item_10 0.695 -1.073 0 1 #> Item_11 0.929  1.232 0 1 #> Item_12 1.454 -0.290 0 1 #> Item_13 1.216  0.457 0 1 #> Item_14 1.199  0.453 0 1 #> Item_15 0.751 -0.085 0 1 #>  #> $means #>    F1  #> 0.055  #>  #> $cov #>       F1 #> F1 1.467 #>  #>   ############# # Testing main effects in multiple independent grouping variables set.seed(1234) a <- matrix(abs(rnorm(15,1,.3)), ncol=1) d <- matrix(rnorm(15,0,.7),ncol=1) itemtype <- rep('2PL', nrow(a)) N <- 500  # generated data have interaction effect for latent means, as well as a # main effect across D but no main effect across G d11 <- simdata(a, d, N, itemtype, mu = 0) d12 <- simdata(a, d, N, itemtype, mu = 0) d13 <- simdata(a, d, N, itemtype, mu = 0) d21 <- simdata(a, d, N, itemtype, mu = 1/2) d22 <- simdata(a, d, N, itemtype, mu = 1/2) d23 <- simdata(a, d, N, itemtype, mu = -1) dat <- do.call(rbind, list(d11, d12, d13, d21, d22, d23)) group <- rep(c('G1.D1', 'G1.D2', 'G1.D3', 'G2.D1', 'G2.D2', 'G2.D3'), each=N) table(group) #> group #> G1.D1 G1.D2 G1.D3 G2.D1 G2.D2 G2.D3  #>   500   500   500   500   500   500   if (FALSE) { # \\dontrun{ # in practice, group would be organized in a data.frame as follows df <- data.frame(group) dfw <- tidyr::separate_wider_delim(df, group, delim='.', names = c('G', 'D')) head(dfw)  # for use with multipleGroup() combine into a single long group group <- with(dfw, factor(G):factor(D))  # conditional information itemstats(dat, group=group)  mod <- multipleGroup(dat, group = group, SE=TRUE,                      invariance = c(colnames(dat), 'free_mean', 'free_var')) coef(mod, simplify=TRUE) sapply(coef(mod, simplify=TRUE), \\(x) unname(x$means)) # mean estimates wald(mod) # view parameter names for later testing  # test for main effect over G group (manually compute marginal mean) wald(mod, \"0 + MEAN_1.123 + MEAN_1.185 = MEAN_1.247 + MEAN_1.309 + MEAN_1.371\")  # test for main effect over D group  (manually compute marginal means) wald(mod, c(\"0 + MEAN_1.247 = MEAN_1.123 + MEAN_1.309\",             \"0 + MEAN_1.247 = MEAN_1.185 + MEAN_1.371\"))  # post-hoc tests (better practice would include p.adjust() ) wald(mod, \"0 + MEAN_1.247 = MEAN_1.123 + MEAN_1.309\") # D1 vs D2 wald(mod, \"0 + MEAN_1.247 = MEAN_1.185 + MEAN_1.371\") # D1 vs D3 wald(mod, \"MEAN_1.123 + MEAN_1.309 = MEAN_1.185 + MEAN_1.371\") # D2 vs D3 } # }  ############# # multiple factors  a <- matrix(c(abs(rnorm(5,1,.3)), rep(0,15),abs(rnorm(5,1,.3)),      rep(0,15),abs(rnorm(5,1,.3))), 15, 3) d <- matrix(rnorm(15,0,.7),ncol=1) mu <- c(-.4, -.7, .1) sigma <- matrix(c(1.21,.297,1.232,.297,.81,.252,1.232,.252,1.96),3,3) itemtype <- rep('2PL', nrow(a)) N <- 1000 dataset1 <- simdata(a, d, N, itemtype) dataset2 <- simdata(a, d, N, itemtype, mu = mu, sigma = sigma) dat <- rbind(dataset1, dataset2) group <- c(rep('D1', N), rep('D2', N))  # group models model <- '    F1 = 1-5    F2 = 6-10    F3 = 11-15'  # define mirt cluster to use parallel architecture if(interactive()) mirtCluster()  # EM approach (not as accurate with 3 factors, but generally good for quick model comparisons) mod_configural <- multipleGroup(dat, model, group = group) #completely separate analyses #>  mod_metric <- multipleGroup(dat, model, group = group, invariance=c('slopes')) #equal slopes #>  mod_fullconstrain <- multipleGroup(dat, model, group = group, #equal means, slopes, intercepts                              invariance=c('slopes', 'intercepts')) #>   anova(mod_metric, mod_configural) #>                     AIC    SABIC       HQ      BIC    logLik     X2 df     p #> mod_metric     36921.29 37030.37 37013.84 37173.33 -18415.65                 #> mod_configural 36916.10 37061.53 37039.49 37252.15 -18398.05 35.197 15 0.002 anova(mod_fullconstrain, mod_metric) #>                        AIC    SABIC       HQ      BIC    logLik      X2 df p #> mod_fullconstrain 37020.58 37093.29 37082.27 37188.60 -18480.29              #> mod_metric        36921.29 37030.37 37013.84 37173.33 -18415.65 129.284 15 0  # same as above, but with MHRM (generally  more accurate with 3+ factors, but slower) mod_configural <- multipleGroup(dat, model, group = group, method = 'MHRM') #> , Max-Change = 0.0590, Max-Change = 0.0510, Max-Change = 0.0521, Max-Change = 0.0448, Max-Change = 0.0452, Max-Change = 0.0585, Max-Change = 0.0515, Max-Change = 0.0410, Max-Change = 0.0450, Max-Change = 0.0403, Max-Change = 0.0433, Max-Change = 0.0520, Max-Change = 0.0391, Max-Change = 0.0444, Max-Change = 0.0611, Max-Change = 0.0418, Max-Change = 0.0514, Max-Change = 0.0568, Max-Change = 0.0286, Max-Change = 0.0359, Max-Change = 0.0247, Max-Change = 0.0433, Max-Change = 0.0549, Max-Change = 0.0384, Max-Change = 0.0468, Max-Change = 0.0443, Max-Change = 0.0343, Max-Change = 0.0363, Max-Change = 0.0315, Max-Change = 0.0449, Max-Change = 0.0334, Max-Change = 0.0500, Max-Change = 0.0348, Max-Change = 0.0351, Max-Change = 0.0404, Max-Change = 0.0712, Max-Change = 0.0320, Max-Change = 0.0251, Max-Change = 0.0268, Max-Change = 0.0331, Max-Change = 0.0369, Max-Change = 0.0361, Max-Change = 0.0252, Max-Change = 0.0319, Max-Change = 0.0311, Max-Change = 0.0443, Max-Change = 0.0405, Max-Change = 0.0283, Max-Change = 0.0392, Max-Change = 0.0315, Max-Change = 0.0536, Max-Change = 0.0339, Max-Change = 0.0258, Max-Change = 0.0350, Max-Change = 0.0428, Max-Change = 0.0349, Max-Change = 0.0378, Max-Change = 0.0539, Max-Change = 0.0303, Max-Change = 0.0469, Max-Change = 0.0424, Max-Change = 0.0275, Max-Change = 0.0502, Max-Change = 0.0449, Max-Change = 0.0378, Max-Change = 0.0307, Max-Change = 0.0340, Max-Change = 0.0370, Max-Change = 0.0527, Max-Change = 0.0222, Max-Change = 0.0256, Max-Change = 0.0322, Max-Change = 0.0393, Max-Change = 0.0343, Max-Change = 0.0384, Max-Change = 0.0348, Max-Change = 0.0321, Max-Change = 0.0297, Max-Change = 0.0377, Max-Change = 0.0313, Max-Change = 0.0272, Max-Change = 0.0264, Max-Change = 0.0357, Max-Change = 0.0336, Max-Change = 0.0355, Max-Change = 0.0304, Max-Change = 0.0452, Max-Change = 0.0284, Max-Change = 0.0211, Max-Change = 0.0450, Max-Change = 0.0394, Max-Change = 0.0357, Max-Change = 0.0273, Max-Change = 0.0615, Max-Change = 0.0300, Max-Change = 0.0333, Max-Change = 0.0246, Max-Change = 0.0344, Max-Change = 0.0406, Max-Change = 0.0265, Max-Change = 0.0389, Max-Change = 0.0379, Max-Change = 0.0637, Max-Change = 0.0312, Max-Change = 0.0208, Max-Change = 0.0273, Max-Change = 0.0217, Max-Change = 0.0340, Max-Change = 0.0473, Max-Change = 0.0318, Max-Change = 0.0316, Max-Change = 0.0378, Max-Change = 0.0282, Max-Change = 0.0386, Max-Change = 0.0447, Max-Change = 0.0300, Max-Change = 0.0565, Max-Change = 0.0259, Max-Change = 0.0267, Max-Change = 0.0397, Max-Change = 0.0238, Max-Change = 0.0390, Max-Change = 0.0650, Max-Change = 0.0314, Max-Change = 0.0328, Max-Change = 0.0262, Max-Change = 0.0410, Max-Change = 0.0427, Max-Change = 0.0381, Max-Change = 0.0445, Max-Change = 0.0469, Max-Change = 0.0374, Max-Change = 0.0410, Max-Change = 0.0329, Max-Change = 0.0330, Max-Change = 0.0277, Max-Change = 0.0275, Max-Change = 0.0485, Max-Change = 0.0440, Max-Change = 0.0264, Max-Change = 0.0432, Max-Change = 0.0410, Max-Change = 0.0404, Max-Change = 0.0251, Max-Change = 0.0507, Max-Change = 0.0299, Max-Change = 0.0810, Max-Change = 0.0278, Max-Change = 0.0372, Max-Change = 0.0388, Max-Change = 0.0274, Max-Change = 0.0308, Max-Change = 0.0455, Max-Change = 0.0292, Max-Change = 0.0250, Max-Change = 0.0288, Max-Change = 0.0254, Max-Change = 0.0398, Max-Change = 0.0308, Max-Change = 0.0343, Max-Change = 0.0507, Max-Change = 0.0303, Max-Change = 0.0368, Max-Change = 0.0369, Max-Change = 0.0298, Max-Change = 0.0401, Max-Change = 0.0428, Max-Change = 0.0409, Max-Change = 0.0384, Max-Change = 0.0389, Max-Change = 0.0351, Max-Change = 0.0274, Max-Change = 0.0390, Max-Change = 0.0337, Max-Change = 0.0322, Max-Change = 0.0540, Max-Change = 0.0337, Max-Change = 0.0245, Max-Change = 0.0353, Max-Change = 0.0351, Max-Change = 0.0221, Max-Change = 0.0360, Max-Change = 0.0580, Max-Change = 0.0393, Max-Change = 0.0259, Max-Change = 0.0377, Max-Change = 0.0447, Max-Change = 0.0309, Max-Change = 0.0425, Max-Change = 0.0266, Max-Change = 0.0595, Max-Change = 0.0631, Max-Change = 0.0266, Max-Change = 0.0294, Max-Change = 0.0404, Max-Change = 0.0402, Max-Change = 0.0263, Max-Change = 0.0425, Max-Change = 0.0324, Max-Change = 0.0340, Max-Change = 0.0393, Max-Change = 0.0377, Max-Change = 0.0538, Max-Change = 0.0342, Max-Change = 0.0249, Max-Change = 0.0301, Max-Change = 0.0345, Max-Change = 0.0360, Max-Change = 0.0411, Max-Change = 0.0308, Max-Change = 0.0407, Max-Change = 0.0373, Max-Change = 0.0357, Max-Change = 0.0358, Max-Change = 0.0316, Max-Change = 0.0284, Max-Change = 0.0370, Max-Change = 0.0253, Max-Change = 0.0331, Max-Change = 0.0395, Max-Change = 0.0281, Max-Change = 0.0238, Max-Change = 0.0272, Max-Change = 0.0520, Max-Change = 0.0252, Max-Change = 0.0401, Max-Change = 0.0453, Max-Change = 0.0347, Max-Change = 0.0410, Max-Change = 0.0307, Max-Change = 0.0411, Max-Change = 0.0324, Max-Change = 0.0353, Max-Change = 0.0441, Max-Change = 0.0374, Max-Change = 0.0463, Max-Change = 0.0281, Max-Change = 0.0402, Max-Change = 0.0384, Max-Change = 0.0290, Max-Change = 0.0401, Max-Change = 0.0546, Max-Change = 0.0300, Max-Change = 0.0268, Max-Change = 0.0401, Max-Change = 0.0299, Max-Change = 0.0613, Max-Change = 0.0343, Max-Change = 0.0483, Max-Change = 0.0472, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0400, gam = 0.1057, Max-Change = 0.0314, gam = 0.0780, Max-Change = 0.0153, gam = 0.0629, Max-Change = 0.0105, gam = 0.0532, Max-Change = 0.0084, gam = 0.0464, Max-Change = 0.0134, gam = 0.0413, Max-Change = 0.0099, gam = 0.0374, Max-Change = 0.0098, gam = 0.0342, Max-Change = 0.0048, gam = 0.0316, Max-Change = 0.0057, gam = 0.0294, Max-Change = 0.0032, gam = 0.0276, Max-Change = 0.0048, gam = 0.0260, Max-Change = 0.0042, gam = 0.0246, Max-Change = 0.0069, gam = 0.0233, Max-Change = 0.0037, gam = 0.0222, Max-Change = 0.0044, gam = 0.0212, Max-Change = 0.0044, gam = 0.0203, Max-Change = 0.0036, gam = 0.0195, Max-Change = 0.0051, gam = 0.0188, Max-Change = 0.0048, gam = 0.0181, Max-Change = 0.0023, gam = 0.0175, Max-Change = 0.0043, gam = 0.0169, Max-Change = 0.0035, gam = 0.0164, Max-Change = 0.0032, gam = 0.0159, Max-Change = 0.0033, gam = 0.0154, Max-Change = 0.0018, gam = 0.0150, Max-Change = 0.0024, gam = 0.0146, Max-Change = 0.0026, gam = 0.0142, Max-Change = 0.0018, gam = 0.0139, Max-Change = 0.0024, gam = 0.0135, Max-Change = 0.0018, gam = 0.0132, Max-Change = 0.0035, gam = 0.0129, Max-Change = 0.0028, gam = 0.0126, Max-Change = 0.0016, gam = 0.0124, Max-Change = 0.0023, gam = 0.0121, Max-Change = 0.0022, gam = 0.0119, Max-Change = 0.0020, gam = 0.0116, Max-Change = 0.0035, gam = 0.0114, Max-Change = 0.0032, gam = 0.0112, Max-Change = 0.0020, gam = 0.0110, Max-Change = 0.0013, gam = 0.0108, Max-Change = 0.0013, gam = 0.0106, Max-Change = 0.0021, gam = 0.0104, Max-Change = 0.0018, gam = 0.0102, Max-Change = 0.0022, gam = 0.0101, Max-Change = 0.0025, gam = 0.0099, Max-Change = 0.0018, gam = 0.0098, Max-Change = 0.0014, gam = 0.0096, Max-Change = 0.0015, gam = 0.0095, Max-Change = 0.0013, gam = 0.0093, Max-Change = 0.0017, gam = 0.0092, Max-Change = 0.0015, gam = 0.0091, Max-Change = 0.0021, gam = 0.0089, Max-Change = 0.0019, gam = 0.0088, Max-Change = 0.0012, gam = 0.0087, Max-Change = 0.0019, gam = 0.0086, Max-Change = 0.0012, gam = 0.0085, Max-Change = 0.0013, gam = 0.0084, Max-Change = 0.0011, gam = 0.0082, Max-Change = 0.0015, gam = 0.0081, Max-Change = 0.0014, gam = 0.0080, Max-Change = 0.0015, gam = 0.0080, Max-Change = 0.0016, gam = 0.0079, Max-Change = 0.0015, gam = 0.0078, Max-Change = 0.0013, gam = 0.0077, Max-Change = 0.0016, gam = 0.0076, Max-Change = 0.0012, gam = 0.0075, Max-Change = 0.0007, gam = 0.0074, Max-Change = 0.0015, gam = 0.0073, Max-Change = 0.0010, gam = 0.0073, Max-Change = 0.0015, gam = 0.0072, Max-Change = 0.0013, gam = 0.0071, Max-Change = 0.0010, gam = 0.0070, Max-Change = 0.0018, gam = 0.0070, Max-Change = 0.0023, gam = 0.0069, Max-Change = 0.0015, gam = 0.0068, Max-Change = 0.0013, gam = 0.0068, Max-Change = 0.0008, gam = 0.0067, Max-Change = 0.0010, gam = 0.0066, Max-Change = 0.0022, gam = 0.0066, Max-Change = 0.0021, gam = 0.0065, Max-Change = 0.0016, gam = 0.0065, Max-Change = 0.0014, gam = 0.0064, Max-Change = 0.0012, gam = 0.0064, Max-Change = 0.0009, gam = 0.0063, Max-Change = 0.0012, gam = 0.0062, Max-Change = 0.0012, gam = 0.0062, Max-Change = 0.0012, gam = 0.0061, Max-Change = 0.0010, gam = 0.0061, Max-Change = 0.0008, gam = 0.0060, Max-Change = 0.0013, gam = 0.0060, Max-Change = 0.0010, gam = 0.0059, Max-Change = 0.0014, gam = 0.0059, Max-Change = 0.0012, gam = 0.0058, Max-Change = 0.0018, gam = 0.0058, Max-Change = 0.0006, gam = 0.0058, Max-Change = 0.0008, gam = 0.0057, Max-Change = 0.0011, gam = 0.0057, Max-Change = 0.0010, gam = 0.0056, Max-Change = 0.0010, gam = 0.0056, Max-Change = 0.0006 #>  #> Calculating log-likelihood... mod_metric <- multipleGroup(dat, model, group = group, invariance=c('slopes'), method = 'MHRM') #> , Max-Change = 0.0602, Max-Change = 0.0556, Max-Change = 0.0444, Max-Change = 0.0508, Max-Change = 0.0365, Max-Change = 0.0433, Max-Change = 0.0317, Max-Change = 0.0330, Max-Change = 0.0324, Max-Change = 0.0245, Max-Change = 0.0334, Max-Change = 0.0232, Max-Change = 0.0176, Max-Change = 0.0321, Max-Change = 0.0257, Max-Change = 0.0304, Max-Change = 0.0253, Max-Change = 0.0199, Max-Change = 0.0240, Max-Change = 0.0202, Max-Change = 0.0239, Max-Change = 0.0248, Max-Change = 0.0311, Max-Change = 0.0186, Max-Change = 0.0301, Max-Change = 0.0316, Max-Change = 0.0253, Max-Change = 0.0146, Max-Change = 0.0204, Max-Change = 0.0180, Max-Change = 0.0305, Max-Change = 0.0229, Max-Change = 0.0400, Max-Change = 0.0192, Max-Change = 0.0343, Max-Change = 0.0320, Max-Change = 0.0285, Max-Change = 0.0170, Max-Change = 0.0337, Max-Change = 0.0177, Max-Change = 0.0206, Max-Change = 0.0226, Max-Change = 0.0167, Max-Change = 0.0183, Max-Change = 0.0259, Max-Change = 0.0128, Max-Change = 0.0273, Max-Change = 0.0211, Max-Change = 0.0283, Max-Change = 0.0258, Max-Change = 0.0327, Max-Change = 0.0224, Max-Change = 0.0153, Max-Change = 0.0245, Max-Change = 0.0285, Max-Change = 0.0165, Max-Change = 0.0225, Max-Change = 0.0195, Max-Change = 0.0179, Max-Change = 0.0302, Max-Change = 0.0240, Max-Change = 0.0266, Max-Change = 0.0268, Max-Change = 0.0258, Max-Change = 0.0243, Max-Change = 0.0174, Max-Change = 0.0205, Max-Change = 0.0201, Max-Change = 0.0533, Max-Change = 0.0199, Max-Change = 0.0250, Max-Change = 0.0225, Max-Change = 0.0267, Max-Change = 0.0159, Max-Change = 0.0182, Max-Change = 0.0229, Max-Change = 0.0242, Max-Change = 0.0285, Max-Change = 0.0240, Max-Change = 0.0294, Max-Change = 0.0171, Max-Change = 0.0156, Max-Change = 0.0214, Max-Change = 0.0175, Max-Change = 0.0262, Max-Change = 0.0279, Max-Change = 0.0195, Max-Change = 0.0337, Max-Change = 0.0234, Max-Change = 0.0289, Max-Change = 0.0167, Max-Change = 0.0206, Max-Change = 0.0106, Max-Change = 0.0424, Max-Change = 0.0174, Max-Change = 0.0168, Max-Change = 0.0176, Max-Change = 0.0296, Max-Change = 0.0258, Max-Change = 0.0122, Max-Change = 0.0307, Max-Change = 0.0214, Max-Change = 0.0319, Max-Change = 0.0384, Max-Change = 0.0263, Max-Change = 0.0241, Max-Change = 0.0285, Max-Change = 0.0269, Max-Change = 0.0253, Max-Change = 0.0247, Max-Change = 0.0192, Max-Change = 0.0207, Max-Change = 0.0181, Max-Change = 0.0184, Max-Change = 0.0219, Max-Change = 0.0138, Max-Change = 0.0198, Max-Change = 0.0203, Max-Change = 0.0233, Max-Change = 0.0218, Max-Change = 0.0253, Max-Change = 0.0177, Max-Change = 0.0142, Max-Change = 0.0181, Max-Change = 0.0279, Max-Change = 0.0251, Max-Change = 0.0152, Max-Change = 0.0171, Max-Change = 0.0185, Max-Change = 0.0206, Max-Change = 0.0165, Max-Change = 0.0222, Max-Change = 0.0181, Max-Change = 0.0308, Max-Change = 0.0201, Max-Change = 0.0198, Max-Change = 0.0216, Max-Change = 0.0272, Max-Change = 0.0205, Max-Change = 0.0160, Max-Change = 0.0271, Max-Change = 0.0137, Max-Change = 0.0107, Max-Change = 0.0176, Max-Change = 0.0271, Max-Change = 0.0208, Max-Change = 0.0286, Max-Change = 0.0181, Max-Change = 0.0215, Max-Change = 0.0196, Max-Change = 0.0151, Max-Change = 0.0218, Max-Change = 0.0253, Max-Change = 0.0201, Max-Change = 0.0179, Max-Change = 0.0144, Max-Change = 0.0141, Max-Change = 0.0208, Max-Change = 0.0124, Max-Change = 0.0194, Max-Change = 0.0172, Max-Change = 0.0254, Max-Change = 0.0225, Max-Change = 0.0228, Max-Change = 0.0310, Max-Change = 0.0388, Max-Change = 0.0211, Max-Change = 0.0142, Max-Change = 0.0228, Max-Change = 0.0273, Max-Change = 0.0402, Max-Change = 0.0296, Max-Change = 0.0256, Max-Change = 0.0389, Max-Change = 0.0127, Max-Change = 0.0248, Max-Change = 0.0446, Max-Change = 0.0215, Max-Change = 0.0230, Max-Change = 0.0198, Max-Change = 0.0142, Max-Change = 0.0202, Max-Change = 0.0441, Max-Change = 0.0276, Max-Change = 0.0145, Max-Change = 0.0263, Max-Change = 0.0201, Max-Change = 0.0193, Max-Change = 0.0273, Max-Change = 0.0223, Max-Change = 0.0262, Max-Change = 0.0329, Max-Change = 0.0240, Max-Change = 0.0166, Max-Change = 0.0283, Max-Change = 0.0325, Max-Change = 0.0273, Max-Change = 0.0236, Max-Change = 0.0310, Max-Change = 0.0176, Max-Change = 0.0152, Max-Change = 0.0246, Max-Change = 0.0227, Max-Change = 0.0188, Max-Change = 0.0203, Max-Change = 0.0197, Max-Change = 0.0246, Max-Change = 0.0160, Max-Change = 0.0277, Max-Change = 0.0216, Max-Change = 0.0315, Max-Change = 0.0404, Max-Change = 0.0293, Max-Change = 0.0267, Max-Change = 0.0246, Max-Change = 0.0153, Max-Change = 0.0272, Max-Change = 0.0182, Max-Change = 0.0182, Max-Change = 0.0171, Max-Change = 0.0230, Max-Change = 0.0163, Max-Change = 0.0182, Max-Change = 0.0223, Max-Change = 0.0229, Max-Change = 0.0210, Max-Change = 0.0210, Max-Change = 0.0235, Max-Change = 0.0204, Max-Change = 0.0273, Max-Change = 0.0164, Max-Change = 0.0122, Max-Change = 0.0173, Max-Change = 0.0154, Max-Change = 0.0420, Max-Change = 0.0345, Max-Change = 0.0169, Max-Change = 0.0182, Max-Change = 0.0172, Max-Change = 0.0225, Max-Change = 0.0239, Max-Change = 0.0172, Max-Change = 0.0171, Max-Change = 0.0267, Max-Change = 0.0205, Max-Change = 0.0246, Max-Change = 0.0335, Max-Change = 0.0183, Max-Change = 0.0198, Max-Change = 0.0259, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0167, gam = 0.1057, Max-Change = 0.0103, gam = 0.0780, Max-Change = 0.0132, gam = 0.0629, Max-Change = 0.0049, gam = 0.0532, Max-Change = 0.0077, gam = 0.0464, Max-Change = 0.0073, gam = 0.0413, Max-Change = 0.0037, gam = 0.0374, Max-Change = 0.0040, gam = 0.0342, Max-Change = 0.0062, gam = 0.0316, Max-Change = 0.0037, gam = 0.0294, Max-Change = 0.0038, gam = 0.0276, Max-Change = 0.0025, gam = 0.0260, Max-Change = 0.0025, gam = 0.0246, Max-Change = 0.0033, gam = 0.0233, Max-Change = 0.0024, gam = 0.0222, Max-Change = 0.0026, gam = 0.0212, Max-Change = 0.0023, gam = 0.0203, Max-Change = 0.0022, gam = 0.0195, Max-Change = 0.0026, gam = 0.0188, Max-Change = 0.0019, gam = 0.0181, Max-Change = 0.0021, gam = 0.0175, Max-Change = 0.0022, gam = 0.0169, Max-Change = 0.0024, gam = 0.0164, Max-Change = 0.0026, gam = 0.0159, Max-Change = 0.0018, gam = 0.0154, Max-Change = 0.0014, gam = 0.0150, Max-Change = 0.0016, gam = 0.0146, Max-Change = 0.0019, gam = 0.0142, Max-Change = 0.0021, gam = 0.0139, Max-Change = 0.0015, gam = 0.0135, Max-Change = 0.0017, gam = 0.0132, Max-Change = 0.0011, gam = 0.0129, Max-Change = 0.0016, gam = 0.0126, Max-Change = 0.0019, gam = 0.0124, Max-Change = 0.0020, gam = 0.0121, Max-Change = 0.0012, gam = 0.0119, Max-Change = 0.0014, gam = 0.0116, Max-Change = 0.0010, gam = 0.0114, Max-Change = 0.0016, gam = 0.0112, Max-Change = 0.0013, gam = 0.0110, Max-Change = 0.0013, gam = 0.0108, Max-Change = 0.0011, gam = 0.0106, Max-Change = 0.0015, gam = 0.0104, Max-Change = 0.0018, gam = 0.0102, Max-Change = 0.0009, gam = 0.0101, Max-Change = 0.0017, gam = 0.0099, Max-Change = 0.0014, gam = 0.0098, Max-Change = 0.0008, gam = 0.0096, Max-Change = 0.0011, gam = 0.0095, Max-Change = 0.0010, gam = 0.0093, Max-Change = 0.0011, gam = 0.0092, Max-Change = 0.0010, gam = 0.0091, Max-Change = 0.0010, gam = 0.0089, Max-Change = 0.0012, gam = 0.0088, Max-Change = 0.0010, gam = 0.0087, Max-Change = 0.0012, gam = 0.0086, Max-Change = 0.0020, gam = 0.0085, Max-Change = 0.0013, gam = 0.0084, Max-Change = 0.0010, gam = 0.0082, Max-Change = 0.0009, gam = 0.0081, Max-Change = 0.0008, gam = 0.0080, Max-Change = 0.0010, gam = 0.0080, Max-Change = 0.0009, gam = 0.0079, Max-Change = 0.0017, gam = 0.0078, Max-Change = 0.0011, gam = 0.0077, Max-Change = 0.0011, gam = 0.0076, Max-Change = 0.0011, gam = 0.0075, Max-Change = 0.0007, gam = 0.0074, Max-Change = 0.0010, gam = 0.0073, Max-Change = 0.0005 #>  #> Calculating log-likelihood... mod_fullconstrain <- multipleGroup(dat, model, group = group, method = 'MHRM',                              invariance=c('slopes', 'intercepts')) #> , Max-Change = 0.0462, Max-Change = 0.0312, Max-Change = 0.0468, Max-Change = 0.0362, Max-Change = 0.0366, Max-Change = 0.0420, Max-Change = 0.0307, Max-Change = 0.0387, Max-Change = 0.0375, Max-Change = 0.0293, Max-Change = 0.0436, Max-Change = 0.0336, Max-Change = 0.0242, Max-Change = 0.0422, Max-Change = 0.0259, Max-Change = 0.0239, Max-Change = 0.0230, Max-Change = 0.0316, Max-Change = 0.0240, Max-Change = 0.0363, Max-Change = 0.0179, Max-Change = 0.0254, Max-Change = 0.0253, Max-Change = 0.0183, Max-Change = 0.0200, Max-Change = 0.0310, Max-Change = 0.0170, Max-Change = 0.0156, Max-Change = 0.0182, Max-Change = 0.0207, Max-Change = 0.0165, Max-Change = 0.0149, Max-Change = 0.0216, Max-Change = 0.0224, Max-Change = 0.0145, Max-Change = 0.0270, Max-Change = 0.0279, Max-Change = 0.0149, Max-Change = 0.0259, Max-Change = 0.0210, Max-Change = 0.0206, Max-Change = 0.0219, Max-Change = 0.0140, Max-Change = 0.0169, Max-Change = 0.0216, Max-Change = 0.0183, Max-Change = 0.0198, Max-Change = 0.0179, Max-Change = 0.0232, Max-Change = 0.0250, Max-Change = 0.0163, Max-Change = 0.0236, Max-Change = 0.0200, Max-Change = 0.0197, Max-Change = 0.0172, Max-Change = 0.0158, Max-Change = 0.0193, Max-Change = 0.0190, Max-Change = 0.0220, Max-Change = 0.0230, Max-Change = 0.0186, Max-Change = 0.0296, Max-Change = 0.0231, Max-Change = 0.0481, Max-Change = 0.0297, Max-Change = 0.0308, Max-Change = 0.0308, Max-Change = 0.0180, Max-Change = 0.0390, Max-Change = 0.0172, Max-Change = 0.0234, Max-Change = 0.0193, Max-Change = 0.0254, Max-Change = 0.0181, Max-Change = 0.0215, Max-Change = 0.0160, Max-Change = 0.0166, Max-Change = 0.0258, Max-Change = 0.0360, Max-Change = 0.0239, Max-Change = 0.0197, Max-Change = 0.0104, Max-Change = 0.0318, Max-Change = 0.0146, Max-Change = 0.0212, Max-Change = 0.0155, Max-Change = 0.0236, Max-Change = 0.0220, Max-Change = 0.0236, Max-Change = 0.0348, Max-Change = 0.0215, Max-Change = 0.0211, Max-Change = 0.0137, Max-Change = 0.0191, Max-Change = 0.0173, Max-Change = 0.0278, Max-Change = 0.0195, Max-Change = 0.0296, Max-Change = 0.0235, Max-Change = 0.0242, Max-Change = 0.0243, Max-Change = 0.0204, Max-Change = 0.0289, Max-Change = 0.0258, Max-Change = 0.0236, Max-Change = 0.0155, Max-Change = 0.0178, Max-Change = 0.0196, Max-Change = 0.0361, Max-Change = 0.0260, Max-Change = 0.0187, Max-Change = 0.0257, Max-Change = 0.0156, Max-Change = 0.0224, Max-Change = 0.0232, Max-Change = 0.0190, Max-Change = 0.0199, Max-Change = 0.0265, Max-Change = 0.0220, Max-Change = 0.0149, Max-Change = 0.0185, Max-Change = 0.0219, Max-Change = 0.0183, Max-Change = 0.0118, Max-Change = 0.0267, Max-Change = 0.0155, Max-Change = 0.0256, Max-Change = 0.0168, Max-Change = 0.0207, Max-Change = 0.0146, Max-Change = 0.0292, Max-Change = 0.0255, Max-Change = 0.0188, Max-Change = 0.0227, Max-Change = 0.0214, Max-Change = 0.0237, Max-Change = 0.0221, Max-Change = 0.0202, Max-Change = 0.0217, Max-Change = 0.0157, Max-Change = 0.0199, Max-Change = 0.0221, Max-Change = 0.0198, Max-Change = 0.0221, Max-Change = 0.0226, Max-Change = 0.0144, Max-Change = 0.0213, Max-Change = 0.0244, Max-Change = 0.0204, Max-Change = 0.0209, Max-Change = 0.0223, Max-Change = 0.0211, Max-Change = 0.0243, Max-Change = 0.0182, Max-Change = 0.0212, Max-Change = 0.0169, Max-Change = 0.0222, Max-Change = 0.0175, Max-Change = 0.0117, Max-Change = 0.0244, Max-Change = 0.0132, Max-Change = 0.0295, Max-Change = 0.0264, Max-Change = 0.0170, Max-Change = 0.0299, Max-Change = 0.0272, Max-Change = 0.0218, Max-Change = 0.0182, Max-Change = 0.0183, Max-Change = 0.0232, Max-Change = 0.0264, Max-Change = 0.0202, Max-Change = 0.0174, Max-Change = 0.0290, Max-Change = 0.0104, Max-Change = 0.0218, Max-Change = 0.0276, Max-Change = 0.0135, Max-Change = 0.0214, Max-Change = 0.0140, Max-Change = 0.0195, Max-Change = 0.0220, Max-Change = 0.0296, Max-Change = 0.0229, Max-Change = 0.0161, Max-Change = 0.0216, Max-Change = 0.0149, Max-Change = 0.0214, Max-Change = 0.0296, Max-Change = 0.0155, Max-Change = 0.0166, Max-Change = 0.0368, Max-Change = 0.0242, Max-Change = 0.0273, Max-Change = 0.0292, Max-Change = 0.0323, Max-Change = 0.0143, Max-Change = 0.0187, Max-Change = 0.0243, Max-Change = 0.0199, Max-Change = 0.0243, Max-Change = 0.0252, Max-Change = 0.0202, Max-Change = 0.0118, Max-Change = 0.0160, Max-Change = 0.0221, Max-Change = 0.0160, Max-Change = 0.0171, Max-Change = 0.0196, Max-Change = 0.0193, Max-Change = 0.0238, Max-Change = 0.0498, Max-Change = 0.0380, Max-Change = 0.0254, Max-Change = 0.0113, Max-Change = 0.0181, Max-Change = 0.0214, Max-Change = 0.0208, Max-Change = 0.0169, Max-Change = 0.0105, Max-Change = 0.0187, Max-Change = 0.0166, Max-Change = 0.0153, Max-Change = 0.0185, Max-Change = 0.0314, Max-Change = 0.0178, Max-Change = 0.0231, Max-Change = 0.0235, Max-Change = 0.0242, Max-Change = 0.0181, Max-Change = 0.0204, Max-Change = 0.0214, Max-Change = 0.0164, Max-Change = 0.0184, Max-Change = 0.0259, Max-Change = 0.0249, Max-Change = 0.0174, Max-Change = 0.0201, Max-Change = 0.0339, Max-Change = 0.0264, Max-Change = 0.0203, Max-Change = 0.0191, Max-Change = 0.0231, Max-Change = 0.0241, Max-Change = 0.0169, Max-Change = 0.0333, Max-Change = 0.0246, Max-Change = 0.0137, Max-Change = 0.0204, Max-Change = 0.0226, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0188, gam = 0.1057, Max-Change = 0.0174, gam = 0.0780, Max-Change = 0.0073, gam = 0.0629, Max-Change = 0.0064, gam = 0.0532, Max-Change = 0.0125, gam = 0.0464, Max-Change = 0.0108, gam = 0.0413, Max-Change = 0.0032, gam = 0.0374, Max-Change = 0.0022, gam = 0.0342, Max-Change = 0.0045, gam = 0.0316, Max-Change = 0.0034, gam = 0.0294, Max-Change = 0.0026, gam = 0.0276, Max-Change = 0.0029, gam = 0.0260, Max-Change = 0.0037, gam = 0.0246, Max-Change = 0.0041, gam = 0.0233, Max-Change = 0.0022, gam = 0.0222, Max-Change = 0.0022, gam = 0.0212, Max-Change = 0.0033, gam = 0.0203, Max-Change = 0.0025, gam = 0.0195, Max-Change = 0.0019, gam = 0.0188, Max-Change = 0.0019, gam = 0.0181, Max-Change = 0.0018, gam = 0.0175, Max-Change = 0.0018, gam = 0.0169, Max-Change = 0.0018, gam = 0.0164, Max-Change = 0.0015, gam = 0.0159, Max-Change = 0.0017, gam = 0.0154, Max-Change = 0.0014, gam = 0.0150, Max-Change = 0.0018, gam = 0.0146, Max-Change = 0.0022, gam = 0.0142, Max-Change = 0.0014, gam = 0.0139, Max-Change = 0.0019, gam = 0.0135, Max-Change = 0.0012, gam = 0.0132, Max-Change = 0.0011, gam = 0.0129, Max-Change = 0.0013, gam = 0.0126, Max-Change = 0.0012, gam = 0.0124, Max-Change = 0.0014, gam = 0.0121, Max-Change = 0.0011, gam = 0.0119, Max-Change = 0.0017, gam = 0.0116, Max-Change = 0.0015, gam = 0.0114, Max-Change = 0.0020, gam = 0.0112, Max-Change = 0.0012, gam = 0.0110, Max-Change = 0.0010, gam = 0.0108, Max-Change = 0.0011, gam = 0.0106, Max-Change = 0.0011, gam = 0.0104, Max-Change = 0.0016, gam = 0.0102, Max-Change = 0.0010, gam = 0.0101, Max-Change = 0.0010, gam = 0.0099, Max-Change = 0.0012, gam = 0.0098, Max-Change = 0.0008, gam = 0.0096, Max-Change = 0.0011, gam = 0.0095, Max-Change = 0.0010, gam = 0.0093, Max-Change = 0.0010, gam = 0.0092, Max-Change = 0.0011, gam = 0.0091, Max-Change = 0.0006, gam = 0.0089, Max-Change = 0.0013, gam = 0.0088, Max-Change = 0.0010, gam = 0.0087, Max-Change = 0.0008, gam = 0.0086, Max-Change = 0.0007, gam = 0.0085, Max-Change = 0.0009 #>  #> Calculating log-likelihood...  anova(mod_metric, mod_configural) #>                     AIC    SABIC       HQ      BIC    logLik     X2 df p #> mod_metric     36927.79 37036.86 37020.33 37179.83 -18418.89             #> mod_configural 36918.04 37063.47 37041.43 37254.10 -18399.02 39.745 15 0 anova(mod_fullconstrain, mod_metric) #>                        AIC    SABIC       HQ      BIC    logLik     X2 df p #> mod_fullconstrain 37023.82 37096.54 37085.52 37191.85 -18481.91             #> mod_metric        36927.79 37036.86 37020.33 37179.83 -18418.89 126.04 15 0  ############ # polytomous item example set.seed(12345) a <- matrix(abs(rnorm(15,1,.3)), ncol=1) d <- matrix(rnorm(15,0,.7),ncol=1) d <- cbind(d, d-1, d-2) itemtype <- rep('graded', nrow(a)) N <- 1000 dataset1 <- simdata(a, d, N, itemtype) dataset2 <- simdata(a, d, N, itemtype, mu = .1, sigma = matrix(1.5)) dat <- rbind(dataset1, dataset2) group <- c(rep('D1', N), rep('D2', N)) model <- 'F1 = 1-15'  mod_configural <- multipleGroup(dat, model, group = group) #>  plot(mod_configural)  plot(mod_configural, type = 'SE')  itemplot(mod_configural, 1)  itemplot(mod_configural, 1, type = 'info')  plot(mod_configural, type = 'trace') # messy, score function typically better  plot(mod_configural, type = 'itemscore')   fs <- fscores(mod_configural, full.scores = FALSE) #>  #> Method:  EAP #>  #> Empirical Reliability: #>  #>     F1  #> 0.7942  #>  #> Method:  EAP #>  #> Empirical Reliability: #>  #>     F1  #> 0.7249  head(fs[[\"D1\"]]) #>      Item_1 Item_2 Item_3 Item_4 Item_5 Item_6 Item_7 Item_8 Item_9 Item_10 #> [1,]      0      0      0      0      0      0      0      0      0       0 #> [2,]      0      0      0      0      0      0      0      0      0       0 #> [3,]      0      0      0      0      0      0      0      0      0       0 #> [4,]      0      0      0      0      0      0      0      0      0       0 #> [5,]      0      0      0      0      0      0      0      0      0       0 #> [6,]      0      0      0      0      0      0      0      0      0       0 #>      Item_11 Item_12 Item_13 Item_14 Item_15        F1     SE_F1 #> [1,]       0       0       0       0       0 -2.137056 0.6262714 #> [2,]       0       0       0       1       0 -1.785692 0.5741235 #> [3,]       0       0       0       2       0 -1.726621 0.5800312 #> [4,]       0       0       0       3       0 -1.688716 0.5856268 #> [5,]       0       0       0       3       1 -1.439230 0.5535499 #> [6,]       0       2       0       0       0 -1.582715 0.5660598 fscores(mod_configural, method = 'EAPsum', full.scores = FALSE) #>       df     X2  p.X2 SEM.alpha rxx.alpha rxx_F1 #> stats 39 42.374 0.328     3.869     0.784  0.776 #>  #>       df     X2  p.X2 SEM.alpha rxx.alpha rxx_F1 #> stats 42 29.475 0.928     3.825     0.842  0.832 #>  #> $D1 #>    Sum.Scores           F1     SE_F1 observed    expected    std.res #> 0           0 -2.137056441 0.6262714        6  5.73109332 0.11232666 #> 1           1 -1.842264885 0.5888524        6 10.08249657 1.28570635 #> 2           2 -1.645473280 0.5750881       19 15.02644053 1.02506560 #> 3           3 -1.490721889 0.5681733       22 21.11696057 0.19216062 #> 4           4 -1.322711281 0.5477826       31 26.16731435 0.94473275 #> 5           5 -1.172604830 0.5343878       21 30.81114992 1.76752660 #> 6           6 -1.033369339 0.5229023       30 34.97351880 0.84099633 #> 7           7 -0.898167173 0.5101253       37 38.28642385 0.20790344 #> 8           8 -0.770379457 0.4995061       47 40.92147882 0.95021586 #> 9           9 -0.648276432 0.4899687       40 42.89556180 0.44210625 #> 10         10 -0.530510563 0.4810482       54 44.20825137 1.47268067 #> 11         11 -0.417091373 0.4732401       52 44.94497192 1.05234512 #> 12         12 -0.307324568 0.4662902       50 45.16103718 0.72006273 #> 13         13 -0.200657261 0.4600924       35 44.90907262 1.47865198 #> 14         14 -0.096765731 0.4546839       41 44.25218143 0.48888580 #> 15         15  0.004759979 0.4499792       33 43.24436612 1.55783093 #> 16         16  0.104274150 0.4459305       50 41.93576821 1.24529057 #> 17         17  0.202071875 0.4425175       38 40.37507441 0.37378387 #> 18         18  0.298449688 0.4397012       34 38.60588650 0.74128714 #> 19         19  0.393678038 0.4374552       40 36.66805457 0.55024226 #> 20         20  0.488005095 0.4357619       30 34.59858723 0.78179924 #> 21         21  0.581672874 0.4346027       42 32.43092044 1.68031432 #> 22         22  0.674910103 0.4339646       32 30.19547738 0.32839110 #> 23         23  0.767936430 0.4338392       28 27.92026367 0.01509025 #> 24         24  0.860968350 0.4342199       19 25.63069683 1.30972152 #> 25         25  0.954215436 0.4351028       34 23.34994032 2.20398764 #> 26         26  1.047885949 0.4364871       21 21.09940668 0.02164116 #> 27         27  1.142189172 0.4383746       18 18.89862601 0.20671113 #> 28         28  1.237330487 0.4407665       21 16.76546358 1.03418465 #> 29         29  1.333523036 0.4436684       10 14.71661806 1.22949481 #> 30         30  1.430986181 0.4470894       11 12.76726484 0.49459840 #> 31         31  1.529934577 0.4510309        8 10.93114667 0.88655297 #> 32         32  1.630612066 0.4555070        8  9.22112463 0.40213145 #> 33         33  1.733275013 0.4605369        8  7.64818473 0.12721417 #> 34         34  1.838159660 0.4661076        6  6.22141174 0.08876795 #> 35         35  1.945607770 0.4722588        1  4.94877914 1.77506315 #> 36         36  2.055967060 0.4790331        4  3.83475999 0.08438128 #> 37         37  2.169474066 0.4863361        6  2.88068295 1.83785730 #> 38         38  2.286835090 0.4943335        3  2.08640055 0.63249484 #> 39         39  2.408610539 0.5031395        3  1.44515936 1.29338558 #> 40         40  2.534716475 0.5122126        1  0.94647470 0.05501798 #> 41         41  2.667837385 0.5224881        0  0.57961995 0.76132775 #> 42         42  2.809124175 0.5344045        0  0.32363182 0.56888648 #> 43         43  2.954701793 0.5443149        0  0.15780842 0.39725108 #> 44         44  3.126041758 0.5588274        0  0.06566835 0.25625837 #> 45         45  3.344792190 0.5841085        0  0.01877911 0.13703691 #>  #> $D2 #>    Sum.Scores          F1     SE_F1 observed   expected    std.res #> 0           0 -2.05130147 0.5912971        9 11.0355976 0.61276507 #> 1           1 -1.75022208 0.5476302       23 16.1395895 1.70766964 #> 2           2 -1.55419674 0.5300849       22 20.9952745 0.21927375 #> 3           3 -1.41173370 0.5243664       31 27.0499126 0.75949299 #> 4           4 -1.24022266 0.4925574       35 30.4339816 0.82767202 #> 5           5 -1.09460723 0.4745106       33 33.1973941 0.03425959 #> 6           6 -0.96352775 0.4602807       34 35.4757938 0.24777621 #> 7           7 -0.83622876 0.4435206       32 36.8803015 0.80361756 #> 8           8 -0.71831303 0.4305401       32 37.8120865 0.94518484 #> 9           9 -0.60733281 0.4193943       31 38.3526137 1.18725571 #> 10         10 -0.50128231 0.4091029       28 38.5164822 1.69452188 #> 11         11 -0.40019407 0.4004018       46 38.4037717 1.22577588 #> 12         12 -0.30319834 0.3928821       41 38.0627585 0.47609052 #> 13         13 -0.20956698 0.3863159       36 37.5255576 0.24903767 #> 14         14 -0.11890072 0.3807251       33 36.8301475 0.63112266 #> 15         15 -0.03072312 0.3759795       37 36.0028603 0.16618336 #> 16         16  0.05538372 0.3719906       33 35.0638735 0.34854040 #> 17         17  0.13975529 0.3687182       33 34.0317999 0.17686952 #> 18         18  0.22271790 0.3661063       42 32.9212969 1.58228730 #> 19         19  0.30456977 0.3641136       28 31.7441592 0.66454193 #> 20         20  0.38557952 0.3627146       29 30.5107753 0.27351003 #> 21         21  0.46600618 0.3618867       30 29.2298023 0.14245880 #> 22         22  0.54609598 0.3616155       24 27.9084016 0.73982959 #> 23         23  0.62608453 0.3618947       28 26.5529477 0.28081988 #> 24         24  0.70620669 0.3627244       29 25.1690033 0.76362260 #> 25         25  0.78669301 0.3641096       27 23.7612468 0.66442083 #> 26         26  0.86777451 0.3660611       29 22.3340727 1.41051144 #> 27         27  0.94969277 0.3686001       19 20.8916388 0.41385858 #> 28         28  1.03268637 0.3717461       17 19.4374534 0.55286188 #> 29         29  1.11700520 0.3755241       13 17.9753823 1.17351161 #> 30         30  1.20293125 0.3799843       19 16.5097589 0.61287376 #> 31         31  1.29071727 0.3851447       17 15.0440068 0.50429607 #> 32         32  1.38065471 0.3910380       17 13.5834528 0.92700555 #> 33         33  1.47313321 0.3977848       16 12.1351562 1.10945390 #> 34         34  1.56833794 0.4053106       11 10.7031592 0.09073350 #> 35         35  1.66666006 0.4136580        8  9.2985852 0.42585525 #> 36         36  1.76883244 0.4232093       11  7.9356798 1.08778253 #> 37         37  1.87438760 0.4333202        3  6.6167296 1.40602924 #> 38         38  1.98429588 0.4442628        6  5.3697725 0.27196902 #> 39         39  2.10060111 0.4574333        4  4.2190260 0.10663252 #> 40         40  2.21882242 0.4694234        2  3.1515306 0.64865644 #> 41         41  2.34438672 0.4824723        2  2.2364769 0.15812718 #> 42         42  2.48431289 0.5010802        0  1.4847938 1.21852115 #> 43         43  2.61160839 0.5110564        0  0.8421851 0.91770643 #> 44         44  2.76572645 0.5249224        0  0.4383660 0.66209216 #> 45         45  2.98799042 0.5545567        0  0.1853438 0.43051577 #>   # constrain slopes within each group to be equal (but not across groups) model2 <- 'F1 = 1-15            CONSTRAIN = (1-15, a1)' mod_configural2 <- multipleGroup(dat, model2, group = group) #>  plot(mod_configural2, type = 'SE')  plot(mod_configural2, type = 'RE')  itemplot(mod_configural2, 10)   ############ ## empirical histogram example (normal and bimodal groups) set.seed(1234) a <- matrix(rlnorm(50, .2, .2)) d <- matrix(rnorm(50)) ThetaNormal <- matrix(rnorm(2000)) ThetaBimodal <- scale(matrix(c(rnorm(1000, -2), rnorm(1000,2)))) #bimodal Theta <- rbind(ThetaNormal, ThetaBimodal) dat <- simdata(a, d, 4000, itemtype = '2PL', Theta=Theta) group <- rep(c('G1', 'G2'), each=2000)  EH <- multipleGroup(dat, 1, group=group, dentype=\"empiricalhist\", invariance = colnames(dat)) #>  coef(EH, simplify=TRUE) #> $G1 #> $items #>            a1      d g u #> Item_1  0.759 -1.830 0 1 #> Item_2  1.062 -0.555 0 1 #> Item_3  1.235 -1.117 0 1 #> Item_4  0.611 -0.953 0 1 #> Item_5  1.088 -0.132 0 1 #> Item_6  1.054  0.502 0 1 #> Item_7  0.849  1.581 0 1 #> Item_8  0.870 -0.779 0 1 #> Item_9  0.902  1.658 0 1 #> Item_10 0.812 -1.188 0 1 #> Item_11 0.903  0.661 0 1 #> Item_12 0.841  2.646 0 1 #> Item_13 0.843 -0.064 0 1 #> Item_14 1.009 -0.600 0 1 #> Item_15 1.167  0.013 0 1 #> Item_16 1.008  1.886 0 1 #> Item_17 0.885 -1.124 0 1 #> Item_18 0.790  1.420 0 1 #> Item_19 0.799  1.316 0 1 #> Item_20 1.565  0.294 0 1 #> Item_21 1.002  0.001 0 1 #> Item_22 0.929 -0.497 0 1 #> Item_23 0.903 -0.383 0 1 #> Item_24 1.120  0.702 0 1 #> Item_25 0.850  2.002 0 1 #> Item_26 0.706 -0.208 0 1 #> Item_27 1.048 -1.279 0 1 #> Item_28 0.826 -0.770 0 1 #> Item_29 1.062  0.221 0 1 #> Item_30 0.737 -0.333 0 1 #> Item_31 1.208 -0.178 0 1 #> Item_32 0.917 -0.202 0 1 #> Item_33 0.859 -1.360 0 1 #> Item_34 0.913 -0.252 0 1 #> Item_35 0.767  0.886 0 1 #> Item_36 0.783  0.763 0 1 #> Item_37 0.630  0.550 0 1 #> Item_38 0.736 -0.405 0 1 #> Item_39 0.917 -0.166 0 1 #> Item_40 0.895 -1.251 0 1 #> Item_41 1.251 -0.040 0 1 #> Item_42 0.882  0.202 0 1 #> Item_43 0.796  1.639 0 1 #> Item_44 1.022  1.038 0 1 #> Item_45 0.812 -0.470 0 1 #> Item_46 0.807  0.336 0 1 #> Item_47 0.815 -1.121 0 1 #> Item_48 0.739  0.892 0 1 #> Item_49 0.904  1.036 0 1 #> Item_50 0.895  2.124 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  #>  #> $G2 #> $items #>            a1      d g u #> Item_1  0.759 -1.830 0 1 #> Item_2  1.062 -0.555 0 1 #> Item_3  1.235 -1.117 0 1 #> Item_4  0.611 -0.953 0 1 #> Item_5  1.088 -0.132 0 1 #> Item_6  1.054  0.502 0 1 #> Item_7  0.849  1.581 0 1 #> Item_8  0.870 -0.779 0 1 #> Item_9  0.902  1.658 0 1 #> Item_10 0.812 -1.188 0 1 #> Item_11 0.903  0.661 0 1 #> Item_12 0.841  2.646 0 1 #> Item_13 0.843 -0.064 0 1 #> Item_14 1.009 -0.600 0 1 #> Item_15 1.167  0.013 0 1 #> Item_16 1.008  1.886 0 1 #> Item_17 0.885 -1.124 0 1 #> Item_18 0.790  1.420 0 1 #> Item_19 0.799  1.316 0 1 #> Item_20 1.565  0.294 0 1 #> Item_21 1.002  0.001 0 1 #> Item_22 0.929 -0.497 0 1 #> Item_23 0.903 -0.383 0 1 #> Item_24 1.120  0.702 0 1 #> Item_25 0.850  2.002 0 1 #> Item_26 0.706 -0.208 0 1 #> Item_27 1.048 -1.279 0 1 #> Item_28 0.826 -0.770 0 1 #> Item_29 1.062  0.221 0 1 #> Item_30 0.737 -0.333 0 1 #> Item_31 1.208 -0.178 0 1 #> Item_32 0.917 -0.202 0 1 #> Item_33 0.859 -1.360 0 1 #> Item_34 0.913 -0.252 0 1 #> Item_35 0.767  0.886 0 1 #> Item_36 0.783  0.763 0 1 #> Item_37 0.630  0.550 0 1 #> Item_38 0.736 -0.405 0 1 #> Item_39 0.917 -0.166 0 1 #> Item_40 0.895 -1.251 0 1 #> Item_41 1.251 -0.040 0 1 #> Item_42 0.882  0.202 0 1 #> Item_43 0.796  1.639 0 1 #> Item_44 1.022  1.038 0 1 #> Item_45 0.812 -0.470 0 1 #> Item_46 0.807  0.336 0 1 #> Item_47 0.815 -1.121 0 1 #> Item_48 0.739  0.892 0 1 #> Item_49 0.904  1.036 0 1 #> Item_50 0.895  2.124 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  #>  plot(EH, type = 'empiricalhist', npts = 60)   # DIF test for item 1 EH1 <- multipleGroup(dat, 1, group=group, dentype=\"empiricalhist\", invariance = colnames(dat)[-1]) #>  anova(EH, EH1) #>          AIC    SABIC       HQ      BIC    logLik    X2 df     p #> EH  216599.8 217659.4 217358.4 218739.8 -107959.9                #> EH1 216602.9 217668.7 217365.9 218755.4 -107959.4 0.916  2 0.632  #-------------------------------- # Mixture model (no prior group variable specified)  set.seed(12345) nitems <- 20 a1 <- matrix(.75, ncol=1, nrow=nitems) a2 <- matrix(1.25, ncol=1, nrow=nitems) d1 <- matrix(rnorm(nitems,0,1),ncol=1) d2 <- matrix(rnorm(nitems,0,1),ncol=1) itemtype <- rep('2PL', nrow(a1)) N1 <- 500 N2 <- N1*2 # second class twice as large  dataset1 <- simdata(a1, d1, N1, itemtype) dataset2 <- simdata(a2, d2, N2, itemtype) dat <- rbind(dataset1, dataset2) # group <- c(rep('D1', N1), rep('D2', N2))  # Mixture Rasch model (Rost, 1990) models <- 'F1 = 1-20            CONSTRAIN = (1-20, a1)' mod_mix <- multipleGroup(dat, models, dentype = 'mixture-2', GenRandomPars = TRUE) #>  coef(mod_mix, simplify=TRUE) #> $MIXTURE_1 #> $items #>            a1      d g u #> Item_1  1.302  0.772 0 1 #> Item_2  1.302  1.476 0 1 #> Item_3  1.302 -0.553 0 1 #> Item_4  1.302 -1.588 0 1 #> Item_5  1.302 -1.545 0 1 #> Item_6  1.302  2.084 0 1 #> Item_7  1.302 -0.510 0 1 #> Item_8  1.302  0.606 0 1 #> Item_9  1.302  0.550 0 1 #> Item_10 1.302 -0.167 0 1 #> Item_11 1.302  0.961 0 1 #> Item_12 1.302  2.156 0 1 #> Item_13 1.302  2.082 0 1 #> Item_14 1.302  1.733 0 1 #> Item_15 1.302  0.138 0 1 #> Item_16 1.302  0.434 0 1 #> Item_17 1.302 -0.368 0 1 #> Item_18 1.302 -1.633 0 1 #> Item_19 1.302  1.799 0 1 #> Item_20 1.302 -0.024 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  #> $class_proportion #>     pi #>  0.655 #>  #>  #> $MIXTURE_2 #> $items #>            a1      d g u #> Item_1  0.681  0.664 0 1 #> Item_2  0.681  0.805 0 1 #> Item_3  0.681 -0.039 0 1 #> Item_4  0.681 -0.416 0 1 #> Item_5  0.681  0.530 0 1 #> Item_6  0.681 -2.045 0 1 #> Item_7  0.681  0.770 0 1 #> Item_8  0.681 -0.314 0 1 #> Item_9  0.681 -0.030 0 1 #> Item_10 0.681 -0.820 0 1 #> Item_11 0.681 -0.252 0 1 #> Item_12 0.681  1.939 0 1 #> Item_13 0.681  0.642 0 1 #> Item_14 0.681  0.593 0 1 #> Item_15 0.681 -0.749 0 1 #> Item_16 0.681  0.852 0 1 #> Item_17 0.681 -0.950 0 1 #> Item_18 0.681 -0.345 0 1 #> Item_19 0.681  1.230 0 1 #> Item_20 0.681  0.271 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  #> $class_proportion #>     pi #>  0.345 #>  #>  summary(mod_mix) #>  #> ---------- #> GROUP: MIXTURE_1  #>          F1    h2 #>  [1,] 0.608 0.369 #>  [2,] 0.608 0.369 #>  [3,] 0.608 0.369 #>  [4,] 0.608 0.369 #>  [5,] 0.608 0.369 #>  [6,] 0.608 0.369 #>  [7,] 0.608 0.369 #>  [8,] 0.608 0.369 #>  [9,] 0.608 0.369 #> [10,] 0.608 0.369 #> [11,] 0.608 0.369 #> [12,] 0.608 0.369 #> [13,] 0.608 0.369 #> [14,] 0.608 0.369 #> [15,] 0.608 0.369 #> [16,] 0.608 0.369 #> [17,] 0.608 0.369 #> [18,] 0.608 0.369 #> [19,] 0.608 0.369 #> [20,] 0.608 0.369 #>  #> SS loadings:  7.386  #> Proportion Var:  0.369  #>  #> Factor correlations:  #>  #>    F1 #> F1  1 #>  #> Class proportion:  0.655  #>  #> ---------- #> GROUP: MIXTURE_2  #>          F1    h2 #>  [1,] 0.371 0.138 #>  [2,] 0.371 0.138 #>  [3,] 0.371 0.138 #>  [4,] 0.371 0.138 #>  [5,] 0.371 0.138 #>  [6,] 0.371 0.138 #>  [7,] 0.371 0.138 #>  [8,] 0.371 0.138 #>  [9,] 0.371 0.138 #> [10,] 0.371 0.138 #> [11,] 0.371 0.138 #> [12,] 0.371 0.138 #> [13,] 0.371 0.138 #> [14,] 0.371 0.138 #> [15,] 0.371 0.138 #> [16,] 0.371 0.138 #> [17,] 0.371 0.138 #> [18,] 0.371 0.138 #> [19,] 0.371 0.138 #> [20,] 0.371 0.138 #>  #> SS loadings:  2.758  #> Proportion Var:  0.138  #>  #> Factor correlations:  #>  #>    F1 #> F1  1 #>  #> Class proportion:  0.345  plot(mod_mix)  plot(mod_mix, type = 'trace')  itemplot(mod_mix, 1, type = 'info')   head(fscores(mod_mix)) # theta estimates #>         Class_1 #> [1,] -0.3609178 #> [2,] -1.6950807 #> [3,] -0.8217168 #> [4,]  0.8090483 #> [5,]  0.7936363 #> [6,]  0.2286020 head(fscores(mod_mix, method = 'classify')) # classification probability #>         CLASS_1   CLASS_2 #> [1,] 0.04826707 0.9517329 #> [2,] 0.74223456 0.2577654 #> [3,] 0.02496631 0.9750337 #> [4,] 0.02929597 0.9707040 #> [5,] 0.07220958 0.9277904 #> [6,] 0.42428417 0.5757158 itemfit(mod_mix) #>       item   S_X2 df.S_X2 RMSEA.S_X2 p.S_X2 #> 1   Item_1 30.498      12      0.032  0.002 #> 2   Item_2 36.271      12      0.037  0.000 #> 3   Item_3 15.756      12      0.014  0.203 #> 4   Item_4  9.334      11      0.000  0.591 #> 5   Item_5 21.638      12      0.023  0.042 #> 6   Item_6 26.071      13      0.026  0.017 #> 7   Item_7  8.624      12      0.000  0.735 #> 8   Item_8 16.652      12      0.016  0.163 #> 9   Item_9 22.772      12      0.024  0.030 #> 10 Item_10 14.622      12      0.012  0.263 #> 11 Item_11  7.357      12      0.000  0.833 #> 12 Item_12 14.964      12      0.013  0.243 #> 13 Item_13 10.222      12      0.000  0.597 #> 14 Item_14 17.414      13      0.015  0.181 #> 15 Item_15  9.436      12      0.000  0.665 #> 16 Item_16 11.408      12      0.000  0.494 #> 17 Item_17 16.483      12      0.016  0.170 #> 18 Item_18 11.717      11      0.007  0.385 #> 19 Item_19 11.425      12      0.000  0.493 #> 20 Item_20 15.291      12      0.014  0.226  # For obtaining isolated estimates within each mixture, use extract.group() #   to construct single-group extractions of the mixtures mix1 <- extract.group(mod_mix, group = \"MIXTURE_1\") mix2 <- extract.group(mod_mix, group = \"MIXTURE_2\")  # EAP estimates per mixture group, ignoring the original mixture structure. #   Used to demonstrate the behaviour of how the individuals would have #   been scored if they (deterministically) belonged to one class data.frame(EAP_mix1=unname(fscores(mix1)),            EAP_mix2=unname(fscores(mix2))) |> head() #>      EAP_mix1   EAP_mix2 #> 1 -0.46829891 -0.3554720 #> 2 -1.65671411 -1.8055570 #> 3 -0.83309483 -0.8214255 #> 4  0.46043047  0.8195696 #> 5  0.46043047  0.8195696 #> 6  0.07558437  0.3413711  ############ # Mixture 2PL model mod_mix2 <- multipleGroup(dat, 1, dentype = 'mixture-2', GenRandomPars = TRUE) #>  anova(mod_mix, mod_mix2) #>               AIC    SABIC       HQ      BIC    logLik     X2 df    p #> mod_mix  34628.19 34720.06 34713.30 34856.65 -17271.09                #> mod_mix2 34655.23 34828.29 34815.56 35085.60 -17246.62 48.957 38 0.11 coef(mod_mix2, simplify=TRUE) #> $MIXTURE_1 #> $items #>            a1      d g u #> Item_1  0.517  0.672 0 1 #> Item_2  0.516  0.826 0 1 #> Item_3  0.533 -0.012 0 1 #> Item_4  0.387 -0.363 0 1 #> Item_5  0.452  0.551 0 1 #> Item_6  0.727 -1.905 0 1 #> Item_7  1.032  0.879 0 1 #> Item_8  0.744 -0.275 0 1 #> Item_9  0.900  0.037 0 1 #> Item_10 0.709 -0.777 0 1 #> Item_11 0.538 -0.190 0 1 #> Item_12 0.915  2.079 0 1 #> Item_13 0.729  0.690 0 1 #> Item_14 1.183  0.722 0 1 #> Item_15 0.812 -0.717 0 1 #> Item_16 0.582  0.843 0 1 #> Item_17 0.791 -0.953 0 1 #> Item_18 0.657 -0.290 0 1 #> Item_19 0.498  1.222 0 1 #> Item_20 0.468  0.304 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  #> $class_proportion #>     pi #>  0.349 #>  #>  #> $MIXTURE_2 #> $items #>            a1      d g u #> Item_1  1.118  0.710 0 1 #> Item_2  1.216  1.405 0 1 #> Item_3  1.244 -0.565 0 1 #> Item_4  1.684 -1.826 0 1 #> Item_5  1.669 -1.800 0 1 #> Item_6  1.473  2.151 0 1 #> Item_7  1.143 -0.510 0 1 #> Item_8  1.244  0.574 0 1 #> Item_9  1.272  0.507 0 1 #> Item_10 1.188 -0.183 0 1 #> Item_11 1.465  0.980 0 1 #> Item_12 1.403  2.208 0 1 #> Item_13 1.388  2.110 0 1 #> Item_14 1.062  1.599 0 1 #> Item_15 1.311  0.112 0 1 #> Item_16 1.191  0.410 0 1 #> Item_17 1.381 -0.387 0 1 #> Item_18 1.500 -1.798 0 1 #> Item_19 1.624  1.955 0 1 #> Item_20 1.353 -0.060 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>  #> $class_proportion #>     pi #>  0.651 #>  #>  itemfit(mod_mix2) #>       item   S_X2 df.S_X2 RMSEA.S_X2 p.S_X2 #> 1   Item_1 21.271      12      0.023  0.047 #> 2   Item_2 44.619      13      0.040  0.000 #> 3   Item_3 14.259      12      0.011  0.284 #> 4   Item_4  6.550      11      0.000  0.834 #> 5   Item_5 20.639      12      0.022  0.056 #> 6   Item_6 27.956      13      0.028  0.009 #> 7   Item_7  8.628      12      0.000  0.734 #> 8   Item_8 16.261      12      0.015  0.180 #> 9   Item_9 21.304      12      0.023  0.046 #> 10 Item_10 11.460      12      0.000  0.490 #> 11 Item_11  7.091      12      0.000  0.852 #> 12 Item_12 13.838      12      0.010  0.311 #> 13 Item_13 10.444      12      0.000  0.577 #> 14 Item_14 15.704      13      0.012  0.265 #> 15 Item_15  9.439      12      0.000  0.665 #> 16 Item_16 10.128      12      0.000  0.605 #> 17 Item_17 17.474      12      0.017  0.133 #> 18 Item_18 11.833      11      0.007  0.376 #> 19 Item_19  8.071      11      0.000  0.707 #> 20 Item_20 14.542      12      0.012  0.267  # Compare to single group mod <- mirt(dat) #>  anova(mod, mod_mix2) #>               AIC    SABIC       HQ      BIC    logLik      X2 df p #> mod      35276.70 35362.16 35355.88 35489.23 -17598.35              #> mod_mix2 34655.23 34828.29 34815.56 35085.60 -17246.62 703.474 41 0  ######################################## # Zero-inflated 2PL IRT model (Wall, Park, and Moustaki, 2015)  n <- 1000 nitems <- 20  a <- rep(2, nitems) d <- rep(c(-2,-1,0,1,2), each=nitems/5) zi_p <- 0.2 # Proportion of people in zero class  theta <- rnorm(n, 0, 1) zeros <- matrix(0, n*zi_p, nitems) nonzeros <- simdata(a, d, n*(1-zi_p), itemtype = '2PL',                    Theta = as.matrix(theta[1:(n*(1-zi_p))])) data <- rbind(nonzeros, zeros)  # define class with extreme theta but fixed item parameters zi2PL <- \"F = 1-20           START [MIXTURE_1] = (GROUP, MEAN_1, -100), (GROUP, COV_11, .00001),                               (1-20, a1, 1.0), (1-20, d, 0)           FIXED [MIXTURE_1] = (GROUP, MEAN_1), (GROUP, COV_11),                               (1-20, a1), (1-20, d)\"  # define custom Theta integration grid that contains extreme theta + normal grid technical <- list(customTheta = matrix(c(-100, seq(-6,6,length.out=61))))  # fit ZIM-IRT zi2PL.fit <- multipleGroup(data, zi2PL, dentype = 'mixture-2', technical=technical) #>  coef(zi2PL.fit, simplify=TRUE) #> $MIXTURE_1 #> $items #>         a1 d g u #> Item_1   1 0 0 1 #> Item_2   1 0 0 1 #> Item_3   1 0 0 1 #> Item_4   1 0 0 1 #> Item_5   1 0 0 1 #> Item_6   1 0 0 1 #> Item_7   1 0 0 1 #> Item_8   1 0 0 1 #> Item_9   1 0 0 1 #> Item_10  1 0 0 1 #> Item_11  1 0 0 1 #> Item_12  1 0 0 1 #> Item_13  1 0 0 1 #> Item_14  1 0 0 1 #> Item_15  1 0 0 1 #> Item_16  1 0 0 1 #> Item_17  1 0 0 1 #> Item_18  1 0 0 1 #> Item_19  1 0 0 1 #> Item_20  1 0 0 1 #>  #> $means #>    F  #> -100  #>  #> $cov #>   F #> F 0 #>  #> $class_proportion #>     pi #>  0.209 #>  #>  #> $MIXTURE_2 #> $items #>            a1      d g u #> Item_1  1.867 -2.089 0 1 #> Item_2  1.998 -1.979 0 1 #> Item_3  1.954 -1.932 0 1 #> Item_4  1.595 -1.841 0 1 #> Item_5  1.922 -0.986 0 1 #> Item_6  1.924 -0.926 0 1 #> Item_7  2.045 -1.209 0 1 #> Item_8  2.069 -1.005 0 1 #> Item_9  1.782  0.101 0 1 #> Item_10 1.942  0.195 0 1 #> Item_11 2.080  0.039 0 1 #> Item_12 1.956  0.039 0 1 #> Item_13 1.540  0.835 0 1 #> Item_14 2.047  1.092 0 1 #> Item_15 1.956  0.973 0 1 #> Item_16 1.807  1.026 0 1 #> Item_17 2.084  2.069 0 1 #> Item_18 1.917  2.153 0 1 #> Item_19 1.464  1.735 0 1 #> Item_20 1.739  1.920 0 1 #>  #> $means #> F  #> 0  #>  #> $cov #>   F #> F 1 #>  #> $class_proportion #>     pi #>  0.791 #>  #>   # classification estimates pi_hat <- fscores(zi2PL.fit, method = 'classify') head(pi_hat) #>            CLASS_1 CLASS_2 #> [1,] 8.544142e-180       1 #> [2,]  2.267724e-14       1 #> [3,] 2.122840e-178       1 #> [4,] 4.509158e-210       1 #> [5,]  1.130538e-13       1 #> [6,] 9.974115e-149       1 tail(pi_hat) #>           CLASS_1    CLASS_2 #>  [995,] 0.9243758 0.07562418 #>  [996,] 0.9243758 0.07562418 #>  [997,] 0.9243758 0.07562418 #>  [998,] 0.9243758 0.07562418 #>  [999,] 0.9243758 0.07562418 #> [1000,] 0.9243758 0.07562418  # EAP estimates (not useful for zip class) fs <- fscores(zi2PL.fit) head(fs) #>           Class_1 #> [1,]  0.262140462 #> [2,] -1.762463343 #> [3,]  0.285984614 #> [4,]  0.562650718 #> [5,] -1.669323391 #> [6,]  0.005541674 tail(fs) #>           Class_1 #>  [995,] -92.59647 #>  [996,] -92.59647 #>  [997,] -92.59647 #>  [998,] -92.59647 #>  [999,] -92.59647 #> [1000,] -92.59647  ######################################## # Zero-inflated graded response model (Magnus and Garnier-Villarreal, 2022)  n <- 1000 nitems <- 20  a <- matrix(rlnorm(20,.2,.3))  # for the graded model, ensure that there is enough space between the intercepts, # otherwise closer categories will not be selected often (minimum distance of 0.3 here) diffs <- t(apply(matrix(runif(20*4, .3, 1), 20), 1, cumsum)) diffs <- -(diffs - rowMeans(diffs)) d <- diffs + rnorm(20)  zi_p <- 0.2 # Proportion of people in zero/lowest category class  theta <- rnorm(n, 0, 1) zeros <- matrix(0, n*zi_p, nitems) nonzeros <- simdata(a, d, n*(1-zi_p), itemtype = 'graded',                     Theta = as.matrix(theta[1:(n*(1-zi_p))])) data <- rbind(nonzeros, zeros)  # intercepts will be labelled as d1 through d4 apply(data, 2, table) #>   Item_1 Item_2 Item_3 Item_4 Item_5 Item_6 Item_7 Item_8 Item_9 Item_10 #> 0    474    276    431    384    763    354    420    379    342     610 #> 1    128     61    107     26     69     99    140    137    116     114 #> 2     62    105    112     54     45     58    120    136    165      98 #> 3     89    135    159     87     37    135    118     70     68      34 #> 4    247    423    191    449     86    354    202    278    309     144 #>   Item_11 Item_12 Item_13 Item_14 Item_15 Item_16 Item_17 Item_18 Item_19 #> 0     393     756     668     605     463     321     683     664     406 #> 1     115     114      75     104      74      55      65      46      99 #> 2      54      62      55     113     119     123      58      46      66 #> 3     134      33      66      81      89     130      42      57      67 #> 4     304      35     136      97     255     371     152     187     362 #>   Item_20 #> 0     588 #> 1     103 #> 2      85 #> 3      50 #> 4     174  # ignoring zero inflation (bad idea) modGRM <- mirt(data) #>  #> Warning: EM cycles terminated after 500 iterations. coef(modGRM, simplify=TRUE) #> $items #>            a1     d1     d2     d3     d4 #> Item_1  2.540 -0.223 -1.106 -1.527 -2.166 #> Item_2  2.284  1.418  0.791 -0.010 -0.848 #> Item_3  1.771  0.167 -0.479 -1.108 -2.132 #> Item_4  3.367  0.392  0.141 -0.330 -1.021 #> Item_5  3.450 -2.806 -3.524 -4.105 -4.691 #> Item_6  2.003  0.715  0.013 -0.347 -1.145 #> Item_7  2.375  0.182 -0.781 -1.545 -2.405 #> Item_8  2.286  0.515 -0.466 -1.336 -1.795 #> Item_9  2.768  0.837 -0.152 -1.319 -1.801 #> Item_10 2.910 -1.290 -2.154 -3.034 -3.397 #> Item_11 2.681  0.382 -0.484 -0.858 -1.792 #> Item_12 1.734 -1.721 -2.648 -3.462 -4.224 #> Item_13 2.042 -1.307 -1.802 -2.209 -2.804 #> Item_14 1.914 -0.871 -1.516 -2.346 -3.185 #> Item_15 4.247 -0.504 -1.187 -2.250 -3.114 #> Item_16 2.628  1.020  0.501 -0.428 -1.305 #> Item_17 2.522 -1.628 -2.114 -2.605 -3.007 #> Item_18 2.547 -1.508 -1.835 -2.189 -2.675 #> Item_19 1.906  0.340 -0.291 -0.677 -1.065 #> Item_20 2.287 -0.906 -1.572 -2.181 -2.606 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>   # Define class with extreme theta but fixed item parameters #   For GRM in zero-inflated class the intercept values are arbitrary #   as the model forces the responses all into the first category (hence, #   spacing arbitrarily set to 1) ziGRM <- \"F = 1-20           START [MIXTURE_1] = (GROUP, MEAN_1, -100), (GROUP, COV_11, .00001),                               (1-20, a1, 1.0),                               (1-20, d1, 2), (1-20, d2, 1), (1-20, d3, 0), (1-20, d4, -1)           FIXED [MIXTURE_1] = (GROUP, MEAN_1), (GROUP, COV_11),                               (1-20, a1),                               (1-20, d1), (1-20, d2), (1-20, d3), (1-20, d4)\"  # define custom Theta integration grid that contains extreme theta + normal grid technical <- list(customTheta = matrix(c(-100, seq(-6,6,length.out=61))))  # fit zero-inflated GRM ziGRM.fit <- multipleGroup(data, ziGRM, dentype = 'mixture-2', technical=technical) #>  coef(ziGRM.fit, simplify=TRUE) #> $MIXTURE_1 #> $items #>         a1 d1 d2 d3 d4 #> Item_1   1  2  1  0 -1 #> Item_2   1  2  1  0 -1 #> Item_3   1  2  1  0 -1 #> Item_4   1  2  1  0 -1 #> Item_5   1  2  1  0 -1 #> Item_6   1  2  1  0 -1 #> Item_7   1  2  1  0 -1 #> Item_8   1  2  1  0 -1 #> Item_9   1  2  1  0 -1 #> Item_10  1  2  1  0 -1 #> Item_11  1  2  1  0 -1 #> Item_12  1  2  1  0 -1 #> Item_13  1  2  1  0 -1 #> Item_14  1  2  1  0 -1 #> Item_15  1  2  1  0 -1 #> Item_16  1  2  1  0 -1 #> Item_17  1  2  1  0 -1 #> Item_18  1  2  1  0 -1 #> Item_19  1  2  1  0 -1 #> Item_20  1  2  1  0 -1 #>  #> $means #>    F  #> -100  #>  #> $cov #>   F #> F 0 #>  #> $class_proportion #>   pi #>  0.2 #>  #>  #> $MIXTURE_2 #> $items #>            a1     d1     d2     d3     d4 #> Item_1  1.287  0.857 -0.022 -0.438 -1.068 #> Item_2  0.764  2.477  1.751  0.932  0.124 #> Item_3  0.695  0.975  0.325 -0.293 -1.284 #> Item_4  1.711  1.782  1.532  1.064  0.381 #> Item_5  1.928 -1.382 -2.106 -2.689 -3.276 #> Item_6  0.751  1.601  0.875  0.518 -0.255 #> Item_7  1.137  1.198  0.242 -0.506 -1.343 #> Item_8  1.030  1.498  0.515 -0.332 -0.778 #> Item_9  1.307  1.994  0.998 -0.138 -0.604 #> Item_10 1.583 -0.062 -0.930 -1.809 -2.171 #> Item_11 1.308  1.508  0.644  0.276 -0.636 #> Item_12 0.886 -0.954 -1.873 -2.677 -3.431 #> Item_13 1.048 -0.420 -0.912 -1.315 -1.903 #> Item_14 0.946 -0.030 -0.668 -1.485 -2.310 #> Item_15 2.338  1.299  0.604 -0.475 -1.353 #> Item_16 1.154  2.119  1.582  0.664 -0.180 #> Item_17 1.363 -0.559 -1.046 -1.536 -1.937 #> Item_18 1.359 -0.428 -0.755 -1.108 -1.591 #> Item_19 0.725  1.173  0.539  0.161 -0.216 #> Item_20 1.179  0.077 -0.586 -1.190 -1.609 #>  #> $means #> F  #> 0  #>  #> $cov #>   F #> F 1 #>  #> $class_proportion #>   pi #>  0.8 #>  #>   # classification estimates pi_hat <- fscores(ziGRM.fit, method = 'classify') head(pi_hat) #>            CLASS_1 CLASS_2 #> [1,] 7.494632e-176       1 #> [2,] 9.061522e-303       1 #> [3,] 8.797229e-303       1 #> [4,] 8.991331e-293       1 #> [5,] 2.992170e-231       1 #> [6,]  1.967057e-82       1 tail(pi_hat) #>           CLASS_1     CLASS_2 #>  [995,] 0.9982456 0.001754398 #>  [996,] 0.9982456 0.001754398 #>  [997,] 0.9982456 0.001754398 #>  [998,] 0.9982456 0.001754398 #>  [999,] 0.9982456 0.001754398 #> [1000,] 0.9982456 0.001754398  # EAP estimates (not useful for zip class) fs <- fscores(ziGRM.fit) head(fs) #>         Class_1 #> [1,] -0.5412082 #> [2,]  0.8572726 #> [3,]  1.5055426 #> [4,]  1.1937282 #> [5,]  0.2213623 #> [6,] -1.4092123 tail(fs) #>           Class_1 #>  [995,] -99.82944 #>  [996,] -99.82944 #>  [997,] -99.82944 #>  [998,] -99.82944 #>  [999,] -99.82944 #> [1000,] -99.82944  # }"},{"path":"https://philchalmers.github.io/mirt/reference/numerical_deriv.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute numerical derivatives — numerical_deriv","title":"Compute numerical derivatives — numerical_deriv","text":"Compute numerical derivatives using forward/backward difference, central difference, Richardson extrapolation.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/numerical_deriv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute numerical derivatives — numerical_deriv","text":"","code":"numerical_deriv(   par,   f,   ...,   delta = 1e-05,   gradient = TRUE,   type = \"Richardson\" )"},{"path":"https://philchalmers.github.io/mirt/reference/numerical_deriv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute numerical derivatives — numerical_deriv","text":"par vector parameters find partial derivative f objective function evaluated ... additional arguments passed f delta term used perturb f function. Default 1e-5 gradient logical; compute gradient terms? FALSE Hessian computed instead type type difference compute. Can either 'forward' forward difference, 'central' central difference, 'Richardson' Richardson extrapolation (default). Backward difference achieved supplying negative delta value 'forward'. type = 'Richardson', default value delta increased delta * 1000 Hessian delta * 10 gradient provide reasonable perturbation starting location (delta halved iteration).","code":""},{"path":"https://philchalmers.github.io/mirt/reference/numerical_deriv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute numerical derivatives — numerical_deriv","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/numerical_deriv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute numerical derivatives — numerical_deriv","text":"","code":"# \\donttest{ f <- function(x) 3*x[1]^3 - 4*x[2]^2 par <- c(3,8)  # grad = 9 * x^2 , -8 * y (actual <- c(9 * par[1]^2, -8 * par[2])) #> [1]  81 -64 numerical_deriv(par, f, type = 'forward') #> [1]  81.00027 -64.00004 numerical_deriv(par, f, type = 'central') #> [1]  81 -64 numerical_deriv(par, f, type = 'Richardson') # default #> [1]  81 -64  # Hessian = h11 -> 18 * x, h22 -> -8, h12 -> h21 -> 0 (actual <- matrix(c(18 * par[1], 0, 0, -8), 2, 2)) #>      [,1] [,2] #> [1,]   54    0 #> [2,]    0   -8 numerical_deriv(par, f, type = 'forward', gradient = FALSE) #>          [,1]      [,2] #> [1,] 54.00011  0.000000 #> [2,]  0.00000 -7.999574 numerical_deriv(par, f, type = 'central', gradient = FALSE) #>          [,1]      [,2] #> [1,] 54.00004  0.000000 #> [2,]  0.00000 -7.999645 numerical_deriv(par, f, type = 'Richardson', gradient = FALSE) # default #>      [,1] [,2] #> [1,]   54    0 #> [2,]    0   -8  # }"},{"path":"https://philchalmers.github.io/mirt/reference/personfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Person fit statistics — personfit","title":"Person fit statistics — personfit","text":"personfit calculates Zh values Drasgow, Levine Williams (1985) unidimensional multidimensional models, well infit outfit statistics. returned object data.frame consisting either tabulated data full data statistics appended rightmost columns.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/personfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Person fit statistics — personfit","text":"","code":"personfit(   x,   method = \"EAP\",   Theta = NULL,   stats.only = TRUE,   return.resids = FALSE,   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/personfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Person fit statistics — personfit","text":"x computed model object class SingleGroupClass MultipleGroupClass method type factor score estimation method. See fscores detail Theta matrix factor scores used statistics require empirical estimates. supplied, arguments typically passed fscores() ignored values used instead stats.logical; return person fit statistics without associated response pattern? return.resids logical; return standardized unstandardized N J matrices person item residuals? TRUE return named list residual type ... additional arguments passed fscores()","code":""},{"path":"https://philchalmers.github.io/mirt/reference/personfit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Person fit statistics — personfit","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06 Drasgow, F., Levine, M. V., & Williams, E. . (1985). Appropriateness measurement polychotomous item response models standardized indices. British Journal Mathematical Statistical Psychology, 38, 67-86. Reise, S. P. (1990). comparison item- person-fit methods assessing model-data fit IRT. Applied Psychological Measurement, 14, 127-137. Wright B. D. & Masters, G. N. (1982). Rating scale analysis. MESA Press.","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/personfit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Person fit statistics — personfit","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/personfit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Person fit statistics — personfit","text":"","code":"# \\donttest{  #make some data set.seed(1) a <- matrix(rlnorm(20),ncol=1) d <- matrix(rnorm(20),ncol=1) items <- rep('2PL', 20) data <- simdata(a,d, 2000, items)  # first observation responds 1 for most difficult, 0 for easiest data[1,] <- ifelse(d > 0, 0, 1)  # second observations answers first half as 1 second half as 0 data[2,] <- rep(1:0, each = 10)  x <- mirt(data, 1) #>  fit <- personfit(x) head(fit) #>      outfit   z.outfit     infit    z.infit         Zh #> 1 2.6583629  4.4919286 1.8755635  4.7138595 -6.1443558 #> 2 1.7922739  2.8807841 1.4182143  2.4575860 -2.9692239 #> 3 1.0433748  0.2827043 1.1336179  0.6876462 -0.5328317 #> 4 0.9775579  0.0429289 1.0658716  0.4766070 -0.2816453 #> 5 0.6709186 -0.1241372 0.9331577 -0.2175710  0.4086525 #> 6 0.6974703 -0.9910218 0.7756842 -1.6170477  1.4234533  # raw/standardized residuals resid_list <- personfit(x, return.resids=TRUE) head(resid_list$resid) # unstandardized #>          Item_1     Item_2     Item_3       Item_4     Item_5     Item_6 #> [1,] -0.7568894 -0.7563391 -0.5446291  0.667184755 -0.6959354  0.4767592 #> [2,]  0.2748389  0.3311291  0.4960650  0.913431393  0.3926523  0.5159440 #> [3,]  0.2088405  0.1621746 -0.5920788  0.218613586  0.2154078  0.4307025 #> [4,]  0.2330887  0.2182063 -0.5581104  0.535192470 -0.7228889 -0.5362835 #> [5,] -0.6338516  0.5965212  0.5986854 -0.001378254 -0.3631630 -0.3862345 #> [6,]  0.2909863  0.3783853 -0.4843069 -0.040886819  0.4383944 -0.4652460 #>          Item_7      Item_8     Item_9    Item_10      Item_11    Item_12 #> [1,]  0.4406890  0.70146677  0.5167135 -0.6285059 -0.946868372  0.4240216 #> [2,]  0.5725244  0.82806667  0.6587757  0.4231435 -0.760175500 -0.4532233 #> [3,]  0.2957908  0.50082581  0.3466397 -0.6860779  0.007190094 -0.7092954 #> [4,] -0.6024032 -0.35099219 -0.5325594  0.3548235  0.030564231  0.3843337 #> [5,] -0.1620349 -0.03230699 -0.1031446  0.5597123 -0.037557502 -0.1906950 #> [6,]  0.6335249 -0.12817003 -0.2804705 -0.5513207  0.419948685 -0.3952569 #>         Item_13    Item_14      Item_15    Item_16    Item_17     Item_18 #> [1,] -0.5943839  0.4969974  0.624654806  0.5296584  0.5496934  0.36274653 #> [2,] -0.5528050 -0.4899816 -0.159467930 -0.3936997 -0.3712787 -0.41886847 #> [3,] -0.6419458 -0.5184351  0.297841384 -0.5627613 -0.5470254 -0.83476846 #> [4,] -0.6079995 -0.5073497  0.531075640  0.5035672 -0.4774758 -0.70284781 #> [5,] -0.4449300  0.5430746 -0.009971981 -0.2263752 -0.2042033 -0.06938994 #> [6,]  0.4675010 -0.4837216 -0.098254602 -0.3583888 -0.3353278 -0.31951901 #>          Item_19    Item_20 #> [1,] -0.85036814 -0.7715041 #> [2,] -0.72731292 -0.6540228 #> [3,]  0.06695424  0.1295876 #> [4,]  0.12025210  0.1961579 #> [5,]  0.72017488 -0.3014572 #> [6,]  0.35043353 -0.5884912 head(resid_list$std.resid) # standardized (approximate z-scores) #>          Item_1     Item_2     Item_3      Item_4     Item_5     Item_6 #> [1,] -1.7644700 -1.7618357 -1.0936234  1.41586371 -1.5128696  0.9545501 #> [2,]  0.6156329  0.7036028  0.9921608  3.24831212  0.8040543  1.0324131 #> [3,]  0.5137779  0.4399616 -1.2047630  0.52893907  0.5239728  0.8697994 #> [4,]  0.5513000  0.5283084 -1.1238367  1.07304620 -1.6151351 -1.0754022 #> [5,] -1.3157253  1.2159133  1.2213971 -0.03715046 -0.7551560 -0.7932760 #> [6,]  0.6406325  0.7802010 -0.9690912 -0.20646989  0.8835208 -0.9327480 #>          Item_7     Item_8     Item_9    Item_10     Item_11    Item_12 #> [1,]  0.8876452  1.5328767  1.0340048 -1.3007048 -4.22151409  0.8580072 #> [2,]  1.1572876  2.1945860  1.3894688  0.8564656 -1.78036956 -0.9104396 #> [3,]  0.6480992  1.0016530  0.7283880 -1.4783451  0.08510092 -1.5620236 #> [4,] -1.2308985 -0.7354002 -1.0673843  0.7415952  0.17756085  0.7900990 #> [5,] -0.4397353 -0.1827172 -0.3391268  1.1274938 -0.19754269 -0.4854154 #> [6,]  1.3147999 -0.3834223 -0.6243374 -1.1084960  0.85087332 -0.8084521 #>         Item_13    Item_14    Item_15    Item_16    Item_17    Item_18 #> [1,] -1.2105311  0.9940128  1.2900443  1.0611853  1.1048572  0.7544762 #> [2,] -1.1118277 -0.9801600 -0.4355716 -0.8058210 -0.7684595 -0.8489881 #> [3,] -1.3389822 -1.0375757  0.6512907 -1.1344955 -1.0989220 -2.2476906 #> [4,] -1.2453984 -1.0148091  1.0642087  1.0071601 -0.9559220 -1.5379463 #> [5,] -0.8953069  1.0902023 -0.1003615 -0.5409401 -0.5065593 -0.2730640 #> [6,]  0.9369834 -0.9679564 -0.3300916 -0.7473797 -0.7102824 -0.6852363 #>         Item_19    Item_20 #> [1,] -2.3839188 -1.8375111 #> [2,] -1.6331586 -1.3749050 #> [3,]  0.2678783  0.3858507 #> [4,]  0.3697151  0.4939894 #> [5,]  1.6042633 -0.6569258 #> [6,]  0.7344987 -1.1958604  # with missing data data[3, c(1,3,5,7)] <- NA x.miss <- mirt(data, 1) #>  fit.miss <- personfit(x.miss) head(fit.miss) #>      outfit    z.outfit     infit    z.infit         Zh #> 1 2.6580491  4.49205305 1.8755576  4.7145026 -6.1449328 #> 2 1.7922412  2.88067156 1.4181130  2.4573397 -2.9689675 #> 3 1.1166923  0.38752022 1.2231095  1.0496729 -0.8758406 #> 4 0.9774653  0.04266161 1.0658110  0.4762846 -0.2812838 #> 5 0.6708415 -0.12399182 0.9330018 -0.2183401  0.4092583 #> 6 0.6976132 -0.99071133 0.7758268 -1.6159063  1.4226412 head(personfit(x.miss, return.resids=TRUE)) #> $resid #>             Item_1      Item_2     Item_3        Item_4      Item_5     Item_6 #>    [1,] -0.7567231 -0.75631324 -0.5450063  6.672558e-01 -0.69570414  0.4767687 #>    [2,]  0.2749873  0.33118363  0.4957836  9.134481e-01  0.39287179  0.5159603 #>    [3,]         NA  0.16997425         NA  2.581309e-01          NA  0.4357509 #>    [4,]  0.2332537  0.21820929 -0.5585262  5.351968e-01 -0.72267453 -0.5362841 #>    [5,] -0.6338500  0.59643656  0.5985773 -1.382963e-03 -0.36323433 -0.3862780 #>    [6,]  0.2911073  0.37840492 -0.4845609 -4.091294e-02  0.43855267 -0.4652460 #>    [7,] -0.7425035 -0.71821305 -0.5263532  8.110621e-01 -0.65642757 -0.5052753 #>    [8,]  0.1818487  0.10988876  0.3668331  4.691481e-02  0.15430211 -0.6090073 #>    [9,] -0.7118940  0.36952816  0.5118320 -4.706550e-02 -0.56993762 -0.4686909 #>   [10,]  0.2049109  0.15352585 -0.5985295  1.787482e-01  0.20576276  0.4248886 #>   [11,]  0.2392860  0.23339544  0.4496482 -3.830028e-01  0.29347435 -0.5283881 #>   [12,]  0.2644169  0.30104161  0.4825093 -1.397497e-01 -0.63700876 -0.4967644 #>   [13,]  0.2336176  0.21911239  0.4419702 -4.597255e-01  0.27829206 -0.5358042 #>   [14,]  0.4876990 -0.15589550 -0.2902842 -9.166763e-06 -0.14870660 -0.2815223 #>   [15,]  0.1675312  0.08705632 -0.6556950  1.782223e-02  0.12602025  0.3687926 #>   [16,]  0.1226788  0.03569375  0.2680509  4.681320e-04  0.05737284  0.2925963 #>   [17,]  0.2990649  0.40206107  0.5248903 -2.822785e-02 -0.53902235 -0.4562283 #>   [18,]  0.4178206  0.72207540 -0.3510627 -1.565115e-04 -0.25435480 -0.3387438 #>   [19,]  0.2396865 -0.76558049 -0.5498132 -3.777976e-01  0.29455550 -0.5278683 #>   [20,]  0.2669518  0.30819526  0.4857213 -1.247845e-01 -0.62986179 -0.4936829 #>   [21,]  0.1294325  0.04160437  0.2801251  8.663225e-04  0.06575271  0.3047808 #>   [22,]  0.2898461  0.37467107 -0.4860738 -4.339399e-02 -0.56501343 -0.4666907 #>   [23,] -0.7322919  0.31033911 -0.5133240  8.793898e-01  0.37227318 -0.4927673 #>   [24,] -0.7139071 -0.63640787  0.5093992 -5.170014e-02  0.42436073 -0.4710153 #>   [25,] -0.7096379  0.37619796 -0.4854544 -4.236133e-02  0.43644576  0.5339008 #>   [26,]  0.2707706 -0.68093571 -0.5094742 -1.049856e-01  0.38093015 -0.4890766 #>   [27,] -0.5625643 -0.23810293 -0.3332094 -6.997543e-05 -0.22004680  0.6780747 #>   [28,]  0.1765581  0.10107176 -0.6413966  3.316046e-02  0.14350702 -0.6171024 #>   [29,] -0.7314848 -0.68736810 -0.5123069 -1.162965e-01  0.37455301 -0.4917920 #>   [30,]  0.1195761  0.03317592  0.2624286  3.493604e-04  0.05375078  0.2869057 #>   [31,]  0.2080372  0.16008255 -0.5939828  2.086324e-01  0.21324835  0.4293181 #>   [32,] -0.6870320  0.44356599  0.5410203 -1.482549e-02  0.49967488  0.5591352 #>   [33,] -0.7979472  0.14766331  0.3972835  1.542065e-01  0.19901944 -0.5791944 #>   [34,]  0.3139852 -0.55339945 -0.4578181 -1.414774e-02  0.50247438 -0.4397596 #>   [35,] -0.6240523 -0.37759519  0.6085206 -9.075412e-04  0.65944349  0.6231211 #>   [36,]  0.1914509  0.12703358  0.3814945  8.502635e-02  0.17488650  0.4053739 #>   [37,]  0.3033854  0.41495162 -0.4700458 -2.309017e-02  0.47308065  0.5485985 #>   [38,] -0.7229804 -0.66293497  0.4983002 -7.880897e-02  0.39863331  0.5183697 #>   [39,]  0.2652514  0.30339094 -0.5164313 -1.346538e-01  0.36534232  0.5042521 #>   [40,] -0.6612189 -0.48030183  0.5697428 -4.599527e-03  0.56885207 -0.4135826 #>   [41,]  0.3617589  0.58451497 -0.4059423 -1.672748e-03 -0.37369027 -0.3905529 #>   [42,]  0.2804293 -0.65301474 -0.4975029 -6.729528e-02 -0.59169683 -0.4776144 #>   [43,]  0.1404448  0.05256393  0.2993451  2.232628e-03  0.08089514 -0.6759211 #>   [44,] -0.5868460  0.71194201 -0.3554079 -1.898255e-04 -0.26308429 -0.3428392 #>   [45,]  0.2202058  0.18700136 -0.5766076  3.528183e-01  0.24340365  0.4462057 #>   [46,] -0.8004389  0.14265609  0.3936096  1.349441e-01  0.19322106 -0.5827802 #>   [47,]  0.1821894  0.11047198 -0.6326406  4.795348e-02 -0.84498907 -0.6084902 #>   [48,]  0.2671835  0.30885159  0.4860139 -1.234918e-01 -0.62920784  0.5065978 #>   [49,] -0.7811396  0.18391842 -0.5785038  3.350257e-01 -0.76000545 -0.5556343 #>   [50,]  0.2738172  0.32780895  0.4943295 -9.133413e-02  0.38955608  0.5145677 #>   [51,]  0.3039355  0.41659431  0.5305957 -2.250796e-02 -0.52538267 -0.4507903 #>   [52,] -0.7829073 -0.82009288 -0.5810046  3.122317e-01  0.23554225 -0.5580621 #>   [53,] -0.8255527  0.09767862  0.3552893  2.877094e-02  0.13931164 -0.6203671 #>   [54,]  0.2071865  0.15828350  0.4047833 -7.998140e-01  0.21120021 -0.5718835 #>   [55,]  0.1294325  0.04160437  0.2801251  8.663225e-04  0.06575271  0.3047808 #>   [56,]  0.2308279  0.21223342 -0.5618459 -4.989284e-01  0.27090902  0.4605058 #>   [57,] -0.6168937  0.64078743 -0.3843351 -6.688956e-04 -0.32457377  0.6298697 #>   [58,]  0.3761432  0.62291370 -0.3912829 -8.999836e-04  0.65988668 -0.3766933 #>   [59,]  0.3934494  0.66640625 -0.3741878 -4.320072e-04 -0.30237873  0.6394489 #>   [60,]  0.3247347  0.47854604 -0.4456946 -8.656831e-03 -0.46827835 -0.4282345 #>   [61,]  0.3356873  0.51071220 -0.4336189 -5.281989e-03  0.56079229 -0.4167711 #>   [62,]  0.2568151  0.27991427  0.4727667 -1.944899e-01  0.34166909  0.4938787 #>   [63,] -0.6064346 -0.33331299  0.6259249 -4.299043e-04 -0.30213592 -0.3604448 #>   [64,]  0.2313773  0.21358016 -0.5610924 -4.911651e-01  0.27235819  0.4612346 #>   [65,] -0.6724504  0.48685883  0.5574352 -7.619728e-03  0.53926892  0.5747381 #>   [66,]  0.1226788  0.03569375  0.2680509  4.681320e-04  0.05737284  0.2925963 #>   [67,]  0.2049533  0.15361379 -0.5984676  1.791323e-01 -0.79413646  0.4249489 #>   [68,]  0.2044098 -0.84751108 -0.5992615  1.742542e-01  0.20457355  0.4241751 #>   [69,]  0.1767673  0.10141194  0.3589310  3.362680e-02 -0.85607366 -0.6167799 #>   [70,]  0.1580112  0.07366294  0.3288634  8.913974e-03  0.10888848  0.3534995 #>   [71,]  0.3656165  0.59499731  0.5980304 -1.415227e-03 -0.36449504  0.6132047 #>   [72,]  0.3592204 -0.42245232  0.5914266 -1.868017e-03 -0.37981542  0.6069577 #>   [73,]  0.1595072  0.07567455  0.3313152  9.964973e-03  0.11149025  0.3559321 #>   [74,] -0.6851807  0.44908739  0.5431324 -1.361580e-02  0.50476575  0.5611446 #>   [75,]  0.2773524  0.33803031 -0.5012888 -7.760637e-02 -0.60042314  0.5187630 #>   [76,]  0.3372959  0.51539075  0.5681317 -4.915050e-03  0.56499180  0.5848894 #>   [77,]  0.3218887  0.47011565 -0.4488778 -9.853269e-03  0.52404168  0.5687411 #>   [78,]  0.2847943  0.35977148 -0.4921759 -5.492700e-02 -0.57931950  0.5274794 #>   [79,]  0.2152043 -0.82432763  0.4163121  2.887094e-01  0.23082112 -0.5606684 #>   [80,]  0.3253390 -0.51966703  0.5549789 -8.422581e-03 -0.46665387  0.5724052 #>   [81,]  0.3109740 -0.56238518 -0.4612638 -1.625189e-02  0.49417342 -0.4430384 #>   [82,]  0.1319511  0.04396365  0.2845713  1.082166e-03  0.06905337  0.3092556 #>   [83,] -0.6925737  0.42702024  0.5346483 -1.914601e-02  0.48434157  0.5530699 #>   [84,]  0.2853913  0.36152699  0.5085487 -5.341958e-02 -0.57762749  0.5281720 #>   [85,]  0.2809537 -0.65148347  0.5031398 -6.567614e-02  0.40979051 -0.4769996 #>   [86,]  0.1890632  0.12263290  0.3778814  7.367164e-02 -0.83034858 -0.5981655 #>   [87,] -0.7183939  0.35042336 -0.4960617 -6.371496e-02 -0.58835929 -0.4762359 #>   [88,]  0.2817425  0.35082253 -0.4958949 -6.331199e-02  0.41202775  0.5239237 #>   [89,]  0.3042533  0.41754331  0.5309659 -2.217846e-02  0.47550452 -0.4504376 #>   [90,]  0.2717046 -0.67826160 -0.5083054 -1.006091e-01 -0.61642677 -0.4879566 #>   [91,] -0.7505048  0.26008597 -0.5367745 -2.626580e-01  0.32134771  0.4847002 #>   [92,] -0.7013659 -0.59922285  0.5243828 -2.879984e-02  0.45976778 -0.4567122 #>   [93,]  0.2248193  0.19776905  0.4298493 -5.838998e-01  0.25522584  0.4524659 #>   [94,] -0.5191085 -0.16544741  0.7041262 -1.205366e-05 -0.15706771 -0.2867823 #>   [95,]  0.2689243  0.31379591  0.4882080 -1.141646e-01 -0.62429093 -0.4912984 #>   [96,] -0.5451868  0.79346206 -0.3179255 -3.452594e-05 -0.19278533 -0.3075357 #>   [97,]  0.2686736  0.31308242  0.4878925 -1.154668e-01 -0.62499945 -0.4916008 #>   [98,]  0.3260648  0.48247726  0.5557865 -8.149850e-03 -0.46470604 -0.4268276 #>   [99,] -0.6441052 -0.43165931 -0.4120405 -2.159774e-03  0.61207320  0.6036763 #>  [100,]  0.3641298 -0.40902729 -0.4034971 -1.509285e-03 -0.36802268  0.6117601 #>  [101,] -0.5996347 -0.31711252  0.6324846 -3.232223e-04 -0.28813864 -0.3542558 #>  [102,]  0.1703449  0.09128653  0.3487972  2.171031e-02  0.13134291 -0.6267704 #>  [103,]  0.4806686 -0.16576813 -0.2960580 -1.216226e-05 -0.15734800 -0.2869556 #>  [104,]  0.3101431  0.43513419 -0.4622184 -1.688692e-02 -0.50812423 -0.4439470 #>  [105,] -0.5763244  0.73443124 -0.3456649 -1.229597e-04 -0.24371273 -0.3336574 #>  [106,] -0.6308208 -0.39543890  0.6016722 -1.213514e-03 -0.35612548 -0.3833516 #>  [107,]  0.1195761  0.03317592  0.2624286  3.493604e-04  0.05375078  0.2869057 #>  [108,]  0.3091082  0.43204357 -0.4634098 -1.771355e-02  0.48900939  0.5549188 #>  [109,] -0.5944537  0.69488301  0.6374253 -2.603671e-04 -0.27778856  0.6504039 #>  [110,] -0.5775410  0.73189673 -0.3467816 -1.292716e-04 -0.24589567  0.6652904 #>  [111,]  0.2675899 -0.68999606 -0.5134731  8.787463e-01 -0.62806040 -0.4929102 #>  [112,]  0.2717191 -0.67821988  0.4917128 -1.005423e-01  0.38361443 -0.4879391 #>  [113,]  0.2762374  0.33479848  0.4973330 -8.170698e-02  0.39641551  0.5174437 #>  [114,] -0.6367754 -0.41148718 -0.4044293 -1.569670e-03 -0.37018053  0.6108783 #>  [115,] -0.5446528 -0.20562222 -0.3174635 -3.378722e-05 -0.19199274  0.6928992 #>  [116,] -0.6846343 -0.54928375 -0.4562458 -1.327840e-02  0.50626518  0.5617361 #>  [117,]  0.1534928  0.06779543 -0.6785997  6.328465e-03  0.10123727  0.3460849 #>  [118,]  0.3774063 -0.37380788 -0.3900155 -8.526881e-04 -0.33725922  0.6245042 #>  [119,] -0.4880329 -0.12548850 -0.2708912 -3.456854e-06 -0.12187564 -0.2632711 #>  [120,]  0.1322912  0.04428881  0.2851694  1.114853e-03  0.06950641  0.3098570 #>  [121,] -0.7804299  0.18554141  0.4224972  3.443664e-01  0.24179062 -0.5546628 #>  [122,] -0.7350940  0.30241794 -0.5168695 -1.367423e-01  0.36436907 -0.4961683 #>  [123,]  0.1848616  0.11510983  0.3714713  5.682599e-02  0.16062544 -0.6044523 #>  [124,]  0.1949458  0.13363838  0.3867449  1.042647e-01  0.18268430  0.4105117 #>  [125,]  0.3287018  0.49025294 -0.4412890 -7.232881e-03 -0.45765662 -0.4240505 #>  [126,]  0.1596438  0.07585989  0.3315385  1.006638e-02  0.11172943  0.3561536 #>  [127,]  0.2791054  0.34312596 -0.4991287 -7.155766e-02  0.40454835 -0.4791698 #>  [128,]  0.3712050  0.60994712 -0.3962685 -1.112211e-03 -0.35141992  0.6185951 #>  [129,]  0.2810291  0.34873682  0.5032321 -6.544647e-02  0.41000437  0.5230887 #>  [130,]  0.2202978  0.18721326  0.4235219  3.540486e-01 -0.75636244  0.4463314 #>  [131,]  0.1430324  0.05538651 -0.6962204  2.762979e-03  0.08472182  0.3285151 #>  [132,]  0.2045530  0.15278485  0.4009478  1.755301e-01 -0.79508691  0.4243791 #>  [133,]  0.2281538  0.20573582  0.4344726  4.631626e-01  0.26389112 -0.5430567 #>  [134,]  0.2467365  0.25275767  0.4595881  7.075809e-01 -0.68624381 -0.5188031 #>  [135,]  0.3152910 -0.54950642  0.5436693 -1.332402e-02  0.50606027 -0.4383447 #>  [136,]  0.2556011 -0.72341097  0.4711953 -2.047106e-01 -0.66171720  0.4923681 #>  [137,] -0.8423528  0.07317866  0.3282653  8.674198e-03  0.10826054  0.3529059 #>  [138,]  0.1290697  0.04127158 -0.7205179  8.387456e-04  0.06528518  0.3041332 #>  [139,] -0.8510983  0.06214949  0.3137263  4.426524e-03 -0.90621784  0.3384441 #>  [140,]  0.2100357 -0.83564803 -0.5910943 -7.706138e-01  0.21809177 -0.5678701 #>  [141,] -0.6381744  0.58469708 -0.4058734 -1.667915e-03 -0.37353031 -0.3904878 #>  [142,]  0.1924744  0.12894785  0.3830369  9.032675e-02 -0.82284624  0.4068838 #>  [143,]  0.2464855  0.25209490  0.4592559 -2.952353e-01 -0.68693264  0.4808769 #>  [144,]  0.4262576 -0.26024681 -0.3433032 -1.105799e-04  0.76087121  0.6685676 #>  [145,]  0.2242673  0.19646511  0.4290806  4.083857e-01  0.25380106  0.4517210 #>  [146,] -0.7491433  0.26373277  0.4650123 -2.487852e-01 -0.67489113  0.4864202 #>  [147,]  0.1623454  0.07958576  0.3359405  1.227868e-02  0.11651910  0.3605166 #>  [148,] -0.6232763 -0.37557766  0.6093000 -8.779229e-04 -0.33879972 -0.3761426 #>  [149,] -0.7019102 -0.60084493 -0.4762591 -2.953946e-02  0.45823811 -0.4573244 #>  [150,]  0.2944096  0.38820381 -0.4806191 -3.506908e-02 -0.55212371 -0.4614835 #>  [151,]  0.2762119  0.33472452  0.4973014 -8.180332e-02 -0.60365691  0.5174135 #>  [152,]  0.2389973 -0.76734160  0.4492596  6.132242e-01  0.29269562 -0.5287632 #>  [153,]  0.3213418 -0.53150710 -0.4494917 -1.010198e-02  0.52256031  0.5681577 #>  [154,] -0.8095807  0.12512127  0.3799362  7.995152e-02  0.17261556 -0.5961523 #>  [155,] -0.6013771  0.67878531 -0.3691881 -3.476756e-04 -0.29168066 -0.3558337 #>  [156,]  0.3121697  0.44118386  0.5401070 -1.538053e-02 -0.50252543  0.5582662 #>  [157,]  0.1632505  0.08085931  0.3374084  1.311450e-02  0.11814829  0.3619703 #>  [158,] -0.6430862  0.57117121 -0.4109757 -2.065714e-03 -0.38543096 -0.3953158 #>  [159,]  0.2722161  0.32320543 -0.5076663 -9.828533e-02  0.38502125 -0.4873442 #>  [160,]  0.3349456  0.50855053 -0.4344281 -5.460553e-03 -0.44115040 -0.4175388 #>  [161,] -0.7706080  0.20873242 -0.5638200 -5.192728e-01 -0.73286691 -0.5414041 #>  [162,] -0.8708363  0.04135758  0.2796487  8.458066e-04  0.06540604  0.3043010 #>  [163,]  0.1528783  0.06702138 -0.6796215  6.036165e-03  0.10022073  0.3450685 #>  [164,]  0.2954164 -0.60880306 -0.4794228 -3.346005e-02 -0.54928566 -0.4603422 #>  [165,]  0.4806686 -0.16576813 -0.2960580 -1.216226e-05 -0.15734800 -0.2869556 #>  [166,]  0.1506116  0.06421536  0.3165952  5.062519e-03  0.09652102 -0.6586974 #>  [167,]  0.2108342  0.16607487  0.4100560  2.380310e-01  0.22003957 -0.5667509 #>  [168,]  0.2586567  0.28498547 -0.5248576 -1.797869e-01 -0.65318284  0.4961618 #>  [169,]  0.2940757  0.38721172 -0.4810163 -3.561971e-02 -0.55306540 -0.4618626 #>  [170,]  0.2493853  0.25979222  0.4630809 -2.638024e-01 -0.67895572  0.4845610 #>  [171,]  0.2941161  0.38733174  0.5190318 -3.555263e-02 -0.55295146 -0.4618168 #>  [172,]  0.2504415  0.26261847  0.4644679 -2.529585e-01  0.32396078 -0.5141038 #>  [173,] -0.6868227 -0.55580933 -0.4587404 -1.468333e-02 -0.49974851 -0.4406371 #>  [174,] -0.5111301 -0.15429933 -0.2893295 -8.745275e-06 -0.14730669  0.7193761 #>  [175,]  0.1454954  0.05816315  0.3079725  3.374021e-03  0.08845967  0.3327042 #>  [176,]  0.1286903  0.04092542  0.2788091  8.107755e-04  0.06479835 -0.6965449 #>  [177,] -0.6810415  0.46141245 -0.4521751 -1.126327e-02 -0.48391512  0.5656069 #>  [178,] -0.6168899 -0.35920297 -0.3843314 -6.687879e-04 -0.32456544 -0.3701268 #>  [179,]  0.2139470  0.17288195 -0.5854811  2.735677e-01  0.22769828 -0.5624110 #>  [180,]  0.2334602  0.21872152 -0.5582445 -4.619204e-01  0.27787381  0.4639882 #>  [181,] -0.6206509  0.63120373 -0.3880723 -7.848528e-04  0.66710032 -0.3736600 #>  [182,]  0.2675523  0.30989711 -0.5135206 -1.214595e-01  0.37183327 -0.4929558 #>  [183,] -0.6594739  0.52474391  0.5716296 -4.255229e-03  0.57336674 -0.4117935 #>  [184,]  0.3062896 -0.57637504  0.5333320 -2.018057e-02  0.48118022 -0.4481837 #>  [185,] -0.5954438  0.69261411  0.6364849 -2.713340e-04 -0.27974547 -0.3504829 #>  [186,] -0.8708363  0.04135758  0.2796487  8.458066e-04  0.06540604  0.3043010 #>  [187,]  0.2727555 -0.67524536  0.4930069 -9.588922e-02  0.38654887  0.5133008 #>  [188,] -0.5510596 -0.21682058 -0.3230364 -4.381018e-05 -0.20167765 -0.3123468 #>  [189,]  0.2663604  0.30652174  0.4849735 -1.281402e-01  0.36846945 -0.4944001 #>  [190,]  0.2083702  0.16078974  0.4064994 -7.879979e-01  0.21405227  0.4297877 #>  [191,]  0.3578454  0.57375186 -0.4100040 -1.983398e-03  0.61684288 -0.3943962 #>  [192,] -0.5129648 -0.15680648 -0.2908263 -9.414708e-06 -0.14950522 -0.2820325 #>  [193,] -0.6763057 -0.52453299 -0.4468561 -9.075892e-03 -0.47108023 -0.4293379 #>  [194,]  0.1887959  0.12214601 -0.6225243  7.248508e-02  0.16907022  0.4014369 #>  [195,]  0.2582311 -0.71618947  0.4745941 -1.831003e-01  0.34562614  0.4956350 #>  [196,]  0.3055598 -0.57855484 -0.4675148 -2.087464e-02  0.47914786 -0.4489903 #>  [197,] -0.8226676  0.10233432  0.3598148  3.491605e-02 -0.85493786  0.3840902 #>  [198,]  0.4366034 -0.23970170 -0.3339538 -7.239382e-05 -0.22142528 -0.3226262 #>  [199,] -0.8182802  0.10966864  0.3666339  4.652713e-02 -0.84596560  0.3907969 #>  [200,] -0.7014597  0.40049749  0.5242722 -2.892599e-02 -0.54049586 -0.4568177 #>  [201,]  0.1849503  0.11526572  0.3716073  5.714361e-02  0.16081348  0.3956812 #>  [202,]  0.1499463  0.06340639  0.3154805  4.805640e-03  0.09545006  0.3401922 #>  [203,] -0.7147926  0.36098613  0.5083257  9.461205e-01  0.42185140 -0.4720412 #>  [204,]  0.3583760  0.57521830  0.5905485 -1.938035e-03 -0.38186571 -0.3938733 #>  [205,]  0.1707924 -0.90802928 -0.6504915  2.239535e-02  0.13220006 -0.6260682 #>  [206,]  0.4657624 -0.18839298 -0.3085410 -2.217568e-05 -0.17705511 -0.2987030 #>  [207,]  0.3582282 -0.42518994  0.5903946 -1.950563e-03 -0.38222518  0.6059811 #>  [208,] -0.6652528  0.50797174 -0.4346448 -5.509369e-03 -0.44167082  0.5822556 #>  [209,]  0.2823897  0.35271654  0.5048958 -6.143492e-02 -0.58613705 -0.4753201 #>  [210,]  0.1741139  0.09714910 -0.6452359  2.812770e-02  0.13865480 -0.6208846 #>  [211,] -0.7369328  0.29725389  0.4807917 -1.483559e-01 -0.64080749  0.5015871 #>  [212,]  0.2379944  0.23010583  0.4479076 -4.000109e-01  0.28999479  0.4699316 #>  [213,]  0.2547265  0.27420220  0.4700605  7.876615e-01 -0.66415313  0.4912769 #>  [214,] -0.6674228 -0.49836967  0.5629799 -6.073390e-03  0.55262014 -0.4199983 #>  [215,]  0.2640303  0.29995528 -0.5179821 -1.421680e-01  0.36190279  0.5027640 #>  [216,]  0.1290697  0.04127158 -0.7205179  8.387456e-04  0.06528518  0.3041332 #>  [217,] -0.6068971  0.66556663 -0.3745244 -4.383519e-04 -0.30310490 -0.3608687 #>  [218,]  0.1752281  0.09892546  0.3565172  3.032947e-02 -0.85914399  0.3808429 #>  [219,]  0.2635674 -0.70134399 -0.5185711 -1.451129e-01  0.36059989 -0.4978013 #>  [220,]  0.2978421  0.39841723 -0.4765515 -2.988230e-02  0.45754187  0.5423968 #>  [221,]  0.2145575  0.17423401 -0.5846097  2.808663e-01 -0.77078739 -0.5615641 #>  [222,] -0.7270792  0.32522948  0.4932130 -9.516649e-02  0.38701679 -0.4865018 #>  [223,]  0.2688085  0.31346640  0.4880623 -1.147642e-01 -0.62461810  0.5085620 #>  [224,]  0.1880475  0.12078855 -0.6236620  6.924876e-02 -0.83255232  0.4003217 #>  [225,]  0.1195761  0.03317592  0.2624286  3.493604e-04  0.05375078  0.2869057 #>  [226,]  0.2647797  0.30206231  0.4829701 -1.375134e-01 -0.63598682  0.5036778 #>  [227,]  0.3290198 -0.50881117 -0.4409374 -7.129703e-03 -0.45680958  0.5762833 #>  [228,]  0.4172969  0.72095087 -0.3515484 -1.599328e-04 -0.25532342 -0.3392015 #>  [229,]  0.2689330 -0.68617916  0.4882190 -1.141193e-01  0.37573382  0.5087122 #>  [230,] -0.5637929 -0.24046570 -0.3343086 -7.357479e-05  0.77791604 -0.3229604 #>  [231,]  0.3461292 -0.45917754 -0.4223576 -3.318313e-03 -0.41229743 -0.4060945 #>  [232,]  0.1826024 -0.88881870 -0.6320033  4.923950e-02  0.15587218 -0.6078641 #>  [233,]  0.3553190 -0.43326239 -0.4126433 -2.214859e-03 -0.38934120 -0.3968942 #>  [234,]  0.1378101  0.04978816  0.2947982  1.790795e-03  0.07710411 -0.6804759 #>  [235,] -0.7460865 -0.72800995 -0.5309965  7.803699e-01  0.33358523 -0.5097396 #>  [236,]  0.1614250  0.07830376 -0.6655557  1.147921e-02  0.11487501  0.3590342 #>  [237,] -0.5191409 -0.16549392 -0.2959006 -1.206936e-05 -0.15710836 -0.2868074 #>  [238,]  0.2153509  0.17599934  0.4165209  2.905032e-01  0.23118642  0.4395345 #>  [239,] -0.6495130 -0.44681310  0.5822716 -2.737919e-03 -0.40132270  0.5982908 #>  [240,]  0.1693367 -0.91024362  0.3471912  2.023607e-02  0.12942223  0.3716440 #>  [241,]  0.2113460  0.16718419 -0.5892079  2.436754e-01  0.22129168 -0.5660348 #>  [242,]  0.3478802  0.54580620 -0.4204927 -3.071248e-03 -0.40786884  0.5956725 #>  [243,]  0.1407950  0.05294032  0.2999470  2.298420e-03  0.08140705  0.3246814 #>  [244,] -0.6271770 -0.38577854  0.6053704 -1.037544e-03 -0.34768945 -0.3798559 #>  [245,]  0.2989993  0.40186551 -0.4751869 -2.831422e-02 -0.53920658 -0.4563020 #>  [246,] -0.6265986 -0.38425679 -0.3940450 -1.012118e-03  0.65363787 -0.3793034 #>  [247,]  0.3652423 -0.40601386 -0.4023537 -1.438321e-03 -0.36538103 -0.3871585 #>  [248,]  0.1716534  0.09329634 -0.6491248  2.376931e-02  0.13385788  0.3752804 #>  [249,]  0.2148636 -0.82508596  0.4158268  2.845645e-01  0.22997340 -0.5611400 #>  [250,]  0.1643458  0.08241773 -0.6608196  1.419588e-02  0.12013653  0.3637243 #>  [251,] -0.6944205  0.42150388 -0.4674920 -2.085563e-02 -0.52079736  0.5510315 #>  [252,]  0.2716290  0.32152182 -0.5083999 -1.009567e-01  0.38335934 -0.4880471 #>  [253,]  0.2245539  0.19714151  0.4294798 -5.876131e-01 -0.74545963 -0.5478921 #>  [254,]  0.3458701  0.54008321  0.5773658 -3.356573e-03 -0.41295492 -0.4063565 #>  [255,]  0.1404448  0.05256393  0.2993451  2.232628e-03  0.08089514 -0.6759211 #>  [256,] -0.7410583  0.28577302 -0.5244909 -1.775967e-01  0.34761491 -0.5034859 #>  [257,]  0.2174402  0.18069199  0.4194878  3.166557e-01  0.23641491 -0.5575840 #>  [258,]  0.1986952  0.14093861  0.3923275  1.287031e-01 -0.80877625  0.4159677 #>  [259,]  0.2944096  0.38820390 -0.4806190 -3.506903e-02  0.44787638 -0.4614835 #>  [260,]  0.3450980  0.53787802  0.5765409 -3.473279e-03 -0.41491715 -0.4071382 #>  [261,]  0.1999409  0.14341304  0.3941710  1.377543e-01  0.19409997  0.4177680 #>  [262,]  0.3474557  0.54459973 -0.4209442 -3.129360e-03 -0.40894028  0.5952447 #>  [263,]  0.1707302  0.09187554  0.3494098  2.229908e-02  0.13208088  0.3738344 #>  [264,] -0.6545669  0.53883563 -0.4231009 -3.422120e-03  0.58593513 -0.4067988 #>  [265,]  0.1226788  0.03569375  0.2680509  4.681320e-04  0.05737284  0.2925963 #>  [266,]  0.1635275  0.08125175 -0.6621429  1.338064e-02  0.11864952 -0.6375855 #>  [267,]  0.2281733 -0.79421705  0.4344996  4.634397e-01  0.26394218 -0.5430305 #>  [268,]  0.2332442  0.21818588 -0.5585391 -4.649352e-01  0.27730040 -0.5362966 #>  [269,] -0.5111301 -0.15429933 -0.2893295 -8.745275e-06 -0.14730669  0.7193761 #>  [270,]  0.2072708  0.15846131 -0.5950943  2.010127e-01 -0.78859717  0.4282357 #>  [271,]  0.1822302  0.11054190  0.3674224  4.807914e-02  0.15509587  0.3915717 #>  [272,]  0.2073827  0.15869742 -0.5949319  2.021132e-01  0.21167182  0.4283938 #>  [273,] -0.6834170 -0.54565714  0.5451368 -1.255728e-02  0.50959976  0.5630511 #>  [274,] -0.5884312 -0.29155766 -0.3568927 -2.027152e-04 -0.26609981 -0.3442388 #>  [275,]  0.2392606 -0.76666940 -0.5503860  6.166661e-01  0.29340586 -0.5284211 #>  [276,]  0.1817199  0.10966890  0.3666341  4.652759e-02  0.15403472 -0.6092028 #>  [277,]  0.3213984  0.46866088  0.5505719 -1.007594e-02  0.52271370 -0.4317819 #>  [278,]  0.2665560  0.30707512 -0.5147790 -1.270210e-01  0.36902146  0.5058373 #>  [279,] -0.6125934  0.65157724 -0.3800913 -5.574397e-04 -0.31521582 -0.3661233 #>  [280,]  0.2371640 -0.77199845  0.4467857  5.888878e-01  0.28776369 -0.5311517 #>  [281,]  0.1476186  0.06062785 -0.6884350  3.998771e-03  0.09175643  0.3362892 #>  [282,]  0.1999287  0.14338866  0.3941530 -8.623368e-01  0.19407167  0.4177503 #>  [283,]  0.1850793  0.11549274 -0.6281949  5.760848e-02  0.16108725  0.3958753 #>  [284,]  0.3837074 -0.35769282  0.6162602 -6.520403e-04 -0.32325473  0.6304319 #>  [285,] -0.8153605  0.11472002  0.3711306  5.603736e-02  0.16015504  0.3952133 #>  [286,] -0.8010951  0.14135354  0.3926383  1.301937e-01  0.19170669  0.4162713 #>  [287,] -0.6981200  0.41045788 -0.4718049 -2.476276e-02 -0.53112956  0.5469221 #>  [288,]  0.2497596  0.26079259  0.4635729  7.400785e-01  0.32207735 -0.5149654 #>  [289,]  0.3434353  0.53311615  0.5747601 -3.738982e-03 -0.41915908 -0.4088259 #>  [290,]  0.2008244  0.14518275  0.3954751  1.444660e-01  0.19615150  0.4190410 #>  [291,]  0.3132677  0.44446036  0.5413629 -1.462238e-02 -0.49949963 -0.4405388 #>  [292,] -0.5904393 -0.29603255 -0.3587801 -2.203315e-04 -0.26995636  0.6539819 #>  [293,] -0.7009223  0.40209932 -0.4750946 -2.821099e-02  0.46101368  0.5437861 #>  [294,] -0.8073759 -0.87077084  0.3832621  9.112441e-02  0.17748643  0.4071042 #>  [295,]  0.3213668 -0.53143310  0.5505363 -1.009050e-02  0.52262789 -0.4318157 #>  [296,]  0.1315683  0.04359948  0.2838974  1.046430e-03  0.06854545 -0.6914223 #>  [297,] -0.8473304  0.06675974 -0.6799690  5.939746e-03  0.09987672  0.3447228 #>  [298,]  0.3021975 -0.58859453 -0.4714334  9.755999e-01 -0.53024097 -0.4527238 #>  [299,] -0.7074936  0.38255284 -0.4828874 -3.832629e-02  0.44250554 -0.4636484 #>  [300,]  0.4054287 -0.30538583 -0.3626863 -2.616454e-04 -0.27802042 -0.3497013 #>  [301,]  0.1853667  0.11599931  0.3722454  5.865570e-02  0.16169779 -0.6036925 #>  [302,]  0.3219221 -0.52978553 -0.4488404 -9.838324e-03  0.52413186 -0.4312234 #>  [303,]  0.2654194  0.30386479  0.4837818 -1.336479e-01  0.36581605  0.5044566 #>  [304,] -0.6544050 -0.46070187 -0.4229279 -3.397676e-03 -0.41365334 -0.4066348 #>  [305,] -0.5386756 -0.19558843 -0.3123224 -2.652942e-05 -0.18329969  0.6977381 #>  [306,]  0.4431689 -0.22730727 -0.3281129 -5.539423e-05 -0.21073392  0.6828737 #>  [307,] -0.8210843  0.10494562  0.3622843  3.876737e-02  0.14826853  0.3865204 #>  [308,]  0.2942140  0.38762285  0.5191484 -3.539046e-02  0.44732491 -0.4617055 #>  [309,]  0.1834672 -0.88732450 -0.6306709  5.203137e-02  0.15768338  0.3934446 #>  [310,]  0.1290697  0.04127158 -0.7205179  8.387456e-04  0.06528518  0.3041332 #>  [311,]  0.1828329  0.11157836 -0.6316479  4.997037e-02  0.15635387  0.3924850 #>  [312,]  0.2307158  0.21195908 -0.5619998 -5.005144e-01  0.27061359  0.4603569 #>  [313,]  0.2034343  0.15048129  0.3993110  1.657391e-01 -0.79773318  0.4227832 #>  [314,]  0.2777095  0.33906700 -0.5008481 -7.633537e-02  0.40058957  0.5191849 #>  [315,]  0.1691204  0.08943016  0.3468461  1.993190e-02  0.12901207 -0.6286968 #>  [316,]  0.2061166  0.15603675  0.4032280  1.898969e-01  0.20863626  0.4266014 #>  [317,]  0.3926384  0.66443890  0.6250239 -4.470077e-04  0.69591964 -0.3612950 #>  [318,]  0.3376922  0.51654119 -0.4314380 -4.828748e-03 -0.43397662 -0.4147024 #>  [319,]  0.4040438 -0.30856438 -0.3640025 -2.771928e-04 -0.28076203  0.6490575 #>  [320,] -0.6888764  0.43806163  0.5389080 -1.614011e-02  0.49458699  0.5571251 #>  [321,]  0.4876990 -0.15589550 -0.2902842 -9.166763e-06 -0.14870660 -0.2815223 #>  [322,]  0.1640935  0.08205705  0.3387726  1.393974e-02  0.11967689 -0.6366792 #>  [323,]  0.3222604  0.47121778  0.5515389 -9.687874e-03 -0.47495278  0.5691371 #>  [324,]  0.3059707 -0.57732754  0.5329621 -2.048091e-02  0.48029242  0.5514640 #>  [325,] -0.7032365  0.39520521 -0.4778264 -3.142289e-02 -0.54549220 -0.4588192 #>  [326,]  0.2013537  0.14624865  0.3962550  1.486041e-01  0.19738494  0.4198020 #>  [327,] -0.8079357  0.12817876 -0.6175807  8.817051e-02  0.17624356  0.4062793 #>  [328,]  0.2432630 -0.75634934  0.4549752 -3.329123e-01  0.30425807  0.4767509 #>  [329,] -0.7166188  0.35562238  0.5061052 -5.866433e-02 -0.58332551 -0.4741638 #>  [330,] -0.5408608 -0.19921071 -0.3141954 -2.898002e-05  0.81356019 -0.3040248 #>  [331,]  0.3013308 -0.59118085 -0.4724480 -2.540308e-02  0.46733273  0.5463092 #>  [332,]  0.2263976  0.20152085 -0.5679579  4.383000e-01  0.25931504 -0.5454100 #>  [333,]  0.3634450 -0.41088772 -0.4042022 -1.554746e-03 -0.36965456 -0.3889069 #>  [334,]  0.3109183  0.43744864  0.5386723 -1.629366e-02  0.49401958 -0.4430992 #>  [335,] -0.6064388  0.66667676  0.6259207 -4.299810e-04 -0.30214479  0.6395514 #>  [336,]  0.2432838  0.24370478 -0.5449970 -3.326603e-01 -0.69568527  0.4767776 #>  [337,] -0.7458613  0.27260227 -0.5307034 -2.175906e-01  0.33421153 -0.5094577 #>  [338,]  0.3291125 -0.50853831  0.5591650 -7.099899e-03 -0.45656269  0.5763806 #>  [339,] -0.7209509  0.34296206  0.5008021 -7.174461e-02  0.40438869 -0.4792360 #>  [340,]  0.1454954  0.05816315  0.3079725  3.374021e-03  0.08845967  0.3327042 #>  [341,] -0.7813137  0.18352135 -0.5787496 -6.672500e-01  0.23955467  0.4441271 #>  [342,] -0.8343932  0.08423494  0.3412140  1.554169e-02  0.12244756  0.3657364 #>  [343,] -0.6776163 -0.52841651  0.5516772 -9.633612e-03  0.52538078  0.5692684 #>  [344,] -0.7212141  0.34219602 -0.4995218 -7.262491e-02 -0.59635775  0.5204541 #>  [345,]  0.1901473  0.12461971  0.3795245  7.865649e-02  0.17201894 -0.5965555 #>  [346,] -0.7665550  0.21868390  0.4417348  5.378682e-01  0.27783355  0.4639683 #>  [347,] -0.5191085 -0.16544741  0.7041262 -1.205366e-05 -0.15706771 -0.2867823 #>  [348,]  0.2274904  0.20413863  0.4335556  4.537580e-01  0.26215930  0.4560556 #>  [349,]  0.4133665 -0.28759110  0.6447908 -1.881623e-04 -0.26268202  0.6573481 #>  [350,] -0.4960151 -0.13488506 -0.2771798 -4.764303e-06 -0.13020711 -0.2691900 #>  [351,] -0.8221749 -0.89685749  0.3605842  3.607588e-02  0.14605594 -0.6151525 #>  [352,]  0.1822571  0.11058811  0.3674640  4.816233e-02  0.15515201  0.3916126 #>  [353,] -0.8362787  0.08152686  0.3381706  1.356967e-02  0.11900067  0.3627249 #>  [354,]  0.2556209  0.27664317 -0.5287791 -2.045404e-01  0.33833800  0.4923928 #>  [355,] -0.7215504 -0.65878228  0.5000642 -7.376502e-02 -0.59731154 -0.4799421 #>  [356,] -0.6174539  0.63936775  0.6151094 -6.850050e-04  0.67419374 -0.3706549 #>  [357,]  0.1505336 -0.93587978 -0.6835354  5.031773e-03  0.09639517  0.3411726 #>  [358,]  0.2545198  0.27363905  0.4697919 -2.141743e-01 -0.66472851 -0.5089814 #>  [359,]  0.3116678  0.43968607 -0.4604679 -1.574027e-02 -0.50391014 -0.4422809 #>  [360,]  0.2049533  0.15361379 -0.5984676  1.791323e-01 -0.79413646  0.4249489 #>  [361,]  0.2044236  0.15251736  0.4007586  1.743766e-01  0.20460618 -0.5758053 #>  [362,]  0.1195761  0.03317592  0.2624286  3.493604e-04  0.05375078  0.2869057 #>  [363,] -0.5610851 -0.23528130 -0.3318893 -6.587733e-05 -0.21761356 -0.3206822 #>  [364,]  0.2927763 -0.61664633 -0.4825651 -3.784649e-02 -0.55673233 -0.4633408 #>  [365,] -0.7039972 -0.60705849 -0.4787272 -3.255727e-02 -0.54763359  0.5403215 #>  [366,]  0.2745140 -0.67018244 -0.5048041 -8.845683e-02  0.39153047 -0.4846025 #>  [367,]  0.3162348  0.45330568  0.5447417 -1.275937e-02 -0.49135335  0.5626753 #>  [368,]  0.2922406  0.38176428 -0.4832049 -3.880482e-02  0.44175476  0.5360485 #>  [369,]  0.1897484  0.12388654  0.3789205  7.679011e-02  0.17114605 -0.5971473 #>  [370,]  0.4178410  0.72211926  0.6489562 -1.563794e-04 -0.25431703 -0.3387259 #>  [371,]  0.2766483  0.33598848 -0.5021588 -8.017234e-02  0.39758031 -0.4820697 #>  [372,]  0.2106294 -0.83436795  0.4097612  2.357948e-01 -0.78046069 -0.5670377 #>  [373,]  0.1943752  0.13254679 -0.6141092  1.008992e-01  0.18140035 -0.5903237 #>  [374,]  0.3003285 -0.59417117  0.5263762 -2.661550e-02  0.46452345 -0.4548117 #>  [375,]  0.3555622 -0.43258480 -0.4123885 -2.191413e-03  0.61125671  0.6033469 #>  [376,]  0.2424814  0.24162047  0.4539322 -3.424604e-01  0.30213078 -0.5242549 #>  [377,]  0.2155562  0.17645760  0.4168131 -7.069761e-01  0.23169818 -0.5601817 #>  [378,] -0.7173107 -0.64640582 -0.4947384 -6.058439e-02  0.41471262  0.5250296 #>  [379,]  0.3903814 -0.34107345  0.6228236 -4.916128e-04 -0.30885048  0.6366283 #>  [380,]  0.1637867  0.08161994  0.3382765  1.363409e-02  0.11911944  0.3628297 #>  [381,]  0.1635275  0.08125175 -0.6621429  1.338064e-02  0.11864952 -0.6375855 #>  [382,]  0.3390728  0.52054299  0.5700587 -4.540028e-03  0.56960852  0.5867170 #>  [383,]  0.2832040 -0.64489725  0.5058892 -5.915028e-02 -0.58382793  0.5256297 #>  [384,] -0.5120688 -0.15557797  0.7099052 -9.081613e-06 -0.14842818 -0.2813440 #>  [385,] -0.7618678  0.23045584  0.4480936 -3.981809e-01  0.29036550  0.4701111 #>  [386,]  0.1600554  0.07642023  0.3322111  1.037782e-02  0.11245202 -0.6431794 #>  [387,]  0.4472486 -0.21985509  0.6754811 -4.692615e-05 -0.20429941 -0.3137425 #>  [388,] -0.6505645 -0.44978450  0.5811583 -2.867658e-03  0.59604364  0.5972364 #>  [389,]  0.3496189 -0.44926570 -0.4186473 -2.844584e-03  0.59650364  0.5974205 #>  [390,]  0.3115473 -0.56067378  0.5393939 -1.582797e-02 -0.50424296  0.5575876 #>  [391,] -0.5199689 -0.16668812 -0.2965851 -1.247828e-05 -0.15815181 -0.2874516 #>  [392,]  0.2295346  0.20907888  0.4363764  4.827499e-01  0.26750732 -0.5412141 #>  [393,]  0.4092240 -0.29678731 -0.3590972 -2.234339e-04 -0.27060691 -0.3463171 #>  [394,]  0.2666073  0.30722004  0.4852858 -1.267295e-01  0.36916600 -0.4941006 #>  [395,]  0.2080270  0.16006081  0.4060023  2.085293e-01  0.21322363 -0.5706964 #>  [396,]  0.2907631  0.37738528 -0.4849734 -4.157571e-02 -0.56242042 -0.4656399 #>  [397,] -0.8708363  0.04135758  0.2796487  8.458066e-04  0.06540604  0.3043010 #>  [398,] -0.7205892 -0.65598452 -0.4987532 -7.055162e-02 -0.59458542  0.5211895 #>  [399,]  0.3499568  0.55168949 -0.4182895 -2.802571e-03 -0.40264962 -0.4022406 #>  [400,]  0.1847757  0.11495903 -0.6286604  5.651995e-02  0.16044350  0.3954184 #>  [401,]  0.3262081  0.48290041  0.5559458 -8.097083e-03 -0.46432185 -0.4266763 #>  [402,]  0.1286903  0.04092542  0.2788091  8.107755e-04  0.06479835 -0.6965449 #>  [403,]  0.2669138 -0.69191245 -0.5143268  8.750021e-01  0.37003087  0.5062710 #>  [404,]  0.1936235  0.13111670 -0.6152362  9.660232e-02  0.17971538  0.4085737 #>  [405,]  0.2814935  0.35009420  0.5038006 -6.404921e-02 -0.58867853  0.5236324 #>  [406,]  0.4596078 -0.19842957 -0.3137932 -2.843602e-05 -0.18576283 -0.3036462 #>  [407,] -0.5199689 -0.16668812 -0.2965851 -1.247828e-05 -0.15815181 -0.2874516 #>  [408,] -0.7287029 -0.67942903  0.4911849  8.975029e-01  0.38241993 -0.4884449 #>  [409,]  0.2199901  0.18650540 -0.5769111  3.499422e-01 -0.75714404 -0.5540888 #>  [410,] -0.6007358 -0.31970105  0.6314282 -3.384641e-04  0.70962646 -0.3552524 #>  [411,]  0.1226788  0.03569375  0.2680509  4.681320e-04  0.05737284  0.2925963 #>  [412,]  0.3039412  0.41661130 -0.4693977 -2.250202e-02  0.47463322  0.5492160 #>  [413,]  0.3799389  0.63271763 -0.3874838 -7.653722e-04 -0.33158354 -0.3731042 #>  [414,] -0.5954006 -0.30728649 -0.3634740 -2.708450e-04 -0.27965973 -0.3504441 #>  [415,] -0.6014686  0.67856893  0.6307239 -3.490108e-04 -0.29186753  0.6440833 #>  [416,]  0.2519044  0.26655214 -0.5336166 -2.384819e-01 -0.67199080  0.4877397 #>  [417,]  0.2518676  0.26645285  0.4663352 -2.388386e-01  0.32790717  0.4876934 #>  [418,]  0.3997760 -0.31849617 -0.3680805 -3.312903e-04 -0.28933319 -0.3547889 #>  [419,] -0.6543489 -0.46054180 -0.4228680 -3.389256e-03  0.58648907  0.5934219 #>  [420,]  0.2117634  0.16809161 -0.5886084  2.483367e-01  0.22231473  0.4345484 #>  [421,]  0.2686622  0.31305005  0.4878782 -1.155262e-01 -0.62503160 -0.4916146 #>  [422,]  0.1534928  0.06779543 -0.6785997  6.328465e-03  0.10123727  0.3460849 #>  [423,]  0.1738814  0.09678102 -0.6456022  2.768701e-02  0.13819786  0.3787543 #>  [424,]  0.2054342  0.15461293 -0.5977661  1.835290e-01  0.20700789  0.4256327 #>  [425,] -0.7099458 -0.62471316  0.5141761 -4.297447e-02  0.43557519  0.5335480 #>  [426,]  0.2762187  0.33474411  0.4973097  9.182222e-01  0.39636227 -0.4825785 #>  [427,]  0.3099665  0.43460670  0.5375784 -1.702517e-02 -0.50861315  0.5558596 #>  [428,]  0.2081735 -0.83962818  0.4062146 -7.899926e-01  0.21357727  0.4295104 #>  [429,] -0.8404432  0.07574173  0.3313962  1.000164e-02  0.11157695  0.3560124 #>  [430,] -0.7933998  0.15705016 -0.5960685  1.945017e-01 -0.79020640  0.4272868 #>  [431,] -0.6234814 -0.37611048 -0.3909060 -8.856559e-04 -0.33926362 -0.3763371 #>  [432,]  0.4172969  0.72095087 -0.3515484 -1.599328e-04 -0.25532342 -0.3392015 #>  [433,]  0.2543695  0.27323014 -0.5304033 -2.155161e-01  0.33485354 -0.5091691 #>  [434,]  0.1917214 -0.87246203  0.3819026  8.640143e-02  0.17548448  0.4057734 #>  [435,]  0.1662232  0.08513225 -0.6577943  1.624121e-02  0.12358582 -0.6332828 #>  [436,] -0.5578897 -0.22927216 -0.3290499 -5.783382e-05  0.78757038  0.6819915 #>  [437,]  0.2330087  0.21760238 -0.5588606 -4.682283e-01 -0.72332455  0.4633927 #>  [438,] -0.7392664 -0.70925861 -0.5221904 -1.643378e-01  0.35263698  0.4987239 #>  [439,]  0.1637101  0.08151100  0.3381526  1.355872e-02  0.11898043  0.3627070 #>  [440,] -0.7064684  0.38559589  0.5183358 -3.653554e-02  0.44539975 -0.4624810 #>  [441,]  0.2749234  0.33099907 -0.5042957 -8.680684e-02 -0.60730935 -0.4841157 #>  [442,]  0.3539210  0.56283525 -0.4141093 -2.354670e-03 -0.39278689 -0.3982822 #>  [443,] -0.7110689 -0.62803457 -0.4871740 -4.528753e-02 -0.56760221  0.5322585 #>  [444,]  0.3625642 -0.41328618  0.5948895 -1.615282e-03  0.62824055 -0.3897660 #>  [445,]  0.1555494  0.07042756 -0.6751919  7.404567e-03  0.10468129  0.3494725 #>  [446,] -0.8540595  0.05867430  0.3087272  3.496957e-03  0.08914500  0.3334576 #>  [447,]  0.2692938 -0.68515166 -0.5113274 -1.122700e-01 -0.62324647 -0.4908529 #>  [448,] -0.6634782 -0.48685907  0.5672900 -5.088247e-03 -0.43702679 -0.4159090 #>  [449,] -0.5724930 -0.25769947  0.6578355 -1.050511e-04 -0.23693454  0.6696403 #>  [450,]  0.2249482 -0.80192575 -0.5699712 -5.820936e-01  0.25555906 -0.5473602 #>  [451,]  0.3531534 -0.43931400 -0.4149162 -2.435269e-03  0.60531375  0.6009539 #>  [452,]  0.1522450  0.06622957  0.3193236  5.748007e-03  0.09917907  0.3440189 #>  [453,]  0.3410427  0.52623430 -0.4278131 -4.158473e-03  0.57469878  0.5887348 #>  [454,]  0.2242149 -0.80365850 -0.5709925  4.076546e-01 -0.74633411  0.4516502 #>  [455,]  0.1195761  0.03317592  0.2624286  3.493604e-04  0.05375078  0.2869057 #>  [456,]  0.3833189 -0.35867462 -0.3841245 -6.628838e-04 -0.32410683  0.6300686 #>  [457,]  0.2925753 -0.61724269  0.5171949 -3.820320e-02 -0.55729984  0.5364302 #>  [458,]  0.3124833 -0.55788001 -0.4595339 -1.515993e-02  0.49833953 -0.4413921 #>  [459,]  0.1992912  0.14211945 -0.6067898  1.329740e-01 -0.80740254  0.4168298 #>  [460,]  0.3328057 -0.49770078  0.5632306 -6.011293e-03  0.55322295  0.5802396 #>  [461,] -0.7492092 -0.73644426  0.4649259  7.505556e-01 -0.67507346  0.4863370 #>  [462,]  0.2782133  0.34053064 -0.5002269 -7.457652e-02 -0.59798175  0.5197793 #>  [463,]  0.4321810 -0.24833154 -0.3379283 -8.673902e-05 -0.22886357  0.6736306 #>  [464,] -0.6824222  0.45730498 -0.4537358 -1.199774e-02  0.51231942 -0.4358769 #>  [465,] -0.8118294  0.12101119  0.3765253  6.977234e-02  0.16771402 -0.5994947 #>  [466,] -0.8516495  0.06149283  0.3127987  4.237833e-03  0.09290886  0.3375195 #>  [467,] -0.6293815 -0.39160828 -0.3968638 -1.140615e-03  0.64722176 -0.3819677 #>  [468,] -0.6880909 -0.55959371 -0.4601914 -1.556623e-02  0.49675583  0.5579822 #>  [469,]  0.1654562  0.08401653 -0.6590286  1.537497e-02  0.12217021 -0.6345035 #>  [470,] -0.6414702  0.57564314 -0.4092914 -1.925080e-03 -0.38149168 -0.3937218 #>  [471,] -0.5191085 -0.16544741  0.7041262 -1.205366e-05 -0.15706771 -0.2867823 #>  [472,] -0.5943714  0.69507119 -0.3624966 -2.594757e-04 -0.27762628 -0.3495224 #>  [473,] -0.5770747 -0.26712975 -0.3463532 -1.268143e-04 -0.24505720 -0.3343060 #>  [474,]  0.2500994  0.26170178 -0.5359809 -2.564349e-01  0.32301554 -0.5145359 #>  [475,]  0.2608951 -0.70880931  0.4780165  8.368147e-01 -0.64690976  0.4989226 #>  [476,] -0.7613142  0.23186428  0.4488400 -3.908655e-01  0.29185603  0.4708318 #>  [477,]  0.2994960 -0.59665372  0.5253977 -2.766693e-02 -0.53781208  0.5442555 #>  [478,]  0.2183738 -0.81719048 -0.5791913  3.286805e-01  0.23876564  0.4436985 #>  [479,]  0.2774885 -0.66157464 -0.5011208 -7.711953e-02 -0.60003715 -0.4810761 #>  [480,]  0.1736179  0.09636471  0.3539821  2.719491e-02  0.13768073 -0.6216555 #>  [481,]  0.3593097 -0.42220639  0.5915194 -1.860768e-03  0.62040098 -0.3929545 #>  [482,]  0.2646569  0.30171677 -0.5171858 -1.382666e-01  0.36366730 -0.4964718 #>  [483,]  0.3742982  0.61809657  0.6068601 -9.739471e-04 -0.34431028  0.6215519 #>  [484,]  0.2442672  0.24626947  0.4563126 -3.208735e-01  0.30699675  0.4780403 #>  [485,]  0.2550923  0.27519945 -0.5294647 -2.091214e-01  0.33686517  0.4917335 #>  [486,]  0.4424834 -0.22857817 -0.3287195 -5.696182e-05 -0.21183074 -0.3176974 #>  [487,]  0.2729665 -0.67463893  0.4932700 -9.496718e-02 -0.61285358 -0.4864472 #>  [488,]  0.1709439  0.09220312 -0.6502508  2.263175e-02  0.13249098  0.3741694 #>  [489,]  0.2232213  0.19400550 -0.5723792  3.938543e-01 -0.74889158 -0.5496938 #>  [490,]  0.2463977  0.25186324 -0.5408603 -2.962245e-01  0.31282652 -0.5192351 #>  [491,] -0.6076786  0.66366802  0.6247154 -4.530142e-04  0.69525276 -0.3615861 #>  [492,]  0.1932109  0.13033555  0.3841443  9.430872e-02  0.17879363 -0.5920324 #>  [493,]  0.2424592  0.24156272 -0.5460976 -3.427347e-01  0.30207022 -0.5242836 #>  [494,]  0.3332788 -0.49631706 -0.4362510 -5.884825e-03  0.55446951 -0.4192684 #>  [495,]  0.1571196  0.07248041  0.3273976  8.337238e-03  0.10735404 -0.6479555 #>  [496,]  0.3498699  0.55144390 -0.4183815 -2.813315e-03 -0.40286730 -0.4023277 #>  [497,]  0.2544682  0.27349861 -0.5302751 -2.146343e-01  0.33512795 -0.5090458 #>  [498,]  0.1820704  0.11026805 -0.6328244  4.758839e-02 -0.84523684 -0.6086707 #>  [499,]  0.1999327  0.14339673 -0.6058411  1.376933e-01  0.19408104 -0.5822438 #>  [500,]  0.3063935  0.42393532  0.5334525 -2.008368e-02  0.48146941 -0.4480690 #>  [501,]  0.3288147 -0.50941467  0.5588359 -7.196067e-03 -0.45735575 -0.4239319 #>  [502,]  0.2600369 -0.71119389 -0.5230838 -1.693894e-01  0.35068295  0.4978658 #>  [503,] -0.8005300  0.14247478  0.3934748  1.342764e-01 -0.80698959  0.4170882 #>  [504,]  0.2799140 -0.65451789  0.5018649 -6.892401e-02  0.40684177  0.5217808 #>  [505,]  0.1967586 -0.86285970  0.3894504  1.155667e-01  0.18679085 -0.5868432 #>  [506,]  0.2738017  0.32776428 -0.5056898 -9.139918e-02  0.38951214 -0.4854508 #>  [507,]  0.3398600  0.52281986 -0.4290898 -4.383418e-03  0.57164612  0.5875244 #>  [508,]  0.2383203  0.23093388  0.4483473 -3.956892e-01  0.29087161  0.4703561 #>  [509,] -0.5630324  0.76099904 -0.3336279 -7.132508e-05 -0.22082111 -0.3223193 #>  [510,]  0.2231614  0.19386509 -0.5724629  3.930259e-01 -0.74904550 -0.5497749 #>  [511,]  0.2057667  0.15530588 -0.5972814  1.866132e-01  0.20780074  0.4261050 #>  [512,] -0.7163969  0.35627331  0.5063754 -5.806131e-02  0.41730362  0.5260946 #>  [513,]  0.4099767  0.70489830 -0.3583885 -2.165584e-04 -0.26915406 -0.3456489 #>  [514,]  0.3258463  0.48183189 -0.4444565 -8.230991e-03  0.53470790  0.5729415 #>  [515,]  0.1789083  0.10493327  0.3622727  3.874844e-02 -0.85174660 -0.6134910 #>  [516,] -0.6265770 -0.38420001 -0.3940232 -1.011181e-03  0.65368739  0.6207172 #>  [517,] -0.4880329 -0.12548850 -0.2708912 -3.456854e-06 -0.12187564 -0.2632711 #>  [518,]  0.2072642  0.15844743  0.4048962  2.009481e-01 -0.78861299 -0.5717736 #>  [519,]  0.3185013  0.46005281  0.5473086 -1.150123e-02  0.51483919  0.5651161 #>  [520,]  0.3081633  0.42922145  0.5355001 -1.850433e-02  0.48638838 -0.4461190 #>  [521,] -0.5712085 -0.25509957 -0.3409966 -9.965910e-05 -0.23469486  0.6707405 #>  [522,]  0.2376237 -0.77083466 -0.5525930  5.950483e-01  0.28899814 -0.5305517 #>  [523,]  0.1833229  0.11242538  0.3691070  5.155611e-02  0.15738047  0.3932265 #>  [524,]  0.2811567  0.34910976  0.5033884 -6.505952e-02  0.41036635  0.5232382 #>  [525,] -0.6169939  0.64053387 -0.3844344 -6.717468e-04  0.67520612 -0.3702241 #>  [526,]  0.1945576  0.13289514 -0.6138361  1.019651e-01  0.18181028  0.4099434 #>  [527,] -0.6987810 -0.59151457  0.5274209 -2.553554e-02 -0.53298057 -0.4538158 #>  [528,]  0.2638920  0.29956679 -0.5181581 -1.430425e-01  0.36151335  0.5025951 #>  [529,]  0.3204543 -0.53414213 -0.4504894 -1.051936e-02  0.52015272  0.5672094 #>  [530,] -0.7625951  0.22861106 -0.5528886  5.921206e-01  0.28841037 -0.5308372 #>  [531,]  0.3754714 -0.37883641 -0.3919583 -9.262246e-04  0.65836234 -0.3773314 #>  [532,]  0.2058104 -0.84460303  0.4027822  1.870207e-01  0.20790491 -0.5738331 #>  [533,]  0.2020274  0.14761185  0.3972462  1.540005e-01  0.19896003 -0.5792308 #>  [534,]  0.2926919  0.38310326  0.5173342 -3.799585e-02  0.44302940  0.5365631 #>  [535,]  0.1868416  0.11862000  0.3745004  6.429515e-02  0.16484912  0.3985198 #>  [536,]  0.1657085  0.08438260  0.3413778  1.565519e-02  0.12263500  0.3658984 #>  [537,]  0.1970893  0.13778476 -0.6100573  1.177311e-01  0.18754452 -0.5863621 #>  [538,] -0.8402558  0.07599637 -0.6682973  1.014157e-02  0.11190551 -0.6436836 #>  [539,]  0.4876990 -0.15589550 -0.2902842 -9.166763e-06 -0.14870660 -0.2815223 #>  [540,] -0.5691991 -0.25107116 -0.3391753 -9.178130e-05 -0.23122420 -0.3275439 #>  [541,]  0.4098184 -0.29545560  0.6414626 -2.179860e-04 -0.26945908 -0.3457894 #>  [542,] -0.7229350  0.33719652  0.4983562 -7.864406e-02  0.39876187 -0.4815767 #>  [543,]  0.1370954  0.04905217  0.2935594  1.685767e-03  0.07609414  0.3182820 #>  [544,]  0.1784643  0.10419704 -0.6384188  3.763237e-02 -0.85264927 -0.6141713 #>  [545,]  0.2358874  0.22478334  0.4450568  5.715943e-01  0.28434341  0.4671784 #>  [546,]  0.1809934  0.10843320  0.3655102  4.439514e-02  0.15253027 -0.6103075 #>  [547,]  0.2704678  0.31819847  0.4901462 -1.064426e-01  0.38007337  0.5105596 #>  [548,]  0.2348369  0.22215067 -0.5563696 -4.428187e-01  0.28153804 -0.5341998 #>  [549,]  0.2317527  0.21450248  0.4394218 -4.858713e-01  0.27334959  0.4617319 #>  [550,]  0.3378975 -0.48286311  0.5687849 -4.784651e-03  0.56655737  0.5855089 #>  [551,]  0.2572159  0.28101528 -0.5267154 -1.912081e-01  0.34278845 -0.5056235 #>  [552,]  0.2522538 -0.73250519 -0.5331601  7.648818e-01 -0.67102249 -0.5118210 #>  [553,] -0.8490130  0.06467468  0.3172232  5.212988e-03  0.09712822  0.3419280 #>  [554,] -0.6138721 -0.35161097  0.6186504 -5.884423e-04 -0.31797930  0.6326888 #>  [555,]  0.4876990 -0.15589550 -0.2902842 -9.166763e-06 -0.14870660 -0.2815223 #>  [556,]  0.2076115  0.15918097  0.4054001  2.043768e-01  0.21222248 -0.5712828 #>  [557,] -0.6773146 -0.52752219  0.5520151 -9.502199e-03  0.52619626  0.5695896 #>  [558,]  0.3278858  0.48784976 -0.4421922 -7.504697e-03 -0.45983304 -0.4249081 #>  [559,]  0.1763025  0.10065705 -0.6417970  3.259856e-02  0.14299551  0.3825033 #>  [560,]  0.3524966  0.55884353 -0.4156075 -2.506479e-03 -0.39631544  0.6002993 #>  [561,] -0.6936594 -0.57622272  0.5333911 -2.013295e-02  0.48132216  0.5518726 #>  [562,]  0.1865951  0.11817958  0.3741241  6.332112e-02  0.16432035 -0.6018493 #>  [563,] -0.7830363  0.17961615  0.4188124  3.105965e-01 -0.76478144  0.4417603 #>  [564,]  0.1825366  0.11106820  0.3678953  4.903277e-02  0.15573492 -0.6079637 #>  [565,] -0.6857802  0.44730004 -0.4575506 -1.399603e-02 -0.49688085  0.5604949 #>  [566,]  0.4093932 -0.29640773 -0.3589377 -2.218689e-04 -0.27027974 -0.3461668 #>  [567,] -0.6039074 -0.32723232  0.6283728 -3.865917e-04  0.70312072 -0.3581349 #>  [568,]  0.3512763  0.55541220 -0.4168944 -2.644503e-03  0.60064814 -0.4009193 #>  [569,]  0.1597987  0.07607049 -0.6682082  1.018258e-02  0.11200111 -0.6435953 #>  [570,]  0.2379854  0.23008278  0.4478954 -4.001316e-01 -0.71002962 -0.5300802 #>  [571,] -0.7347253  0.30345681 -0.5164017 -1.345136e-01  0.36540818  0.5042806 #>  [572,] -0.7690746  0.21247210  0.4382879 -4.975498e-01  0.27116599  0.4606352 #>  [573,]  0.3337189  0.50496962  0.5642310 -5.769598e-03  0.55562808 -0.4188111 #>  [574,]  0.3742898  0.61807467  0.6068516 -9.742960e-04 -0.34432937 -0.3784560 #>  [575,]  0.1290697  0.04127158 -0.7205179  8.387456e-04  0.06528518  0.3041332 #>  [576,]  0.3142771 -0.55252904  0.5425147 -1.395920e-02  0.50327667 -0.4394430 #>  [577,]  0.3352846 -0.49046104 -0.4340581 -5.378174e-03  0.55973809 -0.4171877 #>  [578,]  0.4221355 -0.26878004 -0.3470789 -1.310045e-04 -0.24647857  0.6650103 #>  [579,] -0.6502113 -0.44878558 -0.4184675 -2.823390e-03 -0.40307072  0.5975908 #>  [580,] -0.7094428  0.37677561 -0.4852203 -4.197723e-02  0.43699748 -0.4658757 #>  [581,]  0.2894526  0.37350710 -0.4865467 -4.419847e-02 -0.56612664 -0.4671423 #>  [582,]  0.4673749 -0.18583152 -0.3071745 -2.077848e-05 -0.17482975  0.7025831 #>  [583,]  0.1710597  0.09238099 -0.6500669  2.281394e-02  0.13271355  0.3743508 #>  [584,]  0.1574796 -0.92704359  0.3279898  8.565829e-03  0.10797214 -0.6473675 #>  [585,]  0.2121117  0.16885099 -0.5881084  2.522676e-01  0.22317007 -0.5649654 #>  [586,] -0.5496229 -0.21426916 -0.3217810 -4.132864e-05 -0.19947245  0.6888349 #>  [587,]  0.2284592  0.20647301  0.4348942  4.674943e-01  0.26468954  0.4573514 #>  [588,] -0.6971896  0.41323506 -0.4707170 -2.371502e-02  0.47147351  0.5479589 #>  [589,]  0.2441322  0.24591674  0.4561330  6.775234e-01 -0.69337177 -0.5221328 #>  [590,] -0.8708363  0.04135758  0.2796487  8.458066e-04  0.06540604  0.3043010 #>  [591,] -0.6392649  0.58171130  0.5929981 -1.748855e-03  0.62384626  0.6084446 #>  [592,]  0.3296684  0.49309656  0.5597790 -6.923908e-03 -0.45508392  0.5769635 #>  [593,]  0.3405134 -0.47529295  0.5716158 -4.257650e-03  0.57333379 -0.4118066 #>  [594,] -0.7234785  0.33562105  0.4976844 -8.064306e-02  0.39722076 -0.4822199 #>  [595,]  0.4424717 -0.22859989  0.6712702 -5.698894e-05 -0.21184948 -0.3177071 #>  [596,]  0.4168171 -0.28008226  0.6480062 -1.631342e-04 -0.25621334 -0.3396213 #>  [597,] -0.7989938  0.14554836  0.3957431  1.458773e-01  0.19657477  0.4193025 #>  [598,]  0.2315092  0.21390391  0.4390883 -4.893047e-01  0.27270629 -0.5385906 #>  [599,] -0.5997257 -0.31732609  0.6323973 -3.244559e-04  0.71167698 -0.3543381 #>  [600,]  0.2392356 -0.76673332  0.4495804 -3.836604e-01  0.29333834  0.4715464 #>  [601,]  0.4543976 -0.20725287 -0.3182854 -3.511216e-05 -0.19340405 -0.3078745 #>  [602,]  0.3194868 -0.53701679 -0.4515791 -1.099454e-02  0.51752311 -0.4338264 #>  [603,]  0.2298216 -0.79022292 -0.5632286  4.868202e-01  0.26826111  0.4591681 #>  [604,] -0.7354822  0.30132556  0.4826376 -1.391241e-01  0.36327561 -0.4966413 #>  [605,]  0.2536119  0.27117115 -0.5313890 -2.223842e-01  0.33274703  0.4898828 #>  [606,]  0.3536196 -0.43800809 -0.4144260 -2.385984e-03  0.60646796 -0.3985820 #>  [607,]  0.1479178  0.06098050  0.3120697  4.094951e-03  0.09222656  0.3367925 #>  [608,] -0.5560140 -0.22579941 -0.3273909 -5.358252e-05 -0.20943240 -0.3164465 #>  [609,]  0.3061167  0.42310846  0.5331315 -2.034287e-02  0.48069885  0.5516253 #>  [610,]  0.3301935  0.49463963  0.5603582 -6.761791e-03 -0.45368904 -0.4224867 #>  [611,]  0.2598955  0.28841395 -0.5232652 -1.704304e-01 -0.64971334 -0.5023085 #>  [612,]  0.2731584 -0.67408715 -0.5064908 -9.413587e-02  0.38768993  0.5137820 #>  [613,]  0.1370954  0.04905217  0.2935594  1.685767e-03  0.07609414  0.3182820 #>  [614,] -0.5944100 -0.30501713 -0.3625333 -2.598937e-04 -0.27770244  0.6504430 #>  [615,]  0.2581949 -0.71628924 -0.5254525 -1.833842e-01  0.34552496 -0.5044098 #>  [616,] -0.4880329 -0.12548850 -0.2708912 -3.456854e-06 -0.12187564 -0.2632711 #>  [617,]  0.2721087 -0.67710272 -0.5078005 -9.876899e-02  0.38471721  0.5125273 #>  [618,]  0.2296764  0.20942377  0.4365716  4.847615e-01  0.26787973 -0.5410252 #>  [619,]  0.3802585  0.63353653 -0.3871652 -7.550231e-04 -0.33087175 -0.3728032 #>  [620,]  0.2068451  0.15756471  0.4042875 -8.031374e-01  0.21038068  0.4276335 #>  [621,]  0.2445881  0.24710872  0.4567393  6.829176e-01  0.30787313 -0.5215484 #>  [622,] -0.8368176  0.08076313  0.3372982  1.304990e-02  0.11802539 -0.6381389 #>  [623,]  0.4479711 -0.21855531 -0.3238853 -4.556906e-05 -0.20317655  0.6868540 #>  [624,]  0.4486677 -0.21730752  0.6767250 -4.429794e-05 -0.20209842  0.6874285 #>  [625,] -0.5954006 -0.30728649 -0.3634740 -2.708450e-04 -0.27965973 -0.3504441 #>  [626,]  0.2692170  0.31462970 -0.5114239 -1.126611e-01 -0.62346339 -0.4909454 #>  [627,]  0.3703613 -0.39229137  0.6028749 -1.153304e-03  0.64662507 -0.3822147 #>  [628,]  0.1940639  0.13195337  0.3854242  9.910076e-02  0.18070155 -0.5907801 #>  [629,]  0.2610507  0.29162358  0.4782157 -1.620820e-01  0.35352680 -0.5008861 #>  [630,] -0.8523039  0.06071904  0.3116957  4.023474e-03  0.09187804  0.3364196 #>  [631,]  0.3525212 -0.44108731  0.5844184 -2.503771e-03 -0.39625427  0.6003239 #>  [632,]  0.1526023  0.06667552  0.3199189  5.908965e-03  0.09976596  0.3446113 #>  [633,] -0.6882063 -0.55993815  0.5396764 -1.564922e-02 -0.50356264 -0.4421436 #>  [634,] -0.5906334 -0.29646754  0.6410371 -2.221148e-04 -0.27033129  0.6538095 #>  [635,]  0.1834076  0.11257223  0.3692374  5.183475e-02  0.15755832  0.3933546 #>  [636,] -0.5731312 -0.25899830  0.6572542 -1.078391e-04 -0.23805335 -0.3309073 #>  [637,] -0.5722940  0.74270447 -0.3419834 -1.041970e-04 -0.23658658 -0.3301891 #>  [638,]  0.3599631 -0.42040838  0.5921978 -1.808581e-03 -0.37801739 -0.3923126 #>  [639,]  0.2683568 -0.68781837  0.4874937 -1.171316e-01 -0.62589444  0.5080168 #>  [640,]  0.3482583 -0.45312035  0.5799092 -3.020426e-03 -0.40691585 -0.4039468 #>  [641,] -0.8467318  0.06751187 -0.6789730  6.220152e-03  0.10086508 -0.6542864 #>  [642,]  0.4004924 -0.31681466  0.6326064 -3.215089e-04 -0.28788151  0.6458591 #>  [643,]  0.2830849  0.35475353  0.5057440 -5.947916e-02 -0.58416566 -0.4745091 #>  [644,]  0.2961670 -0.60656990 -0.4785326 -3.230893e-02 -0.54717117  0.5405071 #>  [645,]  0.3903169  0.65876820 -0.3772395 -4.929524e-04 -0.30898756 -0.3634312 #>  [646,]  0.3413099 -0.47299551  0.5724749 -4.109322e-03 -0.42461311 -0.4109922 #>  [647,]  0.3114348  0.43899045 -0.4607351 -1.591024e-02  0.49544644  0.5574648 #>  [648,]  0.1614786  0.07837794  0.3345314  1.152435e-02  0.11497026  0.3591205 #>  [649,]  0.1591157  0.07514481  0.3306745  9.679433e-03  0.11080613 -0.6447034 #>  [650,]  0.2944640  0.38836555 -0.4805543 -3.498014e-02  0.44802977  0.5385782 #>  [651,]  0.1575622  0.07306595 -0.6718743  8.619107e-03  0.10811429 -0.6472327 #>  [652,] -0.7361156  0.29954565  0.4818323 -1.430903e-01  0.36149215 -0.4974141 #>  [653,] -0.5446528 -0.20562222 -0.3174635 -3.378722e-05 -0.19199274  0.6928992 #>  [654,]  0.2849563  0.36024779  0.5080209 -5.451377e-02  0.42113976 -0.4723325 #>  [655,]  0.2444771  0.24681821  0.4565917  6.816090e-01 -0.69243016  0.4783094 #>  [656,]  0.2324841  0.21630520 -0.5595773 -4.755817e-01  0.27528488  0.4626997 #>  [657,] -0.5680457  0.75122014 -0.3381328 -8.754727e-05 -0.22924990 -0.3265620 #>  [658,]  0.2333334  0.21840710  0.4415826 -4.636890e-01  0.27753726 -0.5361789 #>  [659,]  0.1805210  0.10763413 -0.6352218  4.305533e-02  0.15155588 -0.6110271 #>  [660,]  0.3635378 -0.41063536 -0.4041066 -1.548504e-03  0.63056685 -0.3888164 #>  [661,] -0.6128903  0.65083841 -0.3803832 -5.644870e-04 -0.31585611 -0.3663989 #>  [662,]  0.1620966  0.07923785 -0.6644637  1.205763e-02  0.11607333  0.3601162 #>  [663,] -0.7525648  0.25460582  0.4605115  7.153247e-01 -0.68432502  0.4820865 #>  [664,] -0.7541781  0.25034633 -0.5416230 -3.027642e-01  0.31124828  0.4800300 #>  [665,]  0.3901131 -0.34173241 -0.3774386 -4.972095e-04  0.69057905 -0.3636192 #>  [666,]  0.4046207 -0.30723778 -0.3634538 -2.706056e-04 -0.27961771 -0.3504251 #>  [667,]  0.4876990 -0.15589550 -0.2902842 -9.166763e-06 -0.14870660 -0.2815223 #>  [668,]  0.2812385 -0.65065121 -0.4965115 -6.481273e-02 -0.58940168  0.5233340 #>  [669,]  0.1195761  0.03317592  0.2624286  3.493604e-04  0.05375078  0.2869057 #>  [670,]  0.1370954  0.04905217  0.2935594  1.685767e-03  0.07609414  0.3182820 #>  [671,]  0.1931885 -0.86970686  0.3841106  9.418526e-02  0.17874355 -0.5920654 #>  [672,]  0.1556933  0.07061402 -0.6749542  7.485803e-03  0.10492454  0.3497086 #>  [673,]  0.3040364  0.41689560  0.5307133 -2.240281e-02 -0.52510096  0.5493217 #>  [674,]  0.4120577 -0.29047521 -0.3564343 -1.986476e-04 -0.26516706 -0.3438067 #>  [675,] -0.6741770 -0.51823677  0.5555176 -8.239670e-03  0.53464554 -0.4270830 #>  [676,]  0.3818209 -0.36247493 -0.3856105 -7.064507e-04 -0.32740642 -0.3713348 #>  [677,]  0.3129871 -0.55637690  0.5410422 -1.481243e-02 -0.50027240  0.5591561 #>  [678,]  0.1195761  0.03317592  0.2624286  3.493604e-04  0.05375078  0.2869057 #>  [679,]  0.2840592 -0.64238777  0.5069307 -5.684070e-02  0.41859694  0.5266254 #>  [680,]  0.1903405 -0.87502413 -0.6201830  7.957457e-02 -0.82755735 -0.5962690 #>  [681,]  0.2414577  0.23897230 -0.5474368 -3.551929e-01  0.29935041  0.4744246 #>  [682,]  0.3748714 -0.38040338 -0.3925623 -9.503258e-04  0.65699708 -0.3779022 #>  [683,] -0.8591335  0.05301743  0.3000699  2.312079e-03  0.08151185  0.3248044 #>  [684,]  0.2430027  0.24297382 -0.5453719 -3.360747e-01 -0.69645074  0.4764162 #>  [685,] -0.6247678  0.62053924  0.6078010 -9.357581e-04 -0.34218158 -0.3775589 #>  [686,]  0.2790215  0.34288175 -0.4992319 -7.183639e-02  0.40431045 -0.4792685 #>  [687,]  0.4603353 -0.19722147 -0.3131692 -2.761165e-05 -0.18471563 -0.3030589 #>  [688,]  0.1873723  0.11957157  0.3753099  6.643635e-02 -0.83400962 -0.6006864 #>  [689,] -0.7973424  0.14889341 -0.6018280 -8.408200e-01  0.20043836 -0.5783276 #>  [690,]  0.3285317 -0.51024791  0.5585228 -7.288708e-03  0.54188996 -0.4242292 #>  [691,]  0.2786520  0.34180640 -0.4996866 -7.307683e-02 -0.59673754 -0.4797036 #>  [692,]  0.1482737  0.06140160 -0.6873307  4.212114e-03  0.09278742  0.3373904 #>  [693,]  0.4379124 -0.23719077 -0.3327836 -6.862719e-05 -0.21926025  0.6784758 #>  [694,] -0.6118064 -0.34646932  0.6206814 -5.391950e-04  0.68647674 -0.3653937 #>  [695,]  0.2221508  0.19150433  0.4261232 -6.208737e-01  0.24836340  0.4488543 #>  [696,]  0.3602596  0.58040637 -0.4074947 -1.785397e-03  0.62269907 -0.3920216 #>  [697,] -0.8708363  0.04135758  0.2796487  8.458066e-04  0.06540604  0.3043010 #>  [698,]  0.2678227  0.31066452 -0.5131794 -1.199886e-01  0.37259697  0.5073713 #>  [699,]  0.1226788  0.03569375  0.2680509  4.681320e-04  0.05737284  0.2925963 #>  [700,]  0.2086805  0.16145025  0.4069485  2.151741e-01 -0.78519747 -0.5697751 #>  [701,] -0.5719355 -0.25656880  0.6583427 -1.026757e-04 -0.23596054 -0.3298819 #>  [702,]  0.3729846 -0.38535318 -0.3944662 -1.030377e-03 -0.34731839  0.6202985 #>  [703,]  0.1882178  0.12109669  0.3765971  6.997416e-02  0.16781627  0.4005757 #>  [704,] -0.7718925  0.20562408 -0.5655914  4.625055e-01 -0.73622995 -0.5431186 #>  [705,]  0.3350250  0.50878212  0.5656586 -5.441141e-03 -0.44094220 -0.4174565 #>  [706,] -0.5944454 -0.30509796  0.6374332 -2.602768e-04 -0.27777215 -0.3495886 #>  [707,] -0.8444980  0.07036616  0.3247298  7.377965e-03  0.10460117  0.3493947 #>  [708,] -0.6812523 -0.53921427 -0.4524131 -1.137233e-02 -0.48448922 -0.4346193 #>  [709,]  0.1290697  0.04127158 -0.7205179  8.387456e-04  0.06528518  0.3041332 #>  [710,]  0.1319379  0.04395099 -0.7154520  1.080908e-03  0.06903572  0.3092321 #>  [711,]  0.3736552  0.61641011 -0.3937887 -1.001161e-03  0.65421943  0.6209388 #>  [712,] -0.6360726  0.59042323 -0.4037054 -1.522579e-03 -0.36850459  0.6115631 #>  [713,]  0.3892043 -0.34397029  0.6216721 -5.166554e-04 -0.31135868  0.6355415 #>  [714,]  0.2089493  0.16202366  0.4073372  2.179471e-01  0.21545339 -0.5693967 #>  [715,]  0.4412476 -0.23088293 -0.3298149 -5.990209e-05  0.78618054 -0.3187288 #>  [716,]  0.4543976 -0.20725287 -0.3182854 -3.511216e-05 -0.19340405 -0.3078745 #>  [717,]  0.1226788  0.03569375  0.2680509  4.681320e-04  0.05737284  0.2925963 #>  [718,]  0.2212176 -0.81066269  0.4248147 -6.335741e-01  0.24597943  0.4475854 #>  [719,]  0.1755549  0.09945021  0.3570305  3.100410e-02  0.14150502  0.3813485 #>  [720,]  0.3302665 -0.50514593  0.5604387 -6.739562e-03 -0.45349526 -0.4224103 #>  [721,]  0.2797283 -0.65505930 -0.4983631 -6.952038e-02  0.40631507  0.5215627 #>  [722,]  0.2106096  0.16558918  0.4097326  2.355789e-01  0.21949087  0.4329345 #>  [723,]  0.4665498 -0.18713864  0.6921268 -2.148196e-05 -0.17596552 -0.2980745 #>  [724,] -0.7220971  0.33962865  0.4993904 -7.565554e-02 -0.59886204 -0.4805869 #>  [725,]  0.2613904  0.29256973 -0.5213494 -1.596948e-01  0.35448050  0.4995315 #>  [726,]  0.1773770  0.10240728 -0.6401155  3.501959e-02  0.14515191  0.3841588 #>  [727,]  0.2445348  0.24696905  0.4566684 -3.177111e-01 -0.69227267 -0.5216168 #>  [728,]  0.1319379  0.04395099 -0.7154520  1.080908e-03  0.06903572  0.3092321 #>  [729,]  0.2515062  0.26547927 -0.5341373 -2.423596e-01 -0.67309372  0.4872386 #>  [730,] -0.5509045  0.78345603 -0.3229007 -4.353515e-05 -0.20143861 -0.3122191 #>  [731,]  0.2899708  0.37503991 -0.4859241 -4.314220e-02  0.43533917  0.5334523 #>  [732,] -0.5199689 -0.16668812 -0.2965851 -1.247828e-05 -0.15815181 -0.2874516 #>  [733,]  0.2161344  0.17775155 -0.5823648  3.001819e-01  0.23314181 -0.5593831 #>  [734,]  0.1637867  0.08161994  0.3382765  1.363409e-02  0.11911944  0.3628297 #>  [735,]  0.2716792  0.32166559  0.4916628 -1.007258e-01  0.38350133  0.5120130 #>  [736,] -0.6059979  0.66774283  0.6263487 -4.220800e-04 -0.30122291  0.6399552 #>  [737,]  0.1691611  0.08949158 -0.6530888  1.998890e-02  0.12908931  0.3713674 #>  [738,]  0.2099547  0.16417791  0.4087890  2.285212e-01  0.21789477  0.4320163 #>  [739,]  0.3107011 -0.56319997  0.5384228 -1.645775e-02 -0.50658097 -0.4433366 #>  [740,]  0.1851523  0.11562134 -0.6280830  5.787304e-02  0.16124228 -0.6040148 #>  [741,]  0.3493894  0.55008485 -0.4188906 -2.873497e-03  0.59592779 -0.4028099 #>  [742,]  0.1851012  0.11553132  0.3718387  5.768775e-02 -0.83886624 -0.6040917 #>  [743,] -0.6084343  0.66182605 -0.3760206 -4.676665e-04 -0.30634096  0.6377192 #>  [744,]  0.2180627  0.18210266  0.4203690 -6.753474e-01  0.23798152 -0.5567284 #>  [745,] -0.7934663  0.15691064 -0.5961651  1.938642e-01  0.20963434 -0.5728074 #>  [746,] -0.5120688 -0.15557797  0.7099052 -9.081613e-06 -0.14842818 -0.2813440 #>  [747,]  0.2623365  0.29520970  0.4798596 -1.532075e-01 -0.64286188  0.5006923 #>  [748,]  0.2963610 -0.60599273  0.5216971 -3.201806e-02 -0.54662509 -0.4592737 #>  [749,]  0.2036292  0.15088121  0.3995965  1.674156e-01 -0.79727323 -0.5769384 #>  [750,]  0.3662366  0.59667003  0.5986661 -1.377796e-03 -0.36302986 -0.3861941 #>  [751,]  0.2606738  0.29057517 -0.5222670 -1.647661e-01 -0.64753074 -0.5013497 #>  [752,]  0.1458423  0.05856133 -0.6914391  3.469494e-03  0.08899360 -0.6667084 #>  [753,]  0.2518111  0.26630044 -0.5337387 -2.393869e-01  0.32775054  0.4876223 #>  [754,]  0.1842931  0.11411358 -0.6294012  5.482640e-02  0.15942270  0.3946913 #>  [755,]  0.2503295  0.26231831  0.4643210 -2.540925e-01  0.32365135 -0.5142451 #>  [756,]  0.3457142  0.53963842  0.5771994 -3.379800e-03 -0.41335060 -0.4065142 #>  [757,]  0.3459704  0.54036954 -0.4225271 -3.341703e-03 -0.41270024  0.5937450 #>  [758,]  0.3539210  0.56283525 -0.4141093 -2.354670e-03 -0.39278689 -0.3982822 #>  [759,] -0.4960151 -0.13488506 -0.2771798 -4.764303e-06 -0.13020711 -0.2691900 #>  [760,] -0.8073008  0.12937045  0.3833751  9.152689e-02  0.17765348 -0.5927852 #>  [761,]  0.3801749 -0.36667742 -0.3872485 -7.577143e-04  0.66894229 -0.3728819 #>  [762,] -0.4880329 -0.12548850 -0.2708912 -3.456854e-06 -0.12187564 -0.2632711 #>  [763,]  0.1473056  0.06026034  0.3110367  3.900396e-03  0.09126609 -0.6642378 #>  [764,]  0.2872240 -0.63307460  0.5107674 -4.904306e-02 -0.57243520  0.5302920 #>  [765,] -0.5987413 -0.31502238 -0.3666599 -3.113716e-04 -0.28633444 -0.3534489 #>  [766,] -0.7226844  0.33792370 -0.5013342 -7.773828e-02 -0.60052733  0.5187196 #>  [767,]  0.3006487  0.40678415  0.5267522 -2.622187e-02 -0.53457860  0.5455467 #>  [768,]  0.2032892  0.15018397 -0.6009016 -8.355009e-01  0.20192473 -0.5774241 #>  [769,]  0.1911628  0.12649782  0.3810597  8.358251e-02  0.17425086 -0.5950519 #>  [770,] -0.5129648 -0.15680648 -0.2908263 -9.414708e-06 -0.14950522 -0.2820325 #>  [771,] -0.7361332  0.29949626  0.4818100 -1.432018e-01  0.36144263 -0.4974355 #>  [772,]  0.1921479 -0.87166464 -0.6174547  8.860664e-02  0.17642897  0.4064026 #>  [773,] -0.7574935 -0.75831453 -0.5460343  6.578482e-01  0.30219895  0.4757773 #>  [774,] -0.4960151 -0.13488506 -0.2771798 -4.764303e-06 -0.13020711 -0.2691900 #>  [775,] -0.7090605 -0.62209202  0.5152381 -4.123459e-02 -0.56192151 -0.4654379 #>  [776,]  0.1861967  0.11746983  0.3735154  6.177396e-02  0.16346755  0.3975536 #>  [777,]  0.1506296  0.06423737  0.3166253  5.069653e-03  0.09655014  0.3413326 #>  [778,] -0.4880329 -0.12548850 -0.2708912 -3.456854e-06 -0.12187564 -0.2632711 #>  [779,]  0.4673749 -0.18583152 -0.3071745 -2.077848e-05 -0.17482975  0.7025831 #>  [780,] -0.7739572  0.20067447  0.4315499  4.332943e-01 -0.74160613 -0.5458867 #>  [781,] -0.6262298 -0.38328794  0.6063274 -9.962368e-04  0.65448271  0.6210486 #>  [782,]  0.2321861 -0.78443020 -0.5599849 -4.797697e-01  0.27449579  0.4623056 #>  [783,] -0.7720742  0.20518615  0.4341576  4.599289e-01  0.26329543 -0.5433616 #>  [784,]  0.2293452  0.20861888 -0.5638843 -5.199360e-01  0.26701043 -0.5414664 #>  [785,]  0.2560016  0.27768461  0.4717142 -2.012914e-01  0.33939943  0.4928670 #>  [786,]  0.2612569  0.29219782  0.4784797 -1.606292e-01  0.35410571 -0.5006326 #>  [787,]  0.3272804  0.48606485  0.5571366 -7.713164e-03  0.53854914  0.5744546 #>  [788,] -0.8624379  0.04953195  0.2943686  1.753682e-03  0.07675276 -0.6809066 #>  [789,]  0.3559811 -0.43141910 -0.4119502 -2.151634e-03  0.61228508  0.6037618 #>  [790,] -0.7359500  0.30001055  0.4820429 -1.420440e-01 -0.63804181 -0.4972120 #>  [791,]  0.3372959  0.51539075  0.5681317 -4.915050e-03  0.56499180  0.5848894 #>  [792,] -0.8540595  0.05867430  0.3087272  3.496957e-03  0.08914500  0.3334576 #>  [793,]  0.1989251  0.14139341  0.3926681  1.303375e-01 -0.80824693  0.4163004 #>  [794,]  0.3686590  0.60317181  0.6011421 -1.241024e-03 -0.35734016 -0.3838529 #>  [795,]  0.2168667  0.17939760  0.4186749  3.093699e-01  0.23497536  0.4416267 #>  [796,]  0.1777068 -0.89705185 -0.6396004  3.579435e-02  0.14581706 -0.6153341 #>  [797,]  0.1532014  0.06742768  0.3209160  6.188269e-03  0.10075452 -0.6543968 #>  [798,]  0.2562424  0.27834397 -0.5279740 -1.992582e-01 -0.65992898 -0.5068333 #>  [799,]  0.3179917 -0.54146317  0.5467326 -1.177253e-02 -0.48655060 -0.4354315 #>  [800,]  0.3446506  0.53659850 -0.4239377 -3.542802e-03  0.58394368 -0.4075917 #>  [801,]  0.1315683  0.04359948  0.2838974  1.046430e-03  0.06854545 -0.6914223 #>  [802,]  0.4077816 -0.30003580  0.6395418 -2.372379e-04  0.72659277 -0.3476003 #>  [803,]  0.1397496  0.05182202  0.2981486  2.107173e-03  0.07988463  0.3228809 #>  [804,]  0.2795329 -0.65562875 -0.4986032 -7.015327e-02  0.40576090 -0.4786669 #>  [805,]  0.2995617  0.40354227  0.5254750 -2.758240e-02 -0.53762759 -0.4556708 #>  [806,]  0.2174589  0.18073433  0.4195143  3.168949e-01 -0.76353803  0.4424418 #>  [807,]  0.1753065  0.09905122 -0.6433596  3.049013e-02  0.14101160  0.3809643 #>  [808,]  0.2470369  0.25355158 -0.5400147 -2.890729e-01  0.31458080  0.4815796 #>  [809,]  0.4424717 -0.22859989  0.6712702 -5.698894e-05 -0.21184948 -0.3177071 #>  [810,] -0.7802625  0.18592537  0.4227331  3.465849e-01  0.24221508  0.4455661 #>  [811,]  0.2677465  0.31044834 -0.5132755 -1.204012e-01 -0.62761813 -0.4927208 #>  [812,]  0.2278300  0.20495554 -0.5659748 -5.414287e-01  0.26304541  0.4565103 #>  [813,] -0.6494036  0.55349539 -0.4176128 -2.724780e-03  0.59895059  0.5984003 #>  [814,]  0.4267386 -0.25926396  0.6571355 -1.084173e-04 -0.23828219 -0.3310191 #>  [815,]  0.3156691  0.45162024 -0.4559009 -1.309482e-02 -0.49290312 -0.4379359 #>  [816,]  0.3469166  0.54306600  0.5784818 -3.204783e-03  0.58969705  0.5947009 #>  [817,]  0.3073929 -0.57307951 -0.4653903 -1.917562e-02  0.48424877  0.5530332 #>  [818,] -0.6261086 -0.38296979  0.6064498 -9.910728e-04 -0.34523990 -0.3788358 #>  [819,] -0.6948181  0.42031659  0.5320462 -2.124350e-02  0.47809478  0.5505916 #>  [820,]  0.3259097  0.48201925 -0.4443859 -8.207352e-03  0.53487805  0.5730086 #>  [821,] -0.8198042  0.10708619  0.3642738  4.215410e-02  0.15088702  0.3884770 #>  [822,]  0.1793902  0.10573596 -0.6369776  3.999323e-02  0.14923635 -0.6127536 #>  [823,]  0.3075123 -0.57272294 -0.4652522 -1.906999e-02  0.48458049  0.5531646 #>  [824,] -0.7269584  0.32557701  0.4933637 -9.464098e-02 -0.61264085 -0.4863575 #>  [825,]  0.2413810 -0.76122561 -0.5475395 -3.561570e-01  0.29914236 -0.5256744 #>  [826,]  0.1290697  0.04127158 -0.7205179  8.387456e-04  0.06528518  0.3041332 #>  [827,]  0.2482242 -0.74330077 -0.5384476  7.239019e-01  0.31784493 -0.5169109 #>  [828,]  0.4412476 -0.23088293 -0.3298149 -5.990209e-05  0.78618054 -0.3187288 #>  [829,]  0.2463609  0.25176612  0.4590909  7.033600e-01 -0.68727447  0.4807179 #>  [830,]  0.2976650  0.39788986 -0.4767605 -3.012984e-02 -0.54295594  0.5421974 #>  [831,]  0.1476299  0.06064107  0.3115840  4.002347e-03  0.09177407  0.3363082 #>  [832,]  0.1947127  0.13319178  0.3863961  1.028788e-01  0.18215923  0.4101705 #>  [833,] -0.5944100 -0.30501713 -0.3625333 -2.598937e-04 -0.27770244  0.6504430 #>  [834,] -0.6721858 -0.51236130 -0.4422715 -7.529052e-03  0.53997571  0.5750166 #>  [835,] -0.6312685  0.60336547  0.6012159 -1.237154e-03 -0.35717081 -0.3837830 #>  [836,]  0.2280285 -0.79456633 -0.5657005  4.613855e-01  0.26356371 -0.5432242 #>  [837,]  0.2569094 -0.71982671 -0.5271114 -1.937133e-01  0.34193251 -0.5060041 #>  [838,] -0.8034938  0.13664965  0.3890745  1.139366e-01  0.18621662 -0.5872107 #>  [839,] -0.7521337  0.25574871 -0.5389196 -2.799670e-01 -0.68313988 -0.5173655 #>  [840,] -0.6420068  0.57416060 -0.4098501 -1.970653e-03  0.61720289 -0.3942505 #>  [841,]  0.3709147  0.60917784  0.6034370 -1.126175e-03  0.64790833  0.6183167 #>  [842,]  0.2106306  0.16563468 -0.5902371  2.358081e-01  0.21954228  0.4329640 #>  [843,]  0.3176932 -0.54235151 -0.4536051 -1.193451e-02  0.51263458  0.5642473 #>  [844,]  0.2783805 -0.65898315  0.4999791  9.259987e-01 -0.59750745  0.5199765 #>  [845,]  0.1614250  0.07830376 -0.6655557  1.147921e-02  0.11487501  0.3590342 #>  [846,]  0.1370954  0.04905217  0.2935594  1.685767e-03  0.07609414  0.3182820 #>  [847,]  0.3584543 -0.42456546 -0.4093701 -1.931431e-03  0.61832467  0.6062038 #>  [848,]  0.1195761  0.03317592  0.2624286  3.493604e-04  0.05375078  0.2869057 #>  [849,]  0.3024991 -0.58769414  0.5289193 -2.406043e-02 -0.52939703  0.5476123 #>  [850,]  0.2257881  0.20006805  0.4311964  4.297064e-01 -0.74226660 -0.5462291 #>  [851,]  0.2416895 -0.76042915 -0.5471265 -3.522879e-01  0.29997939  0.4747239 #>  [852,] -0.6897198  0.43554332  0.5379392 -1.678047e-02  0.49225491 -0.4437970 #>  [853,]  0.1397496  0.05182202  0.2981486  2.107173e-03  0.07988463  0.3228809 #>  [854,]  0.3978638 -0.32301245 -0.3699185 -3.589111e-04 -0.29323339 -0.3565228 #>  [855,]  0.2198161  0.18610585  0.4228439  3.476288e-01 -0.75758547  0.4456735 #>  [856,] -0.7141193  0.36296725  0.5091421 -5.221438e-02  0.42375938 -0.4712610 #>  [857,]  0.3581572 -0.42538618 -0.4096793 -1.956612e-03  0.61760202  0.6059111 #>  [858,] -0.8387680  0.07803659  0.3341301  1.131776e-02  0.11453188 -0.6412772 #>  [859,] -0.5315179 -0.18408905 -0.3062385 -1.987079e-05 -0.17331515 -0.2965361 #>  [860,]  0.3072544  0.42650661  0.5344494 -1.929898e-02 -0.51613634 -0.4471195 #>  [861,] -0.6443761 -0.43241320 -0.4123240 -2.185513e-03  0.61140812  0.6034079 #>  [862,]  0.2413525  0.23870071 -0.5475777 -3.565163e-01 -0.70093509 -0.5257113 #>  [863,] -0.7705428 -0.79110922  0.4362698  4.816520e-01 -0.73269584  0.4586828 #>  [864,]  0.3319681 -0.50015373  0.5623112 -6.242151e-03  0.55101157 -0.4206329 #>  [865,] -0.7461080  0.27193171 -0.5310244 -2.198253e-01 -0.66647446  0.4902335 #>  [866,] -0.6935948  0.42397022 -0.4665340 -2.007281e-02  0.48150193 -0.4480561 #>  [867,]  0.2225490 -0.80756715  0.4266807  3.845865e-01 -0.75061674 -0.5506051 #>  [868,]  0.2530730 -0.73028989 -0.5320912 -2.273721e-01  0.33125025  0.4892074 #>  [869,]  0.2308133 -0.78780246 -0.5618660 -4.991358e-01  0.27087039  0.4604863 #>  [870,] -0.6483771 -0.44361228 -0.4165286 -2.604532e-03  0.60151170 -0.4005729 #>  [871,]  0.2783795  0.34101377 -0.5000222 -7.400497e-02  0.40248955  0.5199753 #>  [872,]  0.3758333 -0.37789324 -0.3915944 -9.119950e-04  0.65918391 -0.3769876 #>  [873,]  0.3935082 -0.33345140 -0.3741307 -4.309398e-04  0.69774438 -0.3604972 #>  [874,]  0.2895816  0.37388868  0.5136084 -4.393308e-02 -0.56576162  0.5330058 #>  [875,] -0.8679707  0.04403829  0.2847089  1.089604e-03  0.06915741  0.3093940 #>  [876,] -0.6394474 -0.41878939  0.5928090 -1.762790e-03  0.62340614  0.6082657 #>  [877,]  0.3120627 -0.55913531  0.5399845 -1.545648e-02  0.49717957 -0.4418503 #>  [878,] -0.7785967  0.18976756  0.4250753  3.689422e-01 -0.75354683 -0.5521619 #>  [879,]  0.2940546  0.38714903 -0.4810414 -3.565480e-02  0.44687507 -0.4618866 #>  [880,]  0.1679157  0.08762699  0.3449207  1.831303e-02 -0.87325935  0.3694011 #>  [881,]  0.1525847  0.06665351  0.3198896  5.900943e-03  0.09973701 -0.6554179 #>  [882,]  0.1789717  0.10503867  0.3623714  3.891022e-02  0.14838254 -0.6133939 #>  [883,]  0.2029332  0.14945567  0.3985763  1.614847e-01 -0.79891378 -0.5779333 #>  [884,]  0.3379542  0.51730151 -0.4311536 -4.772534e-03 -0.43329508 -0.4144327 #>  [885,]  0.2397908  0.23468664  0.4503271 -3.764470e-01  0.29483736 -0.5277330 #>  [886,] -0.5987459  0.68496693 -0.3666643 -3.114312e-04 -0.28634367  0.6465470 #>  [887,]  0.3605093  0.58109206 -0.4072358 -1.766105e-03 -0.37669808 -0.3917767 #>  [888,]  0.2865449  0.36492361 -0.4900536  9.493784e-01 -0.57435865 -0.4704924 #>  [889,]  0.1591157  0.07514481  0.3306745  9.679433e-03  0.11080613 -0.6447034 #>  [890,]  0.2325155  0.21638273  0.4404656 -4.751410e-01  0.27536804 -0.5372588 #>  [891,]  0.1705416  0.09158686  0.3491099  2.200902e-02 -0.86828071  0.3735384 #>  [892,]  0.1711968  0.09259195  0.3501509  2.303149e-02  0.13297744 -0.6254343 #>  [893,]  0.2770925 -0.66272365 -0.5016097  9.214559e-01  0.39883992  0.5184558 #>  [894,]  0.4472486 -0.21985509  0.6754811 -4.692615e-05 -0.20429941 -0.3137425 #>  [895,]  0.2102224  0.16475403  0.4091749  2.313901e-01  0.21854665 -0.5676082 #>  [896,]  0.1404650  0.05258565  0.2993799  2.236385e-03  0.08092470  0.3241137 #>  [897,] -0.7539254  0.25101176 -0.5412881 -2.998822e-01  0.31194085  0.4803527 #>  [898,]  0.3226973  0.47251317  0.5520285 -9.497041e-03  0.52622850 -0.4303978 #>  [899,]  0.2964952  0.39440683  0.5218561 -3.181828e-02  0.45375285 -0.4591221 #>  [900,] -0.6000853  0.68182975 -0.3679475 -3.293737e-04  0.71094820 -0.3546634 #>  [901,]  0.2527824  0.26892360  0.4675299 -2.300968e-01  0.33044380 -0.5111571 #>  [902,]  0.2865040  0.36480289  0.5098968 -5.071842e-02 -0.57447472 -0.4705398 #>  [903,]  0.1797516  0.10634044  0.3635842  4.095016e-02  0.14997577  0.3877989 #>  [904,] -0.7989275  0.14568188 -0.6041592  1.463948e-01  0.19672929  0.4193979 #>  [905,]  0.3590474 -0.42292897 -0.4087531 -1.882144e-03 -0.38023486 -0.3932124 #>  [906,]  0.1889233  0.12237798 -0.6223309  7.304870e-02  0.16934718  0.4016265 #>  [907,] -0.8134321 -0.88186888  0.3740826  6.321461e-02  0.16426216  0.3981100 #>  [908,]  0.1482737  0.06140160 -0.6873307  4.212114e-03  0.09278742  0.3373904 #>  [909,]  0.3009463  0.40767199  0.5271013 -2.586138e-02  0.46625553 -0.4541204 #>  [910,]  0.1908170  0.12585652 -0.6194625  8.187689e-02  0.17348941 -0.5955634 #>  [911,]  0.1286903  0.04092542  0.2788091  8.107755e-04  0.06479835 -0.6965449 #>  [912,]  0.3119648  0.44057248  0.5398724 -1.552635e-02 -0.50309054  0.5580429 #>  [913,] -0.7533683  0.25248075  0.4594494 -2.935933e-01 -0.68653158  0.4810633 #>  [914,] -0.7507352 -0.74052941  0.4629225  7.349399e-01 -0.67928805  0.4844084 #>  [915,]  0.2952765  0.39078086 -0.4795889 -3.367912e-02  0.45032009  0.5394994 #>  [916,]  0.2415419  0.23918964  0.4526759 -3.541362e-01  0.29957884 -0.5254666 #>  [917,] -0.8451073  0.06958011 -0.6762780  7.043860e-03  0.10357456  0.3483931 #>  [918,]  0.1864417  0.11790606  0.3738899  6.272161e-02 -0.83600819  0.3979209 #>  [919,] -0.6309371  0.60425052 -0.3984463 -1.219613e-03  0.64360301  0.6165363 #>  [920,] -0.5386756 -0.19558843 -0.3123224 -2.652942e-05 -0.18329969  0.6977381 #>  [921,] -0.6606536  0.52133478  0.5703548 -4.484952e-03  0.57031728 -0.4130022 #>  [922,]  0.3057376  0.42197627  0.5326916 -2.070331e-02  0.47964325  0.5512064 #>  [923,] -0.5394553 -0.19687487 -0.3129898 -2.737890e-05 -0.18441515 -0.3028901 #>  [924,]  0.1290697  0.04127158 -0.7205179  8.387456e-04  0.06528518  0.3041332 #>  [925,] -0.5315179 -0.18408905 -0.3062385 -1.987079e-05 -0.17331515 -0.2965361 #>  [926,] -0.6651576  0.50824956  0.5654592 -5.485884e-03  0.55857899 -0.4176457 #>  [927,]  0.1681406  0.08796189 -0.6547194  1.860582e-02 -0.87283693  0.3697567 #>  [928,] -0.5637691 -0.24041968  0.6657128 -7.350318e-05  0.77795572 -0.3229403 #>  [929,]  0.1868351  0.11860834 -0.6255095  6.426921e-02  0.16483512  0.3985100 #>  [930,]  0.2911723  0.37859744 -0.4844831 -4.078902e-02  0.43873634 -0.4651717 #>  [931,]  0.2012929  0.14612596  0.3961654  1.481241e-01 -0.80275695 -0.5802854 #>  [932,]  0.1347437  0.04668054  0.2894659  1.379047e-03  0.07282547  0.3141742 #>  [933,] -0.6502113  0.55121445  0.5815325 -2.823389e-03 -0.40307069  0.5975909 #>  [934,] -0.6396639  0.58061642  0.5925846 -1.779466e-03  0.62288376 -0.3919466 #>  [935,] -0.5120688 -0.15557797  0.7099052 -9.081613e-06 -0.14842818 -0.2813440 #>  [936,]  0.3947634 -0.33042172 -0.3729132 -4.087867e-04 -0.29963600  0.6406517 #>  [937,] -0.7186661  0.34962776  0.5036053 -6.452591e-02 -0.58913100  0.5234457 #>  [938,]  0.2443765  0.24655521 -0.5435420 -3.195791e-01 -0.69270480  0.4781805 #>  [939,] -0.8116144  0.12140074  0.3768523  7.069524e-02  0.16817981 -0.5991742 #>  [940,]  0.2658053  0.30495341 -0.5157292 -1.313642e-01  0.36690381 -0.4950743 #>  [941,]  0.2173532  0.18049539  0.4193646  3.155458e-01  0.23619639  0.4422964 #>  [942,] -0.7487607  0.26476088 -0.5344867 -2.449857e-01  0.32616725 -0.5130976 #>  [943,]  0.3276115  0.48704113 -0.4424962 -7.598434e-03 -0.46056583  0.5748032 #>  [944,]  0.1896239  0.12365825  0.3787319  7.621540e-02  0.17087407 -0.5973321 #>  [945,] -0.7509117  0.25899986 -0.5373096 -2.669095e-01  0.32022543  0.4841850 #>  [946,]  0.2661890  0.30603734 -0.5152433 -1.291277e-01  0.36798605  0.5053918 #>  [947,]  0.4267165 -0.25930902 -0.3428846 -1.085156e-04 -0.23832100 -0.3310381 #>  [948,]  0.3026328 -0.58729493 -0.4709244 -2.391141e-02  0.47097703 -0.4522387 #>  [949,]  0.2285217  0.20662395 -0.5650196  4.683805e-01  0.26485295  0.4574349 #>  [950,]  0.1793069  0.10559698  0.3628930  3.977559e-02 -0.85093376  0.3871191 #>  [951,]  0.3356694 -0.48934003  0.5663615 -5.286234e-03  0.56074538 -0.4167897 #>  [952,] -0.6337979 -0.40342303  0.5986307 -1.379853e-03 -0.36311136  0.6137724 #>  [953,] -0.7610108  0.23263775  0.4492487 -3.868818e-01  0.29267380  0.4712263 #>  [954,]  0.1966387  0.13690708  0.3892719  1.147900e-01  0.18651795 -0.5870178 #>  [955,]  0.2610928 -0.70825921 -0.5217303 -1.617845e-01 -0.64635501  0.4991657 #>  [956,] -0.7104835  0.37369607  0.5135301 -4.406683e-02 -0.56594586  0.5329311 #>  [957,] -0.6174299  0.63942856  0.6151332 -6.843077e-04  0.67424653  0.6293676 #>  [958,]  0.3471611 -0.45623801  0.5787422 -3.170340e-03  0.59031549 -0.4050524 #>  [959,] -0.5496229 -0.21426916 -0.3217810 -4.132864e-05 -0.19947245  0.6888349 #>  [960,]  0.3366512 -0.48648278 -0.4325692 -5.058865e-03  0.56331094 -0.4157754 #>  [961,]  0.2039280  0.15149558  0.4000339  1.700102e-01 -0.79656708 -0.5765118 #>  [962,]  0.2161980  0.17789435  0.4177256  3.009754e-01  0.23330100  0.4407048 #>  [963,] -0.6540103 -0.45957552 -0.4225065 -3.338857e-03 -0.41265137 -0.4062356 #>  [964,] -0.7510558  0.25861558 -0.5374992 -2.684271e-01 -0.68017189 -0.5159976 #>  [965,] -0.7204227  0.34450069  0.5014514 -7.000889e-02 -0.59411311 -0.4786147 #>  [966,] -0.5661746 -0.24509604 -0.3364466 -8.109575e-05 -0.22607524 -0.3249739 #>  [967,]  0.1812651 -0.89110569 -0.6340693  4.518222e-02  0.15309200  0.3901059 #>  [968,]  0.3978198 -0.32311707 -0.3699610 -3.595751e-04 -0.29332376  0.6434371 #>  [969,]  0.4486677 -0.21730752  0.6767250 -4.429794e-05 -0.20209842  0.6874285 #>  [970,]  0.1548273  0.06949602  0.3236136  7.008819e-03  0.10346463  0.3482855 #>  [971,] -0.5729245 -0.25857717 -0.3425575 -1.069281e-04  0.76230941 -0.3307299 #>  [972,]  0.2852898  0.36122847  0.5084256 -5.367290e-02  0.42208492 -0.4719457 #>  [973,] -0.5781314  0.73066060  0.6526756 -1.324522e-04 -0.24696033 -0.3352210 #>  [974,]  0.4273539 -0.25801070 -0.3423039 -1.057134e-04 -0.23720264  0.6695090 #>  [975,]  0.1770707  0.10190651  0.3594056  3.431356e-02  0.14453556 -0.6163125 #>  [976,]  0.3034496 -0.58485655 -0.4699708 -2.302140e-02  0.47326016 -0.4513301 #>  [977,] -0.6022318 -0.32323946 -0.3700107 -3.603531e-04 -0.29342948 -0.3566097 #>  [978,] -0.5920686 -0.29969721 -0.3603166 -2.357643e-04  0.72688467  0.6525332 #>  [979,]  0.4611558 -0.19586597 -0.3124666 -2.671078e-05 -0.18354037  0.6976024 #>  [980,]  0.1528160 -0.93305680 -0.6797252  6.007230e-03  0.10011796  0.3449653 #>  [981,]  0.2912827  0.37892472 -0.4843508 -4.057924e-02  0.43904852  0.5349546 #>  [982,]  0.2035410 -0.84929987  0.3994673  1.666553e-01  0.20251853  0.4229356 #>  [983,]  0.2281845  0.20580989  0.4345150 -5.364019e-01 -0.73602864 -0.5430156 #>  [984,] -0.7722402  0.20478661  0.4339282  4.575764e-01 -0.73713777 -0.5435837 #>  [985,]  0.2497654  0.26080800 -0.5364195 -2.598621e-01  0.32209326  0.4850419 #>  [986,] -0.6363826 -0.41041883  0.5959754 -1.543167e-03  0.63075680 -0.3887388 #>  [987,]  0.3274986  0.48670835 -0.4426214 -7.637349e-03  0.53913253 -0.4253156 #>  [988,]  0.1770424  0.10186033  0.3593614  3.424898e-02  0.14447868  0.3836439 #>  [989,]  0.3892735 -0.34379950 -0.3782601 -5.151471e-04 -0.31121077  0.6356055 #>  [990,]  0.2379666  0.23003505  0.4478700 -4.003816e-01 -0.71008018 -0.5301047 #>  [991,]  0.3221564  0.47090949 -0.4485776 -9.733855e-03 -0.47523400 -0.4309737 #>  [992,]  0.3083200  0.42968943  0.5356810 -1.837075e-02 -0.51317675  0.5540532 #>  [993,] -0.6652806  0.50789072 -0.4346751 -5.516238e-03 -0.44174368 -0.4177731 #>  [994,]  0.2648337 -0.69778549  0.4830388 -1.371829e-01  0.36416550  0.5037437 #>  [995,] -0.8339984  0.08480905  0.3418494  1.598653e-02  0.12317605  0.3663649 #>  [996,] -0.7711555  0.20740481 -0.5645744  4.729601e-01 -0.73430207  0.4578658 #>  [997,] -0.7069525 -0.61584159  0.5177585 -3.737053e-02  0.44403318 -0.4630319 #>  [998,]  0.2049328  0.15357130 -0.5984975 -8.210533e-01 -0.79418515 -0.5750802 #>  [999,]  0.1995033  0.14254103 -0.6064760  1.345202e-01  0.19308740  0.4171363 #> [1000,]  0.2667628  0.30766018  0.4854824 -1.258481e-01 -0.63039514 -0.4939120 #> [1001,]  0.2452394  0.24881578  0.4576044 -3.094720e-01 -0.69034615 -0.5207145 #> [1002,]  0.2367088 -0.77314825  0.4461699 -4.172480e-01  0.28654283  0.4682535 #> [1003,]  0.3719277  0.61185946 -0.3955357 -1.078201e-03 -0.34975049 -0.3807123 #> [1004,] -0.6125934  0.65157724 -0.3800913 -5.574397e-04 -0.31521582 -0.3661233 #> [1005,]  0.1556933  0.07061402 -0.6749542  7.485803e-03  0.10492454  0.3497086 #> [1006,] -0.7863146  0.17230434  0.4141451 -7.295275e-01  0.22705066  0.4372256 #> [1007,]  0.1491203  0.06241114  0.3140937  4.503482e-03 -0.90587023  0.3388104 #> [1008,]  0.2572667  0.28115502  0.4733502 -1.907952e-01  0.34293046  0.4944396 #> [1009,]  0.2642100  0.30046001 -0.5177537 -1.410395e-01  0.36240862 -0.4970168 #> [1010,]  0.2756080  0.33297737 -0.5034465 -8.411281e-02  0.39463126  0.5166974 #> [1011,] -0.7199316 -0.65406769  0.5020544 -6.843205e-02 -0.59272039  0.5219621 #> [1012,]  0.2624885  0.29563448  0.4800536 -1.521872e-01  0.35756526 -0.4991214 #> [1013,]  0.4058981 -0.30431355 -0.3622410 -2.565803e-04 -0.27709569 -0.3492814 #> [1014,]  0.1433477  0.05573705  0.3043179  2.835031e-03  0.08519514  0.3290532 #> [1015,]  0.1838035 -0.88674029  0.3698464  5.315391e-02 -0.84160959  0.3939525 #> [1016,]  0.2984081 -0.59989630  0.5241164 -2.910458e-02 -0.54086714 -0.4569663 #> [1017,] -0.8617563  0.05023823  0.2955487  1.857442e-03  0.07772073  0.3202763 #> [1018,]  0.3605395 -0.41882532 -0.4072046 -1.763795e-03 -0.37662545 -0.3917471 #> [1019,]  0.1748780  0.09836517  0.3559669  2.962143e-02  0.14016242 -0.6196993 #> [1020,]  0.2976015  0.39770049 -0.4768356 -3.021923e-02  0.45686528  0.5421258 #> [1021,]  0.4210515 -0.27105694 -0.3480767 -1.369857e-04  0.75156038 -0.3359299 #> [1022,]  0.1604003  0.07689188  0.3327743  1.064565e-02 -0.88694040  0.3573790 #> [1023,]  0.1655453 -0.91585432  0.3411149  1.547339e-02  0.12233422 -0.6343616 #> [1024,]  0.3660945 -0.40371303  0.5985204 -1.386284e-03 -0.36336534 -0.3863318 #> [1025,]  0.3878726 -0.34726521 -0.3796336 -5.465610e-04 -0.31421280 -0.3656911 #> [1026,]  0.4315791 -0.24952362  0.6615283 -8.890261e-05 -0.22989078  0.6731187 #> [1027,]  0.2496598  0.26052576  0.4634418 -2.609521e-01  0.32180188  0.4849084 #> [1028,] -0.5120688 -0.15557797  0.7099052 -9.081613e-06 -0.14842818 -0.2813440 #> [1029,] -0.6939942  0.42277739  0.5330029 -2.044760e-02  0.48039024  0.5515029 #> [1030,]  0.3038405  0.41631054  0.5304849 -2.260745e-02 -0.52564804 -0.4508958 #> [1031,]  0.1894017  0.12325136  0.3783950  7.519864e-02  0.17038910 -0.5976622 #> [1032,]  0.4424717 -0.22859989  0.6712702 -5.698894e-05 -0.21184948 -0.3177071 #> [1033,]  0.3425594 -0.46939926  0.5738195 -3.887265e-03  0.57859750 -0.4097175 #> [1034,]  0.2617237 -0.70650123  0.4790767  8.426171e-01  0.35541634 -0.5000593 #> [1035,]  0.1559319  0.07092417  0.3254399  7.622440e-03 -0.89467108  0.3501002 #> [1036,] -0.6073930 -0.33563731  0.6249934 -4.475982e-04  0.69585372 -0.3613238 #> [1037,] -0.5191409 -0.16549392 -0.2959006 -1.206936e-05 -0.15710836 -0.2868074 #> [1038,] -0.5332124 -0.18676119 -0.3076717 -2.127680e-05 -0.17563758  0.7021151 #> [1039,]  0.2235257  0.19471965  0.4280460  3.980697e-01  0.25189092 -0.5492817 #> [1040,]  0.3255981 -0.51890146 -0.4447327 -8.324176e-03  0.53404175 -0.4273208 #> [1041,]  0.2259398 -0.79957092  0.4314069 -5.681575e-01 -0.74187335 -0.5460252 #> [1042,] -0.7278023  0.32315267  0.4923107 -9.836798e-02 -0.61503080 -0.4873662 #> [1043,]  0.1938849  0.13161304 -0.6148441  9.807923e-02  0.18030054  0.4089574 #> [1044,]  0.2665474 -0.69294942 -0.5147899 -1.270704e-01  0.36899699  0.5058267 #> [1045,]  0.3008761 -0.59253759 -0.4729811 -2.594601e-02 -0.53394134 -0.4541990 #> [1046,]  0.2899401  0.37494912 -0.4859609 -4.320404e-02 -0.56474762  0.5334171 #> [1047,] -0.8147042  0.11587424 -0.6278632  5.839586e-02  0.16154708 -0.6037991 #> [1048,]  0.2969572  0.39578198  0.5224028 -3.114038e-02 -0.54494700 -0.4586006 #> [1049,] -0.7744668  0.19946197  0.4308423  4.261196e-01 -0.74292712  0.4534279 #> [1050,]  0.2285290  0.20664166  0.4349905 -5.315156e-01  0.26487212  0.4574446 #> [1051,]  0.1290697  0.04127158 -0.7205179  8.387456e-04  0.06528518  0.3041332 #> [1052,]  0.1696841  0.09028176  0.3477450  2.073337e-02  0.13008229  0.3721909 #> [1053,] -0.6722497  0.48745029 -0.4423424 -7.550860e-03  0.53980497  0.5749493 #> [1054,]  0.2723233 -0.67648689  0.4924675 -9.780477e-02  0.38532477 -0.4872160 #> [1055,]  0.2695424  0.31555688 -0.5110150 -1.110120e-01  0.37745629 -0.4905535 #> [1056,] -0.5592416 -0.23179998 -0.3302491 -6.110780e-05  0.78538936 -0.3191377 #> [1057,]  0.1451877  0.05781139 -0.6925499  3.291366e-03  0.08798756  0.3321825 #> [1058,]  0.1994771  0.14248901  0.3934854  1.343287e-01  0.19302695 -0.5829015 #> [1059,] -0.5782164 -0.26951766 -0.3474026 -1.329164e-04  0.75288614  0.6647053 #> [1060,] -0.7910911 -0.83806255  0.4072789  2.175290e-01  0.21535557  0.4305465 #> [1061,]  0.2293123  0.20853912 -0.5639296 -5.204020e-01  0.26692424  0.4584898 #> [1062,]  0.3526629  0.55931047 -0.4154323 -2.488244e-03  0.60409753 -0.3995348 #> [1063,]  0.1286903  0.04092542  0.2788091  8.107755e-04  0.06479835 -0.6965449 #> [1064,]  0.2393445  0.23354483  0.4497269 -3.822408e-01  0.29363213  0.4716878 #> [1065,]  0.2302443  0.21080730  0.4373526 -5.071891e-01  0.26937243  0.4597304 #> [1066,]  0.2511769  0.26459321  0.4654316 -2.456020e-01 -0.67400530  0.4868238 #> [1067,]  0.3902820 -0.34131740  0.6227265 -4.936779e-04 -0.30906166 -0.3634633 #> [1068,]  0.3620607  0.58533957  0.5943696 -1.650972e-03 -0.37296606 -0.3902579 #> [1069,] -0.7310397 -0.68610147 -0.5117467 -1.139785e-01  0.37581094  0.5087451 #> [1070,] -0.7552467 -0.75245881  0.4569589  6.848585e-01 -0.69167550 -0.5213368 #> [1071,]  0.2622908  0.29508207 -0.5201987 -1.535153e-01  0.35700975  0.5006364 #> [1072,]  0.2270733  0.20313768  0.4329785 -5.521472e-01  0.26107262 -0.5445032 #> [1073,] -0.7777968  0.19162635  0.4261966 -6.201567e-01  0.24849748 -0.5510745 #> [1074,]  0.2280874  0.20557578 -0.5656191 -5.377786e-01  0.26371771 -0.5431454 #> [1075,] -0.6315835  0.60252329  0.6008947 -1.254066e-03 -0.35790730 -0.3840868 #> [1076,]  0.1949635 -0.86632776  0.3867713  1.043703e-01  0.18272411 -0.5894625 #> [1077,]  0.3930388 -0.33458879 -0.3745867 -4.395356e-04 -0.30323932 -0.3609275 #> [1078,]  0.2770307 -0.66290279  0.4983139 -7.876858e-02  0.39866478  0.5183828 #> [1079,]  0.3002018  0.40545117  0.5262275 -2.677278e-02  0.46416835 -0.4549534 #> [1080,]  0.4806686 -0.16576813 -0.2960580 -1.216226e-05 -0.15734800 -0.2869556 #> [1081,]  0.3022687  0.41161799 -0.4713501 -2.431945e-02 -0.53004173  0.5473555 #> [1082,]  0.3210539 -0.53236175 -0.4498152 -1.023549e-02 -0.47822028  0.5678502 #> [1083,]  0.3252081 -0.52005405  0.5548330 -8.472771e-03 -0.46700560 -0.4277333 #> [1084,]  0.3132793  0.44449472 -0.4586240 -1.461464e-02  0.50053208  0.5594737 #> [1085,]  0.1552656  0.07006043  0.3243388  7.246603e-03  0.10420208 -0.6509938 #> [1086,] -0.6101871  0.65752926  0.6222678 -5.035496e-04  0.68993982  0.6361037 #> [1087,]  0.2484401  0.25727321 -0.5381631 -2.737824e-01 -0.68156075  0.4833631 #> [1088,]  0.4543976 -0.20725287 -0.3182854 -3.511216e-05 -0.19340405 -0.3078745 #> [1089,] -0.6201022 -0.36738765 -0.3875247 -7.667121e-04  0.66832495 -0.3731428 #> [1090,]  0.3304402  0.49536425  0.5606301 -6.686970e-03 -0.45303429 -0.4222285 #> [1091,]  0.1482737  0.06140160 -0.6873307  4.212114e-03  0.09278742  0.3373904 #> [1092,]  0.3657839  0.59544922  0.5982020 -1.405020e-03 -0.36409914  0.6133671 #> [1093,]  0.4262576 -0.26024681 -0.3433032 -1.105799e-04  0.76087121  0.6685676 #> [1094,] -0.5402254 -0.19815206 -0.3136500 -2.824484e-05 -0.18552231 -0.3035115 #> [1095,]  0.2968658  0.39550987  0.5222947 -3.127334e-02  0.45479580 -0.4587037 #> [1096,] -0.8624379  0.04953195  0.2943686  1.753682e-03  0.07675276 -0.6809066 #> [1097,] -0.5340344 -0.18806857  0.6916315 -2.199449e-05 -0.17677334 -0.2985407 #> [1098,]  0.3430518 -0.46798454 -0.4256515 -3.803173e-03 -0.42014053 -0.4092161 #> [1099,]  0.1407950  0.05294032  0.2999470  2.298420e-03  0.08140705  0.3246814 #> [1100,]  0.3101249  0.43507986 -0.4622393 -1.690111e-02  0.49182542 -0.4439669 #> [1101,]  0.2334898  0.21879517 -0.5582040 -4.615065e-01  0.27795263  0.4640274 #> [1102,]  0.1709521  0.09221579  0.3497623  2.264469e-02  0.13250684  0.3741823 #> [1103,] -0.5558703 -0.22553506  0.6727359 -5.327020e-05 -0.20920420 -0.3163270 #> [1104,]  0.1407828  0.05292725 -0.7000738  2.296110e-03  0.08138927  0.3246605 #> [1105,]  0.1734609  0.09611720 -0.6462656  2.690549e-02 -0.86262691  0.3781003 #> [1106,]  0.3352226  0.50935821 -0.4341257 -5.393146e-03  0.55957564  0.5827481 #> [1107,]  0.3703496 -0.39232245 -0.3971370 -1.153885e-03 -0.35340208 -0.3822259 #> [1108,]  0.2998815  0.40449571  0.5258510 -2.717494e-02  0.46326965  0.5446877 #> [1109,] -0.8241908  0.09985982  0.3574297  3.153853e-02  0.14201123  0.3817417 #> [1110,]  0.3496642 -0.44913765 -0.4185994 -2.838916e-03  0.59661717  0.5974659 #> [1111,] -0.5875837 -0.28968294  0.6439017 -1.957166e-04 -0.26448438 -0.3434899 #> [1112,]  0.3205256 -0.53393027  0.5495909 -1.048517e-02 -0.47965362  0.5672857 #> [1113,]  0.2139729  0.17293934  0.4145560  2.738760e-01  0.22776261 -0.5623750 #> [1114,] -0.5394686 -0.19689687  0.6869988 -2.739362e-05 -0.18443422 -0.3029008 #> [1115,]  0.2774142 -0.66179029 -0.5012125 -7.738490e-02  0.39975216  0.5188361 #> [1116,] -0.6356569 -0.40844876  0.5967223 -1.495408e-03  0.63248462  0.6119676 #> [1117,]  0.2781802  0.34043445 -0.5002677 -7.469085e-02  0.40192439  0.5197403 #> [1118,]  0.3157876 -0.54802644  0.5442339 -1.302377e-02 -0.49257814  0.5621923 #> [1119,]  0.2886893 -0.62874909  0.5125348 -4.580154e-02  0.43171347  0.5319805 #> [1120,]  0.3897580 -0.34260573 -0.3777859 -5.047168e-04 -0.31017706 -0.3639470 #> [1121,]  0.3670298  0.59880492 -0.4005218 -1.331385e-03 -0.36116068  0.6145738 #> [1122,]  0.1817296  0.10968540  0.3666491  4.655658e-02  0.15405480  0.3908119 #> [1123,]  0.2753538 -0.66775769 -0.5037618 -8.510389e-02  0.39391049 -0.4836044 #> [1124,]  0.2711813  0.32023943 -0.5089600 -1.030397e-01  0.38209223  0.5114162 #> [1125,] -0.4960151 -0.13488506 -0.2771798 -4.764303e-06 -0.13020711 -0.2691900 #> [1126,]  0.3582510  0.57487322  0.5904184 -1.948619e-03 -0.38216956 -0.3939964 #> [1127,]  0.1960398  0.13574548 -0.6116210  1.109724e-01 -0.81484253 -0.5878905 #> [1128,] -0.7144460  0.36200581 -0.4912539 -5.301579e-02  0.42283371 -0.4716394 #> [1129,]  0.3425396  0.53054393 -0.4262017 -3.890679e-03  0.57854681 -0.4097376 #> [1130,] -0.6718086  0.48875015 -0.4418537 -7.401683e-03 -0.45901738 -0.4245867 #> [1131,] -0.6841660 -0.54788828  0.5442865 -1.299609e-02 -0.49245108  0.5622424 #> [1132,] -0.6710101 -0.50889922  0.5590295 -7.139347e-03  0.54311074  0.5762519 #> [1133,]  0.1931885 -0.86970686  0.3841106  9.418526e-02  0.17874355 -0.5920654 #> [1134,]  0.1504309  0.06399499  0.3162926  4.991522e-03  0.09622947  0.3410012 #> [1135,]  0.1401315  0.05222874  0.2988061  2.175260e-03  0.08043884 -0.6764607 #> [1136,] -0.8398675  0.07652546 -0.6676630  1.043712e-02  0.11258762  0.3569454 #> [1137,] -0.6559704  0.53482013 -0.4246027 -3.641695e-03  0.58235959  0.5917780 #> [1138,] -0.7682704  0.21444574  0.4393903 -4.861964e-01  0.27328863  0.4617014 #> [1139,] -0.6679201 -0.49982618  0.5624340 -6.210821e-03 -0.44869302 -0.4205164 #> [1140,]  0.2606103  0.29039844 -0.5223485 -1.652227e-01  0.35229091  0.4985721 #> [1141,]  0.1195761  0.03317592  0.2624286  3.493604e-04  0.05375078  0.2869057 #> [1142,]  0.2813899  0.34979136  0.5036738 -6.435830e-02  0.41102772 -0.4764888 #> [1143,]  0.2607259  0.29072001  0.4777998 -1.643929e-01  0.35261541  0.4987144 #> [1144,]  0.2877543  0.36848987  0.5114077 -4.784444e-02  0.42906649  0.5309037 #> [1145,]  0.1985067  0.14056637 -0.6079519  1.273752e-01  0.19079028  0.4156948 #> [1146,]  0.1195761  0.03317592  0.2624286  3.493604e-04  0.05375078  0.2869057 #> [1147,]  0.2740761 -0.67144518  0.4946515 -9.025495e-02  0.39028954 -0.4851239 #> [1148,]  0.2953038  0.39086224 -0.4795564 -3.363616e-02  0.45039721 -0.4604696 #> [1149,]  0.1401193  0.05221569 -0.7012149  2.173048e-03  0.08042106 -0.6764817 #> [1150,]  0.3271923 -0.51419481  0.5570390 -7.743970e-03  0.53831369  0.5743618 #> [1151,]  0.2052656 -0.84573785 -0.5980120  1.819786e-01  0.20660628  0.4253930 #> [1152,]  0.3564315 -0.43016756  0.5885205 -2.109700e-03 -0.38661120 -0.3957926 #> [1153,]  0.3832342 -0.35888890  0.6157916 -6.652724e-04  0.67570718 -0.3700107 #> [1154,]  0.1853902  0.11604080  0.3722814  5.874208e-02 -0.83825223  0.3963428 #> [1155,] -0.4960151 -0.13488506 -0.2771798 -4.764303e-06 -0.13020711 -0.2691900 #> [1156,]  0.2494473  0.25995790 -0.5368375 -2.631564e-01 -0.67878457  0.4846395 #> [1157,]  0.2467225  0.25272063  0.4595695 -2.925760e-01 -0.68628231 -0.5188210 #> [1158,]  0.2861615 -0.63620589 -0.4905178 -5.153503e-02 -0.57544494  0.5290641 #> [1159,]  0.4274435 -0.25782845 -0.3422223 -1.053251e-04 -0.23704564 -0.3304141 #> [1160,]  0.3122231  0.44134324  0.5401682 -1.534274e-02  0.49762185  0.5583244 #> [1161,]  0.3904656 -0.34086691 -0.3770942 -4.898706e-04 -0.30867168 -0.3632941 #> [1162,]  0.1290697  0.04127158 -0.7205179  8.387456e-04  0.06528518  0.3041332 #> [1163,]  0.4059164 -0.30427172  0.6377763 -2.563845e-04 -0.27705961 -0.3492650 #> [1164,] -0.5258989 -0.17544775 -0.3015169 -1.584330e-05 -0.16579415 -0.2920927 #> [1165,]  0.2504666  0.26268573 -0.5354992 -2.527050e-01  0.32403011  0.4859279 #> [1166,]  0.1997618  0.14305583  0.3939063  1.364236e-01  0.19368531 -0.5824905 #> [1167,]  0.2704957  0.31827841  0.4901813 -1.063073e-01  0.38015250 -0.4894068 #> [1168,]  0.2768606 -0.66339612  0.4981037 -7.939011e-02  0.39818233  0.5181815 #> [1169,]  0.1937419  0.13134135  0.3849414  9.726890e-02  0.17998028  0.4087476 #> [1170,]  0.1195761  0.03317592  0.2624286  3.493604e-04  0.05375078  0.2869057 #> [1171,]  0.4098184 -0.29545560  0.6414626 -2.179860e-04 -0.26945908 -0.3457894 #> [1172,]  0.1554317  0.07027508 -0.6753865  7.338643e-03  0.10448231  0.3492791 #> [1173,]  0.2832040 -0.64489725  0.5058892 -5.915028e-02 -0.58382793  0.5256297 #> [1174,]  0.3074138 -0.57301714 -0.4653661 -1.915710e-02 -0.51569320 -0.4469438 #> [1175,]  0.1505336 -0.93587978 -0.6835354  5.031773e-03  0.09639517  0.3411726 #> [1176,] -0.8145242  0.11619201  0.3724125  5.905767e-02  0.16192991  0.3964715 #> [1177,]  0.1455419  0.05821644  0.3080514  3.386679e-03  0.08853116 -0.6672170 #> [1178,] -0.6801570 -0.53595817 -0.4511777 -1.081708e-02 -0.48150815  0.5665552 #> [1179,] -0.8401348  0.07616095  0.3319004  1.023281e-02  0.11211777 -0.6434876 #> [1180,]  0.1734173  0.09604852 -0.6463345  2.682560e-02  0.13728771  0.3780324 #> [1181,]  0.2970630 -0.60390305 -0.4774721 -3.098720e-02 -0.54464935  0.5415188 #> [1182,] -0.8209695  0.10513653 -0.6375370  3.906088e-02  0.14850242  0.3866961 #> [1183,]  0.2595968 -0.71241399  0.4763512 -1.726478e-01 -0.65055038 -0.5026769 #> [1184,] -0.7183020 -0.64930762  0.5040507 -6.344309e-02 -0.58809843  0.5238717 #> [1185,]  0.2168408  0.17933932 -0.5813618  3.090431e-01  0.23491050 -0.5584089 #> [1186,]  0.2389183  0.23245675 -0.5508468 -3.878119e-01  0.29248248  0.4711340 #> [1187,] -0.6478130  0.55797416 -0.4159336 -2.540775e-03  0.60291553 -0.4000095 #> [1188,]  0.2946884  0.38903242  0.5197125 -3.461587e-02  0.44866244  0.5388328 #> [1189,]  0.1226788  0.03569375  0.2680509  4.681320e-04  0.05737284  0.2925963 #> [1190,]  0.3050954 -0.57994186  0.5319456 -2.132891e-02  0.47785354  0.5504958 #> [1191,] -0.6951352 -0.58063047  0.5316775 -2.155818e-02  0.47721061 -0.4497596 #> [1192,]  0.2457213  0.25008184  0.4582437 -3.039155e-01  0.31097290 -0.5200985 #> [1193,]  0.2827991  0.35391586  0.5053955 -6.027565e-02  0.41502394  0.5251576 #> [1194,] -0.6506981 -0.45016260  0.5810167 -2.884588e-03  0.59570835  0.5971023 #> [1195,] -0.6795038 -0.53401767  0.5495578 -1.049926e-02 -0.47973351 -0.4327458 #> [1196,]  0.1958279  0.13533588  0.3880629  1.096466e-01  0.18467726  0.4118004 #> [1197,]  0.2782470 -0.65937152 -0.5001855 -7.446042e-02  0.40211370 -0.4801810 #> [1198,] -0.7940282  0.15573401  0.4030172  1.885329e-01 -0.79170974 -0.5736040 #> [1199,]  0.2694313  0.31524018  0.4888454 -1.115726e-01  0.37714221 -0.4906873 #> [1200,]  0.4170946 -0.27948436 -0.3517362 -1.612746e-04 -0.25569831  0.6606216 #> [1201,]  0.2482600 -0.74320556 -0.5384003 -2.757129e-01  0.31794353  0.4831346 #> [1202,]  0.1195761  0.03317592  0.2624286  3.493604e-04  0.05375078  0.2869057 #> [1203,]  0.3405489  0.52480949 -0.4283459 -4.250926e-03  0.57342537 -0.4117703 #> [1204,]  0.3892890 -0.34376125  0.6217551 -5.148099e-04 -0.31117765  0.6356198 #> [1205,]  0.4099767  0.70489830 -0.3583885 -2.165584e-04 -0.26915406 -0.3456489 #> [1206,]  0.3289389 -0.50904902 -0.4410268 -7.155786e-03  0.54297517  0.5761985 #> [1207,]  0.1580112  0.07366294  0.3288634  8.913974e-03  0.10888848  0.3534995 #> [1208,]  0.2520002  0.26681043 -0.5334915  7.624438e-01  0.32827458  0.4878602 #> [1209,]  0.2748956  0.33091878  0.4956698 -8.691799e-02  0.39261183 -0.4841488 #> [1210,] -0.6148152 -0.35397337 -0.3822795 -6.124321e-04 -0.32002786  0.6318107 #> [1211,]  0.2685843  0.31282867  0.4877802 -1.159334e-01  0.37474849  0.5082915 #> [1212,]  0.2036110  0.15084393  0.3995699  1.672589e-01  0.20268391  0.4230357 #> [1213,]  0.1347437  0.04668054  0.2894659  1.379047e-03  0.07282547  0.3141742 #> [1214,]  0.1745734  0.09787925 -0.6445123  2.901754e-02  0.13956036 -0.6201715 #> [1215,] -0.6173104  0.63973171 -0.3847482 -6.808411e-04 -0.32549026 -0.3705204 #> [1216,]  0.4596078 -0.19842957 -0.3137932 -2.843602e-05 -0.18576283 -0.3036462 #> [1217,]  0.1944027  0.13259929  0.3859320  1.010593e-01  0.18146213 -0.5902834 #> [1218,]  0.2417858 -0.76018046 -0.5469978 -3.510855e-01  0.30024063  0.4748481 #> [1219,]  0.2430372  0.24306337 -0.5453259 -3.356551e-01  0.30364307  0.4764605 #> [1220,]  0.3765016  0.62384544  0.6090770 -8.862985e-04  0.66069800 -0.3763532 #> [1221,]  0.3158397  0.45212863 -0.4557070 -1.299271e-02 -0.49243553  0.5622485 #> [1222,]  0.3604312 -0.41912233 -0.4073167 -1.772116e-03 -0.37688656 -0.3918533 #> [1223,]  0.3433261 -0.46719720  0.5746429 -3.757148e-03  0.58056155 -0.4089370 #> [1224,]  0.3587416  0.57622771  0.5909289 -1.907390e-03 -0.38097708 -0.3935133 #> [1225,]  0.3943081 -0.33151856  0.6266456 -4.166839e-04 -0.30058427 -0.3597647 #> [1226,]  0.2907881  0.37745952 -0.4849434 -4.152709e-02  0.43765044 -0.4656112 #> [1227,]  0.1858414  0.11683902  0.3729721  6.042198e-02  0.16270884  0.3970206 #> [1228,] -0.6497446  0.55253296 -0.4179735 -2.765973e-03 -0.40190211 -0.4019413 #> [1229,]  0.3061618 -0.57675677  0.5331838 -2.030039e-02 -0.51917553 -0.4483248 #> [1230,] -0.8543848  0.05830040 -0.6918243  3.406699e-03  0.08864377 -0.6670930 #> [1231,]  0.1925510 -0.87090825  0.3831521  9.073417e-02 -0.82267606 -0.5930034 #> [1232,]  0.1782527  0.10384732 -0.6387485  3.711072e-02  0.14692157 -0.6144958 #> [1233,]  0.1461668  0.05893533  0.3091107  3.561047e-03  0.08949464  0.3338404 #> [1234,] -0.6626569  0.51552775 -0.4318171 -4.904693e-03  0.56511467 -0.4150620 #> [1235,]  0.1615433  0.07846773  0.3346367  1.157917e-02  0.11508553  0.3592249 #> [1236,]  0.1506296  0.06423737  0.3166253  5.069653e-03  0.09655014  0.3413326 #> [1237,]  0.2680393  0.31127953 -0.5129064 -1.188223e-01 -0.62679129  0.5076332 #> [1238,]  0.1888622 -0.87773336  0.3775763  7.277777e-02  0.16921425 -0.5984645 #> [1239,] -0.7277792  0.32321891 -0.5076605 -9.826423e-02  0.38503455  0.5126614 #> [1240,]  0.2868415  0.36579777  0.5103051 -4.992598e-02  0.42648157  0.5298504 #> [1241,] -0.5191085 -0.16544741  0.7041262 -1.205366e-05 -0.15706771 -0.2867823 #> [1242,]  0.1874679  0.11974337  0.3754555  6.682831e-02  0.16619626  0.3994564 #> [1243,]  0.1315683  0.04359948  0.2838974  1.046430e-03  0.06854545 -0.6914223 #> [1244,]  0.1451877  0.05781139 -0.6925499  3.291366e-03  0.08798756  0.3321825 #> [1245,]  0.2575406  0.28190842  0.4737038 -1.885828e-01 -0.65630420 -0.5052206 #> [1246,]  0.3092991  0.43261366 -0.4631899 -1.755804e-02  0.48953843  0.5551282 #> [1247,] -0.7170703  0.35429864 -0.4944452 -5.991035e-02  0.41539431  0.5253100 #> [1248,]  0.2130392 -0.82911808 -0.5867792  2.629103e-01  0.22545408 -0.5636729 #> [1249,]  0.1656339  0.08427429  0.3412577  1.557188e-02  0.12249751  0.3657796 #> [1250,]  0.2712968  0.32057022  0.4911846 -1.024983e-01  0.38241919  0.5115548 #> [1251,]  0.1407828  0.05292725 -0.7000738  2.296110e-03  0.08138927  0.3246605 #> [1252,]  0.2579048 -0.71708883 -0.5258264 -1.856742e-01  0.34471377  0.4952309 #> [1253,]  0.2168342  0.17932442  0.4186288  3.089596e-01  0.23489391  0.4415819 #> [1254,]  0.1482737  0.06140160 -0.6873307  4.212114e-03  0.09278742  0.3373904 #> [1255,]  0.1195761  0.03317592  0.2624286  3.493604e-04  0.05375078  0.2869057 #> [1256,]  0.2829332  0.35430886  0.5055591 -5.990063e-02  0.41540420  0.5253140 #> [1257,] -0.6347267 -0.40593002  0.5976782 -1.436392e-03 -0.36530756 -0.3871284 #> [1258,]  0.2766249  0.33592089  0.4978124 -8.025873e-02  0.39751417 -0.4820973 #> [1259,]  0.2824438 -0.64712494 -0.4950381 -6.128040e-02  0.41401645 -0.4752570 #> [1260,]  0.2196204  0.18565679 -0.5774319  3.450327e-01 -0.75808182  0.4454060 #> [1261,]  0.2647518 -0.69801610  0.4829347 -1.376840e-01  0.36393470 -0.4963561 #> [1262,]  0.1548102  0.06947405  0.3235853  6.999686e-03  0.10343591 -0.6517427 #> [1263,]  0.3742372 -0.38206330 -0.3932015 -9.764968e-04  0.65555037  0.6214938 #> [1264,] -0.5819947  0.72247133 -0.3508915 -1.553224e-04 -0.25401377  0.6614176 #> [1265,]  0.1746016  0.09792418  0.3555321  2.907299e-02  0.13961605 -0.6201278 #> [1266,]  0.2385005  0.23139227 -0.5514098  6.066916e-01  0.29135671  0.4705906 #> [1267,] -0.5825626  0.72125281  0.6485819 -1.590077e-04 -0.25506335 -0.3390787 #> [1268,] -0.6449797 -0.43409498  0.5870438 -2.244000e-03  0.60992396 -0.3971905 #> [1269,] -0.6948166  0.42032086  0.5320479 -2.124210e-02  0.47809877 -0.4494068 #> [1270,]  0.2804994  0.34718985 -0.4974170 -6.707662e-02  0.40850197  0.5224678 #> [1271,]  0.3296116 -0.50707044 -0.4402837 -6.941684e-03  0.54476507 -0.4230961 #> [1272,]  0.1567640  0.07201218  0.3268121  8.116978e-03  0.10674542 -0.6485369 #> [1273,]  0.2545810  0.27380575  0.4698714 -2.136294e-01  0.33544184  0.4910951 #> [1274,]  0.2536119  0.27117115 -0.5313890 -2.223842e-01  0.33274703  0.4898828 #> [1275,]  0.2252650  0.19882506  0.4304694 -5.776499e-01 -0.74362165 -0.5469333 #> [1276,]  0.3663408 -0.40304916 -0.4012272 -1.371605e-03 -0.36278394  0.6139069 #> [1277,]  0.2654420  0.30392857 -0.5161895 -1.335130e-01 -0.63412020 -0.4955159 #> [1278,]  0.1404448  0.05256393  0.2993451  2.232628e-03  0.08089514 -0.6759211 #> [1279,] -0.5401971 -0.19810498  0.6863743 -2.821252e-05 -0.18548150 -0.3034886 #> [1280,]  0.1404650  0.05258565  0.2993799  2.236385e-03  0.08092470  0.3241137 #> [1281,]  0.2493903  0.25980565 -0.5369125 -2.637500e-01 -0.67894185  0.4845673 #> [1282,]  0.1860571 -0.88277830 -0.6266980  6.123956e-02  0.16316919  0.3973442 #> [1283,] -0.7002888 -0.59601194 -0.4743491 -2.739112e-02  0.46279198  0.5444968 #> [1284,]  0.3685906 -0.39701111 -0.3989277 -1.244689e-03 -0.35750012  0.6160811 #> [1285,]  0.2505209  0.26283127  0.4645720  7.478429e-01 -0.67581989  0.4859964 #> [1286,]  0.3772051  0.62567094 -0.3902172 -8.600482e-04 -0.33771283 -0.3756864 #> [1287,]  0.2130815  0.17097476  0.4132813  2.634012e-01  0.22555836  0.4363860 #> [1288,]  0.3428421  0.53141306 -0.4258768 -3.838760e-03  0.57932219 -0.4094296 #> [1289,] -0.5610851 -0.23528130 -0.3318893 -6.587733e-05 -0.21761356 -0.3206822 #> [1290,]  0.3935844 -0.33326700  0.6259433 -4.295608e-04 -0.30209615 -0.3604273 #> [1291,] -0.6621326  0.51704965 -0.4312478 -4.791084e-03  0.56647918  0.5854780 #> [1292,]  0.3121697  0.44118386  0.5401070 -1.538053e-02 -0.50252543  0.5582662 #> [1293,]  0.2819393 -0.64860171 -0.4956543 -6.273529e-02 -0.58741415  0.5241538 #> [1294,]  0.3492741  0.54975872  0.5809873 -2.888124e-03 -0.40436143 -0.4029256 #> [1295,]  0.2755638  0.33284936 -0.5035014 -8.428457e-02  0.39450576 -0.4833551 #> [1296,]  0.1871801  0.11922636  0.3750168  6.565373e-02  0.16557654  0.3990262 #> [1297,] -0.6029291 -0.32489732  0.6293173 -3.710443e-04  0.70513833 -0.3572438 #> [1298,]  0.1805210  0.10763413 -0.6352218  4.305533e-02  0.15155588 -0.6110271 #> [1299,]  0.2426522  0.24206350 -0.5458397 -3.403609e-01  0.30259531 -0.5240350 #> [1300,]  0.2777286  0.33912245 -0.5008245 -7.626797e-02  0.40064372  0.5192074 #> [1301,]  0.4267386 -0.25926396  0.6571355 -1.084173e-04 -0.23828219 -0.3310191 #> [1302,]  0.2702425  0.31755492 -0.5101362 -1.075384e-01 -0.62056378  0.5102889 #> [1303,] -0.6744271  0.48102413  0.5552392 -8.333689e-03  0.53397415 -0.4273474 #> [1304,]  0.1993906  0.14231691  0.3933573  1.336968e-01  0.19282697 -0.5830266 #> [1305,]  0.1526023  0.06667552  0.3199189  5.908965e-03  0.09976596  0.3446113 #> [1306,]  0.1731956  0.09569994  0.3533156  2.642287e-02  0.13685419 -0.6223126 #> [1307,]  0.3715678 -0.38909237  0.6040994 -1.095004e-03 -0.35058133  0.6189428 #> [1308,]  0.3904656 -0.34086691 -0.3770942 -4.898706e-04 -0.30867168 -0.3632941 #> [1309,]  0.3609498 -0.41770007 -0.4067795 -1.732607e-03  0.62436362 -0.3913450 #> [1310,]  0.3824060 -0.36098801  0.6149704 -6.890978e-04 -0.32611516 -0.3707862 #> [1311,] -0.6057778 -0.33172585 -0.3734378 -4.181919e-04 -0.30076350 -0.3598433 #> [1312,]  0.1460052  0.05874889  0.3088369  3.515178e-03  0.08924493  0.3335671 #> [1313,] -0.7636914  0.22584302  0.4456279  5.773295e-01  0.28547072 -0.5322700 #> [1314,]  0.1911166  0.12641199  0.3809899  8.335282e-02  0.17414900 -0.5951202 #> [1315,]  0.4002571  0.68263368 -0.3676191 -3.246888e-04  0.71164226 -0.3543537 #> [1316,]  0.2706620  0.31875380  0.4903897 -1.055059e-01  0.38062296  0.5107930 #> [1317,]  0.4374426  0.76191046 -0.3332032 -6.995548e-05 -0.22003526 -0.3219194 #> [1318,] -0.6072327  0.66475225 -0.3748507 -4.445871e-04  0.69619070  0.6388234 #> [1319,] -0.8099295  0.12447848  0.3794084  7.829452e-02  0.17185087  0.4033307 #> [1320,] -0.6528655  0.54368625 -0.4212861 -3.174071e-03  0.59024819  0.5949208 #> [1321,] -0.6698789  0.49442706 -0.4397216 -6.783897e-03  0.54611885 -0.4225624 #> [1322,]  0.3867680 -0.35001293  0.6192806 -5.727094e-04 -0.31659399  0.6332838 #> [1323,]  0.4328919 -0.24692894  0.6627128 -8.425211e-05 -0.22765489 -0.3257656 #> [1324,]  0.3266012  0.48406113  0.5563828 -7.954091e-03  0.53673165 -0.4262614 #> [1325,]  0.1454954  0.05816315  0.3079725  3.374021e-03  0.08845967  0.3327042 #> [1326,]  0.3512763  0.55541220 -0.4168944 -2.644503e-03  0.60064814 -0.4009193 #> [1327,]  0.3733187 -0.38447401  0.6058715 -1.015712e-03  0.65344842 -0.3793823 #> [1328,]  0.3926384  0.66443890  0.6250239 -4.470077e-04  0.69591964 -0.3612950 #> [1329,] -0.7208816  0.34316386 -0.4991127 -7.151450e-02  0.40458527 -0.4791545 #> [1330,]  0.3402800  0.52403316  0.5713639 -4.302148e-03 -0.42726873  0.5879545 #> [1331,]  0.2430418 -0.75692480 -0.5453199  6.644003e-01  0.30365546 -0.5235336 #> [1332,]  0.2927204  0.38318783  0.5173682 -3.794534e-02 -0.55689012 -0.4634045 #> [1333,]  0.2406643  0.23692834  0.4515000 -3.652313e-01  0.29720009 -0.5266012 #> [1334,] -0.7595518  0.23637280  0.4512100 -3.679909e-01  0.29661498  0.4731190 #> [1335,]  0.1861967  0.11746983  0.3735154  6.177396e-02  0.16346755  0.3975536 #> [1336,] -0.7669762 -0.78236037  0.4411600  5.319822e-01  0.27671535 -0.5365875 #> [1337,]  0.2134224  0.17172473 -0.5862309  2.673806e-01 -0.77359961  0.4368602 #> [1338,]  0.2592587  0.28664982  0.4759168 -1.751872e-01 -0.65149748  0.4969058 #> [1339,] -0.8073257 -0.87067644  0.3833376  9.139317e-02  0.17759804  0.4071781 #> [1340,]  0.2951922 -0.60946982 -0.4796890 -3.381182e-02  0.45008252  0.5394039 #> [1341,]  0.4001547 -0.31760669 -0.3677173 -3.260832e-04  0.71143474 -0.3544463 #> [1342,] -0.5454142 -0.20692879  0.6818777 -3.484539e-05 -0.19312359 -0.3077210 #> [1343,] -0.6641068 -0.48868837 -0.4333946 -5.233504e-03 -0.43866927  0.5834417 #> [1344,]  0.3709449 -0.39074213 -0.3965324 -1.124714e-03  0.64797822  0.6183456 #> [1345,]  0.2161082 -0.82230716 -0.5824020  2.998558e-01 -0.76692365 -0.5594192 #> [1346,] -0.7510203  0.25871017  0.4625475 -2.680529e-01 -0.68007407  0.4840473 #> [1347,]  0.3237611 -0.52433537  0.5532185 -9.048395e-03  0.52909970  0.5707329 #> [1348,]  0.3364082 -0.48718953  0.5671663 -5.114189e-03 -0.43732342 -0.4160263 #> [1349,]  0.1597987  0.07607049 -0.6682082  1.018258e-02  0.11200111 -0.6435953 #> [1350,]  0.2703407  0.31783534 -0.5100131 -1.070596e-01  0.37971389  0.5104069 #> [1351,]  0.3518269  0.55696174  0.5836866 -2.581286e-03  0.60201972  0.5996309 #> [1352,] -0.6470288  0.56017518  0.5848921 -2.454814e-03 -0.39513786  0.6007724 #> [1353,]  0.2390194  0.23271468 -0.5507107  6.135131e-01 -0.70724489  0.4712654 #> [1354,]  0.2174071  0.18061735  0.4194410  3.162342e-01  0.23633196 -0.5576294 #> [1355,]  0.2867365  0.36548806 -0.4898219 -5.017130e-02  0.42618393  0.5297290 #> [1356,]  0.2608024  0.29093275  0.4778978 -1.638460e-01  0.35283005  0.4988086 #> [1357,] -0.6107195 -0.34378211 -0.3782532 -5.149938e-04  0.68880428 -0.3643880 #> [1358,] -0.7929385 -0.84197973  0.4046019  1.989655e-01 -0.78909983 -0.5720602 #> [1359,]  0.2214763 -0.81006322  0.4251777  3.699327e-01  0.24663945  0.4479374 #> [1360,]  0.1990906  0.14172148  0.3929133  1.315247e-01 -0.80786529  0.4165399 #> [1361,]  0.1714260  0.09294504  0.3505145  2.339913e-02  0.13341892 -0.6250755 #> [1362,]  0.2577286 -0.71757428 -0.5260537 -1.870772e-01 -0.65577896  0.4950125 #> [1363,]  0.2698488  0.31643105  0.4893698 -1.094789e-01  0.37832286  0.5098154 #> [1364,] -0.5946268 -0.30551291 -0.3627390 -2.622516e-04 -0.27813001 -0.3497510 #> [1365,]  0.3054303  0.42105836 -0.4676652 -2.100032e-02 -0.52121300  0.5508665 #> [1366,] -0.6981456  0.41038164 -0.4718348 -2.479218e-02 -0.53120107  0.5468936 #> [1367,]  0.1932703  0.13044777  0.3842334  9.463591e-02  0.17892611  0.4080548 #> [1368,]  0.4611558 -0.19586597 -0.3124666 -2.671078e-05 -0.18354037  0.6976024 #> [1369,]  0.4374426  0.76191046 -0.3332032 -6.995548e-05 -0.22003526 -0.3219194 #> [1370,]  0.3742910 -0.38192215 -0.3931471 -9.742454e-04 -0.34432660 -0.3784549 #> [1371,] -0.8403421 -0.92412101  0.3315615  1.007688e-02  0.11175407  0.3561764 #> [1372,]  0.2526807  0.26864850  0.4673972 -2.310565e-01  0.33016160  0.4887152 #> [1373,]  0.3183161 -0.54049809 -0.4529007 -1.159908e-02 -0.48566574 -0.4350828 #> [1374,] -0.7597611 -0.76416469 -0.5490710  6.293267e-01 -0.70395138  0.4728479 #> [1375,]  0.3357462  0.51088381 -0.4335547 -5.268063e-03 -0.43905354 -0.4167102 #> [1376,]  0.2606625  0.29054364 -0.5222815 -1.648475e-01  0.35243744 -0.5013636 #> [1377,]  0.2175383  0.18091395  0.4196267 -6.820898e-01  0.23666156  0.4425510 #> [1378,]  0.1523020  0.06630056 -0.6805814  5.773402e-03  0.09927254 -0.6558866 #> [1379,] -0.8265392  0.09611704  0.3537342  2.690530e-02  0.13737290 -0.6218999 #> [1380,]  0.1374754  0.04944264 -0.7057815  1.740884e-03  0.07663022 -0.6810572 #> [1381,]  0.1611624  0.07794028  0.3340167  1.125999e-02  0.11440814 -0.6413896 #> [1382,]  0.2210143  0.18886664  0.4245291  3.636766e-01  0.24546093  0.4473084 #> [1383,]  0.1476299  0.06064107  0.3115840  4.002347e-03  0.09177407  0.3363082 #> [1384,]  0.1436128  0.05603288  0.3047701  2.896950e-03 -0.91440573  0.3295052 #> [1385,]  0.1370954  0.04905217  0.2935594  1.685767e-03  0.07609414  0.3182820 #> [1386,]  0.2397373  0.23454974  0.4502552 -3.771388e-01 -0.70530709 -0.5278023 #> [1387,] -0.6193367 -0.36542770 -0.3867619 -7.421197e-04  0.67002838  0.6275777 #> [1388,]  0.1736348  0.09639138 -0.6459912  2.722623e-02  0.13771387  0.3783708 #> [1389,]  0.3685865 -0.39702211  0.6010681 -1.244910e-03 -0.35750974 -0.3839228 #> [1390,]  0.2638341 -0.70059563  0.4817683 -1.434096e-01  0.36135050  0.5025245 #> [1391,] -0.6692824 -0.50382123  0.5609357 -6.603852e-03  0.54770147  0.5780616 #> [1392,]  0.1558763  0.07085184  0.3253481  7.590403e-03  0.10523463  0.3500090 #> [1393,]  0.1427025  0.05502134  0.3032160  2.689424e-03  0.08422831 -0.6720484 #> [1394,]  0.1891360  0.12276577 -0.6220081  7.399784e-02  0.16980996  0.4019428 #> [1395,] -0.8000278  0.14347560  0.3942173  1.379881e-01  0.19417256  0.4178132 #> [1396,]  0.2562497  0.27836394  0.4720354 -1.991969e-01 -0.65990864 -0.5068242 #> [1397,]  0.1319511  0.04396365  0.2845713  1.082166e-03  0.06905337  0.3092556 #> [1398,]  0.2824092 -0.64722624  0.5049197 -6.137910e-02  0.41391836 -0.4752973 #> [1399,]  0.1226788  0.03569375  0.2680509  4.681320e-04  0.05737284  0.2925963 #> [1400,]  0.1319511  0.04396365  0.2845713  1.082166e-03  0.06905337  0.3092556 #> [1401,]  0.2822266 -0.64776081  0.5046967 -6.190260e-02  0.41340062 -0.4755105 #> [1402,] -0.5386470 -0.19554136  0.6877021 -2.649876e-05 -0.18325887  0.6977612 #> [1403,] -0.7039001 -0.60676972  0.5213878 -3.241026e-02  0.45263972 -0.4595688 #> [1404,]  0.1733252  0.09590373  0.3535203  2.665775e-02 -0.86289233 -0.6221108 #> [1405,]  0.3877076  0.65232503 -0.3797957 -5.503894e-04 -0.31456785 -0.3658442 #> [1406,]  0.3965080  0.67376051 -0.3712259 -3.799101e-04 -0.29602134 -0.3577563 #> [1407,]  0.1719661  0.09378058 -0.6486293  2.428685e-02 -0.86553749 -0.6242307 #> [1408,] -0.5386756 -0.19558843 -0.3123224 -2.652942e-05 -0.18329969  0.6977381 #> [1409,]  0.2591671  0.28639619  0.4757989 -1.758811e-01 -0.65175418  0.4967926 #> [1410,]  0.3012665 -0.59137262 -0.4725233  9.745209e-01  0.46715270 -0.4537626 #> [1411,] -0.6339204 -0.40375320  0.5985052 -1.387177e-03 -0.36340052 -0.3863463 #> [1412,]  0.2542767  0.27297761 -0.5305240 -2.163483e-01 -0.66540463 -0.5092852 #> [1413,]  0.2784182  0.34112639  0.5000255 -7.387237e-02 -0.59740061 -0.4799791 #> [1414,] -0.7218577  0.34032432 -0.5003144 -7.482197e-02  0.40181693  0.5196956 #> [1415,]  0.2593696 -0.71304331 -0.5239407 -1.743511e-01  0.34881304  0.4970427 #> [1416,]  0.3476617  0.54518534  0.5792750 -3.101020e-03 -0.40842017 -0.4045477 #> [1417,]  0.2810758  0.34887334 -0.4967107 -6.530456e-02  0.41013688  0.5231435 #> [1418,]  0.1448657  0.05744488  0.3069032  3.206907e-03  0.08749522 -0.6683637 #> [1419,] -0.8270613  0.09529685  0.3529096  2.596291e-02  0.13635256 -0.6227129 #> [1420,]  0.1683712  0.08830616  0.3456495  1.891052e-02  0.12759705  0.3701211 #> [1421,]  0.2902520 -0.62412794  0.5144135 -4.257961e-02  0.43613441 -0.4662253 #> [1422,]  0.1927917  0.12954458  0.3835142  9.202459e-02  0.17785930  0.4073509 #> [1423,]  0.2233975 -0.80558124 -0.5721330  3.962932e-01  0.25156130 -0.5494552 #> [1424,]  0.3328701 -0.49751252 -0.4366989 -5.993929e-03 -0.44660741 -0.4196935 #> [1425,] -0.6134696  0.64939444 -0.3809532 -5.784980e-04  0.68289232  0.6330631 #> [1426,] -0.8353060  0.08291699 -0.6602575  1.455636e-02 -0.87922776  0.3642807 #> [1427,]  0.3212963  0.46835765  0.5504571 -1.012299e-02  0.52243680  0.5681090 #> [1428,]  0.2062951 -0.84358959  0.4034878  1.915878e-01 -0.79093685  0.4268545 #> [1429,]  0.3209246 -0.53274548 -0.4499604 -1.029601e-02 -0.47857085  0.5677121 #> [1430,]  0.4089045 -0.29750483 -0.3593983 -2.264195e-04 -0.27122539 -0.3466010 #> [1431,] -0.6388740 -0.41721704 -0.4065970 -1.719382e-03  0.62478809 -0.3911723 #> [1432,] -0.6097137 -0.34130695 -0.3772694 -4.935893e-04 -0.30905262 -0.3634594 #> [1433,]  0.4092240 -0.29678731 -0.3590972 -2.234339e-04 -0.27060691 -0.3463171 #> [1434,]  0.4366034 -0.23970170 -0.3339538 -7.239382e-05 -0.22142528 -0.3226262 #> [1435,] -0.8617563  0.05023823  0.2955487  1.857442e-03  0.07772073  0.3202763 #> [1436,] -0.6137570 -0.35132309 -0.3812361 -5.855790e-04  0.68227028 -0.3672041 #> [1437,]  0.1640935  0.08205705  0.3387726  1.393974e-02  0.11967689 -0.6366792 #> [1438,]  0.2962611  0.39370986 -0.4784213 -3.216761e-02 -0.54690647  0.5406134 #> [1439,]  0.3801749 -0.36667742 -0.3872485 -7.577143e-04  0.66894229 -0.3728819 #> [1440,]  0.2698506 -0.68356390 -0.5106280 -1.094701e-01  0.37832787 -0.4901824 #> [1441,]  0.3058729  0.42238039  0.5328487 -2.057392e-02  0.48002010 -0.4486440 #> [1442,]  0.3471929 -0.45614759 -0.4212239 -3.165892e-03 -0.40960418 -0.4050203 #> [1443,]  0.2469057  0.25320463  0.4598118 -2.905316e-01  0.31422049  0.4814124 #> [1444,]  0.2959876  0.39289604 -0.4787454 -3.258048e-02 -0.54767663 -0.4596958 #> [1445,] -0.8212185 -0.89527734  0.3620753  3.842668e-02 -0.85200472 -0.6136852 #> [1446,]  0.2425007  0.24167055 -0.5460420 -3.422227e-01  0.30218329  0.4757699 #> [1447,] -0.7871634  0.17043707 -0.5870693  2.605633e-01 -0.77504576 -0.5639550 #> [1448,]  0.2635992  0.29874513 -0.5185307 -1.449090e-01  0.36068931  0.5022375 #> [1449,]  0.4543976 -0.20725287 -0.3182854 -3.511216e-05 -0.19340405 -0.3078745 #> [1450,]  0.2240095  0.19585735  0.4287210 -5.952081e-01  0.25313634 -0.5486274 #> [1451,]  0.2257874 -0.79993373 -0.5688047  4.296958e-01 -0.74226855  0.4537699 #> [1452,]  0.2938750  0.38661563 -0.4812552 -3.595479e-02 -0.55363145  0.5379094 #> [1453,] -0.6906705  0.43270442  0.5368451 -1.753341e-02  0.48962264 -0.4448384 #> [1454,]  0.1381576  0.05014872 -0.7046001  1.844038e-03  0.07759815  0.3201271 #> [1455,]  0.1769139  0.10165070  0.3591603  3.395703e-02  0.14422050  0.3834460 #> [1456,]  0.2875477  0.36788039 -0.4888416 -4.830779e-02 -0.57151837  0.5306656 #> [1457,]  0.3370988 -0.48518170 -0.4320825 -4.958559e-03  0.56447833  0.5846863 #> [1458,]  0.1748508  0.09832177 -0.6440758  2.956711e-02  0.14010866 -0.6197414 #> [1459,] -0.6090145 -0.33959254 -0.3765865 -4.792454e-04 -0.30756863 -0.3628149 #> [1460,]  0.3687721  0.60347398 -0.3987427 -1.234991e-03 -0.35707594  0.6162561 #> [1461,] -0.8093295  0.12558533 -0.6196840  8.116298e-02  0.17316720  0.4042197 #> [1462,]  0.3824745 -0.36081404 -0.3849616 -6.870936e-04  0.67403589 -0.3707220 #> [1463,]  0.2109687  0.16636585 -0.5897506  2.395057e-01  0.22036815  0.4334373 #> [1464,]  0.3138747 -0.55372906 -0.4579442 -1.421981e-02  0.50217050 -0.4398795 #> [1465,]  0.2117556  0.16807477  0.4113805 -7.517501e-01  0.22229575  0.4345376 #> [1466,]  0.3323825  0.50106035 -0.4372337 -6.126808e-03  0.55210634  0.5797990 #> [1467,]  0.1699372  0.09066580 -0.6518518  2.110273e-02  0.13056438 -0.6274110 #> [1468,]  0.1658450  0.08458105 -0.6584025  1.580872e-02  0.12288683  0.3661157 #> [1469,]  0.2633095 -0.70206704 -0.5188995 -1.467768e-01  0.35987430 -0.4981165 #> [1470,] -0.7850273  0.17515673 -0.5840177  2.858886e-01  0.23024477 -0.5609889 #> [1471,] -0.5394080 -0.19679661 -0.3129493 -2.732657e-05 -0.18434730  0.6971481 #> [1472,]  0.2568974  0.28014035 -0.5271269  8.061881e-01  0.34189902 -0.5060190 #> [1473,]  0.4054204  0.69459515 -0.3626942 -2.617361e-04 -0.27803682  0.6502913 #> [1474,]  0.2368040  0.22709186 -0.5537014 -4.159627e-01  0.28679789  0.4683779 #> [1475,]  0.2870408  0.36638524  0.5105460 -4.946399e-02 -0.57295400 -0.4699195 #> [1476,]  0.3120120 -0.55928677  0.5399264 -1.549266e-02 -0.50296043  0.5580943 #> [1477,]  0.2667268  0.30755815 -0.5145631 -1.260519e-01  0.36950314  0.5060443 #> [1478,]  0.1807237  0.10797655  0.3650924  4.362574e-02  0.15197358  0.3892818 #> [1479,] -0.7416503  0.28413771  0.4747469 -1.821721e-01 -0.65404209  0.4957818 #> [1480,]  0.1750943  0.09871104 -0.6436931  3.005701e-02  0.14059065  0.3806357 #> [1481,]  0.4806686 -0.16576813 -0.2960580 -1.216226e-05 -0.15734800 -0.2869556 #> [1482,]  0.2594430  0.28715995 -0.5238464 -1.737993e-01  0.34901867 -0.5028667 #> [1483,]  0.1286903  0.04092542  0.2788091  8.107755e-04  0.06479835 -0.6965449 #> [1484,]  0.3546748 -0.43505864 -0.4133183 -2.278190e-03 -0.39092678  0.6024667 #> [1485,]  0.3648405  0.59289888 -0.4027664 -1.463551e-03 -0.36633393  0.6124512 #> [1486,]  0.3169568  0.45545614 -0.4544393 -1.234395e-02  0.51062232 -0.4365458 #> [1487,]  0.2680365  0.31127149  0.4870901 -1.188375e-01 -0.62679928 -0.4923702 #> [1488,]  0.3356213  0.51052006 -0.4336908 -5.297623e-03 -0.43938032  0.5831606 #> [1489,]  0.2852864  0.36121843 -0.4915785 -5.368144e-02 -0.57792475 -0.4719496 #> [1490,]  0.1195761  0.03317592  0.2624286  3.493604e-04  0.05375078  0.2869057 #> [1491,]  0.2672776  0.30911840  0.4861328 -1.229701e-01 -0.62894208 -0.4932882 #> [1492,]  0.1641159 -0.91791093  0.3388088  1.396234e-02  0.11971771  0.3633566 #> [1493,]  0.4120577 -0.29047521 -0.3564343 -1.986476e-04 -0.26516706 -0.3438067 #> [1494,]  0.2007123  0.14495748  0.3953098  1.436007e-01  0.19589061  0.4188796 #> [1495,]  0.1226788  0.03569375  0.2680509  4.681320e-04  0.05737284  0.2925963 #> [1496,]  0.3221285 -0.52917334  0.5513911 -9.746247e-03 -0.47530957 -0.4310035 #> [1497,]  0.2882662 -0.62999882 -0.4879749 -4.671494e-02 -0.56948411 -0.4685064 #> [1498,]  0.1404448  0.05256393  0.2993451  2.232628e-03  0.08089514 -0.6759211 #> [1499,] -0.7108898  0.37249488 -0.4869585 -4.491046e-02  0.43290468 -0.4675356 #> [1500,]  0.1748520  0.09832362 -0.6440740  2.956942e-02  0.14011095  0.3802604 #> [1501,] -0.7618477 -0.76949317  0.4481207 -3.979147e-01  0.29041949  0.4701373 #> [1502,]  0.2958955  0.39262203 -0.4788545 -3.272071e-02 -0.54793601  0.5402000 #> [1503,]  0.2697270 -0.68391657  0.4892168 -1.100860e-01 -0.62202168 -0.4903312 #> [1504,]  0.4104299 -0.29408986 -0.3579622 -2.125225e-04 -0.26828201  0.6547529 #> [1505,]  0.4876990 -0.15589550 -0.2902842 -9.166763e-06 -0.14870660 -0.2815223 #> [1506,] -0.7149099  0.36064125  0.5081833 -5.417480e-02  0.42151903  0.5278227 #> [1507,]  0.2389183  0.23245675 -0.5508468 -3.878119e-01  0.29248248  0.4711340 #> [1508,] -0.5896283 -0.29421974 -0.3580170 -2.130367e-04 -0.26839394  0.6547013 #> [1509,]  0.1845840  0.11462273  0.3710454  5.584178e-02  0.16003759 -0.6048703 #> [1510,]  0.2366325 -0.77334076  0.4460666 -4.182801e-01  0.28633830 -0.5318463 #> [1511,]  0.3035715  0.41550737 -0.4698287 -2.289150e-02  0.47360067 -0.4511946 #> [1512,]  0.2542037  0.27277898 -0.5306189 -2.170049e-01 -0.66560775  0.4906235 #> [1513,]  0.1981613  0.13988561 -0.6084643  1.249695e-01  0.18999700 -0.5848057 #> [1514,]  0.2555150 -0.72364614  0.4710837 -2.054512e-01  0.33804299 -0.5077392 #> [1515,]  0.1928681 -0.87031150  0.3836290  9.243734e-02  0.17802938 -0.5925366 #> [1516,]  0.2152710  0.17582104  0.4164071  2.895245e-01 -0.76901276  0.4394239 #> [1517,]  0.1681041  0.08790749  0.3452222  1.855802e-02  0.12709448  0.3696990 #> [1518,]  0.2906231  0.37697080  0.5148587 -4.184825e-02  0.43718386  0.5341998 #> [1519,] -0.6013405 -0.32112818 -0.3691529 -3.471430e-04 -0.29160594 -0.3558005 #> [1520,]  0.2858903  0.36299558 -0.4908463 -5.219095e-02  0.42378665 -0.4712498 #> [1521,] -0.7619947 -0.76986653 -0.5520777 -3.998662e-01  0.29002408  0.4699458 #> [1522,] -0.7087859  0.37872148  0.5155671 -4.070938e-02  0.43885466  0.5348762 #> [1523,]  0.2378949  0.22985318  0.4477733 -4.013348e-01  0.28972714 -0.5301981 #> [1524,]  0.2329357  0.21742165  0.4410397 -4.692502e-01  0.27648180 -0.5367037 #> [1525,]  0.3342883 -0.49336747 -0.4351462 -5.623985e-03 -0.44287539 -0.4182201 #> [1526,] -0.5852542 -0.28457305 -0.3539214 -1.777202e-04 -0.26008187 -0.3414380 #> [1527,] -0.8708363  0.04135758  0.2796487  8.458066e-04  0.06540604  0.3043010 #> [1528,]  0.1730516  0.09547386 -0.6469119  2.616414e-02  0.13657288 -0.6225370 #> [1529,]  0.1831302  0.11209180  0.3688102  5.092725e-02  0.15697632 -0.6070650 #> [1530,]  0.2734345 -0.67329286 -0.5061469 -9.295194e-02 -0.61152805 -0.4858886 #> [1531,] -0.6954142  0.41853634  0.5313530 -2.183895e-02 -0.52356758  0.5499312 #> [1532,] -0.5691991 -0.25107116 -0.3391753 -9.178130e-05 -0.23122420 -0.3275439 #> [1533,]  0.1705843  0.09165209  0.3491778  2.207431e-02  0.13180101  0.3736053 #> [1534,]  0.2726138  0.32434738 -0.5071699 -9.651344e-02 -0.61385256  0.5131314 #> [1535,]  0.3369519 -0.48560881  0.5677577 -4.991268e-03 -0.43590483 -0.4154653 #> [1536,] -0.6861157  0.44629963 -0.4579332 -1.421352e-02 -0.49780305 -0.4398691 #> [1537,] -0.8300051  0.09075352  0.3482401  2.118780e-02  0.13067445 -0.6273203 #> [1538,]  0.1799045  0.10659674 -0.6361784  4.136100e-02  0.15028906 -0.6119676 #> [1539,]  0.3561650 -0.43090788  0.5882421 -2.134410e-03 -0.38726403 -0.3960562 #> [1540,]  0.2178992  0.18173150 -0.5798624  3.225431e-01 -0.76243044  0.4430469 #> [1541,]  0.4486677 -0.21730752  0.6767250 -4.429794e-05 -0.20209842  0.6874285 #> [1542,] -0.8055820  0.13262840 -0.6140452  1.011482e-01  0.18149639  0.4097389 #> [1543,]  0.4273435 -0.25803179  0.6576866 -1.057584e-04 -0.23722080  0.6695001 #> [1544,] -0.6715750  0.48943811  0.5584048 -7.323924e-03 -0.45839434 -0.4243412 #> [1545,]  0.2030099  0.14961240  0.3986888  1.621306e-01  0.20126673  0.4221765 #> [1546,]  0.1769667  0.10173686 -0.6407570  3.407680e-02  0.14432664 -0.6164726 #> [1547,] -0.5867445 -0.28783483  0.6446870 -1.890289e-04 -0.26289202  0.6572503 #> [1548,]  0.1989411  0.14142525  0.3926919  1.304525e-01 -0.80820987 -0.5836763 #> [1549,]  0.2515370  0.26556218  0.4659029 -2.420581e-01 -0.67300845 -0.5127226 #> [1550,]  0.2782090 -0.65948182  0.4997678 -7.459133e-02  0.40200609  0.5197743 #> [1551,] -0.6699074  0.49434328 -0.4397530 -6.792629e-03 -0.45395686  0.5774077 #> [1552,]  0.4379124 -0.23719077 -0.3327836 -6.862719e-05 -0.21926025  0.6784758 #> [1553,] -0.7347428  0.30340730  0.4835760  8.653810e-01  0.36535867 -0.4957408 #> [1554,]  0.1992042  0.14194680  0.3930815  1.323440e-01  0.19239674 -0.5832959 #> [1555,] -0.6234923 -0.37613862 -0.3909168 -8.860661e-04  0.66071188 -0.3763474 #> [1556,]  0.3452106  0.53819981 -0.4233387 -3.456005e-03 -0.41463073 -0.4070241 #> [1557,]  0.1286903  0.04092542  0.2788091  8.107755e-04  0.06479835 -0.6965449 #> [1558,]  0.4014153 -0.31465711 -0.3665102 -3.093413e-04 -0.28601918  0.6466923 #> [1559,]  0.4876990 -0.15589550 -0.2902842 -9.166763e-06 -0.14870660 -0.2815223 #> [1560,]  0.2723407  0.32356317  0.4924893 -9.772681e-02  0.38537414  0.5128049 #> [1561,]  0.2331736 -0.78198929 -0.5586355  5.340772e-01  0.27711283  0.4636102 #> [1562,]  0.2302667  0.21086195  0.4373834 -5.068718e-01  0.26943135  0.4597602 #> [1563,] -0.6208536  0.63068268  0.6117254 -7.916637e-04  0.66664725 -0.3738512 #> [1564,]  0.2278876 -0.79490564 -0.5658951  4.593886e-01 -0.73680409  0.4565874 #> [1565,]  0.3174898 -0.54295702 -0.4538354 -1.204620e-02  0.51207901  0.5640284 #> [1566,] -0.8620895  0.04989222 -0.7050278  1.806039e-03  0.07724675  0.3196985 #> [1567,]  0.2747109  0.33038575 -0.5045595 -8.765947e-02  0.39208851  0.5156317 #> [1568,] -0.7888633  0.16672993  0.4104911 -7.586432e-01  0.22077914  0.4336724 #> [1569,]  0.2252650  0.19882506  0.4304694 -5.776499e-01 -0.74362165 -0.5469333 #> [1570,]  0.2511354  0.26448143  0.4653772 -2.460136e-01  0.32587966 -0.5132286 #> [1571,]  0.2412471  0.23842880 -0.5477189 -3.578444e-01  0.29877900  0.4741524 #> [1572,]  0.4603637 -0.19717439  0.6868551 -2.757994e-05 -0.18467482 -0.3030360 #> [1573,]  0.2001325  0.14379579  0.3944541  1.391890e-01  0.19454405  0.4180443 #> [1574,]  0.3037980  0.41618360  0.5304354 -2.265210e-02  0.47423324  0.5490570 #> [1575,]  0.2451281  0.24852350 -0.5425434 -3.107654e-01  0.30934913 -0.5208570 #> [1576,]  0.1574859  0.07296479  0.3280002  8.569897e-03 -0.89201698  0.3526428 #> [1577,]  0.3346972 -0.49217389 -0.4346993 -5.521720e-03 -0.44180178  0.5822039 #> [1578,] -0.6501592  0.55136161 -0.4184123 -2.816924e-03 -0.40294024 -0.4023569 #> [1579,] -0.6939022 -0.57694788 -0.4668904 -2.036065e-02 -0.51935366 -0.4483955 #> [1580,]  0.1864589  0.11793664  0.3739161  6.278844e-02  0.16402855  0.3979466 #> [1581,]  0.2537994  0.27168013  0.4688550  7.793311e-01  0.33326807  0.4901176 #> [1582,]  0.2718432  0.32213575  0.4918678 -9.997437e-02 -0.61603443  0.5122094 #> [1583,]  0.3408192 -0.47441045  0.5719458 -4.200062e-03  0.57412262 -0.4114937 #> [1584,] -0.6581321  0.52861162  0.5730758 -4.008590e-03  0.57682215 -0.4104225 #> [1585,]  0.2433212  0.24380217 -0.5449471 -3.322072e-01  0.30441668  0.4768258 #> [1586,] -0.4960151 -0.13488506 -0.2771798 -4.764303e-06 -0.13020711 -0.2691900 #> [1587,]  0.1458614  0.05858327 -0.6914068  3.474816e-03  0.08902301  0.3333238 #> [1588,] -0.7406153  0.28699843  0.4760786 -1.742376e-01 -0.65114473  0.4970613 #> [1589,]  0.4366034 -0.23970170 -0.3339538 -7.239382e-05 -0.22142528 -0.3226262 #> [1590,] -0.7020347  0.39878443  0.5235940 -2.971117e-02  0.45788840  0.5425356 #> [1591,]  0.2887463  0.37141930 -0.4873965 -4.567986e-02 -0.56812523 -0.4679540 #> [1592,] -0.5525863 -0.21955762 -0.3243740 -4.661256e-05 -0.20404245 -0.3136062 #> [1593,]  0.1545939  0.06919661  0.3232270  6.885141e-03  0.10307307 -0.6520988 #> [1594,] -0.6518885 -0.45353707 -0.4202468 -3.040057e-03  0.59271424  0.5959054 #> [1595,] -0.6285778  0.61052246 -0.3960481 -1.101874e-03 -0.35091758  0.6188034 #> [1596,] -0.7541629  0.25038629 -0.5416029 -3.025906e-01  0.31128988 -0.5199506 #> [1597,] -0.8137307  0.11759904 -0.6263736  6.205355e-02  0.16362286  0.3976625 #> [1598,]  0.2920727  0.38126639 -0.4834056 -3.911011e-02  0.44128056  0.5358569 #> [1599,]  0.2615210  0.29293359  0.4788176 -1.587856e-01  0.35484710  0.4996918 #> [1600,]  0.3685860 -0.39702344  0.6010676 -1.244937e-03  0.64248910 -0.3839233 #> [1601,] -0.7763991  0.19489638  0.4281510  3.991134e-01 -0.74791553  0.4508201 #> [1602,] -0.7698616  0.21054900 -0.5627929  4.913107e-01 -0.73090610  0.4595896 #> [1603,] -0.7449267  0.27514761  0.4705107 -2.092876e-01  0.33681226  0.4917098 #> [1604,]  0.2077317  0.15943520 -0.5944256 -7.944278e-01  0.21251187 -0.5711131 #> [1605,]  0.2146938  0.17453662 -0.5844153  2.825097e-01  0.22955122 -0.5613752 #> [1606,]  0.3801380  0.63322804  0.6127148 -7.589063e-04 -0.33113988  0.6270834 #> [1607,]  0.2730201 -0.67448488  0.4933368 -9.473436e-02  0.38729818  0.5136168 #> [1608,]  0.3293883  0.49227308  0.5594698 -7.012004e-03 -0.45582865 -0.4233301 #> [1609,]  0.1651864  0.08362632  0.3405367  1.508053e-02  0.12167442  0.3650665 #> [1610,]  0.2431744 -0.75657987 -0.5451429 -3.339871e-01  0.30401670 -0.5233630 #> [1611,]  0.3063183  0.42371052  0.5333652 -2.015381e-02  0.48125995 -0.4481521 #> [1612,]  0.3380437  0.51756112 -0.4310565 -4.753489e-03 -0.43306241 -0.4143406 #> [1613,]  0.2956122 -0.60822058  0.5208095 -3.315581e-02 -0.54873389 -0.4601205 #> [1614,]  0.4040258  0.69139411 -0.3640196 -2.774012e-04  0.71920217 -0.3509587 #> [1615,]  0.2736861  0.32743143 -0.5058336 -9.188527e-02 -0.61081530 -0.4855886 #> [1616,]  0.2206730  0.18807823 -0.5759504  3.590795e-01 -0.75540815  0.4468433 #> [1617,]  0.3287786 -0.50952082  0.5587960 -7.207803e-03 -0.45745183  0.5760302 #> [1618,]  0.3411775 -0.47337705  0.5723322 -4.133598e-03 -0.42495396  0.5888726 #> [1619,]  0.3934656  0.66644547  0.6258280 -4.317129e-04 -0.30234481  0.6394638 #> [1620,]  0.2817070  0.35071861 -0.4959383 -6.341664e-02  0.41192700 -0.4761178 #> [1621,]  0.2333631  0.21848057 -0.5583770  5.367245e-01 -0.72238410  0.4638602 #> [1622,]  0.2721301 -0.67704135  0.4922263 -9.867247e-02  0.38477777 -0.4874471 #> [1623,]  0.3487407 -0.45175234 -0.4195786 -2.956843e-03  0.59429818  0.5965384 #> [1624,] -0.7305184  0.31538364  0.4889086 -1.113183e-01  0.37728449  0.5093733 #> [1625,]  0.4059907  0.69589770 -0.3621532 -2.555928e-04 -0.27691351 -0.3491986 #> [1626,]  0.4145022 -0.28510456 -0.3541487 -1.795208e-04 -0.26053976  0.6583478 #> [1627,]  0.3987070 -0.32101604 -0.3691073 -3.464538e-04 -0.29150910 -0.3557574 #> [1628,]  0.2797738  0.34507321 -0.4983073 -6.937393e-02  0.40644400 -0.4783839 #> [1629,]  0.2053354  0.15440732  0.4020898  1.826193e-01 -0.79322749 -0.5745077 #> [1630,] -0.7908914  0.16236379  0.4075674  2.196003e-01  0.21583926 -0.5691727 #> [1631,] -0.6130162 -0.34947509  0.6194930 -5.675021e-04 -0.31612782 -0.3665157 #> [1632,]  0.1525221 -0.93342467  0.3197855  5.872504e-03  0.09963415 -0.6555216 #> [1633,] -0.6379738  0.58524528  0.5943339 -1.653448e-03 -0.37304886 -0.3902916 #> [1634,] -0.6262620 -0.38337247 -0.3937051 -9.976130e-04  0.65440900 -0.3789821 #> [1635,] -0.5120688 -0.15557797  0.7099052 -9.081613e-06 -0.14842818 -0.2813440 #> [1636,]  0.2621734 -0.70524582  0.4796514 -1.543089e-01 -0.64332009 -0.4995075 #> [1637,] -0.5747838 -0.26238400  0.6557456 -1.154133e-04  0.75903035 -0.3323285 #> [1638,]  0.1934841  0.13085244 -0.6154455  9.582217e-02  0.17940366  0.4083690 #> [1639,]  0.1580112  0.07366294  0.3288634  8.913974e-03  0.10888848  0.3534995 #> [1640,]  0.1286903  0.04092542  0.2788091  8.107755e-04  0.06479835 -0.6965449 #> [1641,]  0.2405067  0.23652325  0.4512885 -3.672422e-01  0.29677347  0.4731948 #> [1642,]  0.2065451  0.15693453  0.4038514  1.939733e-01  0.20966161  0.4272087 #> [1643,]  0.2131469  0.17111857  0.4133750  2.641624e-01  0.22571988  0.4364770 #> [1644,]  0.1798533  0.10651093  0.3637421  4.122310e-02  0.15018418  0.3879542 #> [1645,]  0.2417673 -0.76022832 -0.5470225  6.486834e-01  0.30019037  0.4748242 #> [1646,] -0.7205665  0.34408149  0.5012746 -7.047754e-02 -0.59452115 -0.4787839 #> [1647,]  0.4050722 -0.30620192 -0.3630248 -2.655605e-04 -0.27872427 -0.3500205 #> [1648,] -0.6756758  0.47733150  0.5538474  9.911802e-01 -0.46938315 -0.4286696 #> [1649,]  0.1749983  0.09855757 -0.6438438  2.986314e-02  0.14040066  0.3804871 #> [1650,]  0.2849752  0.36030322  0.5080438 -5.446588e-02 -0.57880680  0.5276893 #> [1651,]  0.4603637 -0.19717439  0.6868551 -2.757994e-05 -0.18467482 -0.3030360 #> [1652,]  0.3630426 -0.41198259 -0.4046169 -1.582107e-03 -0.37061525  0.6107009 #> [1653,]  0.3469166  0.54306600  0.5784818 -3.204783e-03  0.58969705  0.5947009 #> [1654,]  0.1226788  0.03569375  0.2680509  4.681320e-04  0.05737284  0.2925963 #> [1655,]  0.2999844  0.40480277 -0.4740280 -2.704502e-02 -0.53644149 -0.4551970 #> [1656,]  0.4165313 -0.28069904  0.6477406 -1.650724e-04 -0.25674463 -0.3398716 #> [1657,] -0.5120688 -0.15557797  0.7099052 -9.081613e-06 -0.14842818 -0.2813440 #> [1658,] -0.5674528  0.75239185 -0.3375979 -8.544854e-05 -0.22824020 -0.3260582 #> [1659,]  0.1784146  0.10411484 -0.6384962  3.750926e-02 -0.85275013  0.3857525 #> [1660,]  0.4172969  0.72095087 -0.3515484 -1.599328e-04 -0.25532342 -0.3392015 #> [1661,]  0.1580653  0.07373505  0.3289522  8.950112e-03 -0.89101806  0.3535877 #> [1662,]  0.3212328 -0.53183069 -0.4496141 -1.015232e-02  0.52226479 -0.4319587 #> [1663,]  0.4273435 -0.25803179  0.6576866 -1.057584e-04 -0.23722080  0.6695001 #> [1664,]  0.1551371  0.06989470 -0.6758736  7.176147e-03  0.10398563 -0.6512049 #> [1665,] -0.5525863 -0.21955762 -0.3243740 -4.661256e-05 -0.20404245 -0.3136062 #> [1666,]  0.3716478 -0.38888069  0.6041806 -1.091246e-03 -0.35039654  0.6190195 #> [1667,]  0.2507948  0.26356631  0.4649310 -2.494050e-01 -0.67506258 -0.5136580 #> [1668,]  0.2796060 -0.65541574 -0.4985134 -6.991586e-02 -0.59403178  0.5214190 #> [1669,]  0.4603353 -0.19722147 -0.3131692 -2.761165e-05 -0.18471563 -0.3030589 #> [1670,] -0.6150631 -0.35459567 -0.3825242 -6.189000e-04 -0.32056761  0.6315797 #> [1671,] -0.8265279  0.09613495  0.3537522  2.692617e-02  0.13739516  0.3781178 #> [1672,]  0.3777207 -0.37299443 -0.3897006 -8.413181e-04 -0.33655134  0.6248017 #> [1673,]  0.2037684  0.15116710  0.3998002  1.686201e-01  0.20305544 -0.5767397 #> [1674,]  0.1763025  0.10065705 -0.6417970  3.259856e-02  0.14299551  0.3825033 #> [1675,]  0.3964499 -0.32637830  0.6287179 -3.808379e-04  0.70385872  0.6421908 #> [1676,]  0.3674821 -0.39998027  0.5999407 -1.305641e-03  0.63990252  0.6150112 #> [1677,]  0.4657624 -0.18839298 -0.3085410 -2.217568e-05 -0.17705511 -0.2987030 #> [1678,]  0.1699915  0.09074822  0.3482346  2.118265e-02 -0.86933219 -0.6273257 #> [1679,] -0.6197726  0.63345687 -0.3871962 -7.560241e-04 -0.33094099  0.6271675 #> [1680,]  0.2695897  0.31569179  0.4890444 -1.107740e-01  0.37759006  0.5095035 #> [1681,]  0.4040258  0.69139411 -0.3640196 -2.774012e-04  0.71920217 -0.3509587 #> [1682,] -0.7822615  0.18136740 -0.5800897  3.204774e-01  0.23716528  0.4428263 #> [1683,]  0.1484135  0.06156758  0.3129047  4.258993e-03  0.09300833  0.3376252 #> [1684,]  0.2469179  0.25323694 -0.5401721 -2.903955e-01  0.31425406 -0.5185720 #> [1685,]  0.2988789  0.40150679 -0.4753287 -2.847335e-02  0.46045544 -0.4564371 #> [1686,]  0.4596078 -0.19842957 -0.3137932 -2.843602e-05 -0.18576283 -0.3036462 #> [1687,]  0.1500440  0.06352476  0.3156443  4.842587e-03  0.09560689  0.3403554 #> [1688,]  0.2376069 -0.77087728  0.4473843 -4.051764e-01  0.28895296  0.4694263 #> [1689,] -0.7287848 -0.67966357 -0.5089176 -1.028806e-01  0.38218812 -0.4885432 #> [1690,]  0.1619593  0.07904629 -0.6646868  1.193722e-02  0.11582776 -0.6401049 #> [1691,] -0.8318452  0.08798302  0.3453033  1.862441e-02  0.12718972  0.3697791 #> [1692,]  0.2756722  0.33316281  0.4966329 -8.386461e-02 -0.60518696  0.5167735 #> [1693,] -0.5674528  0.75239185 -0.3375979 -8.544854e-05 -0.22824020 -0.3260582 #> [1694,]  0.1643549  0.08243071  0.3391950  1.420516e-02  0.12015306  0.3637388 #> [1695,] -0.8343980 -0.91577209 -0.6587938  1.553630e-02  0.12243863 -0.6342713 #> [1696,]  0.3184230 -0.54018011  0.5472201 -1.154250e-02  0.51462572  0.5650320 #> [1697,]  0.1315683  0.04359948  0.2838974  1.046430e-03  0.06854545 -0.6914223 #> [1698,] -0.5394080 -0.19679661 -0.3129493 -2.732657e-05 -0.18434730  0.6971481 #> [1699,] -0.7383927  0.29317411  0.4789279 -1.581872e-01 -0.64491062  0.4997978 #> [1700,]  0.1407950  0.05294032  0.2999470  2.298420e-03  0.08140705  0.3246814 #> [1701,] -0.8177835 -0.88948149  0.3674013  4.803707e-02  0.15506746  0.3915510 #> [1702,]  0.1858414  0.11683902  0.3729721  6.042198e-02  0.16270884  0.3970206 #> [1703,]  0.2659440 -0.69465488 -0.5155535 -1.305517e-01  0.36729500 -0.4949057 #> [1704,]  0.1615359  0.07845756  0.3346248  1.157295e-02  0.11507247  0.3592131 #> [1705,]  0.2113023  0.16708918 -0.5892708  2.431896e-01  0.22118450  0.4339041 #> [1706,]  0.2655224  0.30415515  0.4839123 -1.330351e-01  0.36610626 -0.4954182 #> [1707,]  0.3300193 -0.50587217 -0.4398339 -6.815138e-03  0.54584840 -0.4226690 #> [1708,]  0.1818012  0.10980776 -0.6332402  4.677188e-02  0.15420361  0.3909207 #> [1709,]  0.2999660 -0.59525209 -0.4740496 -2.706819e-02 -0.53649309  0.5447824 #> [1710,]  0.2602961  0.28952560 -0.5227512 -1.674947e-01 -0.64859027 -0.5018148 #> [1711,]  0.2289590  0.20768215  0.4355835 -5.254152e-01  0.26599789  0.4580186 #> [1712,] -0.7067729 -0.61530842  0.5179727 -3.705857e-02  0.44454018  0.5371725 #> [1713,]  0.4412476 -0.23088293 -0.3298149 -5.990209e-05  0.78618054 -0.3187288 #> [1714,]  0.2581559  0.28360325  0.4744973 -1.836906e-01  0.34541592 -0.5044581 #> [1715,] -0.8300005  0.09076043  0.3482474  2.119451e-02  0.13068312  0.3726869 #> [1716,]  0.1984010  0.14035787  0.3918914  1.266353e-01  0.19054739 -0.5844583 #> [1717,]  0.3744887 -0.38140443  0.6070522 -9.660289e-04 -0.34387533 -0.3782665 #> [1718,]  0.3584489 -0.42458026  0.5906244 -1.931882e-03 -0.38168836  0.6061985 #> [1719,] -0.5111301 -0.15429933 -0.2893295 -8.745275e-06 -0.14730669  0.7193761 #> [1720,]  0.1707141  0.09185078  0.3493841  2.227409e-02  0.13204988 -0.6261910 #> [1721,]  0.2596314  0.28768195 -0.5236043 -1.723895e-01  0.34954664 -0.5026342 #> [1722,]  0.1832143  0.11223726  0.3689397  5.120079e-02 -0.84284741  0.3930622 #> [1723,]  0.2893443  0.37318685 -0.4866769 -4.442248e-02  0.43356694  0.5327333 #> [1724,]  0.2476847 -0.74473282 -0.5391591  7.180567e-01 -0.68363908  0.4824038 #> [1725,]  0.1558763  0.07085184  0.3253481  7.590403e-03  0.10523463  0.3500090 #> [1726,]  0.2822901  0.35242512 -0.4952257 -6.172001e-02 -0.58641929 -0.4754364 #> [1727,] -0.7898731  0.16454823  0.4090371 -7.696367e-01  0.21831384  0.4322578 #> [1728,] -0.8134630  0.11807588  0.3740353  6.309334e-02  0.16419581  0.3980636 #> [1729,]  0.4603353 -0.19722147 -0.3131692 -2.761165e-05 -0.18471563 -0.3030589 #> [1730,] -0.7429997  0.28042280 -0.5269940 -1.929679e-01 -0.65781379  0.4941088 #> [1731,] -0.5129648 -0.15680648 -0.2908263 -9.414708e-06 -0.14950522 -0.2820325 #> [1732,] -0.7532897  0.25268840  0.4595534 -2.927125e-01  0.31368421 -0.5188365 #> [1733,]  0.2699876  0.31682706 -0.5104560 -1.087912e-01 -0.62128473 -0.4900176 #> [1734,] -0.7715783  0.20638232 -0.5651576  4.669618e-01  0.26459135 -0.5426987 #> [1735,]  0.2377079  0.22937867  0.4475207 -4.038280e-01  0.28922429 -0.5304420 #> [1736,]  0.2989255  0.40164554 -0.4752739 -2.841169e-02 -0.53941382 -0.4563849 #> [1737,]  0.3036288 -0.58432147  0.5302382 -2.283066e-02  0.47376080  0.5488691 #> [1738,] -0.7610030 -0.76734251 -0.5507409 -3.867804e-01  0.29269466  0.4712363 #> [1739,]  0.3631585  0.58833289  0.5955025 -1.574176e-03  0.62966159 -0.3891861 #> [1740,] -0.6167223 -0.35877882 -0.3841653 -6.640443e-04 -0.32419727 -0.3699699 #> [1741,]  0.4059164 -0.30427172  0.6377763 -2.563845e-04 -0.27705961 -0.3492650 #> [1742,] -0.5580220 -0.22951854  0.6708329 -5.814614e-05 -0.21264222 -0.3181189 #> [1743,] -0.6639442 -0.48821496 -0.4332174 -5.195524e-03  0.56175590  0.5836097 #> [1744,]  0.2700857  0.31710698 -0.5103330 -1.083077e-01  0.37899257 -0.4898997 #> [1745,]  0.4425250 -0.22850088 -0.3286826 -5.686542e-05 -0.21176404  0.6823373 #> [1746,]  0.2348781  0.22225362 -0.5563137 -4.422509e-01  0.28164786 -0.5341457 #> [1747,] -0.6901896  0.43414064 -0.4626011 -1.714829e-02  0.49095476 -0.4443113 #> [1748,]  0.2576865  0.28230987  0.4738920  8.125866e-01 -0.65589656  0.4949603 #> [1749,]  0.2464550 -0.74798543  0.4592156 -2.955780e-01 -0.68701614 -0.5191619 #> [1750,]  0.2825251 -0.64688691 -0.4949389  9.389509e-01  0.41424691 -0.4751621 #> [1751,] -0.5518491 -0.21823271  0.6762723 -4.523748e-05 -0.20289782  0.6870024 #> [1752,]  0.3870237 -0.34937572  0.6195322 -5.665448e-04 -0.31604169  0.6335213 #> [1753,] -0.4880329 -0.12548850 -0.2708912 -3.456854e-06 -0.12187564 -0.2632711 #> [1754,]  0.1828175 -0.88844820  0.3683283  4.992124e-02  0.15632167  0.3924617 #> [1755,]  0.2926091 -0.61714244 -0.4827647 -3.814299e-02 -0.55720443  0.5364687 #> [1756,]  0.1657844  0.08449284  0.3414999  1.574033e-02  0.12277490  0.3660192 #> [1757,]  0.4439552 -0.22585625 -0.3274182 -5.364988e-05 -0.20948147 -0.3164721 #> [1758,]  0.1528160 -0.93305680 -0.6797252  6.007230e-03  0.10011796  0.3449653 #> [1759,]  0.1815739 -0.89058005  0.3664085  4.609201e-02  0.15373186  0.3905754 #> [1760,] -0.6185075  0.63668876  0.6140631 -7.163882e-04 -0.32813283  0.6283569 #> [1761,]  0.2062040 -0.84378039  0.4033552  1.907234e-01  0.20884520  0.4267253 #> [1762,] -0.8408224  0.07522839 -0.6692242  9.724063e-03  0.11091412 -0.6446029 #> [1763,] -0.6355430 -0.40813982  0.5968395 -1.488047e-03 -0.36724451  0.6120784 #> [1764,]  0.1553362  0.07015169  0.3244557  7.285625e-03 -0.89567876  0.3491223 #> [1765,]  0.3231199  0.47376553  0.5525015 -9.316138e-03  0.52736993 -0.4299483 #> [1766,]  0.1704001  0.09137073  0.3488849  2.179375e-02  0.13144846  0.3733163 #> [1767,] -0.5758124 -0.26450721 -0.3451956 -1.203976e-04 -0.24279841  0.6667847 #> [1768,]  0.1529209  0.06707482 -0.6795507  6.056006e-03  0.10029097 -0.6548611 #> [1769,]  0.3272341 -0.51407178 -0.4429148 -7.729358e-03 -0.46157474  0.5744058 #> [1770,] -0.7486165  0.26514886  0.4657020 -2.435645e-01 -0.67343357 -0.5129160 #> [1771,]  0.2838452  0.35698392 -0.4933298 -5.741020e-02  0.41799016  0.5263764 #> [1772,]  0.2727344  0.32469402  0.4929806 -9.598188e-02  0.38648912 -0.4867244 #> [1773,]  0.3092292  0.43240506  0.5367296 -1.761478e-02 -0.51065513 -0.4449484 #> [1774,]  0.1926670 -0.87069018  0.3833266  9.135402e-02  0.17758179  0.4071674 #> [1775,]  0.2663894 -0.69339617 -0.5149897 -1.279736e-01 -0.63144866 -0.4943649 #> [1776,]  0.1846732 -0.88522090  0.3711822  5.615636e-02  0.16022635  0.3952640 #> [1777,]  0.2239260  0.19566075  0.4286046 -5.963702e-01  0.25292123  0.4512597 #> [1778,]  0.2566488 -0.72054193 -0.5274483  8.041355e-01  0.34120502 -0.5063279 #> [1779,] -0.7198571  0.34614958 -0.4978542 -6.819590e-02  0.40749087  0.5220496 #> [1780,]  0.2845376  0.35901735  0.5075124 -5.558780e-02 -0.58004689 -0.4728186 #> [1781,]  0.2267302  0.20231598 -0.5674968  4.429998e-01  0.26017974 -0.5449634 #> [1782,]  0.1705091  0.09153722 -0.6509417  2.195944e-02  0.13165710  0.3734874 #> [1783,]  0.1810723 -0.89143299  0.3656324  4.462250e-02  0.15269333  0.3898126 #> [1784,] -0.8256835  0.09747069 -0.6449167  2.851704e-02  0.13905378  0.3794300 #> [1785,]  0.1427025  0.05502134  0.3032160  2.689424e-03  0.08422831 -0.6720484 #> [1786,]  0.2263485 -0.79859621  0.4319741  4.376079e-01  0.25918769 -0.5454758 #> [1787,]  0.2357879  0.22453340  0.4449219 -4.297640e-01  0.28407736  0.4670480 #> [1788,]  0.1716534  0.09329634 -0.6491248  2.376931e-02  0.13385788  0.3752804 #> [1789,]  0.2942672 -0.61221918 -0.4807884 -3.530277e-02  0.44747485 -0.4616451 #> [1790,] -0.6501601 -0.44864089 -0.4184133 -2.817034e-03 -0.40294246  0.5976422 #> [1791,]  0.4139938 -0.28621578 -0.3546231 -1.833380e-04 -0.26149710  0.6579006 #> [1792,]  0.3092342 -0.56758014  0.5367354 -1.761075e-02 -0.51064140 -0.4449430 #> [1793,]  0.4379124 -0.23719077 -0.3327836 -6.862719e-05 -0.21926025  0.6784758 #> [1794,]  0.1643458  0.08241773 -0.6608196  1.419588e-02  0.12013653  0.3637243 #> [1795,] -0.6517316  0.54690830  0.5799199 -3.019081e-03  0.59310958 -0.4039367 #> [1796,]  0.1672405  0.08662640 -0.6561609  1.745918e-02  0.12547704 -0.6316679 #> [1797,]  0.1226788  0.03569375  0.2680509  4.681320e-04  0.05737284  0.2925963 #> [1798,] -0.5978167 -0.31286878  0.6342238 -2.995731e-04 -0.28447582 -0.3526153 #> [1799,] -0.7914458  0.16118119  0.4067657  2.138791e-01  0.21449699 -0.5699531 #> [1800,]  0.3964499 -0.32637830  0.6287179 -3.808379e-04  0.70385872  0.6421908 #> [1801,]  0.1294325  0.04160437  0.2801251  8.663225e-04  0.06575271  0.3047808 #> [1802,]  0.3164146  0.45384146 -0.4550542 -1.265457e-02 -0.49086095 -0.4371306 #> [1803,]  0.1696760  0.09026952 -0.6522679  2.072167e-02  0.13006691 -0.6278219 #> [1804,] -0.8068661  0.13019001  0.3840285  9.388556e-02  0.17862179 -0.5921457 #> [1805,]  0.1765375  0.10103828  0.3585712  3.311483e-02  0.14346574  0.3828659 #> [1806,]  0.1959478  0.13556763  0.3882419  1.103955e-01  0.18494900  0.4119754 #> [1807,]  0.1729839  0.09536781  0.3529812  2.604343e-02  0.13644089 -0.6226423 #> [1808,]  0.2202762  0.18716340 -0.5765085  3.537590e-01 -0.75641748  0.4463018 #> [1809,]  0.3291184  0.49147897 -0.4408285 -7.098016e-03  0.54345294 -0.4236132 #> [1810,]  0.2159321  0.17729841  0.4173478  2.976685e-01  0.23263648  0.4403377 #> [1811,]  0.2658448  0.30506502  0.4843208 -1.311322e-01  0.36701528  0.5049737 #> [1812,] -0.8620895  0.04989222 -0.7050278  1.806039e-03  0.07724675  0.3196985 #> [1813,]  0.2391882  0.23314567 -0.5504834 -3.842789e-01  0.29321051  0.4714848 #> [1814,] -0.8219287  0.10354793 -0.6390315  3.666846e-02  0.14655399 -0.6147743 #> [1815,] -0.5377813 -0.19412108 -0.3115579 -2.558768e-05 -0.18202701 -0.3015424 #> [1816,]  0.4072852 -0.30115923 -0.3609274 -2.421866e-04  0.72562420 -0.3480428 #> [1817,] -0.5944452  0.69490253 -0.3625666 -2.602745e-04 -0.27777173  0.6504116 #> [1818,] -0.6879460  0.44083875 -0.4600254 -1.546267e-02  0.49715560  0.5581402 #> [1819,]  0.3415847  0.52779627 -0.4272291 -4.059388e-03 -0.42390591 -0.4107115 #> [1820,]  0.2028006  0.14918508 -0.6016181  1.603731e-01  0.20077449 -0.5781229 #> [1821,]  0.2996286  0.40374171 -0.4744463 -2.749666e-02 -0.53743987  0.5444042 #> [1822,]  0.2961675  0.39343144 -0.4785321 -3.230825e-02 -0.54716991  0.5405076 #> [1823,]  0.1679014  0.08760568  0.3448978  1.829451e-02 -0.87328624 -0.6306216 #> [1824,] -0.5611890 -0.23547852 -0.3319819 -6.615687e-05 -0.21778365 -0.3207693 #> [1825,] -0.7241758  0.33360239  0.4968212 -8.327921e-02  0.39524386  0.5169538 #> [1826,] -0.7898731  0.16454823  0.4090371 -7.696367e-01  0.21831384  0.4322578 #> [1827,]  0.1401193  0.05221569 -0.7012149  2.173048e-03  0.08042106 -0.6764817 #> [1828,] -0.7196304 -0.65318878 -0.4975760 -6.748184e-02 -0.59186597 -0.4776843 #> [1829,]  0.2860176  0.36337044 -0.4906920 -5.188198e-02 -0.57585259  0.5288976 #> [1830,]  0.3153514 -0.54932631 -0.4562620 -1.328711e-02  0.50622602 -0.4382794 #> [1831,]  0.3242780 -0.52280515 -0.4462042 -8.838287e-03  0.53049251 -0.4287186 #> [1832,]  0.3395071  0.52179947 -0.4294714 -4.452935e-03  0.57073316 -0.4128374 #> [1833,]  0.4611558 -0.19586597 -0.3124666 -2.671078e-05 -0.18354037  0.6976024 #> [1834,] -0.6582574 -0.47174907 -0.4270591 -4.030984e-03 -0.42349989  0.5894497 #> [1835,]  0.2826333  0.35343019 -0.4948067  9.392576e-01 -0.58544611  0.5249643 #> [1836,]  0.3152774 -0.54954696  0.5436538 -1.333234e-02  0.50602296  0.5616405 #> [1837,] -0.6021331  0.67699474 -0.3699156 -3.588656e-04 -0.29322717 -0.3565200 #> [1838,]  0.3654830 -0.40536334  0.5978934 -1.423423e-03 -0.36481102 -0.3869248 #> [1839,]  0.3006772  0.40686911 -0.4732144 -2.618715e-02 -0.53449876 -0.4544214 #> [1840,]  0.1294325  0.04160437  0.2801251  8.663225e-04  0.06575271  0.3047808 #> [1841,]  0.3110843 -0.56205571 -0.4611371 -1.616939e-02  0.49447839 -0.4429178 #> [1842,]  0.3766272  0.62417158 -0.3907970 -8.815544e-04 -0.33901803  0.6237659 #> [1843,]  0.1378309  0.04980971  0.2948343  1.793944e-03  0.07713366  0.3195602 #> [1844,] -0.5402254 -0.19815206 -0.3136500 -2.824484e-05 -0.18552231 -0.3035115 #> [1845,]  0.2116398  0.16782259  0.4112141  2.469507e-01  0.22201153  0.4343758 #> [1846,]  0.2305502  0.21155416  0.4377728  4.971419e-01 -0.72982260  0.4601369 #> [1847,]  0.3410836 -0.47364778 -0.4277690 -4.150910e-03  0.57480415 -0.4112234 #> [1848,]  0.1767384  0.10136485  0.3588857  3.356196e-02  0.14386831  0.3831755 #> [1849,] -0.8125748  0.11966654 -0.6246096  6.665282e-02  0.16610420 -0.6006074 #> [1850,]  0.2538922 -0.72806771 -0.5310241  7.801766e-01 -0.66647387  0.4902338 #> [1851,] -0.6013771  0.67878531 -0.3691881 -3.476756e-04 -0.29168066 -0.3558337 #> [1852,]  0.2126962  0.17012926 -0.5872705  2.589445e-01  0.22460824  0.4358495 #> [1853,]  0.4104299 -0.29408986 -0.3579622 -2.125225e-04 -0.26828201  0.6547529 #> [1854,] -0.6594231  0.52489053 -0.4283156 -4.245613e-03 -0.42650218  0.5882585 #> [1855,]  0.2258209  0.20014610  0.4312419  4.301682e-01  0.25781843 -0.5461850 #> [1856,]  0.2312566  0.21328398 -0.5612578 -4.928692e-01  0.27203964 -0.5389254 #> [1857,]  0.2770164  0.33705561  0.4982962  9.211792e-01  0.39862410  0.5183658 #> [1858,]  0.2146784  0.17450247  0.4155628  2.823241e-01  0.22951302 -0.5613965 #> [1859,] -0.5111301 -0.15429933 -0.2893295 -8.745275e-06 -0.14730669  0.7193761 #> [1860,] -0.8442319  0.07071124 -0.6748306  7.528429e-03  0.10505132  0.3498315 #> [1861,]  0.2911103 -0.62158602  0.5154428 -4.090710e-02  0.43856131 -0.4652425 #> [1862,]  0.2512067  0.26467321  0.4654706 -2.453078e-01  0.32607703  0.4868613 #> [1863,]  0.1873493 -0.88046976  0.3752748  6.634228e-02  0.16594084 -0.6007208 #> [1864,]  0.2479679  0.25601858 -0.5387854 -2.788643e-01 -0.68286020 -0.5172363 #> [1865,]  0.2203512  0.18733611  0.4235970 -6.452378e-01 -0.75622686 -0.5535958 #> [1866,] -0.6009511 -0.32020875 -0.3687787 -3.415288e-04  0.70918806 -0.3554475 #> [1867,]  0.4321810 -0.24833154 -0.3379283 -8.673902e-05 -0.22886357  0.6736306 #> [1868,]  0.1319379  0.04395099 -0.7154520  1.080908e-03  0.06903572  0.3092321 #> [1869,] -0.5386756 -0.19558843 -0.3123224 -2.652942e-05 -0.18329969  0.6977381 #> [1870,]  0.2540770  0.27243446 -0.5307837 -2.181480e-01  0.33403989  0.4904650 #> [1871,]  0.2654921 -0.69593038  0.4838739 -1.332153e-01  0.36602077 -0.4954551 #> [1872,]  0.4210515 -0.27105694 -0.3480767 -1.369857e-04  0.75156038 -0.3359299 #> [1873,]  0.3833093 -0.35869898  0.6158660 -6.631549e-04 -0.32412797 -0.3699404 #> [1874,] -0.6019911 -0.32266832  0.6302212 -3.567353e-04 -0.29293614  0.6436090 #> [1875,]  0.2147837  0.17473634  0.4157129  2.835964e-01  0.22977465 -0.5612507 #> [1876,] -0.5199689 -0.16668812 -0.2965851 -1.247828e-05 -0.15815181 -0.2874516 #> [1877,] -0.6038798 -0.32716614  0.6283995 -3.861430e-04  0.70317792  0.6418904 #> [1878,]  0.2620069  0.29428924 -0.5205613 -1.554407e-01  0.35621208  0.5002883 #> [1879,] -0.5729245 -0.25857717 -0.3425575 -1.069281e-04  0.76230941 -0.3307299 #> [1880,] -0.7289084  0.31998259  0.4909277 -1.034619e-01  0.38183833 -0.4886914 #> [1881,]  0.2118104  0.16819411 -0.5885408  2.488658e-01 -0.77756977 -0.5653859 #> [1882,]  0.2542317  0.27285523 -0.5305825 -2.167527e-01 -0.66552977  0.4906586 #> [1883,]  0.2626972 -0.70378174  0.4803199 -1.507954e-01 -0.64184792  0.5011342 #> [1884,]  0.1832138  0.11223647  0.3689390  5.119928e-02  0.15715162  0.3930615 #> [1885,]  0.2687776  0.31337857 -0.5119765 -1.149245e-01  0.37529468  0.5085248 #> [1886,] -0.7699542  0.21032321  0.4370798 -5.100017e-01  0.26885036 -0.5405336 #> [1887,]  0.3922005 -0.33662628 -0.3754023 -4.553267e-04 -0.30500185 -0.3616972 #> [1888,]  0.2896322 -0.62596169  0.5136692 -4.382945e-02  0.43438149  0.5330639 #> [1889,]  0.3999929 -0.31798655  0.6321275 -3.282978e-04 -0.28889320 -0.3545926 #> [1890,]  0.3500330  0.55190478 -0.4182088 -2.793185e-03 -0.40245880 -0.4021642 #> [1891,] -0.8708363  0.04135758  0.2796487  8.458066e-04  0.06540604  0.3043010 #> [1892,]  0.2728817 -0.67488272 -0.5068357 -9.533677e-02  0.38690624 -0.4865485 #> [1893,]  0.1636097  0.08136830  0.3379900  1.346048e-02 -0.88120168 -0.6374539 #> [1894,]  0.3510210  0.55469270 -0.4171641 -2.674364e-03  0.60001105 -0.4011747 #> [1895,] -0.5949349 -0.30621832 -0.3630316 -2.656396e-04 -0.27873840 -0.3500269 #> [1896,]  0.2235152  0.19469497 -0.5719687  3.979239e-01 -0.74813612  0.4507041 #> [1897,]  0.2276045  0.20441304 -0.5662865 -5.446245e-01  0.26245704 -0.5437915 #> [1898,]  0.1294325  0.04160437  0.2801251  8.663225e-04  0.06575271  0.3047808 #> [1899,]  0.1963806  0.13640587 -0.6111127  1.131323e-01 -0.81406881  0.4126064 #> [1900,]  0.1794585  0.10585013  0.3631287  4.017268e-02  0.14937606 -0.6126490 #> [1901,]  0.3745533  0.61876466 -0.3928827 -9.633595e-04 -0.34372796 -0.3782050 #> [1902,]  0.2370239 -0.77235268  0.4465962 -4.129973e-01  0.28738770 -0.5313347 #> [1903,] -0.6712197  0.49048394  0.5587978 -7.207277e-03  0.54255248 -0.4239681 #> [1904,]  0.2431499  0.24335644  0.4548244 -3.342844e-01  0.30395000 -0.5233945 #> [1905,] -0.6135300 -0.35075618  0.6189874 -5.799778e-04 -0.31723825  0.6330070 #> [1906,]  0.2787631 -0.65787040 -0.4995498 -7.270176e-02  0.40357751 -0.4795727 #> [1907,]  0.3537609  0.56238731 -0.4142775 -2.371253e-03 -0.39318265  0.6015586 #> [1908,]  0.2691556 -0.68554540 -0.5115011 -1.129752e-01 -0.62363714 -0.4910195 #> [1909,]  0.2439925  0.24555175 -0.5440530  6.758585e-01  0.30624677  0.4776878 #> [1910,] -0.7496198  0.26245425  0.4643876  7.464216e-01  0.32379150 -0.5141811 #> [1911,]  0.3881479 -0.34658268  0.6206366 -5.402385e-04 -0.31362147 -0.3654361 #> [1912,]  0.2769435 -0.66315582  0.4982061 -7.908675e-02  0.39841735  0.5182796 #> [1913,] -0.5820383  0.72237788  0.6490681 -1.556023e-04 -0.25409426 -0.3386205 #> [1914,]  0.2743843  0.32944354  0.4950348 -8.898567e-02 -0.60883699  0.5152431 #> [1915,]  0.4279106 -0.25688047 -0.3417972 -1.033257e-04 -0.23622903 -0.3300137 #> [1916,] -0.7366825  0.29795522  0.4811106 -1.467253e-01  0.35989664 -0.4981068 #> [1917,] -0.8255527  0.09767862  0.3552893  2.877094e-02  0.13931164 -0.6203671 #> [1918,] -0.8196242  0.10738928  0.3645530  4.265086e-02  0.15125707 -0.6112484 #> [1919,] -0.8399989  0.07634615  0.3321224  1.033623e-02  0.11235653 -0.6432674 #> [1920,]  0.1751383  0.09878162  0.3563762  3.014649e-02  0.14067800  0.3807039 #> [1921,]  0.3016778 -0.59014549 -0.4720416 -2.499658e-02 -0.53169559  0.5466966 #> [1922,]  0.2537366 -0.72849027  0.4687734 -2.212419e-01  0.33309366  0.4900390 #> [1923,]  0.4424717 -0.22859989  0.6712702 -5.698894e-05 -0.21184948 -0.3177071 #> [1924,] -0.8181067  0.10996515 -0.6330978  4.704989e-02  0.15439498 -0.6089395 #> [1925,]  0.3580059  0.57419552 -0.4098369 -1.969567e-03  0.61723364 -0.3942380 #> [1926,] -0.8172915  0.11136405 -0.6318396  4.957490e-02  0.15609392  0.3922967 #> [1927,] -0.6024288 -0.32370732  0.6297995 -3.633415e-04 -0.29383363  0.6432112 #> [1928,] -0.8220731  0.10331008  0.3607432  3.631993e-02  0.14626183  0.3850040 #> [1929,] -0.6630381 -0.48557973  0.5677686 -4.989034e-03 -0.43587874 -0.4154549 #> [1930,]  0.1458614  0.05858327 -0.6914068  3.474816e-03  0.08902301  0.3333238 #> [1931,]  0.2481595  0.25652747 -0.5385328 -2.767941e-01  0.31766703 -0.5169930 #> [1932,]  0.3170079  0.45560828 -0.4543813 -1.231509e-02  0.51076203 -0.4364907 #> [1933,]  0.2641047 -0.69983574 -0.5178875 -1.416997e-01  0.36211225  0.5028548 #> [1934,]  0.3604543 -0.41905892  0.5927072 -1.770336e-03  0.62316919 -0.3918306 #> [1935,]  0.3220341  0.47054682  0.5512853 -9.788229e-03 -0.47556488  0.5688960 #> [1936,]  0.3586147 -0.42412247  0.5907969 -1.917968e-03  0.61871466 -0.3936382 #> [1937,]  0.1370954  0.04905217  0.2935594  1.685767e-03  0.07609414  0.3182820 #> [1938,]  0.3613889  0.58350278 -0.4063250 -1.699852e-03 -0.37457943 -0.3909149 #> [1939,]  0.2177343  0.18135777  0.4199043  3.204229e-01  0.23715459 -0.5571796 #> [1940,]  0.3042997  0.41768190 -0.4689801 -2.213076e-02 -0.52436595 -0.4503861 #> [1941,]  0.4216589 -0.26977950 -0.3475174 -1.336010e-04  0.75266061  0.6645971 #> [1942,] -0.6407569 -0.42238970 -0.4085498 -1.866169e-03 -0.37976032  0.6069800 #> [1943,]  0.4205128 -0.27219349 -0.3485733 -1.400603e-04  0.75058149 -0.3363978 #> [1944,]  0.4418311 -0.22979237  0.6707027 -5.849496e-05 -0.21287850 -0.3182414 #> [1945,] -0.5402254 -0.19815206 -0.3136500 -2.824484e-05 -0.18552231 -0.3035115 #> [1946,] -0.7817726  0.18247682  0.4206019  3.267830e-01  0.23839665  0.4434977 #> [1947,]  0.2986717  0.40088927  0.5244272 -2.874941e-02  0.45987347 -0.4566699 #> [1948,]  0.1195761  0.03317592  0.2624286  3.493604e-04  0.05375078  0.2869057 #> [1949,]  0.1963268  0.13630140  0.3888070  1.127888e-01 -0.81419116 -0.5874721 #> [1950,]  0.1370954  0.04905217  0.2935594  1.685767e-03  0.07609414  0.3182820 #> [1951,]  0.2241852  0.19627143 -0.5710339  4.072402e-01  0.25358926  0.4516101 #> [1952,]  0.2050479 -0.84619007  0.4016704  1.799907e-01 -0.79391170  0.4250834 #> [1953,] -0.8027600  0.13807908 -0.6098330  1.187282e-01  0.18788850  0.4138570 #> [1954,] -0.6621840  0.51690040  0.5686964 -4.802110e-03  0.56634539 -0.4145750 #> [1955,] -0.8080813  0.12790638 -0.6178001  8.741549e-02 -0.82407902 -0.5939355 #> [1956,]  0.2559410 -0.72248147  0.4716356 -2.018064e-01  0.33923023  0.4927915 #> [1957,]  0.1959165  0.13550702  0.3881951  1.101993e-01  0.18487793  0.4119296 #> [1958,]  0.3319805  0.49988284 -0.4376751 -6.238645e-03  0.55104456  0.5793801 #> [1959,] -0.7935663  0.15670085 -0.5963106  1.929077e-01  0.20939484 -0.5729491 #> [1960,] -0.7081416 -0.61936899  0.5163382 -3.950328e-02  0.44067521 -0.4643877 #> [1961,]  0.4059164 -0.30427172  0.6377763 -2.563845e-04 -0.27705961 -0.3492650 #> [1962,] -0.5837481 -0.28130281 -0.3525191 -1.669894e-04  0.74273528 -0.3401163 #> [1963,]  0.1580112  0.07366294  0.3288634  8.913974e-03  0.10888848  0.3534995 #> [1964,]  0.2203812  0.18740541  0.4236393 -6.448350e-01  0.24384962  0.4464453 #> [1965,]  0.2748816 -0.66912164  0.4956524 -8.697400e-02 -0.60742785  0.5158346 #> [1966,]  0.2132930  0.17143980  0.4135840  2.658659e-01  0.22608056 -0.5633198 #> [1967,] -0.7576905 -0.75882518  0.4537025 -3.445813e-01  0.30166332  0.4755235 #> [1968,]  0.4596078 -0.19842957 -0.3137932 -2.843602e-05 -0.18576283 -0.3036462 #> [1969,] -0.4880329 -0.12548850 -0.2708912 -3.456854e-06 -0.12187564 -0.2632711 #> [1970,]  0.2568566 -0.71997158  0.4728204 -1.941473e-01  0.34178519 -0.5060696 #> [1971,] -0.6399497  0.57983144 -0.4077117 -1.801727e-03 -0.37780649  0.6077730 #> [1972,]  0.3737980  0.61678492 -0.3936446 -9.950519e-04 -0.34545376  0.6210750 #> [1973,] -0.7791117  0.18857531 -0.5756479  3.619766e-01 -0.75486013 -0.5528633 #> [1974,]  0.2963167  0.39387555  0.5216447 -3.208421e-02 -0.54674970 -0.4593237 #> [1975,] -0.8026558  0.13828271 -0.6096781  1.194214e-01  0.18812642  0.4140084 #> [1976,]  0.2064978  0.15683525 -0.5962174  1.935202e-01  0.20954827 -0.5728583 #> [1977,] -0.5496229 -0.21426916 -0.3217810 -4.132864e-05 -0.19947245  0.6888349 #> [1978,]  0.3316254 -0.50115788 -0.4380653 -6.339177e-03  0.55010573 -0.4209903 #> [1979,] -0.7567415  0.24363887  0.4549692 -3.329672e-01 -0.69575427 -0.5232549 #> [1980,]  0.1319379  0.04395099 -0.7154520  1.080908e-03  0.06903572  0.3092321 #> [1981,]  0.4876990 -0.15589550 -0.2902842 -9.166763e-06 -0.14870660 -0.2815223 #> [1982,]  0.3778922  0.62744905 -0.3895288 -8.351791e-04 -0.33616545 -0.3750360 #> [1983,] -0.6626569  0.51552775 -0.4318171 -4.904693e-03  0.56511467 -0.4150620 #> [1984,] -0.7834043  0.17878746  0.4182903 -6.940462e-01  0.23429609  0.4412532 #> [1985,]  0.1226788  0.03569375  0.2680509  4.681320e-04  0.05737284  0.2925963 #> [1986,]  0.3030735 -0.58597950 -0.4704097 -2.342699e-02 -0.52779095  0.5482517 #> [1987,]  0.3824707  0.63917640 -0.3849654 -6.872035e-04  0.67402760  0.6292745 #> [1988,]  0.4050864 -0.30616950 -0.3630113 -2.654039e-04 -0.27869630 -0.3500078 #> [1989,]  0.4543976 -0.20725287 -0.3182854 -3.511216e-05 -0.19340405 -0.3078745 #> [1990,]  0.2064559  0.15674748 -0.5962782  1.931201e-01  0.20944807  0.4270824 #> [1991,]  0.3734229  0.61579990 -0.3940232 -1.011182e-03 -0.34631269 -0.3792828 #> [1992,]  0.3320319  0.50003342 -0.4376187 -6.224231e-03  0.55118036 -0.4205663 #> [1993,]  0.2982759  0.39970968  0.5239605 -2.928441e-02  0.45876127 -0.4571150 #> [1994,]  0.2857814  0.36267498  0.5090218 -5.245668e-02  0.42347804  0.5286240 #> [1995,]  0.1591157  0.07514481  0.3306745  9.679433e-03  0.11080613 -0.6447034 #> [1996,]  0.1433477  0.05573705  0.3043179  2.835031e-03  0.08519514  0.3290532 #> [1997,]  0.1319379  0.04395099 -0.7154520  1.080908e-03  0.06903572  0.3092321 #> [1998,]  0.4876990 -0.15589550 -0.2902842 -9.166763e-06 -0.14870660 -0.2815223 #> [1999,]  0.2924917  0.38250922 -0.4829049 -3.835260e-02 -0.55753598 -0.4636651 #> [2000,] -0.8122931  0.12017374  0.3758196  6.781750e-02  0.16671178 -0.6001866 #>              Item_7       Item_8      Item_9    Item_10       Item_11 #>    [1,]  0.44102273  0.701502733  0.51675809 -0.6284983 -9.468588e-01 #>    [2,]  0.57279527  0.828099529  0.65883996  0.4231699 -7.600067e-01 #>    [3,]          NA  0.524344796  0.36439479 -0.6799625  8.994085e-03 #>    [4,] -0.60208508 -0.350990944 -0.53255387  0.3548150  3.055218e-02 #>    [5,] -0.16211526 -0.032340337 -0.10320320  0.5596793 -3.758234e-02 #>    [6,]  0.63369320 -0.128180889 -0.28046168 -0.5513114  4.200514e-01 #>    [7,] -0.49849370 -0.234436744  0.58369449  0.3948955  1.102240e-01 #>    [8,]  0.19454251 -0.678696933  0.22228470 -0.7326235  1.185409e-03 #>    [9,] -0.37723405 -0.135426315 -0.29110575  0.4439787  3.834368e-01 #>   [10,]  0.27967084  0.473696733  0.32666267 -0.6930935  5.540198e-03 #>   [11,]  0.42386310  0.681314875  0.49727973  0.3648760  4.277920e-02 #>   [12,] -0.46975706 -0.207639775 -0.38550471  0.4061518  1.527087e-01 #>   [13,] -0.60052135  0.651017553 -0.53074353 -0.6445765  3.118786e-02 #>   [14,] -0.03751372 -0.003806364 -0.01892696 -0.2905889 -2.111946e-04 #>   [15,] -0.85061332  0.235212276  0.16692288  0.2427284  4.201087e-04 #>   [16,]  0.05180192  0.059543099  0.05170140  0.1661112  9.363911e-06 #>   [17,] -0.33831813 -0.110737942 -0.25370576  0.4610820  5.192832e-01 #>   [18,] -0.08796806 -0.012858540 -0.05030360  0.6279483 -4.027051e-03 #>   [19,] -0.57441387  0.683383759  0.49924481  0.3655420  4.372987e-02 #>   [20,] -0.45939123 -0.198512231 -0.37456089  0.4102527  1.711142e-01 #>   [21,]  0.06235839  0.076317321  0.06356773  0.1775068  1.777039e-05 #>   [22,]  0.62912554  0.868820985  0.71510244 -0.5532882 -5.954398e-01 #>   [23,] -0.45631728 -0.195858774  0.62866717  0.4114737 -8.230877e-01 #>   [24,] -0.38467348 -0.140504155  0.70158487  0.4408088  3.594492e-01 #>   [25,]  0.63099841 -0.129944431 -0.28307639  0.4475209  4.108813e-01 #>   [26,]  0.55603920 -0.185433947 -0.35843759  0.4164072  2.018505e-01 #>   [27,] -0.06941109 -0.009114247 -0.03825012  0.6520679 -1.746942e-03 #>   [28,]  0.17709877  0.288240136  0.20084894 -0.7417280  8.143404e-04 #>   [29,]  0.54695366 -0.193061719 -0.36790666  0.4127757  1.832573e-01 #>   [30,]  0.04739788  0.052839993  0.04682479  0.1609032  6.905543e-06 #>   [31,]  0.29216455 -0.505617955  0.34184084 -0.6877652  6.754311e-03 #>   [32,]  0.70698739 -0.085687282 -0.21198206  0.4823959 -3.183678e-01 #>   [33,]  0.26841972  0.454658174 -0.68704985  0.3020276  4.612211e-03 #>   [34,] -0.28988179 -0.084093163 -0.20917286  0.4839381 -3.077471e-01 #>   [35,] -0.14464503 -0.027097706 -0.09011524 -0.4268502 -2.456411e-02 #>   [36,] -0.77168613 -0.616129415  0.26381442 -0.7161253  2.293260e-03 #>   [37,] -0.32374094 -0.102262456 -0.24006434 -0.5322477 -4.276026e-01 #>   [38,] -0.41924208 -0.165705968  0.66696484  0.4264167  2.599077e-01 #>   [39,] -0.46633434 -0.204595059  0.61811876 -0.5924968  1.585937e-01 #>   [40,] -0.22135000 -0.053262952 -0.15017078 -0.4792290 -1.203102e-01 #>   [41,] -0.17054998 -0.035019003 -0.10965050 -0.4464368 -4.544593e-02 #>   [42,] -0.40605864 -0.155775791  0.68029399  0.4318450  2.954129e-01 #>   [43,]  0.08258390  0.110689296  0.08686393  0.1962311  4.764048e-05 #>   [44,] -0.09303983 -0.013961583 -0.05368866  0.6220645 -4.918049e-03 #>   [45,]  0.34233431 -0.427629388  0.40214877 -0.6671213  1.427230e-02 #>   [46,]  0.25875448  0.438003289  0.30114127 -0.7022313  3.924247e-03 #>   [47,]  0.19569531 -0.676526461  0.22370238  0.2679626  1.214063e-03 #>   [48,] -0.45844856  0.802304059 -0.37357012  0.4106269  1.728754e-01 #>   [49,] -0.66331279 -0.435992374  0.39541884 -0.6693954  1.316295e-02 #>   [50,] -0.43182326 -0.175562683 -0.34589804 -0.5787032  2.289729e-01 #>   [51,] -0.32191667 -0.101230155 -0.23837153 -0.5314014  5.790377e-01 #>   [52,]  0.32929981 -0.447093197  0.38659092 -0.6723869  1.182722e-02 #>   [53,]  0.17038304  0.275424163 -0.80739121  0.2546380  6.992986e-04 #>   [54,]  0.28874628 -0.511228895  0.33769357  0.3107858  6.401313e-03 #>   [55,]  0.06235839  0.076317321  0.06356773  0.1775068  1.777039e-05 #>   [56,]  0.38750275 -0.364568645 -0.54464738 -0.6492458  2.660930e-02 #>   [57,] -0.13299468 -0.023827290 -0.08159212 -0.4171629 -1.799982e-02 #>   [58,] -0.14431468 -0.027002499 -0.08987128  0.5734161 -2.435635e-02 #>   [59,] -0.11769817 -0.019804092 -0.07065988  0.5966021 -1.149539e-02 #>   [60,] -0.25834652 -0.068965410 -0.18142452 -0.4999139 -2.095873e-01 #>   [61,] -0.22909634 -0.056375752  0.84340399 -0.4837439 -1.364765e-01 #>   [62,] -0.50135400 -0.237227568 -0.41940768 -0.6062176  1.066213e-01 #>   [63,] -0.11753640 -0.019763178 -0.07054587  0.5967549 -1.143783e-02 #>   [64,] -0.61014093 -0.361464808  0.45809536  0.3516747  2.745899e-02 #>   [65,] -0.25055375 -0.065479528  0.82527688 -0.4957305 -1.882772e-01 #>   [66,]  0.05180192  0.059543099  0.05170140  0.1661112  9.363911e-06 #>   [67,]  0.27983904 -0.526021559  0.32686737  0.3069789  5.555202e-03 #>   [68,]  0.27768615 -0.529633776 -0.67575334  0.3060517  5.365779e-03 #>   [69,]  0.17777208  0.289522878  0.20167557 -0.7413678  8.266610e-04 #>   [70,]  0.12308540 -0.814943069  0.13500647  0.2263443  2.024807e-04 #>   [71,] -0.16311942 -0.032654157 -0.10396643  0.5589389 -3.846096e-02 #>   [72,]  0.82439560 -0.036670833 -0.11355324 -0.4499948 -5.070636e-02 #>   [73,]  0.12701613  0.192503504  0.13975190  0.2289174  2.276166e-04 #>   [74,] -0.28733391 -0.082808426 -0.20689390  0.4852007 -2.992021e-01 #>   [75,]  0.58205431 -0.164711605 -0.33171763 -0.5730525  2.632595e-01 #>   [76,] -0.22504068 -0.054734722 -0.15322409  0.5186065 -1.278449e-01 #>   [77,] -0.26642086  0.927319070  0.81156640  0.4958374 -2.329912e-01 #>   [78,] -0.38951838 -0.143875414 -0.30320247  0.4387593  3.442795e-01 #>   [79,]  0.32145308 -0.459082879  0.37718546  0.3244134  1.054073e-02 #>   [80,] -0.25665732  0.931798490 -0.17996661  0.5009858 -2.048591e-01 #>   [81,] -0.29922269 -0.088900103  0.78241713 -0.5206339 -3.397923e-01 #>   [82,]  0.06664749  0.083384459  0.06845198 -0.8182250  2.240231e-05 #>   [83,] -0.31051119 -0.094916137 -0.22786091  0.4739530 -3.797340e-01 #>   [84,] -0.38728673 -0.142316193 -0.30099467 -0.5602981  3.512211e-01 #>   [85,] -0.40405111  0.845701324 -0.31768984 -0.5673222  3.010927e-01 #>   [86,]  0.21967416  0.368086228 -0.74680515 -0.7202237  1.951071e-03 #>   [87,] -0.40156141  0.847520540 -0.31519443  0.4337130  3.082352e-01 #>   [88,]  0.59895835 -0.152101439 -0.31467418 -0.5660706  3.097399e-01 #>   [89,] -0.32086617 -0.100638531 -0.23739818  0.4690872 -4.171424e-01 #>   [90,]  0.55977694 -0.182355616 -0.35456253 -0.5820919  2.099212e-01 #>   [91,] -0.53235365  0.731030506  0.54656196  0.3817742  7.376347e-02 #>   [92,] -0.33979573 -0.111619860 -0.25509983 -0.5395853  5.139192e-01 #>   [93,]  0.36184287 -0.399558642  0.42526924  0.3406606  1.877244e-02 #>   [94,] -0.04080111 -0.004282463 -0.02082384 -0.2979845 -2.807628e-04 #>   [95,]  0.54860772 -0.191657619 -0.36617755  0.4134351  1.865355e-01 #>   [96,] -0.05618101 -0.006732195 -0.03000129 -0.3273859 -8.385266e-04 #>   [97,]  0.54759436 -0.192517016 -0.36723661  0.4130310  1.845216e-01 #>   [98,] -0.25464050 -0.067295472 -0.17822975  0.5020651 -1.992923e-01 #>   [99,] -0.18242809 -0.038956911 -0.11886821  0.5453195 -5.850266e-02 #>  [100,] -0.16594786 -0.033545463 -0.10612254  0.5568715 -4.101807e-02 #>  [101,] -0.10841070 -0.017510412 -0.06417055 -0.3943473 -8.525503e-03 #>  [102,]  0.15774013  0.251222250  0.17712553  0.2475737  5.179195e-04 #>  [103,] -0.04091334 -0.004299025 -0.02088904 -0.2982286 -2.833939e-04 #>  [104,]  0.69816111 -0.090274030 -0.21995377  0.4781010 -3.489459e-01 #>  [105,] -0.08197928 -0.011599813 -0.04635547 -0.3647487 -3.135900e-03 #>  [106,] -0.15651847 -0.030616208  0.90102909 -0.4361299 -3.295645e-02 #>  [107,]  0.04739788  0.052839993  0.04682479  0.1609032  6.905543e-06 #>  [108,] -0.30512135 -0.092015131  0.77706204  0.4765229 -3.605246e-01 #>  [109,] -0.10191281 -0.015972515 -0.05969936  0.6123522 -6.819390e-03 #>  [110,] -0.08319047 -0.011850543 -0.04714960 -0.3662589 -3.302989e-03 #>  [111,] -0.45679689 -0.196271182 -0.37183596 -0.5887169  1.759972e-01 #>  [112,] -0.44016493 -0.182308011 -0.35450236  0.4179315  2.100487e-01 #>  [113,]  0.57770230 -0.168065334 -0.33614647 -0.5748319  2.521287e-01 #>  [114,] -0.16769161 -0.034100385 -0.10745641  0.5556101 -4.265625e-02 #>  [115,] -0.05581592 -0.006669973 -0.02977807  0.6732333 -8.198866e-04 #>  [116,] -0.28567376 -0.081977348 -0.20541244 -0.5139730  7.063157e-01 #>  [117,]  0.11167472  0.163606145  0.12129200  0.2185791  1.414087e-04 #>  [118,]  0.85780275 -0.026395694 -0.08831069 -0.4248657 -2.305590e-02 #>  [119,] -0.02775432 -0.002500487 -0.01345093 -0.2651492 -7.658924e-05 #>  [120,]  0.06724168  0.084373868  0.06913121  0.1823521  2.310740e-05 #>  [121,] -0.66033657  0.568428484 -0.60103224 -0.6681956  1.373769e-02 #>  [122,] -0.46774969  0.794149611 -0.38337843  0.4069441  1.561375e-01 #>  [123,]  0.20485498  0.340641788  0.23496859 -0.7274424  1.462364e-03 #>  [124,]  0.24123137 -0.592862088 -0.72032520  0.2898675  2.896925e-03 #>  [125,] -0.24741948 -0.064104834 -0.17204542 -0.4940237 -1.800737e-01 #>  [126,]  0.12737870  0.193191572  0.14019010  0.2291523  2.300505e-04 #>  [127,]  0.58884926 -0.159563754 -0.32483613  0.4297401  2.813275e-01 #>  [128,] -0.15287455 -0.029516342 -0.09623524  0.5666596 -3.018269e-02 #>  [129,] -0.40376290 -0.154087364 -0.31740069  0.4327975  3.019140e-01 #>  [130,]  0.34272146 -0.427059950 -0.59739045  0.3330343  1.435130e-02 #>  [131,]  0.08790228  0.120111583  0.09308841 -0.7993485  5.949708e-05 #>  [132,]  0.27825281  0.471318361  0.32493660 -0.6937040  5.415091e-03 #>  [133,] -0.62394485  0.620091360 -0.55802045  0.3462681  2.280875e-02 #>  [134,] -0.54414102 -0.281777899 -0.46656938  0.3772248  6.387770e-02 #>  [135,]  0.71409969 -0.082090479 -0.20561444 -0.5140859 -2.944349e-01 #>  [136,] -0.50646158 -0.242268116 -0.42496325 -0.6082026  1.004452e-01 #>  [137,]  0.12214043  0.183270567  0.13386715 -0.7742816  1.967698e-04 #>  [138,]  0.06175662  0.075336696  0.06288520  0.1768928  1.718187e-05 #>  [139,]  0.10078846  0.143446776  0.10830684  0.2107006  9.730873e-05 #>  [140,]  0.30024586  0.507499497  0.35162820 -0.6843640  7.656566e-03 #>  [141,] -0.17041911 -0.034976699 -0.10954984  0.5536564 -4.531533e-02 #>  [142,]  0.23206425 -0.609331751 -0.73157833  0.2856305  2.456552e-03 #>  [143,]  0.45478415 -0.282966605  0.53222813  0.3768101  6.303862e-02 #>  [144,] -0.07946470 -0.011085511 -0.04471392 -0.3615561 -2.809044e-03 #>  [145,]  0.35949854 -0.402864625 -0.57749819 -0.6602689  1.817199e-02 #>  [146,]  0.47344576 -0.262819369  0.55298447 -0.6159852  7.911511e-02 #>  [147,]  0.13468125  0.207087087  0.14903278 -0.7661992  2.835042e-04 #>  [148,] -0.14333797 -0.026721860 -0.08915075 -0.4257938 -2.374983e-02 #>  [149,] -0.34166921 -0.112744182 -0.25687037 -0.5404292  5.071299e-01 #>  [150,] -0.35451576 -0.120640465  0.73089961  0.4538484 -5.389006e-01 #>  [151,] -0.42239768 -0.168142904 -0.33624841 -0.5748727  2.518770e-01 #>  [152,] -0.57737909 -0.320182505 -0.50413823 -0.6356042  4.210549e-02 #>  [153,]  0.73200485 -0.073417810  0.81019209  0.4950187 -2.377046e-01 #>  [154,]  0.22456247  0.377037819  0.25920424  0.2821045  2.139044e-03 #>  [155,] -0.11068298 -0.018061198 -0.06574763 -0.3966159 -9.191493e-03 #>  [156,]  0.70451281 -0.086959382  0.78579071  0.4811840 -3.268506e-01 #>  [157,]  0.13718277  0.211860713 -0.84793130  0.2353585  3.038669e-04 #>  [158,] -0.18031259 -0.038241251 -0.11721481 -0.4532418 -5.599781e-02 #>  [159,] -0.43818230 -0.180689403  0.64754814 -0.5812706  2.144330e-01 #>  [160,]  0.76901313 -0.057149253 -0.15817376  0.5151702 -1.406264e-01 #>  [161,] -0.61864916  0.627241549  0.44817580  0.3483465  2.450148e-02 #>  [162,]  0.06191204  0.075589701  0.06306141  0.1770517  1.733248e-05 #>  [163,]  0.11017630  0.160811403  0.11949853  0.2175239  1.345807e-04 #>  [164,]  0.64902983 -0.118428276  0.73429056 -0.5445831  4.736925e-01 #>  [165,] -0.04091334 -0.004299025 -0.02088904 -0.2982286 -2.833939e-04 #>  [166,]  0.10475972  0.150759954  0.11303138 -0.7863667  1.119652e-04 #>  [167,]  0.30349447 -0.487286467  0.35555542  0.3169940  8.047702e-03 #>  [168,] -0.49363523 -0.229748381 -0.41105113 -0.6032111  1.165885e-01 #>  [169,] -0.35569672 -0.121382923 -0.27023246 -0.5466722  4.569277e-01 #>  [170,]  0.46717729  0.730528742 -0.45395859 -0.6184069  7.334519e-02 #>  [171,] -0.35555370 -0.121292858  0.72990471 -0.5466092  4.574323e-01 #>  [172,]  0.47167840 -0.264683106 -0.44897008  0.3833318  7.744844e-02 #>  [173,]  0.70763385 -0.085356726  0.78859879  0.4827135 -3.161643e-01 #>  [174,] -0.03697478 -0.003729994 -0.01861836 -0.2893284 -2.011047e-04 #>  [175,]  0.09317008  0.129571071  0.09928757  0.2048651  7.328699e-05 #>  [176,]  0.06113157  0.074321057  0.06217698  0.1762508  1.658578e-05 #>  [177,] -0.27494089 -0.076718015 -0.19590129  0.4914427 -2.590539e-01 #>  [178,] -0.13298875 -0.023825671 -0.08158782 -0.4171578 -1.799686e-02 #>  [179,]  0.31625635 -0.467135479  0.37094080  0.3222808  9.758005e-03 #>  [180,] -0.60119782 -0.349850357  0.46847350 -0.6448397  3.091141e-02 #>  [181,] -0.13899636 -0.025489663 -0.08596197 -0.4222310 -2.118995e-02 #>  [182,]  0.54305017 -0.196402816 -0.37199644 -0.5887777  1.757062e-01 #>  [183,] -0.21707890  0.948414814 -0.14665542 -0.4766927 -1.119684e-01 #>  [184,] -0.31419285 -0.096928096 -0.23123992  0.4722125 -3.929718e-01 #>  [185,] -0.10312526 -0.016255294 -0.06052926  0.6110772 -7.116385e-03 #>  [186,]  0.06191204  0.075589701  0.06306141  0.1770517  1.733248e-05 #>  [187,]  0.56396528 -0.178947003  0.64976540  0.4195950  2.192617e-01 #>  [188,] -0.06035227 -0.007456658 -0.03256889 -0.3342436 -1.074010e-03 #>  [189,]  0.53819880 -0.200609485 -0.37709723  0.4092970  1.666787e-01 #>  [190,]  0.29350616 -0.503425870  0.34346739 -0.6871982  6.897384e-03 #>  [191,] -0.17839755 -0.037598782 -0.11572245 -0.4519287 -5.379892e-02 #>  [192,] -0.03782264 -0.003850355 -0.01910416 -0.2913051 -2.171388e-04 #>  [193,]  0.73872466 -0.070300855 -0.18395926  0.4985351 -2.179248e-01 #>  [194,] -0.78128316 -0.633673017  0.25201775  0.2793174  1.915908e-03 #>  [195,] -0.49541599 -0.231459212 -0.41297482 -0.6039055  1.142194e-01 #>  [196,] -0.31657306 -0.098242070 -0.23343147  0.4710935  5.984294e-01 #>  [197,]  0.17959771  0.292998681 -0.79608271  0.2596050  8.608205e-04 #>  [198,] -0.07011520 -0.009247839 -0.03869752  0.6510645 -1.809679e-03 #>  [199,]  0.19410735  0.320483220  0.22174958 -0.7328452  1.174737e-03 #>  [200,]  0.65988180 -0.111812895 -0.25540434 -0.5397308  5.127496e-01 #>  [201,]  0.20516257 -0.658784208  0.23534696  0.2727100  1.471369e-03 #>  [202,]  0.10320286  0.147886936  0.11117744  0.2124920  1.060337e-04 #>  [203,] -0.38797328  0.857205281 -0.30167341  0.4394117 -6.509229e-01 #>  [204,] -0.17731515 -0.037237899 -0.11488078  0.5488181 -5.258449e-02 #>  [205,]  0.15909246  0.253813741  0.17877948  0.2483442  5.353104e-04 #>  [206,] -0.04913857 -0.005566275 -0.02574005 -0.3148335 -5.292289e-04 #>  [207,] -0.17761606 -0.037338061 -0.11511463 -0.4513899 -5.292005e-02 #>  [208,]  0.76850514 -0.057358024 -0.15859835 -0.4851205 -1.417552e-01 #>  [209,]  0.60141781  0.849679091 -0.31221568  0.4349552 -6.830764e-01 #>  [210,] -0.83066484  0.273421306  0.19132390  0.2540638  6.825837e-04 #>  [211,]  0.52468653 -0.212648096  0.60859230  0.4039634  1.435470e-01 #>  [212,]  0.41830523  0.674577144 -0.50907270  0.3627265  3.983893e-02 #>  [213,] -0.51015039 -0.245954319  0.57101163  0.3903657  9.618349e-02 #>  [214,]  0.76288934 -0.059692360 -0.16331021 -0.4883061 -1.546207e-01 #>  [215,] -0.47134583 -0.209063522 -0.38718998 -0.5944746  1.500400e-01 #>  [216,]  0.06175662  0.075336696  0.06288520  0.1768928  1.718187e-05 #>  [217,] -0.11818270 -0.019926840 -0.07100156  0.5961454 -1.166909e-02 #>  [218,]  0.17285067  0.280137520 -0.80436451 -0.7440177  7.399507e-04 #>  [219,]  0.52674887 -0.210779675 -0.38921375  0.4047749  1.468916e-01 #>  [220,] -0.34252389 -0.113259381 -0.25767920  0.4591866  5.040375e-01 #>  [221,] -0.68122306 -0.463218574 -0.62602881  0.3233166  1.013104e-02 #>  [222,] -0.43537802 -0.178416443  0.65044262 -0.5801400  2.207549e-01 #>  [223,]  0.54813993 -0.192054019 -0.36666633  0.4132485 -8.143964e-01 #>  [224,]  0.21604639  0.361409130 -0.75126611  0.2780321  1.820573e-03 #>  [225,]  0.04739788  0.052839993  0.04682479  0.1609032  6.905543e-06 #>  [226,]  0.53173222 -0.206311209  0.61607311  0.4067395 -8.447536e-01 #>  [227,] -0.24656004 -0.063730602 -0.17131296  0.5064468 -1.778618e-01 #>  [228,] -0.08852370 -0.012977731 -0.05067261 -0.3727091 -4.118299e-03 #>  [229,]  0.54864310 -0.191627658  0.63385941  0.4134492  1.866062e-01 #>  [230,] -0.07045286 -0.009312143 -0.03891235  0.6505862 -1.840344e-03 #>  [231,]  0.79616279 -0.046554895 -0.13588145 -0.4685997 -8.863118e-02 #>  [232,] -0.80290288  0.326110057  0.22542638 -0.7313270  1.249660e-03 #>  [233,] -0.18363325  0.960632599 -0.11981237  0.5445054 -5.996572e-02 #>  [234,]  0.07739332  0.101632084  0.08082523  0.1917375  3.785800e-05 #>  [235,]  0.48641388 -0.249422449  0.56725311  0.3890335  9.235912e-02 #>  [236,]  0.13216577  0.202293258  0.14598333  0.2322169  2.641110e-04 #>  [237,] -0.04081737 -0.004284862 -0.02083329  0.7019801 -2.811431e-04 #>  [238,]  0.32206067 -0.458147202 -0.62208523  0.3246620  1.063575e-02 #>  [239,]  0.80597386 -0.042992064 -0.12802189 -0.4623590 -7.370917e-02 #>  [240,]  0.15471689  0.245427867 -0.82656984  0.2458375  4.806512e-04 #>  [241,] -0.69441774  0.516046451 -0.64192290  0.3178640  8.308152e-03 #>  [242,]  0.80015560 -0.045088237 -0.13267010 -0.4660864 -8.232213e-02 #>  [243,]  0.08329085  0.111933804  0.08768923 -0.8031710  4.910501e-05 #>  [244,] -0.15001989 -0.028667131 -0.09410312 -0.4311197 -2.813493e-02 #>  [245,] -0.33854289 -0.110871818 -0.25391768  0.4609804  5.184668e-01 #>  [246,] -0.14901144 -0.028369736 -0.09335225 -0.4303276 -2.743705e-02 #>  [247,] -0.16382721 -0.032876178 -0.10450510 -0.4415810 -3.908939e-02 #>  [248,]  0.16171337  0.258834994  0.18198657  0.2498270  5.703279e-04 #>  [249,]  0.32004286 -0.461259276 -0.62450793 -0.6761642  1.032306e-02 #>  [250,]  0.14024718 -0.782284117  0.15579211  0.2372441  3.303405e-04 #>  [251,]  0.68349123 -0.098206444  0.76662779  0.4711237 -4.013380e-01 #>  [252,] -0.44052493 -0.182602948 -0.35487504  0.4177868  2.092602e-01 #>  [253,]  0.36071526 -0.401146513  0.42393850  0.3402137  1.848145e-02 #>  [254,]  0.79556608 -0.046776061 -0.13636287 -0.4689723 -8.960244e-02 #>  [255,]  0.08258390  0.110689296  0.08686393  0.1962311  4.764048e-05 #>  [256,] -0.49244415  0.771391035  0.59023412  0.3972536  1.181969e-01 #>  [257,]  0.33074877 -0.444901558 -0.61167547  0.3282014  1.207934e-02 #>  [258,]  0.25542821  0.432209428 -0.70292830  0.2962874  3.708607e-03 #>  [259,]  0.64548435  0.879359605 -0.26910028  0.4538485 -5.389002e-01 #>  [260,] -0.20622078 -0.047441436  0.86219320  0.5299166 -9.255553e-02 #>  [261,] -0.73978127 -0.559456162  0.30293187  0.2984182  4.022487e-03 #>  [262,] -0.20080621  0.954560569 -0.13344207 -0.4666951 -8.381186e-02 #>  [263,]  0.15890432  0.253453212  0.17854933  0.2482372  5.328636e-04 #>  [264,]  0.79455644 -0.047151453 -0.13717832  0.5303991 -9.126280e-02 #>  [265,]  0.05180192  0.059543099  0.05170140  0.1661112  9.363911e-06 #>  [266,]  0.13795412  0.213333808 -0.84699452  0.2358355  3.103693e-04 #>  [267,]  0.37613865 -0.379795184 -0.55792262  0.3463010  2.283460e-02 #>  [268,] -0.60212566  0.648956824  0.46739913  0.3547992  3.053584e-02 #>  [269,] -0.03697478 -0.003729994 -0.01861836 -0.2893284 -2.011047e-04 #>  [270,] -0.71091553  0.489327866  0.33810407  0.3109294  6.435511e-03 #>  [271,]  0.19583351 -0.676266389  0.22387234 -0.7319672  1.217535e-03 #>  [272,] -0.71046658  0.490066419  0.33864895  0.3111200  6.481153e-03 #>  [273,] -0.28200200 -0.080156057  0.79785434 -0.5121347 -2.816277e-01 #>  [274,] -0.09482554  0.985641998 -0.05488937 -0.3799470 -5.264135e-03 #>  [275,] -0.57624611 -0.318816579 -0.50284489  0.3648338  4.271958e-02 #>  [276,]  0.19410786 -0.679515810 -0.77824979  0.2671550  1.174749e-03 #>  [277,]  0.73216812 -0.073341198 -0.18966526  0.4951034 -2.372135e-01 #>  [278,]  0.53899670 -0.199913461  0.62374305 -0.5903867  1.681365e-01 #>  [279,] -0.12642177 -0.022061008 -0.07685799 -0.4114065 -1.493572e-02 #>  [280,]  0.41473163 -0.329807112  0.48683181 -0.6386570  3.804643e-02 #>  [281,]  0.09787318  0.138111819  0.10484836  0.2085015  8.750853e-05 #>  [282,] -0.73982841  0.440462137  0.30287423  0.2983973  4.019292e-03 #>  [283,] -0.79438949  0.342051374  0.23589796  0.2729318  1.484564e-03 #>  [284,] -0.13205718 -0.023571899  0.91908643  0.5836446 -1.753621e-02 #>  [285,] -0.79591430  0.339205490  0.23402232  0.2721758  1.440038e-03 #>  [286,] -0.74376769  0.433612920  0.29805574  0.2966463  3.759794e-03 #>  [287,] -0.32876974 -0.105140535 -0.24474734  0.4654329  5.540652e-01 #>  [288,] -0.53122648 -0.267766387 -0.45218777 -0.6177904  7.477741e-02 #>  [289,] -0.21011457 -0.048907496  0.85903466 -0.4724811 -9.922488e-02 #>  [290,]  0.26363775  0.446451977  0.30711074 -0.7000713  4.260033e-03 #>  [291,]  0.70791263  0.914785599 -0.21115086  0.4828506 -3.152157e-01 #>  [292,] -0.09713471 -0.014876824 -0.05644879 -0.3825043 -5.738177e-03 #>  [293,]  0.66172581 -0.110711779 -0.25366434 -0.5388981  5.194428e-01 #>  [294,] -0.76738507  0.391663531  0.26909803 -0.7141128  2.481324e-03 #>  [295,] -0.26792321 -0.073384048 -0.18974506  0.4950560 -2.374881e-01 #>  [296,]  0.06598288  0.082280702  0.06769297  0.1811256  2.163251e-05 #>  [297,]  0.10967021  0.159868793  0.11889320  0.2171654  1.323322e-04 #>  [298,]  0.67229536 -0.104526965 -0.24375345  0.4659225 -4.420501e-01 #>  [299,] -0.36128110 -0.124932117 -0.27560331  0.4508776  4.373747e-01 #>  [300,] -0.10205607 -0.016005828 -0.05979732 -0.3877991 -6.853991e-03 #>  [301,] -0.79339014  0.343914229  0.23712724 -0.7265742  1.514352e-03 #>  [302,] -0.26632520 -0.072636287 -0.18835017 -0.5041128 -2.327064e-01 #>  [303,] -0.46564619 -0.203986597 -0.38115390  0.4077752  1.597996e-01 #>  [304,]  0.79493111 -0.047011973  0.86312442 -0.4693679 -9.064415e-02 #>  [305,] -0.05188317 -0.006011989 -0.02738942  0.6801152 -6.376473e-04 #>  [306,] -0.06474340 -0.008245898 -0.03530524  0.6589316 -1.370480e-03 #>  [307,]  0.18476552  0.302818155  0.21026568  0.2623301  9.637030e-04 #>  [308,]  0.64479303  0.878925322 -0.26976283 -0.5464564 -5.413437e-01 #>  [309,]  0.20004906 -0.668348383  0.22905708 -0.7298398  1.327400e-03 #>  [310,]  0.06175662  0.075336696  0.06288520  0.1768928  1.718187e-05 #>  [311,] -0.80211831  0.327584291  0.22639132  0.2690694  1.269951e-03 #>  [312,]  0.38702207  0.634795936  0.45479269  0.3505663  2.643891e-02 #>  [313,] -0.72616307 -0.536127391  0.31955734 -0.6956132  5.040881e-03 #>  [314,] -0.41655667 -0.163650551 -0.33030760  0.4275169  2.668848e-01 #>  [315,] -0.84592744  0.244192866  0.17264299  0.2454650  4.729889e-04 #>  [316,]  0.28446685  0.481694865  0.33249559 -0.6910375  5.981913e-03 #>  [317,] -0.11883524 -0.020092636 -0.07146219 -0.4044674 -1.190612e-02 #>  [318,]  0.77594909 -0.054338013 -0.15240384  0.5191846 -1.257944e-01 #>  [319,] -0.10375805 -0.016403641 -0.06096320 -0.3895835 -7.275175e-03 #>  [320,] -0.29875320 -0.088654829 -0.21715811  0.4795939  6.618428e-01 #>  [321,] -0.03751372 -0.003806364 -0.01892696 -0.2905889 -2.111946e-04 #>  [322,]  0.13953764 -0.783640492  0.15492956  0.2368097  3.240570e-04 #>  [323,] -0.26535536 -0.072184516 -0.18750487 -0.5036068 -2.298284e-01 #>  [324,] -0.31523132 -0.097500091 -0.23219540  0.4717237 -3.967199e-01 #>  [325,]  0.65373724  0.884469965 -0.26122560  0.4575120 -5.094476e-01 #>  [326,] -0.73430593  0.449988997 -0.69037744  0.3008332  4.408561e-03 #>  [327,]  0.23055807 -0.612057690  0.26657158  0.2849270  2.389849e-03 #>  [328,]  0.44096314  0.701434214 -0.48330919 -0.6285213  5.310163e-02 #>  [329,]  0.60516963 -0.147630823  0.69152419 -0.5634747  3.280810e-01 #>  [330,] -0.05328867 -0.006244549 -0.02823972 -0.3223902 -6.989875e-04 #>  [331,]  0.66938238 -0.106210153  0.75352575  0.4645855 -4.526745e-01 #>  [332,] -0.63144022 -0.390187955  0.43318126  0.3433166  2.059240e-02 #>  [333,]  0.83273438 -0.033964437 -0.10713023 -0.4440827 -4.225164e-02 #>  [334,] -0.29939744 -0.088991497 -0.21774103  0.4792814  6.595985e-01 #>  [335,] -0.11754230 -0.019764671 -0.07055004  0.5967493 -1.143993e-02 #>  [336,] -0.55894753 -0.298463075 -0.48320833  0.3715131  5.316102e-02 #>  [337,] -0.51263364 -0.248457611 -0.43170400  0.3894027  9.340557e-02 #>  [338,] -0.24630986 -0.063621883 -0.17109988  0.5065840 -1.772209e-01 #>  [339,]  0.58863197 -0.159726717 -0.32505555 -0.5703494  2.807367e-01 #>  [340,]  0.09317008  0.129571071  0.09928757  0.2048651  7.328699e-05 #>  [341,]  0.33595794  0.562919858  0.39454855  0.3303101  1.302540e-02 #>  [342,]  0.14382462  0.224559626  0.16014460  0.2394149  3.634820e-04 #>  [343,]  0.73499753 -0.072020517 -0.18719753 -0.5034224 -2.287858e-01 #>  [344,] -0.41238471 -0.160490655  0.67391722 -0.5707684  2.779842e-01 #>  [345,]  0.22357778  0.375238946 -0.74200611  0.2816375  2.100022e-03 #>  [346,] -0.60126296 -0.349934000  0.46839809  0.3551350  3.088491e-02 #>  [347,] -0.04080111 -0.004282463 -0.02082384 -0.2979845 -2.807628e-04 #>  [348,]  0.37322128 -0.383773121 -0.56134307  0.3451536  2.194680e-02 #>  [349,] -0.09280293 -0.013909307 -0.05352972 -0.3776664 -4.873443e-03 #>  [350,] -0.03065623 -0.002871292 -0.01505334 -0.2733586 -1.069245e-04 #>  [351,] -0.81880275  0.296041188  0.20588182  0.2604529  8.916718e-04 #>  [352,]  0.19592485  0.323905472 -0.77601533  0.2680791  1.219834e-03 #>  [353,]  0.13849498  0.214367039  0.15366253 -0.7638310  3.149929e-04 #>  [354,] -0.50637812 -0.242185163  0.57512769  0.3918298  1.005436e-01 #>  [355,] -0.41368578 -0.161471768 -0.32739868  0.4286962  2.744889e-01 #>  [356,] -0.13387395 -0.024067869 -0.08222952 -0.4179162 -1.844295e-02 #>  [357,]  0.10457651  0.150421458  0.11281309  0.2134995  1.112544e-04 #>  [358,] -0.51102348  0.753167552  0.57005739  0.3900271  9.519855e-02 #>  [359,] -0.29705074 -0.087768705  0.78438032  0.4804215 -3.322484e-01 #>  [360,]  0.27983904 -0.526021559  0.32686737  0.3069789  5.555202e-03 #>  [361,]  0.27774061  0.470457768  0.32431297 -0.6939248  5.370501e-03 #>  [362,]  0.04739788  0.052839993  0.04682479  0.1609032  6.905543e-06 #>  [363,] -0.06817654 -0.008881658 -0.03746769 -0.3461532 -1.640812e-03 #>  [364,]  0.63968336 -0.124314605 -0.27467366  0.4512994  4.407300e-01 #>  [365,] -0.34891560 -0.117157899 -0.26374988  0.4563295  4.810329e-01 #>  [366,] -0.42906992  0.826626709 -0.34307125  0.4224126  2.354960e-01 #>  [367,]  0.71695136 -0.080672869 -0.20307549  0.4873398 -2.850433e-01 #>  [368,]  0.63776739 -0.125543214 -0.27652135  0.4504620  4.340739e-01 #>  [369,]  0.22213782  0.372604417  0.25622378 -0.7190472  2.044021e-03 #>  [370,] -0.08794643 -0.012853907 -0.05028924 -0.3720260 -4.023528e-03 #>  [371,] -0.42069140 -0.166822303 -0.33450987  0.4258240  2.561968e-01 #>  [372,] -0.69733979 -0.488622205  0.35454730  0.3166457  7.945635e-03 #>  [373,]  0.23910096  0.403329388 -0.72293919 -0.7111104  2.789121e-03 #>  [374,] -0.33400904 -0.108190194 -0.24965214  0.4630371  5.349620e-01 #>  [375,] -0.18312324 -0.039193435 -0.11941261 -0.4551506 -5.934334e-02 #>  [376,] -0.56239475 -0.302444466  0.51289526 -0.6298170  5.091238e-02 #>  [377,]  0.32291172  0.543161349  0.37893604  0.3250100  1.077011e-02 #>  [378,]  0.60255371 -0.149503150 -0.31108206 -0.5645701  3.202764e-01 #>  [379,] -0.12205408 -0.020918601 -0.07374249  0.5925477 -1.312872e-02 #>  [380,]  0.13867801  0.214716731 -0.84611510  0.2362816  3.165695e-04 #>  [381,]  0.13795412  0.213333808 -0.84699452  0.2358355  3.103693e-04 #>  [382,] -0.22063097 -0.052978598 -0.14957762  0.5211955 -1.188776e-01 #>  [383,] -0.39549938 -0.148108212  0.69085824  0.4362448  3.260740e-01 #>  [384,] -0.03740627 -0.003791100 -0.01886538 -0.2903387 -2.091547e-04 #>  [385,]  0.41889826 -0.324699252 -0.50839390  0.3629559  4.014368e-02 #>  [386,]  0.12847532  0.195273873  0.14151600  0.2298603  2.375347e-04 #>  [387,] -0.06160858 -0.007679697 -0.03334832 -0.3362353 -1.153494e-03 #>  [388,]  0.80364502 -0.043825276 -0.12987793 -0.4638605 -7.707522e-02 #>  [389,]  0.80405294 -0.043678771 -0.12955239 -0.4635984 -7.647783e-02 #>  [390,] -0.29742727 -0.087964244 -0.21595968  0.4802382  6.664476e-01 #>  [391,] -0.04123596 -0.004346744 -0.02107659 -0.2989274 -2.910554e-04 #>  [392,]  0.38196134  0.628059864 -0.55111096  0.3485857  2.470371e-02 #>  [393,]  0.90247294 -0.014965671 -0.05671450 -0.3829341 -5.821777e-03 #>  [394,] -0.46079450 -0.199731593  0.62396285 -0.5903039  1.685198e-01 #>  [395,] -0.70787671 -0.505685461 -0.65820919 -0.6877826  6.749952e-03 #>  [396,] -0.36755001 -0.128992606 -0.28166712  0.4481494  4.158101e-01 #>  [397,]  0.06191204  0.075589701  0.06306141  0.1770517  1.733248e-05 #>  [398,]  0.59002705 -0.158682317  0.67635251  0.4302260  2.845441e-01 #>  [399,] -0.19519747 -0.043410175 -0.12895466 -0.4631158 -7.538872e-02 #>  [400,] -0.79544260  0.340086308  0.23460255 -0.7275900  1.453694e-03 #>  [401,]  0.74575619 -0.067118032 -0.17788862 -0.4977219 -1.982074e-01 #>  [402,]  0.06113157  0.074321057  0.06217698  0.1762508  1.658578e-05 #>  [403,]  0.54045394 -0.198646517  0.62527631  0.4101912 -8.291737e-01 #>  [404,]  0.23630712  0.398317278  0.27363166  0.2876010  2.652848e-03 #>  [405,] -0.40199038 -0.152791910  0.68437601  0.4335344  3.069968e-01 #>  [406,] -0.05298422 -0.006193927 -0.02805521 -0.3218520 -6.853527e-04 #>  [407,] -0.04123596 -0.004346744 -0.02107659 -0.2989274 -2.910554e-04 #>  [408,] -0.44185200 -0.183692939 -0.35624984  0.4172535  2.063734e-01 #>  [409,] -0.65857234 -0.428964904 -0.59893064  0.3325143  1.408879e-02 #>  [410,] -0.10984154 -0.017856453 -0.06516282 -0.3957801 -8.940490e-03 #>  [411,]  0.05180192  0.059543099  0.05170140  0.1661112  9.363911e-06 #>  [412,] -0.32189783 -0.101219530 -0.23835407 -0.5313926  5.791062e-01 #>  [413,] -0.13803793 -0.025221006 -0.08526114  0.5785670 -2.065400e-02 #>  [414,] -0.10307198 -0.016242827 -0.06049275 -0.3888670 -7.103135e-03 #>  [415,] -0.11080356 -0.018090612 -0.06583151 -0.3967353 -9.227889e-03 #>  [416,]  0.47789907 -0.258163771  0.55789893 -0.6142633  8.345810e-02 #>  [417,]  0.47774269 -0.258326277  0.55772661 -0.6143237  8.330205e-02 #>  [418,] -0.10917425 -0.017694740 -0.06469972  0.6048863 -8.745116e-03 #>  [419,]  0.79506068 -0.046963787 -0.13677092  0.5307128 -9.043090e-02 #>  [420,] -0.69271226 -0.481241435 -0.63986432 -0.6814268  8.526328e-03 #>  [421,] -0.45245165 -0.192556104 -0.36728472  0.4130127  1.844305e-01 #>  [422,]  0.11167472  0.163606145  0.12129200  0.2185791  1.414087e-04 #>  [423,]  0.16860678 -0.727971289  0.19043094  0.2536636  6.711539e-04 #>  [424,] -0.71825103 -0.522828916  0.32919104 -0.6922009  5.728024e-03 #>  [425,]  0.62988168 -0.130679692 -0.28416191 -0.5529618  4.071070e-01 #>  [426,] -0.42237120 -0.168122354  0.66377859  0.4251381 -7.480563e-01 #>  [427,]  0.69760269 -0.090568870 -0.22046070  0.4778318 -3.509086e-01 #>  [428,]  0.29271347  0.495279629  0.34250642  0.3124669  6.812536e-03 #>  [429,]  0.12714754  0.192752852 -0.86008930  0.2290026  2.284964e-04 #>  [430,] -0.71360145  0.484896116 -0.66515729  0.3097868  6.168196e-03 #>  [431,]  0.85631753  0.973179299 -0.08940476 -0.4260729 -2.396245e-02 #>  [432,] -0.08852370 -0.012977731 -0.05067261 -0.3727091 -4.118299e-03 #>  [433,]  0.48834189 -0.247472109  0.56936339 -0.6102191  9.448825e-02 #>  [434,]  0.22930255 -0.614334147  0.26502915  0.2843389  2.335404e-03 #>  [435,]  0.14559262  0.227944442  0.16229777  0.2404761  3.807901e-04 #>  [436,] -0.06558176 -0.008399643 -0.03583146 -0.3423295 -1.433233e-03 #>  [437,]  0.39686259 -0.352347077  0.46622697  0.3544053  3.013100e-02 #>  [438,]  0.51502259  0.778445449 -0.40173480 -0.5998282  1.287262e-01 #>  [439,] -0.86153620  0.214307460  0.15362464 -0.7638503  3.147248e-04 #>  [440,]  0.64237367  0.877397879 -0.27208500 -0.5475210 -5.498620e-01 #>  [441,]  0.57254363  0.827901312 -0.34141771  0.4230677  2.393829e-01 #>  [442,] -0.18658832 -0.040382532 -0.12213436  0.5425255 -6.366588e-02 #>  [443,] -0.37421030 -0.133396223  0.71185066 -0.5547245 -6.065873e-01 #>  [444,] -0.16897410 -0.034511167 -0.10843969  0.5546885 -4.389172e-02 #>  [445,]  0.11678263  0.173174154  0.12741923  0.2221124  1.666860e-04 #>  [446,]  0.09414344  0.131331652  0.10043649  0.2056270  7.607624e-05 #>  [447,]  0.55009944 -0.190397243  0.63537986 -0.5859695  1.895325e-01 #>  [448,] -0.22698483 -0.055518268 -0.15483831  0.5174762 -1.319366e-01 #>  [449,] -0.07827476 -0.010845079 -0.04394051 -0.3600174 -2.663472e-03 #>  [450,]  0.36239086  0.601211493 -0.57408431  0.3408777  1.891533e-02 #>  [451,] -0.18822886 -0.040951389 -0.12342767  0.5414362 -6.579025e-02 #>  [452,]  0.10864535  0.157962081  0.11766805  0.2164365  1.278664e-04 #>  [453,]  0.78417199 -0.051098955 -0.14562956 -0.4759433 -1.096016e-01 #>  [454,]  0.35927604 -0.403179351  0.42223899  0.3396428  1.811590e-02 #>  [455,]  0.04739788  0.052839993  0.04682479  0.1609032  6.905543e-06 #>  [456,] -0.13266239 -0.023736638  0.91864851  0.5831228 -1.783445e-02 #>  [457,] -0.36103467 -0.124774154 -0.27536569 -0.5490147  4.382311e-01 #>  [458,]  0.70548705 -0.086457279 -0.21333171 -0.5183396 -3.235020e-01 #>  [459,]  0.25771576  0.436197364  0.29987073 -0.7026930  3.855797e-03 #>  [460,]  0.76348604 -0.059442022 -0.16280799 -0.4879701 -1.532200e-01 #>  [461,] -0.52683474 -0.263114552  0.55267442 -0.6160936  7.884846e-02 #>  [462,] -0.41460134 -0.162164527 -0.32832557 -0.5716803  2.720476e-01 #>  [463,] -0.07397390 -0.009991951 -0.04116368 -0.3542967 -2.183316e-03 #>  [464,] -0.27902798 -0.078697724 -0.19950954  0.4893651 -2.720184e-01 #>  [465,] -0.78351549  0.362217006  0.24927268 -0.7217565  1.835940e-03 #>  [466,]  0.09952934  0.141138946  0.10681207  0.2097558  9.297967e-05 #>  [467,] -0.15392147 -0.029830516  0.90298040 -0.4341469 -3.096098e-02 #>  [468,] -0.29629816 -0.087378616 -0.21494052  0.4807882 -3.296467e-01 #>  [469,]  0.14339443  0.223736250 -0.84037911  0.2391556  3.593651e-04 #>  [470,] -0.17700235 -0.037133913 -0.11463780  0.5490345 -5.223732e-02 #>  [471,] -0.04080111 -0.004282463 -0.02082384 -0.2979845 -2.807628e-04 #>  [472,] -0.10181259 -0.015949228 -0.05963086 -0.3875419 -6.795264e-03 #>  [473,] -0.08272420 -0.011753788 -0.04684362  0.6343204 -3.237905e-03 #>  [474,] -0.52977862 -0.266226498 -0.45058321 -0.6172312  7.609819e-02 #>  [475,] -0.48430619 -0.220927830 -0.40101506 -0.5995654  1.297113e-01 #>  [476,]  0.42128054  0.678196288 -0.50566943 -0.6361225  4.138933e-02 #>  [477,] -0.33684375 -0.109862173 -0.25231680  0.4617494  5.246425e-01 #>  [478,] -0.66535051 -0.439036238 -0.60701356  0.3297813  1.278181e-02 #>  [479,] -0.41741598  0.835693570 -0.33117970 -0.5728354  2.646379e-01 #>  [480,]  0.16778302  0.270453360  0.18942119  0.2532098  6.584114e-04 #>  [481,] -0.17542440 -0.036611400 -0.11341375 -0.4498694 -5.051166e-02 #>  [482,]  0.53122843 -0.206759983  0.61553957  0.4065407  1.543840e-01 #>  [483,] -0.14745997 -0.027914854 -0.09219945  0.5708990 -2.638885e-02 #>  [484,]  0.44527461 -0.293636768  0.52155245  0.3731419  5.603750e-02 #>  [485,]  0.49139315 -0.244407176 -0.42730281  0.3909646  9.794688e-02 #>  [486,] -0.06528509 -0.008345125 -0.03564511 -0.3418847 -1.410791e-03 #>  [487,]  0.56480383  0.821730290 -0.34936991 -0.5800666  2.211697e-01 #>  [488,]  0.15955188  0.254694049 -0.82065850  0.2486051  5.413224e-04 #>  [489,]  0.35506274  0.590829728 -0.58274290  0.3379682  1.708260e-02 #>  [490,] -0.54559186  0.716616713 -0.46819275  0.3766651  6.274744e-02 #>  [491,] -0.11928246 -0.020206586 -0.07177821 -0.4048858 -1.207065e-02 #>  [492,]  0.23477975  0.395568882 -0.72824355  0.2868936  2.580732e-03 #>  [493,]  0.43750954 -0.302555535  0.51278696 -0.6298539  5.085120e-02 #>  [494,] -0.23528284 -0.058927256  0.83822703 -0.4872750 -1.503554e-01 #>  [495,]  0.12077886  0.180699503 -0.86777337  0.2248112  1.887597e-04 #>  [496,]  0.80460998 -0.043479094 -0.12910815 -0.4632399 -7.566742e-02 #>  [497,]  0.48875861  0.752948044  0.56981913  0.3899425  9.495413e-02 #>  [498,]  0.19529225  0.322714896  0.22320670 -0.7322421  1.203981e-03 #>  [499,]  0.26018719 -0.559510822  0.30289330  0.2984042  4.020349e-03 #>  [500,]  0.68614499 -0.096742439 -0.23092930  0.4723717 -3.917537e-01 #>  [501,] -0.24711400 -0.063971686 -0.17178499  0.5061434 -1.792857e-01 #>  [502,] -0.48787616  0.775724835 -0.40484728 -0.6009622  1.245458e-01 #>  [503,] -0.74159641 -0.562606427  0.30071210  0.2976128  3.901010e-03 #>  [504,] -0.40803642 -0.157239991  0.67830419 -0.5689738  2.898870e-01 #>  [505,] -0.75194703 -0.580747159  0.28803924 -0.7070273  3.265926e-03 #>  [506,] -0.43188464 -0.175611703  0.65403886  0.4212720 -7.711709e-01 #>  [507,] -0.21870096 -0.052219156 -0.14798817 -0.4776600 -1.150889e-01 #>  [508,]  0.41970754 -0.323713580 -0.50746794 -0.6367310  4.056298e-02 #>  [509,] -0.06980618 -0.009189124 -0.03850106 -0.3484961 -1.781945e-03 #>  [510,]  0.35480897 -0.409533000 -0.58304327  0.3378672  1.702208e-02 #>  [511,]  0.28307229 -0.520623449  0.33080033  0.3083661  5.850458e-03 #>  [512,] -0.39399350 -0.147035051 -0.30764334  0.4368764  3.306021e-01 #>  [513,] -0.09665197 -0.014767783 -0.05612216 -0.3819737 -5.636548e-03 #>  [514,]  0.74475366 -0.067566951 -0.17875105  0.5017403 -2.009555e-01 #>  [515,]  0.18474109  0.302771803  0.21023566  0.2623173  9.631944e-04 #>  [516,] -0.14897389 -0.028358689 -0.09332432 -0.4302980 -2.741132e-02 #>  [517,] -0.02775432 -0.002500487 -0.01345093 -0.2651492 -7.658924e-05 #>  [518,]  0.28905806 -0.510715587  0.33807202  0.3109182  6.432835e-03 #>  [519,]  0.72371095 -0.077367929  0.80291035 -0.5092447 -2.632986e-01 #>  [520,] -0.30814100 -0.093633940 -0.22569254  0.4750799 -3.712591e-01 #>  [521,] -0.07706931 -0.010603453 -0.04315928  0.6415604 -2.521756e-03 #>  [522,]  0.41670981 -0.327375139 -0.51090006  0.3621090  3.902943e-02 #>  [523,] -0.80044499  0.330725172  0.22844942  0.2699121  1.314122e-03 #>  [524,]  0.59672467 -0.153730314 -0.31691169 -0.5670000  3.033066e-01 #>  [525,] -0.13315147 -0.023870116 -0.08170571 -0.4172975 -1.807825e-02 #>  [526,]  0.23978102 -0.595453609  0.27789532 -0.7107978  2.823162e-03 #>  [527,] -0.33099485 -0.106429309  0.75317281 -0.5355871  5.459497e-01 #>  [528,] -0.47191494 -0.209575132  0.61220583  0.4053012  1.490936e-01 #>  [529,] -0.27056540 -0.074629683 -0.19205707  0.4936886 -2.455011e-01 #>  [530,] -0.58423178 -0.328531175 -0.51197935 -0.6382556  3.855870e-02 #>  [531,] -0.14545269 -0.027331084 -0.09071226  0.5725006 -2.507764e-02 #>  [532,] -0.71675384  0.479665912  0.33101172 -0.6915595  5.866710e-03 #>  [533,]  0.26832064 -0.545511174 -0.68717077  0.3019843  4.604671e-03 #>  [534,] -0.36061801 -0.124507357  0.72503594 -0.5488324 -5.603195e-01 #>  [535,] -0.78822369  0.353514533 -0.75651783 -0.7240395  1.676265e-03 #>  [536,]  0.14411550  0.225116405 -0.83950125  0.2395901  3.662865e-04 #>  [537,]  0.24930612 -0.578535138  0.28957481 -0.7064610  3.337831e-03 #>  [538,]  0.12764575  0.193698502  0.14051292  0.2293250  2.318561e-04 #>  [539,] -0.03751372 -0.003806364 -0.01892696 -0.2905889 -2.111946e-04 #>  [540,] -0.07521950 -0.010236467 -0.04196489 -0.3559801 -2.315198e-03 #>  [541,] -0.09683535 -0.014809170 -0.05624620  0.6178245 -5.674996e-03 #>  [542,] -0.41906532 -0.165570158  0.66714456  0.4264890  2.603629e-01 #>  [543,]  0.07602414  0.099267713  0.07923870  0.1905201  3.554735e-05 #>  [544,]  0.18328420  0.300006590 -0.79155443  0.2615532  9.332533e-04 #>  [545,] -0.59076130 -0.336625968 -0.51947991 -0.6407857  3.543334e-02 #>  [546,]  0.19166462  0.315875851 -0.78125403  0.2659053  1.116263e-03 #>  [547,] -0.44517595  0.813557832 -0.35969995 -0.5840798  1.992801e-01 #>  [548,]  0.40472048 -0.342307756  0.47531351  0.3574608  3.340697e-02 #>  [549,]  0.39146950 -0.359353984  0.45996791  0.3523033  2.805371e-02 #>  [550,] -0.22353958 -0.054133642 -0.15198048  0.5194839 -1.247437e-01 #>  [551,] -0.49967094  0.764417381 -0.41758150  0.3944373  1.087285e-01 #>  [552,] -0.52061784 -0.256626147 -0.44046777  0.3863105  8.495109e-02 #>  [553,]  0.10564465  0.152396300  0.11408617 -0.7857227  1.154467e-04 #>  [554,] -0.12834392 -0.022571672 -0.07823678  0.5868867 -1.578759e-02 #>  [555,] -0.03751372 -0.003806364 -0.01892696 -0.2905889 -2.111946e-04 #>  [556,] -0.70954754  0.491576337  0.33976415  0.3115099  6.575461e-03 #>  [557,]  0.73585912 -0.071620966 -0.18644769 -0.5029714 -2.262505e-01 #>  [558,] -0.24963585 -0.065075321 -0.17393788  0.5047679 -1.858526e-01 #>  [559,] -0.82372206  0.286675762 -0.80015869  0.2578320  7.995198e-04 #>  [560,] -0.18964264 -0.041444661  0.87545539 -0.4594971 -6.766180e-02 #>  [561,] -0.31402700 -0.096836930 -0.23108742  0.4722907  6.076262e-01 #>  [562,]  0.21090848  0.351905574 -0.75758524  0.2755369  1.648119e-03 #>  [563,] -0.67123777  0.552091914 -0.61405251 -0.6726054  1.173486e-02 #>  [564,] -0.80312637  0.325689932 -0.77484848 -0.7314401  1.243929e-03 #>  [565,] -0.28916351  0.916270160 -0.20852974  0.4842934 -3.053290e-01 #>  [566,] -0.09732964 -0.014920940 -0.05658078 -0.3827180 -5.779599e-03 #>  [567,] -0.11406326 -0.018893007 -0.06810648  0.6000756 -1.025344e-02 #>  [568,] -0.19229390 -0.042377317 -0.12664522  0.5387663 -7.127481e-02 #>  [569,]  0.12779079  0.193973865  0.14068827  0.2294188  2.328413e-04 #>  [570,] -0.58173383 -0.325470553  0.49088258  0.3627114  3.981893e-02 #>  [571,]  0.53376136 -0.204510367  0.61821994  0.4075410 -8.412390e-01 #>  [572,]  0.38792078  0.635983334  0.45583946  0.3509176  2.675829e-02 #>  [573,] -0.23414200 -0.058452327 -0.16081527  0.5133714 -1.477313e-01 #>  [574,]  0.85252563 -0.027919060 -0.09221013 -0.4291124 -2.639844e-02 #>  [575,]  0.06175662  0.075336696  0.06288520  0.1768928  1.718187e-05 #>  [576,]  0.71101181 -0.083641296  0.79162716  0.4843802 -3.047398e-01 #>  [577,] -0.23012110 -0.056794354 -0.15745077  0.5156667 -1.387160e-01 #>  [578,] -0.08351539 -0.011918135 -0.04736301  0.6333389 -3.348910e-03 #>  [579,] -0.19557005  0.956456422 -0.12925168 -0.4633558 -7.592866e-02 #>  [580,] -0.36829485 -0.129480461 -0.28239000 -0.5521733  4.132778e-01 #>  [581,]  0.62769314 -0.132128209 -0.28629262 -0.5539057  3.997557e-01 #>  [582,] -0.04817666 -0.005412725 -0.02516551 -0.3130104 -4.946044e-04 #>  [583,]  0.15990351  0.255367778  0.17977170  0.2488045  5.459597e-04 #>  [584,]  0.12170692  0.182451593  0.13334468  0.2254302  1.941917e-04 #>  [585,]  0.30871340 -0.478981568  0.36185557 -0.6808351  8.712525e-03 #>  [586,] -0.05930492 -0.007272425 -0.03192125 -0.3325579 -1.010863e-03 #>  [587,] -0.62263951 -0.378137548  0.44350843  0.3467810  2.321592e-02 #>  [588,] -0.32565525 -0.103352426 -0.24184416  0.4668670  5.654223e-01 #>  [589,]  0.44469521 -0.294295827 -0.47910011 -0.6270816  5.563460e-02 #>  [590,]  0.06191204  0.075589701  0.06306141  0.1770517  1.733248e-05 #>  [591,] -0.17257269 -0.035675825  0.88879118 -0.4478699 -4.750009e-02 #>  [592,] -0.24481454 -0.062974129  0.83017231 -0.4925942 -1.734194e-01 #>  [593,] -0.21710990 -0.051597266  0.85331913 -0.4767112 -1.120275e-01 #>  [594,] -0.42118689  0.832794916 -0.33501446  0.4256216  2.549369e-01 #>  [595,] -0.06529436 -0.008346828 -0.03565093  0.6581014 -1.411489e-03 #>  [596,] -0.08903576 -0.013087934 -0.05101309 -0.3733121 -4.203739e-03 #>  [597,]  0.26434333 -0.552332978  0.30797274  0.3002394  4.310510e-03 #>  [598,]  0.39042467 -0.360722500  0.45875320 -0.6481045  2.766655e-02 #>  [599,] -0.10852837 -0.017538769 -0.06425205 -0.3944657 -8.559075e-03 #>  [600,] -0.57635378  0.681053785  0.49703223 -0.6352078  4.266087e-02 #>  [601,] -0.05646677 -0.006781031 -0.03017617  0.6721317 -8.533296e-04 #>  [602,]  0.72661083  0.924026250 -0.19453577 -0.5077634 -2.542080e-01 #>  [603,]  0.38319050  0.629703716 -0.54967563  0.3490672  2.511545e-02 #>  [604,]  0.53065759 -0.207269289 -0.38506523  0.4063154  1.534117e-01 #>  [605,]  0.48513791 -0.250719060  0.56585492  0.3885391  9.097360e-02 #>  [606,]  0.81276906 -0.040604910 -0.12264061 -0.4579021 -6.449200e-02 #>  [607,]  0.09854806  0.139344180  0.10564823  0.2090142  8.970784e-05 #>  [608,]  0.93589660 -0.008129187 -0.03490433 -0.3400970 -1.323944e-03 #>  [609,]  0.68524434 -0.097237850 -0.23175763 -0.5280525 -3.950024e-01 #>  [610,] -0.24340895 -0.062368451 -0.16863396  0.5081813 -1.698910e-01 #>  [611,] -0.48846506 -0.224830671 -0.40548044  0.3988076  1.237111e-01 #>  [612,]  0.56556580 -0.177655754 -0.34858472  0.4202411  2.229145e-01 #>  [613,]  0.07602414  0.099267713  0.07923870  0.1905201  3.554735e-05 #>  [614,] -0.10185962 -0.015960155 -0.05966301 -0.3875916 -6.806578e-03 #>  [615,]  0.50443259 -0.231605087  0.58686149  0.3960355  1.140199e-01 #>  [616,] -0.02775432 -0.002500487 -0.01345093 -0.2651492 -7.658924e-05 #>  [617,] -0.43861039 -0.181038082  0.64710568  0.4185570  2.134804e-01 #>  [618,]  0.38256869 -0.371127258 -0.55040163 -0.6511763  2.490639e-02 #>  [619,] -0.13752111 -0.025076642 -0.08488370 -0.4210010 -2.036927e-02 #>  [620,] -0.71262155  0.486515564  0.33603284  0.3102041  6.264589e-03 #>  [621,] -0.55334849 -0.292074703 -0.47689775  0.3736730  5.700558e-02 #>  [622,]  0.13699376  0.211499826  0.15183920  0.2352414  3.022899e-04 #>  [623,] -0.06106904 -0.007583637 -0.03301324 -0.3353839 -1.118852e-03 #>  [624,] -0.06055308 -0.007492160 -0.03269329 -0.3345641 -1.086439e-03 #>  [625,] -0.10307198 -0.016242827 -0.06049275 -0.3888670 -7.103135e-03 #>  [626,]  0.54978984 -0.190658370  0.63505678 -0.5860931  1.889073e-01 #>  [627,] -0.15438263 -0.029969373  0.90263448 -0.4345009 -3.130854e-02 #>  [628,]  0.23794202 -0.598747336  0.27563848  0.2883559  2.731899e-03 #>  [629,] -0.48366013 -0.220325749 -0.40032264  0.4006876  1.306656e-01 #>  [630,]  0.09804764  0.138430244  0.10505509  0.2086342  8.807314e-05 #>  [631,] -0.18958945 -0.041426052 -0.12450255  0.5405379 -6.759070e-02 #>  [632,]  0.10950735  0.159565619  0.11869846  0.2170499  1.316148e-04 #>  [633,] -0.29665791 -0.087564961 -0.21526510 -0.5193872  6.691105e-01 #>  [634,] -0.09736073 -0.014927981 -0.05660183  0.6172479 -5.786227e-03 #>  [635,]  0.19984507 -0.668730856  0.22880618  0.2700578  1.321905e-03 #>  [636,] -0.07888038 -0.010967211 -0.04433387  0.6391972 -2.736847e-03 #>  [637,] -0.07808687 -0.010807290 -0.04381860  0.6402273 -2.641006e-03 #>  [638,] -0.17411195 -0.036179425 -0.11239781 -0.4489522 -4.910866e-02 #>  [639,]  0.54631264 -0.193607726  0.63142262 -0.5874797  1.819995e-01 #>  [640,] -0.19899117 -0.044777808 -0.13198613 -0.4655447 -8.101641e-02 #>  [641,]  0.11112560  0.162581299  0.12063454  0.2181934  1.388766e-04 #>  [642,] -0.10824672 -0.017470923 -0.06405701 -0.3941821 -8.478882e-03 #>  [643,] -0.39594944 -0.148429929  0.69041000 -0.5639437  3.247281e-01 #>  [644,]  0.65165824 -0.116804589 -0.26320329  0.4565849 -5.169117e-01 #>  [645,] -0.12214727 -0.020942715  0.92619129 -0.4075378 -1.316547e-02 #>  [646,]  0.78481651 -0.050849328  0.85489836  0.5244440 -1.083954e-01 #>  [647,] -0.29777891 -0.088147090 -0.21627735  0.4800671 -3.347718e-01 #>  [648,] -0.86768874  0.202570327  0.14615960  0.2323090  2.652039e-04 #>  [649,]  0.12598019  0.190538574  0.13850027  0.2282440  2.207712e-04 #>  [650,] -0.35432350 -0.120519859 -0.26891621 -0.5460667  4.617797e-01 #>  [651,]  0.12192056  0.182855151  0.13360214 -0.7744277  1.954590e-04 #>  [652,]  0.52805407 -0.209603012  0.61217293 -0.5947110  1.490422e-01 #>  [653,] -0.05581592 -0.006669973 -0.02977807  0.6732333 -8.198866e-04 #>  [654,]  0.61108805 -0.143450632 -0.30260207 -0.5609848  3.461579e-01 #>  [655,] -0.55382484 -0.292614457 -0.47743377 -0.6265107  5.666897e-02 #>  [656,] -0.60539051 -0.355262809  0.46361431  0.3535277  2.924684e-02 #>  [657,] -0.07417705 -0.010031687 -0.04129418 -0.3545728 -2.204438e-03 #>  [658,]  0.39825766  0.649449956  0.46784305 -0.6450516  3.069049e-02 #>  [659,]  0.19008432 -0.687109456  0.21680306 -0.7349075  1.079707e-03 #>  [660,] -0.16708649 -0.033907344 -0.10699313 -0.4439533 -4.208236e-02 #>  [661,] -0.12686572 -0.022178523 -0.07717603 -0.4118025 -1.512932e-02 #>  [662,]  0.13399832  0.205784930  0.14820454 -0.7666275  2.781335e-04 #>  [663,] -0.54115155 -0.278490046 -0.46322931  0.3783782  6.626473e-02 #>  [664,] -0.54805847 -0.286127277  0.52904380  0.3757136  6.086727e-02 #>  [665,] -0.12244214 -0.021019090 -0.07401830 -0.4078080 -1.328224e-02 #>  [666,] -0.10304588 -0.016236720  0.93952514 -0.3888397 -7.096649e-03 #>  [667,] -0.03751372 -0.003806364 -0.01892696 -0.2905889 -2.111946e-04 #>  [668,]  0.59703695 -0.153501912 -0.31659860  0.4331298  3.042008e-01 #>  [669,]  0.04739788  0.052839993  0.04682479  0.1609032  6.905543e-06 #>  [670,]  0.07602414  0.099267713  0.07923870  0.1905201  3.554735e-05 #>  [671,]  0.23469680 -0.604580557  0.27165459 -0.7131449  2.576862e-03 #>  [672,]  0.11714518  0.173855524  0.12785489  0.2223595  1.686027e-04 #>  [673,]  0.67841712 -0.101041949 -0.23806214  0.4687538  5.802518e-01 #>  [674,] -0.09427133 -0.014234522 -0.05451623 -0.3793259 -5.154846e-03 #>  [675,] -0.25531085 -0.067595894 -0.17880658 -0.4982942 -2.011331e-01 #>  [676,] -0.13502024 -0.024383037 -0.08306195  0.5811074 -1.903293e-02 #>  [677,] -0.29295347 -0.085657012  0.78807110  0.4824250 -3.181660e-01 #>  [678,]  0.04739788  0.052839993  0.04682479  0.1609032  6.905543e-06 #>  [679,] -0.39227623 -0.145817363  0.69406293 -0.5624022  3.358118e-01 #>  [680,]  0.22427704  0.376516623 -0.74114658  0.2819692  2.127672e-03 #>  [681,]  0.43320489 -0.307580406 -0.49209067  0.3684846  4.816731e-02 #>  [682,] -0.14647616 -0.027628068 -0.09146994 -0.4283181 -2.573994e-02 #>  [683,]  0.08343576  0.112189212  0.08785848  0.1969511  4.940929e-05 #>  [684,] -0.56015483 -0.299853268 -0.48457199 -0.6289527  5.236346e-02 #>  [685,] -0.14585997 -0.027449098 -0.09101362  0.5721743 -2.533964e-02 #>  [686,]  0.58852546 -0.159806633  0.67483688  0.4296067  2.804475e-01 #>  [687,] -0.05251483 -0.006116147 -0.02777109  0.6789826 -6.647103e-04 #>  [688,]  0.21365063  0.356984408  0.24578748  0.2768723  1.738403e-03 #>  [689,]  0.27078645  0.458694676  0.31583785  0.3030607  4.795498e-03 #>  [690,]  0.75211974 -0.064305961  0.82756155  0.5057245 -1.812663e-01 #>  [691,]  0.58709749 -0.160880652 -0.32660630 -0.5709815  2.765894e-01 #>  [692,]  0.09935453  0.140818973  0.10660467  0.2096240  9.239033e-05 #>  [693,] -0.06901085 -0.009038614 -0.03799619  0.6526418 -1.712000e-03 #>  [694,] -0.12525228 -0.021752671 -0.07602139 -0.4103582 -1.443462e-02 #>  [695,]  0.35053375 -0.415676252  0.41189116  0.3361628  1.603081e-02 #>  [696,] -0.17351927 -0.035985133 -0.11193968 -0.4485363 -4.848461e-02 #>  [697,]  0.06191204  0.075589701  0.06306141  0.1770517  1.733248e-05 #>  [698,] -0.45585201 -0.195459251 -0.37084493 -0.5883412  1.778037e-01 #>  [699,]  0.05180192  0.059543099  0.05170140  0.1661112  9.363911e-06 #>  [700,]  0.29475813  0.498614609  0.34498467 -0.6866699  7.033257e-03 #>  [701,]  0.92225060 -0.010739534 -0.04359976 -0.3593322 -2.601006e-03 #>  [702,] -0.14973759 -0.028583743 -0.09389281  0.5691016 -2.793824e-02 #>  [703,] -0.78334725  0.362527126 -0.75052043 -0.7216754  1.841869e-03 #>  [704,]  0.37585715  0.619822212 -0.55825245  0.3461903  2.274755e-02 #>  [705,] -0.23078382 -0.057065918 -0.15800413 -0.4847135 -1.401768e-01 #>  [706,] -0.10190267 -0.015970159 -0.05969244 -0.3876371 -6.816947e-03 #>  [707,]  0.11666326  0.172949882  0.12727581 -0.7779691  1.660586e-04 #>  [708,] -0.27556174 -0.077016932  0.80355168  0.4911259 -2.610048e-01 #>  [709,]  0.06175662  0.075336696  0.06288520  0.1768928  1.718187e-05 #>  [710,]  0.06662437  0.083346013  0.06842556  0.1817525  2.237520e-05 #>  [711,] -0.14857078 -0.028240213 -0.09302454 -0.4299802 -2.713622e-02 #>  [712,] -0.16633639 -0.033668747 -0.10641944 -0.4434104 -4.137896e-02 #>  [713,] -0.12376521  0.978636810 -0.07496014 -0.4090143 -1.381583e-02 #>  [714,] -0.70415582 -0.499619393  0.34630037  0.3137877  7.152993e-03 #>  [715,] -0.06627273 -0.008527090 -0.03626606 -0.3433592 -1.486512e-03 #>  [716,] -0.05646677 -0.006781031 -0.03017617  0.6721317 -8.533296e-04 #>  [717,]  0.05180192  0.059543099  0.05170140  0.1661112  9.363911e-06 #>  [718,] -0.65340489  0.578610051  0.40721575  0.3345878  1.516342e-02 #>  [719,]  0.17388926 -0.717880096  0.19690977 -0.7434551  7.576144e-04 #>  [720,] -0.24321406 -0.062284713 -0.16846860 -0.4917109  8.305948e-01 #>  [721,]  0.59124949  0.842229152 -0.32241510 -0.5692690  2.879090e-01 #>  [722,]  0.30257943  0.511248333  0.35444967  0.3166120  7.935811e-03 #>  [723,] -0.04866654 -0.005490751 -0.02545787 -0.3139424 -5.120264e-04 #>  [724,] -0.41580554 -0.163078651 -0.32954581 -0.5721749  2.688598e-01 #>  [725,]  0.51774979 -0.219015718 -0.39881273 -0.5987599  1.327692e-01 #>  [726,]  0.17974210 -0.706726556  0.20409461 -0.7403183  8.635698e-04 #>  [727,]  0.44642253 -0.292334076 -0.47715539 -0.6264153  5.684355e-02 #>  [728,]  0.06662437  0.083346013  0.06842556  0.1817525  2.237520e-05 #>  [729,] -0.52379246 -0.259925316  0.55603401  0.3850825  8.178396e-02 #>  [730,] -0.06023833 -0.007436540 -0.03249834 -0.3340613 -1.067005e-03 #>  [731,] -0.37042141 -0.130879695 -0.28445672  0.4469073 -5.939147e-01 #>  [732,] -0.04123596 -0.004346744 -0.02107659 -0.2989274 -2.910554e-04 #>  [733,]  0.32531174 -0.453161395  0.38181424  0.3259898  1.115708e-02 #>  [734,]  0.13867801  0.214716731 -0.84611510  0.2362816  3.165695e-04 #>  [735,]  0.55967548 -0.182438722 -0.35466756  0.4178673  2.096989e-01 #>  [736,] -0.11692916 -0.019609905 -0.07011823 -0.4026701 -1.122370e-02 #>  [737,]  0.15419387  0.244425383 -0.82720882  0.2455352  4.744241e-04 #>  [738,] -0.70008274  0.506970191  0.35123072  0.3154984  7.617938e-03 #>  [739,]  0.69991980 -0.089349094 -0.21835924  0.4789508 -3.427848e-01 #>  [740,]  0.20586423 -0.657475498  0.23621006  0.2730573  1.492081e-03 #>  [741,]  0.80354221 -0.043862238 -0.12996000 -0.4639265 -7.722630e-02 #>  [742,]  0.20568662  0.342193318  0.23599159 -0.7270305  1.486816e-03 #>  [743,] -0.12035491 -0.020480902 -0.07253709 -0.4058843 -1.247215e-02 #>  [744,]  0.33334876  0.559013543  0.39143271 -0.6707449  1.254366e-02 #>  [745,] -0.71386725  0.484456311  0.33451982 -0.6903265  6.142271e-03 #>  [746,] -0.03740627 -0.003791100 -0.01886538 -0.2903387 -2.091547e-04 #>  [747,] -0.47833180 -0.215402983  0.60537505  0.4027773 -8.612311e-01 #>  [748,] -0.34766479 -0.116388620 -0.26255885  0.4568864  4.855158e-01 #>  [749,] -0.72539562  0.465170882 -0.67950734  0.3047195  5.104278e-03 #>  [750,]  0.83804727 -0.032289672 -0.10307978 -0.4402006 -3.744155e-02 #>  [751,] -0.48522590 -0.221786876 -0.40200134 -0.5999254  1.283632e-01 #>  [752,]  0.09392821  0.130942028  0.10018235  0.2054590  7.545274e-05 #>  [753,] -0.52249742 -0.258575928  0.55746199  0.3855834  8.306296e-02 #>  [754,] -0.79711131  0.336968467  0.23254992  0.2715802  1.405854e-03 #>  [755,] -0.52879838 -0.265187461  0.55050223  0.3831476  7.700425e-02 #>  [756,] -0.20479351 -0.046909587 -0.13665317 -0.4691964 -9.019132e-02 #>  [757,] -0.20420266 -0.046690285 -0.13617625 -0.4688280 -8.922514e-02 #>  [758,] -0.18658832 -0.040382532 -0.12213436  0.5425255 -6.366588e-02 #>  [759,] -0.03065623 -0.002871292 -0.01505334 -0.2733586 -1.069245e-04 #>  [760,]  0.23289149  0.392163089  0.26943768  0.2860161  2.493843e-03 #>  [761,] -0.13765603 -0.025114295 -0.08498220  0.5788861 -2.044332e-02 #>  [762,] -0.02775432 -0.002500487 -0.01345093 -0.2651492 -7.658924e-05 #>  [763,]  0.09717038  0.136830234  0.10401591  0.2079652  8.526165e-05 #>  [764,] -0.38048288 -0.137629214  0.70570844 -0.5574091  3.728614e-01 #>  [765,] -0.10726284 -0.017234735 -0.06337652  0.6068129 -8.203156e-03 #>  [766,]  0.58191127 -0.164821125 -0.33186293  0.4268889  2.628882e-01 #>  [767,] -0.33292284 -0.107553631 -0.24863314 -0.5364679  5.389203e-01 #>  [768,]  0.27326617  0.462905908  0.31886161  0.3041391  4.994169e-03 #>  [769,]  0.22726334  0.381960452 -0.73747645  0.2833803  2.249173e-03 #>  [770,] -0.03782264 -0.003850355 -0.01910416 -0.2913051 -2.171388e-04 #>  [771,]  0.52798168 -0.209668156 -0.38790394  0.4052605  1.489223e-01 #>  [772,]  0.23086482 -0.611502080  0.26694839  0.2850705  2.403310e-03 #>  [773,] -0.56228703  0.697680500  0.51301714  0.3702246  5.098132e-02 #>  [774,] -0.03065623 -0.002871292 -0.01505334 -0.2733586 -1.069245e-04 #>  [775,] -0.36691232 -0.128575840 -0.28104862 -0.5515741  4.179833e-01 #>  [776,]  0.20950962 -0.650691062  0.24069413 -0.7251477  1.603567e-03 #>  [777,]  0.10480212  0.150838289  0.11308190 -0.7863358  1.121302e-04 #>  [778,] -0.02775432 -0.002500487 -0.01345093 -0.2651492 -7.658924e-05 #>  [779,] -0.04817666 -0.005412725 -0.02516551 -0.3130104 -4.946044e-04 #>  [780,]  0.36704819 -0.392283639  0.43140296  0.3427198  2.016959e-02 #>  [781,] -0.14837153 -0.028181731 -0.09287643 -0.4298229 -2.700100e-02 #>  [782,]  0.39332980 -0.356926248 -0.53787102  0.3530289  2.875516e-02 #>  [783,] -0.62491923  0.618765627 -0.55916235  0.3458851  2.250901e-02 #>  [784,] -0.61884930 -0.373026994  0.44794193 -0.6517320  2.443551e-02 #>  [785,] -0.50477472  0.759404729  0.57687385  0.3924527  1.024491e-01 #>  [786,]  0.51719593 -0.219529694 -0.39940567  0.4010230  1.319394e-01 #>  [787,] -0.25129089 -0.065805105 -0.17535435  0.5038701 -1.902375e-01 #>  [788,]  0.07691635  0.100807207  0.08027223  0.1913150  3.704081e-05 #>  [789,] -0.18224795 -0.038895728 -0.11872722 -0.4545584 -5.828624e-02 #>  [790,] -0.47126490 -0.208990839  0.61289591  0.4055573 -8.498251e-01 #>  [791,] -0.22504068 -0.054734722 -0.15322409  0.5186065 -1.278449e-01 #>  [792,]  0.09414344  0.131331652  0.10043649  0.2056270  7.607624e-05 #>  [793,]  0.25630955  0.433747640  0.29815025  0.2966807  3.764742e-03 #>  [794,] -0.15746694 -0.030905416 -0.09968555 -0.4368479 -3.370868e-02 #>  [795,]  0.32835829 -0.448521046 -0.61453610  0.3272304  1.166589e-02 #>  [796,]  0.18081259  0.295309763  0.20540935  0.2602494  8.841727e-04 #>  [797,]  0.11096260  0.162277241  0.12043944  0.2180787  1.381317e-04 #>  [798,]  0.49623859 -0.239594245 -0.42202368  0.3928464  1.036698e-01 #>  [799,] -0.27779776 -0.078098865 -0.19842169 -0.5100115  7.319139e-01 #>  [800,] -0.20726229 -0.047831411  0.86134996 -0.4707278 -9.430786e-02 #>  [801,]  0.06598288  0.082280702  0.06769297  0.1811256  2.163251e-05 #>  [802,] -0.09922529 -0.015352552 -0.05786709  0.6152213 -6.194144e-03 #>  [803,]  0.08119255  0.108247428  0.08524160  0.1950448  4.485328e-05 #>  [804,] -0.40950257 -0.158331193 -0.32317313 -0.5695797  2.858357e-01 #>  [805,]  0.66338068 -0.109729236  0.74789444 -0.5381488 -4.745412e-01 #>  [806,] -0.66917311 -0.444783595  0.38841797 -0.6717670  1.209306e-02 #>  [807,]  0.17309957  0.280612683  0.19594085 -0.7438827  7.441536e-04 #>  [808,]  0.45714456 -0.280360707  0.53486777  0.3777208  6.489452e-02 #>  [809,] -0.06529436 -0.008346828 -0.03565093  0.6581014 -1.411489e-03 #>  [810,]  0.34036645  0.569468423  0.39980540  0.3320874  1.387666e-02 #>  [811,] -0.45616107 -0.195724578 -0.37116901  0.4115358  1.772112e-01 #>  [812,]  0.37467169 -0.381791898 -0.55964192  0.3457243  2.238423e-02 #>  [813,] -0.19378539 -0.042906372 -0.12783036 -0.4622030 -7.336732e-02 #>  [814,] -0.07900454 -0.010992309 -0.04441458 -0.3609633 -2.752071e-03 #>  [815,] -0.28475535 -0.081519627 -0.20459407 -0.5135145  7.093507e-01 #>  [816,] -0.20203332 -0.045889429 -0.13442845 -0.4674686 -8.574008e-02 #>  [817,] -0.31061891  0.905025350 -0.22795958  0.4739019 -3.801201e-01 #>  [818,] -0.14816176 -0.028120219 -0.09272055 -0.4296571 -2.685920e-02 #>  [819,]  0.68218951 -0.098929313  0.76542700  0.4705136 -4.060516e-01 #>  [820,] -0.25507036 -0.067488032 -0.17859958  0.5018346 -2.004716e-01 #>  [821,] -0.81099949 -0.689158870  0.21547070  0.2645329  1.055199e-03 #>  [822,] -0.81367068  0.305783372  0.21218743  0.2631466  9.967114e-04 #>  [823,] -0.31023397 -0.094765645  0.77239299  0.4740846 -3.787407e-01 #>  [824,]  0.56510215 -0.178029176  0.65093755  0.4200539  2.218516e-01 #>  [825,]  0.43287511 -0.307967750 -0.49246488 -0.6316427  4.796709e-02 #>  [826,]  0.06175662  0.075336696  0.06288520  0.1768928  1.718187e-05 #>  [827,] -0.53777901 -0.274813151 -0.45946916 -0.6203203  6.905399e-02 #>  [828,] -0.06627273 -0.008527090 -0.03626606 -0.3433592 -1.486512e-03 #>  [829,]  0.45425043 -0.283558173 -0.46836930  0.3766042  6.262568e-02 #>  [830,] -0.34313574 -0.113629080  0.74174135  0.4589119 -4.981741e-01 #>  [831,]  0.09789848  0.138157988  0.10487834 -0.7914793  8.759024e-05 #>  [832,]  0.24035999 -0.594418439  0.27860572 -0.7105320  2.852417e-03 #>  [833,] -0.10185962 -0.015960155 -0.05966301 -0.3875916 -6.806578e-03 #>  [834,]  0.75016884 -0.065161215 -0.17410489  0.5046617 -1.863670e-01 #>  [835,] -0.15733452 -0.030864964 -0.09958571  0.5632521 -3.360290e-02 #>  [836,] -0.62448035 -0.380636850  0.44135206 -0.6539423  2.264358e-02 #>  [837,] -0.50095768 -0.236839514  0.58102254  0.3939366  1.071143e-01 #>  [838,]  0.24709843  0.417565062 -0.71313065  0.2925405  3.212034e-03 #>  [839,]  0.46069148  0.723523536 -0.46117341  0.3790894  6.777615e-02 #>  [840,] -0.17809543 -0.037497889 -0.11548739  0.5482794 -5.345789e-02 #>  [841,] -0.15339180 -0.029671381 -0.09662260  0.5662606 -3.056537e-02 #>  [842,] -0.69733483  0.511385743  0.35455329  0.3166478  7.946238e-03 #>  [843,]  0.72131547 -0.078530280  0.80079431  0.4895390 -2.709181e-01 #>  [844,] -0.41395329 -0.161673978  0.67233058  0.4285861 -7.262260e-01 #>  [845,]  0.13216577  0.202293258  0.14598333  0.2322169  2.641110e-04 #>  [846,]  0.07602414  0.099267713  0.07923870  0.1905201  3.554735e-05 #>  [847,] -0.17715589 -0.037184940 -0.11475706 -0.4510718 -5.240752e-02 #>  [848,]  0.04739788  0.052839993  0.04682479  0.1609032  6.905543e-06 #>  [849,]  0.67330509 -0.103947279  0.75718776 -0.5336126 -4.383680e-01 #>  [850,]  0.36596384 -0.393791688  0.43012647  0.3422914  1.987110e-02 #>  [851,]  0.43420148 -0.306411925  0.50903974  0.3688693  4.877699e-02 #>  [852,]  0.69859373 -0.090045992 -0.21956124  0.4783098 -3.474274e-01 #>  [853,]  0.08119255  0.108247428  0.08524160  0.1950448  4.485328e-05 #>  [854,] -0.11168696 -0.018306698 -0.06644664 -0.3976067 -9.497849e-03 #>  [855,]  0.34069675 -0.430043552  0.40019887  0.3322203  1.394238e-02 #>  [856,]  0.61453716 -0.141049935 -0.29919365  0.4404741  3.569526e-01 #>  [857,]  0.82223918 -0.037386293 -0.11522717 -0.4514898 -5.308205e-02 #>  [858,]  0.13164191  0.201295821  0.14534871 -0.7681152  2.602050e-04 #>  [859,] -0.04752681 -0.005309781 -0.02477842 -0.3117624 -4.721591e-04 #>  [860,] -0.31106613 -0.095217818 -0.22836939  0.4736899  6.182761e-01 #>  [861,] -0.18299422 -0.039149487 -0.11931153  0.5449366 -5.918665e-02 #>  [862,] -0.56724769 -0.308112074  0.50739575  0.3683099  4.789272e-02 #>  [863,]  0.38162994 -0.372384191  0.44850190  0.3484559  2.459375e-02 #>  [864,] -0.23870724 -0.060364895 -0.16465583  0.5107976 -1.584077e-01 #>  [865,]  0.48632305 -0.249514595  0.56715362  0.3889983  9.225988e-02 #>  [866,] -0.31381703  0.903278417 -0.23089439  0.4723896 -3.916169e-01 #>  [867,] -0.64778280 -0.413249932  0.41388700  0.3368345  1.641483e-02 #>  [868,]  0.48285586 -0.253049674  0.56335114  0.3876552  8.854171e-02 #>  [869,] -0.61256010  0.635348317  0.45527942  0.3507296  2.658697e-02 #>  [870,] -0.19153772 -0.042110293 -0.12604530  0.5392599 -7.023048e-02 #>  [871,] -0.41395739 -0.161677083  0.67232642 -0.5714155  2.737630e-01 #>  [872,] -0.14483872 -0.027153596 -0.09025835 -0.4270061 -2.468654e-02 #>  [873,] -0.11761613 -0.019783340 -0.07060206 -0.4033205 -1.146617e-02 #>  [874,] -0.37183684 -0.131816269 -0.28583464  0.4462968  4.013294e-01 #>  [875,]  0.06678383  0.083611272  0.06860778  0.1819077  2.256269e-05 #>  [876,] -0.17293550 -0.035794230 -0.11148882  0.5518744 -4.787567e-02 #>  [877,] -0.29581988 -0.087131229 -0.21450919  0.4810216 -3.279968e-01 #>  [878,]  0.34737818 -0.420249828 -0.59185404  0.3349013  1.533247e-02 #>  [879,] -0.35577144 -0.121429993 -0.27030413 -0.5467051 -5.433358e-01 #>  [880,]  0.15051270  0.237370048  0.16829667  0.2433905  4.323692e-04 #>  [881,]  0.10946480  0.159486423  0.11864759  0.2170197  1.314278e-04 #>  [882,]  0.18494965 -0.696832552  0.21049194  0.2624264  9.675432e-04 #>  [883,] -0.72813279  0.460532371  0.31715596  0.3035312  4.881240e-03 #>  [884,] -0.22339841 -0.054077288  0.84813635 -0.4804334 -1.244546e-01 #>  [885,] -0.57396499 -0.316078798  0.49975642  0.3657154  4.398066e-02 #>  [886,] -0.10726869 -0.017236136 -0.06338057  0.6068070 -8.204776e-03 #>  [887,] -0.17302147 -0.035822316 -0.11155520  0.5518138 -4.796500e-02 #>  [888,] -0.38299549 -0.139348431 -0.29676205 -0.5584787 -6.352120e-01 #>  [889,]  0.12598019  0.190538574  0.13850027  0.2282440  2.207712e-04 #>  [890,]  0.39474431 -0.355087878 -0.53622927  0.3535802  2.929908e-02 #>  [891,]  0.15833371  0.252359775  0.17785143  0.2479124  5.254971e-04 #>  [892,]  0.16032058  0.256166862 -0.81971799  0.2490407  5.515007e-04 #>  [893,]  0.58104197 -0.165487756 -0.33274635  0.4265329 -7.393605e-01 #>  [894,] -0.06160858 -0.007679697 -0.03334832 -0.3362353 -1.153494e-03 #>  [895,] -0.69899538 -0.491279643 -0.64745416  0.3159536  7.746410e-03 #>  [896,]  0.08262468  0.110761014  0.08691152  0.1962657  4.772407e-05 #>  [897,]  0.45302449  0.715079746 -0.46974236 -0.6238687  6.168640e-02 #>  [898,] -0.26410685 -0.071605213 -0.18641810  0.4970464 -2.261507e-01 #>  [899,] -0.34719670 -0.116101537 -0.26211352  0.4570951 -5.128040e-01 #>  [900,] -0.10899414 -0.017651190 -0.06457482 -0.3949333 -8.692934e-03 #>  [901,]  0.48162444 -0.254313532  0.56199841 -0.6128216  8.725365e-02 #>  [902,]  0.61685259 -0.139452815 -0.29691161 -0.5585433  3.643029e-01 #>  [903,]  0.18752526  0.308048977 -0.78634269  0.2637686  1.022565e-03 #>  [904,]  0.26460094  0.448110270 -0.69171257  0.3003527  4.329065e-03 #>  [905,] -0.17595361 -0.036786256 -0.11382395  0.5497622 -5.108565e-02 #>  [906,]  0.21917298 -0.632834533  0.25257861 -0.7204638  1.932597e-03 #>  [907,]  0.21081300 -0.648271544  0.24229731  0.2754902  1.645046e-03 #>  [908,]  0.09935453  0.140818973  0.10660467  0.2096240  9.239033e-05 #>  [909,] -0.33191568  0.893034593  0.75231072 -0.5360082 -4.574081e-01 #>  [910,]  0.22600538 -0.620330211  0.26097764 -0.7172130  2.197309e-03 #>  [911,]  0.06113157  0.074321057  0.06217698  0.1762508  1.658578e-05 #>  [912,]  0.70387531 -0.087288846 -0.21478406  0.4808728 -3.290480e-01 #>  [913,] -0.54458993  0.717726051 -0.46707151  0.3770516  6.352603e-02 #>  [914,]  0.46666337 -0.270021768  0.54547086 -0.6186054  7.288934e-02 #>  [915,] -0.35146149 -0.118733318 -0.26617863  0.4551991 -5.280584e-01 #>  [916,]  0.43356690 -0.307155597 -0.49167997 -0.6313756  4.838797e-02 #>  [917,]  0.11513602  0.170083173  0.12544182  0.2209839  1.581894e-04 #>  [918,] -0.78963054  0.350905457  0.24175175 -0.7247266  1.630833e-03 #>  [919,] -0.15673020 -0.030680663 -0.09913035  0.5637095 -3.312328e-02 #>  [920,] -0.05188317 -0.006011989 -0.02738942  0.6801152 -6.376473e-04 #>  [921,]  0.78004149 -0.052713359 -0.14902337 -0.4784065 -1.175482e-01 #>  [922,] -0.31599192 -0.097920294 -0.23289589  0.4713663 -3.994686e-01 #>  [923,] -0.05238049 -0.006093946 -0.02768986 -0.3207774 -6.588864e-04 #>  [924,]  0.06175662  0.075336696  0.06288520  0.1768928  1.718187e-05 #>  [925,] -0.04752681 -0.005309781 -0.02477842 -0.3117624 -4.721591e-04 #>  [926,] -0.23125093 -0.057257728 -0.15839444 -0.4849810 -1.412124e-01 #>  [927,]  0.15117365  0.238636704  0.16910327  0.2437778  4.396954e-04 #>  [928,] -0.07043250 -0.009308261 -0.03889939 -0.3493850 -1.838484e-03 #>  [929,] -0.78824667  0.353471947 -0.75654610  0.2759493  1.675514e-03 #>  [930,] -0.36607241 -0.128028214 -0.28023457 -0.5512096  4.208530e-01 #>  [931,]  0.26545750  0.449582698 -0.69066637  0.3007293  4.391252e-03 #>  [932,]  0.07163375  0.091761090  0.07417046 -0.8134820  2.883664e-05 #>  [933,] -0.19557002 -0.043543570 -0.12925166 -0.4633558 -7.592862e-02 #>  [934,] -0.17336668 -0.035935188 -0.11182180 -0.4484291 -4.832489e-02 #>  [935,] -0.03740627 -0.003791100 -0.01886538 -0.2903387 -2.091547e-04 #>  [936,] -0.11587773 -0.019345647 -0.06937891  0.5983311 -1.086008e-02 #>  [937,] -0.40259883 -0.153235795 -0.31623355 -0.5667187  3.052459e-01 #>  [938,]  0.44574365 -0.293103991  0.52208055 -0.6266771  5.636560e-02 #>  [939,] -0.78274903  0.363629340  0.25021522 -0.7213871  1.863080e-03 #>  [940,] -0.46406801 -0.202595819 -0.37948734 -0.5916006  1.625940e-01 #>  [941,] -0.66961401  0.554550362  0.38789057  0.3280541  1.201577e-02 #>  [942,]  0.47507277  0.738888262  0.55478170  0.3846437  8.067777e-02 #>  [943,] -0.25038470 -0.065404986 -0.17457844 -0.4956388 -1.878293e-01 #>  [944,] -0.77831068  0.371782891  0.25567241  0.2807391  2.026832e-03 #>  [945,]  0.46591061 -0.270829527 -0.45536518 -0.6188960  7.222626e-02 #>  [946,]  0.53749951 -0.201220829 -0.37783409 -0.5909800 -8.345904e-01 #>  [947,] -0.07902561 -0.010996569 -0.04442827  0.6390095 -2.754661e-03 #>  [948,] -0.32624795 -0.103691298 -0.24239593  0.4665935  5.632616e-01 #>  [949,]  0.37762757 -0.377775877 -0.55617888  0.3468858  2.330003e-02 #>  [950,]  0.18605434  0.305262182  0.21184949  0.2630033  9.908420e-04 #>  [951,]  0.77085811 -0.056394325 -0.15663398 -0.4837701 -1.365756e-01 #>  [952,] -0.16201750 -0.032309858 -0.10312896 -0.4402485 -3.749761e-02 #>  [953,]  0.42258608 -0.320224556 -0.50417800  0.3643823  4.208674e-02 #>  [954,] -0.75240070 -0.581549009  0.28748325  0.2927674  3.240219e-03 #>  [955,] -0.48348530  0.779836986 -0.40013532 -0.5992439  1.309249e-01 #>  [956,] -0.37207403 -0.131973631 -0.28606573  0.4461946  4.005349e-01 #>  [957,] -0.13383622 -0.024057524 -0.08220215 -0.4178840 -1.842377e-02 #>  [958,] -0.20147586 -0.045684732 -0.13398015 -0.4671177 -8.486027e-02 #>  [959,] -0.05930492 -0.007272425 -0.03192125 -0.3325579 -1.010863e-03 #>  [960,] -0.22665887 -0.055386499 -0.15456739  0.5176652 -1.312446e-01 #>  [961,] -0.72421730 -0.532839268  0.32192836  0.3052296  5.202944e-03 #>  [962,]  0.32557633 -0.452757167  0.38213138  0.3260977  1.120048e-02 #>  [963,] -0.20415831 -0.046673843 -0.13614046  0.5311997 -8.915290e-02 #>  [964,]  0.46529554  0.728509207  0.54395138  0.3808665  7.168848e-02 #>  [965,]  0.59066847 -0.158203637  0.67699932  0.4304909  2.863064e-01 #>  [966,] -0.07251567 -0.009708367 -0.04022886 -0.3522973 -2.036041e-03 #>  [967,]  0.19257642  0.317596673  0.21986707 -0.7336273  1.137807e-03 #>  [968,] -0.11174554 -0.018321063 -0.06648747  0.6023357 -9.515957e-03 #>  [969,] -0.06055308 -0.007492160 -0.03269329 -0.3345641 -1.086439e-03 #>  [970,]  0.11497274  0.169776991  0.12524584  0.2208715  1.573652e-04 #>  [971,] -0.07868377 -0.010927507 -0.04420610 -0.3605484 -2.712864e-03 #>  [972,] -0.38766554 -0.142580099 -0.30136912  0.4395418  3.500372e-01 #>  [973,] -0.08378441 -0.011974207 -0.04753983 -0.3669931 -3.387289e-03 #>  [974,] -0.07841967 -0.010874259 -0.04403458 -0.3602058 -2.680895e-03 #>  [975,]  0.17875098  0.291387011  0.20287750  0.2591545  8.448393e-04 #>  [976,] -0.32352752 -0.102141366  0.76013386  0.4678511  5.731746e-01 #>  [977,] -0.11181409 -0.018337879 -0.06653525 -0.3977317 -9.537181e-03 #>  [978,] -0.09904755 -0.015311886 -0.05774628  0.6154132 -6.154363e-03 #>  [979,] -0.05199029 -0.006029611 -0.02745409 -0.3200776 -6.421796e-04 #>  [980,]  0.11002506  0.160529641  0.11931761  0.2174168  1.339057e-04 #>  [981,]  0.63432579 -0.127769094  0.72015114 -0.5510367  4.222164e-01 #>  [982,] -0.72574307  0.464583328 -0.67993077  0.3045689  5.075492e-03 #>  [983,]  0.37618638  0.620269662  0.44213330  0.3463197  2.284939e-02 #>  [984,]  0.37437192 -0.382200799 -0.55999341  0.3456064  2.229319e-02 #>  [985,]  0.46879808  0.732259793 -0.45216054  0.3822190  7.479965e-02 #>  [986,] -0.16693288 -0.033858422 -0.10687560 -0.4438423 -4.193760e-02 #>  [987,] -0.25069334 -0.065541114 -0.17484261  0.5041938 -1.886475e-01 #>  [988,]  0.17865956 -0.708787042 -0.79723475  0.2591058  8.431282e-04 #>  [989,] -0.12366395 -0.021336774 -0.07488798  0.5910777 -1.377444e-02 #>  [990,]  0.41818527 -0.325569370  0.49078995 -0.6373200  3.977753e-02 #>  [991,] -0.26565310 -0.072323045 -0.18776428  0.4962377 -2.307100e-01 #>  [992,] -0.30763879  0.906636432 -0.22523380  0.4753193 -3.694688e-01 #>  [993,] -0.23156603 -0.057387307  0.84134214 -0.4851612 -1.419138e-01 #>  [994,] -0.46804600 -0.206113858 -0.38369208  0.4068271  1.556273e-01 #>  [995,]  0.14495569  0.226724875 -0.83847808  0.2400947  3.744822e-04 #>  [996,]  0.37900806 -0.375910188 -0.55456331  0.3474277  2.373917e-02 #>  [997,]  0.64065062 -0.123697209  0.72625783 -0.5482770 -5.558956e-01 #>  [998,]  0.27975778  0.473842355  0.32676848  0.3069439  5.547949e-03 #>  [999,]  0.25853182 -0.562383558 -0.69913105 -0.7023302  3.909489e-03 #> [1000,] -0.46016079 -0.199180307  0.62462973  0.4099474  1.696873e-01 #> [1001,]  0.44944504 -0.288923362  0.52624236  0.3747506  5.901631e-02 #> [1002,] -0.58722705 -0.332227462  0.48458346  0.3605843  3.709528e-02 #> [1003,] -0.15159333 -0.029133854 -0.09527711  0.5676524 -2.925028e-02 #> [1004,] -0.12642177 -0.022061008 -0.07685799 -0.4114065 -1.493572e-02 #> [1005,]  0.11714518  0.173855524  0.12785489  0.2223595  1.686027e-04 #> [1006,]  0.31517808  0.531182541  0.36964358  0.3218369  9.602140e-03 #> [1007,]  0.10129061  0.144368659  0.10890341  0.2110754  9.907695e-05 #> [1008,]  0.50054240  0.764625324 -0.41735019  0.3945203 -8.910018e-01 #> [1009,] -0.47060717 -0.208400757 -0.38640619 -0.5941834  1.512758e-01 #> [1010,] -0.42476461  0.830013784  0.66133570 -0.5758375  2.459729e-01 #> [1011,]  0.59255668  0.843200032 -0.32109874 -0.5687284  2.915368e-01 #> [1012,] -0.47770347 -0.214827495  0.60604541 -0.5969759  1.397522e-01 #> [1013,] -0.10148531 -0.015873268 -0.05940724  0.6128046 -6.716915e-03 #> [1014,]  0.08856544  0.121295770  0.09386702 -0.7988094  6.111635e-05 #> [1015,]  0.20120280 -0.666186464  0.23047620  0.2707384  1.358834e-03 #> [1016,] -0.34057264 -0.112085273 -0.25583365  0.4600644 -4.888980e-01 #> [1017,]  0.07823210  0.103085801  0.08179851  0.1924765  3.932737e-05 #> [1018,] -0.17296155 -0.035802741 -0.11150894 -0.4481440 -4.790273e-02 #> [1019,]  0.17174177 -0.721980005  0.19427519  0.2553795  7.214557e-04 #> [1020,] -0.34335563 -0.113762124 -0.25846698 -0.5411868 -4.989685e-01 #> [1021,] -0.08461316 -0.012147546 -0.04808524  0.6319892 -3.507566e-03 #> [1022,]  0.12939881  0.197028734  0.14263314 -0.7695462  2.439819e-04 #> [1023,]  0.14364880  0.224223094  0.15993054  0.2393090  3.617950e-04 #> [1024,] -0.16221945 -0.032372834 -0.10328234  0.5596023 -3.767280e-02 #> [1025,]  0.87427199 -0.021877882 -0.07636150  0.5892144 -1.463691e-02 #> [1026,] -0.07451466 -0.010097848 -0.04151121 -0.3550303 -2.239873e-03 #> [1027,]  0.46834808  0.731779955 -0.45265956  0.3820452  7.439325e-02 #> [1028,] -0.03740627 -0.003791100 -0.01886538 -0.2903387 -2.091547e-04 #> [1029,]  0.68488320 -0.097436917 -0.23208998 -0.5282224 -3.963063e-01 #> [1030,] -0.32223127 -0.101407735 -0.23866324  0.4684525 -4.221069e-01 #> [1031,]  0.22088979 -0.629682706  0.25468946  0.2803576  1.996488e-03 #> [1032,] -0.06529436 -0.008346828 -0.03565093  0.6581014 -1.411489e-03 #> [1033,] -0.21219104 -0.049698388 -0.14265642  0.5262530 -1.029142e-01 #> [1034,]  0.51913136 -0.217737225  0.60266524  0.4017817 -8.651413e-01 #> [1035,]  0.11774842  0.174989851  0.12857999  0.2227697  1.718292e-04 #> [1036,] -0.11887941 -0.020103879 -0.07149339  0.5954913 -1.192230e-02 #> [1037,] -0.04081737 -0.004284862 -0.02083329  0.7019801 -2.811431e-04 #> [1038,] -0.04852487 -0.005468149 -0.02537327 -0.3136736 -5.069432e-04 #> [1039,] -0.64364748 -0.407330020  0.41878320  0.3384813  1.739318e-02 #> [1040,] -0.25593600 -0.067876708  0.82065507 -0.4986288 -2.028583e-01 #> [1041,]  0.36660954  0.607106785 -0.56911333  0.3425465  2.004836e-02 #> [1042,] -0.43825557 -0.180749056 -0.35252759  0.4186999  2.142697e-01 #> [1043,]  0.23727712  0.400059684  0.27482237  0.2880492  2.699516e-03 #> [1044,]  0.53896134 -0.199944274 -0.37629418  0.4095993  1.680717e-01 #> [1045,]  0.66784678 -0.107103969  0.75208819  0.4638833 -4.582742e-01 #> [1046,] -0.37053289 -0.130953308  0.71543482  0.4468592  4.057098e-01 #> [1047,]  0.20636313  0.343454483  0.23682375 -0.7266961  1.506953e-03 #> [1048,]  0.65441080 -0.115118938 -0.26058574  0.4578129 -5.070238e-01 #> [1049,]  0.36487896  0.604695616  0.42884870 -0.6581375  1.957642e-02 #> [1050,] -0.62234111  0.622266524  0.44385778 -0.6531019  2.330992e-02 #> [1051,]  0.06175662  0.075336696  0.06288520  0.1768928  1.718187e-05 #> [1052,]  0.15575475 -0.752582883  0.17469840  0.2464357  4.931984e-04 #> [1053,] -0.25000560 -0.065237985 -0.17425409  0.5045670 -1.868271e-01 #> [1054,] -0.43775517 -0.180341964 -0.35201056  0.4189014  2.153867e-01 #> [1055,] -0.44889829 -0.189553552 -0.36357479  0.4144308  1.915677e-01 #> [1056,] -0.06666760 -0.008600221 -0.03651479 -0.3439439 -1.517603e-03 #> [1057,]  0.09250087  0.128362848  0.09849827  0.2043383  7.141432e-05 #> [1058,] -0.74156887 -0.562558555  0.30074579 -0.7023749  3.902830e-03 #> [1059,] -0.08387023 -0.011992115 -0.04759626  0.6329011 -3.399601e-03 #> [1060,]  0.29568095  0.500115425  0.34610265  0.3137189  7.134885e-03 #> [1061,] -0.61898993  0.626784241 -0.55222241  0.3482129  2.438925e-02 #> [1062,] -0.18928369 -0.041319157 -0.12426082  0.5407394 -6.718303e-02 #> [1063,]  0.06113157  0.074321057  0.06217698  0.1762508  1.658578e-05 #> [1064,]  0.42411467 -0.318382478  0.49756676 -0.6350267  4.291682e-02 #> [1065,]  0.38500139  0.632116460  0.45243732 -0.6502240  2.573332e-02 #> [1066,] -0.52519234 -0.261389453  0.55448900 -0.6154587  8.042127e-02 #> [1067,]  0.87780234 -0.020955758 -0.07384452 -0.4075840 -1.318537e-02 #> [1068,] -0.16995792 -0.034827811 -0.10919527 -0.4460149 -4.485731e-02 #> [1069,]  0.54875333 -0.191534342  0.63397456  0.4134932  1.868264e-01 #> [1070,] -0.55263986  0.708726953  0.52389933 -0.6260536  5.750968e-02 #> [1071,] -0.47852071 -0.215576215 -0.39482656  0.4027031  1.384744e-01 #> [1072,]  0.37144135 -0.386214009 -0.56343240  0.3444527  2.142049e-02 #> [1073,]  0.35075513 -0.415356640  0.41215371  0.3362511  1.608085e-02 #> [1074,]  0.37577154  0.619705805  0.44164724  0.3461567  2.272114e-02 #> [1075,] -0.15791089 -0.031041203 -0.10002042 -0.4371829 -3.406516e-02 #> [1076,]  0.24129743  0.407255825 -0.72024415 -0.7101022  2.900323e-03 #> [1077,] -0.11827250 -0.019949625 -0.07106492 -0.4039391 -1.170150e-02 #> [1078,]  0.58080119 -0.165672717 -0.33299117  0.4264344  2.600190e-01 #> [1079,]  0.66556085 -0.108442887 -0.25005596  0.4628414 -4.666049e-01 #> [1080,] -0.04091334 -0.004299025 -0.02088904 -0.2982286 -2.833939e-04 #> [1081,] -0.32746610 -0.104389847 -0.24353101  0.4660322  5.588198e-01 #> [1082,]  0.73117311 -0.073808779 -0.19053502  0.4945874 -2.402139e-01 #> [1083,] -0.25702252 -0.068366271 -0.18028155 -0.4992090  7.941237e-01 #> [1084,] -0.29205187  0.914803717 -0.21111898 -0.5171319 -3.150950e-01 #> [1085,]  0.11606906  0.171833930  0.12656206  0.2216246  1.629623e-04 #> [1086,] -0.12287775 -0.021132131 -0.07432815 -0.4082063 -1.345618e-02 #> [1087,]  0.46314315 -0.273813704  0.54155751 -0.6199644  6.983485e-02 #> [1088,] -0.05646677 -0.006781031 -0.03017617  0.6721317 -8.533296e-04 #> [1089,] -0.13810445 -0.025239613 -0.08530974  0.5785115 -2.069087e-02 #> [1090,] -0.24275081 -0.062085918 -0.16807572 -0.4914545 -1.682539e-01 #> [1091,]  0.09935453  0.140818973  0.10660467  0.2096240  9.239033e-05 #> [1092,] -0.16280371 -0.032555344 -0.10372634  0.5591713 -3.818309e-02 #> [1093,] -0.07946470 -0.011085511 -0.04471392 -0.3615561 -2.809044e-03 #> [1094,] -0.05287624 -0.006176006 -0.02798981  0.6783395 -6.805635e-04 #> [1095,] -0.34590686 -0.115312704 -0.26088745  0.4576710 -5.081672e-01 #> [1096,]  0.07691635  0.100807207  0.08027223  0.1913150  3.704081e-05 #> [1097,] -0.04901631 -0.005546681 -0.02566692 -0.3146033 -5.247338e-04 #> [1098,] -0.21102152 -0.049252156 -0.14170338  0.5269649 -1.008249e-01 #> [1099,]  0.08329085  0.111933804  0.08768923 -0.8031710  4.910501e-05 #> [1100,]  0.69810363 -0.090304353 -0.22000593  0.4780733 -3.491478e-01 #> [1101,]  0.39892968  0.650313342 -0.53137891 -0.6447901  3.096334e-02 #> [1102,]  0.15957693  0.254742045 -0.82062786 -0.7513807  5.416517e-04 #> [1103,] -0.06399149 -0.008108839 -0.03483431 -0.3399263 -1.315928e-03 #> [1104,]  0.08326627  0.111890500  0.08766053  0.1968083  4.905354e-05 #> [1105,]  0.16729328  0.269516595  0.18882096  0.2529394  6.509274e-04 #> [1106,] -0.23027925 -0.056859099 -0.15758278 -0.4844241 -1.390637e-01 #> [1107,] -0.15440364 -0.029975705 -0.09738128  0.5654830 -3.132444e-02 #> [1108,] -0.33552910 -0.109084836 -0.25108007  0.4623459  5.294261e-01 #> [1109,]  0.17469998 -0.716333271  0.19790462 -0.7430172  7.716353e-04 #> [1110,] -0.19584646 -0.043642677 -0.12947214  0.5364663 -7.633101e-02 #> [1111,] -0.09386676 -0.014144638 -0.05424412  0.6211293 -5.076140e-03 #> [1112,]  0.72964189 -0.074531541 -0.19187543 -0.5062044 -2.448677e-01 #> [1113,] -0.68363655 -0.466968636  0.37106961  0.3223249  9.773606e-03 #> [1114,] -0.05238902 -0.006095354 -0.02769501  0.6792074 -6.592547e-04 #> [1115,]  0.58229493  0.835472526 -0.33147325  0.4270461 -7.361150e-01 #> [1116,] -0.16553941 -0.033416079 -0.10581060 -0.4428316 -4.064121e-02 #> [1117,] -0.41472964 -0.162261761  0.67154448 -0.5717330  2.717067e-01 #> [1118,] -0.28439696 -0.081341404 -0.20427495  0.4866646 -2.894684e-01 #> [1119,] -0.37509491  0.866011876  0.71098662 -0.5551044  3.904813e-01 #> [1120,] -0.12295749 -0.021152850 -0.07438490 -0.4082791 -1.348821e-02 #> [1121,] -0.16047122 -0.031829490 -0.10195617  0.5608989 -3.617625e-02 #> [1122,]  0.19414050  0.320545686  0.22179034  0.2671717  1.175547e-03 #> [1123,]  0.57423669 -0.170767973 -0.33968514 -0.5762440  2.435124e-01 #> [1124,]  0.55768458 -0.184074585 -0.35673028 -0.5829326  2.053727e-01 #> [1125,] -0.03065623 -0.002871292 -0.01505334 -0.2733586 -1.069245e-04 #> [1126,] -0.17756948 -0.037322551 -0.11507843 -0.4513577 -5.286801e-02 #> [1127,]  0.24533834  0.414446542 -0.71528828  0.2917417  3.114622e-03 #> [1128,]  0.61332034  0.858106073  0.69960512  0.4399588 -6.468770e-01 #> [1129,] -0.21223810 -0.049716385 -0.14269480  0.5262244 -1.029989e-01 #> [1130,]  0.75119615 -0.064710100 -0.17322688  0.5052207 -1.836707e-01 #> [1131,] -0.28425691 -0.081271818 -0.20415028  0.4867346  7.109925e-01 #> [1132,] -0.24664080 -0.063765721 -0.17138176  0.5064025 -1.780689e-01 #> [1133,]  0.23469680 -0.604580557  0.27165459 -0.7131449  2.576862e-03 #> [1134,]  0.10433540  0.149976157 -0.88747414  0.2133233  1.103243e-04 #> [1135,]  0.08195494  0.109584215  0.08613024 -0.8043035  4.636506e-05 #> [1136,]  0.12868131  0.195665216  0.14176515  0.2299929  2.389613e-04 #> [1137,]  0.79128434 -0.048378239 -0.13982869 -0.4716233 -9.679161e-02 #> [1138,]  0.39137051 -0.359483486  0.45985285  0.3522646  2.801682e-02 #> [1139,] -0.23841356 -0.060240890 -0.16440811 -0.4890379 -1.577068e-01 #> [1140,]  0.51450981 -0.222034158 -0.40228489  0.3999711  1.279780e-01 #> [1141,]  0.04739788  0.052839993  0.04682479  0.1609032  6.905543e-06 #> [1142,] -0.40238534  0.846920045 -0.31601964  0.4333701  3.058595e-01 #> [1143,] -0.48500936  0.778415587 -0.40176907  0.4001593  1.286795e-01 #> [1144,] -0.37852762 -0.136300730 -0.29237307 -0.5565745  3.792079e-01 #> [1145,]  0.25470657  0.430948318  0.29618844  0.2959650  3.663171e-03 #> [1146,]  0.04739788  0.052839993  0.04682479  0.1609032  6.905543e-06 #> [1147,] -0.43079935 -0.174746360 -0.34484605 -0.5782885  2.313826e-01 #> [1148,] -0.35136536 -0.118673595 -0.26608681 -0.5447583  4.722840e-01 #> [1149,]  0.08193046  0.109541235  0.08610169  0.1956756  4.631592e-05 #> [1150,] -0.25153230 -0.065911917 -0.17556120  0.5037395 -1.908820e-01 #> [1151,]  0.28107867  0.476051893 -0.67162432  0.3075115  5.666853e-03 #> [1152,]  0.81868880 -0.038578299  0.88200534 -0.4539224 -5.717022e-02 #> [1153,] -0.13279470 -0.023772714 -0.08144728 -0.4169910 -1.790016e-02 #> [1154,]  0.20669170  0.344066703  0.23722791  0.2734662  1.516813e-03 #> [1155,] -0.03065623 -0.002871292 -0.01505334 -0.2733586 -1.069245e-04 #> [1156,]  0.46744189  0.730811868  0.54633508 -0.6183047  7.358088e-02 #> [1157,] -0.54420106 -0.281844212 -0.46663653 -0.6227984  6.383056e-02 #> [1158,]  0.61558141 -0.140328204  0.70183615  0.4409169 -6.397426e-01 #> [1159,] -0.07833480 -0.010857165 -0.04397948 -0.3600955 -2.670680e-03 #> [1160,] -0.29532116 -0.086873698 -0.21405967 -0.5187348 -3.262792e-01 #> [1161,] -0.12193260 -0.020887182 -0.07365619  0.5926593 -1.308094e-02 #> [1162,]  0.06175662  0.075336696  0.06288520  0.1768928  1.718187e-05 #> [1163,] -0.10146308 -0.015868114 -0.05939205 -0.3871718 -6.711618e-03 #> [1164,] -0.04435781 -0.004816985 -0.02290317  0.6945239 -3.730812e-04 #> [1165,]  0.47178520 -0.264570228 -0.44885191 -0.6166270  7.754825e-02 #> [1166,]  0.25952788  0.439345942  0.30208711  0.2981120  3.975880e-03 #> [1167,] -0.44506366 -0.186348846  0.64041676 -0.5840348 -8.004834e-01 #> [1168,]  0.58013753 -0.166183213  0.66633381  0.4261629  2.583145e-01 #> [1169,]  0.23674620 -0.600893709  0.27417067  0.2878040  2.673889e-03 #> [1170,]  0.04739788  0.052839993  0.04682479  0.1609032  6.905543e-06 #> [1171,] -0.09683535 -0.014809170 -0.05624620  0.6178245 -5.674996e-03 #> [1172,]  0.11648623  0.172617313  0.12706313 -0.7780900  1.651314e-04 #> [1173,] -0.39549938 -0.148108212  0.69085824  0.4362448  3.260740e-01 #> [1174,] -0.31055155 -0.094938056 -0.22789787  0.4739339  6.201214e-01 #> [1175,]  0.10457651  0.150421458  0.11281309  0.2134995  1.112544e-04 #> [1176,] -0.79301005  0.344622257 -0.76240522  0.2736133  1.525809e-03 #> [1177,]  0.09327149  0.129754334  0.09940723  0.2049447  7.357397e-05 #> [1178,] -0.27234689 -0.075476093  0.80638008  0.4927714  7.490227e-01 #> [1179,]  0.12796782  0.194310008  0.14090231  0.2295331  2.340482e-04 #> [1180,]  0.16715740 -0.730743342  0.18865443  0.2528643  6.488630e-04 #> [1181,] -0.34522178 -0.114895068 -0.26023688 -0.5420227  4.942994e-01 #> [1182,]  0.18514329 -0.696465262  0.21072989  0.2625277  9.715949e-04 #> [1183,] -0.48971003 -0.226008159  0.59318011 -0.6016789  1.219623e-01 #> [1184,]  0.59878894 -0.152224584 -0.31484372 -0.5661412  3.092490e-01 #> [1185,]  0.32825055 -0.448684618  0.38533491 -0.6728134  1.164755e-02 #> [1186,]  0.42228074 -0.320593400  0.49547329  0.3642643  4.192268e-02 #> [1187,] -0.19031211 -0.041679228 -0.12507430  0.5400628 -6.856135e-02 #> [1188,]  0.64646841  0.879976119 -0.26815796 -0.5457170 -5.354151e-01 #> [1189,]  0.05180192  0.059543099  0.05170140  0.1661112  9.363911e-06 #> [1190,] -0.31809437 -0.099087372 -0.23483508 -0.5296192  5.929196e-01 #> [1191,] -0.31885161 -0.099509727 -0.23553458 -0.5299732  5.901734e-01 #> [1192,]  0.45151067 -0.286608485  0.52856064  0.3755474  6.054412e-02 #> [1193,]  0.60296944 -0.149204571  0.68933255  0.4356038 -6.784910e-01 #> [1194,] -0.19665262 -0.043932323 -0.13011557  0.5359486 -7.751319e-02 #> [1195,] -0.27044362 -0.074572015 -0.19195035 -0.5062486 -2.451289e-01 #> [1196,] -0.75545944  0.413030309  0.28373354  0.2913787  3.071293e-03 #> [1197,]  0.58552913  0.837934309 -0.32819345 -0.5716266 -7.276054e-01 #> [1198,]  0.28388935 -0.519264442  0.33179364  0.3087157  5.927171e-03 #> [1199,] -0.44934608 -0.189930180  0.63595828  0.4142519  1.906563e-01 #> [1200,] -0.08873923 -0.013024074 -0.05081588 -0.3729633 -4.154103e-03 #> [1201,] -0.53762597 -0.274647115 -0.45929874  0.3797387  6.918303e-02 #> [1202,]  0.04739788  0.052839993  0.04682479  0.1609032  6.905543e-06 #> [1203,] -0.21702376 -0.051563703 -0.14661016 -0.4766597 -1.118634e-01 #> [1204,] -0.12364128 -0.021330862 -0.07487183 -0.4089017 -1.376518e-02 #> [1205,] -0.09665197 -0.014767783 -0.05612216 -0.3819737 -5.636548e-03 #> [1206,] -0.24677826 -0.063825516 -0.17149887  0.5063272 -1.784219e-01 #> [1207,]  0.12308540 -0.814943069  0.13500647  0.2263443  2.024807e-04 #> [1208,]  0.47830572 -0.257741529 -0.44165307 -0.6141059  8.386512e-02 #> [1209,] -0.42756588 -0.172184996  0.65847014 -0.5769768  2.391176e-01 #> [1210,]  0.87022100 -0.022956088 -0.07926923  0.5856252 -1.644704e-02 #> [1211,]  0.54723357 -0.192823621 -0.36761388 -0.5871128  1.838088e-01 #> [1212,] -0.72546713 -0.534950025  0.32040551  0.3046885  5.098341e-03 #> [1213,]  0.07163375  0.091761090  0.07417046 -0.8134820  2.883664e-05 #> [1214,] -0.82921992  0.276182834  0.19309569  0.2548550  7.057163e-04 #> [1215,] -0.13364821 -0.024006006 -0.08206579  0.5822768 -1.832841e-02 #> [1216,] -0.05298422 -0.006193927 -0.02805521 -0.3218520 -6.853527e-04 #> [1217,]  0.23920345  0.403512881  0.27718659  0.2889367  2.794229e-03 #> [1218,] -0.56538478  0.694072257 -0.49049118  0.3690290  4.903214e-02 #> [1219,] -0.56000683  0.700317396  0.51559523 -0.6288956  5.246064e-02 #> [1220,] -0.14371100 -0.026828892 -0.08942580  0.5739040 -2.398012e-02 #> [1221,] -0.28423978 -0.081263306 -0.20413502 -0.5132568 -2.889511e-01 #> [1222,] -0.17317702  0.964126845 -0.11167531  0.5517043 -4.812692e-02 #> [1223,] -0.21037250 -0.049005393  0.85882486  0.5273612 -9.967811e-02 #> [1224,] -0.17657252 -0.036991240 -0.11430409  0.5493323 -5.176302e-02 #> [1225,] -0.11650541 -0.019503230 -0.06982010  0.5977326 -1.107607e-02 #> [1226,] -0.36745940 -0.128933333 -0.28157921 -0.5518113  4.161186e-01 #> [1227,] -0.79173405 -0.653002830  0.23916435  0.2742417  1.564791e-03 #> [1228,]  0.80546290 -0.043174215 -0.12842860  0.5373105 -7.443850e-02 #> [1229,] -0.31460873 -0.097156929 -0.23162244  0.4720166 -3.944722e-01 #> [1230,]  0.09343133  0.130043238  0.09959583  0.2050701  7.402796e-05 #> [1231,] -0.76765405  0.391177483  0.26876767  0.2857619  2.469198e-03 #> [1232,] -0.81740788  0.298692124  0.20759531  0.2611891  9.192948e-04 #> [1233,]  0.09464092  0.132232926  0.10102409  0.2060145  7.753220e-05 #> [1234,]  0.77507735 -0.054687339 -0.15312622 -0.4813246 -1.275993e-01 #> [1235,]  0.13248736  0.202905725  0.14637298  0.2324204  2.665313e-04 #> [1236,]  0.10480212  0.150838289  0.11308190 -0.7863358  1.121302e-04 #> [1237,] -0.45497360  0.805293532 -0.36992428  0.4120082  1.794968e-01 #> [1238,]  0.21895405  0.366763068 -0.74769059  0.2794312  1.924572e-03 #> [1239,] -0.43816358 -0.180674168 -0.35243252 -0.5812631  2.144747e-01 #> [1240,] -0.38189677 -0.138594978  0.70431896  0.4419886  3.683068e-01 #> [1241,] -0.04080111 -0.004282463 -0.02082384 -0.2979845 -2.807628e-04 #> [1242,]  0.21398892 -0.642390094 -0.75379647  0.2770365  1.749817e-03 #> [1243,]  0.06598288  0.082280702  0.06769297  0.1811256  2.163251e-05 #> [1244,]  0.09250087  0.128362848  0.09849827  0.2043383  7.141432e-05 #> [1245,]  0.50169143 -0.234256897 -0.41610495  0.3949676  1.104608e-01 #> [1246,] -0.30451395 -0.091691496 -0.22238496 -0.5231859 -3.583747e-01 #> [1247,]  0.60346374  0.851149928  0.68982531  0.4358106 -6.770216e-01 #> [1248,]  0.31251904  0.527018413  0.36644240 -0.6792599  9.227050e-03 #> [1249,] -0.85609787  0.224707986  0.16023896 -0.7605384  3.642277e-04 #> [1250,]  0.55814695 -0.183693800 -0.35625093 -0.5827469  2.063711e-01 #> [1251,]  0.08326627  0.111890500  0.08766053  0.1968083  4.905354e-05 #> [1252,] -0.49678218 -0.232777687  0.58554763 -0.6044379  1.124305e-01 #> [1253,] -0.67177701  0.551273537  0.38530192  0.3271754  1.164286e-02 #> [1254,]  0.09935453  0.140818973  0.10660467  0.2096240  9.239033e-05 #> [1255,]  0.04739788  0.052839993  0.04682479  0.1609032  6.905543e-06 #> [1256,] -0.39652307 -0.148840624 -0.31016155 -0.5641839  3.230176e-01 #> [1257,] -0.16376845 -0.032857721 -0.10446036  0.5584621 -3.903693e-02 #> [1258,]  0.57921748 -0.166892649 -0.33460264  0.4257868 -7.440353e-01 #> [1259,] -0.39837685  0.849827133 -0.31201067 -0.5649590  3.175280e-01 #> [1260,] -0.66012528  0.568741208 -0.60078046  0.3318895  1.377933e-02 #> [1261,]  0.53161794 -0.206412952  0.61595210  0.4066944  1.550504e-01 #> [1262,]  0.11493008  0.169697005  0.12519464  0.2208421  1.571505e-04 #> [1263,]  0.85243494 -0.027945564 -0.09227744  0.5708156 -2.645889e-02 #> [1264,] -0.08777285 -0.012816761 -0.05017406 -0.3718199 -3.995352e-03 #> [1265,]  0.17086901  0.276352738  0.19320475  0.2549035  7.071601e-04 #> [1266,] -0.57951712  0.677228782  0.49341876  0.3635690  4.096840e-02 #> [1267,] -0.08837434 -0.012945651 -0.05057337 -0.3725327 -4.093620e-03 #> [1268,] -0.18426119 -0.039582085  0.87969504 -0.4559173 -6.073851e-02 #> [1269,] -0.31780580 -0.098926705 -0.23456867  0.4705158  5.939654e-01 #> [1270,] -0.40578999 -0.155577591 -0.31943599 -0.5680437  2.961688e-01 #> [1271,] -0.24496700 -0.063040010 -0.16995729  0.5073218 -1.738047e-01 #> [1272,] -0.88013354  0.178978539  0.13112801  0.2241999  1.835336e-04 #> [1273,] -0.51076492 -0.246572167 -0.42965995  0.3901273  9.548930e-02 #> [1274,]  0.48513791 -0.250719060  0.56585492  0.3885391  9.097360e-02 #> [1275,]  0.36373774 -0.396899895 -0.57249616  0.3414110  1.927067e-02 #> [1276,] -0.16175738 -0.032228822 -0.10293147 -0.4400560 -3.727285e-02 #> [1277,] -0.46555361 -0.203904837 -0.38105608  0.4078118  1.599624e-01 #> [1278,]  0.08258390  0.110689296  0.08686393  0.1962311  4.764048e-05 #> [1279,] -0.05285794 -0.006172969 -0.02797873 -0.3216280 -6.797539e-04 #> [1280,]  0.08262468  0.110761014  0.08691152  0.1962657  4.772407e-05 #> [1281,]  0.46719874  0.730551700  0.54606521 -0.6183986  7.336427e-02 #> [1282,] -0.79097955  0.348400016  0.24009243  0.2746124  1.588222e-03 #> [1283,]  0.66389074 -0.109427464  0.74837436  0.4620825 -4.726854e-01 #> [1284,]  0.84240792 -0.030943665 -0.09977992 -0.4369424 -3.380889e-02 #> [1285,] -0.52798376 -0.264326140 -0.44859628 -0.6165377  7.776457e-02 #> [1286,] -0.14253262 -0.026491405 -0.08855750 -0.4251391 -2.325830e-02 #> [1287,] -0.68730725  0.527291155 -0.63334838  0.3208119  9.251157e-03 #> [1288,] -0.21151899 -0.049441719  0.85789142  0.5266618 -1.017100e-01 #> [1289,] -0.06817654 -0.008881658 -0.03746769 -0.3461532 -1.640812e-03 #> [1290,] -0.11750991 -0.019756483  0.92947279  0.5967799 -1.142843e-02 #> [1291,] -0.22361441 -0.054163526 -0.15204242 -0.4805600 -1.248971e-01 #> [1292,]  0.70451281 -0.086959382  0.78579071  0.4811840 -3.268506e-01 #> [1293,]  0.59970718 -0.151557885 -0.31392507 -0.5657586 -6.880839e-01 #> [1294,] -0.19671460 -0.043954629 -0.13016507 -0.4640912 -7.760462e-02 #> [1295,] -0.42493840  0.829877912 -0.33884189 -0.5759083  2.455434e-01 #> [1296,]  0.21297077 -0.644273382  0.24495130  0.2765420  1.715649e-03 #> [1297,] -0.11274495 -0.018566828 -0.06718472  0.6013567 -9.828906e-03 #> [1298,]  0.19008432 -0.687109456  0.21680306 -0.7349075  1.079707e-03 #> [1299,]  0.43833916 -0.301593739 -0.48627449  0.3704662  5.138377e-02 #> [1300,] -0.41648247 -0.163593994 -0.33023232 -0.5724526  2.670795e-01 #> [1301,] -0.07900454 -0.010992309 -0.04441458 -0.3609633 -2.752071e-03 #> [1302,] -0.44608071 -0.187195248 -0.36064069  0.4155578  1.973832e-01 #> [1303,] -0.25600604 -0.067908210 -0.17940527  0.5013337 -2.030521e-01 #> [1304,]  0.25809803 -0.563137668  0.30033834  0.2974770  3.880869e-03 #> [1305,]  0.10950735  0.159565619  0.11869846  0.2170499  1.316148e-04 #> [1306,]  0.16646772 -0.732062829  0.18780927  0.2524826  6.384648e-04 #> [1307,] -0.15223022 -0.029323711 -0.09575314  0.5671581 -2.971103e-02 #> [1308,] -0.12193260 -0.020887182 -0.07365619  0.5926593 -1.308094e-02 #> [1309,] -0.17214677 -0.035537051  0.88911971 -0.4475692 -4.706195e-02 #> [1310,] -0.13409481  0.975871540 -0.08238979  0.5818952 -1.855554e-02 #> [1311,] -0.11662425 -0.019533123  0.93009632 -0.4023805 -1.111733e-02 #> [1312,]  0.09428556  0.131589023  0.10060432  0.2057378  7.649006e-05 #> [1313,] -0.58894893 -0.334365388 -0.51739518  0.3599170  3.627696e-02 #> [1314,]  0.22709501  0.381654160  0.26231670 -0.7166990  2.242175e-03 #> [1315,] -0.10855054 -0.017544114 -0.06426741 -0.3944880 -8.565412e-03 #> [1316,]  0.55560371 -0.185794859 -0.35888986 -0.5837674  2.009263e-01 #> [1317,] -0.06940521 -0.009113134 -0.03824639 -0.3479237 -1.746424e-03 #> [1318,] -0.11865372 -0.020046461 -0.07133400 -0.4042972 -1.183983e-02 #> [1319,]  0.22330046 -0.625268070  0.25765301  0.2815058  2.089139e-03 #> [1320,]  0.79846352 -0.045706969 -0.13402888 -0.4671559 -8.495563e-02 #> [1321,] -0.24360225 -0.062451561  0.83120200  0.5080745 -1.703736e-01 #> [1322,] -0.12737839 -0.022314550 -0.07754360 -0.4122584 -1.535524e-02 #> [1323,] -0.07334005 -0.009868331 -0.04075692 -0.3534315 -2.118370e-03 #> [1324,] -0.25315789 -0.066633589 -0.17695561  0.5028621 -1.952548e-01 #> [1325,]  0.09317008  0.129571071  0.09928757  0.2048651  7.328699e-05 #> [1326,] -0.19229390 -0.042377317 -0.12664522  0.5387663 -7.127481e-02 #> [1327,] -0.14915514 -0.028412031 -0.09345918 -0.4304407 -2.753569e-02 #> [1328,] -0.11883524 -0.020092636 -0.07146219 -0.4044674 -1.190612e-02 #> [1329,]  0.58889949 -0.159526092  0.67521460 -0.5702391  2.814642e-01 #> [1330,] -0.21767715 -0.051818552 -0.14714664  0.5229499 -1.131126e-01 #> [1331,]  0.44001272 -0.299660066 -0.48438268  0.3711120  5.247349e-02 #> [1332,] -0.36051620 -0.124442222 -0.27486595  0.4512121  4.400349e-01 #> [1333,]  0.42979284  0.688395482 -0.49596609 -0.6328329  4.613188e-02 #> [1334,]  0.42886310 -0.312707372 -0.49702349 -0.6331920  4.559095e-02 #> [1335,]  0.20950962 -0.650691062  0.24069413 -0.7251477  1.603567e-03 #> [1336,] -0.60307279 -0.352263707 -0.53369815  0.3544305  3.015671e-02 #> [1337,]  0.31409520 -0.470510474 -0.63165971  0.3213906  9.447807e-03 #> [1338,]  0.50887948  0.772652687 -0.40833893  0.3977702  1.200069e-01 #> [1339,]  0.23279971  0.391997317 -0.73067504  0.2859733  2.489682e-03 #> [1340,] -0.35175775 -0.118917483  0.73353836  0.4550678 -5.291133e-01 #> [1341,] -0.10868307 -0.017576077 -0.06435922 -0.3946212 -8.603363e-03 #> [1342,] -0.05633715 -0.006758866 -0.03009683  0.6723502 -8.465920e-04 #> [1343,] -0.22857396 -0.056162986 -0.15616073  0.5165572 -1.353440e-01 #> [1344,] -0.15333794 -0.029655220 -0.09658225 -0.4336979 -3.052535e-02 #> [1345,]  0.32520294 -0.453327675 -0.61831617  0.3259454  1.113927e-02 #> [1346,]  0.46544699 -0.271327870 -0.45588032  0.3809250  7.182056e-02 #> [1347,] -0.26108667 -0.070214409  0.81620429 -0.5013653 -2.173824e-01 #> [1348,] -0.22727134 -0.055634223 -0.15507653 -0.4826898 -1.325467e-01 #> [1349,]  0.12779079  0.193973865  0.14068827  0.2294188  2.328413e-04 #> [1350,] -0.44568630 -0.186866713 -0.36023051  0.4157158  1.982083e-01 #> [1351,] -0.19109367 -0.041953868 -0.12569330 -0.4604497 -6.962239e-02 #> [1352,] -0.18862014 -0.041087627 -0.12373657  0.5411774 -6.630443e-02 #> [1353,] -0.57728418  0.679932085 -0.50402985 -0.6355675  4.215662e-02 #> [1354,] -0.66938895  0.554890432 -0.61184020  0.3281455  1.205517e-02 #> [1355,] -0.38228577 -0.138861440 -0.29606364  0.4418231  3.670589e-01 #> [1356,]  0.51530855 -0.221287395 -0.40142812  0.4002838  1.291451e-01 #> [1357,] -0.12365365 -0.021334086 -0.07488063 -0.4089129 -1.377023e-02 #> [1358,]  0.28824550  0.487946006  0.33708563  0.3105730  6.350961e-03 #> [1359,] -0.65231396  0.580197837  0.40851158  0.3350245  1.539939e-02 #> [1360,]  0.25694508 -0.565144533  0.29892787  0.2969640  3.805666e-03 #> [1361,]  0.16101873  0.257504358  0.18113636  0.2494353  5.608755e-04 #> [1362,]  0.50247928 -0.233492589 -0.41525173  0.3952744  1.114737e-01 #> [1363,] -0.44766398 -0.188517994 -0.36228860  0.4149243  1.940982e-01 #> [1364,]  0.89787618 -0.016021592 -0.05984365  0.6121295 -6.870401e-03 #> [1365,] -0.31699677 -0.098477075 -0.23382218  0.4708948  5.968958e-01 #> [1366,]  0.67114446 -0.105190053  0.75517255 -0.5346065  5.537523e-01 #> [1367,]  0.23499924  0.395964183  0.27202593  0.2869954  2.590993e-03 #> [1368,] -0.05199029 -0.006029611 -0.02745409 -0.3200776 -6.421796e-04 #> [1369,] -0.06940521 -0.009113134 -0.03824639 -0.3479237 -1.746424e-03 #> [1370,] -0.14747228 -0.027918449 -0.09220858  0.5708892 -2.639705e-02 #> [1371,]  0.12741607  0.193262512  0.14023528 -0.7708235  2.303026e-04 #> [1372,] -0.51880677 -0.254757134  0.56152445 -0.6129886  8.680657e-02 #> [1373,]  0.72316337  0.922367224 -0.19757285 -0.5095233 -2.650317e-01 #> [1374,] -0.57203739  0.686221876 -0.49804820  0.3664602  4.507251e-02 #> [1375,]  0.77105330  0.943685238 -0.15647129 -0.4836577 -1.361515e-01 #> [1376,]  0.51472696 -0.221830970  0.59794809 -0.5999439  1.282944e-01 #> [1377,] -0.66884178 -0.444283515  0.38881422  0.3283675  1.215144e-02 #> [1378,]  0.10878253  0.158217139  0.11783199  0.2165343  1.284574e-04 #> [1379,]  0.16729297  0.269515995  0.18882058  0.2529392  6.509227e-04 #> [1380,]  0.07675016  0.100520103  0.08007963  0.1911674  3.675918e-05 #> [1381,]  0.13145310  0.200936410  0.14512002  0.2317649  2.588082e-04 #> [1382,]  0.34573786 -0.422640409  0.40619706 -0.6657556  1.498026e-02 #> [1383,]  0.09789848  0.138157988  0.10487834 -0.7914793  8.759024e-05 #> [1384,]  0.08912553  0.122297459  0.09452503  0.2016439  6.250943e-05 #> [1385,]  0.07602414  0.099267713  0.07923870  0.1905201  3.554735e-05 #> [1386,]  0.42580498  0.683645872  0.49949426 -0.6343735  4.385198e-02 #> [1387,] -0.13686908 -0.024895008 -0.08440798  0.5795459 -2.001427e-02 #> [1388,]  0.16783579  0.270554296  0.18948588 -0.7467611  6.592219e-04 #> [1389,] -0.15759961 -0.030945967 -0.09978560 -0.4369481 -3.381492e-02 #> [1390,]  0.52784698 -0.209789412 -0.38804700 -0.5947926  1.486992e-01 #> [1391,] -0.24201250 -0.061769774 -0.16745001  0.5089548 -1.664289e-01 #> [1392,]  0.11760771 -0.825274808  0.12841083  0.2226742  1.710724e-04 #> [1393,]  0.08721207  0.118881194  0.09227860 -0.7999124  5.784599e-05 #> [1394,]  0.21993538 -0.631434090  0.25351602 -0.7200986  1.960758e-03 #> [1395,]  0.26033969  0.440753424  0.30307976  0.2984718  4.030694e-03 #> [1396,]  0.49626925 -0.239563994  0.57800967  0.3928583  1.037069e-01 #> [1397,]  0.06664749  0.083384459  0.06845198 -0.8182250  2.240231e-05 #> [1398,]  0.60149194 -0.150267452 -0.31214166 -0.5650138  3.171417e-01 #> [1399,]  0.05180192  0.059543099  0.05170140  0.1661112  9.363911e-06 #> [1400,]  0.06664749  0.083384459  0.06845198 -0.8182250  2.240231e-05 #> [1401,] -0.39920100 -0.150767622 -0.31283374  0.4346969  3.151063e-01 #> [1402,] -0.05186501 -0.006009003 -0.02737846 -0.3198521 -6.368812e-04 #> [1403,]  0.65142363 -0.116948956 -0.26342672 -0.5435196  4.822477e-01 #> [1404,]  0.16687091  0.268708587 -0.81169665  0.2527059  6.445275e-04 #> [1405,] -0.12597335 -0.021942569 -0.07653700 -0.4110054 -1.474206e-02 #> [1406,] -0.11350169 -0.018753784 -0.06771355 -0.3993801 -1.007095e-02 #> [1407,]  0.16267099  0.260669113  0.18315888 -0.7496346  5.835651e-04 #> [1408,] -0.05188317 -0.006011989 -0.02738942  0.6801152 -6.376473e-04 #> [1409,]  0.50849686 -0.227711518 -0.40875127  0.3976208  1.194812e-01 #> [1410,] -0.33083435 -0.106336031 -0.24667701  0.4644863 -4.534650e-01 #> [1411,] -0.16224743 -0.032381565 -0.10330359  0.5595816 -3.769712e-02 #> [1412,]  0.48794970 -0.247867984  0.56893436 -0.6103711  9.405164e-02 #> [1413,]  0.58619260 -0.161563677 -0.32752176 -0.5713539  2.741637e-01 #> [1414,] -0.41487657 -0.162373162  0.67139564  0.4282066  2.713167e-01 #> [1415,]  0.50934214 -0.226907449 -0.40784048  0.3979509  1.206453e-01 #> [1416,] -0.20033898 -0.045268661 -0.13306693  0.5336003 -8.308581e-02 #> [1417,] -0.40358438 -0.153956565 -0.31722161 -0.5671284  3.024234e-01 #> [1418,]  0.09180417  0.127106947  0.09767708  0.2037873  6.950308e-05 #> [1419,] -0.83432976  0.266411132  0.18683217  0.2520402  6.266070e-04 #> [1420,]  0.15185320 -0.760060898  0.16993277  0.2441749  4.473293e-04 #> [1421,]  0.63059925  0.869793059 -0.28346426  0.4473483 -5.904696e-01 #> [1422,] -0.76676771  0.392778427 -0.73014378 -0.7138253  2.509342e-03 #> [1423,]  0.35580929 -0.408104423 -0.58185945 -0.6617347  1.726176e-02 #> [1424,]  0.76365380 -0.059371740 -0.16266686  0.5121245 -1.528277e-01 #> [1425,] -0.12773596 -0.022409629 -0.07780017  0.5874244 -1.551430e-02 #> [1426,]  0.14122961  0.219594502  0.15698679  0.2378434  3.391967e-04 #> [1427,] -0.26812665 -0.073479546 -0.18992282  0.4949504 -2.381004e-01 #> [1428,]  0.28517937  0.482877018  0.33336149 -0.6907332  6.050053e-03 #> [1429,]  0.73079907 -0.073984972 -0.19086223 -0.5056063 -2.413467e-01 #> [1430,] -0.09790083 -0.015050497 -0.05696783 -0.3833422 -5.902259e-03 #> [1431,]  0.82820224 -0.035423524 -0.11061125 -0.4473223 -4.670517e-02 #> [1432,] -0.12219151 -0.020954166  0.92615985  0.5924216 -1.318294e-02 #> [1433,]  0.90247294 -0.014965671 -0.05671450 -0.3829341 -5.821777e-03 #> [1434,] -0.07011520 -0.009247839 -0.03869752  0.6510645 -1.809679e-03 #> [1435,]  0.07823210  0.103085801  0.08179851  0.1924765  3.932737e-05 #> [1436,] -0.12816968 -0.022525179 -0.07811160 -0.4129594 -1.570890e-02 #> [1437,]  0.13953764 -0.783640492  0.15492956  0.2368097  3.240570e-04 #> [1438,] -0.34801351 -0.116602783 -0.26289077 -0.5432689  4.842650e-01 #> [1439,] -0.13765603 -0.025114295 -0.08498220  0.5788861 -2.044332e-02 #> [1440,]  0.55234315 -0.188512027 -0.36228118  0.4149271  1.941129e-01 #> [1441,] -0.31555025 -0.097676161 -0.23248906  0.4715738 -3.978721e-01 #> [1442,] -0.20140351 -0.045658200 -0.13392199 -0.4670721 -8.474656e-02 #> [1443,]  0.45658299 -0.280979150 -0.46575986 -0.6224959  6.444857e-02 #> [1444,] -0.34896904 -0.117190833  0.73619921  0.4563057  4.808417e-01 #> [1445,]  0.18432434  0.301981059  0.20972357  0.2620991  9.545518e-04 #> [1446,]  0.43768823 -0.302348190 -0.48701084 -0.6297849  5.096548e-02 #> [1447,] -0.68831364 -0.474290335  0.36543934 -0.6796040  9.112259e-03 #> [1448,]  0.52687975 -0.210661485 -0.38907464  0.4048265  1.471061e-01 #> [1449,] -0.05646677 -0.006781031 -0.03017617  0.6721317 -8.533296e-04 #> [1450,] -0.64159586 -0.404414252  0.42120883  0.3392966  1.789760e-02 #> [1451,] -0.63403936  0.606203856  0.43012271 -0.6577099  1.987022e-02 #> [1452,]  0.64359233 -0.121831247 -0.27091461  0.4530148  4.544222e-01 #> [1453,] -0.30441734 -0.091640078 -0.22229703 -0.5231395 -3.580330e-01 #> [1454,]  0.07806519  0.102796205  0.08160475  0.1923299  3.903167e-05 #> [1455,]  0.17824465  0.290422910 -0.79774422 -0.7411155  8.353970e-04 #> [1456,] -0.37928846 -0.136816702 -0.29311918 -0.5568995  3.767318e-01 #> [1457,] -0.22553428 -0.054933115 -0.15363354 -0.4816811 -1.288757e-01 #> [1458,]  0.17165587  0.277855930 -0.80583017  0.2553327  7.200386e-04 #> [1459,] -0.12118455 -0.020694142 -0.07312517  0.5933480 -1.278957e-02 #> [1460,] -0.15726035 -0.030842320  0.90047019 -0.4366918 -3.354376e-02 #> [1461,]  0.22547324 -0.621300304  0.26032365 -0.7174645  2.175670e-03 #> [1462,] -0.13398678 -0.024098816 -0.08231139 -0.4180126 -1.850041e-02 #> [1463,] -0.69595760  0.513589612  0.35621740 -0.6827775  8.115359e-03 #> [1464,] -0.29022069 -0.084264897 -0.20947648 -0.5162293  6.911096e-01 #> [1465,]  0.30725611  0.518708346  0.36009751 -0.6814400  8.522237e-03 #> [1466,]  0.76238005 -0.059906461 -0.16373916 -0.4885925 -1.558225e-01 #> [1467,]  0.15651351 -0.751128605  0.17562583  0.2468716  5.025338e-04 #> [1468,]  0.14450646  0.225864816  0.16097481  0.2398251  3.700825e-04 #> [1469,]  0.52568616  0.788258949  0.60965616 -0.5956433  1.451600e-01 #> [1470,] -0.67950567 -0.460561801  0.37603430  0.3240208  1.039231e-02 #> [1471,] -0.05235018 -0.006088941 -0.02767153 -0.3207232 -6.575774e-04 #> [1472,] -0.50100807  0.763111179 -0.41903214  0.3939170  1.070515e-01 #> [1473,] -0.10206621 -0.016008186 -0.05980425  0.6121902 -6.856445e-03 #> [1474,] -0.58681767 -0.331720570  0.48505359  0.3607429  3.729228e-02 #> [1475,] -0.38115968  0.861909033 -0.29495644 -0.5576975 -6.293225e-01 #> [1476,] -0.29597785 -0.087212894  0.78534837 -0.5190555 -3.285414e-01 #> [1477,]  0.53969236 -0.199307963 -0.37552477  0.4098891  1.694162e-01 #> [1478,]  0.19076155 -0.685829691  0.21763565 -0.7345588  1.095252e-03 #> [1479,]  0.50508035 -0.230981481 -0.41243839 -0.6037120  1.148754e-01 #> [1480,]  0.17242629 -0.720672751  0.19511487  0.2557518  7.328285e-04 #> [1481,] -0.04091334 -0.004299025 -0.02088904 -0.2982286 -2.833939e-04 #> [1482,] -0.49035159  0.773383405  0.59248938 -0.6019295  1.210695e-01 #> [1483,]  0.06113157  0.074321057  0.06217698  0.1762508  1.658578e-05 #> [1484,]  0.81501031 -0.039831848 -0.12087700  0.5435937 -6.164415e-02 #> [1485,] -0.16459039 -0.033116337 -0.10508659 -0.4421396 -3.977554e-02 #> [1486,] -0.28088163 -0.079604909 -0.20115155  0.4884291 -2.779909e-01 #> [1487,] -0.45498507  0.805283714 -0.36993630 -0.5879963  1.794746e-01 #> [1488,] -0.22926394 -0.056444108 -0.15673574 -0.4838404 -1.368412e-01 #> [1489,]  0.61232172 -0.142588982  0.69861828  0.4395364  3.499974e-01 #> [1490,]  0.04739788  0.052839993  0.04682479  0.1609032  6.905543e-06 #> [1491,] -0.45806576 -0.197365105  0.62683201 -0.5892211  1.735948e-01 #> [1492,]  0.13960063  0.216479911  0.15500613  0.2368483  3.246111e-04 #> [1493,] -0.09427133 -0.014234522 -0.05451623 -0.3793259 -5.154846e-03 #> [1494,] -0.73679712  0.445702389  0.30657939 -0.7002630  4.229173e-03 #> [1495,]  0.05180192  0.059543099  0.05170140  0.1661112  9.363911e-06 #> [1496,] -0.26573314 -0.072360308  0.81216598  0.4961960 -2.309473e-01 #> [1497,] -0.37664581 -0.135029858  0.70947005 -0.5557694  3.853677e-01 #> [1498,]  0.08258390  0.110689296  0.08686393  0.1962311  4.764048e-05 #> [1499,] -0.37355581 -0.132959356 -0.28751054  0.4455568  3.955884e-01 #> [1500,]  0.17165953  0.277862911  0.19417431 -0.7446653  7.200989e-04 #> [1501,]  0.41898462  0.675406029  0.49170493 -0.6370107  4.018823e-02 #> [1502,]  0.65070881 -0.117389501 -0.26410780 -0.5438376  4.796889e-01 #> [1503,]  0.55184548 -0.188929086 -0.36279960  0.4147281  1.930894e-01 #> [1504,] -0.09612865 -0.014649925 -0.05576845 -0.3813961 -5.527900e-03 #> [1505,] -0.03751372 -0.003806364 -0.01892696 -0.2905889 -2.111946e-04 #> [1506,] -0.38841152 -0.143100711  0.69789312  0.4392265  3.477125e-01 #> [1507,]  0.42228074 -0.320593400  0.49547329  0.3642643  4.192268e-02 #> [1508,]  0.90380426 -0.014665013 -0.05581377  0.6185297 -5.541740e-03 #> [1509,]  0.20389367 -0.661153207  0.23378611  0.2720804  1.434509e-03 #> [1510,]  0.41244459 -0.332634430 -0.51579372  0.3604571  3.693795e-02 #> [1511,] -0.32312293 -0.101912041 -0.23949051 -0.5319613 -4.253522e-01 #> [1512,]  0.48764105 -0.248179838  0.56859663 -0.6104908  9.370931e-02 #> [1513,] -0.74661385 -0.571362958  0.29457200 -0.7046261  3.581254e-03 #> [1514,] -0.50682419 -0.242628758  0.57464155  0.3916566  1.000190e-01 #> [1515,] -0.76648607 -0.606713277  0.27020208  0.2863057  2.522211e-03 #> [1516,]  0.32172939 -0.458657215  0.37751714  0.3245265  1.058385e-02 #> [1517,]  0.15106629  0.238430961  0.16897225 -0.7562851  4.384989e-04 #> [1518,]  0.63194374 -0.129324065  0.71784161 -0.5520699 -5.859118e-01 #> [1519,] -0.11063480 -0.018049447 -0.06571411 -0.3965682 -9.176978e-03 #> [1520,] -0.38542702 -0.141025139 -0.29915831  0.4404893  3.570657e-01 #> [1521,]  0.41835209 -0.325365644  0.49098094 -0.6372554  3.986293e-02 #> [1522,] -0.36592145 -0.127929941 -0.28008833 -0.5511441  4.213697e-01 #> [1523,] -0.58212307 -0.325946161  0.49043690 -0.6374393  3.962013e-02 #> [1524,] -0.60345101 -0.352751918  0.46586351  0.3542832  3.000651e-02 #> [1525,]  0.76732682 -0.057843805 -0.15958426 -0.4857933  8.556042e-01 #> [1526,] -0.09127912 -0.013574815 -0.05250926  0.6240778 -4.593671e-03 #> [1527,]  0.06191204  0.075589701  0.06306141  0.1770517  1.733248e-05 #> [1528,]  0.16602043  0.267081284  0.18726122  0.2522346  6.317922e-04 #> [1529,]  0.19889606 -0.670511147  0.22763893  0.2695807  1.296581e-03 #> [1530,] -0.43333906 -0.176775823  0.65254290 -0.5793163  2.254406e-01 #> [1531,] -0.31976959  0.899976846 -0.23638328  0.4695982 -4.131585e-01 #> [1532,] -0.07521950 -0.010236467 -0.04196489 -0.3559801 -2.315198e-03 #> [1533,]  0.15846265  0.252606860  0.17800912 -0.7520142  5.271546e-04 #> [1534,] -0.43659854 -0.179403356  0.64918368  0.4193676  2.179859e-01 #> [1535,] -0.22590303 -0.055081568 -0.15393960 -0.4818957 -1.296494e-01 #> [1536,]  0.70980882 -0.084249936 -0.20945003 -0.5162147 -3.087908e-01 #> [1537,]  0.15668684 -0.750796408  0.17583772  0.2469710  5.046857e-04 #> [1538,]  0.18803229 -0.690991060  0.21428053  0.2640317  1.033688e-03 #> [1539,] -0.18186494 -0.038765792 -0.11842758 -0.4542987 -5.782802e-02 #> [1540,]  0.33266521 -0.442013571  0.39061588 -0.6710217  1.242008e-02 #> [1541,] -0.06055308 -0.007492160 -0.03269329 -0.3345641 -1.086439e-03 #> [1542,]  0.23926029 -0.596385385 -0.72274367  0.2889628  2.797065e-03 #> [1543,] -0.07842950 -0.010876237 -0.04404096  0.6397815 -2.682079e-03 #> [1544,] -0.24816943  0.935567652 -0.17268521  0.5055666 -1.820171e-01 #> [1545,] -0.72783164 -0.538956185 -0.68247682  0.3036622  4.905364e-03 #> [1546,]  0.17841519 -0.709252326  0.20246519 -0.7410245  8.385679e-04 #> [1547,] -0.09292656 -0.013936579 -0.05361265 -0.3778069 -4.896684e-03 #> [1548,]  0.25637126 -0.566144750  0.29822576 -0.7032918  3.768699e-03 #> [1549,]  0.47633840 -0.259788741 -0.44382163  0.3851331  8.191240e-02 #> [1550,] -0.41461796 -0.162177124  0.67165759 -0.5716871  2.720034e-01 #> [1551,]  0.75632154 -0.062484343  0.83113732  0.5080324 -1.705641e-01 #> [1552,] -0.06901085 -0.009038614 -0.03799619  0.6526418 -1.712000e-03 #> [1553,]  0.53368942 -0.204574026 -0.38185611 -0.5924874 -8.413648e-01 #> [1554,]  0.25738145 -0.564384522 -0.70053825  0.2971583  3.833983e-03 #> [1555,] -0.14370068 -0.026825930 -0.08941819  0.5739123 -2.397373e-02 #> [1556,] -0.20595939  0.952656186 -0.13759537  0.5300787 -9.211935e-02 #> [1557,]  0.06113157  0.074321057  0.06217698  0.1762508  1.658578e-05 #> [1558,]  0.89293708 -0.017186897 -0.06323841 -0.3929841 -8.147961e-03 #> [1559,] -0.03751372 -0.003806364 -0.01892696 -0.2905889 -2.111946e-04 #> [1560,] -0.43768570 -0.180285500 -0.35193880 -0.5810706  2.155422e-01 #> [1561,]  0.39757073 -0.351434103 -0.53295255 -0.6453190  3.041384e-02 #> [1562,]  0.38509736 -0.367755979  0.45254924 -0.6501864  2.576644e-02 #> [1563,] -0.13932714 -0.025582665 -0.08620410  0.5774946 -2.137732e-02 #> [1564,]  0.37491795 -0.381456211  0.44064679  0.3458211  2.245927e-02 #> [1565,] -0.27929012 -0.078825667 -0.19974155 -0.5107675 -2.728596e-01 #> [1566,]  0.07758716  0.101967683  0.08105006  0.1919088  3.819389e-05 #> [1567,]  0.57170659 -0.172759116 -0.34227521  0.4227277  2.373606e-01 #> [1568,] -0.69527231  0.514683935  0.35704515  0.3175081  8.200671e-03 #> [1569,]  0.36373774 -0.396899895 -0.57249616  0.3414110  1.927067e-02 #> [1570,] -0.52536912 -0.261574758  0.55429378  0.3844729  8.025064e-02 #> [1571,]  0.43229894 -0.308645305  0.50688114  0.3681349  4.761909e-02 #> [1572,] -0.05249658 -0.006113129 -0.02776005 -0.3209848 -6.639167e-04 #> [1573,]  0.26095869 -0.558174640 -0.69616347  0.2987458  4.072920e-03 #> [1574,] -0.32237207 -0.101487272 -0.23879382 -0.5316129  5.773808e-01 #> [1575,] -0.55103259 -0.289460476 -0.47429412  0.3745664  5.866804e-02 #> [1576,]  0.12172327  0.182482475  0.13336438  0.2254411  1.942885e-04 #> [1577,] -0.23162280 -0.057410666 -0.15870533  0.5148063 -1.420404e-01 #> [1578,] -0.19545456 -0.043502207 -0.12915960 -0.4632815 -7.576100e-02 #> [1579,]  0.68518291 -0.097271695  0.76818585  0.4719186 -3.952242e-01 #> [1580,]  0.21042973  0.351017322  0.24182589  0.2753028  1.632758e-03 #> [1581,]  0.48593124 -0.249912349 -0.43327561  0.3888465  9.183285e-02 #> [1582,] -0.43966963 -0.181902750  0.64601021  0.4181307  2.111374e-01 #> [1583,]  0.78363144 -0.051308783 -0.14607266 -0.4762675 -1.106202e-01 #> [1584,] -0.21384273  0.949667983 -0.14400487 -0.4747477 -1.059155e-01 #> [1585,]  0.44121320 -0.298278338  0.51697314  0.3715751  5.326803e-02 #> [1586,] -0.03065623 -0.002871292 -0.01505334 -0.2733586 -1.069245e-04 #> [1587,]  0.09397002  0.131017690  0.10023170  0.2054916  7.557354e-05 #> [1588,]  0.50940505 -0.226847690 -0.40777273  0.3979754  1.207323e-01 #> [1589,] -0.07011520 -0.009247839 -0.03869752  0.6510645 -1.809679e-03 #> [1590,]  0.65790164 -0.113002690 -0.25727641  0.4593778  5.055768e-01 #> [1591,]  0.62511371 -0.133848387 -0.28880955 -0.5550149  3.911717e-01 #> [1592,] -0.06148491 -0.007657643 -0.03327147 -0.3360407 -1.145486e-03 #> [1593,] -0.88560849  0.168687591  0.12454841  0.2204705  1.544581e-04 #> [1594,] -0.19932211 -0.044898090  0.86774868 -0.4657551 -8.152110e-02 #> [1595,] -0.15248840 -0.029400829 -0.09594625 -0.4330418 -2.989935e-02 #> [1596,] -0.54799340  0.713945350 -0.47088324 -0.6242613  6.091621e-02 #> [1597,] -0.79023569 -0.650218019  0.24100740  0.2749771  1.611604e-03 #> [1598,] -0.36283434 -0.125930624 -0.27710233  0.4501995 -5.680086e-01 #> [1599,] -0.48170877 -0.218514063 -0.39823332  0.4014523  1.335848e-01 #> [1600,] -0.15760052 -0.030946245 -0.09978629  0.5630512 -3.381565e-02 #> [1601,]  0.35667146 -0.406875825 -0.58083957  0.3386081  1.747075e-02 #> [1602,] -0.61545233  0.631512964  0.45190811  0.3495985  2.557724e-02 #> [1603,]  0.49131300 -0.244487346 -0.42739029 -0.6090665  9.785461e-02 #> [1604,]  0.29093543  0.492368742  0.34035008 -0.6882855  6.625494e-03 #> [1605,]  0.31934041  0.537654173 -0.62535177  0.3235478  1.021612e-02 #> [1606,] -0.13771567 -0.025130947 -0.08502575  0.5788362 -2.047611e-02 #> [1607,] -0.43498334 -0.178098081 -0.34915055 -0.5799806  2.216560e-01 #> [1608,]  0.75443306 -0.063299619 -0.17046753  0.5069918 -1.753260e-01 #> [1609,]  0.14262599  0.222265744 -0.84131438  0.2386912  3.521018e-04 #> [1610,]  0.44058253 -0.299003666  0.51626100  0.3713318  5.284928e-02 #> [1611,] -0.31409968 -0.096876877 -0.23115425  0.4722564  6.073641e-01 #> [1612,] -0.22317591 -0.053988529 -0.15167955 -0.4803030 -1.239999e-01 #> [1613,] -0.35028320  0.881997426  0.73494620 -0.5442783 -5.238565e-01 #> [1614,] -0.10378038 -0.016408885 -0.06097852 -0.3896068 -7.280825e-03 #> [1615,] -0.43234220 -0.175977380  0.65356843  0.4210868  2.277589e-01 #> [1616,]  0.34430048 -0.424742626  0.40448812 -0.6663319  1.467756e-02 #> [1617,] -0.24721153 -0.064014179 -0.17186813 -0.4939100 -1.795370e-01 #> [1618,] -0.21550261 -0.050972847  0.85463703  0.5242521 -1.089915e-01 #> [1619,] -0.11767556 -0.019798373 -0.07064395 -0.4033766 -1.148733e-02 #> [1620,] -0.40117691 -0.152199758  0.68519045  0.4338731  3.093479e-01 #> [1621,]  0.39838491 -0.350386439  0.46799040 -0.6450021  3.074199e-02 #> [1622,] -0.43852511  0.819031418 -0.35280616  0.4185914  2.136699e-01 #> [1623,] -0.19790730 -0.044384968 -0.13111841 -0.4648542 -7.937902e-02 #> [1624,]  0.55085680 -0.189759482 -0.36383015  0.4143330  1.910688e-01 #> [1625,] -0.10137306 -0.015847248 -0.05933058 -0.3870764 -6.690200e-03 #> [1626,] -0.09154653 -0.013633294 -0.05268810  0.6237701 -4.641881e-03 #> [1627,]  0.88942765 -0.018034225 -0.06567068 -0.3965063 -9.158193e-03 #> [1628,] -0.40857565 -0.157640743 -0.32223892  0.4308032  2.883926e-01 #> [1629,]  0.28135611  0.476515302 -0.67128682  0.3076305  5.692103e-03 #> [1630,] -0.70351198 -0.498574226  0.34708015  0.3140586  7.224807e-03 #> [1631,] -0.12705437 -0.022228538 -0.07731125  0.5880296 -1.521216e-02 #> [1632,]  0.10931363  0.159205072  0.11846684  0.2169123  1.307652e-04 #> [1633,]  0.82997444 -0.034849627 -0.10924725  0.5539368 -4.492426e-02 #> [1634,] -0.14842730 -0.028198093 -0.09291787 -0.4298669 -2.703880e-02 #> [1635,] -0.03740627 -0.003791100 -0.01886538 -0.2903387 -2.091547e-04 #> [1636,] -0.47900628  0.783978083 -0.39534490  0.4025125  1.377199e-01 #> [1637,] -0.08046986 -0.011290080 -0.04536893 -0.3628418 -2.936516e-03 #> [1638,]  0.23579051  0.397388318  0.27299743 -0.7126380  2.628270e-03 #> [1639,]  0.12308540 -0.814943069  0.13500647  0.2263443  2.024807e-04 #> [1640,]  0.06113157  0.074321057  0.06217698  0.1762508  1.658578e-05 #> [1641,] -0.57088501 -0.312408313 -0.49673696 -0.6330947  4.573693e-02 #> [1642,]  0.28617826  0.484531627  0.33457511 -0.6903071  6.146703e-03 #> [1643,]  0.31296180 -0.472286608 -0.63302435  0.3209230  9.288602e-03 #> [1644,]  0.18786253  0.308687570  0.21407187  0.2639436  1.029953e-03 #> [1645,]  0.43453562 -0.306020852 -0.49058142  0.3689983  4.898296e-02 #> [1646,] -0.40988564 -0.158617107 -0.32355943 -0.5697379  2.847836e-01 #> [1647,] -0.10249161 -0.016107270 -0.06009529 -0.3882579 -6.959991e-03 #> [1648,] -0.25949905 -0.069489264 -0.18242093 -0.5005256 -2.128472e-01 #> [1649,] -0.82787745  0.278747217  0.19474226  0.2555867  7.277645e-04 #> [1650,] -0.38884142 -0.143401282  0.69746773 -0.5609550  3.463768e-01 #> [1651,] -0.05249658 -0.006113129 -0.02776005 -0.3209848 -6.639167e-04 #> [1652,] -0.16804417  0.965786915  0.89227347 -0.4446438 -4.299327e-02 #> [1653,] -0.20203332 -0.045889429 -0.13442845 -0.4674686 -8.574008e-02 #> [1654,]  0.05180192  0.059543099  0.05170140  0.1661112  9.363911e-06 #> [1655,] -0.33517854 -0.108878115 -0.25075056 -0.5374949  5.307024e-01 #> [1656,] -0.08934217 -0.013154045 -0.05121701 -0.3736717 -4.255492e-03 #> [1657,] -0.03740627 -0.003791100 -0.01886538 -0.2903387 -2.091547e-04 #> [1658,] -0.07364666 -0.009928062 -0.04095360  0.6461492 -2.149607e-03 #> [1659,] -0.81687847  0.299697671  0.20824571 -0.7385323  9.299571e-04 #> [1660,] -0.08852370 -0.012977731 -0.05067261 -0.3727091 -4.118299e-03 #> [1661,]  0.12322617  0.185323171  0.13517624  0.2264373  2.033422e-04 #> [1662,]  0.73169015 -0.073565605 -0.19008294  0.4948554 -2.386525e-01 #> [1663,] -0.07842950 -0.010876237 -0.04404096  0.6397815 -2.682079e-03 #> [1664,]  0.11574705  0.171229486  0.12617536  0.2214038  1.613028e-04 #> [1665,] -0.06148491 -0.007657643 -0.03327147 -0.3360407 -1.145486e-03 #> [1666,] -0.15208844 -0.029281400 -0.09564713  0.5672680 -2.960800e-02 #> [1667,]  0.47318201 -0.263096924  0.55269293  0.3839129  7.886436e-02 #> [1668,]  0.59077886  0.841878648 -0.32288941  0.4305365  2.866104e-01 #> [1669,] -0.05251483 -0.006116147 -0.02777109  0.6789826 -6.647103e-04 #> [1670,] -0.13015856 -0.023058213 -0.07954273 -0.4147066 -1.662487e-02 #> [1671,]  0.16732840 -0.730416223  0.18886400  0.2529588  6.514619e-04 #> [1672,] -0.14167476 -0.026246874 -0.08792645 -0.4244388 -2.274319e-02 #> [1673,] -0.72484719  0.466097553  0.32116094 -0.6950430  5.149999e-03 #> [1674,] -0.82372206  0.286675762 -0.80015869  0.2578320  7.995198e-04 #> [1675,] -0.11358011 -0.018773202 -0.06776839  0.6005438 -1.009629e-02 #> [1676,] -0.15963195 -0.031570117 -0.10132079  0.5615251 -3.547378e-02 #> [1677,] -0.04913857 -0.005566275 -0.02574005 -0.3148335 -5.292289e-04 #> [1678,]  0.15667638  0.249183540  0.17582493 -0.7530350  5.045556e-04 #> [1679,] -0.13757134 -0.025090656 -0.08492037  0.5789570 -2.039681e-02 #> [1680,] -0.44870763 -0.189393346  0.63662397 -0.5854930  1.919569e-01 #> [1681,] -0.10378038 -0.016408885 -0.06097852 -0.3896068 -7.280825e-03 #> [1682,] -0.66800570  0.556976779  0.38981391  0.3287064  1.229984e-02 #> [1683,]  0.09967258  0.141401217  0.10698204  0.2098636  9.346469e-05 #> [1684,]  0.45663531 -0.280921493 -0.46570137  0.3775243  6.449000e-02 #> [1685,] -0.33895545 -0.111117813  0.74569320  0.4607940 -4.830313e-01 #> [1686,] -0.05298422 -0.006193927 -0.02805521 -0.3218520 -6.853527e-04 #> [1687,] -0.89656947  0.148306590  0.11144840  0.2126596  1.068859e-04 #> [1688,]  0.41663745 -0.327463887 -0.51098299 -0.6379190  3.899307e-02 #> [1689,] -0.44217979 -0.183962834  0.64341035 -0.5828781  2.056652e-01 #> [1690,]  0.13362239  0.205068337  0.14774872  0.2331362  2.752110e-04 #> [1691,]  0.15121536  0.238716646  0.16915419  0.2438022  4.401611e-04 #> [1692,]  0.57548708 -0.169789573  0.66159283 -0.5757350  2.465959e-01 #> [1693,] -0.07364666 -0.009928062 -0.04095360  0.6461492 -2.149607e-03 #> [1694,]  0.14027270 -0.782235320  0.15582314 -0.7627403  3.305683e-04 #> [1695,]  0.14381077  0.224533105  0.16012773  0.2394066  3.633489e-04 #> [1696,]  0.72347952 -0.077479802 -0.19729383 -0.5093625 -2.640305e-01 #> [1697,]  0.06598288  0.082280702  0.06769297  0.1811256  2.163251e-05 #> [1698,] -0.05235018 -0.006088941 -0.02767153 -0.3207232 -6.575774e-04 #> [1699,]  0.51864888 -0.218183117  0.60214928 -0.5984075  1.341258e-01 #> [1700,]  0.08329085  0.111933804  0.08768923 -0.8031710  4.910501e-05 #> [1701,]  0.19578727 -0.676353396  0.22381548  0.2680093  1.216372e-03 #> [1702,] -0.79173405 -0.653002830  0.23916435  0.2742417  1.564791e-03 #> [1703,]  0.53649890  0.797902190 -0.37888919  0.4086238  1.636076e-01 #> [1704,]  0.13246741  0.202867727 -0.85365119 -0.7675922  2.663807e-04 #> [1705,]  0.30540357 -0.484238258  0.35786134 -0.6822104  8.285577e-03 #> [1706,]  0.53477512  0.796385318 -0.38070879  0.4079418 -8.394584e-01 #> [1707,]  0.75612546 -0.062568731  0.83097086  0.5079241 -1.710548e-01 #> [1708,]  0.19438238  0.321001426  0.22208780  0.2672950  1.181473e-03 #> [1709,] -0.33524114 -0.108915015 -0.25080940  0.4624767 -4.695255e-01 #> [1710,] -0.48679703  0.776740315 -0.40368779  0.3994598  1.260881e-01 #> [1711,]  0.37949792 -0.375249678  0.44600969  0.3476199  2.389678e-02 #> [1712,]  0.64129042 -0.123289873 -0.27312650  0.4520035 -5.536585e-01 #> [1713,] -0.06627273 -0.008527090 -0.03626606 -0.3433592 -1.486512e-03 #> [1714,]  0.50426937 -0.231762401 -0.41331497  0.3959719  1.138052e-01 #> [1715,]  0.15670049  0.249229759  0.17585441  0.2469788  5.048555e-04 #> [1716,]  0.25430225  0.430241107  0.29569352  0.2957841  3.637921e-03 #> [1717,] -0.14713226 -0.027819181  0.90804368 -0.4288407 -2.617135e-02 #> [1718,] -0.17716679  0.962811438 -0.11476552 -0.4510793 -5.241962e-02 #> [1719,] -0.03697478 -0.003729994 -0.01861836 -0.2893284 -2.011047e-04 #> [1720,]  0.15885538  0.253359444 -0.82151052  0.2482094  5.322287e-04 #> [1721,] -0.48956565 -0.225871385 -0.40666449  0.3983775  1.221640e-01 #> [1722,]  0.19918343  0.330028092 -0.77200762  0.2697253  1.304207e-03 #> [1723,] -0.37270167 -0.132390593 -0.28667746 -0.5540757  3.984362e-01 #> [1724,]  0.45991549 -0.277323024  0.53796127  0.3787899  6.713603e-02 #> [1725,]  0.11760771 -0.825274808  0.12841083  0.2226742  1.710724e-04 #> [1726,]  0.60104011 -0.150593465 -0.31259288  0.4347975  3.158136e-01 #> [1727,] -0.69938371  0.508095754  0.35207622  0.3157911  7.700314e-03 #> [1728,] -0.78929587  0.351526486  0.24216340  0.2754370  1.641548e-03 #> [1729,] -0.05251483 -0.006116147 -0.02777109  0.6789826 -6.647103e-04 #> [1730,] -0.50057614 -0.236466336  0.58143661 -0.6059149  1.075907e-01 #> [1731,] -0.03782264 -0.003850355 -0.01910416 -0.2913051 -2.171388e-04 #> [1732,]  0.45574671 -0.281901905 -0.46669495  0.3771815  6.378958e-02 #> [1733,]  0.55289438 -0.188050800 -0.36170721 -0.5848524  1.952517e-01 #> [1734,] -0.62279999  0.621645008 -0.55667948  0.3467179  2.316551e-02 #> [1735,] -0.58292804  0.673068724 -0.51048511  0.3622492  3.921186e-02 #> [1736,] -0.33879583 -0.111022596 -0.25415623  0.4608661  5.175482e-01 #> [1737,] -0.32293275 -0.101804357 -0.23931400  0.4681269  5.753401e-01 #> [1738,]  0.42261937  0.679815645  0.49586002  0.3643952  4.210466e-02 #> [1739,]  0.83218040 -0.034141279 -0.10755446 -0.4444821 -4.277837e-02 #> [1740,] -0.13272672 -0.023754176 -0.08139806  0.5830675 -1.786638e-02 #> [1741,] -0.10146308 -0.015868114 -0.05939205 -0.3871718 -6.711618e-03 #> [1742,] -0.06568723 -0.008419054 -0.03589774  0.6575128 -1.441273e-03 #> [1743,]  0.77183802 -0.055995477 -0.15581764  0.5167950 -1.344552e-01 #> [1744,]  0.55328874 -0.187721291 -0.36129673 -0.5846946  1.960697e-01 #> [1745,] -0.06525209 -0.008339068 -0.03562439 -0.3418351 -1.408311e-03 #> [1746,]  0.40489758  0.657916190 -0.52448217  0.3575296  3.348438e-02 #> [1747,] -0.30289133 -0.090830171  0.77909057 -0.5224061  6.473526e-01 #> [1748,] -0.49769708 -0.233663527  0.58455732  0.3952058  1.112462e-01 #> [1749,]  0.45465380 -0.283111011  0.53208223  0.3767598  6.293754e-02 #> [1750,]  0.60193134 -0.149950852 -0.31170304  0.4351697 -6.815634e-01 #> [1751,] -0.06093545 -0.007559917 -0.03293036 -0.3351722 -1.110393e-03 #> [1752,]  0.87300544 -0.022212675 -0.07726837 -0.4119172 -1.518586e-02 #> [1753,] -0.02775432 -0.002500487 -0.01345093 -0.2651492 -7.658924e-05 #> [1754,]  0.19782922  0.327485730 -0.77367321  0.2690429  1.268586e-03 #> [1755,] -0.36091389 -0.124696782 -0.27524925  0.4510381  4.386511e-01 #> [1756,]  0.14433267  0.225532118  0.16076318 -0.7602793  3.683913e-04 #> [1757,] -0.06412747 -0.008133566 -0.03491940 -0.3401337 -1.325674e-03 #> [1758,]  0.11002506  0.160529641  0.11931761  0.2174168  1.339057e-04 #> [1759,]  0.19361570 -0.680443397  0.22114500  0.2669040  1.162773e-03 #> [1760,] -0.13554239 -0.024527172 -0.08344167 -0.4193353 -1.930633e-02 #> [1761,]  0.28481560  0.482273669 -0.66708057  0.3091115  6.015181e-03 #> [1762,]  0.12614360  0.190848423  0.13869766  0.2283504  2.218404e-04 #> [1763,]  0.83467845 -0.033347162 -0.10564431 -0.4426730 -4.044126e-02 #> [1764,]  0.11624641  0.172166910  0.12677505  0.2217460  1.638817e-04 #> [1765,]  0.73709626 -0.071049391 -0.18537234 -0.5023223 -2.226359e-01 #> [1766,]  0.15790656 -0.748458818  0.17732904 -0.7523313  5.200353e-04 #> [1767,] -0.08147462 -0.011495917 -0.04602524 -0.3641142 -3.068158e-03 #> [1768,]  0.11027970  0.161004069  0.11962223  0.2175970  1.350436e-04 #> [1769,]  0.74858210 -0.065861286  0.82453684  0.5038014 -1.905764e-01 #> [1770,] -0.52431417  0.739529697  0.55545839  0.3848808  8.127372e-02 #> [1771,]  0.60691860 -0.146387481 -0.30673675  0.4372594  3.333631e-01 #> [1772,] -0.43611862  0.820985143 -0.35032114  0.4195612  2.190715e-01 #> [1773,] -0.30473610 -0.091809786 -0.22258717  0.4767076  6.408394e-01 #> [1774,] -0.76722718  0.391948741 -0.73070807  0.2859608  2.488464e-03 #> [1775,] -0.46168279 -0.200506084  0.62302751 -0.5906560  1.668944e-01 #> [1776,]  0.20420229  0.339423247 -0.76583426  0.2722337  1.443404e-03 #> [1777,]  0.35804988  0.595083289  0.42079017  0.3391559 -9.821904e-01 #> [1778,]  0.49794744  0.762087367 -0.42016629  0.3935108 -8.942426e-01 #> [1779,]  0.59284268 -0.156588065  0.67918907 -0.5686101 -7.076654e-01 #> [1780,] -0.39047995 -0.144550606 -0.30415514  0.4383540 -6.586869e-01 #> [1781,]  0.36997788 -0.388228807 -0.56515162  0.3438760  2.099627e-02 #> [1782,]  0.15823561  0.252171785  0.17773145  0.2478565  5.242388e-04 #> [1783,] -0.80807076  0.316375384  0.21907132  0.2660410  1.122481e-03 #> [1784,]  0.16997155  0.274637750  0.19210420  0.2544127  6.926964e-04 #> [1785,]  0.08721207  0.118881194  0.09227860 -0.7999124  5.784599e-05 #> [1786,]  0.36835086  0.609522845 -0.56706445  0.3432341  2.053349e-02 #> [1787,]  0.40881071 -0.337161346  0.48002747  0.3590483  3.523673e-02 #> [1788,]  0.16171337  0.258834994  0.18198657  0.2498270  5.703279e-04 #> [1789,]  0.64498108 -0.120956454 -0.26958256  0.4536265 -5.406795e-01 #> [1790,] -0.19545652 -0.043502909 -0.12916117  0.5367173 -7.576385e-02 #> [1791,] -0.09210691 -0.013756145 -0.05306320 -0.3768725 -4.744128e-03 #> [1792,] -0.30472034  0.908198609 -0.22257282 -0.5232849 -3.591048e-01 #> [1793,] -0.06901085 -0.009038614 -0.03799619  0.6526418 -1.712000e-03 #> [1794,]  0.14024718 -0.782284117  0.15579211  0.2372441  3.303405e-04 #> [1795,] -0.19896843 -0.044769548 -0.13196791 -0.4655303 -8.098181e-02 #> [1796,]  0.14853859  0.233587306  0.16588851  0.2422279  4.110559e-04 #> [1797,]  0.05180192  0.059543099  0.05170140  0.1661112  9.363911e-06 #> [1798,] -0.10608706 -0.016954136 -0.06256504  0.6080114 -7.882520e-03 #> [1799,]  0.29424827 -0.502215759 -0.65563316 -0.6868849  6.977647e-03 #> [1800,] -0.11358011 -0.018773202 -0.06776839  0.6005438 -1.009629e-02 #> [1801,]  0.06235839  0.076317321  0.06356773  0.1775068  1.777039e-05 #> [1802,] -0.28250763 -0.080405494  0.79740527  0.4876113 -2.832756e-01 #> [1803,]  0.15573055  0.247370739  0.17466883 -0.7535782  4.929030e-04 #> [1804,] -0.76550490 -0.604943983  0.27140692  0.2867615  2.567474e-03 #> [1805,] -0.82296750  0.288113866  0.20076759 -0.7417634  8.131359e-04 #> [1806,]  0.24499198  0.413831896  0.28428706  0.2915842  3.095748e-03 #> [1807,] -0.83418937  0.266679789  0.18700416  0.2521182  6.286816e-04 #> [1808,]  0.34263036  0.572806106 -0.59749886 -0.6670023  1.433268e-02 #> [1809,] -0.24629402 -0.063615004 -0.17108640  0.5065926 -1.771804e-01 #> [1810,]  0.32447176 -0.454446217 -0.61919279 -0.6743529  1.102027e-02 #> [1811,]  0.53609357 -0.202453792 -0.37931683 -0.5915367  1.628823e-01 #> [1812,]  0.07758716  0.101967683  0.08105006  0.1919088  3.819389e-05 #> [1813,]  0.42344235 -0.319191772 -0.50320045  0.3647134  4.254991e-02 #> [1814,]  0.18199962  0.297566347  0.20686743 -0.7391232  9.074786e-04 #> [1815,] -0.05131837 -0.005919353 -0.02704879 -0.3188629 -6.141326e-04 #> [1816,] -0.09981620 -0.015488055 -0.05826909  0.6145853 -6.327786e-03 #> [1817,] -0.10190241 -0.015970099 -0.05969226 -0.3876368 -6.816885e-03 #> [1818,] -0.29584693 -0.087145209  0.78546642 -0.5189916 -3.280900e-01 #> [1819,] -0.21452224 -0.050593864 -0.14456048  0.5248422 -1.071675e-01 #> [1820,] -0.72865282  0.459648551  0.31652176 -0.6966951  4.839821e-03 #> [1821,]  0.66360894 -0.109594128 -0.25189076 -0.5380453  5.262892e-01 #> [1822,] -0.34834019 -0.116803624  0.73679821  0.4565856 -5.169061e-01 #> [1823,]  0.15047064  0.237289440  0.16824534  0.2433658  4.319062e-04 #> [1824,] -0.06826249 -0.008897784 -0.03752208  0.6537221 -1.648044e-03 #> [1825,] -0.42391676 -0.169324404 -0.33779835  0.4245078  2.480760e-01 #> [1826,] -0.69938371  0.508095754  0.35207622  0.3157911  7.700314e-03 #> [1827,]  0.08193046  0.109541235  0.08610169  0.1956756  4.631592e-05 #> [1828,]  0.59371273 -0.155944594  0.68006415  0.4317503  2.947705e-01 #> [1829,]  0.61504662 -0.140697531 -0.29869112 -0.5593099  3.585628e-01 #> [1830,] -0.28571704 -0.081998956 -0.20545103  0.4860055 -2.938276e-01 #> [1831,] -0.25962895 -0.069548443 -0.18253332 -0.5005944 -2.132163e-01 #> [1832,]  0.78043551 -0.052558260 -0.14869883 -0.4781729 -1.167738e-01 #> [1833,] -0.05199029 -0.006029611 -0.02745409 -0.3200776 -6.421796e-04 #> [1834,] -0.21414314 -0.050447697 -0.14425045  0.5250709 -1.064678e-01 #> [1835,]  0.60234164 -0.149655608 -0.31129362  0.4353412 -6.803513e-01 #> [1836,] -0.28594156 -0.082111090 -0.20565123 -0.5141065  7.054284e-01 #> [1837,] -0.11168293 -0.018305710  0.93355617 -0.3976027 -9.496605e-03 #> [1838,] -0.16337164 -0.032733197 -0.10415832 -0.4412466 -3.868403e-02 #> [1839,] -0.33282636 -0.107497202 -0.24854268 -0.5364239  5.392719e-01 #> [1840,]  0.06235839  0.076317321  0.06356773  0.1775068  1.777039e-05 #> [1841,] -0.29887644 -0.088719176 -0.21726959  0.4795341  6.614138e-01 #> [1842,] -0.14350004 -0.026768340 -0.08927023 -0.4259251 -2.384968e-02 #> [1843,]  0.07743346  0.101701569  0.08087178  0.1917730  3.792738e-05 #> [1844,] -0.05287624 -0.006176006 -0.02798981  0.6783395 -6.805635e-04 #> [1845,]  0.30678233 -0.482044165  0.35952576  0.3183631  8.461159e-03 #> [1846,] -0.61368785 -0.366143905  0.45396547 -0.6497112  2.618905e-02 #> [1847,] -0.21572925 -0.051060664  0.85445136 -0.4758840 -1.094162e-01 #> [1848,]  0.17767889 -0.710654645  0.20156115 -0.7414176  8.249468e-04 #> [1849,]  0.21383764  0.357330223 -0.75398252 -0.7230369  1.744705e-03 #> [1850,] -0.51367605 -0.249513682  0.56715461 -0.6110013  9.226086e-02 #> [1851,] -0.11068298 -0.018061198 -0.06574763 -0.3966159 -9.191493e-03 #> [1852,] -0.68889009  0.524802303 -0.63525525  0.3201576  9.033523e-03 #> [1853,] -0.09612865 -0.014649925 -0.05576845 -0.3813961 -5.527900e-03 #> [1854,] -0.21695563  0.948462834 -0.14655425  0.5233810 -1.117337e-01 #> [1855,]  0.36610347 -0.393597282 -0.56970912 -0.6576534  1.990931e-02 #> [1856,] -0.61065865 -0.362145210 -0.54250697  0.3514725  2.727023e-02 #> [1857,] -0.41925475 -0.165715706  0.66695195  0.4264115 -7.401249e-01 #> [1858,] -0.68072316 -0.462444240  0.37457185  0.3235217  1.020649e-02 #> [1859,] -0.03697478 -0.003729994 -0.01861836 -0.2893284 -2.011047e-04 #> [1860,]  0.11733424  0.174210956  0.12808212 -0.7775118  1.696089e-04 #> [1861,] -0.36629577 -0.128173703 -0.28045099  0.4486934  4.200891e-01 #> [1862,]  0.47493416 -0.261256914 -0.44537133  0.3845902  8.054357e-02 #> [1863,]  0.21356922 -0.643166148  0.24568735  0.2768328  1.735665e-03 #> [1864,]  0.46112604 -0.276003184 -0.46068904  0.3792571  6.813702e-02 #> [1865,]  0.34294584  0.573269856  0.40287658 -0.6668756  1.439727e-02 #> [1866,] -0.11012338 -0.017924929 -0.06535859 -0.3960606 -9.023983e-03 #> [1867,] -0.07397390 -0.009991951 -0.04116368 -0.3542967 -2.183316e-03 #> [1868,]  0.06662437  0.083346013  0.06842556  0.1817525  2.237520e-05 #> [1869,] -0.05188317 -0.006011989 -0.02738942  0.6801152 -6.376473e-04 #> [1870,] -0.51289459 -0.248721694  0.56801034  0.3893016  9.311783e-02 #> [1871,]  0.53465104 -0.203724166 -0.38083986  0.4078927  1.603228e-01 #> [1872,] -0.08461316 -0.012147546 -0.04808524  0.6319892 -3.507566e-03 #> [1873,] -0.13267743 -0.023740736  0.91863763 -0.4168901 -1.784191e-02 #> [1874,] -0.11149439 -0.018259508 -0.06631246 -0.3974172 -9.438504e-03 #> [1875,] -0.68028782  0.538229429 -0.62490514  0.3237002  1.027260e-02 #> [1876,] -0.04123596 -0.004346744 -0.02107659 -0.2989274 -2.910554e-04 #> [1877,] -0.11402578 -0.018883701 -0.06808024  0.6001119 -1.024119e-02 #> [1878,] -0.47969540 -0.216655536 -0.39608086 -0.5977580  1.366552e-01 #> [1879,] -0.07868377 -0.010927507 -0.04420610 -0.3605484 -2.712864e-03 #> [1880,] -0.44267465 -0.184370798 -0.35710283  0.4169232  2.045996e-01 #> [1881,] -0.69251973 -0.480935866  0.36036799  0.3186531  8.551269e-03 #> [1882,] -0.51224045 -0.248060071  0.56872631 -0.6104448  9.384062e-02 #> [1883,]  0.52315909 -0.214039186 -0.39303487  0.4033630  1.411118e-01 #> [1884,]  0.19918185  0.330025137  0.22799044  0.2697245  1.304165e-03 #> [1885,] -0.45198482 -0.192159823 -0.36679671 -0.5868012  1.853558e-01 #> [1886,]  0.38415088  0.630984621  0.45144518  0.3494432  2.544144e-02 #> [1887,] -0.11945345 -0.020250221 -0.07189910 -0.4050455 -1.213400e-02 #> [1888,] -0.37165264 -0.131694150  0.71434478 -0.5536238 -5.980532e-01 #> [1889,] -0.10889269 -0.017626679 -0.06450449  0.6051684 -8.663645e-03 #> [1890,] -0.19502877 -0.043349838 -0.12882023 -0.4630070 -7.514516e-02 #> [1891,]  0.06191204  0.075589701  0.06306141  0.1770517  1.733248e-05 #> [1892,] -0.43553312 -0.178541661 -0.34971730  0.4197974  2.204015e-01 #> [1893,]  0.13818325  0.213771499  0.15328381  0.2359768  3.123215e-04 #> [1894,] -0.19285288 -0.042575223 -0.12708909  0.5384024 -7.205394e-02 #> [1895,] -0.10250037 -0.016109313 -0.06010129  0.6117329 -6.962135e-03 #> [1896,] -0.64369204  0.592606497  0.41873049  0.3384636  1.738237e-02 #> [1897,]  0.37370872 -0.383106508 -0.56077123  0.3453455  2.209294e-02 #> [1898,]  0.06235839  0.076317321  0.06356773  0.1775068  1.777039e-05 #> [1899,]  0.24662402 -0.583274670 -0.71371214  0.2923255  3.185529e-03 #> [1900,]  0.18655521  0.306211436 -0.78753495  0.2632643  1.001554e-03 #> [1901,] -0.14702132 -0.027786824  0.90812596  0.5712476 -2.609802e-02 #> [1902,]  0.41412865 -0.330550905 -0.51386008  0.3611095  3.775129e-02 #> [1903,]  0.75279284 -0.064012274 -0.17186440 -0.4939076 -1.795258e-01 #> [1904,]  0.44047734 -0.299124763 -0.48385781 -0.6287088  5.277972e-02 #> [1905,] -0.12782694 -0.022433846 -0.07786548 -0.4126562 -1.555497e-02 #> [1906,]  0.58752705 -0.160557073 -0.32617198 -0.5708047  2.777461e-01 #> [1907,] -0.18692947 -0.040500514  0.87759694 -0.4577016 -6.410348e-02 #> [1908,]  0.54954177 -0.190867765 -0.36520214  0.4138078  1.884076e-01 #> [1909,] -0.55590477 -0.294979377 -0.47977610  0.3726870  5.522015e-02 #> [1910,]  0.47141759 -0.264958921 -0.44925872  0.3832310  7.720517e-02 #> [1911,] -0.12531998 -0.021770471 -0.07606977 -0.4104191 -1.446328e-02 #> [1912,]  0.58046090 -0.165934346 -0.33333724  0.4262952  2.591440e-01 #> [1913,] -0.08781891 -0.012826613 -0.05020461  0.6281254 -4.002814e-03 #> [1914,]  0.57041836 -0.173778820 -0.34359612 -0.5777950  2.342732e-01 #> [1915,]  0.92210595 -0.010768557 -0.04369353 -0.3595212 -2.618096e-03 #> [1916,]  0.52571890 -0.211711390 -0.39030901  0.4043696  1.452131e-01 #> [1917,]  0.17038304  0.275424163 -0.80739121  0.2546380  6.992986e-04 #> [1918,]  0.18960003 -0.688025017  0.21620769  0.2648427  1.068700e-03 #> [1919,]  0.12833030  0.194998417  0.14134063  0.2297669  2.365344e-04 #> [1920,] -0.82743403 -0.720406040  0.19528622  0.2558277  7.351667e-04 #> [1921,] -0.32944924 -0.105533099 -0.24538198 -0.5348790  5.515868e-01 #> [1922,] -0.51433426 -0.250182127 -0.43356654  0.3887436  9.154449e-02 #> [1923,] -0.06529436 -0.008346828 -0.03565093  0.6581014 -1.411489e-03 #> [1924,]  0.19469350 -0.678412534  0.22247038 -0.7325466  1.189131e-03 #> [1925,] -0.17806964 -0.037489281  0.88453267  0.5482972 -5.342885e-02 #> [1926,]  0.19745824  0.326788728 -0.77412949  0.2688555  1.258967e-03 #> [1927,] -0.11207635 -0.018402269 -0.06671812 -0.3979891 -9.618706e-03 #> [1928,]  0.18152888  0.296671651 -0.79371082 -0.7393718  8.981780e-04 #> [1929,]  0.77412209 -0.055071449 -0.15391875 -0.4818811 -1.295966e-01 #> [1930,]  0.09397002  0.131017690  0.10023170  0.2054916  7.557354e-05 #> [1931,]  0.46194483 -0.275112958 -0.45977675  0.3795731  6.882167e-02 #> [1932,] -0.28072875 -0.079529872 -0.20101600  0.4885062 -2.774962e-01 #> [1933,] -0.47103989 -0.208788840 -0.38686529  0.4056460  1.505508e-01 #> [1934,] -0.17313100 -0.035858111 -0.11163977  0.5517367 -4.807897e-02 #> [1935,]  0.73399633 -0.072486338 -0.18806982 -0.5039452 -2.317502e-01 #> [1936,]  0.82317007 -0.037076651 -0.11450391  0.5491539 -5.204668e-02 #> [1937,]  0.07602414  0.099267713  0.07923870  0.1905201  3.554735e-05 #> [1938,] -0.17127849 -0.035254919 -0.11021121  0.5530456 -4.617803e-02 #> [1939,]  0.33197655  0.556950053  0.38979270 -0.6713008  1.229667e-02 #> [1940,] -0.32071296 -0.100552419  0.76274368  0.4691586 -4.165855e-01 #> [1941,] -0.08399638 -0.012018455 -0.04767923 -0.3672542 -3.417757e-03 #> [1942,] -0.17555856  0.963344308 -0.11351771 -0.4499629 -5.065672e-02 #> [1943,] -0.08516383 -0.012263224 -0.04844820 -0.3686826 -3.589214e-03 #> [1944,] -0.06580455 -0.008440663 -0.03597150 -0.3426624 -1.450256e-03 #> [1945,] -0.05287624 -0.006176006 -0.02798981  0.6783395 -6.805635e-04 #> [1946,]  0.33403744  0.560046798 -0.60774455 -0.6704662  1.266925e-02 #> [1947,] -0.33966650 -0.111542561 -0.25497783 -0.5395270  5.143880e-01 #> [1948,]  0.04739788  0.052839993  0.04682479  0.1609032  6.905543e-06 #> [1949,]  0.24642069 -0.583634772  0.28603861 -0.7077668  3.174226e-03 #> [1950,]  0.07602414  0.099267713  0.07923870  0.1905201  3.554735e-05 #> [1951,]  0.35914989 -0.403357871  0.42208996  0.3395927  1.808417e-02 #> [1952,]  0.28021416 -0.525393630  0.32732384  0.3071401  5.588786e-03 #> [1953,]  0.24987817 -0.577526788  0.29027567 -0.7062030  3.371095e-03 #> [1954,] -0.22374249 -0.054214692 -0.15214844  0.5193650 -1.251599e-01 #> [1955,]  0.23002445  0.386975245 -0.73408395  0.2846772  2.366581e-03 #> [1956,] -0.50503017 -0.240848081 -0.42340421 -0.6076466  1.021434e-01 #> [1957,]  0.24487392 -0.586377695  0.28414229  0.2915304  3.089336e-03 #> [1958,]  0.76132557 -0.060351037 -0.16462816 -0.4891841 -1.583293e-01 #> [1959,]  0.28573299  0.483794450  0.33403417  0.3095030  6.103457e-03 #> [1960,] -0.36360330 -0.126426787 -0.27784528 -0.5501357  4.293358e-01 #> [1961,] -0.10146308 -0.015868114 -0.05939205 -0.3871718 -6.711618e-03 #> [1962,] -0.08964265 -0.013218994 -0.05141712  0.6259767 -4.306700e-03 #> [1963,]  0.12308540 -0.814943069  0.13500647  0.2263443  2.024807e-04 #> [1964,]  0.34307241 -0.426544182 -0.59697280 -0.6668248  1.442326e-02 #> [1965,]  0.57237898 -0.172228469  0.65841366  0.4230008 -7.610159e-01 #> [1966,]  0.31356255  0.528655335 -0.63230097 -0.6788291  9.372692e-03 #> [1967,]  0.43686634 -0.303302682 -0.48794103  0.3698979  5.044175e-02 #> [1968,] -0.05298422 -0.006193927 -0.02805521 -0.3218520 -6.853527e-04 #> [1969,] -0.02775432 -0.002500487 -0.01345093 -0.2651492 -7.658924e-05 #> [1970,]  0.49882068 -0.237056477  0.58078196  0.3938504  1.068383e-01 #> [1971,] -0.17393736 -0.036122142 -0.11226282  0.5511702 -4.892422e-02 #> [1972,] -0.14832347 -0.028167633 -0.09284071 -0.4297849 -2.696847e-02 #> [1973,] -0.65479307 -0.423416113 -0.59443405  0.3340316  1.486781e-02 #> [1974,]  0.65218080  0.883516580 -0.26270581 -0.5431824 -5.150381e-01 #> [1975,]  0.25027388 -0.576829797 -0.70923955 -0.7060246  3.394268e-03 #> [1976,] -0.71401091  0.484218519  0.33434530  0.3096123  6.128298e-03 #> [1977,] -0.05930492 -0.007272425 -0.03192125 -0.3325579 -1.010863e-03 #> [1978,] -0.23960910 -0.060746538 -0.16541711 -0.4897069  8.394279e-01 #> [1979,] -0.55905631 -0.298588156 -0.48333116 -0.6285288  5.308871e-02 #> [1980,]  0.06662437  0.083346013  0.06842556  0.1817525  2.237520e-05 #> [1981,] -0.03751372 -0.003806364 -0.01892696 -0.2905889 -2.111946e-04 #> [1982,]  0.85860961 -0.026166029 -0.08771746  0.5757941 -2.257434e-02 #> [1983,]  0.77507735 -0.054687339 -0.15312622 -0.4813246 -1.275993e-01 #> [1984,]  0.32722988 -0.450236181  0.38411263  0.3267713  1.147510e-02 #> [1985,]  0.05180192  0.059543099  0.05170140  0.1661112  9.363911e-06 #> [1986,] -0.32477831 -0.102852259 -0.24102839  0.4672722  5.686183e-01 #> [1987,] -0.13399271 -0.024100443 -0.08231569 -0.4180177 -1.850343e-02 #> [1988,] -0.10247429 -0.016103230  0.93991657  0.6117603 -6.955751e-03 #> [1989,] -0.05646677 -0.006781031 -0.03017617  0.6721317 -8.533296e-04 #> [1990,]  0.28582184 -0.516058402 -0.66585789 -0.6904591  6.112065e-03 #> [1991,] -0.14897395 -0.028358707 -0.09332436  0.5697019 -2.741136e-02 #> [1992,] -0.23853941 -0.060294013 -0.16451426 -0.4891084 -1.580069e-01 #> [1993,] -0.34102780 -0.112358486 -0.25626383 -0.5401406  5.094527e-01 #> [1994,] -0.38583244 -0.141305952  0.70044163  0.4403175 -6.442130e-01 #> [1995,]  0.12598019  0.190538574  0.13850027  0.2282440  2.207712e-04 #> [1996,]  0.08856544  0.121295770  0.09386702 -0.7988094  6.111635e-05 #> [1997,]  0.06662437  0.083346013  0.06842556  0.1817525  2.237520e-05 #> [1998,] -0.03751372 -0.003806364 -0.01892696 -0.2905889 -2.111946e-04 #> [1999,] -0.36133368 -0.124965838 -0.27565402  0.4508546  4.371921e-01 #> [2000,]  0.21483625 -0.640824380 -0.75275436  0.2774471  1.778677e-03 #>             Item_12    Item_13    Item_14       Item_15     Item_16     Item_17 #>    [1,]  0.42404606 -0.5943784  0.4969974  0.6247440459  0.52967529  0.54971051 #>    [2,] -0.45314949 -0.5527853 -0.4899754 -0.1594105243 -0.39365612 -0.37123400 #>    [3,] -0.69579413 -0.6368148 -0.5167374  0.3304379762 -0.55265726 -0.53639335 #>    [4,]  0.38431780 -0.6080068 -0.5073545  0.5311078449  0.50355866 -0.47748546 #>    [5,] -0.19072502 -0.4449594  0.5430704 -0.0099895231 -0.22640277 -0.20422873 #>    [6,] -0.39522159  0.4675066 -0.4837189 -0.0982653449 -0.35836999 -0.33530822 #>    [7,] -0.51991721  0.4245542 -0.4970314 -0.2615116122 -0.43478501  0.58651264 #>    [8,]  0.19635071  0.3182217 -0.5320424  0.1126578203  0.35889535 -0.62981340 #>    [9,]  0.59431088  0.4637708  0.5151327 -0.1076546833  0.63525247 -0.34177751 #>   [10,]  0.27549001  0.3521418  0.4795871 -0.7372835375  0.42558869  0.44069806 #>   [11,] -0.59178340  0.4002237  0.4952796 -0.4115130448 -0.48062179  0.53900230 #>   [12,] -0.49311551 -0.5663984  0.5057962 -0.2161312335  0.58183669  0.60363484 #>   [13,] -0.61424299  0.3924922 -0.5071942  0.5346377780 -0.49547850  0.52351928 #>   [14,] -0.05028985 -0.3240520 -0.4181986 -0.0003096861 -0.10203105 -0.08711415 #>   [15,]  0.15365675  0.2964598  0.4601690  0.0597104717  0.31684038 -0.67440494 #>   [16,]  0.05763077  0.2246223 -0.5681782  0.0049894044  0.18879379  0.19012543 #>   [17,] -0.36824394 -0.5226798 -0.4807080 -0.0770284704 -0.34188554  0.68136209 #>   [18,] -0.10968203 -0.3906826 -0.4400097 -0.0022164153 -0.16249236 -0.14308461 #>   [19,]  0.40980503 -0.5992330 -0.5045472  0.5921947456  0.52041760 -0.45991593 #>   [20,]  0.51658732 -0.5631113  0.5068199 -0.2011760540 -0.41218833 -0.39022522 #>   [21,]  0.06842893 -0.7641955  0.4365700  0.0076311209  0.20722482  0.20952988 #>   [22,]  0.60039869  0.4659391  0.5157994 -0.1021116839 -0.36103923  0.66198546 #>   [23,]  0.51946853 -0.5621334 -0.4928759 -0.1968840549  0.58958230 -0.38840727 #>   [24,] -0.41279605 -0.5387458 -0.4856417 -0.1144229281 -0.36907462 -0.34617300 #>   [25,] -0.39780625 -0.5334193 -0.4840034 -0.1005210931 -0.35994538 -0.33690526 #>   [26,] -0.46893104 -0.5581862 -0.4916496 -0.1802836160 -0.40330341 -0.38111014 #>   [27,] -0.08838273  0.6287683  0.5662057 -0.0012686329 -0.14287678 -0.12470243 #>   [28,]  0.17993808  0.3102442  0.4651358  0.0899126992  0.34337563  0.35373717 #>   [29,]  0.52253639 -0.5610911  0.5074482 -0.1923883211 -0.40853404  0.61352594 #>   [30,]  0.05307805  0.2194407  0.4295691  0.0040754852  0.18048441  0.18139601 #>   [31,]  0.28701732  0.3566351  0.4810885 -0.7107110599  0.43444616 -0.54996781 #>   [32,] -0.32400094  0.4941519  0.5244416 -0.0502119252  0.68544455 -0.29117079 #>   [33,]  0.26509562 -0.6519877 -0.5218000 -0.7603985452  0.41744493  0.43210862 #>   [34,]  0.67908567  0.4953681  0.5248132 -0.0486630510  0.68737161 -0.28924248 #>   [35,]  0.82789617  0.5656858  0.5463524 -0.0074730745 -0.21277933 -0.19104736 #>   [36,]  0.22790385  0.3325120 -0.5270747  0.1648273809 -0.61309662  0.39984004 #>   [37,] -0.35409082  0.4825932  0.5209069  0.9325511929  0.66680685 -0.30987823 #>   [38,] -0.44562815 -0.5501961 -0.4891743 -0.1501351464 -0.38906790  0.63345518 #>   [39,] -0.48991389 -0.5653147  0.5061339  0.7888893386 -0.41618959  0.60566395 #>   [40,] -0.25222686 -0.4756216 -0.4663269  0.9772387552 -0.26863932 -0.24554800 #>   [41,] -0.19962917  0.5502140  0.5415863 -0.0113861242  0.76724337 -0.21040169 #>   [42,]  0.56685749 -0.5458724 -0.4878385 -0.1356607309  0.61853948  0.64121851 #>   [43,]  0.08875079 -0.7462436 -0.5560987  0.0146334539  0.23812671  0.24216583 #>   [44,] -0.11541718  0.6045994  0.5584974 -0.0025334074 -0.16750602 -0.14781417 #>   [45,] -0.66679813 -0.6261078  0.4867822 -0.5973596233 -0.53164416  0.48567925 #>   [46,]  0.25615437 -0.6556046  0.4769790 -0.7795645867 -0.58968814  0.42457970 #>   [47,]  0.19743231  0.3187329 -0.5318628  0.1142630706  0.35989329  0.37124396 #>   [48,] -0.48252931  0.4371885  0.5069132 -0.1998529319 -0.41164530  0.61033241 #>   [49,]  0.32800855 -0.6279977  0.4861639  0.3895445292 -0.53534515 -0.51820405 #>   [50,]  0.54249452  0.4457199  0.5095616 -0.1649786851 -0.39631592 -0.37395468 #>   [51,] -0.35231435  0.4832619 -0.4788884 -0.0663165545 -0.33209925  0.69122259 #>   [52,]  0.32121353  0.3695122 -0.5146526 -0.6275080915  0.45977273  0.47667046 #>   [53,]  0.17359428  0.3070406  0.4639920  0.0819290803 -0.66282625  0.34716123 #>   [54,]  0.28386487  0.3554149  0.4806815  0.2819315215  0.43204125  0.44749873 #>   [55,]  0.06842893 -0.7641955  0.4365700  0.0076311209  0.20722482  0.20952988 #>   [56,]  0.37473731 -0.6113409  0.4915731  0.5074164797  0.49711330 -0.48421521 #>   [57,]  0.84045899  0.5733564  0.5487263 -0.0060542087 -0.20329473 -0.18191559 #>   [58,] -0.17174926  0.5658965  0.5464175 -0.0074300987 -0.21251509 -0.19079245 #>   [59,] -0.14285180  0.5842828 -0.4478769 -0.0044757358 -0.19026242 -0.16943083 #>   [60,]  0.71041185 -0.4919074 -0.4713007 -0.0349651674 -0.29286162 -0.26952992 #>   [61,] -0.26010929  0.5208241  0.5325872 -0.0250100316 -0.27382109 -0.25066165 #>   [62,]  0.47742223 -0.5763425 -0.4973125 -0.2663438921  0.56355399 -0.41520165 #>   [63,] -0.14267404 -0.4155957 -0.4478390 -0.0044606611 -0.19012066 -0.16929543 #>   [64,] -0.62309494  0.3894155  0.4918167  0.5128043313 -0.50142275  0.51731393 #>   [65,] -0.28177657 -0.4886130 -0.4702949 -0.0320734878 -0.28786326  0.73543489 #>   [66,]  0.05763077  0.2246223 -0.5681782  0.0049894044  0.18879379  0.19012543 #>   [67,]  0.27564530  0.3522029  0.4796076 -0.7369318391  0.42570920  0.44082511 #>   [68,]  0.27365745 -0.6485806  0.4793450  0.2585798642  0.42416405 -0.56080404 #>   [69,]  0.18057329 -0.6894389 -0.5347514  0.0907367994 -0.65600990  0.35438863 #>   [70,]  0.12841545  0.2816827 -0.5452973  0.0375457627  0.28891318  0.29597135 #>   [71,] -0.19178790  0.5544561 -0.4571095 -0.0101493307 -0.22716634  0.79503028 #>   [72,] -0.20493959  0.5474076 -0.4592755 -0.0122836867 -0.23650170 -0.21404748 #>   [73,] -0.86779049  0.2840214  0.4555783  0.0404726737 -0.70670880  0.30061476 #>   [74,]  0.68160057  0.4963636 -0.4748826 -0.0474290994 -0.31105583  0.71233024 #>   [75,]  0.55559777 -0.5497730  0.5109565 -0.1486634513 -0.38832050 -0.36578147 #>   [76,] -0.25598653 -0.4773256  0.5331525 -0.0238137343 -0.27111615 -0.24799111 #>   [77,] -0.29765150  0.5047460 -0.4723226 -0.0381584328 -0.29798967 -0.27463200 #>   [78,] -0.41741621 -0.5403738 -0.4861431 -0.1189993620 -0.37188698  0.65096757 #>   [79,] -0.68600604  0.3668437  0.4844699 -0.6454875967  0.45453417  0.47116722 #>   [80,]  0.71210263  0.5088011  0.5289156 -0.0343227877 -0.29178237 -0.26845722 #>   [81,]  0.66988847  0.4917621  0.5237113 -0.0533928079  0.68163878  0.70501764 #>   [82,]  0.07277536  0.2399409  0.4382897  0.0088955277  0.21420736  0.21689430 #>   [83,]  0.65881987  0.4874903  0.5224052 -0.0595585571 -0.32522624 -0.30186888 #>   [84,] -0.41528886  0.4603750 -0.4859124 -0.1168746365  0.62940793 -0.34771559 #>   [85,] -0.43123752 -0.5452096 -0.4876340 -0.1335510095  0.61969947  0.64240101 #>   [86,]  0.21985575  0.3289811 -0.5282923  0.1504834370  0.37996399 -0.60750232 #>   [87,]  0.57112644  0.4556140 -0.4873798 -0.1309685881 -0.37886124  0.64386775 #>   [88,] -0.42837985  0.4557862 -0.4873267 -0.1304342004 -0.37856067  0.64417399 #>   [89,] -0.35129083  0.4836478  0.5212297 -0.0656710825  0.66853133 -0.30814300 #>   [90,]  0.53458412 -0.5569866  0.5087227  0.8245341937 -0.40115180  0.62109442 #>   [91,]  0.44865925 -0.5860417  0.4996365  0.6777106176 -0.45455814 -0.43393192 #>   [92,] -0.36967449 -0.5232077  0.5191303 -0.0780538353 -0.34276211 -0.31952247 #>   [93,]  0.35113964 -0.6196605 -0.5111175  0.4480597260  0.48094974  0.49887887 #>   [94,] -0.05432638 -0.3302271  0.5797095 -0.0003744897 -0.10685897 -0.09150376 #>   [95,] -0.47591145  0.4394366 -0.4923878 -0.1901427976  0.59241835 -0.38549692 #>   [96,] -0.07284717 -0.3544979 -0.4283573 -0.0007772321 -0.12732651 -0.11027618 #>   [97,] -0.47686244  0.4391133 -0.4924883 -0.1915162920 -0.40816512  0.61390447 #>   [98,] -0.28587686 -0.4903489  0.5291751 -0.0335671893 -0.29049077  0.73282603 #>   [99,] -0.21207994  0.5437135 -0.4604090 -0.0135708103 -0.24148847  0.78108960 #>  [100,] -0.19477759 -0.4471756  0.5423887 -0.0106087531  0.77069344 -0.20704788 #>  [101,]  0.86739915 -0.4085128  0.5543740 -0.0036620253 -0.18197458  0.83846964 #>  [102,]  0.16160903  0.3007801 -0.5382613  0.0680568698 -0.67488715  0.33436997 #>  [103,] -0.05446365 -0.3304304  0.5796409 -0.0003768280 -0.10702049 -0.09165088 #>  [104,] -0.33268119  0.4907640 -0.4765938 -0.0547770269  0.68004185 -0.29658303 #>  [105,] -0.10286451 -0.3848128 -0.4381447 -0.0018751945  0.84360489 -0.13734963 #>  [106,] -0.18478649  0.5583501  0.5440893 -0.0091298224 -0.22210983 -0.20006703 #>  [107,]  0.05307805  0.2194407  0.4295691  0.0040754852  0.18048441  0.18139601 #>  [108,] -0.33590145  0.4895187 -0.4769745 -0.0565515845 -0.32195664  0.70141272 #>  [109,] -0.12537134 -0.4031682 -0.4439496 -0.0031530144 -0.17598171 -0.15583716 #>  [110,] -0.10424741  0.6139720 -0.4385315 -0.0019413868 -0.15764463 -0.13852339 #>  [111,] -0.48098112  0.4377140  0.5070766 -0.1975494182 -0.41069393  0.61130917 #>  [112,] -0.46536119 -0.5569679 -0.4912716 -0.1753916151  0.59888166 -0.37887130 #>  [113,] -0.44851615 -0.5511915  0.5105178 -0.1536463474 -0.39082906 -0.36834413 #>  [114,] -0.19661772  0.5518289  0.5420826 -0.0108989055 -0.23061843  0.79167740 #>  [115,] -0.07241369 -0.3539909  0.5718089 -0.0007656577 -0.12687404 -0.10985847 #>  [116,] -0.31675931 -0.5029850  0.5253164 -0.0466377208 -0.31002906 -0.28664328 #>  [117,]  0.11735211 -0.7254180  0.4520183  0.0297839251  0.27572820 -0.71800977 #>  [118,] -0.16947438  0.5672560  0.5468377 -0.0071585237 -0.21081517  0.81084682 #>  [119,] -0.03810590 -0.3025592 -0.4107716 -0.0001573830 -0.08637339 -0.07298802 #>  [120,]  0.07337579 -0.7595019 -0.5614802  0.0090797295  0.21515438  0.21789361 #>  [121,]  0.33074570  0.3729997 -0.5135096 -0.6035588625  0.46660867 -0.51615375 #>  [122,] -0.49123807 -0.5657631 -0.4940058 -0.2131768674  0.58299435  0.60482510 #>  [123,]  0.20601407  0.3227317  0.4695370  0.1274647451 -0.63228974  0.37952450 #>  [124,] -0.76008948 -0.6623463  0.4746874  0.1874926678  0.39702391  0.41054177 #>  [125,] -0.27862635  0.5127309  0.5301155 -0.0309612446  0.71416150 -0.26255628 #>  [126,]  0.13255905 -0.7157655  0.4556579  0.0407493108 -0.70630892 -0.69896110 #>  [127,] -0.43797007 -0.5475482 -0.4883560 -0.1411230293 -0.38440082 -0.36178036 #>  [128,] -0.18090664  0.5605541  0.5447686 -0.0085977159 -0.21927970  0.80267256 #>  [129,] -0.43096394  0.4548856  0.5123954 -0.1332501420  0.61986605  0.64257079 #>  [130,]  0.33355788  0.3740213 -0.5131756 -0.5964603393  0.46860861 -0.51405560 #>  [131,]  0.09402861  0.2579245 -0.5544429  0.0169336486  0.24551257  0.24998064 #>  [132,]  0.27418071  0.3516259  0.4794142  0.2597584248  0.42457132 -0.56037461 #>  [133,]  0.36420816  0.3849672 -0.5096183 -0.5189376597 -0.51004588  0.50830184 #>  [134,]  0.43775304  0.4102709 -0.5015288 -0.3452118001  0.53848956 -0.44113894 #>  [135,] -0.31698319 -0.5030740  0.5252892 -0.0467451298  0.68983072 -0.28678344 #>  [136,]  0.47267429  0.4220574 -0.4978145  0.7248864326  0.56058424  0.58173187 #>  [137,]  0.12750209  0.2811127 -0.5455113  0.0368617157  0.28784873 -0.70515756 #>  [138,]  0.06781735  0.2352072  0.4363201  0.0074627736  0.20622368  0.20847453 #>  [139,]  0.10672165  0.2673087  0.4492266  0.0233615904  0.26240436  0.26786881 #>  [140,]  0.29446642  0.3594946 -0.5179604  0.3069205801  0.44007899  0.45596353 #>  [141,] -0.19949142  0.5502875 -0.4583911 -0.0113634990  0.76734094 -0.21030678 #>  [142,]  0.23139288 -0.6659788  0.4734438  0.1712598074  0.38987212  0.40298011 #>  [143,] -0.56324071  0.4099345  0.4983648  0.6526552438 -0.46214651 -0.44179878 #>  [144,] -0.09998658 -0.3822416 -0.4373249 -0.0017422315 -0.15377300 -0.13488909 #>  [145,] -0.65101584 -0.6204291 -0.5113672  0.4425998988  0.47945122 -0.50269050 #>  [146,]  0.45403091  0.4157717  0.5002085 -0.3113359001  0.54884781  0.56959535 #>  [147,] -0.86041498 -0.7115589  0.4572221  0.0465640494  0.30160985  0.30943855 #>  [148,]  0.82929959 -0.4334784 -0.4533893 -0.0073039975 -0.21173233 -0.19003746 #>  [149,]  0.62851274 -0.5238753 -0.4810743 -0.0793687002 -0.34387242  0.67935680 #>  [150,]  0.61611336 -0.5284048 -0.4824635 -0.0888413781  0.64854563  0.67169450 #>  [151,]  0.55138939  0.4487759 -0.4894923 -0.1537622416 -0.39088667 -0.36840300 #>  [152,] -0.59292843  0.3998318  0.4951546  0.5858051085 -0.48137193  0.53822146 #>  [153,]  0.70077987 -0.4958990 -0.4725195 -0.0388051908  0.70101622 -0.27562205 #>  [154,]  0.22441116  0.3309884  0.4724007 -0.8414828282 -0.61609221  0.39667092 #>  [155,] -0.13511758 -0.4103203  0.5538084 -0.0038515379 -0.18403123 -0.16348797 #>  [156,] -0.32643774 -0.5068039  0.5241495 -0.0514619496 -0.31607456  0.70730831 #>  [157,]  0.14198574  0.2898459  0.4577416  0.0486635084 -0.69573440  0.31225573 #>  [158,] -0.20986975 -0.4551524  0.5399388 -0.0131623116 -0.23995068 -0.21740980 #>  [159,] -0.46349541  0.4436696  0.5089262 -0.1728748218  0.60002298 -0.37770234 #>  [160,] -0.26202802  0.5199692 -0.4676740 -0.0255821738 -0.27507614 -0.25190158 #>  [161,]  0.36907854  0.3866787 -0.5090654  0.4932872578 -0.50672414 -0.48822517 #>  [162,]  0.06797535  0.2353619  0.4363849  0.0075060424  0.20648278  0.20874764 #>  [163,]  0.11589351 -0.7263881  0.4516485  0.0288440515 -0.72605991  0.28009461 #>  [164,] -0.38046977 -0.5271628  0.5179175 -0.0861459959  0.65063296 -0.32619446 #>  [165,] -0.05446365 -0.3304304  0.5796409 -0.0003768280 -0.10702049 -0.09165088 #>  [166,]  0.11060877 -0.7299756 -0.5497259  0.0255962403  0.26735669  0.27311659 #>  [167,]  0.29745951  0.3606344 -0.5175821 -0.6859045462 -0.55767685 -0.54167441 #>  [168,]  0.48460480  0.4260786 -0.4965539  0.7465661327 -0.43196683  0.58941990 #>  [169,] -0.38502386 -0.5288172  0.5174099 -0.0897531477  0.64785122 -0.32900807 #>  [170,]  0.44822496  0.4138117 -0.5004098 -0.3231847934  0.54516598 -0.43421772 #>  [171,] -0.38488616 -0.5287673  0.5174252 -0.0896423536  0.64793530 -0.32892300 #>  [172,]  0.45239348  0.4152191  0.5000343 -0.3146508072  0.54781081  0.56852166 #>  [173,] -0.32336394  0.4944024 -0.4754818 -0.0498891400 -0.31415801  0.70922699 #>  [174,] -0.04962511 -0.3229964 -0.4178392 -0.0002997328 -0.10122074 -0.08637892 #>  [175,]  0.09923294 -0.7381256  0.4471112  0.0194122963 -0.74742063  0.25746191 #>  [176,]  0.06718162  0.2345821  0.4360582  0.0072902372  0.20517795  0.20737233 #>  [177,]  0.69387252 -0.4987164 -0.4733799 -0.0417557557  0.69665143 -0.27997275 #>  [178,]  0.84046542 -0.4266395  0.5487276 -0.0060535357 -0.20328981 -0.18191086 #>  [179,]  0.30921114  0.3650621 -0.5161174 -0.6572999164 -0.54896666 -0.53251249 #>  [180,] -0.61486562 -0.6077236 -0.5072635  0.5331116845  0.50410513  0.52308481 #>  [181,]  0.83397203 -0.4306584  0.5474828 -0.0067605740 -0.20822430 -0.18665707 #>  [182,] -0.48112450  0.4376653  0.5070615 -0.1977619254 -0.41078202  0.61121874 #>  [183,] -0.24786630  0.5263752  0.5342834 -0.0215851992  0.73424594 -0.24270473 #>  [184,]  0.65522050 -0.5138839  0.5219849 -0.0616804948  0.67254858  0.69589596 #>  [185,] -0.12672405  0.5958138 -0.4442694 -0.0032443571 -0.17711296 -0.15691056 #>  [186,]  0.06797535  0.2353619  0.4363849  0.0075060424  0.20648278  0.20874764 #>  [187,] -0.46147347 -0.5556389  0.5091405  0.8298218036 -0.39874069 -0.37643642 #>  [188,] -0.07778080  0.6398982 -0.4301883 -0.0009168456  0.86759962 -0.11496842 #>  [189,] -0.48567028  0.4361231  0.5065816 -0.2045865592 -0.41357684  0.60834866 #>  [190,]  0.28825433  0.3571123  0.4812474  0.2921934539  0.43538636  0.45102247 #>  [191,] -0.20786632  0.5458828 -0.4597435 -0.0127998992  0.76144770  0.78395399 #>  [192,] -0.05067050  0.6753487 -0.4184024 -0.0003154757 -0.10249304 -0.08753353 #>  [193,] -0.29251652 -0.4931290  0.5283263 -0.0360998051 -0.29472752  0.72861461 #>  [194,]  0.21896305  0.3285850  0.4715707  0.1489354084 -0.62081385  0.39167446 #>  [195,] -0.51705306 -0.5744803 -0.4967289  0.7436244949 -0.43299932 -0.41164504 #>  [196,]  0.65289619  0.4852325 -0.4782854 -0.0630822701 -0.32888661  0.69445356 #>  [197,]  0.18229490 -0.6885835  0.4655527  0.0929930226  0.34564965  0.35614802 #>  [198,] -0.08920075  0.6279553  0.5659438 -0.0012988753 -0.14366319 -0.12543553 #>  [199,]  0.19594232  0.3180282 -0.5321104  0.1120551478 -0.64148220 -0.63021344 #>  [200,] -0.36998660 -0.5233227  0.5190950 -0.0782789739 -0.34295331  0.68028456 #>  [201,]  0.20630189 -0.6771360 -0.5304168  0.1279217991 -0.63203059 -0.62020104 #>  [202,]  0.10908619  0.2689688  0.4498677  0.0247055733  0.26542833  0.27107303 #>  [203,] -0.41594347 -0.5398555 -0.4859834 -0.1175252391  0.62900947 -0.34812076 #>  [204,] -0.20673280  0.5464716 -0.4595629 -0.0125981236  0.76224079  0.78472713 #>  [205,]  0.16289383  0.3014651 -0.5380136  0.0694689887 -0.67357154  0.33576539 #>  [206,] -0.06443529  0.6558130 -0.4249587 -0.0005716876 -0.11833581 -0.10199859 #>  [207,]  0.79295200 -0.4536924  0.5403868 -0.0126539961 -0.23797989 -0.21548797 #>  [208,] -0.26254327  0.5197403  0.5322561 -0.0257375012  0.72458725 -0.25223424 #>  [209,] -0.42604273  0.4566022 -0.4870751 -0.1279275390 -0.37713791 -0.35437674 #>  [210,]  0.17260307  0.3065334 -0.5361896  0.0807219889 -0.66380627  0.34612199 #>  [211,] -0.49830855  0.4318455  0.5052485 -0.2244555123 -0.42136959  0.60033674 #>  [212,]  0.40309428  0.3984687 -0.5052805  0.5764323422  0.51601663 -0.46449763 #>  [213,] -0.53075248 -0.5790974 -0.4981771 -0.2815588384 -0.44156374  0.57951278 #>  [214,] -0.26823002  0.5172325 -0.4685099 -0.0275002703  0.72088315  0.74410271 #>  [215,]  0.50539906 -0.5669010  0.5056395 -0.2184894455 -0.41907982 -0.39730767 #>  [216,]  0.06781735  0.2352072  0.4363201  0.0074627736  0.20622368  0.20847453 #>  [217,] -0.14338406  0.5839197 -0.4479901 -0.0045210818 -0.19068650  0.83016408 #>  [218,]  0.17592698  0.3082270 -0.5355837  0.0848127588  0.33946826  0.34959427 #>  [219,]  0.50361829  0.4324968 -0.4945483 -0.2213406861  0.57982080  0.60156149 #>  [220,] -0.37231386 -0.5241792 -0.4811675 -0.0799740728 -0.34437854 -0.32115418 #>  [221,]  0.31153113  0.3659277 -0.5158319  0.3484190014 -0.54726543  0.46927586 #>  [222,] -0.46085499  0.4445727 -0.4907939 -0.1693597101 -0.39836262  0.62395062 #>  [223,] -0.47635048 -0.5607127 -0.4924342  0.8092240295 -0.40785099  0.61422676 #>  [224,]  0.21647180 -0.6725253 -0.5288137  0.1446612830  0.37700663 -0.61063244 #>  [225,]  0.05307805  0.2194407  0.4295691  0.0040754852  0.18048441  0.18139601 #>  [226,]  0.50827731 -0.5659271  0.5059431  0.7860633139  0.58269560 -0.39548204 #>  [227,]  0.72223832  0.5131014  0.5302286 -0.0306612363 -0.28528180 -0.26200420 #>  [228,] -0.11031203  0.6087897  0.5598231 -0.0022498690 -0.16304809 -0.14360824 #>  [229,]  0.52412175  0.4394479 -0.4923843 -0.1900949660 -0.40756128 -0.38547602 #>  [230,] -0.08959273 -0.3724322 -0.4341810 -0.0013135305 -0.14403898 -0.12578597 #>  [231,] -0.23427934 -0.4672525  0.5362321 -0.0182132090 -0.25667130 -0.23377334 #>  [232,]  0.19874708  0.3193522  0.4683546  0.1162320685  0.36110245  0.37252503 #>  [233,] -0.21333765 -0.4569282 -0.4606058 -0.0138073905 -0.24236130 -0.21976252 #>  [234,]  0.08357530 -0.7505071  0.4421903  0.0125785860  0.23065068  0.23426064 #>  [235,]  0.46605754 -0.5801726  0.5014851 -0.2876455409 -0.44356690 -0.42255756 #>  [236,]  0.13716784  0.2870103 -0.5433085  0.0445085226 -0.70108941 -0.69342472 #>  [237,] -0.05434628 -0.3302566 -0.4203004 -0.0003748281 -0.10688239 -0.09152509 #>  [238,]  0.31455308 -0.6329488  0.4845382 -0.6441012121  0.45494182 -0.52840441 #>  [239,] -0.22414312 -0.4623371  0.5377367 -0.0159675282  0.75020444 -0.22703193 #>  [240,]  0.15873420  0.2992345 -0.5388215  0.0649615756  0.32214835  0.33122552 #>  [241,] -0.70061729 -0.6386359  0.4826598  0.3187309822 -0.55624050 -0.54016293 #>  [242,] -0.23016153 -0.4652732 -0.4631622 -0.0172742514 -0.25388891 -0.23104323 #>  [243,]  0.08945377 -0.7456784  0.4441268  0.0149277158  0.23912389  0.24322065 #>  [244,] -0.17785955  0.5623093 -0.4546900  0.9918043277 -0.21704233 -0.19516395 #>  [245,]  0.63153841 -0.5227602 -0.4807326 -0.0771837796 -0.34201892 -0.31877250 #>  [246,] -0.17678150 -0.4370644 -0.4544968 -0.0080567022 -0.21624758  0.80560407 #>  [247,] -0.19253662 -0.4459542 -0.4572357 -0.0102630058 -0.22770336 -0.20549100 #>  [248,] -0.83461812 -0.6972182  0.4624618  0.0722544734 -0.67103973  0.33845071 #>  [249,] -0.68730381  0.3663614  0.4843110  0.3512987538  0.45358669 -0.52982851 #>  [250,]  0.14492263  0.2915431 -0.5416327  0.0513112038  0.30748140  0.31566704 #>  [251,] -0.34704106  0.4852563 -0.4782781 -0.0630440976  0.67115212  0.69449250 #>  [252,] -0.46569988 -0.5570835  0.5086926 -0.1758514233 -0.40132557 -0.37908358 #>  [253,]  0.35010286 -0.6200300 -0.5112375  0.4454338599  0.48022944 -0.50187544 #>  [254,] -0.23489389  0.5324541  0.5361424 -0.0183565485 -0.25708531 -0.23417981 #>  [255,]  0.08875079 -0.7462436 -0.5560987  0.0146334539  0.23812671  0.24216583 #>  [256,] -0.51428606  0.4264526  0.5035632 -0.2514786841 -0.43127652 -0.40986823 #>  [257,] -0.67745356 -0.6299977 -0.5144917  0.3758281348  0.46073403  0.47767994 #>  [258,]  0.25307441  0.3431346  0.4765520 -0.7860022999  0.40782592  0.42195466 #>  [259,]  0.61611346  0.4715952 -0.4824635 -0.0888412930  0.64854570 -0.32830544 #>  [260,]  0.76326717 -0.4684208  0.5358747 -0.0187905313 -0.25832232 -0.23539466 #>  [261,]  0.25750972  0.3449477 -0.5228342  0.2232955938  0.41140104  0.42572965 #>  [262,] -0.23115436 -0.4657526 -0.4633089 -0.0174972468 -0.25456109 -0.23170253 #>  [263,]  0.16271512 -0.6986300 -0.5380479  0.0692714995  0.32624580  0.33557165 #>  [264,] -0.23593320  0.5319591  0.5359909 -0.0186008867  0.74221522 -0.23486667 #>  [265,]  0.05763077  0.2246223 -0.5681782  0.0049894044  0.18879379  0.19012543 #>  [266,]  0.14272540  0.2902755  0.4579002  0.0493220736  0.30507889  0.31311846 #>  [267,]  0.36428494  0.3849943  0.4903905 -0.5187445284 -0.50999337 -0.49164324 #>  [268,]  0.38428045  0.3919802  0.4926414 -0.4689838708  0.50353365 -0.47751156 #>  [269,] -0.04962511 -0.3229964 -0.4178392 -0.0002997328 -0.10122074 -0.08637892 #>  [270,] -0.71582319  0.3555359 -0.5192781  0.2826566195  0.43227979 -0.55224996 #>  [271,]  0.19756196 -0.6812059 -0.5318413  0.1144563654  0.36001272 -0.62862951 #>  [272,]  0.28459089  0.3556964 -0.5192245  0.2836201635  0.43259624 -0.55191656 #>  [273,]  0.68687229  0.4984641 -0.4742410 -0.0449223534  0.69224796 -0.28436809 #>  [274,] -0.11742843  0.6029887 -0.4420111 -0.0026513376 -0.16924088 -0.14945358 #>  [275,] -0.59188408  0.4001892 -0.5047314  0.5882514590 -0.48068772 -0.46106632 #>  [276,]  0.19594281  0.3180284  0.4678897  0.1120558596  0.35851825  0.36978703 #>  [277,] -0.29905750 -0.4958322  0.5275009 -0.0387377425 -0.29888077  0.72448056 #>  [278,] -0.48492294  0.4363765 -0.4933395 -0.2034529481 -0.41311709 -0.39117909 #>  [279,] -0.15239793  0.5779216  0.5501432 -0.0053380349 -0.19778160 -0.17662507 #>  [280,] -0.60019819 -0.6026617  0.4943582 -0.4313916202  0.51384784  0.53324326 #>  [281,]  0.10386106  0.2652656 -0.5515657  0.0217985146 -0.74130308  0.26394108 #>  [282,]  0.25746608  0.3449300  0.4771598  0.2232032597  0.41136602  0.42569268 #>  [283,]  0.20672099  0.3230566  0.4696504  0.1285889689  0.36834642  0.38019823 #>  [284,] -0.15852470 -0.4260036 -0.4510753 -0.0059484493 -0.20251591 -0.18116743 #>  [285,] -0.79470586  0.3224000 -0.5305787  0.1263255727  0.36706121 -0.62116292 #>  [286,]  0.25381911  0.3434402 -0.5233445  0.2155463151 -0.59157162 -0.57740911 #>  [287,]  0.64101831 -0.5192397  0.5203458 -0.0706455129 -0.33620135 -0.31290727 #>  [288,] -0.55029703  0.4143108  0.4997478  0.6798565732 -0.45389545 -0.43324544 #>  [289,]  0.75926658 -0.4703089 -0.4647028 -0.0197612466  0.73899608 -0.23803009 #>  [290,]  0.26067334 -0.6537688 -0.5224006 -0.7699647722 -0.58606775 -0.57159837 #>  [291,] -0.32308919 -0.5054895  0.5245512 -0.0497504204  0.68601345 -0.29060141 #>  [292,] -0.12002322 -0.3990576 -0.4426563 -0.0028088332 -0.17146199 -0.15155459 #>  [293,] -0.36820139  0.4773359  0.5192968 -0.0769981334 -0.34185945  0.68138840 #>  [294,]  0.23190497 -0.6657584 -0.5264805  0.1722146444 -0.60969410  0.40343886 #>  [295,]  0.70085153  0.5041305  0.5274895 -0.0387754613  0.70106160 -0.27557684 #>  [296,]  0.07210329  0.2393133 -0.5619700  0.0086921217  0.21314240  0.21577068 #>  [297,]  0.11540054  0.2732821  0.4515226  0.0285306909 -0.72666702  0.27945103 #>  [298,] -0.35794655 -0.5188528 -0.4795357 -0.0699591082  0.66443492 -0.31226638 #>  [299,] -0.39039549 -0.5307583 -0.4831860 -0.0941607287 -0.35542699 -0.33232656 #>  [300,] -0.12553126  0.5967110  0.5560124 -0.0031637218 -0.17611570 -0.15596427 #>  [301,]  0.20765583  0.3234854 -0.5302001  0.1300842034 -0.63081408 -0.61891272 #>  [302,] -0.29755615 -0.4952147  0.5276894 -0.0381193922 -0.29792921 -0.27457179 #>  [303,]  0.51073007  0.4349034 -0.4937982 -0.2101110905  0.58420713 -0.39392831 #>  [304,]  0.76445242  0.5321426 -0.4639529 -0.0185099471  0.74247464 -0.23461191 #>  [305,] -0.06772648 -0.3483449 -0.4263340 -0.0006474006 -0.12190806 -0.10528176 #>  [306,] -0.08293839 -0.3656599 -0.4319940 -0.0010788558 -0.13756526 -0.11975974 #>  [307,]  0.18716268  0.3138084 -0.5335990 -0.9004479335  0.35029689  0.36107429 #>  [308,] -0.38455230  0.4713538  0.5174624 -0.0893741765  0.64813915  0.67128326 #>  [309,]  0.20151404  0.3206474  0.4688085  0.1204392499  0.36363330  0.37520617 #>  [310,]  0.06781735  0.2352072  0.4363201  0.0074627736  0.20622368  0.20847453 #>  [311,]  0.19948271 -0.6803024  0.4684757  0.1173422069 -0.63822288 -0.62676020 #>  [312,]  0.37429512 -0.6114954 -0.5084767 -0.4936843517 -0.50318574 -0.48452760 #>  [313,]  0.27010208 -0.6499890  0.4788723  0.2506279623  0.42138667 -0.56373306 #>  [314,]  0.55691174  0.4506808  0.5110968 -0.1470984175  0.61248044 -0.36496358 #>  [315,]  0.15812104  0.2989025 -0.5389420  0.0643128623  0.32151230 -0.66944916 #>  [316,]  0.27991677 -0.6461224 -0.5198319 -0.7271887336  0.42901107  0.44430564 #>  [317,] -0.14410049 -0.4165674 -0.4481419 -0.0045826171 -0.19125639 -0.17038042 #>  [318,] -0.25497901  0.5231295  0.5332915 -0.0235281326 -0.27045337 -0.24733715 #>  [319,]  0.87257065  0.5952864 -0.4444349 -0.0032926847 -0.17770094 -0.15746872 #>  [320,] -0.32965009  0.4919418 -0.4762338 -0.0531471992 -0.31807424 -0.29469479 #>  [321,] -0.05028985 -0.3240520 -0.4181986 -0.0003096861 -0.10203105 -0.08711415 #>  [322,]  0.14424300  0.2911524 -0.5417765  0.0506906848  0.30674041  0.31488100 #>  [323,] -0.29658919 -0.4948161 -0.4721889  0.9622747706 -0.29731580 -0.27396106 #>  [324,]  0.65420616  0.4857301  0.5218668 -0.0622891667 -0.32807791  0.69526640 #>  [325,]  0.62407295  0.4744956 -0.4815738 -0.0826634256 -0.34658966 -0.32338740 #>  [326,] -0.73742466  0.3469991  0.4778585  0.2341291650 -0.58455336 -0.57000005 #>  [327,] -0.77000803  0.3334167  0.4732363  0.1686617158 -0.61131707  0.40172237 #>  [328,]  0.42399105 -0.5943971 -0.5030085 -0.3753791740  0.52963973 -0.45032644 #>  [329,]  0.57752546 -0.5421494  0.5133098 -0.1241732119 -0.37496590 -0.35216525 #>  [330,] -0.06940541 -0.3504028 -0.4270122 -0.0006883260 -0.12370269 -0.10693403 #>  [331,]  0.63922335 -0.5199095  0.5201407 -0.0718484175 -0.33730415  0.68598164 #>  [332,]  0.35731569 -0.6174668 -0.5104060 -0.5363159358 -0.51477788 -0.49664858 #>  [333,] -0.19616840  0.5520714  0.5421571 -0.0108275311 -0.23029847 -0.20801164 #>  [334,] -0.33028325  0.4916953 -0.4763091 -0.0534844432 -0.31846800 -0.29508937 #>  [335,] -0.14268053  0.5843998 -0.4478404 -0.0044612110 -0.19012584 -0.16930038 #>  [336,] -0.57592648  0.4056310 -0.5029996  0.6248055338  0.52969304  0.54972895 #>  [337,]  0.46694173  0.4201254 -0.4984213  0.7140499070 -0.44301132 -0.42198326 #>  [338,] -0.27750991  0.5132094  0.5302616 -0.0305743039 -0.28511963  0.73815661 #>  [339,]  0.56182407  0.4523805 -0.4883780 -0.1413596842  0.61547377 -0.36190832 #>  [340,]  0.09923294 -0.7381256  0.4471112  0.0194122963 -0.74742063  0.25746191 #>  [341,]  0.32733782  0.3717574  0.4860837 -0.6121433065  0.46417497  0.48129229 #>  [342,]  0.14834577 -0.7065073 -0.5409163  0.0545087184  0.31118510  0.31959596 #>  [343,]  0.70376276 -0.4946709 -0.4721445 -0.0375825561 -0.29709244  0.72626130 #>  [344,] -0.43913898 -0.5479531 -0.4884811  0.8575291228 -0.38511295 -0.36250700 #>  [345,] -0.77650608 -0.6694139 -0.5277380  0.1568815980 -0.61688292  0.39583430 #>  [346,] -0.61492556  0.3922556 -0.5072702 -0.4670353309  0.50406503  0.52304296 #>  [347,] -0.05432638 -0.3302271  0.5797095 -0.0003744897 -0.10685897 -0.09150376 #>  [348,] -0.63839788  0.3840486 -0.5099153 -0.5254990793 -0.51183068 -0.49356494 #>  [349,] -0.11515005 -0.3951850  0.5585655 -0.0025180127 -0.16727471  0.85240430 #>  [350,] -0.04176308 -0.3095401  0.5867897 -0.0001966343 -0.09126756 -0.07738476 #>  [351,]  0.18380244  0.3121614 -0.5341827  0.0949959478  0.34709594  0.35768124 #>  [352,]  0.19764764  0.3188345  0.4681729  0.1145842104 -0.63990839  0.37145408 #>  [353,]  0.14324388 -0.7094242 -0.5419891  0.0497870185 -0.69435238  0.31372177 #>  [354,]  0.47275184  0.4220836 -0.4978063 -0.2749688267 -0.43936719  0.58178203 #>  [355,] -0.44037105  0.4516203 -0.4886129 -0.1439023077 -0.38586364  0.63672688 #>  [356,] -0.16049344 -0.4272406 -0.4514588 -0.0061545103 -0.20402297  0.81738460 #>  [357,]  0.11042967  0.2699008  0.4502266  0.0254904394  0.26713062  0.27287700 #>  [358,]  0.46843673 -0.5793707  0.5017371 -0.2830979706  0.55792745 -0.42101301 #>  [359,]  0.67202386 -0.5074054 -0.4760343 -0.0522636731 -0.31703262 -0.29365124 #>  [360,]  0.27564530  0.3522029  0.4796076 -0.7369318391  0.42570920  0.44082511 #>  [361,]  0.27370773  0.3514392 -0.5206484  0.2586930386  0.42420321 -0.56076276 #>  [362,]  0.05307805  0.2194407  0.4295691  0.0040754852  0.18048441  0.18139601 #>  [363,] -0.08694645 -0.3697893 -0.4333292 -0.0012166397 -0.14148881 -0.12340936 #>  [364,] -0.38946846 -0.5304241  0.5169166 -0.0933880812  0.64513856  0.66824614 #>  [365,]  0.62151204 -0.5264403 -0.4818608 -0.0846126486 -0.34815571 -0.32496992 #>  [366,]  0.54509077 -0.5533895 -0.4901625 -0.1616424581 -0.39473038 -0.37233265 #>  [367,] -0.31416349 -0.5019501  0.5256325 -0.0454064583 -0.30840198 -0.28501734 #>  [368,] -0.39130980  0.4689123 -0.4832871 -0.0949277329 -0.35598470  0.66710858 #>  [369,]  0.22215224 -0.6700040  0.4720583  0.1545054694  0.38195743 -0.60539277 #>  [370,] -0.10965749 -0.3906620  0.5599969 -0.0022151190 -0.16247069 -0.14306420 #>  [371,]  0.55300177  0.4493315 -0.4893204 -0.1517931138 -0.38990331 -0.36739824 #>  [372,]  0.29669094 -0.6396578  0.4823210  0.3122484197 -0.55825208  0.45772019 #>  [373,] -0.76206765  0.3368164  0.4744013  0.1836566919  0.39537475 -0.59120154 #>  [374,] -0.36406786  0.4788663 -0.4802343 -0.0740962612  0.66067537 -0.31605494 #>  [375,] -0.21280552 -0.4566571  0.5394774 -0.0137069262 -0.24199221  0.78059785 #>  [376,]  0.42089158  0.4045487 -0.5033434  0.6176461306  0.52763382 -0.45241093 #>  [377,]  0.31533621  0.3673417  0.4846338 -0.6421575507  0.45551224  0.47219498 #>  [378,] -0.42496282 -0.5430204 -0.4869587 -0.1267820584 -0.37648053  0.64629272 #>  [379,] -0.14762806  0.5810609 -0.4488806 -0.0048940488  0.80595287 -0.17304888 #>  [380,]  0.14341930  0.2906772  0.4580483  0.0499449438  0.30583979 -0.68607438 #>  [381,]  0.14272540  0.2902755  0.4579002  0.0493220736  0.30507889  0.31311846 #>  [382,] -0.25149350 -0.4752873 -0.4662247 -0.0225601373 -0.26815503 -0.24507056 #>  [383,]  0.57688892  0.4576276 -0.4867589 -0.1248365559  0.62464664 -0.35255966 #>  [384,] -0.05015739 -0.3238425 -0.4181273 -0.0003076868 -0.10186994 -0.08696794 #>  [385,]  0.40364074  0.3986562  0.4947793 -0.4222747203  0.51637597  0.53587659 #>  [386,] -0.86638413 -0.7151233  0.4558975  0.0415929276  0.29489658  0.30231754 #>  [387,] -0.07926008  0.6382742 -0.4307170 -0.0009615973 -0.13389574 -0.11635409 #>  [388,] -0.22655468 -0.4635199 -0.4626254 -0.0164819444 -0.25143965 -0.22864233 #>  [389,] -0.22613252  0.5366866 -0.4625622 -0.0163910148 -0.25115222 -0.22836073 #>  [390,] -0.32834646 -0.5075500  0.5239215 -0.0524581255 -0.31726313 -0.29388215 #>  [391,] -0.05485806  0.6689878  0.5794448 -0.0003835961 -0.10748360 -0.09207279 #>  [392,] -0.63035995 -0.6131244  0.4909981 -0.5053068879 -0.50634231  0.51217392 #>  [393,] -0.12046343  0.6005987  0.5572354 -0.0028361595 -0.17183694 -0.15190950 #>  [394,] -0.48472736 -0.5635572  0.5066811 -0.2031570266 -0.41299679  0.60894448 #>  [395,]  0.28697928  0.3566205 -0.5189164  0.2891997631 -0.56558279  0.45000170 #>  [396,] -0.39641427 -0.5329209 -0.4838503 -0.0993012158  0.64090299 -0.33604515 #>  [397,]  0.06797535  0.2353619  0.4363849  0.0075060424  0.20648278  0.20874764 #>  [398,] -0.43685403  0.4528388  0.5117635 -0.1398453661 -0.38372097 -0.36108678 #>  [399,] -0.22535649  0.5370667 -0.4624458 -0.0162248384  0.74937656  0.77215727 #>  [400,] -0.79426441 -0.6773965  0.4694923  0.1270234166  0.36745934  0.37925875 #>  [401,] -0.28547921 -0.4901812 -0.4707737 -0.0334200152  0.70976366  0.73307876 #>  [402,]  0.06718162  0.2345821  0.4360582  0.0072902372  0.20517795  0.20737233 #>  [403,]  0.51644225 -0.5631605  0.5068046 -0.2013939505  0.58772247  0.60968319 #>  [404,]  0.23533698 -0.6642879 -0.5259765  0.1786840569 -0.60679967 -0.59350043 #>  [405,] -0.42928098 -0.5445280 -0.4874237 -0.1314108604 -0.37910928  0.64361501 #>  [406,] -0.06904210  0.6500390  0.5731333 -0.0006793357 -0.12331587 -0.10657773 #>  [407,] -0.05485806  0.6689878  0.5794448 -0.0003835961 -0.10748360 -0.09207279 #>  [408,] -0.46694818 -0.5575097 -0.4914396 -0.1775539218  0.59791051 -0.37986621 #>  [409,] -0.66763188 -0.6264105  0.4866833  0.4005350231  0.46776340  0.48505775 #>  [410,] -0.13418629  0.5903455 -0.4459833 -0.0037806508 -0.18327190  0.83723501 #>  [411,]  0.05763077  0.2246223 -0.5681782  0.0049894044  0.18879379  0.19012543 #>  [412,] -0.35229600 -0.5167312  0.5211137 -0.0663049398  0.66791205  0.69123396 #>  [413,]  0.83500576 -0.4300265  0.5476783 -0.0066443219 -0.20744345 -0.18590533 #>  [414,] -0.12666464  0.5958583  0.5557446 -0.0032403087 -0.17706338 -0.15686351 #>  [415,] -0.13525096 -0.4104154 -0.4462213 -0.0038617644  0.81586018 -0.16359139 #>  [416,] -0.54184150  0.4171642  0.5006472 -0.3030741482  0.55145722 -0.42770386 #>  [417,]  0.45801351 -0.5828847  0.5006318 -0.3033620472 -0.44863433  0.57220141 #>  [418,]  0.86655282  0.5908764 -0.4458172 -0.0037250292 -0.18266785 -0.16219003 #>  [419,] -0.23541421  0.5322061  0.5360665 -0.0184785726 -0.25743561 -0.23452377 #>  [420,]  0.30095353 -0.6380414 -0.5171433  0.3225312500  0.44492945 -0.53893196 #>  [421,] -0.47690562 -0.5609014  0.5075071  0.8084211692 -0.40819162 -0.38612271 #>  [422,]  0.11735211 -0.7254180  0.4520183  0.0297839251  0.27572820 -0.71800977 #>  [423,]  0.17191386  0.3061797  0.4636836  0.0798890778  0.33551050 -0.65460253 #>  [424,] -0.72259158  0.3528957  0.4798396  0.2670737083  0.42707511 -0.55773493 #>  [425,] -0.39887672  0.4661980 -0.4841210 -0.1014672468 -0.36059771  0.66243324 #>  [426,] -0.44858559 -0.5512155 -0.4894896 -0.1537315367 -0.39087141 -0.36838741 #>  [427,] -0.33322933  0.4905516 -0.4766587 -0.0550759321 -0.32029854 -0.29692432 #>  [428,] -0.71247653  0.3568305  0.4811535  0.2904761974  0.43483109  0.45043764 #>  [429,]  0.13233620  0.2840987 -0.5443928  0.0405728020  0.29343620  0.30076856 #>  [430,] -0.71830088 -0.6454271  0.4804004  0.2769152710  0.43038158  0.44574996 #>  [431,] -0.17107045  0.5663007 -0.4534576 -0.0073483124 -0.21200869 -0.19030399 #>  [432,] -0.11031203  0.6087897  0.5598231 -0.0022498690 -0.16304809 -0.14360824 #>  [433,]  0.46784745  0.4204307  0.5016747 -0.2842200023 -0.44244249  0.57860467 #>  [434,]  0.22882388  0.3329112 -0.5269374  0.1665111419 -0.61231151 -0.59932947 #>  [435,] -0.84996459 -0.7055559  0.4594324  0.0561316475  0.31299606  0.32151704 #>  [436,] -0.08391907 -0.3666850 -0.4323260 -0.0011115884 -0.13853228 -0.12065847 #>  [437,] -0.61665067 -0.6083428 -0.5074624  0.5287279128  0.50290996 -0.47816247 #>  [438,]  0.49267214  0.4287997 -0.4957027 -0.2394476434  0.57304623 -0.40541281 #>  [439,]  0.14321399 -0.7094415  0.4580046  0.0497601406  0.30561487  0.31368702 #>  [440,] -0.38688104  0.4705105 -0.4827964 -0.0912581045 -0.35328252 -0.33015541 #>  [441,] -0.45338695  0.4471332 -0.4900007 -0.1597103195  0.60619894 -0.37138222 #>  [442,] -0.21641739  0.5415114 -0.4610842 -0.0143995271 -0.24449180  0.77815633 #>  [443,]  0.59720395  0.4647997 -0.4845509 -0.1049916595  0.63701450  0.66001095 #>  [444,] -0.19796964 -0.4488982 -0.4581409 -0.0111157162 -0.23157965 -0.20925703 #>  [445,] -0.87768603  0.2778210 -0.5467523  0.0331251188  0.28172190  0.28834517 #>  [446,]  0.10019216  0.2625863  0.4473898  0.0198925891  0.25385980 -0.74118217 #>  [447,]  0.52548883  0.4399130 -0.4922398 -0.1881336774 -0.40672280  0.61538406 #>  [448,] -0.25796397 -0.4782154 -0.4671194 -0.0243819503 -0.27241497  0.75072690 #>  [449,] -0.09862140 -0.3810013  0.5630711 -0.0016813827 -0.15251860  0.86628678 #>  [450,]  0.35164350 -0.6194811  0.4889407  0.4493356102  0.48129946 -0.50075491 #>  [451,]  0.78187542  0.5406530 -0.4613473 -0.0147357345  0.75433126 -0.22299408 #>  [452,]  0.11440175  0.2726109 -0.5487339  0.0279024139  0.27209861  0.27814256 #>  [453,] -0.24658723  0.5269652  0.5344638 -0.0212491331 -0.26490510  0.75813132 #>  [454,]  0.34877958 -0.6205021 -0.5113909  0.4420815969 -0.52069121 -0.50283968 #>  [455,]  0.05307805  0.2194407  0.4295691  0.0040754852  0.18048441  0.18139601 #>  [456,] -0.15918089  0.5735829 -0.4512035 -0.0060165840 -0.20301897 -0.18165065 #>  [457,]  0.60984135  0.4693270 -0.4831598 -0.0939628505  0.64471749  0.66781975 #>  [458,] -0.32547868 -0.5064282  0.5242644  0.9490329221 -0.31547691  0.70790675 #>  [459,]  0.25519273 -0.6559974  0.4768460  0.2184161235 -0.59046269 -0.57623812 #>  [460,] -0.26762658  0.5174970 -0.4684291 -0.0273089516 -0.27872475 -0.25550931 #>  [461,] -0.54622900  0.4156840  0.5001808  0.6881393497 -0.45131672 -0.43057499 #>  [462,]  0.55876219  0.4513204  0.5112945 -0.1449159561  0.61360819 -0.36381223 #>  [463,] -0.09366906 -0.3763830 -0.4354505 -0.0014723195 -0.14790825  0.87060150 #>  [464,] -0.31018197 -0.5003537  0.5261201  0.9564323115 -0.30590139 -0.28252012 #>  [465,]  0.21688063  0.3276574 -0.5287504  0.1453580403  0.37736520  0.38974711 #>  [466,]  0.10548690  0.2664316 -0.5511131  0.0226785255  0.26081078 -0.73381955 #>  [467,]  0.81797755 -0.4400832  0.5445721 -0.0087484038 -0.22009573 -0.19811704 #>  [468,] -0.32723578  0.4928839 -0.4759459 -0.0518766228  0.68342835  0.70681048 #>  [469,]  0.14793444  0.2932600 -0.5410016  0.0541181033  0.31074253  0.31912648 #>  [470,] -0.20640508 -0.4533578  0.5404895 -0.0125402233 -0.23752966  0.78495086 #>  [471,] -0.05432638 -0.3302271  0.5797095 -0.0003744897 -0.10685897 -0.09150376 #>  [472,] -0.12525945  0.5969163  0.5560769 -0.0031455380  0.82411207 -0.15574821 #>  [473,] -0.10371529  0.6144381  0.5616168 -0.0019157380  0.84283539 -0.13807239 #>  [474,]  0.45104386 -0.5852365 -0.5001094  0.6826010523  0.54695527  0.56763569 #>  [475,] -0.50670192  0.4290109 -0.4956367 -0.2383852280  0.57343444 -0.40501287 #>  [476,]  0.40583616 -0.6005913 -0.5049804 -0.4170967658 -0.48218211  0.53737802 #>  [477,] -0.36681578 -0.5221519 -0.4805462 -0.0760155150 -0.34101008 -0.31775470 #>  [478,]  0.32613439  0.3713175 -0.5140604  0.3848306423 -0.53668715 -0.51961262 #>  [479,] -0.44390119 -0.5496000  0.5110100  0.8519348294  0.61198493 -0.36546956 #>  [480,] -0.82886582 -0.6942215 -0.5364603  0.0789531497  0.33473581 -0.65542407 #>  [481,]  0.79524922  0.5475065  0.5407548 -0.0122509177 -0.23636909  0.78608170 #>  [482,]  0.50780611  0.4339134 -0.4941066 -0.2146773224  0.58240507 -0.39578074 #>  [483,] -0.17512129 -0.4360945 -0.4541974 -0.0078459827 -0.21502035  0.80678952 #>  [484,]  0.42797217 -0.5930446 -0.5025792 -0.3665155289  0.53220917 -0.44765743 #>  [485,] -0.52931882 -0.5786143 -0.4980253 -0.2788505472 -0.44066461  0.58044180 #>  [486,] -0.08357218 -0.3663235  0.5677911 -0.0010999382 -0.13819075  0.87965900 #>  [487,]  0.53931630 -0.5553687 -0.4907757 -0.1691335672 -0.39825793 -0.37594220 #>  [488,]  0.16333014  0.3016969 -0.5379298  0.0699526081 -0.67312604  0.33623791 #>  [489,]  0.34490568  0.3781122 -0.5118415 -0.5677348142  0.47660502  0.49432781 #>  [490,]  0.43641167 -0.5901832 -0.5016725 -0.3480926001 -0.46236912  0.55797027 #>  [491,] -0.14459124  0.5831000 -0.4482456 -0.0046251001 -0.19164616 -0.17075290 #>  [492,]  0.23391754  0.3351054  0.4738156 -0.8240063833  0.39200588  0.40523658 #>  [493,]  0.42080325 -0.5954814  0.4966470 -0.3825535720 -0.47242342  0.54752958 #>  [494,] -0.26638094  0.5180443  0.5317381 -0.0269172601 -0.27791465  0.74529210 #>  [495,]  0.12618519  0.2802860  0.4541778  0.0358893588  0.28630664  0.29320701 #>  [496,] -0.22555587  0.5369690  0.5375242 -0.0162674118  0.74924065  0.77202415 #>  [497,] -0.53176561  0.4205611  0.5017156 -0.2834829273 -0.44219956  0.57885573 #>  [498,]  0.19705418 -0.6814456 -0.5319255  0.1137003811  0.35954475 -0.62912534 #>  [499,]  0.25748053  0.3449358  0.4771618 -0.7767661821  0.41137761  0.42570492 #>  [500,] -0.34444942  0.4862418  0.5220234 -0.0614834473 -0.32724750 -0.30389914 #>  [501,]  0.72168094  0.5128625  0.5301557 -0.0308543680 -0.28564071 -0.26236011 #>  [502,] -0.51003024  0.4278879 -0.4959877  0.7559279557  0.57136898  0.59285894 #>  [503,]  0.25582953  0.3442628 -0.5230659  0.2197523762 -0.58994961  0.42430363 #>  [504,]  0.56498170  0.4534758 -0.4880397 -0.1377633080  0.61739714 -0.35994633 #>  [505,]  0.24623965  0.3403082  0.4755922  0.2000273228  0.40225412  0.41606905 #>  [506,]  0.54243665 -0.5542999 -0.4904445  0.8349463684 -0.39635127 -0.37399085 #>  [507,] -0.24952356  0.5256137  0.5340507 -0.0220265977 -0.26685224 -0.24378659 #>  [508,]  0.40438650 -0.6010881 -0.5051390  0.5794871695  0.51686609  0.53638698 #>  [509,] -0.08884183  0.6283113 -0.4339416 -0.0012855495 -0.14331851 -0.12511417 #>  [510,]  0.34467235 -0.6219715 -0.5118688 -0.5683260907  0.47644176  0.49415674 #>  [511,]  0.27862981  0.3533744 -0.5200002  0.2698618572 -0.57198115 -0.55674014 #>  [512,] -0.42167813 -0.5418703 -0.4866042 -0.1233471454 -0.37448114 -0.35167184 #>  [513,] -0.11948132 -0.3986332 -0.4425226 -0.0027754377  0.82900030 -0.15111709 #>  [514,] -0.28648401 -0.4906047  0.5290970 -0.0337928720 -0.29087911 -0.26755974 #>  [515,] -0.81286031  0.3137971  0.4663971  0.0995204573  0.35027509 -0.63894881 #>  [516,] -0.17674134  0.5629589 -0.4544896 -0.0080515584 -0.21621794 -0.19436730 #>  [517,] -0.03810590 -0.3025592 -0.4107716 -0.0001573830 -0.08637339 -0.07298802 #>  [518,]  0.28415245  0.3555264 -0.5192812  0.2825999889 -0.56773883 -0.55226957 #>  [519,] -0.30746570  0.5007418  0.5264547 -0.0423471423  0.69580811 -0.28081404 #>  [520,] -0.33886019 -0.5116202  0.5226772 -0.0582218239  0.67620978 -0.30042720 #>  [521,] -0.09723626 -0.3797286 -0.4365221 -0.0016210809  0.84876130 -0.13251429 #>  [522,]  0.40162427 -0.6020358 -0.5054417  0.5729462330  0.51504911 -0.46550534 #>  [523,] -0.79894889 -0.6795685  0.4687329  0.1197293809  0.36321117 -0.62524100 #>  [524,] -0.43050109 -0.5449532  0.5124452 -0.1327423102  0.62014787 -0.35714199 #>  [525,] -0.15971090  0.5732497 -0.4513068 -0.0060720157  0.79657525 -0.18204051 #>  [526,] -0.76143611  0.3370841 -0.5255072  0.1848770609 -0.60409798  0.40935585 #>  [527,] -0.36114293 -0.5200460 -0.4799011 -0.0720958711  0.66247089 -0.31424506 #>  [528,] -0.49513292 -0.5670809 -0.4944166 -0.2193384534 -0.41940816  0.60235461 #>  [529,] -0.30177870 -0.4969468 -0.4728395 -0.0398784480  0.69939705 -0.27723528 #>  [530,]  0.40075677 -0.6023336 -0.5055369 -0.4291164493  0.51447754 -0.46610073 #>  [531,]  0.82702971  0.5651722 -0.4538062 -0.0075788367 -0.21342423 -0.19166964 #>  [532,] -0.72120973  0.3534372  0.4800208  0.2702289473 -0.57185732 -0.55660962 #>  [533,] -0.73499598  0.3479756  0.4781876  0.2394016262  0.41737246 -0.56796784 #>  [534,]  0.61024184 -0.5305286  0.5168846 -0.0936289977 -0.35503819 -0.33193283 #>  [535,]  0.21248504  0.3256825  0.4705645  0.1379628927 -0.62650887  0.38564596 #>  [536,]  0.14862385  0.2936498 -0.5408587  0.0547737809  0.31148392 -0.68008705 #>  [537,]  0.24740154 -0.6592084  0.4757566  0.2023709179 -0.59679321 -0.58292443 #>  [538,]  0.13281647  0.2843913  0.4557164  0.0409537958  0.29398519 -0.69864915 #>  [539,] -0.05028985 -0.3240520 -0.4181986 -0.0003096861 -0.10203105 -0.08711415 #>  [540,]  0.90489368  0.6222569 -0.4358865 -0.0015311370 -0.14925617 -0.13065885 #>  [541,] -0.11968721 -0.3987946  0.5574265 -0.0027880946  0.82882456 -0.15128340 #>  [542,] -0.44546103  0.4498616 -0.4891565 -0.1499338562 -0.38896600  0.63355926 #>  [543,]  0.08220584  0.2483331  0.4417217  0.0120670994 -0.77136883  0.23212615 #>  [544,]  0.18576819  0.3131271 -0.5338402  0.0976459120  0.34897228  0.35967024 #>  [545,]  0.39474252  0.3955972 -0.5061988 -0.4435224616  0.51050250  0.52975700 #>  [546,]  0.19364897  0.3169372 -0.5324943  0.1087055390 -0.64361028 -0.63246841 #>  [547,] -0.47007319 -0.5585756  0.5082296 -0.1818701376 -0.40400290 -0.38182709 #>  [548,]  0.39058225 -0.6058383  0.4933413  0.5464102030  0.50773974 -0.47312359 #>  [549,]  0.37838673  0.3899318 -0.5080172  0.5164782667  0.49957596  0.51835692 #>  [550,] -0.25445829 -0.4766349 -0.4666365 -0.0233815490  0.72988945  0.75300106 #>  [551,] -0.52101238  0.4241851 -0.4971471 -0.2634935961 -0.43546847 -0.41419267 #>  [552,]  0.45953367  0.4176280 -0.4992068  0.6996481167 -0.44767487 -0.42680586 #>  [553,]  0.11147347 -0.7293805 -0.5494972  0.0261109623  0.26844542  0.27427045 #>  [554,]  0.84550889  0.5765674  0.5497225 -0.0055414117 -0.19940676 -0.17818325 #>  [555,] -0.05028985 -0.3240520 -0.4181986 -0.0003096861 -0.10203105 -0.08711415 #>  [556,] -0.71456150 -0.6439752 -0.5191150 -0.7144039535  0.43324333  0.44876514 #>  [557,] -0.29537770  0.5056843 -0.4720360 -0.0372358832  0.70345332  0.72680454 #>  [558,] -0.28085450  0.5117794 -0.4701750 -0.0317447891 -0.28727116 -0.26397753 #>  [559,]  0.17916350  0.3098569  0.4649978  0.0889138795  0.34262476  0.35294108 #>  [560,] -0.21959437 -0.4600824 -0.4615726 -0.0150298076 -0.24667973 -0.22398269 #>  [561,] -0.34461747  0.4861778  0.5220038 -0.0615837042 -0.32735132 -0.30400346 #>  [562,]  0.21167430  0.3253157  0.4704371  0.1366221440 -0.62722801  0.38488456 #>  [563,]  0.32071900  0.3693302  0.4852876 -0.6287446835  0.45941561  0.47629541 #>  [564,]  0.19853751  0.3192536  0.4683200  0.1159169066  0.36090999  0.37232113 #>  [565,]  0.67979438  0.4956482  0.5248988 -0.0483127899  0.68781454 -0.28879943 #>  [566,] -0.12024195  0.6007715 -0.4427102 -0.0028223888 -0.17164836 -0.15173099 #>  [567,] -0.13885095 -0.4129543 -0.4470148 -0.0041448307 -0.18705545  0.83362992 #>  [568,] -0.22234709  0.5385494 -0.4619917 -0.0155922410 -0.24856762 -0.22582981 #>  [569,] -0.86704374  0.2844763  0.4557482  0.0410651117  0.29414478  0.30152013 #>  [570,] -0.59694171  0.3984564  0.4947155  0.5763471327  0.51599296 -0.46452228 #>  [571,]  0.51017566  0.4347156  0.5061433 -0.2109714540  0.58386558 -0.39427934 #>  [572,] -0.62487813  0.3887933 -0.5083837 -0.4916266407  0.49737325 -0.48394366 #>  [573,]  0.73477406 -0.4814469 -0.4681065 -0.0265579303 -0.27716265 -0.25396416 #>  [574,] -0.17513671  0.5638964 -0.4542002 -0.0078479207 -0.21503176 -0.19322150 #>  [575,]  0.06781735  0.2352072  0.4363201  0.0074627736  0.20622368  0.20847453 #>  [576,] -0.32003260 -0.5042834 -0.4750803 -0.0482275839  0.68792270 -0.28869125 #>  [577,] -0.26114958  0.5203601  0.5324454 -0.0253190072  0.72549815  0.74866586 #>  [578,] -0.10461803  0.6136485  0.5613656 -0.0019593837 -0.15797837 -0.13883703 #>  [579,] -0.22574226  0.5368776  0.5374963 -0.0163072872  0.74911363 -0.22810028 #>  [580,] -0.39712860 -0.5331767 -0.4839289 -0.0999257596  0.64046761 -0.33648653 #>  [581,]  0.59902648 -0.5345507 -0.4843512 -0.1033409452 -0.36187527  0.66113742 #>  [582,] -0.06327773 -0.3426833 -0.4244597 -0.0005464474 -0.11706152 -0.10082930 #>  [583,]  0.16366404  0.3018741 -0.5378658  0.0703240908  0.32721444 -0.66340096 #>  [584,]  0.12708291 -0.7191498  0.4543900  0.0365504298  0.28735882  0.29432287 #>  [585,]  0.30226648  0.3624544 -0.5169791 -0.6742829505  0.44590514 -0.53790551 #>  [586,] -0.07654526 -0.3587262 -0.4297398 -0.0008805027  0.86885754 -0.11380374 #>  [587,] -0.63459140 -0.6146103  0.4905183 -0.5159196364 -0.50922548 -0.49084024 #>  [588,] -0.35595368 -0.5181063  0.5206928 -0.0686525499  0.66566048  0.68896776 #>  [589,]  0.42743706 -0.5932263 -0.5026369 -0.3677005770 -0.46813573  0.55198437 #>  [590,]  0.06797535  0.2353619  0.4363849  0.0075060424  0.20648278  0.20874764 #>  [591,] -0.20175656 -0.4509165 -0.4587609 -0.0117397354 -0.23426077 -0.21186531 #>  [592,] -0.27600442  0.5138564 -0.4695408 -0.0300584458  0.71585085 -0.26088126 #>  [593,] -0.24789799  0.5263606 -0.4657210 -0.0215935755 -0.26577508 -0.24272543 #>  [594,] -0.44746652  0.4491701  0.5106296 -0.1523630077  0.60981111 -0.36769001 #>  [595,] -0.08358303 -0.3663348 -0.4322126 -0.0011003014 -0.13820144 -0.12035093 #>  [596,]  0.88910776 -0.3916942 -0.4403302 -0.0022809734 -0.16355878 -0.14408958 #>  [597,] -0.73867397 -0.6535049 -0.5223115  0.2314365877 -0.58554745 -0.57104921 #>  [598,]  0.37742542  0.3895969 -0.5081249  0.5140954437  0.49892817 -0.48231957 #>  [599,] -0.13273132  0.5913928 -0.4456555 -0.0036716903  0.81791843 -0.16163214 #>  [600,]  0.40801667  0.4001553 -0.5047422 -0.4119807699 -0.48075272  0.53886603 #>  [601,] -0.07318627 -0.3548928  0.5715134 -0.0007863630 -0.12767968 -0.11060231 #>  [602,] -0.30458621 -0.4980909  0.5268112 -0.0410826725  0.69762361 -0.27900318 #>  [603,]  0.37077062  0.3872718 -0.5088741 -0.5024787172 -0.50557423 -0.48702332 #>  [604,]  0.50727224 -0.5662672 -0.4941629 -0.2155186706 -0.41792416  0.60388076 #>  [605,]  0.46487324  0.4194282  0.5013596 -0.2899264773 -0.44431150 -0.42332733 #>  [606,] -0.21708633 -0.4588255  0.5388126 -0.0145305835 -0.24495331 -0.22229472 #>  [607,]  0.10452382 -0.7342576 -0.5513805  0.0221545938 -0.74043923  0.26485619 #>  [608,] -0.08218889 -0.3648699 -0.4317380 -0.0010542607 -0.13682304 -0.11907029 #>  [609,]  0.65467071 -0.5140932  0.5219209 -0.0620098146 -0.32779102  0.69555471 #>  [610,]  0.72541176 -0.4855330 -0.4693544 -0.0295793404 -0.28323508  0.74002466 #>  [611,]  0.48942092 -0.5722972  0.5039543  0.7549812904  0.57102809 -0.40749238 #>  [612,]  0.54003407  0.4448770  0.5093005 -0.1681883746  0.60218076  0.62450685 #>  [613,]  0.08220584  0.2483331  0.4417217  0.0120670994 -0.77136883  0.23212615 #>  [614,] -0.12531196 -0.4031234  0.5560645 -0.0031490451 -0.17593194 -0.15578996 #>  [615,]  0.48280600  0.4254722  0.5032562 -0.2566266500  0.56691286 -0.41173562 #>  [616,] -0.03810590 -0.3025592 -0.4107716 -0.0001573830 -0.08637339 -0.07298802 #>  [617,]  0.53610165  0.4435319  0.5088835 -0.1734160355 -0.40022346  0.62204528 #>  [618,]  0.37019868  0.3870714 -0.5089387 -0.5039090424  0.49403732  0.51257071 #>  [619,] -0.16443649 -0.4296844 -0.4522157 -0.0065821858 -0.20702141 -0.18549913 #>  [620,]  0.28260313  0.3549247  0.4805179  0.2790052224  0.43107509 -0.55351927 #>  [621,]  0.42924393  0.4073870  0.4975577 -0.3637070532 -0.46697166 -0.44680678 #>  [622,]  0.14180445  0.2897404  0.4577026  0.0485029414  0.30406591  0.31204390 #>  [623,] -0.07862515  0.6389682 -0.4304912 -0.0009422225 -0.13325532 -0.11576049 #>  [624,] -0.07801745 -0.3603633 -0.4302735 -0.0009239138 -0.13264039 -0.11519074 #>  [625,] -0.12666464  0.5958583  0.5557446 -0.0032403087 -0.17706338 -0.15686351 #>  [626,] -0.47480183  0.4398141 -0.4922705  0.8114505826 -0.40690105 -0.38479876 #>  [627,] -0.18251367  0.5596371  0.5444859 -0.0088153377 -0.22045444 -0.19846420 #>  [628,]  0.23685590 -0.6636408  0.4742449  0.1815859224  0.39447438  0.40784660 #>  [629,] -0.50609937  0.4292143 -0.4955731 -0.2373656094 -0.42619195  0.59537198 #>  [630,]  0.10403242  0.2653891 -0.5515177  0.0218902344 -0.74107944  0.26417799 #>  [631,] -0.21953909 -0.4600548 -0.4615641 -0.0150186706  0.75335825  0.77605446 #>  [632,]  0.11524187  0.2731758  0.4514820  0.0284302929 -0.72686272 -0.72075642 #>  [633,] -0.32758972 -0.5072545 -0.4759881 -0.0520613714 -0.31679204 -0.29341026 #>  [634,] -0.12027684 -0.3992558  0.5572812 -0.0028245549 -0.17167808  0.84824089 #>  [635,] -0.79867709  0.3205583  0.4687773  0.1201458707 -0.63654092  0.37502161 #>  [636,] -0.09931648 -0.3816345 -0.4371311 -0.0017121869 -0.15315814  0.86568738 #>  [637,] -0.09840566 -0.3808040  0.5631342 -0.0016718954 -0.15231972 -0.13352687 #>  [638,]  0.79662653  0.5482299 -0.4590231 -0.0120138020 -0.23540053 -0.21297495 #>  [639,]  0.52193501  0.4387045 -0.4926154 -0.1932635841  0.59109684  0.61314718 #>  [640,] -0.22928031 -0.4648465  0.5369684 -0.0170781079 -0.25329157 -0.23045748 #>  [641,]  0.11681775 -0.7257724  0.4518833  0.0294373906  0.27507453  0.28129725 #>  [642,] -0.13241900  0.5916188  0.5544153 -0.0036485831 -0.18182540  0.83861157 #>  [643,] -0.42353923  0.4574777 -0.4868051 -0.1252842999 -0.37561398 -0.35282498 #>  [644,] -0.37793420 -0.5262382  0.5182012  0.9158119035  0.65218285 -0.32462774 #>  [645,] -0.14773003 -0.4190070 -0.4489017 -0.0049032622 -0.19412743 -0.17312571 #>  [646,] -0.24592783  0.5272701  0.5345570 -0.0210774342 -0.26446695  0.75856271 #>  [647,]  0.67130773 -0.5076849  0.5238803 -0.0526402180 -0.31747834 -0.29409774 #>  [648,]  0.13730773  0.2870936  0.4567224  0.0446258957  0.29906750 -0.69325827 #>  [649,]  0.13121038  0.2834100  0.4553498  0.0396884653 -0.70785498 -0.70060094 #>  [650,]  0.61629853 -0.5283376 -0.4824429 -0.0886936069  0.64865872  0.67180890 #>  [651,]  0.12728950 -0.7190203 -0.5455614  0.0367036371  0.28760038  0.29457905 #>  [652,] -0.49516188  0.4329093 -0.4944197 -0.2193847431  0.58057396 -0.39766378 #>  [653,] -0.07241369 -0.3539909  0.5718089 -0.0007656577 -0.12687404 -0.10985847 #>  [654,] -0.41683825  0.4598295 -0.4860804 -0.1184191432 -0.37153518  0.65132536 #>  [655,] -0.57119607  0.4072377  0.4975103 -0.3646774435  0.53274502  0.55289902 #>  [656,] -0.61872407  0.3909370 -0.5076939  0.5236207748  0.50151905 -0.47961433 #>  [657,] -0.09390364  0.6233939  0.5644779 -0.0014818170 -0.14812881 -0.12960467 #>  [658,]  0.38463323 -0.6078974  0.4926807 -0.4681177933 -0.49623020 -0.47726512 #>  [659,]  0.19216442 -0.6837733  0.4672554  0.1065687925  0.35500498  0.36606416 #>  [660,] -0.19597941  0.5521734  0.5421885 -0.0107976127  0.76983618 -0.20788079 #>  [661,]  0.84711830 -0.4223927 -0.4499545 -0.0053845694  0.80184207 -0.17698579 #>  [662,] -0.86107092  0.2880545  0.4570788  0.0460004928  0.30087990  0.30866424 #>  [663,] -0.55948239 -0.5887935  0.4987672 -0.3393163778 -0.45974325 -0.43930611 #>  [664,]  0.43413169  0.4090444 -0.5019170 -0.3530193869 -0.46383054  0.55645388 #>  [665,] -0.14805262 -0.4192216  0.5510315 -0.0049324893 -0.19438133 -0.17336866 #>  [666,] -0.12663553  0.5958802  0.5557515 -0.0032383261 -0.17703908 -0.15684044 #>  [667,] -0.05028985 -0.3240520 -0.4181986 -0.0003096861 -0.10203105 -0.08711415 #>  [668,] -0.43020460  0.4551501  0.5124770 -0.1324178106 -0.37967162  0.64304198 #>  [669,]  0.05307805  0.2194407  0.4295691  0.0040754852  0.18048441  0.18139601 #>  [670,]  0.08220584  0.2483331  0.4417217  0.0120670994 -0.77136883  0.23212615 #>  [671,]  0.23384043  0.3350723 -0.5261957  0.1758480636  0.39194089 -0.59483214 #>  [672,]  0.12266556 -0.7219529 -0.5466668  0.0333704194  0.28214153 -0.71120986 #>  [673,] -0.35198918  0.4833844 -0.4788509 -0.0661109461 -0.33189894 -0.30857587 #>  [674,]  0.88319534  0.6034859  0.5581458 -0.0026143791 -0.16870409 -0.14894616 #>  [675,]  0.71345135 -0.4906319 -0.4709113 -0.0338169691  0.70907956 -0.26760080 #>  [676,] -0.16173405 -0.4280143  0.5483015 -0.0062868990 -0.20496921 -0.18352503 #>  [677,] -0.32394267  0.4941748  0.5244486 -0.0501823321 -0.31451910  0.70886559 #>  [678,]  0.05307805  0.2194407  0.4295691  0.0040754852  0.18048441  0.18139601 #>  [679,] -0.42004330 -0.5412969 -0.4864274 -0.1216649159 -0.37348604 -0.35065918 #>  [680,]  0.22414530  0.3308719 -0.5276395  0.1580421902  0.38367879  0.39642863 #>  [681,] -0.58316868 -0.5968342 -0.5037832  0.6084143073 -0.47500139 -0.45515050 #>  [682,] -0.17406748 -0.4354754 -0.4540062 -0.0077142811 -0.21423925 -0.19245630 #>  [683,]  0.08959781 -0.7455630 -0.5558272  0.0149884644  0.23932769  0.24343624 #>  [684,]  0.42295900  0.4052520  0.4968800  0.6223055295 -0.47102765  0.54898013 #>  [685,] -0.17340701 -0.4350859  0.5461140 -0.0076325441 -0.21374885 -0.19198293 #>  [686,] -0.43827683  0.4523455 -0.4883888 -0.1414757872 -0.38458770 -0.36197103 #>  [687,] -0.06848156 -0.3492755 -0.4266409 -0.0006656110 -0.12271742 -0.10602668 #>  [688,]  0.21423550  0.3264718 -0.5291614  0.1408824174 -0.62496109  0.38728458 #>  [689,]  0.26728332 -0.6511120  0.4784947  0.2443946248  0.41917186  0.43393064 #>  [690,] -0.27908979  0.5125326  0.5300549 -0.0311229720 -0.28613671  0.73714795 #>  [691,] -0.43962937  0.4518770 -0.4885335 -0.1430392942 -0.38541173  0.63718810 #>  [692,]  0.10531539  0.2663092 -0.5511606  0.0225846527  0.26058862 -0.73405491 #>  [693,] -0.08791738 -0.3707664  0.5663556 -0.0012516335 -0.14242809 -0.12428431 #>  [694,]  0.84887739  0.5787535 -0.4495983 -0.0052167007 -0.19678740 -0.17567242 #>  [695,]  0.34074145  0.3766166 -0.5123286  0.4217143880  0.47368408 -0.50873344 #>  [696,] -0.20275110 -0.4514421 -0.4589224 -0.0119077634 -0.23496217 -0.21254811 #>  [697,]  0.06797535  0.2353619  0.4363849  0.0075060424  0.20648278  0.20874764 #>  [698,] -0.48009521 -0.5619852 -0.4928298 -0.1962400852 -0.41014974  0.61186780 #>  [699,]  0.05763077  0.2246223 -0.5681782  0.0049894044  0.18879379  0.19012543 #>  [700,]  0.28940856  0.3575567 -0.5186046 -0.7050877424 -0.56373810 -0.54805544 #>  [701,] -0.09801800 -0.3804486 -0.4367523 -0.0016549369 -0.15196194 -0.13319167 #>  [702,] -0.17755785 -0.4375157  0.5453639 -0.0081566101  0.78317991 -0.19494916 #>  [703,]  0.21703761  0.3277275 -0.5287261  0.1456260644 -0.62249722  0.38989274 #>  [704,]  0.36402607 -0.6150969  0.4903610 -0.5193957052 -0.51017042  0.50817160 #>  [705,] -0.26182205  0.5200608 -0.4676460 -0.0255202791 -0.27494152 -0.25176856 #>  [706,] -0.12536002  0.5968403  0.5560531 -0.0031522576 -0.17597223 -0.15582817 #>  [707,]  0.12219819  0.2777465  0.4532195  0.0330445939  0.28158357 -0.71180151 #>  [708,] -0.30674386  0.5010339 -0.4734561 -0.0420273340  0.69626291  0.71963970 #>  [709,]  0.06781735  0.2352072  0.4363201  0.0074627736  0.20622368  0.20847453 #>  [710,]  0.07275199  0.2399192 -0.5617193  0.0088884056  0.21417042  0.21685532 #>  [711,] -0.17631017 -0.4367898 -0.4544120 -0.0079964746 -0.21589958  0.80594028 #>  [712,] -0.19518779  0.5526019 -0.4576798 -0.0106729424 -0.22959936  0.79266767 #>  [713,] -0.14949902 -0.4201795 -0.4492665 -0.0050650189 -0.19551721 -0.17445592 #>  [714,]  0.29040972  0.3579415  0.4815234  0.2972771179  0.43701997 -0.54725714 #>  [715,] -0.08472639 -0.3675215 -0.4325966 -0.0011390076 -0.13932489 -0.12139549 #>  [716,] -0.07318627 -0.3548928  0.5715134 -0.0007863630 -0.12767968 -0.11060231 #>  [717,]  0.05763077  0.2246223 -0.5681782  0.0049894044  0.18879379  0.19012543 #>  [718,] -0.66288012 -0.6246893  0.4872455  0.4125456776  0.47113120  0.48859006 #>  [719,]  0.17690817  0.3087231  0.4645935  0.0860437541  0.34042848 -0.64938758 #>  [720,]  0.72560821 -0.4854481 -0.4693285 -0.0295133492 -0.28310820 -0.25984961 #>  [721,]  0.56430467 -0.5467592 -0.4881123 -0.1385283719 -0.38301521 -0.36036688 #>  [722,] -0.70338349 -0.6396861  0.4823116 -0.6879302710  0.44169218  0.45766152 #>  [723,] -0.06386752 -0.3434522 -0.4247150 -0.0005592185 -0.11771198 -0.10142604 #>  [724,] -0.44237753 -0.5490736  0.5111727  0.8537428113 -0.38708638 -0.36452130 #>  [725,] -0.50478416  0.4296582 -0.4954344 -0.2351506040 -0.42537678 -0.40378842 #>  [726,]  0.18243102 -0.6885161 -0.5344233  0.0931728278  0.34578050  0.35628674 #>  [727,]  0.42903242  0.4073153 -0.5024651  0.6358266436  0.53289216  0.55305181 #>  [728,]  0.07275199  0.2399192 -0.5617193  0.0088884056  0.21417042  0.21685532 #>  [729,]  0.45659040 -0.5833647  0.5004806 -0.3061968446 -0.44953334  0.57127105 #>  [730,] -0.07764649 -0.3599532  0.5698601 -0.0009128495 -0.13226404 -0.11484214 #>  [731,] -0.39916718 -0.5339058 -0.4841529 -0.1017251913  0.63922530  0.66225375 #>  [732,] -0.05485806  0.6689878  0.5794448 -0.0003835961 -0.10748360 -0.09207279 #>  [733,]  0.31754452 -0.6318409  0.4849028 -0.6366657433 -0.54288275 -0.52611874 #>  [734,]  0.14341930  0.2906772  0.4580483  0.0499449438  0.30583979 -0.68607438 #>  [735,] -0.46551134  0.4429808  0.5087125 -0.1755953491  0.59878979 -0.37896541 #>  [736,] -0.14200654 -0.4151385  0.5523036 -0.0044043675 -0.18958773  0.83121348 #>  [737,]  0.15823649  0.2989651  0.4610807  0.0644347033 -0.67836783  0.33067798 #>  [738,] -0.70583638 -0.6406210  0.4820012 -0.6938025098  0.43985136 -0.54427609 #>  [739,] -0.33095408  0.4914344  0.5236111 -0.0538435935 -0.31888505  0.70449267 #>  [740,]  0.20695836 -0.6768344 -0.5303116  0.1289677024  0.36855977 -0.61957582 #>  [741,] -0.22666106  0.5364281 -0.4626414 -0.0165049173  0.74848795 -0.22871328 #>  [742,] -0.79320780  0.3230893  0.4696618  0.1287025195  0.36841044 -0.61973397 #>  [743,] -0.14576723 -0.4176935 -0.4484927 -0.0047280051 -0.19257813 -0.17164382 #>  [744,] -0.67506200  0.3708796  0.4857960  0.3818254301  0.46245438  0.47948618 #>  [745,]  0.28145389  0.3544773 -0.5196315  0.2763492913  0.43019326 -0.55444849 #>  [746,] -0.05015739 -0.3238425 -0.4181273 -0.0003076868 -0.10186994 -0.08696794 #>  [747,] -0.50112723 -0.5691069 -0.4950487  0.7709321949  0.57688745  0.59854290 #>  [748,] -0.37728078  0.4740005 -0.4817256 -0.0836893117 -0.34741760 -0.32422396 #>  [749,]  0.27081108  0.3502926 -0.5210332  0.2522058015 -0.57805805 -0.56314740 #>  [750,] -0.19055291 -0.4448645 -0.4569004 -0.0099638185 -0.22627900  0.79589136 #>  [751,]  0.49244043  0.4287215  0.5042729  0.7601582444  0.57290249 -0.40556089 #>  [752,]  0.09998012 -0.7375707  0.4473284  0.0197857817  0.25357733  0.25851870 #>  [753,]  0.45779091  0.4170402  0.5006081 -0.3038044042 -0.44877491  0.57205594 #>  [754,]  0.20417362 -0.6781175 -0.5307595  0.1245640540 -0.63395139 -0.62223541 #>  [755,]  0.45195182 -0.5849300  0.4999873 -0.3155485607 -0.45246908 -0.43176817 #>  [756,] -0.23526411 -0.4677224 -0.4639116 -0.0184433082 -0.25733458 -0.23442456 #>  [757,] -0.23465574 -0.4674323 -0.4638229 -0.0183009023 -0.25692491 -0.23402233 #>  [758,] -0.21641739  0.5415114 -0.4610842 -0.0143995271 -0.24449180  0.77815633 #>  [759,] -0.04176308 -0.3095401  0.5867897 -0.0001966343 -0.09126756 -0.07738476 #>  [760,] -0.76783787 -0.6656478  0.4735574  0.1726951615 -0.60947646  0.40366902 #>  [761,] -0.16458212 -0.4297738 -0.4522434 -0.0065983697 -0.20713165 -0.18560523 #>  [762,] -0.03810590 -0.3025592 -0.4107716 -0.0001573830 -0.08637339 -0.07298802 #>  [763,]  0.10317052  0.2647665 -0.5517598  0.0214313758 -0.74220633  0.26298429 #>  [764,]  0.59120535 -0.5373308 -0.4852062 -0.1105722600  0.63336145 -0.34369781 #>  [765,] -0.13132728 -0.4075880  0.5546637 -0.0035685889 -0.18092816 -0.16053506 #>  [766,] -0.44453751  0.4501803 -0.4890580 -0.1488253084 -0.38840297  0.63413430 #>  [767,] -0.36301419 -0.5207423 -0.4801144 -0.0733706309  0.66132200 -0.31540303 #>  [768,]  0.26957475  0.3498013 -0.5211982  0.2494569856 -0.57902680  0.43583082 #>  [769,]  0.22692603  0.3320868  0.4727790  0.1630477032 -0.61393284  0.39895545 #>  [770,] -0.05067050  0.6753487 -0.4184024 -0.0003154757 -0.10249304 -0.08753353 #>  [771,]  0.50477045 -0.5671136  0.5055732 -0.2194929155  0.58053219 -0.39770674 #>  [772,] -0.76972268  0.3335400 -0.5267214  0.1691892404  0.38892545  0.40197888 #>  [773,]  0.42099099  0.4045825  0.4966673 -0.3821291772 -0.47230177 -0.45234398 #>  [774,] -0.04176308 -0.3095401  0.5867897 -0.0001966343 -0.09126756 -0.07738476 #>  [775,] -0.39580255 -0.5327017 -0.4837829 -0.0987688490  0.64127586  0.66433282 #>  [776,]  0.21036708  0.3247225 -0.5297692  0.1344756772 -0.62839059 -0.61634641 #>  [777,]  0.11065020  0.2700530 -0.5497149  0.0256207578  0.26740897 -0.72682800 #>  [778,] -0.03810590 -0.3025592 -0.4107716 -0.0001573830 -0.08637339 -0.07298802 #>  [779,] -0.06327773 -0.3426833 -0.4244597 -0.0005464474 -0.11706152 -0.10082930 #>  [780,]  0.35592578 -0.6179594 -0.5105656 -0.5398288127  0.48426334  0.50234796 #>  [781,] -0.17609699 -0.4366653 -0.4543736 -0.0079693401 -0.21574208 -0.19390757 #>  [782,]  0.38009840  0.3905276 -0.5078255  0.5207133031 -0.49927219  0.51955963 #>  [783,]  0.36331209 -0.6153484  0.4902797 -0.5211923116  0.48934102 -0.49233936 #>  [784,]  0.36889446  0.3866142  0.4909137  0.4928261997 -0.50684936  0.51164393 #>  [785,] -0.52575803  0.4225857  0.5023513 -0.2721973299 -0.43843440 -0.41725460 #>  [786,] -0.50530085  0.4294838  0.5045111 -0.2360190576  0.57430303 -0.40411819 #>  [787,]  0.71748324 -0.4889275  0.5296091 -0.0323392491 -0.28833823 -0.26503654 #>  [788,]  0.08309844  0.2490906  0.4420279  0.0123989726  0.22994949  0.23351948 #>  [789,]  0.78810814 -0.4561904  0.5396205 -0.0135356899 -0.24135781 -0.21878286 #>  [790,] -0.49452528  0.4331246  0.5056475  0.7816311023  0.58096687  0.60274035 #>  [791,] -0.25598653 -0.4773256  0.5331525 -0.0238137343 -0.27111615 -0.24799111 #>  [792,]  0.10019216  0.2625863  0.4473898  0.0198925891  0.25385980 -0.74118217 #>  [793,]  0.25389064 -0.6565305 -0.5233345  0.2156953295 -0.59151380 -0.57734805 #>  [794,] -0.18579462 -0.4422171  0.5439146 -0.0092718592 -0.22284186 -0.20077616 #>  [795,]  0.32034738  0.3691933  0.4852427 -0.6296734597  0.45914709  0.47601340 #>  [796,]  0.18343998  0.3119826  0.4657538  0.0945120469  0.34674878  0.35731323 #>  [797,]  0.11665910 -0.7258779  0.4518431  0.0293349976  0.27488015 -0.71890883 #>  [798,]  0.47518387 -0.5770968 -0.4975491 -0.2704549670  0.56215484 -0.41664615 #>  [799,] -0.30896234  0.5001375 -0.4737299 -0.0430162849 -0.30513417 -0.28175432 #>  [800,]  0.76219619 -0.4689283  0.5357195 -0.0190468010 -0.25904147 -0.23610117 #>  [801,]  0.07210329  0.2393133 -0.5619700  0.0086921217  0.21314240  0.21577068 #>  [802,] -0.12236663 -0.4008761 -0.4432289 -0.0029563550 -0.17345186 -0.15343886 #>  [803,]  0.08736593  0.2526334 -0.5565476  0.0140644712 -0.76385023  0.24007489 #>  [804,] -0.43640823 -0.5470066 -0.4881887  0.8606624862 -0.38344943 -0.36080978 #>  [805,]  0.63340168  0.4779285 -0.4805216 -0.0758622127 -0.34087675  0.68237979 #>  [806,]  0.32261830  0.3700287  0.4855169  0.3760081333  0.46078581 -0.52226569 #>  [807,] -0.82383784  0.3083461 -0.5355411  0.0851068362  0.33969867 -0.65016141 #>  [808,] -0.56105822  0.4106733  0.4985986 -0.3426698596 -0.46075015 -0.44035033 #>  [809,] -0.08358303 -0.3663348 -0.4322126 -0.0011003014 -0.13820144 -0.12035093 #>  [810,] -0.66860779  0.3732349 -0.5134327 -0.6019279893  0.46706911  0.48432936 #>  [811,]  0.51961500  0.4379164 -0.4928604 -0.1966676843 -0.41032774 -0.38831491 #>  [812,]  0.36293590 -0.6154810 -0.5097632  0.4778606684 -0.51091656  0.50739124 #>  [813,]  0.77610637  0.5377858 -0.4622256 -0.0159149989 -0.24962516  0.77313492 #>  [814,] -0.09945891 -0.3817638  0.5628276 -0.0017185441 -0.15328896  0.86556474 #>  [815,] -0.31585149  0.4973764 -0.4745732 -0.0462041699 -0.30946031 -0.28607484 #>  [816,] -0.23242021 -0.4663618 -0.4634953 -0.0177846751 -0.25541688 -0.23254214 #>  [817,]  0.65871449 -0.5125500  0.5223929 -0.0596198487 -0.32529144  0.69806565 #>  [818,]  0.82412747 -0.4365342  0.5456668 -0.0079408394 -0.21557616 -0.19374730 #>  [819,]  0.65168864  0.4847745  0.5215745 -0.0638204323  0.67036829 -0.30629552 #>  [820,] -0.28630767 -0.4905304 -0.4708803 -0.0337272020 -0.29076634 -0.26744771 #>  [821,]  0.19114588  0.3157374  0.4670828  0.1051171130  0.35405161  0.36505380 #>  [822,]  0.18863411 -0.6854762 -0.5333459  0.1015870773 -0.64831114  0.36254967 #>  [823,] -0.34090890  0.4875941  0.5224370 -0.0594010351 -0.32505843  0.69829963 #>  [824,]  0.53959729  0.4447275  0.5092541 -0.1687630627 -0.39808618 -0.37576639 #>  [825,]  0.41652709 -0.5969380 -0.5038162  0.6077183346  0.52480081 -0.45535618 #>  [826,]  0.06781735  0.2352072  0.4363201  0.0074627736  0.20622368  0.20847453 #>  [827,]  0.44363757  0.4122616 -0.5008993 -0.3327317847  0.54224709  0.56275743 #>  [828,] -0.08472639 -0.3675215 -0.4325966 -0.0011390076 -0.13932489 -0.12139549 #>  [829,] -0.56373412 -0.5902326 -0.5016881 -0.3484065050  0.53753750 -0.44212660 #>  [830,]  0.62709454 -0.5243966 -0.4812341 -0.0804095820 -0.34474071  0.67848013 #>  [831,]  0.10388591  0.2652835  0.4484413  0.0218118009 -0.74127064  0.26397545 #>  [832,] -0.76089851 -0.6626883 -0.5254294  0.1859190879 -0.60364971  0.40982972 #>  [833,] -0.12531196 -0.4031234  0.5560645 -0.0031490451 -0.17593194 -0.15578996 #>  [834,] -0.28105073 -0.4883042 -0.4702006 -0.0318145222 -0.28739721 -0.26410261 #>  [835,] -0.18565391 -0.4421380 -0.4560610 -0.0092519397 -0.22273977 -0.20067725 #>  [836,]  0.36371569  0.3847938  0.4903257 -0.5201765898 -0.51038275  0.50794954 #>  [837,] -0.52220920  0.4237817 -0.4972735  0.7343290435  0.56378422 -0.41496400 #>  [838,] -0.75464554  0.3399391 -0.5245334  0.1982505999  0.40152679  0.41530054 #>  [839,] -0.55777754  0.4117831 -0.5010505  0.6642907534 -0.45865514  0.56182212 #>  [840,] -0.20755002 -0.4539532 -0.4596932 -0.0127433580 -0.23833113 -0.21583038 #>  [841,] -0.18145803 -0.4397612 -0.4553286 -0.0086719466 -0.21968317 -0.19771781 #>  [842,]  0.29669551 -0.6396561 -0.5176784 -0.6877406084 -0.55824866 -0.54227621 #>  [843,] -0.30984155 -0.5002167  0.5261619 -0.0434132265 -0.30568730 -0.28230641 #>  [844,]  0.55937568 -0.5484673  0.5113601 -0.1441979334 -0.38601797 -0.36343064 #>  [845,]  0.13716784  0.2870103 -0.5433085  0.0445085226 -0.70108941 -0.69342472 #>  [846,]  0.08220584  0.2483331  0.4417217  0.0120670994 -0.77136883  0.23212615 #>  [847,] -0.20656596 -0.4534416 -0.4595362 -0.0125686221  0.76235764 -0.21515898 #>  [848,]  0.05307805  0.2194407  0.4295691  0.0040754852  0.18048441  0.18139601 #>  [849,] -0.35696485  0.4815147  0.5205768 -0.0693130467 -0.33496146  0.68834152 #>  [850,]  0.35492873 -0.6183132  0.4893197  0.4576498714 -0.51642541 -0.49837297 #>  [851,]  0.41775075  0.4034791 -0.5036835 -0.3894859168  0.52559609 -0.45452924 #>  [852,] -0.33225645  0.4909287  0.5234565 -0.0545462941 -0.31969433 -0.29631854 #>  [853,]  0.08736593  0.2526334 -0.5565476  0.0140644712 -0.76385023  0.24007489 #>  [854,] -0.13622773 -0.4111094 -0.4464383 -0.0039372173 -0.18493379  0.83565232 #>  [855,]  0.33169596  0.3733453 -0.5133966 -0.6011615343  0.46728531  0.48455618 #>  [856,] -0.41354923  0.4609884  0.5142764 -0.1151593802 -0.36953311 -0.34663902 #>  [857,]  0.79280038 -0.4537712  0.5403626 -0.0126809360 -0.23808600 -0.21559141 #>  [858,]  0.13666406  0.2867100  0.4565799  0.0440874312 -0.70165525  0.30597507 #>  [859,] -0.06249448 -0.3416531 -0.4241173 -0.0005297711  0.88380619 -0.10003364 #>  [860,]  0.65827701  0.4872826  0.5223417 -0.0598748338 -0.32556206 -0.30220611 #>  [861,] -0.21267088 -0.4565884 -0.4605016 -0.0136815930 -0.24189877  0.78068907 #>  [862,]  0.41641381 -0.5969766 -0.5038285  0.6074590291 -0.47527286 -0.45543279 #>  [863,]  0.36933524  0.3867688  0.4909636 -0.5060699366  0.49345045 -0.48804269 #>  [864,] -0.26984374  0.5165268  0.5312746 -0.0280169448 -0.28016432 -0.25693400 #>  [865,] -0.53402677 -0.5802010  0.5014761 -0.2878075463  0.55638011 -0.42261234 #>  [866,] -0.34441232 -0.5137440  0.5220277 -0.0614613276 -0.32722458 -0.30387611 #>  [867,] -0.65771067  0.3771733  0.4878528  0.4256355791 -0.52522840 -0.50759353 #>  [868,]  0.46275568  0.4187144  0.5011351 -0.2940333122 -0.44564409  0.57529472 #>  [869,]  0.37467949 -0.6113611  0.4915666  0.5072725769  0.49707421  0.51574396 #>  [870,] -0.22156244 -0.4610618 -0.4618726 -0.0154303587 -0.24803022 -0.22530388 #>  [871,] -0.44062821  0.4515313 -0.4886404 -0.1442024744  0.61397966 -0.36343306 #>  [872,]  0.82768833 -0.4344376  0.5463143 -0.0074983484 -0.21293413  0.80880328 #>  [873,] -0.14276166 -0.4156556 -0.4478577 -0.0044680872 -0.19019054 -0.16936218 #>  [874,] -0.40052332 -0.5343901  0.5156982 -0.1029363572 -0.36160098 -0.33858434 #>  [875,]  0.07291317  0.2400691 -0.5616574  0.0089375981  0.21442509  0.21712404 #>  [876,] -0.20213782 -0.4511182  0.5411771 -0.0118039438 -0.23452979 -0.21212717 #>  [877,] -0.32676516 -0.5069320  0.5241104 -0.0516317644 -0.31627853 -0.29289595 #>  [878,]  0.33783993  0.3755708 -0.5126696  0.4143678189 -0.52836028 -0.51087672 #>  [879,] -0.38509579  0.4711568 -0.4825981 -0.0898110725  0.64780730  0.67094749 #>  [880,]  0.15473035  0.2970514  0.4603847  0.0607979754 -0.68202942 -0.67320605 #>  [881,]  0.11520041 -0.7268521  0.4514713  0.0284040978 -0.72691388  0.27918935 #>  [882,]  0.18733597 -0.6861072  0.4664309  0.0997904648  0.35046113 -0.63875163 #>  [883,] -0.73171789  0.3492866  0.4786288  0.2465959840  0.41995796  0.43475992 #>  [884,]  0.74568550 -0.4765698  0.5333834 -0.0233411952 -0.27001585 -0.24690553 #>  [885,]  0.41021888 -0.5990915  0.4954979 -0.4068416445  0.52068817  0.54036564 #>  [886,] -0.13133378  0.5924072  0.5546622 -0.0035690616 -0.18093351 -0.16054015 #>  [887,] -0.20222816  0.5488340 -0.4588376 -0.0118191952 -0.23459351 -0.21218920 #>  [888,] -0.41119440  0.4618200 -0.4854676 -0.1128691535  0.63190042  0.65481788 #>  [889,]  0.13121038  0.2834100  0.4553498  0.0396884653 -0.70785498 -0.70060094 #>  [890,] -0.61860001  0.3909801  0.4923200  0.5239267966  0.50160235 -0.47952736 #>  [891,] -0.83782695 -0.6989188 -0.5381524  0.0686745886  0.32569109  0.33498329 #>  [892,]  0.16406001  0.3020838 -0.5377900  0.0707662152  0.32761774 -0.66297320 #>  [893,]  0.55464042  0.4498966  0.5108543 -0.1498117699  0.61109585 -0.36637756 #>  [894,] -0.07926008  0.6382742 -0.4307170 -0.0009615973 -0.13389574 -0.11635409 #>  [895,]  0.29516557  0.3597613 -0.5178718  0.3085921213 -0.55939584 -0.54348365 #>  [896,]  0.08879135  0.2537891 -0.5560856  0.0146503331  0.23818436 -0.75777318 #>  [897,] -0.56486736  0.4093836  0.4981904 -0.3508517933  0.53681135 -0.44288004 #>  [898,] -0.29534375  0.5056984  0.5279682 -0.0372222416  0.70347488  0.72682600 #>  [899,] -0.37682889 -0.5258343 -0.4816750 -0.0833457428  0.65285874 -0.32394472 #>  [900,] -0.13324760  0.5910202  0.5542278 -0.0037101057 -0.18250451 -0.16203459 #>  [901,]  0.46161330  0.4183292 -0.4989861 -0.2962639740 -0.44636367 -0.42544950 #>  [902,] -0.41133944 -0.5382313  0.5145167 -0.1130091701 -0.36818788 -0.34527184 #>  [903,] -0.81024107  0.3150685  0.4668466  0.1031591235 -0.64725099  0.36367329 #>  [904,]  0.26156431 -0.6534087  0.4777209 -0.7680508945  0.41464234  0.42915109 #>  [905,] -0.20530579 -0.4527840  0.5406656 -0.0123474284 -0.23675879 -0.21429796 #>  [906,]  0.21938842  0.3287739 -0.5283639  0.1496719661  0.37955700  0.39206695 #>  [907,]  0.21158509  0.3252753  0.4704230  0.1364750531  0.37269277 -0.61519932 #>  [908,]  0.10531539  0.2663092 -0.5511606  0.0225846527  0.26058862 -0.73405491 #>  [909,] -0.36203682  0.4796212 -0.4800031 -0.0727026031  0.66192199 -0.31479825 #>  [910,]  0.22575488 -0.6684238 -0.5273968  0.1609294975  0.38506312 -0.60210674 #>  [911,]  0.06718162  0.2345821  0.4360582  0.0072902372  0.20517795  0.20737233 #>  [912,] -0.32706511  0.4929506  0.5240745 -0.0517877167 -0.31646535 -0.29308306 #>  [913,]  0.43733798  0.4101304  0.4984268 -0.3461017991 -0.46177606  0.55858553 #>  [914,] -0.55225084  0.4136509  0.4995395 -0.3241674734 -0.45513636 -0.43453095 #>  [915,]  0.61905650 -0.5273353  0.5178646  0.9134842368 -0.34965652  0.67351285 #>  [916,]  0.41716529  0.4032796  0.4962530 -0.3908223514  0.52521569  0.54507523 #>  [917,]  0.12071616  0.2767880 -0.5471435  0.0320246873 -0.72019346  0.28631423 #>  [918,]  0.21117064 -0.6749126  0.4703577  0.1357928855  0.37232451 -0.61558924 #>  [919,] -0.18501160 -0.4417767  0.5440503 -0.0091614020  0.77772659 -0.20022547 #>  [920,] -0.06772648 -0.3483449 -0.4263340 -0.0006474006 -0.12190806 -0.10528176 #>  [921,] -0.25080737 -0.4749740 -0.4661290 -0.0223732049 -0.26770158 -0.24462360 #>  [922,] -0.34653652 -0.5145521 -0.4782195 -0.0627378314  0.67146356 -0.30519446 #>  [923,] -0.06832105 -0.3490784  0.5734241 -0.0006617133 -0.12254568  0.89413142 #>  [924,]  0.06781735  0.2352072  0.4363201  0.0074627736  0.20622368  0.20847453 #>  [925,] -0.06249448 -0.3416531 -0.4241173 -0.0005297711  0.88380619 -0.10003364 #>  [926,]  0.73770412  0.5198502 -0.4677103 -0.0256628322 -0.27525115 -0.25207453 #>  [927,]  0.15536028 -0.7026027  0.4605106  0.0614417343 -0.68136827  0.32749528 #>  [928,] -0.08956909 -0.3724089  0.5658265 -0.0013126439 -0.14401634 -0.12576485 #>  [929,]  0.21246358  0.3256728 -0.5294388  0.1379272996 -0.62652789  0.38562582 #>  [930,]  0.60500332 -0.5324127  0.5163059 -0.0980709665 -0.35823288  0.66483074 #>  [931,]  0.26235654 -0.6530891 -0.5221712  0.2336566382  0.41527272  0.42981639 #>  [932,]  0.07780185  0.2445060 -0.5598342  0.0105110132  0.22201169  0.22513285 #>  [933,] -0.22574223  0.5368776 -0.4625037 -0.0163072817  0.74911365 -0.22810026 #>  [934,] -0.20259082 -0.4513575 -0.4588964 -0.0118805663 -0.23484921 -0.21243813 #>  [935,] -0.05015739 -0.3238425 -0.4181273 -0.0003076868 -0.10186994 -0.08696794 #>  [936,] -0.14084984 -0.4143422 -0.4474480 -0.0043079756 -0.18866200 -0.16790280 #>  [937,] -0.42985877  0.4552706  0.5125142 -0.1320400778  0.62053894  0.64325655 #>  [938,]  0.42840538  0.4071024 -0.5025326 -0.3655575912 -0.46751170  0.55263244 #>  [939,]  0.21759573  0.3279765  0.4713602  0.1465811806 -0.62200846 -0.60958992 #>  [940,]  0.51220722  0.4354037  0.5063577 -0.2078311307  0.58511682  0.60700653 #>  [941,] -0.67778728  0.3698797  0.4854680 -0.6250076014  0.46049352  0.47742738 #>  [942,]  0.45553863  0.4162804  0.5003688 -0.3083023299 -0.45019827  0.57058284 #>  [943,] -0.28160679  0.5114592  0.5297272 -0.0320127669 -0.28775427  0.73554306 #>  [944,]  0.22173426  0.3298117  0.4719947  0.1537691859 -0.61840458  0.39422415 #>  [945,] -0.55294770  0.4134155 -0.5005348  0.6743901281 -0.45557933  0.56501008 #>  [946,]  0.51367485  0.4359011  0.5065125  0.7944163256  0.58602020  0.60793471 #>  [947,] -0.09948307 -0.3817857 -0.4371794 -0.0017196242 -0.15331115  0.86554394 #>  [948,] -0.35653019 -0.5183225  0.5206266 -0.0690285102  0.66530586 -0.31138930 #>  [949,]  0.36565422  0.3854761  0.4905462 -0.5153025035  0.49094224 -0.49066486 #>  [950,] -0.81162457 -0.6856017  0.4666098  0.1012275448  0.35144456 -0.63770926 #>  [951,] -0.26015554  0.5208034  0.5325809 -0.0250237079 -0.27385138  0.74930844 #>  [952,]  0.80937850  0.5550976  0.5430879 -0.0099740564 -0.22632833 -0.20415650 #>  [953,]  0.40703947  0.3998208 -0.5048489 -0.4142701836  0.51860703  0.53819956 #>  [954,]  0.24581896  0.3401329  0.4755325  0.1991819814 -0.59809138 -0.58429601 #>  [955,]  0.49406370 -0.5707307 -0.4955559 -0.2370901926 -0.42609085  0.59547611 #>  [956,]  0.59924948  0.4655288 -0.4843267 -0.1031403827  0.63826059 -0.33872476 #>  [957,] -0.16045259  0.5727850 -0.4514508 -0.0061501841 -0.20399177 -0.18258540 #>  [958,] -0.23184527 -0.4660853 -0.4634107 -0.0176536927 -0.25502835 -0.23216093 #>  [959,] -0.07654526 -0.3587262 -0.4297398 -0.0008805027  0.86885754 -0.11380374 #>  [960,]  0.74236742 -0.4780666 -0.4670739 -0.0242860114 -0.27219749  0.75094160 #>  [961,]  0.27189951  0.3507241  0.4791117  0.2546357726  0.42279302  0.43775017 #>  [962,] -0.68221205  0.3682491  0.4849323 -0.6360593817 -0.54270613 -0.52593320 #>  [963,] -0.23461006  0.5325895  0.5361838 -0.0182902432  0.74310586 -0.23399211 #>  [964,]  0.44648295 -0.5867768  0.4994045 -0.3267911300  0.54405860 -0.43536510 #>  [965,] -0.43624610  0.4530497  0.5118287 -0.1391531798 -0.38335068 -0.36070905 #>  [966,] -0.09198332 -0.3747663  0.5650685 -0.0014052279 -0.14631658 -0.12791148 #>  [967,]  0.19450520  0.3173454  0.4676494  0.1099492073 -0.64281419 -0.63162483 #>  [968,] -0.13629247  0.5888448  0.5535473 -0.0039422538  0.81501366 -0.16439775 #>  [969,] -0.07801745 -0.3603633 -0.4302735 -0.0009239138 -0.13264039 -0.11519074 #>  [970,]  0.12055763  0.2766850 -0.5471825  0.0319167808 -0.72038425 -0.71388807 #>  [971,] -0.09909088 -0.3814294 -0.4370656 -0.0017021488  0.84704923 -0.13411824 #>  [972,] -0.41565007  0.4602478 -0.4859516 -0.1172332795  0.62918806 -0.34793915 #>  [973,] -0.10492478  0.6133815 -0.4387193 -0.0019743622 -0.15825424 -0.13909633 #>  [974,] -0.09878777 -0.3811532  0.5630226 -0.0016887225 -0.15267184  0.86614317 #>  [975,]  0.18149654  0.3110204  0.4654120 -0.9080573711  0.34488112  0.35533327 #>  [976,]  0.64611695 -0.5173287 -0.4790692 -0.0673155994 -0.33306525 -0.30974951 #>  [977,]  0.86363178 -0.4112089 -0.4464694 -0.0039481526 -0.18504781 -0.16445632 #>  [978,] -0.12216761  0.5992773 -0.4431806 -0.0029436289 -0.17328345 -0.15327931 #>  [979,] -0.06785459 -0.3485034  0.5736137 -0.0006504680 -0.12204565 -0.10540836 #>  [980,]  0.11574620  0.2735134 -0.5483891  0.0287501906  0.27375883  0.27990246 #>  [981,] -0.39461455  0.4677244 -0.4836520 -0.0977414028 -0.35799991 -0.33493316 #>  [982,] -0.72950990  0.3501651  0.4789240  0.2514909836 -0.57830935  0.43658755 #>  [983,]  0.36432883  0.3850097  0.4903955 -0.5186341309  0.49003664 -0.49161185 #>  [984,]  0.36266024 -0.6155781  0.4902054  0.4771665400  0.48889462  0.50719375 #>  [985,]  0.44972572 -0.5856815 -0.5002498 -0.3200967463 -0.45388101  0.56676952 #>  [986,] -0.19581734  0.5522611  0.5422155 -0.0107720030  0.76995168 -0.20776856 #>  [987,]  0.71808324 -0.4886726  0.5296869 -0.0321236907  0.71204676 -0.26465441 #>  [988,]  0.18141033  0.3109776  0.4653967  0.0918296284  0.34479802  0.35524518 #>  [989,]  0.85061162  0.5798935 -0.4492438 -0.0050547955 -0.19543047 -0.17437288 #>  [990,] -0.59701626  0.3984308  0.4947074  0.5761706037 -0.48405608 -0.46457335 #>  [991,]  0.70311390 -0.4949386  0.5277737 -0.0378459168 -0.29750419 -0.27414862 #>  [992,] -0.33836836 -0.5114312  0.5227350 -0.0579415068 -0.32348559 -0.30012144 #>  [993,] -0.26261545 -0.4802917  0.5322463 -0.0257593187 -0.27545990 -0.25228083 #>  [994,] -0.49151524  0.4341431  0.5059650 -0.2136111987 -0.41717651  0.60464944 #>  [995,]  0.14942687 -0.7058977 -0.5406928  0.0555437104  0.31234511  0.32082650 #>  [996,] -0.63307617  0.3859224 -0.5093096 -0.5121146001  0.49180849  0.51024086 #>  [997,] -0.38853845  0.4699115 -0.4829803 -0.0926180058 -0.35429400 -0.33117932 #>  [998,]  0.27557028  0.3521734 -0.5204023  0.2628982289  0.42565099  0.44076374 #>  [999,]  0.25594825 -0.6556887  0.4769505  0.2200018944 -0.58985404  0.42440455 #> [1000,]  0.51586630 -0.5633558  0.5067438 -0.2022607427 -0.41263168 -0.39068053 #> [1001,]  0.43182470  0.4082625  0.4978352 -0.3580427287 -0.46531172 -0.44508344 #> [1002,]  0.39799756 -0.6032821 -0.5058401  0.5642969362 -0.48734340 -0.46799793 #> [1003,] -0.17953989 -0.4386613  0.5450105 -0.0084156804  0.78172223  0.80364166 #> [1004,] -0.15239793  0.5779216  0.5501432 -0.0053380349 -0.19778160 -0.17662507 #> [1005,]  0.12266556 -0.7219529 -0.5466668  0.0333704194  0.28214153 -0.71120986 #> [1006,] -0.69178141 -0.6353091 -0.5162399  0.3402599676  0.45030370 -0.53327961 #> [1007,]  0.10721377 -0.7323437  0.4493610  0.0236374004  0.26303669  0.26853880 #> [1008,]  0.47918607  0.4242520  0.5028739 -0.2631337054 -0.43534459  0.58593517 #> [1009,] -0.49391037 -0.5666674  0.5057123 -0.2173908568  0.58134632  0.60313058 #> [1010,] -0.45084615 -0.5519935  0.5102696 -0.1565247322 -0.39225047 -0.36979688 #> [1011,] -0.43445589 -0.5463288  0.5120206 -0.1371302634  0.61773966  0.64040297 #> [1012,] -0.50054059  0.4310913  0.5050131  0.7718975917 -0.42274964 -0.40108354 #> [1013,] -0.12489397 -0.4028070 -0.4438361 -0.0031211988 -0.17558137 -0.15545744 #> [1014,]  0.09468501 -0.7415689 -0.5542428  0.0172345864  0.24641534  0.25093615 #> [1015,]  0.20259487  0.3211505  0.4689846  0.1221059888  0.36461690  0.37624808 #> [1016,]  0.62957363  0.4765153  0.5190453 -0.0785970827 -0.34322270  0.68001267 #> [1017,]  0.08441336 -0.7498041  0.4424737  0.0128981761  0.23187781  0.23555784 #> [1018,]  0.79783480  0.5488673 -0.4588273 -0.0118085649 -0.23454910  0.78785403 #> [1019,]  0.17487897  0.3076952 -0.5357737  0.0835097418 -0.66156055  0.34850337 #> [1020,] -0.37311804  0.4755254 -0.4812581 -0.0805665349  0.65512917 -0.32165127 #> [1021,] -0.10586911 -0.3874367 -0.4389794 -0.0020209463 -0.15910151 -0.13989293 #> [1022,]  0.13450536 -0.7145854 -0.5439020  0.0423114204  0.29590718  0.30338949 #> [1023,]  0.14817767  0.2933977 -0.5409511  0.0543488686  0.31100431 -0.68059582 #> [1024,]  0.80916467 -0.4450202 -0.4569483 -0.0100060242 -0.22648209 -0.20430569 #> [1025,] -0.15164155 -0.4215856 -0.4497037 -0.0052658393  0.80280768 -0.17606037 #> [1026,] -0.09429334  0.6230242 -0.4356406 -0.0014976828 -0.14849474 -0.12994677 #> [1027,]  0.44930901  0.4141778 -0.5002942 -0.3209524347 -0.45414554 -0.43350449 #> [1028,] -0.05015739 -0.3238425 -0.4181273 -0.0003076868 -0.10186994 -0.08696794 #> [1029,]  0.65431800  0.4857727  0.5218798 -0.0622218240 -0.32800885  0.69533581 #> [1030,] -0.35262079 -0.5168536  0.5210762 -0.0665107860  0.66771200 -0.30896733 #> [1031,] -0.77901095  0.3294827 -0.5281189  0.1524611553  0.38094909 -0.60645980 #> [1032,] -0.08358303 -0.3663348 -0.4322126 -0.0011003014 -0.13820144 -0.12035093 #> [1033,]  0.75713687  0.5286944 -0.4650075 -0.0202931485 -0.26242628 -0.23942901 #> [1034,]  0.49650492  0.4300934 -0.4952984 -0.2329936429  0.57542175  0.59703390 #> [1035,]  0.12325039  0.2784221  0.4534749  0.0337809804  0.28283809 -0.71047124 #> [1036,] -0.14414897 -0.4166003  0.5518478 -0.0045868017 -0.19129492  0.82958277 #> [1037,] -0.05434628 -0.3302566 -0.4203004 -0.0003748281 -0.10688239 -0.09152509 #> [1038,] -0.06369701  0.6567695 -0.4246414 -0.0005555074 -0.11752419 -0.10125373 #> [1039,] -0.65390844  0.3785369 -0.5117033 -0.5647296020 -0.52256592  0.49519645 #> [1040,] -0.28717495  0.5091046  0.5290083 -0.0340511278 -0.29132080 -0.26799858 #> [1041,]  0.35552244  0.3818975  0.4893880  0.4591513688  0.48398482 -0.49794357 #> [1042,]  0.53643562  0.4436460 -0.4910812 -0.1729673764  0.59998080  0.62225446 #> [1043,] -0.76376178  0.3360963 -0.5258450  0.1804030240  0.39395680 -0.59270062 #> [1044,]  0.51504393  0.4363653 -0.4933430 -0.2035030956 -0.41313747 -0.39120002 #> [1045,] -0.36226737  0.4795354  0.5199707 -0.0728597475  0.66178044  0.68505908 #> [1046,] -0.39927401 -0.5339440  0.5158353 -0.1018201924 -0.36083980 -0.33781227 #> [1047,]  0.20742505  0.3233796  0.4697631  0.1297141772  0.36897886  0.38086801 #> [1048,]  0.62472353  0.4747338  0.5184992 -0.0821739632 -0.34619167  0.67701467 #> [1049,] -0.64606878 -0.6186674 -0.5107952 -0.5448736454  0.48288472  0.50090485 #> [1050,] -0.63431697  0.3854862 -0.5094505  0.4847698652  0.49096191  0.50935571 #> [1051,]  0.06781735  0.2352072  0.4363201  0.0074627736  0.20622368  0.20847453 #> [1052,]  0.15972151  0.2997673 -0.5386282  0.0660145857 -0.67683028  0.33230890 #> [1053,]  0.71877401 -0.4883788  0.5297767 -0.0318769003  0.71249024 -0.26421430 #> [1054,]  0.53690665 -0.5561929  0.5089688 -0.1723360535  0.60026887 -0.37745054 #> [1055,] -0.47357008  0.4402333 -0.4921403 -0.1867922816 -0.40614577 -0.38402414 #> [1056,] -0.08518738  0.6320037 -0.4327501 -0.0011548574 -0.13977611 -0.12181521 #> [1057,]  0.09857302  0.2613818  0.4469182  0.0190861521 -0.74830542  0.25652503 #> [1058,]  0.25585503 -0.6557268 -0.5230624  0.2198059576  0.41007092 -0.57567469 #> [1059,] -0.10502262 -0.3867036 -0.4387463 -0.0019791553 -0.15834217 -0.13917898 #> [1060,] -0.70974075  0.3578837 -0.5184958 -0.7030786869  0.43690612 -0.54737703 #> [1061,]  0.36876512 -0.6134312  0.4908991  0.4925021989 -0.50693737 -0.48844806 #> [1062,]  0.78077867  0.5401039  0.5384845 -0.0149547629 -0.24642333 -0.22373193 #> [1063,]  0.06718162  0.2345821  0.4360582  0.0072902372  0.20517795  0.20737233 #> [1064,] -0.59155150  0.4003030 -0.5046951  0.5890291833 -0.48046996 -0.46083966 #> [1065,] -0.62756367 -0.6121451 -0.5086861  0.5016819342  0.49555571 -0.48584254 #> [1066,] -0.54470706  0.4161975  0.5003427  0.6912045637 -0.45035365  0.57042200 #> [1067,] -0.14778516 -0.4190437 -0.4489131 -0.0049082486 -0.19417084  0.82683275 #> [1068,] -0.19900590 -0.4494532  0.5416886 -0.0112840129  0.76768503 -0.20997210 #> [1069,]  0.52422521  0.4394831 -0.4923734 -0.1899460115 -0.40749781  0.61458908 #> [1070,]  0.42989852  0.4076091  0.4976281 -0.3622659087  0.53344967  0.55363069 #> [1071,] -0.50130360  0.4308335 -0.4950673  0.7706413988 -0.42322167 -0.40156943 #> [1072,]  0.35996536 -0.6165294  0.4898976  0.4703738404  0.48704565 -0.49474047 #> [1073,]  0.34094500  0.3766899  0.4876953  0.4222299799 -0.52617279 -0.50858340 #> [1074,]  0.36394734 -0.6151246 -0.5096479 -0.5195937629  0.48977573 -0.49188472 #> [1075,] -0.18626625  0.5575184  0.5438331 -0.0093388505 -0.22318386 -0.20110753 #> [1076,]  0.23997185  0.3376796  0.4746962  0.1876122242  0.39707493  0.41059569 #> [1077,] -0.14348268  0.5838525  0.5519890 -0.0045295189 -0.19076502 -0.16991093 #> [1078,] -0.44558724  0.4498180  0.5108300 -0.1500858554 -0.38904295 -0.36651935 #> [1079,] -0.36448498 -0.5212884  0.5197183 -0.0743850887  0.66041944 -0.31631299 #> [1080,] -0.05446365 -0.3304304  0.5796409 -0.0003768280 -0.10702049 -0.09165088 #> [1081,] -0.35771466 -0.5187660  0.5204908 -0.0698060760 -0.33542252 -0.31212280 #> [1082,]  0.69995158  0.5037613  0.5273767 -0.0391501382 -0.29950827  0.72385547 #> [1083,]  0.71173697  0.5086477 -0.4711312 -0.0344609280 -0.29201589 -0.26868930 #> [1084,] -0.32305419  0.4945243  0.5245554 -0.0497327724 -0.31396471  0.70942045 #> [1085,] -0.87837825  0.2773746 -0.5469212  0.0326454984  0.28089379  0.28746708 #> [1086,] -0.14852903 -0.4195379  0.5509331 -0.0049758736 -0.19475592 -0.17372716 #> [1087,] -0.55550911  0.4125500 -0.5008082  0.6690562750  0.54279071 -0.43667909 #> [1088,] -0.07318627 -0.3548928  0.5715134 -0.0007863630 -0.12767968 -0.11060231 #> [1089,] -0.16506602  0.5699295 -0.4523353 -0.0066523475 -0.20749772 -0.18595757 #> [1090,]  0.72607521  0.5147537  0.5307332 -0.0293569254  0.71719353 -0.25955065 #> [1091,]  0.10531539  0.2663092 -0.5511606  0.0225846527  0.26058862 -0.73405491 #> [1092,]  0.80854619 -0.4453604 -0.4570530 -0.0100989017 -0.22692648 -0.20473693 #> [1093,] -0.09998658 -0.3822416 -0.4373249 -0.0017422315 -0.15377300 -0.13488909 #> [1094,] -0.06891319  0.6501963 -0.4268149 -0.0006761639 -0.12317842 -0.10645116 #> [1095,]  0.62441669 -0.5253785  0.5184648 -0.0824045260  0.65362061  0.67682504 #> [1096,]  0.08309844  0.2490906  0.4420279  0.0123989726  0.22994949  0.23351948 #> [1097,] -0.06428828  0.6560028 -0.4248958 -0.0005684425 -0.11817451 -0.10185053 #> [1098,]  0.75833606  0.5292550  0.5351639 -0.0199923358  0.73837418 -0.23864165 #> [1099,]  0.08945377 -0.7456784  0.4441268  0.0149277158  0.23912389  0.24322065 #> [1100,]  0.66726238 -0.5092579 -0.4766005 -0.0548077379  0.68000680 -0.29661817 #> [1101,]  0.38525173 -0.6076830 -0.5072505 -0.4666005608  0.50418363  0.52316672 #> [1102,]  0.16335393  0.3017095  0.4620748  0.0699790337 -0.67310177  0.33626365 #> [1103,] -0.08205777 -0.3647311  0.5683070 -0.0010499951  0.86330710 -0.11894944 #> [1104,]  0.08942934 -0.7456980 -0.5558810  0.0149174279  0.23908930  0.24318407 #> [1105,]  0.17067053  0.3055393  0.4634539  0.0783997662 -0.66572578 -0.65591357 #> [1106,]  0.73868992 -0.4797114 -0.4675764 -0.0253669345 -0.27460681 -0.25143784 #> [1107,] -0.18253604 -0.4403756 -0.4555180  0.9911816053 -0.22047077 -0.19848001 #> [1108,] -0.36554172  0.4783198 -0.4804017 -0.0751208184 -0.34022880  0.68303332 #> [1109,]  0.17767385 -0.6908910  0.4647312  0.0870117952  0.34117579  0.35140479 #> [1110,] -0.22602840  0.5367375 -0.4625466 -0.0163686440  0.74891870 -0.22829125 #> [1111,] -0.11634907  0.6038504 -0.4417392 -0.0025876036 -0.16831131  0.85142503 #> [1112,] -0.30157247  0.5031375  0.5271863 -0.0397910889  0.69952746 -0.27710532 #> [1113,]  0.30930972  0.3650989  0.4838947 -0.6570573554  0.45110574 -0.53243637 #> [1114,] -0.06833123 -0.3490909 -0.4265800 -0.0006619601 -0.12255658 -0.10587861 #> [1115,] -0.44417464  0.4503056 -0.4890192 -0.1483914634  0.61181823 -0.36563979 #> [1116,] -0.19434623 -0.4469413  0.5424607 -0.0105415553 -0.22899844 -0.20674859 #> [1117,]  0.55864074 -0.5487216 -0.4887185 -0.1450584232 -0.38646582 -0.36388778 #> [1118,]  0.68450287  0.4975177  0.5254699 -0.0460358024  0.69076178 -0.28585290 #> [1119,] -0.40364269 -0.5355017  0.5153564 -0.1057655382 -0.36350119  0.65948761 #> [1120,]  0.85138378  0.5804043  0.5509151 -0.0049838417  0.80517558 -0.17379273 #> [1121,] -0.18898315 -0.4439965  0.5433667 -0.0097315669 -0.22514832 -0.20301187 #> [1122,]  0.19597344  0.3180430  0.4678948 -0.8878990041 -0.64145342  0.36981705 #> [1123,]  0.54821097  0.4476823  0.5101693 -0.1577011761 -0.39282581 -0.37038505 #> [1124,] -0.46738399  0.4423416 -0.4914858 -0.1781512142 -0.40235625  0.61986046 #> [1125,] -0.04176308 -0.3095401  0.5867897 -0.0001966343 -0.09126756 -0.07738476 #> [1126,]  0.79300078  0.5463330  0.5403946 -0.0126453372  0.76205426 -0.21545469 #> [1127,] -0.75627812 -0.6607434 -0.5247659  0.1949937493  0.40018183  0.41387933 #> [1128,]  0.58529006 -0.5394210 -0.4858496 -0.1163016147 -0.37023967  0.65264270 #> [1129,] -0.24291137  0.5286719  0.5349856 -0.0203053192 -0.26245846 -0.23946066 #> [1130,] -0.28001837  0.5121359  0.5299338 -0.0314489823  0.71326614  0.73655557 #> [1131,] -0.31535864  0.4975729  0.5254868 -0.0459701320 -0.30915142 -0.28576615 #> [1132,] -0.27784295 -0.4869335 -0.4697820 -0.0306893394 -0.28533415  0.73794390 #> [1133,]  0.23384043  0.3350723 -0.5261957  0.1758480636  0.39194089 -0.59483214 #> [1134,]  0.11019395  0.2697378  0.4501639  0.0253516072  0.26683275  0.27256134 #> [1135,]  0.08812498  0.2532505  0.4436992  0.0143745823  0.23723542  0.24122310 #> [1136,] -0.86618568  0.2849969  0.4559424  0.0417525571  0.29512237  0.30255703 #> [1137,] -0.23929719 -0.4696335  0.5355038 -0.0194085200 -0.26004269 -0.23708512 #> [1138,] -0.62170435 -0.6100999 -0.5080274  0.5162526423 -0.50048539 -0.48170714 #> [1139,]  0.73045300  0.5166564 -0.4686858 -0.0279213834 -0.27997183  0.74325654 #> [1140,] -0.50780600 -0.5713617 -0.4957531 -0.2402614037 -0.42725039 -0.40571840 #> [1141,]  0.05307805  0.2194407  0.4295691  0.0040754852  0.18048441  0.18139601 #> [1142,] -0.42965605  0.4553412  0.5125360 -0.1318190511  0.62066236  0.64338232 #> [1143,] -0.50735766  0.4287896  0.5042942 -0.2394982923 -0.42697225 -0.40543185 #> [1144,] -0.40692599  0.4633317  0.5149976 -0.1088093302 -0.36550073  0.65745774 #> [1145,]  0.25240600 -0.6571400  0.4764589 -0.7873879072 -0.59271559 -0.57861722 #> [1146,]  0.05307805  0.2194407  0.4295691  0.0040754852  0.18048441  0.18139601 #> [1147,]  0.54345981  0.4460509 -0.4903358 -0.1637322101  0.60427367 -0.37335144 #> [1148,]  0.61914919 -0.5273016 -0.4821250 -0.0864433188 -0.34959988 -0.32642989 #> [1149,]  0.08810061  0.2532308 -0.5563087  0.0143645598  0.23720064  0.24118632 #> [1150,] -0.28275911  0.5109697  0.5295777 -0.0324266314 -0.28849368 -0.26519085 #> [1151,]  0.27678969  0.3526528 -0.5202417  0.2656654315 -0.57340375  0.44176028 #> [1152,] -0.21091345 -0.4556890  0.5397742 -0.0133540697 -0.24067749  0.78188108 #> [1153,] -0.15932428 -0.4265074 -0.4512315 -0.0060315461 -0.20312880 -0.18175617 #> [1154,]  0.20773238  0.3235204 -0.5301878 -0.8697929313  0.36925457  0.38115999 #> [1155,] -0.04176308 -0.3095401  0.5867897 -0.0001966343 -0.09126756 -0.07738476 #> [1156,]  0.44846994 -0.5861056  0.4996164 -0.3226795162 -0.45467839 -0.43405649 #> [1157,] -0.56230248  0.4102521 -0.5015347  0.6546692307  0.53845403  0.55882421 #> [1158,] -0.41255280  0.4613401  0.5143847 -0.1141858753  0.63107346 -0.34602250 #> [1159,] -0.09869034  0.6189358  0.5630510 -0.0016844213  0.84741789 -0.13377273 #> [1160,] -0.32627432  0.4932601 -0.4758309  0.9486226369 -0.31597275 -0.29258974 #> [1161,] -0.14749511  0.5811495  0.5511470 -0.0048820542 -0.19394241 -0.17294869 #> [1162,]  0.06781735  0.2352072  0.4363201  0.0074627736  0.20622368  0.20847453 #> [1163,] -0.12486914 -0.4027881  0.5561698 -0.0031195499 -0.17556053 -0.15543767 #> [1164,] -0.05866022 -0.3364520  0.5776178 -0.0004527204 -0.11187928 -0.09608433 #> [1165,]  0.45249242 -0.5847475 -0.4999552 -0.3144499227 -0.45212651  0.56858657 #> [1166,] -0.74312972  0.3446873 -0.5229223 -0.7780558494  0.41088754 -0.57481248 #> [1167,]  0.53003234  0.4414604 -0.4917593 -0.1817231110  0.59606174  0.61823917 #> [1168,]  0.55378532  0.4496016 -0.4892369 -0.1508432031  0.61057448 -0.36691013 #> [1169,]  0.23574496  0.3358861 -0.5259169 -0.8205388243  0.39354296  0.40686183 #> [1170,]  0.05307805  0.2194407  0.4295691  0.0040754852  0.18048441  0.18139601 #> [1171,] -0.11968721 -0.3987946  0.5574265 -0.0027880946  0.82882456 -0.15128340 #> [1172,]  0.12202647  0.2776358  0.4531776  0.0329253818  0.28137827 -0.71201920 #> [1173,]  0.57688892  0.4576276 -0.4867589 -0.1248365559  0.62464664 -0.35255966 #> [1174,]  0.65878039 -0.5125248  0.5224006 -0.0595815144 -0.32525067 -0.30189341 #> [1175,]  0.11042967  0.2699008  0.4502266  0.0254904394  0.26713062  0.27287700 #> [1176,]  0.20801133  0.3236481  0.4698567  0.1306553529 -0.63049537  0.38142480 #> [1177,]  0.09933292  0.2619488  0.4471404  0.0194620117  0.25271314 -0.74239644 #> [1178,] -0.30355035  0.5023305  0.5269399 -0.0406350960 -0.30172245 -0.27835117 #> [1179,] -0.86687313  0.2845800  0.4557869  0.0412012270  0.29433943  0.30172659 #> [1180,]  0.17054187  0.3054729  0.4634301  0.0782466276 -0.66585399  0.34395047 #> [1181,]  0.62507847 -0.5251361 -0.4814609 -0.0819078933 -0.34597451 -0.32276596 #> [1182,]  0.18751820  0.3139815  0.4664623  0.1000415254  0.35063375 -0.63856866 #> [1183,]  0.48826082  0.4273115  0.5038319 -0.2470280023  0.57030728 -0.40823535 #> [1184,] -0.42854077  0.4557301 -0.4873440  0.8693918013 -0.37865864 -0.35592583 #> [1185,] -0.67975173 -0.6308432 -0.5147693  0.3700788923 -0.54092455  0.47593816 #> [1186,]  0.40675803  0.3997244  0.4951203 -0.4149305482 -0.48157746 -0.46199250 #> [1187,] -0.22028990 -0.4604292 -0.4616788 -0.0151704735  0.75284258 -0.22444994 #> [1188,]  0.61706140 -0.5280607  0.5176421 -0.0880869077  0.64912464 -0.32771980 #> [1189,]  0.05763077  0.2246223 -0.5681782  0.0049894044  0.18879379  0.19012543 #> [1190,] -0.34858830 -0.5153304 -0.4784576 -0.0639906849 -0.32980254  0.69353271 #> [1191,] -0.34932690  0.4843900 -0.4785432 -0.0644465116  0.66974194 -0.30692535 #> [1192,]  0.43373349 -0.5910905  0.4980402 -0.3538837098  0.53591398  0.55618875 #> [1193,] -0.42456749  0.4571179 -0.4869160 -0.1263647350  0.62376011 -0.35346224 #> [1194,]  0.77313736 -0.4636703 -0.4626715 -0.0165485127 -0.25164922 -0.22884768 #> [1195,] -0.30165754  0.5031027 -0.4728244 -0.0398271064 -0.30052633  0.72284107 #> [1196,]  0.24298173  0.3389464  0.4751284 -0.8064741800  0.39957057 -0.58676664 #> [1197,] -0.44111431  0.4513632 -0.4886923 -0.1447711911  0.61368345  0.63626459 #> [1198,] -0.72061615 -0.6463306 -0.5199016  0.2715885042  0.42860047 -0.55612711 #> [1199,] -0.47399056 -0.5599098 -0.4921848 -0.1873907395  0.59359643 -0.38428853 #> [1200,] -0.11055629  0.6085857 -0.4402415 -0.0022629289 -0.16326321  0.85618902 #> [1201,]  0.44377918 -0.5876906  0.4991158  0.6675653175 -0.45766268 -0.43714904 #> [1202,]  0.05307805  0.2194407  0.4295691  0.0040754852  0.18048441  0.18139601 #> [1203,]  0.75219006 -0.4735989 -0.4657086 -0.0215703053 -0.26571667 -0.24266790 #> [1204,]  0.85063639  0.5799098  0.5507613 -0.0050525087 -0.19541104 -0.17435428 #> [1205,] -0.11948132 -0.3986332 -0.4425226 -0.0027754377  0.82900030 -0.15111709 #> [1206,] -0.27798127 -0.4869928 -0.4698001 -0.0307372125 -0.28542322  0.73785557 #> [1207,]  0.12841545  0.2816827 -0.5452973  0.0375457627  0.28891318  0.29597135 #> [1208,]  0.45853553  0.4172913  0.5006872 -0.3023262664 -0.44830475 -0.42745757 #> [1209,] -0.45349028  0.4470977  0.5099883 -0.1598409143 -0.39386413 -0.37144672 #> [1210,] -0.15605155 -0.4244331  0.5494120 -0.0056964927  0.79938696 -0.17934055 #> [1211,] -0.47720098  0.4389982 -0.4925241 -0.1920070027 -0.40837287 -0.38630868 #> [1212,]  0.27074501 -0.6497337 -0.5210420  0.2520586060  0.42189024  0.43679806 #> [1213,]  0.07780185  0.2445060 -0.5598342  0.0105110132  0.22201169  0.22513285 #> [1214,]  0.17396975  0.3072322 -0.5359394  0.0823891580  0.33754419 -0.65244595 #> [1215,]  0.83975101  0.5729124 -0.4514113 -0.0061286562 -0.20383621 -0.18243590 #> [1216,] -0.06904210  0.6500390  0.5731333 -0.0006793357 -0.12331587 -0.10657773 #> [1217,]  0.23802753  0.3368568  0.4744151 -0.8161596321 -0.60454573 -0.59111748 #> [1218,] -0.58186753  0.4036092  0.4963578  0.6113842763 -0.47415598 -0.45427146 #> [1219,]  0.42309562 -0.5947015 -0.5031052 -0.3773875682 -0.47093927 -0.45092804 #> [1220,] -0.17110109 -0.4337175  0.5465368 -0.0073519894 -0.21203155 -0.19032604 #> [1221,]  0.68465831  0.4975796 -0.4745112 -0.0459621014  0.69085921 -0.28575554 #> [1222,] -0.20239158 -0.4512523 -0.4588641 -0.0118468213  0.76529125  0.78769861 #> [1223,] -0.24099811 -0.4704331  0.5352593 -0.0198267738 -0.26118089 -0.23820410 #> [1224,] -0.20595463  0.5468771  0.5405616 -0.0124609576 -0.23721394 -0.21474146 #> [1225,] -0.14154051 -0.4148183 -0.4475966 -0.0043653549 -0.18921510 -0.16843075 #> [1226,]  0.60367265  0.4671102  0.5161593 -0.0992254371 -0.35904403 -0.33599144 #> [1227,]  0.20920450  0.3241932 -0.5299535  0.1325826167 -0.62942775  0.38255536 #> [1228,] -0.22467254  0.5374025  0.5376570 -0.0160794211 -0.25015694 -0.22738583 #> [1229,] -0.34518577 -0.5140385  0.5219376 -0.0619237148  0.67229762  0.69564379 #> [1230,]  0.09949047  0.2620660  0.4471862  0.0195405172  0.25292379  0.25782663 #> [1231,]  0.23165485  0.3341340 -0.5265175  0.1717479304 -0.60990591  0.40321486 #> [1232,]  0.18511645 -0.6871924  0.4660465  0.0967625206  0.34835137 -0.64098793 #> [1233,]  0.10068214 -0.7370519  0.4475312  0.0201407820  0.25451128 -0.74049224 #> [1234,] -0.25586642  0.5227286  0.5331690 -0.0237795481 -0.27103717 -0.24791318 #> [1235,] -0.86252297  0.2871943 -0.5432402  0.0447682120 -0.70074270  0.30694306 #> [1236,]  0.11065020  0.2700530 -0.5497149  0.0256207578  0.26740897 -0.72682800 #> [1237,]  0.52072854  0.4382946 -0.4927428 -0.1950283477 -0.40964385 -0.38761296 #> [1238,]  0.21918425 -0.6713168 -0.5283953  0.1493181975  0.37937905 -0.60812138 #> [1239,]  0.53652221 -0.5563244 -0.4910720 -0.1728511862  0.60003376  0.62230870 #> [1240,]  0.58985475 -0.5378090  0.5146466 -0.1118603957 -0.36746085 -0.34453314 #> [1241,] -0.05432638 -0.3302271  0.5797095 -0.0003744897 -0.10685897 -0.09150376 #> [1242,]  0.21455135  0.3266138 -0.5291121  0.1414127994 -0.62468253  0.38757948 #> [1243,]  0.07210329  0.2393133 -0.5619700  0.0086921217  0.21314240  0.21577068 #> [1244,]  0.09857302  0.2613818  0.4469182  0.0190861521 -0.74830542  0.25652503 #> [1245,] -0.51974497  0.4246123 -0.4970132  0.7387991954 -0.43467755 -0.41337648 #> [1246,]  0.66469412  0.4897485  0.5230957 -0.0562200114 -0.32158726 -0.29821674 #> [1247,] -0.42409739  0.4572824  0.5131347 -0.1258698860 -0.37595373 -0.35317089 #> [1248,] -0.69422934 -0.6362267 -0.5165430 -0.6657403036  0.44849953  0.46482326 #> [1249,]  0.14841988 -0.7064654 -0.5409009  0.0545792744  0.31126476  0.31968047 #> [1250,] -0.46694916 -0.5575100 -0.4914398 -0.1775552698 -0.40209009  0.62013317 #> [1251,]  0.08942934 -0.7456980 -0.5558810  0.0149174279  0.23908930  0.24318407 #> [1252,] -0.51832463  0.4250911 -0.4968632  0.7413527242  0.56620821 -0.41246255 #> [1253,] -0.67977708 -0.6308525 -0.5147724 -0.6299844471 -0.54094287 -0.52408108 #> [1254,]  0.10531539  0.2663092 -0.5511606  0.0225846527  0.26058862 -0.73405491 #> [1255,]  0.05307805  0.2194407  0.4295691  0.0040754852  0.18048441  0.18139601 #> [1256,]  0.57591515  0.4572868 -0.4868640 -0.1258567065  0.62405390 -0.35316311 #> [1257,] -0.19247447 -0.4459202  0.5427748 -0.0102535362  0.77234119 -0.20544775 #> [1258,]  0.55291565 -0.5506982  0.5106704  0.8481022056 -0.38995583 -0.36745189 #> [1259,]  0.57415246 -0.5433296  0.5129460 -0.1277198975  0.62298091 -0.35425573 #> [1260,]  0.33094001  0.3730704 -0.5134865 -0.6030687764 -0.53325290  0.48399149 #> [1261,] -0.49182959  0.4340367 -0.4940682 -0.2141045390 -0.41737031 -0.39554979 #> [1262,]  0.12051621 -0.7233419 -0.5471927  0.0318886242 -0.72043413  0.28605905 #> [1263,] -0.17523381 -0.4361605 -0.4542178 -0.0078601382 -0.21510365 -0.19329093 #> [1264,] -0.10946059  0.6095034  0.5600493 -0.0022047356 -0.16229673 -0.14290032 #> [1265,] -0.82594617  0.3072751  0.4640760  0.0824924060  0.33762709  0.34764196 #> [1266,] -0.59489898 -0.6008432  0.4949392 -0.4188276353  0.51733537 -0.46312437 #> [1267,] -0.11014271  0.6089313  0.5598680 -0.0022408456 -0.16289886 -0.14346762 #> [1268,]  0.78600742  0.5427386  0.5392921 -0.0139317791 -0.24281516 -0.22020572 #> [1269,] -0.34830679 -0.5152237 -0.4784250 -0.0638176247 -0.32962889 -0.30629268 #> [1270,] -0.43288764 -0.5457838  0.5121888 -0.1353769794 -0.38130531  0.64137675 #> [1271,] -0.27615796 -0.4862097 -0.4695610 -0.0301107486 -0.28424819  0.73902057 #> [1272,]  0.12530213  0.2797283 -0.5460322  0.0352464913  0.28526765  0.29210518 #> [1273,]  0.46867683  0.4207102 -0.4982375 -0.2826416203  0.55807815  0.57914272 #> [1274,]  0.46487324  0.4194282  0.5013596 -0.2899264773 -0.44431150 -0.42332733 #> [1275,]  0.35288189  0.3809596  0.4890838  0.4524707973  0.48215813  0.50014417 #> [1276,] -0.19034602  0.5552496  0.5431347 -0.0099329816  0.77386984 -0.20396423 #> [1277,] -0.48918330  0.4349327  0.5062109  0.7900231255  0.58426049 -0.39387346 #> [1278,]  0.08875079 -0.7462436 -0.5560987  0.0146334539  0.23812671  0.24216583 #> [1279,] -0.06889133  0.6502229  0.5731939 -0.0006756270 -0.12315511 -0.10642968 #> [1280,]  0.08879135  0.2537891 -0.5560856  0.0146503331  0.23818436 -0.75777318 #> [1281,] -0.55175518  0.4138184  0.4995924 -0.3231438188 -0.45482140  0.56579535 #> [1282,]  0.20990985 -0.6754855  0.4701584  0.1337293688  0.37120187 -0.61677794 #> [1283,] -0.36610404  0.4781115  0.5195345 -0.0755146630 -0.34057366 -0.31731450 #> [1284,]  0.81407242  0.5577083  0.5438916 -0.0092907101 -0.22293831 -0.20086960 #> [1285,]  0.45270645 -0.5846753 -0.4999324 -0.3140155809  0.54800910 -0.43127302 #> [1286,] -0.16983494  0.5670396 -0.4532292 -0.0072010911  0.78891486  0.81058656 #> [1287,]  0.30593059  0.3638334 -0.5165231  0.3346509174  0.44861761 -0.53505256 #> [1288,] -0.24217413 -0.4709837  0.5350909 -0.0201199001 -0.26196650  0.76102327 #> [1289,] -0.08694645 -0.3697893 -0.4333292 -0.0012166397 -0.14148881 -0.12340936 #> [1290,] -0.14264494 -0.4155758 -0.4478328 -0.0044581964 -0.19009744 -0.16927326 #> [1291,] -0.25453451 -0.4766694 -0.4666470 -0.0234029603 -0.27016074 -0.24704845 #> [1292,] -0.32643774 -0.5068039  0.5241495 -0.0514619496 -0.31607456  0.70730831 #> [1293,]  0.57233157  0.4560344 -0.4872502  0.8703328432 -0.37812757  0.64461521 #> [1294,]  0.77307324  0.5362984 -0.4626811 -0.0165623979 -0.25169285 -0.22889043 #> [1295,] -0.45101025  0.4479501  0.5102522 -0.1567289953 -0.39235059 -0.36989923 #> [1296,]  0.21360066  0.3261859 -0.5292606  0.1398196815 -0.62552166  0.38669113 #> [1297,] -0.13739641 -0.4119347 -0.4466963 -0.0040288113  0.81411908 -0.16525024 #> [1298,]  0.19216442 -0.6837733  0.4672554  0.1065687925  0.35500498  0.36606416 #> [1299,]  0.42156893  0.4047792 -0.5032702  0.6191757962 -0.47192740 -0.45195489 #> [1300,]  0.55698195  0.4507050 -0.4888957 -0.1470151542 -0.38747677 -0.36491989 #> [1301,] -0.09945891 -0.3817638  0.5628276 -0.0017185441 -0.15328896  0.86556474 #> [1302,] -0.47092342 -0.5588653  0.5081396 -0.1830578955  0.59547626 -0.38236100 #> [1303,] -0.28724511  0.5090751 -0.4710007 -0.0340774375 -0.29136564 -0.26804313 #> [1304,]  0.25554665 -0.6558528 -0.5231050  0.2191583186 -0.59017746  0.42406306 #> [1305,]  0.11524187  0.2731758  0.4514820  0.0284302929 -0.72686272 -0.72075642 #> [1306,]  0.16988877  0.3051352  0.4633088  0.0774720516 -0.66650562  0.34325942 #> [1307,] -0.18021946 -0.4390519  0.5448901 -0.0085058430 -0.21877627 -0.19684046 #> [1308,] -0.14749511  0.5811495  0.5511470 -0.0048820542 -0.19394241 -0.17294869 #> [1309,] -0.20130884 -0.4506793 -0.4586881 -0.0116646612 -0.23394465 -0.21155763 #> [1310,] -0.16073258 -0.4273901  0.5484949 -0.0061798752 -0.20420557 -0.18279090 #> [1311,] -0.14167122  0.5850918  0.5523754 -0.0043762734  0.81068034 -0.16853058 #> [1312,] -0.89966784  0.2626898  0.4474303  0.0199633033  0.25404611  0.25901514 #> [1313,]  0.39641161 -0.6038279 -0.5060147 -0.4395063841 -0.48839212 -0.46909084 #> [1314,]  0.22676935 -0.6679814 -0.5272445  0.1627634606 -0.61406702 -0.60118649 #> [1315,] -0.13275590 -0.4086249  0.5543389 -0.0036735132 -0.18210172 -0.16165131 #> [1316,] -0.46934040 -0.5583258  0.5083071 -0.1808510593 -0.40355409 -0.38136707 #> [1317,] -0.08837589 -0.3712248 -0.4337921 -0.0012683821 -0.14287020 -0.12469630 #> [1318,] -0.14390124  0.5835679 -0.4480998 -0.0045654461 -0.19109801 -0.17022908 #> [1319,]  0.22323556  0.3304726  0.4722228  0.1564225358  0.38289406  0.39559832 #> [1320,] -0.23190780  0.5338846  0.5365801 -0.0176679026 -0.25507062  0.76779760 #> [1321,] -0.27478305  0.5143829 -0.4693801 -0.0296448966 -0.28336090 -0.26010001 #> [1322,] -0.15344011 -0.4227544 -0.4500668 -0.0054386338 -0.19859178 -0.17740172 #> [1323,] -0.09293674 -0.3756835 -0.4352261 -0.0014429239  0.85278177 -0.12875369 #> [1324,] -0.28439028  0.5102787  0.5293668 -0.0330195487 -0.28953917  0.73377114 #> [1325,]  0.09923294 -0.7381256  0.4471112  0.0194122963 -0.74742063  0.25746191 #> [1326,] -0.22234709  0.5385494 -0.4619917 -0.0155922410 -0.24856762 -0.22582981 #> [1327,] -0.17693517 -0.4371539 -0.4545244 -0.0080764084 -0.21636097 -0.19450549 #> [1328,] -0.14410049 -0.4165674 -0.4481419 -0.0045826171 -0.19125639 -0.17038042 #> [1329,]  0.56207752 -0.5475317  0.5116491 -0.1410683570 -0.38437183 -0.36175078 #> [1330,] -0.24847771  0.5260939  0.5341974 -0.0217472559 -0.26615944 -0.24310404 #> [1331,]  0.42311367 -0.5946954  0.4968967 -0.3773470378 -0.47092760  0.54908409 #> [1332,] -0.38966030 -0.5304933  0.5168954 -0.0935475602 -0.35497848 -0.33187238 #> [1333,] -0.58631594 -0.5979078  0.4958751 -0.3988135439  0.52294997  0.54271885 #> [1334,]  0.41282663 -0.5982005  0.4957818  0.5992067181  0.52239092 -0.45786271 #> [1335,]  0.21036708  0.3247225 -0.5297692  0.1344756772 -0.62839059 -0.61634641 #> [1336,] -0.61659121  0.3916778  0.4925442  0.5288741409 -0.49705019  0.52187912 #> [1337,] -0.69277827 -0.6356824  0.4836368  0.3378134023  0.44956981 -0.53405127 #> [1338,] -0.51305322  0.4268683 -0.4963067 -0.2493175155 -0.43050964 -0.40907752 #> [1339,]  0.23207679  0.3343155 -0.5264552  0.1725356148 -0.60954868 -0.59640735 #> [1340,]  0.61877090  0.4725608  0.5178327  0.9132606990 -0.34983102 -0.32666361 #> [1341,] -0.13290282  0.5912689 -0.4456943 -0.0036844214  0.81777786 -0.16176589 #> [1342,] -0.07303249 -0.3547139  0.5715720 -0.0007822136 -0.12751959 -0.11045447 #> [1343,]  0.74042122  0.5210611 -0.4673404 -0.0248535797 -0.27347366 -0.25031849 #> [1344,] -0.18140063 -0.4397284  0.5446815 -0.0086641968 -0.21964118 -0.19767718 #> [1345,]  0.31744442 -0.6318779 -0.5151094  0.3630849808  0.45704460 -0.52619506 #> [1346,] -0.55337687 -0.5867294  0.4994194  0.6734999455  0.54414776  0.56472729 #> [1347,]  0.70767200 -0.4930505  0.5283502 -0.0360259108 -0.29460753 -0.27126603 #> [1348,] -0.25825522 -0.4783461  0.5328407 -0.0244665032  0.72739396  0.75053826 #> [1349,] -0.86704374  0.2844763  0.4557482  0.0410651117  0.29414478  0.30152013 #> [1350,]  0.52944719 -0.5587390  0.5081788 -0.1825394453  0.59570331 -0.38212825 #> [1351,] -0.22110150 -0.4608329  0.5381975 -0.0153358446 -0.24771425 -0.22499471 #> [1352,] -0.21853150 -0.4595510  0.5385903 -0.0148167201  0.75405115 -0.22326795 #> [1353,] -0.59284094 -0.6001383  0.4951641  0.5860102890 -0.48131459  0.53828116 #> [1354,]  0.32241975  0.3699557  0.4854930 -0.6244891591 -0.53935726 -0.52241592 #> [1355,] -0.41051674  0.4620596  0.5146062 -0.1122167676 -0.36768702  0.65523707 #> [1356,]  0.49293880  0.4288897  0.5043254 -0.2389946290 -0.42678837 -0.40524241 #> [1357,] -0.14937712  0.5799009 -0.4492415 -0.0050537558  0.80457836  0.82563558 #> [1358,] -0.71659705  0.3552355  0.4806217  0.2808589673  0.43168779  0.44712631 #> [1359,] -0.66187699  0.3756729 -0.5126363 -0.5849157083 -0.52816050 -0.51066724 #> [1360,] -0.74552086 -0.6562894 -0.5232529  0.2169231257  0.40896161 -0.57684603 #> [1361,] -0.83527730 -0.6975658  0.4623364  0.0715099428 -0.67170849  0.33774143 #> [1362,]  0.48098810  0.4248594 -0.4969358 -0.2598807685 -0.43422031  0.58709532 #> [1363,] -0.47241084 -0.5593720 -0.4920177  0.8148502871 -0.40543518  0.61670453 #> [1364,] -0.12560689  0.5966539  0.5559945 -0.0031687938 -0.17617904 -0.15602436 #> [1365,] -0.34751736  0.4850756  0.5216666 -0.0633343018 -0.32914182 -0.30580299 #> [1366,] -0.35906506  0.4807291  0.5203362 -0.0707010243 -0.33625258 -0.31295888 #> [1367,]  0.23412154 -0.6648073  0.4738456 -0.8236209968  0.39217778  0.40541835 #> [1368,] -0.06785459 -0.3485034  0.5736137 -0.0006504680 -0.12204565 -0.10540836 #> [1369,] -0.08837589 -0.3712248 -0.4337921 -0.0012683821 -0.14287020 -0.12469630 #> [1370,] -0.17513447  0.5638978 -0.4541998 -0.0078476393 -0.21503010  0.80678010 #> [1371,]  0.13259508  0.2842565  0.4556661  0.0407778921  0.29373226  0.30108258 #> [1372,]  0.46121332  0.4181943  0.5009715 -0.2970474948 -0.44661573  0.57428979 #> [1373,]  0.69199098  0.5005223 -0.4736124 -0.0425891064  0.69546594 -0.28115545 #> [1374,] -0.58800376  0.4015159  0.4956915  0.5972851516 -0.47815089  0.54157362 #> [1375,] -0.25995734  0.5208919  0.5326079 -0.0249651431  0.72627840 -0.25056337 #> [1376,] -0.50760353  0.4287067  0.5042682 -0.2399165724  0.57287522 -0.40558898 #> [1377,]  0.32292308 -0.6298594  0.4855537  0.3767716874  0.46100534  0.47796482 #> [1378,]  0.11453548  0.2727010  0.4513005  0.0279860250 -0.72773577  0.27831811 #> [1379,] -0.82932977  0.3055392 -0.5365461  0.0783994125  0.33427392 -0.65591389 #> [1380,]  0.08293223  0.2489500  0.4419711  0.0123367505  0.22970459  0.23326064 #> [1381,]  0.13648245  0.2866015 -0.5434604  0.0439362510 -0.70185950 -0.69424158 #> [1382,] -0.66366837  0.3750258 -0.5128475 -0.5894485191 -0.52942603 -0.51199428 #> [1383,]  0.10388591  0.2652835  0.4484413  0.0218118009 -0.74127064  0.26397545 #> [1384,]  0.09523912  0.2588568 -0.5540748  0.0174912261  0.24717480  0.25174002 #> [1385,]  0.08220584  0.2483331  0.4417217  0.0120670994 -0.77136883  0.23212615 #> [1386,] -0.58999319  0.4008360  0.4954748 -0.4073353192 -0.47945047  0.54022136 #> [1387,] -0.16373245 -0.4292513 -0.4520816 -0.0065043383 -0.20648795 -0.18498580 #> [1388,] -0.82881587  0.3058042  0.4635490  0.0790129168  0.33478550 -0.65537137 #> [1389,] -0.18593558  0.5577038 -0.4561098 -0.0092918453  0.77705589 -0.20087523 #> [1390,]  0.50464455 -0.5671561  0.5055599 -0.2196942972 -0.41954553  0.60221332 #> [1391,]  0.72681974  0.5150760  0.5308316 -0.0291088638 -0.28232518 -0.25907382 #> [1392,]  0.12311399  0.2783348  0.4534419  0.0336849441  0.28267579  0.28935667 #> [1393,]  0.09334503  0.2573942 -0.5546527  0.0166237861  0.24456880  0.24898180 #> [1394,]  0.22009930  0.3290890  0.4717450  0.1509072776 -0.61982409 -0.60727804 #> [1395,]  0.25762166  0.3449933 -0.5228188  0.2235325662  0.41149087 -0.57417551 #> [1396,] -0.52478762 -0.5770872  0.5024539 -0.2704023439 -0.43782733 -0.41662773 #> [1397,]  0.07277536  0.2399409  0.4382897  0.0088955277  0.21420736  0.21689430 #> [1398,] -0.42597227  0.4566268 -0.4870675 -0.1278525481 -0.37709501 -0.35433305 #> [1399,]  0.05763077  0.2246223 -0.5681782  0.0049894044  0.18879379  0.19012543 #> [1400,]  0.07277536  0.2399409  0.4382897  0.0088955277  0.21420736  0.21689430 #> [1401,]  0.57336909 -0.5436033 -0.4871384 -0.1285548146 -0.37749596 -0.35474141 #> [1402,] -0.06770476 -0.3483180  0.5736749 -0.0006468814 -0.12188472 -0.10526028 #> [1403,] -0.37816061  0.4736791  0.5181758 -0.0843614746 -0.34795558 -0.32476765 #> [1404,]  0.17027060  0.3053327 -0.5366202  0.0779243300  0.33387552  0.34366361 #> [1405,] -0.15190909 -0.4217602  0.5502421 -0.0052912972 -0.19740088 -0.17626021 #> [1406,] -0.13823157  0.5874789 -0.4468795 -0.0040951514 -0.18655588  0.83410630 #> [1407,]  0.16629032 -0.6967406 -0.5373660  0.0732882926  0.32987953  0.33942568 #> [1408,] -0.06772648 -0.3483449 -0.4263340 -0.0006474006 -0.12190806 -0.10528176 #> [1409,] -0.51340962 -0.5732519 -0.4963443 -0.2499409755  0.56926871 -0.40930605 #> [1410,]  0.63901290 -0.5199879 -0.4798833 -0.0719905082 -0.33743341 -0.31414861 #> [1411,] -0.19086496  0.5549635 -0.4569534 -0.0100104596  0.77349661 -0.20432636 #> [1412,] -0.53251669  0.4203080  0.5016361 -0.2849147727 -0.44267115  0.57836834 #> [1413,] -0.44048620  0.4515805 -0.4886252 -0.1440366503 -0.38593380 -0.36334473 #> [1414,] -0.44149834 -0.5487697 -0.4887334 -0.1452217047 -0.38655057 -0.36397430 #> [1415,]  0.48737777 -0.5729863 -0.4962612  0.7514350131 -0.43024164  0.59119877 #> [1416,] -0.23067214 -0.4655199 -0.4632377 -0.0173886687  0.74576529 -0.23138239 #> [1417,] -0.43079447  0.4549446 -0.4875864 -0.1330640283  0.61996923 -0.35732404 #> [1418,]  0.09788562  0.2608662  0.4467159  0.0187501175 -0.74923048  0.25554556 #> [1419,]  0.16913337  0.3047435  0.4631681  0.0765820103  0.33273901 -0.65754167 #> [1420,]  0.15600776  0.2977519  0.4606397  0.0621078188  0.31930979 -0.67178546 #> [1421,] -0.39818891 -0.5335561  0.5159545 -0.1008585160  0.63982142  0.66285827 #> [1422,] -0.76752100  0.3344884 -0.5263959  0.1732882031  0.39079154  0.40395245 #> [1423,] -0.65440791  0.3783581  0.4882385  0.4340046599 -0.52291496 -0.50516924 #> [1424,]  0.73254311  0.5175715 -0.4684063 -0.0272553370 -0.27861445 -0.25540018 #> [1425,] -0.15382944 -0.4230061  0.5498550 -0.0054765504 -0.19889392 -0.17769142 #> [1426,]  0.14586326 -0.7079182 -0.5414344  0.0521778256  0.30850383  0.31675165 #> [1427,] -0.29935110 -0.4959527 -0.4725359 -0.0388595768 -0.29906674 -0.27570468 #> [1428,] -0.71942576  0.3541343 -0.5197461  0.2743225594  0.42951712 -0.55516104 #> [1429,] -0.30042080  0.5036087  0.5273302 -0.0393059963 -0.29974397  0.72362065 #> [1430,] -0.12088262 -0.3997277 -0.4428674 -0.0028623457 -0.17219348 -0.15224704 #> [1431,] -0.20094188  0.5495154  0.5413717 -0.0116033894 -0.23368538 -0.21130532 #> [1432,] -0.14777843 -0.4190392  0.5510883 -0.0049076400 -0.19416554  0.82683782 #> [1433,] -0.12046343  0.6005987  0.5572354 -0.0028361595 -0.17183694 -0.15190950 #> [1434,] -0.08920075  0.6279553  0.5659438 -0.0012988753 -0.14366319 -0.12543553 #> [1435,]  0.08441336 -0.7498041  0.4424737  0.0128981761  0.23187781  0.23555784 #> [1436,]  0.84569849 -0.4233105  0.5497605 -0.0055227710  0.80074012 -0.17804238 #> [1437,]  0.14424300  0.2911524 -0.5417765  0.0506906848  0.30674041  0.31488100 #> [1438,]  0.62238261 -0.5261225  0.5182367 -0.0839459699  0.65237656 -0.32443197 #> [1439,] -0.16458212 -0.4297738 -0.4522434 -0.0065983697 -0.20713165 -0.18560523 #> [1440,] -0.47240415 -0.5593697  0.5079830 -0.1851402613 -0.40543108 -0.38329126 #> [1441,] -0.34610529 -0.5143883 -0.4781694 -0.0624770052  0.67172979  0.69507313 #> [1442,]  0.76822936 -0.4660494 -0.4633997 -0.0176367438  0.74502210  0.76788857 #> [1443,]  0.43842249 -0.5895025  0.4985429 -0.3437789882 -0.46108219  0.55930527 #> [1444,] -0.37853952  0.4735408  0.5181334 -0.0846522651 -0.34818723 -0.32500178 #> [1445,]  0.18674743 -0.6863942 -0.5336707  0.0989821657  0.34990300  0.36065679 #> [1446,]  0.42096817  0.4045748  0.4966648  0.6178192366 -0.47231656  0.54764065 #> [1447,]  0.30500401 -0.6365147  0.4833618  0.3323859254 -0.55206687  0.46422759 #> [1448,]  0.50374059  0.4325382  0.5054646 -0.2211440212 -0.42010367 -0.39836081 #> [1449,] -0.07318627 -0.3548928  0.5715134 -0.0007863630 -0.12767968 -0.11060231 #> [1450,]  0.34797791  0.3792115 -0.5114840  0.4400504088  0.47875033 -0.50342465 #> [1451,] -0.64507421 -0.6183142  0.4893193 -0.5423575714  0.48357256  0.50162491 #> [1452,] -0.38570825 -0.5290651  0.5173338 -0.0903054364 -0.35256662 -0.32943088 #> [1453,]  0.66478887 -0.5102149  0.5231069 -0.0561674050 -0.32152848  0.70184221 #> [1454,]  0.08424664 -0.7499435  0.4424175  0.0128341998  0.23163422  0.23530033 #> [1455,]  0.18101903 -0.6892170  0.4653275  0.0913177756  0.34442058 -0.64515498 #> [1456,] -0.40765326  0.4630737  0.5149182 -0.1094927949  0.63405643 -0.34299197 #> [1457,]  0.74351122  0.5224480  0.5330833 -0.0239570895 -0.27144629  0.75168308 #> [1458,]  0.17479777  0.3076539  0.4642115  0.0834092960  0.33835960 -0.65158130 #> [1459,] -0.14667617 -0.4183034  0.5513173 -0.0048086159 -0.19329655  0.82766915 #> [1460,] -0.18557510  0.5579063  0.5439526 -0.0092407966 -0.22268258 -0.20062184 #> [1461,]  0.22525938 -0.6686403 -0.5274714  0.1600376908 -0.61536250  0.39744297 #> [1462,] -0.16061562 -0.4273170 -0.4514824 -0.0061674601 -0.20411627 -0.18270507 #> [1463,] -0.70203573 -0.6391739  0.4824815 -0.6846897753  0.44270056  0.45872276 #> [1464,]  0.67875136 -0.5047640  0.5247729 -0.0488289672  0.68716274 -0.28945144 #> [1465,]  0.30092439  0.3619476  0.4828531  0.3224606541  0.44490778  0.46104524 #> [1466,] -0.26874492 -0.4829930  0.5314213 -0.0276643277 -0.27945125 -0.25622821 #> [1467,]  0.16044306  0.3001554 -0.5384876  0.0667907639  0.32391399  0.33309834 #> [1468,]  0.14899755 -0.7061394  0.4592186  0.0551312484 -0.68811500 -0.67966158 #> [1469,]  0.50262531 -0.5678389 -0.4946530 -0.2229420205  0.57920746 -0.39906952 #> [1470,]  0.31311168  0.3665159 -0.5156381 -0.6476730527  0.45389023  0.47049049 #> [1471,] -0.06828482  0.6509661  0.5734388 -0.0006608356 -0.12250690 -0.10583288 #> [1472,] -0.52225605 -0.5762341 -0.4972785 -0.2657564434 -0.43624505 -0.41499421 #> [1473,] -0.12554258 -0.4032976 -0.4439903 -0.0031644805 -0.17612518 -0.15597326 #> [1474,] -0.60162536  0.3968476  0.4942014  0.5651993897 -0.48709427 -0.46773834 #> [1475,]  0.59055878  0.4624402 -0.4852767  0.8888125377 -0.36703221  0.65590230 #> [1476,]  0.67307939 -0.5069929 -0.4759082 -0.0517125435 -0.31637536 -0.29299293 #> [1477,] -0.48427127  0.4365975  0.5067293 -0.2024681890  0.58728372 -0.39076742 #> [1478,]  0.19280070 -0.6834684  0.4673628  0.1074815680  0.35559918 -0.63330615 #> [1479,] -0.51659102  0.4256755 -0.4966801  0.7444466232 -0.43271149 -0.41134814 #> [1480,]  0.17552595  0.3080237 -0.5356563  0.0843127105 -0.66092503  0.34917725 #> [1481,] -0.05446365 -0.3304304  0.5796409 -0.0003768280 -0.10702049 -0.09165088 #> [1482,]  0.48766309 -0.5728901 -0.4962311 -0.2480676589  0.56993574  0.59138164 #> [1483,]  0.06718162  0.2345821  0.4360582  0.0072902372  0.20517795  0.20737233 #> [1484,] -0.21475206  0.5423532  0.5391739 -0.0140770589 -0.24334094 -0.22071926 #> [1485,] -0.19334350 -0.4463952 -0.4573713 -0.0103865400  0.77171868 -0.20605214 #> [1486,] -0.31201844  0.4989086 -0.4741052 -0.0444084062  0.69294446 -0.28367247 #> [1487,]  0.52071778 -0.5617091  0.5072560 -0.1950441381 -0.40965046  0.61238026 #> [1488,]  0.73972052 -0.4792519  0.5325640 -0.0250603805 -0.27393251  0.74922830 #> [1489,] -0.41566222 -0.5397565  0.5140471 -0.1172453593 -0.37081933 -0.34794668 #> [1490,]  0.05307805  0.2194407  0.4295691  0.0040754852  0.18048441  0.18139601 #> [1491,]  0.51782947  0.4373102  0.5069510 -0.1993173764 -0.41142479  0.61055882 #> [1492,]  0.14430335 -0.7088129  0.4582363  0.0507455919  0.30680628 -0.68504912 #> [1493,]  0.88319534  0.6034859  0.5581458 -0.0026143791 -0.16870409 -0.14894616 #> [1494,]  0.26027104  0.3460685  0.4775445 -0.7708266941  0.41361123 -0.57193721 #> [1495,]  0.05763077  0.2246223 -0.5681782  0.0049894044  0.18879379  0.19012543 #> [1496,] -0.29696590  0.5050285  0.5277637 -0.0378784068 -0.29755482 -0.27419902 #> [1497,]  0.59487350 -0.5360294 -0.4848059 -0.1071326750 -0.36440489 -0.34142967 #> [1498,]  0.08875079 -0.7462436 -0.5560987  0.0146334539  0.23812671  0.24216583 #> [1499,] -0.40216949  0.4650229 -0.4844823 -0.1044218393 -0.36260384 -0.33960177 #> [1500,] -0.82519877  0.3076557 -0.5357879  0.0834135683 -0.66163700  0.34842230 #> [1501,] -0.59627968 -0.6013165  0.4947881 -0.4220865680  0.51642828  0.53593107 #> [1502,] -0.37885035  0.4734274 -0.4819014 -0.0848913989 -0.34837725 -0.32519384 #> [1503,]  0.52712842  0.4404711  0.5079335 -0.1858012604 -0.40571758  0.61641496 #> [1504,] -0.11889355 -0.3981711 -0.4423769 -0.0027395175 -0.17049734 -0.15064181 #> [1505,] -0.05028985 -0.3240520 -0.4181986 -0.0003096861 -0.10203105 -0.08711415 #> [1506,] -0.41636125  0.4599974  0.5139713 -0.1179419516 -0.37124484 -0.34837936 #> [1507,]  0.40675803  0.3997244  0.4951203 -0.4149305482 -0.48157746 -0.46199250 #> [1508,] -0.11896892 -0.3982304 -0.4423956 -0.0027441059 -0.17056181 -0.15070279 #> [1509,]  0.20511440  0.3223171 -0.5306077  0.1260420778 -0.63310101 -0.62133473 #> [1510,]  0.39769510  0.3966139  0.4941266  0.5635725767 -0.48754328 -0.46820622 #> [1511,] -0.35348913 -0.5171805  0.5209762 -0.0670636110  0.66717728 -0.30950543 #> [1512,]  0.46719675  0.4202114 -0.4983942 -0.2854622791  0.55714887 -0.42181768 #> [1513,]  0.25118279  0.3423564  0.4762881  0.2100871363  0.40629155 -0.57966584 #> [1514,]  0.47233736  0.4219439 -0.4978501 -0.2757429951 -0.43962678 -0.41848609 #> [1515,]  0.23274084  0.3346008 -0.5263573  0.1737790468  0.39101287  0.40418650 #> [1516,]  0.31424823  0.3669381 -0.5154990 -0.6448572489 -0.54528040 -0.52863792 #> [1517,] -0.84474203  0.2973412  0.4604902  0.0613368976  0.31852446 -0.67261852 #> [1518,]  0.60310020 -0.5330948  0.5160963 -0.0997253835  0.64060706  0.66365484 #> [1519,] -0.13506426  0.5897177 -0.4461797 -0.0038474556 -0.18398781 -0.16344663 #> [1520,] -0.41351505  0.4610004 -0.4857199 -0.1151258842 -0.36951231 -0.34661788 #> [1521,]  0.40313746 -0.6015165  0.4947242  0.5765345532  0.51604503  0.53553194 #> [1522,]  0.60514818  0.4676393  0.5163218 -0.0979459285 -0.35814457 -0.33507976 #> [1523,] -0.59730037 -0.6016667  0.4946762  0.5754975741  0.51575701 -0.46476802 #> [1524,]  0.38306073  0.3915570  0.4925054  0.5280179962  0.50271653 -0.47836436 #> [1525,] -0.26373787 -0.4807893 -0.4679057 -0.0261004080 -0.27619255 -0.25300500 #> [1526,] -0.11343004 -0.3937873  0.5590073 -0.0024203787 -0.16578024 -0.14618480 #> [1527,]  0.06797535  0.2353619  0.4363849  0.0075060424  0.20648278  0.20874764 #> [1528,]  0.16946510 -0.6950843 -0.5367700  0.0769721043 -0.66692904 -0.65718963 #> [1529,]  0.20043356  0.3201429  0.4686318  0.1187861555 -0.63735276 -0.62583841 #> [1530,]  0.54106590  0.4452304 -0.4905900 -0.1668366276  0.60281129 -0.37484781 #> [1531,] -0.35022199 -0.5159485  0.5213532 -0.0650023601 -0.33080993  0.69251963 #> [1532,]  0.90489368  0.6222569 -0.4358865 -0.0015311370 -0.14925617 -0.13065885 #> [1533,]  0.16229555  0.3011465  0.4618712  0.0688092043 -0.67418346  0.33511635 #> [1534,]  0.53799560  0.4441794 -0.4909158 -0.1708831919  0.60093472 -0.37676875 #> [1535,] -0.25686391 -0.4777209  0.5330317 -0.0240645884  0.72830724 -0.24856017 #> [1536,] -0.32121953  0.4952475  0.5247764 -0.0488145038  0.68718092 -0.28943325 #> [1537,]  0.16060785  0.3002438 -0.5384555  0.0669688203  0.32408371  0.33327837 #> [1538,]  0.19023568  0.3152988 -0.5330721  0.1038297256 -0.64680266  0.36414845 #> [1539,] -0.21149189  0.5440144 -0.4603167 -0.0134612260 -0.24107982 -0.21851154 #> [1540,] -0.67569073 -0.6293508 -0.5142795  0.3802474281 -0.53799734  0.47901195 #> [1541,] -0.07801745 -0.3603633 -0.4302735 -0.0009239138 -0.13264039 -0.11519074 #> [1542,]  0.23808031  0.3368792  0.4744228  0.1839422525 -0.60450165  0.40892912 #> [1543,] -0.09879905 -0.3811634 -0.4369807 -0.0016892208 -0.15268222 -0.13386656 #> [1544,] -0.27938056 -0.4875917 -0.4699830 -0.0312247766 -0.28632375  0.73696241 #> [1545,] -0.73143961  0.3493975  0.4786661  0.2472107732  0.42017673  0.43499069 #> [1546,]  0.18117988  0.3108630 -0.5346440  0.0915279699  0.34457579  0.35500957 #> [1547,]  0.88471054 -0.3952976  0.5585299 -0.0025260393 -0.16739546 -0.14770974 #> [1548,] -0.74605222 -0.6565071  0.4766734  0.2158144040  0.40853238  0.42270072 #> [1549,]  0.45671170  0.4166762 -0.4995065  0.6940454096 -0.44945668 -0.42864961 #> [1550,] -0.44125355 -0.5486850 -0.4887072 -0.1449344103  0.61359860 -0.36382202 #> [1551,] -0.27485985 -0.4856502  0.5306098 -0.0296707706 -0.28341049 -0.26014916 #> [1552,] -0.08791738 -0.3707664  0.5663556 -0.0012516335 -0.14242809 -0.12428431 #> [1553,] -0.48989165  0.4346928 -0.4938638 -0.2110760873 -0.41617589 -0.39432197 #> [1554,]  0.25488320  0.3438760 -0.5231969  0.2177679369 -0.59071231 -0.57650170 #> [1555,] -0.17109001  0.5662891 -0.4534612 -0.0073506595  0.78797672  0.80968194 #> [1556,] -0.23646395 -0.4682932 -0.4640863 -0.0187266009 -0.25814163 -0.23521716 #> [1557,]  0.06718162  0.2345821  0.4360582  0.0072902372  0.20517795  0.20737233 #> [1558,] -0.13110532  0.5925739 -0.4452856 -0.0035524719 -0.18074538 -0.16036127 #> [1559,] -0.05028985 -0.3240520 -0.4181986 -0.0003096861 -0.10203105 -0.08711415 #> [1560,]  0.53697204  0.4438294 -0.4910243 -0.1722485449 -0.39969114 -0.37740959 #> [1561,] -0.61599897 -0.6081167 -0.5073898 -0.4696701828  0.50334655  0.52229318 #> [1562,]  0.37252460  0.3878857  0.4913239  0.5019022196  0.49561554 -0.48578002 #> [1563,] -0.16638455  0.5691244 -0.4525844 -0.0068010040 -0.20849324 -0.18691604 #> [1564,]  0.36316236 -0.6154011  0.4902626  0.4784307899  0.48923851 -0.49244657 #> [1565,] -0.31044178 -0.5004582 -0.4739118 -0.0436858619  0.69393525  0.71731680 #> [1566,]  0.08376903  0.2496559  0.4422560  0.0126520196  0.23093494  0.23456112 #> [1567,]  0.54582329  0.4468619 -0.4900847 -0.1607105095 -0.39428316 -0.37187525 #> [1568,]  0.29859554  0.3610657 -0.5174391  0.3168313298  0.44317213 -0.54078100 #> [1569,]  0.35288189  0.3809596  0.4890838  0.4524707973  0.48215813  0.50014417 #> [1570,] -0.54487089  0.4161423 -0.4996747 -0.3091245156 -0.45045728  0.57031473 #> [1571,] -0.58400441 -0.5971192 -0.5038739  0.6065010348  0.52445512 -0.45571566 #> [1572,] -0.06845975 -0.3492488  0.5733680 -0.0006650805 -0.12269409 -0.10600521 #> [1573,]  0.25819453  0.3452262  0.4772599  0.2247469933  0.41195027  0.42630948 #> [1574,] -0.35275793  0.4830947  0.5210604 -0.0665978543  0.66762754 -0.30905232 #> [1575,]  0.43138339  0.4081128  0.4977878  0.6409920232 -0.46559534  0.55462215 #> [1576,]  0.12709872  0.2808601 -0.5456063  0.0365621414 -0.71262269  0.29434248 #> [1577,] -0.26267301  0.5196827  0.5322385 -0.0257767277  0.72450251 -0.25231798 #> [1578,] -0.22562269  0.5369362  0.5375142 -0.0162816997 -0.25080489 -0.22802046 #> [1579,] -0.34538929  0.4858840 -0.4780861 -0.0620458397  0.67217192 -0.30448253 #> [1580,]  0.21122696 -0.6748871  0.4703666 -0.8641145181 -0.62762542  0.38446378 #> [1581,] -0.53439045 -0.5803236  0.5014376 -0.2885070176 -0.44384850 -0.42284867 #> [1582,]  0.53510484  0.4431913 -0.4912222 -0.1747604160 -0.40083322  0.62142075 #> [1583,] -0.24714006  0.5267099  0.5343858 -0.0213938956 -0.26527218 -0.24223014 #> [1584,] -0.24455535  0.5279066 -0.4652484 -0.0207234255 -0.26355395  0.75946140 #> [1585,] -0.57577810 -0.5943186  0.4970164  0.6251377536 -0.47021106 -0.45017141 #> [1586,] -0.04176308 -0.3095401  0.5867897 -0.0001966343 -0.09126756 -0.07738476 #> [1587,]  0.10002131  0.2624598  0.4473404  0.0198064999  0.25363222 -0.74142317 #> [1588,]  0.48743637  0.4270334  0.5037449 -0.2484627883  0.56979479  0.59123633 #> [1589,] -0.08920075  0.6279553  0.5659438 -0.0012988753 -0.14366319 -0.12543553 #> [1590,] -0.37190234  0.4759721  0.5188789 -0.0796722298 -0.34412658 -0.32089979 #> [1591,]  0.59655695 -0.5354307  0.5153783 -0.1055826493 -0.36337959 -0.34038898 #> [1592,] -0.07911460  0.6384328 -0.4306654 -0.0009571357 -0.13374918  0.88378177 #> [1593,]  0.11999318  0.2763175  0.4526781  0.0315344489  0.27893533  0.28539049 #> [1594,] -0.22962216 -0.4650122 -0.4630823 -0.0171539994  0.74647663 -0.23068478 #> [1595,] -0.18049484  0.5607901 -0.4551586 -0.0085425762 -0.21897810 -0.19703568 #> [1596,]  0.43419183  0.4090648 -0.5019106  0.6471110557 -0.46379196 -0.44350608 #> [1597,]  0.21060512  0.3248307 -0.5297316  0.1348651214  0.37182139  0.38387805 #> [1598,] -0.39188786  0.4687042  0.5166490 -0.0954152041  0.64366274 -0.33324854 #> [1599,] -0.50427901 -0.5701712 -0.4953811 -0.2343036966  0.57493619 -0.40346611 #> [1600,] -0.18593654 -0.4422967  0.5438901 -0.0092919821 -0.22294481 -0.20087590 #> [1601,] -0.65361519 -0.6213581  0.4883308  0.4360135100  0.47763890  0.49541104 #> [1602,] -0.62798102  0.3877088  0.4912668 -0.4993598245  0.49527279 -0.48613817 #> [1603,]  0.47060673 -0.5786394  0.5019668 -0.2789907766 -0.44071128 -0.41960643 #> [1604,]  0.28588390  0.3561971 -0.5190575  0.2866362061 -0.56641702  0.44912294 #> [1605,] -0.68795028  0.3661208 -0.5157683 -0.6502998094 -0.54688596  0.46967472 #> [1606,] -0.16464648  0.5701867  0.5477444 -0.0066055320 -0.20718037 -0.18565212 #> [1607,] -0.46048323  0.4446999 -0.4907544  0.8311308253  0.60186460 -0.37581677 #> [1608,]  0.72323793 -0.4864695 -0.4696403 -0.0303172119 -0.28463772 -0.26136558 #> [1609,]  0.14719948  0.2928432 -0.5411546  0.0534245286 -0.69004991  0.31828585 #> [1610,]  0.42363968  0.4054835  0.4969536 -0.3761666276 -0.47058742  0.54943755 #> [1611,] -0.34468848 -0.5138492  0.5219955 -0.0616261089  0.67260481 -0.30404754 #> [1612,]  0.74591214 -0.4764671 -0.4665852 -0.0232776950  0.73013345  0.75324174 #> [1613,]  0.62019272  0.4730785 -0.4820084 -0.0856309875 -0.34896217 -0.32578513 #> [1614,] -0.12745423 -0.4047321 -0.4444407 -0.0032943979 -0.17772165 -0.15748838 #> [1615,]  0.54200537 -0.5544477 -0.4904903 -0.1656130564 -0.39661473 -0.37426044 #> [1616,] -0.66499011  0.3745475 -0.5130037  0.4072091111  0.46963834 -0.51297553 #> [1617,]  0.72158283  0.5128204  0.5301428 -0.0308884600  0.71429614  0.73757725 #> [1618,] -0.24625434  0.5271191 -0.4654892 -0.0211623227 -0.26468395 -0.24165093 #> [1619,] -0.14282696  0.5842998  0.5521284 -0.0044736273 -0.19024262 -0.16941192 #> [1620,] -0.42850834 -0.5442586  0.5126594 -0.1305731146 -0.37863890  0.64409429 #> [1621,] -0.61524965 -0.6078568 -0.5073063 -0.4678303750 -0.49615182 -0.47718332 #> [1622,]  0.53618192  0.4435593  0.5088920 -0.1733081161 -0.40017436  0.62209556 #> [1623,]  0.77183980 -0.4643026  0.5371349 -0.0168311988 -0.25253131 -0.22971217 #> [1624,] -0.47380006 -0.5598450  0.5078354 -0.1871194320 -0.40628677  0.61583126 #> [1625,] -0.12476859 -0.4027119  0.5561938 -0.0031128786  0.82452388 -0.15535762 #> [1626,] -0.11373210 -0.3940340 -0.4410707 -0.0024373390  0.83395666 -0.14643310 #> [1627,] -0.13499517 -0.4102330  0.5538357 -0.0038421696  0.81606846 -0.16339304 #> [1628,]  0.56447045 -0.5467017 -0.4880945 -0.1383407310 -0.38291424 -0.36026390 #> [1629,] -0.72295421 -0.6472466  0.4797920  0.2662479989 -0.57320548 -0.55803071 #> [1630,]  0.29100319 -0.6418307  0.4815992  0.2986818513  0.43746875  0.45321543 #> [1631,]  0.84691279 -0.4225259  0.5500042 -0.0054044230  0.80168234 -0.17713892 #> [1632,]  0.11505311  0.2730491 -0.5485664  0.0283111418  0.27290427  0.27899657 #> [1633,] -0.19907711 -0.4494913  0.5416769 -0.0112956458  0.76763454 -0.21002120 #> [1634,] -0.17615666  0.5632998 -0.4543844 -0.0079769280 -0.21578617  0.80604984 #> [1635,] -0.05015739 -0.3238425 -0.4181273 -0.0003076868 -0.10186994 -0.08696794 #> [1636,] -0.50175689  0.4306804  0.5048849 -0.2301071910  0.57649783 -0.40185818 #> [1637,] -0.10113810  0.6167226 -0.4376554 -0.0017946637 -0.15482574 -0.13587654 #> [1638,]  0.23485692  0.3355071 -0.5260467 -0.8222281846  0.39279678 -0.59392713 #> [1639,]  0.12841545  0.2816827 -0.5452973  0.0375457627  0.28891318  0.29597135 #> [1640,]  0.06718162  0.2345821  0.4360582  0.0072902372  0.20517795  0.20737233 #> [1641,] -0.58694108 -0.5981212 -0.5041929  0.5997435054  0.52254241  0.54229489 #> [1642,] -0.71850412  0.3544937  0.4803740 -0.7235538343 -0.56977449 -0.55441451 #> [1643,]  0.30617829  0.3639263 -0.5164924 -0.6647429329  0.44880043 -0.53486031 #> [1644,] -0.80992393  0.3152217  0.4669007  0.1036049267  0.35304731 -0.63601056 #> [1645,] -0.58194097  0.4035842 -0.5036501 -0.3887830683  0.52579633 -0.45432105 #> [1646,] -0.43677129  0.4528675 -0.4882276 -0.1397510004  0.61632943  0.63896463 #> [1647,]  0.87398268 -0.4036554 -0.4441027 -0.0031964151  0.82347748 -0.15635024 #> [1648,] -0.29074099  0.5076108 -0.4714478 -0.0354084902 -0.29359668  0.72973926 #> [1649,]  0.17523888 -0.6921219 -0.5357084  0.0839558550  0.33879314 -0.65112159 #> [1650,]  0.58322897 -0.5401469 -0.4860732 -0.1183518027 -0.37149426 -0.34863302 #> [1651,] -0.06845975 -0.3492488  0.5733680 -0.0006650805 -0.12269409 -0.10600521 #> [1652,] -0.19698949 -0.4483714  0.5420210 -0.0109582172 -0.23088297 -0.20857973 #> [1653,] -0.23242021 -0.4663618 -0.4634953 -0.0177846751 -0.25541688 -0.23254214 #> [1654,]  0.05763077  0.2246223 -0.5681782  0.0049894044  0.18879379  0.19012543 #> [1655,]  0.63479812  0.4784457 -0.4803631 -0.0748835881 -0.34002035 -0.31675647 #> [1656,] -0.11123927  0.6080174 -0.4404216 -0.0022997129 -0.16386373  0.85562295 #> [1657,] -0.05015739 -0.3238425 -0.4181273 -0.0003076868 -0.10186994 -0.08696794 #> [1658,] -0.09329107 -0.3760225 -0.4353349 -0.0014570987 -0.14755236 -0.12906590 #> [1659,]  0.18561501  0.3130521 -0.5338668  0.0974378578  0.34882645  0.35951566 #> [1660,] -0.11031203  0.6087897  0.5598231 -0.0022498690 -0.16304809 -0.14360824 #> [1661,]  0.12855147  0.2817674 -0.5452655  0.0376483094  0.28907135 -0.70386090 #> [1662,] -0.29953356  0.5039724  0.5274412 -0.0389354421 -0.29918229 -0.27581979 #> [1663,] -0.09879905 -0.3811634 -0.4369807 -0.0016892208 -0.15268222 -0.13386656 #> [1664,]  0.12130927  0.2771726 -0.5469977  0.0324304331  0.28051913 -0.71293019 #> [1665,] -0.07911460  0.6384328 -0.4306654 -0.0009571357 -0.13374918  0.88378177 #> [1666,]  0.81993179 -0.4389651 -0.4550831 -0.0084857161  0.78133462 -0.19673320 #> [1667,] -0.54621348 -0.5843108  0.5001825 -0.3118293097 -0.45130690  0.56943518 #> [1668,] -0.43614147 -0.5469140  0.5118399 -0.1390343123  0.61671306 -0.36064404 #> [1669,] -0.06848156 -0.3492755 -0.4266409 -0.0006656110 -0.12271742 -0.10602668 #> [1670,] -0.15646393  0.5753037  0.5493303 -0.0057379770  0.79906890 -0.17964580 #> [1671,]  0.17070378  0.3055565  0.4634601  0.0784393748 -0.66569266  0.34412156 #> [1672,]  0.83108757 -0.4324061 -0.4530578 -0.0070925367 -0.21039401 -0.18874723 #> [1673,]  0.27131769  0.3504935  0.4790343 -0.7466643148 -0.57766171  0.43727061 #> [1674,]  0.17916350  0.3098569  0.4649978  0.0889138795  0.34262476  0.35294108 #> [1675,] -0.13831809 -0.4125817 -0.4468984 -0.0041020660 -0.18662571 -0.16596028 #> [1676,] -0.18809312  0.5564980 -0.4564810 -0.0096016338 -0.22450585  0.79761111 #> [1677,] -0.06443529  0.6558130 -0.4249587 -0.0005716876 -0.11833581 -0.10199859 #> [1678,]  0.16059790  0.3002385  0.4615426  0.0669580643  0.32407347 -0.66673249 #> [1679,] -0.16449070  0.5702823  0.5477740 -0.0065882073 -0.20706245  0.81446137 #> [1680,] -0.47339104 -0.5597058  0.5078786 -0.1865378876 -0.40603601 -0.38391158 #> [1681,] -0.12745423 -0.4047321 -0.4444407 -0.0032943979 -0.17772165 -0.15748838 #> [1682,]  0.32369214 -0.6295771  0.4856463 -0.6213005392  0.46155889 -0.52145396 #> [1683,] -0.89437257  0.2665318 -0.5510743  0.0227556207  0.26099265  0.26637313 #> [1684,]  0.43847087  0.4105139 -0.5014519 -0.3436755744  0.53894875 -0.44066264 #> [1685,]  0.63113894  0.4770924 -0.4807778 -0.0774694778 -0.34226372 -0.31901951 #> [1686,] -0.06904210  0.6500390  0.5731333 -0.0006793357 -0.12331587 -0.10657773 #> [1687,]  0.10930894  0.2691239 -0.5500726  0.0248346360  0.26571136  0.27137296 #> [1688,]  0.40155760  0.3979414  0.4945510  0.5727878392 -0.48499481 -0.46555108 #> [1689,]  0.53274355 -0.5576149  0.5085277 -0.1779762555  0.59772182  0.61994046 #> [1690,]  0.13856791 -0.7121589 -0.5430003  0.0456920217  0.30047718 -0.69176295 #> [1691,] -0.84459997  0.2974191 -0.5394814  0.0614824977  0.31867340 -0.67246052 #> [1692,] -0.45060849 -0.5519117 -0.4897051 -0.1562292630  0.60789454  0.63035135 #> [1693,] -0.09329107 -0.3760225 -0.4353349 -0.0014570987 -0.14755236 -0.12906590 #> [1694,]  0.14494707  0.2915571  0.4583725  0.0513336087  0.30750801  0.31569528 #> [1695,]  0.14833253  0.2934852 -0.5409190  0.0544961113  0.31117086  0.31958086 #> [1696,] -0.30769534  0.5006490  0.5264263 -0.0424492811 -0.30433653 -0.28095835 #> [1697,]  0.07210329  0.2393133 -0.5619700  0.0086921217  0.21314240  0.21577068 #> [1698,] -0.06828482  0.6509661  0.5734388 -0.0006608356 -0.12250690 -0.10583288 #> [1699,]  0.49605471  0.4299414  0.5046541 -0.2337453787 -0.42485709 -0.40325323 #> [1700,]  0.08945377 -0.7456784  0.4441268  0.0149277158  0.23912389  0.24322065 #> [1701,]  0.19751858 -0.6812263  0.4681515  0.1143916762  0.35997277  0.37132816 #> [1702,]  0.20920450  0.3241932 -0.5299535  0.1325826167 -0.62942775  0.38255536 #> [1703,]  0.51273795  0.4355836  0.5064136 -0.2070163567  0.58544355 -0.39265775 #> [1704,]  0.13745785  0.2871829 -0.5432444  0.0447520760  0.29923581  0.30692026 #> [1705,] -0.70078189  0.3613017  0.4826391 -0.6816664932  0.44363674  0.45970790 #> [1706,]  0.51112436  0.4350369  0.5062434 -0.2095007408 -0.41555001 -0.39367871 #> [1707,]  0.72494256  0.5142645 -0.4694162 -0.0297374190 -0.28353806 -0.26027558 #> [1708,] -0.80379956 -0.6818495  0.4679326  0.1124358494 -0.64124352 -0.62996054 #> [1709,]  0.63473742  0.4784232  0.5196300  0.9250740879 -0.34005758 -0.31679401 #> [1710,] -0.50902437 -0.5717727  0.5041184 -0.2423436329 -0.42800649  0.59350253 #> [1711,] -0.63262564 -0.6139194 -0.5092585  0.4890157679 -0.50788441 -0.48943808 #> [1712,] -0.38792313 -0.5298662  0.5170879 -0.0921112704 -0.35391851  0.66920082 #> [1713,] -0.08472639 -0.3675215 -0.4325966 -0.0011390076 -0.13932489 -0.12139549 #> [1714,]  0.48265407  0.4254210  0.5032402 -0.2568975463  0.56681820 -0.41183327 #> [1715,]  0.16062083 -0.6997492  0.4615470  0.0669828576  0.32409708  0.33329255 #> [1716,] -0.74796853  0.3427059  0.4764066  0.2118375091  0.40698067  0.42106199 #> [1717,] -0.17477035  0.5641114  0.5458661 -0.0078019475  0.78523959 -0.19295947 #> [1718,] -0.20657738 -0.4534475 -0.4595380 -0.0125706390 -0.23765036 -0.21516677 #> [1719,] -0.04962511 -0.3229964 -0.4178392 -0.0002997328 -0.10122074 -0.08637892 #> [1720,]  0.16266863  0.3013453 -0.5380569  0.0692201906 -0.67380173  0.33552124 #> [1721,] -0.51160465  0.4273569 -0.4961539  0.7532055769  0.57039088 -0.40814917 #> [1722,]  0.20070288 -0.6797312 -0.5313241  0.1191969843 -0.63710671  0.37442225 #> [1723,] -0.40135164 -0.5346856  0.5156074 -0.1036817181 -0.36210562 -0.33909628 #> [1724,]  0.44150460  0.4115403 -0.5011272 -0.3372254344 -0.45911315  0.56134725 #> [1725,]  0.12311399  0.2783348  0.4534419  0.0336849441  0.28267579  0.28935667 #> [1726,]  0.57359825  0.4564767 -0.4871138 -0.1283101337  0.62264354 -0.35459933 #> [1727,]  0.29480775  0.3596248  0.4820829  0.3077362996  0.44033546 -0.54376650 #> [1728,]  0.21148336  0.3252292 -0.5295930  0.1363074452  0.37260242  0.38470502 #> [1729,] -0.06848156 -0.3492755 -0.4266409 -0.0006656110 -0.12271742 -0.10602668 #> [1730,]  0.47814566  0.4239013 -0.4972360  0.7349758738 -0.43599415 -0.41473524 #> [1731,] -0.05067050  0.6753487 -0.4184024 -0.0003154757 -0.10249304 -0.08753353 #> [1732,]  0.43764923  0.4102358 -0.5015399 -0.3454342756 -0.46157687  0.55879216 #> [1733,] -0.47188634  0.4408066  0.5080377 -0.1844100751 -0.40511375 -0.38296589 #> [1734,]  0.36526101  0.3853378 -0.5094985 -0.5162905344  0.49067371  0.50905435 #> [1735,]  0.40195794 -0.6019212  0.4945949 -0.4262614719  0.51526883  0.53472352 #> [1736,] -0.36870651  0.4771494 -0.4807603 -0.0773588444 -0.34216901  0.68107605 #> [1737,] -0.35330395 -0.5171108 -0.4790025 -0.0669454141 -0.33270871 -0.30939068 #> [1738,] -0.59292985 -0.6001687 -0.5048456  0.5858017958 -0.48137286  0.53822050 #> [1739,] -0.19675270 -0.4482439 -0.4579398 -0.0109204123 -0.23071449 -0.20841597 #> [1740,] -0.15925061 -0.4264610 -0.4512171 -0.0060238557 -0.20307238  0.81829804 #> [1741,] -0.12486914 -0.4027881  0.5561698 -0.0031195499 -0.17556053 -0.15543767 #> [1742,] -0.08404235  0.6331869 -0.4323674 -0.0011157478 -0.13865352 -0.12077118 #> [1743,]  0.74083972 -0.4787516 -0.4672832 -0.0247306876 -0.27319945 -0.25004769 #> [1744,]  0.52848415  0.4409328  0.5080769 -0.1838889420 -0.40488672 -0.38273313 #> [1745,] -0.08353358  0.6337168  0.5678041 -0.0010986470 -0.13815271 -0.12030565 #> [1746,]  0.39074530  0.3942180 -0.5066406 -0.4531937630 -0.49215178  0.52698954 #> [1747,] -0.33371415  0.4903638 -0.4767161 -0.0553413814 -0.32059953 -0.29722613 #> [1748,] -0.51917600 -0.5751959 -0.4969531 -0.2601758793 -0.43432266  0.58698972 #> [1749,] -0.56336122  0.4098937 -0.5016482  0.6523960787  0.53777632  0.55812116 #> [1750,] -0.42555456 -0.5432272 -0.4870225 -0.1274087280  0.62315926 -0.35407410 #> [1751,] -0.07846786  0.6391408 -0.4304350 -0.0009374618 -0.13309635 -0.11561318 #> [1752,] -0.15302205  0.5775163  0.5500173 -0.0053981228 -0.19826703 -0.17709037 #> [1753,] -0.03810590 -0.3025592 -0.4107716 -0.0001573830 -0.08637339 -0.07298802 #> [1754,]  0.19943352 -0.6803255  0.4684676  0.1172677827 -0.63826795  0.37319205 #> [1755,]  0.60995743 -0.5306311 -0.4831469 -0.0938659851 -0.35521169 -0.33210853 #> [1756,]  0.14883144  0.2937669  0.4591843  0.0549721736  0.31170679  0.32014937 #> [1757,] -0.08221710 -0.3648998  0.5682523 -0.0010551797  0.86314898 -0.11909628 #> [1758,]  0.11574620  0.2735134 -0.5483891  0.0287501906  0.27375883  0.27990246 #> [1759,]  0.19548087  0.3178093  0.4678126  0.1113764070 -0.64190933  0.36933398 #> [1760,] -0.16229876 -0.4283650 -0.4518072 -0.0063478171 -0.20539906 -0.18393837 #> [1761,]  0.28023858  0.3540033  0.4802101 -0.7264493950 -0.57074117  0.44456676 #> [1762,]  0.13136803  0.2835067  0.4553859  0.0398115585 -0.70767381  0.29959121 #> [1763,] -0.19411610  0.5531838  0.5424992 -0.0105058322 -0.22883397 -0.20658884 #> [1764,]  0.12179381  0.2774858  0.4531208  0.0327643051 -0.71890013  0.28768559 #> [1765,] -0.29414292  0.5061957  0.5281201 -0.0367422301 -0.29576207 -0.27241464 #> [1766,]  0.16176718 -0.6991354  0.4617692  0.0682297270  0.32527509  0.33454206 #> [1767,] -0.10228766 -0.3843021 -0.4379820 -0.0018480285 -0.15587192 -0.13685840 #> [1768,]  0.11599420  0.2736791  0.4516741  0.0289083266  0.27406392 -0.71977411 #> [1769,]  0.71735574  0.5110184 -0.4704074 -0.0323851983 -0.28842002  0.73488227 #> [1770,] -0.54389317 -0.5835279 -0.4995708  0.6928362198  0.55016100  0.57095470 #> [1771,] -0.42080991  0.4584341 -0.4865103 -0.1224514990 -0.37395267 -0.35113401 #> [1772,] -0.46155247 -0.5556660 -0.4908678 -0.1702829622 -0.39878899 -0.37648587 #> [1773,] -0.33552372 -0.5103356  0.5230700 -0.0563411123 -0.32172238 -0.29835228 #> [1774,]  0.23205178  0.3343047  0.4735411  0.1724888801  0.39043016 -0.59642973 #> [1775,] -0.48555938  0.4361607  0.5065933  0.7955819603  0.58649139 -0.39158125 #> [1776,]  0.20540326 -0.6775497 -0.5305612  0.1264978704  0.36715967 -0.62105864 #> [1777,]  0.34765220  0.3790951 -0.5115218  0.4392250963  0.47852327  0.49633750 #> [1778,] -0.52322736  0.4234386 -0.4973811 -0.2675326741 -0.43685189 -0.41562065 #> [1779,]  0.56581535  0.4537654 -0.4879503 -0.1368257661  0.61790485  0.64057142 #> [1780,]  0.58166759  0.4593040 -0.4862423 -0.1199237265  0.62755534  0.65040030 #> [1781,] -0.64138034  0.3829948  0.4897436 -0.5330224986  0.48612022 -0.49570876 #> [1782,]  0.16207985  0.3010315 -0.5381704  0.0685722738  0.32559561  0.33488202 #> [1783,]  0.19389748 -0.6829442  0.4675475  0.1090656551 -0.64337902  0.36777664 #> [1784,]  0.17320509  0.3068417  0.4639208  0.0814538271 -0.66321069  0.34675357 #> [1785,]  0.09334503  0.2573942 -0.5546527  0.0166237861  0.24456880  0.24898180 #> [1786,] -0.64287642  0.3824652  0.4895720 -0.5368013288  0.48508970  0.50321283 #> [1787,] -0.60565161  0.3954614 -0.5062423  0.5555272548 -0.48975877 -0.47051536 #> [1788,] -0.83461812 -0.6972182  0.4624618  0.0722544734 -0.67103973  0.33845071 #> [1789,] -0.38437122  0.4714194  0.5174825  0.9107710107 -0.35175028 -0.32860487 #> [1790,]  0.77437527 -0.4630648  0.5375139 -0.0162821342  0.74919373 -0.22802182 #> [1791,] -0.11436480  0.6054510  0.5587665 -0.0024731196  0.83340648 -0.14695247 #> [1792,]  0.66449173 -0.5103296 -0.4769281  0.9436674853  0.67828721  0.70165733 #> [1793,] -0.08791738 -0.3707664  0.5663556 -0.0012516335 -0.14242809 -0.12428431 #> [1794,]  0.14492263  0.2915431 -0.5416327  0.0513112038  0.30748140  0.31566704 #> [1795,]  0.77074318  0.5351649  0.5369719 -0.0170729016 -0.25327563  0.76955814 #> [1796,]  0.15284780  0.2960123 -0.5399943  0.0588990792 -0.68401407 -0.67531132 #> [1797,]  0.05763077  0.2246223 -0.5681782  0.0049894044  0.18879379  0.19012543 #> [1798,] -0.13002120 -0.4066323  0.5549632 -0.0034744622 -0.17985096 -0.15951103 #> [1799,]  0.28893853  0.3573758  0.4813351  0.2938040838  0.43590556  0.45156928 #> [1800,] -0.13831809 -0.4125817 -0.4468984 -0.0041020660 -0.18662571 -0.16596028 #> [1801,]  0.06842893 -0.7641955  0.4365700  0.0076311209  0.20722482  0.20952988 #> [1802,] -0.31362815  0.4982639 -0.4743021 -0.0451557421 -0.30806611 -0.28468181 #> [1803,] -0.84030150  0.2997549 -0.5386327  0.0659899216  0.32314595  0.33228369 #> [1804,]  0.23365295  0.3349920  0.4737768  0.1754944044  0.39178282 -0.59499929 #> [1805,] -0.82012444  0.3102130 -0.5348753  0.0898318256  0.34331509  0.35367298 #> [1806,]  0.24340056 -0.6608780 -0.5248117 -0.8056441846 -0.60008342 -0.58640098 #> [1807,] -0.83073364  0.3048126  0.4631929  0.0767382515  0.33287213  0.34259950 #> [1808,] -0.66652589 -0.6260091 -0.5131855 -0.5966719551  0.46854915  0.48588203 #> [1809,]  0.72250603 -0.4867838 -0.4697363 -0.0305688074 -0.28510936 -0.26183321 #> [1810,]  0.31677166  0.3678733  0.4848088 -0.6385895409 -0.54344389  0.47329175 #> [1811,] -0.48764152 -0.5645450 -0.4936264 -0.2075986773 -0.41479005  0.60710223 #> [1812,]  0.08376903  0.2496559  0.4422560  0.0126520196  0.23093494  0.23456112 #> [1813,]  0.40782874  0.4000910  0.4952373  0.5875793700  0.51912419 -0.46126210 #> [1814,]  0.18455837  0.3125335  0.4659493  0.0960098621 -0.65218124 -0.64155253 #> [1815,] -0.06705058 -0.3475047  0.5739434 -0.0006313682  0.87881960 -0.10461237 #> [1816,] -0.12302803  0.5986156 -0.4433888 -0.0029989136 -0.17401079 -0.15396847 #> [1817,] -0.12535973 -0.4031595  0.5560531 -0.0031522384 -0.17597198  0.84417206 #> [1818,] -0.32679178 -0.5069425 -0.4758928 -0.0516455890 -0.31629511 -0.29291256 #> [1819,] -0.24525107 -0.4724163 -0.4653471 -0.0209023087  0.73598306  0.75900571 #> [1820,]  0.26780153  0.3490949 -0.5214357  0.2455357649 -0.58042010  0.43436110 #> [1821,] -0.36637714  0.4780104 -0.4804965 -0.0757065314 -0.34074113 -0.31748341 #> [1822,]  0.62206731  0.4737624  0.5182013 -0.0841869387 -0.34781623 -0.32462681 #> [1823,]  0.15469026 -0.7029706  0.4603766  0.0607571425 -0.68207155  0.32674926 #> [1824,] -0.08704653 -0.3698904  0.5666382 -0.0012202172  0.85841418 -0.12349971 #> [1825,]  0.54995449 -0.5517180 -0.4896451 -0.1555310440  0.60823802  0.63070243 #> [1826,]  0.29480775  0.3596248  0.4820829  0.3077362996  0.44033546 -0.54376650 #> [1827,]  0.08810061  0.2532308 -0.5563087  0.0143645598  0.23720064  0.24118632 #> [1828,] -0.43335940 -0.5459478 -0.4878618 -0.1359025579 -0.38159259  0.64108385 #> [1829,]  0.58693686  0.4611599 -0.4856708 -0.1146836638 -0.36923721 -0.34633825 #> [1830,]  0.68319791  0.4969980 -0.4746888 -0.0466582281 -0.31005585 -0.28667006 #> [1831,]  0.70912911 -0.4924434  0.5285356 -0.0354587153  0.70632054 -0.27034305 #> [1832,] -0.25040522  0.5252098 -0.4660728 -0.0222641892 -0.26743566 -0.24436150 #> [1833,] -0.06785459 -0.3485034  0.5736137 -0.0006504680 -0.12204565 -0.10540836 #> [1834,]  0.75513704 -0.4722363 -0.4652921 -0.0208023757 -0.26375871 -0.24074012 #> [1835,] -0.42516447 -0.5430909  0.5130196 -0.1269953375  0.62339672  0.64616772 #> [1836,] -0.31702396  0.4969098 -0.4747158 -0.0467647095  0.68980519 -0.28680896 #> [1837,] -0.13622328 -0.4111062  0.5535627 -0.0039368713 -0.18493017 -0.16434424 #> [1838,]  0.80794525 -0.4456903  0.5428455 -0.0101897408 -0.22735782 -0.20515557 #> [1839,] -0.36292058 -0.5207075  0.5198963 -0.0733064417 -0.33862054 -0.31534511 #> [1840,]  0.06842893 -0.7641955  0.4365700  0.0076311209  0.20722482  0.20952988 #> [1841,] -0.32977123 -0.5081054 -0.4762482 -0.0532115899 -0.31814959 -0.29477029 #> [1842,]  0.82912549  0.5664177 -0.4534214 -0.0073248230 -0.21186237 -0.19016288 #> [1843,]  0.08361542  0.2495267  0.4422039  0.0125937733  0.23070958 -0.76567710 #> [1844,] -0.06891319  0.6501963 -0.4268149 -0.0006761639 -0.12317842 -0.10645116 #> [1845,]  0.30048804  0.3617825  0.4827984 -0.6785961774  0.44458306  0.46070360 #> [1846,] -0.62635794  0.3882764  0.4914498 -0.4953111963  0.49637237 -0.48498926 #> [1847,]  0.75351380 -0.4729881 -0.4655219 -0.0212227588 -0.26483799 -0.24180260 #> [1848,]  0.18048538  0.3105173 -0.5347670  0.0906224748 -0.65609488  0.35429854 #> [1849,]  0.21441011  0.3265503 -0.5291342  0.1411754912  0.37519293 -0.61255237 #> [1850,]  0.46597406 -0.5802007  0.5014762 -0.2878059408  0.55638063  0.57738821 #> [1851,] -0.13511758 -0.4103203  0.5538084 -0.0038515379 -0.18403123 -0.16348797 #> [1852,]  0.30447325  0.3632858 -0.5167041 -0.6689097703  0.44754060 -0.53618524 #> [1853,] -0.11889355 -0.3981711 -0.4423769 -0.0027395175 -0.17049734 -0.15064181 #> [1854,]  0.75225971  0.5264332  0.5343012 -0.0215519135 -0.26567048 -0.24262240 #> [1855,] -0.64494288 -0.6182676  0.4893345  0.4579745887 -0.51633667  0.50171992 #> [1856,]  0.37642875  0.3892494 -0.5082368  0.5116217545  0.49825586  0.51697827 #> [1857,] -0.44564013 -0.5502002  0.5108244 -0.1501495822 -0.38907520  0.63344772 #> [1858,]  0.31199121  0.3660990 -0.5157755 -0.6504444052 -0.54692876  0.46962973 #> [1859,] -0.04962511 -0.3229964 -0.4178392 -0.0002997328 -0.10122074 -0.08637892 #> [1860,]  0.12284887 -0.7218352  0.4533777  0.0334987708  0.28236006  0.28902187 #> [1861,] -0.39521101  0.4675104 -0.4837177 -0.0982561932 -0.35836354 -0.33530168 #> [1862,]  0.45541017  0.4162371 -0.4996449 -0.3085600903  0.54972049 -0.42950125 #> [1863,]  0.21415949  0.3264376 -0.5291733  0.1407549426 -0.62502816  0.38721357 #> [1864,]  0.44262448  0.4119191  0.4989925  0.6651381729 -0.45839874  0.56208794 #> [1865,]  0.33376422 -0.6259039  0.4868489  0.4040609438 -0.53124494 -0.51390198 #> [1866,]  0.86550169  0.5901220 -0.4460532 -0.0038043009 -0.18352653 -0.16300740 #> [1867,] -0.09366906 -0.3763830 -0.4354505 -0.0014723195 -0.14790825  0.87060150 #> [1868,]  0.07275199  0.2399192 -0.5617193  0.0088884056  0.21417042  0.21685532 #> [1869,] -0.06772648 -0.3483449 -0.4263340 -0.0006474006 -0.12190806 -0.10528176 #> [1870,] -0.53330053 -0.5799562 -0.4984469 -0.2864139900 -0.44316351  0.57785943 #> [1871,]  0.51100824  0.4349976  0.5062312 -0.2096803655  0.58437847 -0.39375221 #> [1872,] -0.10586911 -0.3874367 -0.4389794 -0.0020209463 -0.15910151 -0.13989293 #> [1873,] -0.15919718 -0.4264274  0.5487933 -0.0060182830 -0.20303145  0.81833736 #> [1874,] -0.13601488  0.5890415 -0.4463912 -0.0039206906 -0.18476096 -0.16418303 #> [1875,]  0.31239186 -0.6337519  0.4842737 -0.6494539623  0.45336425 -0.53006231 #> [1876,] -0.05485806  0.6689878  0.5794448 -0.0003835961 -0.10748360 -0.09207279 #> [1877,] -0.13880962  0.5870746 -0.4470058 -0.0041415027 -0.18702214 -0.16633831 #> [1878,]  0.49759987  0.4304632 -0.4951830 -0.2311724138 -0.42390030 -0.40226806 #> [1879,] -0.09909088 -0.3814294 -0.4370656 -0.0017021488  0.84704923 -0.13411824 #> [1880,]  0.53227820  0.4422263 -0.4915216 -0.1786152205 -0.40256304 -0.38035143 #> [1881,]  0.30113084 -0.6379744  0.4828789  0.3229609988 -0.55493866 -0.53879321 #> [1882,]  0.46730677  0.4202485 -0.4983826  0.7147480091 -0.44278202 -0.42174626 #> [1883,] -0.49973515  0.4313634  0.5050981 -0.2267816191  0.57774850 -0.40057083 #> [1884,]  0.20070141  0.3202681 -0.5313243 -0.8808052693 -0.63710806  0.37442082 #> [1885,]  0.52353244  0.4392475  0.5075534 -0.1909450750  0.59207718 -0.38584693 #> [1886,] -0.62834601 -0.6124189  0.4912257 -0.5002712752  0.49502526  0.51360317 #> [1887,]  0.85522118  0.5829731 -0.4482851 -0.0046414091 -0.19179500  0.82910484 #> [1888,]  0.59965313  0.4656729  0.5157176  0.8972218688 -0.36149348  0.66152471 #> [1889,] -0.13313517  0.5911012 -0.4457468 -0.0037017165 -0.18241246  0.83805301 #> [1890,] -0.22518180 -0.4628476  0.5375804 -0.0161876038 -0.25050433 -0.22772606 #> [1891,]  0.06797535  0.2353619  0.4363849  0.0075060424  0.20648278  0.20874764 #> [1892,]  0.53899893  0.4445227 -0.4908094 -0.1695527701 -0.39845192  0.62385921 #> [1893,]  0.14294506  0.2904028 -0.5420529  0.0495187254 -0.69468001  0.31337421 #> [1894,] -0.22292687 -0.4617373 -0.4620796 -0.0157126629 -0.24896434 -0.22621813 #> [1895,] -0.12602709 -0.4036628 -0.4441050 -0.0031970748 -0.17653069 -0.15635800 #> [1896,] -0.65394940  0.3785223 -0.5117081  0.4351665778 -0.52259454  0.49516646 #> [1897,]  0.36205036  0.3842068 -0.5098642  0.4756303796 -0.51152332  0.50675658 #> [1898,]  0.06842893 -0.7641955  0.4365700  0.0076311209  0.20722482  0.20952988 #> [1899,]  0.24491447 -0.6602446  0.4754040  0.1973703009  0.40116477  0.41491801 #> [1900,]  0.18884660  0.3146269  0.4666906  0.1018829573 -0.64811061 -0.63723779 #> [1901,] -0.17465152 -0.4358188  0.5458877 -0.0077870771 -0.21467235 -0.19287445 #> [1902,] -0.60075365 -0.6028526  0.4942972  0.5672828168  0.51348131  0.53286138 #> [1903,] -0.27841277 -0.4871777 -0.4698566 -0.0308869313 -0.28570103  0.73758006 #> [1904,] -0.57645742  0.4054505  0.4969431  0.6236156018  0.52934979  0.54937231 #> [1905,] -0.15392848  0.5769300 -0.4501648 -0.0054862244 -0.19897072 -0.17776508 #> [1906,]  0.56077744  0.4520179 -0.4884900 -0.1425676257 -0.38516386 -0.36255896 #> [1907,] -0.21677255  0.5413324  0.5388610 -0.0144689991 -0.24473688  0.77791681 #> [1908,] -0.47503470  0.4397349 -0.4922952 -0.1888829901  0.59295614 -0.38494526 #> [1909,] -0.57311701 -0.5934144  0.4973034  0.6310702845 -0.46849301 -0.44838670 #> [1910,] -0.54784812 -0.5848624 -0.4999914 -0.3151417230 -0.45234229 -0.43163688 #> [1911,] -0.15119647 -0.4212948 -0.4496133 -0.0052236750 -0.19684506 -0.17572766 #> [1912,]  0.55409102 -0.5502930 -0.4892043 -0.1504738375  0.61076088 -0.36671972 #> [1913,] -0.10951284 -0.3905405 -0.4399646 -0.0022074877 -0.16234290 -0.14294381 #> [1914,]  0.54460811 -0.5535552  0.5097862 -0.1622587578 -0.39502509 -0.37263409 #> [1915,] -0.09818418 -0.3806011 -0.4368010 -0.0016621927 -0.15211538 -0.13333542 #> [1916,] -0.49734410 -0.5678285 -0.4946498 -0.2228925721 -0.42077365 -0.39905008 #> [1917,]  0.17359428  0.3070406  0.4639920  0.0819290803 -0.66282625  0.34716123 #> [1918,]  0.19170934  0.3160083 -0.5328217  0.1059187399  0.35457935 -0.63438691 #> [1919,]  0.13347615 -0.7152080  0.4558660  0.0414807744  0.29473751 -0.69785118 #> [1920,]  0.17565796  0.3080907  0.4643676  0.0844771093  0.33920448  0.34931458 #> [1921,]  0.64035813 -0.5194862  0.5202703 -0.0710860637  0.66339297 -0.31331596 #> [1922,] -0.53463688 -0.5804067  0.5014115  0.7110184112 -0.44400344 -0.42300884 #> [1923,] -0.08358303 -0.3663348 -0.4322126 -0.0011003014 -0.13820144 -0.12035093 #> [1924,]  0.19649239  0.3182888 -0.5320188  0.1128673533  0.35902625  0.37032529 #> [1925,] -0.20752301 -0.4539391 -0.4596889 -0.0127385387 -0.23831224 -0.21581197 #> [1926,]  0.19908569  0.3195113  0.4684104  0.1167423091  0.36141316  0.37285422 #> [1927,] -0.13665800 -0.4114138 -0.4465335 -0.0039707724 -0.18528285 -0.16468027 #> [1928,]  0.18411491  0.3123153 -0.5341281  0.0954142724 -0.65260509  0.35799817 #> [1929,] -0.25683836 -0.4777094 -0.4669648 -0.0240572544 -0.27167597 -0.24854360 #> [1930,]  0.10002131  0.2624598  0.4473404  0.0198064999  0.25363222 -0.74142317 #> [1931,] -0.55661796 -0.5878248 -0.5009266  0.6667316912  0.54208423  0.56258862 #> [1932,] -0.31186704  0.4989693 -0.4740867 -0.0443386199 -0.30696044 -0.28357750 #> [1933,]  0.50568507 -0.5668042 -0.4943303  0.7819660372 -0.41890331 -0.39712614 #> [1934,] -0.20234323  0.5487732  0.5411438 -0.0118386437 -0.23467466 -0.21226820 #> [1935,]  0.70276438 -0.4950827 -0.4722702 -0.0379883793  0.70227408 -0.27436938 #> [1936,] -0.20622440 -0.4532636 -0.4594816 -0.0125083853  0.76259695 -0.21492575 #> [1937,]  0.08220584  0.2483331  0.4417217  0.0120670994 -0.77136883  0.23212615 #> [1938,] -0.20039572 -0.4501943 -0.4585391 -0.0115126322 -0.23329921  0.78907044 #> [1939,] -0.67632418  0.3704169  0.4856443 -0.6213414707 -0.53845285  0.47853371 #> [1940,] -0.35114152  0.4837042 -0.4787531 -0.0655773416 -0.33137667  0.69194956 #> [1941,] -0.10516640 -0.3868284  0.5612140 -0.0019862135 -0.15847132 -0.13930039 #> [1942,] -0.20489150 -0.4525672 -0.4592678 -0.0122753352 -0.23646793 -0.21401458 #> [1943,] -0.10649603  0.6120233  0.5608490 -0.0020522692 -0.15966233 -0.14042042 #> [1944,] -0.08417946  0.6330445  0.5675865 -0.0011203854 -0.13878827 -0.12089647 #> [1945,] -0.06891319  0.6501963 -0.4268149 -0.0006761639 -0.12317842 -0.10645116 #> [1946,] -0.67442856 -0.6288885  0.4858721 -0.6165838301  0.46290908 -0.52003647 #> [1947,] -0.36954941  0.4768385 -0.4808556 -0.0779637508 -0.34268548 -0.31944513 #> [1948,]  0.05307805  0.2194407  0.4295691  0.0040754852  0.18048441  0.18139601 #> [1949,]  0.24472588 -0.6603234 -0.5246228  0.1969935525  0.40100949 -0.58524607 #> [1950,]  0.08220584  0.2483331  0.4417217  0.0120670994 -0.77136883  0.23212615 #> [1951,] -0.65133641 -0.6205436  0.4885956 -0.5582122814  0.47922802  0.49707572 #> [1952,]  0.27599161  0.3523392  0.4796532  0.2638531126  0.42597783  0.44110832 #> [1953,]  0.24793185  0.3410118 -0.5241686  0.2034449010  0.40364086  0.41753415 #> [1954,] -0.25466494  0.5232716  0.5333349 -0.0234396373  0.72975338 -0.24713318 #> [1955,]  0.22949555  0.3332021 -0.5268375  0.1677460050  0.38826063 -0.59872430 #> [1956,]  0.47400454  0.4225057  0.5023262  0.7273623123 -0.43858298 -0.41740804 #> [1957,] -0.75670897 -0.6609239 -0.5248274  0.1941385810  0.39982612  0.41350342 #> [1958,]  0.73018941 -0.4834587 -0.4687209 -0.0280062592 -0.28014283  0.74308728 #> [1959,] -0.71891494  0.3543336 -0.5196795 -0.7245011605 -0.57009012  0.44525288 #> [1960,] -0.39262641 -0.5315614  0.5165674 -0.0960409017 -0.35678767  0.66629517 #> [1961,] -0.12486914 -0.4027881  0.5561698 -0.0031195499 -0.17556053 -0.15543767 #> [1962,] -0.11157945  0.6077353  0.5594891 -0.0023181812 -0.16416229 -0.14465855 #> [1963,]  0.12841545  0.2816827 -0.5452973  0.0375457627  0.28891318  0.29597135 #> [1964,]  0.33388061  0.3741383 -0.5131373  0.4043550114  0.46883765  0.48618465 #> [1965,]  0.54645768  0.4470798 -0.4900172 -0.1599067080  0.60610410 -0.37147920 #> [1966,] -0.69326864 -0.6358662  0.4835761  0.3366114559 -0.55079161 -0.53443131 #> [1967,] -0.57979034 -0.5956834  0.4965828  0.6161031069 -0.47280817  0.54712967 #> [1968,] -0.06904210  0.6500390  0.5731333 -0.0006793357 -0.12331587 -0.10657773 #> [1969,] -0.03810590 -0.3025592 -0.4107716 -0.0001573830 -0.08637339 -0.07298802 #> [1970,] -0.52241532  0.4237123 -0.4972953 -0.2660471590  0.56365547  0.58490310 #> [1971,] -0.20319016 -0.4516736  0.5410066 -0.0119824994  0.76472853 -0.21284927 #> [1972,]  0.82395443  0.5633647  0.5456356 -0.0079628045 -0.21570408 -0.19387086 #> [1973,]  0.33584341 -0.6251508 -0.5129051  0.4093166780  0.47022856 -0.51235651 #> [1974,] -0.37742983 -0.5260539 -0.4817423  0.9161971151 -0.34750875 -0.32431607 #> [1975,]  0.24829865 -0.6588361 -0.5241168  0.2041893318  0.40394082  0.41785104 #> [1976,]  0.28132135 -0.6455743  0.4803512 -0.7239564358  0.43009145 -0.55455578 #> [1977,] -0.07654526 -0.3587262 -0.4297398 -0.0008805027  0.86885754 -0.11380374 #> [1978,] -0.27075469  0.5161296  0.5311533 -0.0283118846 -0.28075494 -0.25751872 #> [1979,]  0.42397309 -0.5944032  0.4969896  0.6245805970  0.52962812  0.54966150 #> [1980,]  0.07275199  0.2399192 -0.5617193  0.0088884056  0.21417042  0.21685532 #> [1981,] -0.05028985 -0.3240520 -0.4181986 -0.0003096861 -0.10203105 -0.08711415 #> [1982,] -0.16860648 -0.4322218  0.5469992 -0.0070567918 -0.21016450 -0.18852605 #> [1983,] -0.25586642  0.5227286  0.5331690 -0.0237795481 -0.27103717 -0.24791318 #> [1984,]  0.31930928 -0.6311893  0.4851170  0.3677340697 -0.54160377  0.47522477 #> [1985,]  0.05763077  0.2246223 -0.5681782  0.0049894044  0.18879379  0.19012543 #> [1986,] -0.35510047 -0.5177862 -0.4792092 -0.0680991274 -0.33381456 -0.31050374 #> [1987,] -0.16062204  0.5726790 -0.4514837 -0.0061681414 -0.20412118 -0.18270978 #> [1988,] -0.12599799 -0.4036409 -0.4440981 -0.0031951105 -0.17650635 -0.15633490 #> [1989,] -0.07318627 -0.3548928  0.5715134 -0.0007863630 -0.12767968 -0.11060231 #> [1990,]  0.28116703 -0.6456345  0.4803311  0.2756877814 -0.57002712 -0.55468073 #> [1991,]  0.82325859  0.5629589 -0.4544896 -0.0080515667 -0.21621799 -0.19436734 #> [1992,] -0.26967417  0.5166008 -0.4687028 -0.0279623052 -0.28005433 -0.25682512 #> [1993,] -0.37086677 -0.5236469  0.5189956 -0.0789166723  0.65650756 -0.32025961 #> [1994,]  0.58609817  0.4608640 -0.4857619 -0.1155054324 -0.36974775  0.65314279 #> [1995,]  0.13121038  0.2834100  0.4553498  0.0396884653 -0.70785498 -0.70060094 #> [1996,]  0.09468501 -0.7415689 -0.5542428  0.0172345864  0.24641534  0.25093615 #> [1997,]  0.07275199  0.2399192 -0.5617193  0.0088884056  0.21417042  0.21685532 #> [1998,] -0.05028985 -0.3240520 -0.4181986 -0.0003096861 -0.10203105 -0.08711415 #> [1999,]  0.60955398 -0.5307766 -0.4831916 -0.0942029909  0.64454219 -0.33235778 #> [2000,]  0.21534237  0.3269689 -0.5289890  0.1427459257  0.37601418  0.38831701 #>              Item_18      Item_19     Item_20 #>    [1,]  0.362787970 -0.850333932 -0.77147098 #>    [2,] -0.418706988 -0.727213729 -0.65394590 #>    [3,] -0.818081095  0.073420490  0.13840827 #>    [4,] -0.702882135  0.120256029  0.19616095 #>    [5,] -0.069383575  0.720086795 -0.30155073 #>    [6,] -0.319420379  0.350487157 -0.58846105 #>    [7,] -0.538610706  0.199341540  0.27874111 #>    [8,]  0.072218575  0.031480624  0.07503228 #>    [9,] -0.336755311  0.335443851 -0.60080042 #>   [10,] -0.852609128  0.060139584  0.11999443 #>   [11,]  0.336078398  0.137406512 -0.78467850 #>   [12,]  0.509677932  0.226851001  0.30474921 #>   [13,]  0.299412712  0.121244216  0.19728874 #>   [14,] -0.005019087 -0.038006772 -0.06958865 #>   [15,]  0.043573751  0.020210911  0.05414088 #>   [16,]  0.006358292  0.003882396  0.01570157 #>   [17,] -0.276338652  0.391311507 -0.55560632 #>   [18,] -0.022613155 -0.125840537 -0.16775848 #>   [19,] -0.661271521  0.138603586  0.21662803 #>   [20,]  0.527165304  0.237450050  0.31449544 #>   [21,]  0.008827374  0.005133732  0.01939823 #>   [22,] -0.326634663  0.344138605 -0.59365156 #>   [23,] -0.467649043  0.240664591  0.31742394 #>   [24,] -0.348699863  0.325484216  0.39095055 #>   [25,] -0.323670918  0.346731167 -0.59152900 #>   [26,]  0.553174694  0.253922998  0.32937572 #>   [27,] -0.014796302 -0.090703228 -0.13205935 #>   [28,]  0.060254738 -0.973169638  0.06672801 #>   [29,]  0.537867406  0.244121522 -0.67944042 #>   [30,]  0.005438721  0.003399196  0.01419660 #>   [31,]  0.160793146  0.065269598  0.12724727 #>   [32,] -0.211535714  0.464524667 -0.49839438 #>   [33,]  0.135839121  0.055736352  0.11361170 #>   [34,] -0.207316376  0.469909960  0.50575251 #>   [35,] -0.056117465 -0.242862503 -0.27145276 #>   [36,]  0.098675408  0.041612196  0.09196853 #>   [37,] -0.254764549  0.413901724 -0.53775700 #>   [38,] -0.405423580  0.282117284  0.35417496 #>   [39,] -0.484548765 -0.769690016  0.30794548 #>   [40,] -0.124614189 -0.402308476  0.60322970 #>   [41,] -0.076284753 -0.297741200  0.68424673 #>   [42,]  0.616414272 -0.701899514 -0.63209576 #>   [43,]  0.014597933  0.007885616  0.02681121 #>   [44,] -0.025019706 -0.135837377 -0.17738524 #>   [45,]  0.220563870  0.088612513  0.15819877 #>   [46,]  0.126309159  0.052112451  0.10823919 #>   [47,]  0.073049696  0.031801563  0.07559160 #>   [48,] -0.471244340  0.238432327  0.31539163 #>   [49,]  0.213372511  0.085752899  0.15456374 #>   [50,] -0.426437837  0.267483384  0.34140191 #>   [51,] -0.252110511 -0.583206645  0.46451340 #>   [52,]  0.204138623  0.082104258  0.14986768 #>   [53,]  0.055952516  0.025141140  0.06360987 #>   [54,]  0.157066436  0.063840382  0.12524543 #>   [55,]  0.008827374  0.005133732  0.01939823 #>   [56,]  0.282022368  0.113819092  0.18873735 #>   [57,] -0.048041766 -0.218200807 -0.25087578 #>   [58,] -0.055879975 -0.242161910 -0.27087482 #>   [59,] -0.038374345 -0.186108980 -0.22325926 #>   [60,]  0.833107574  0.526436187 -0.45101551 #>   [61,] -0.132985508 -0.417631419  0.59154711 #>   [62,]  0.456613641  0.196748576  0.27623132 #>   [63,] -0.038277773  0.814227704 -0.22296364 #>   [64,]  0.285409974  0.115254248  0.19040436 #>   [65,] -0.157510659 -0.458976291  0.56008752 #>   [66,]  0.006358292  0.003882396  0.01570157 #>   [67,]  0.147567300  0.060206950  0.12009091 #>   [68,]  0.145317433  0.059348159  0.11885836 #>   [69,]  0.060695336  0.027002782  0.06704304 #>   [70,]  0.030310900  0.014760711  0.04287204 #>   [71,] -0.070188237 -0.282039090 -0.30325282 #>   [72,] -0.080574737 -0.308385100  0.67583895 #>   [73,]  0.032137241  0.015525150  0.04451444 #>   [74,] -0.203909224  0.474323256 -0.49085370 #>   [75,] -0.403267014  0.283659266  0.35550923 #>   [76,] -0.128570257  0.590366219 -0.40235814 #>   [77,] -0.176872681 -0.488425269 -0.46234196 #>   [78,]  0.643464344 -0.680880538  0.38564346 #>   [79,]  0.194549218  0.078340876  0.14495216 #>   [80,] -0.164837742 -0.470421901  0.55137685 #>   [81,] -0.220009794  0.453966495 -0.50654412 #>   [82,]  0.009936945  0.005678848  0.02093480 #>   [83,] -0.235760867  0.435198052  0.47889620 #>   [84,] -0.352920981  0.322039358  0.38808167 #>   [85,]  0.619719836 -0.699406282 -0.62997355 #>   [86,]  0.091488947  0.038873493  0.08752608 #>   [87,] -0.376188724 -0.696292160  0.37267012 #>   [88,] -0.375335740  0.304361046 -0.62677633 #>   [89,]  0.749413026  0.418465020 -0.53417546 #>   [90,] -0.440537802  0.258041479 -0.66695140 #>   [91,] -0.594529513 -0.829762073  0.24990759 #>   [92,]  0.721439442 -0.610927252  0.44261310 #>   [93,] -0.753729802  0.098977308  0.17106423 #>   [94,] -0.005809000 -0.042840267 -0.07604276 #>   [95,]  0.540656106  0.245884007 -0.67784710 #>   [96,] -0.010174274 -0.067422005 -0.10624379 #>   [97,]  0.538947698  0.244803077 -0.67882386 #>   [98,] -0.162399754  0.533344075  0.55424362 #>   [99,] -0.086549664 -0.322693706  0.66461043 #>  [100,] -0.072479350  0.711977415 -0.30803077 #>  [101,] -0.033021864 -0.166904197 -0.20617034 #>  [102,]  0.048305545  0.022109527 -0.94214241 #>  [103,] -0.005836871 -0.043008167 -0.07626323 #>  [104,]  0.776379139 -0.550432033  0.49005246 #>  [105,] -0.019920755 -0.114234535 -0.15631520 #>  [106,] -0.064982614 -0.268052348  0.70799170 #>  [107,]  0.005438721  0.003399196  0.01419660 #>  [108,]  0.771814593 -0.555909119 -0.51419277 #>  [109,] -0.029508903 -0.153645449 -0.19407587 #>  [110,] -0.020452235 -0.116563184 -0.15863592 #>  [111,] -0.468458046  0.240160877  0.31696587 #>  [112,]  0.559559930  0.258105935  0.33310594 #>  [113,] -0.410513679  0.278508152  0.35104353 #>  [114,] -0.073909922  0.708292320 -0.31096436 #>  [115,] -0.010058021 -0.066804978 -0.10552837 #>  [116,] -0.201702130  0.477213665 -0.48863314 #>  [117,]  0.025314534  0.012639712  0.03818750 #>  [118,] -0.054369546 -0.237672608 -0.26716277 #>  [119,] -0.002979759 -0.024708057 -0.05051019 #>  [120,]  0.010095499  0.005756013  0.02114920 #>  [121,]  0.217148378  0.087252321  0.15647461 #>  [122,]  0.513063671 -0.771125201  0.30662117 #>  [123,] -0.920166750  0.034412960  0.08008253 #>  [124,]  0.109960712  0.045902914  0.09875411 #>  [125,]  0.846192282 -0.453043032  0.56460118 #>  [126,]  0.032308432  0.015596539  0.04466667 #>  [127,] -0.391994993  0.291847148  0.36255888 #>  [128,] -0.062193769 -0.260322635 -0.28574481 #>  [129,] -0.379806071 -0.699047039  0.37033182 #>  [130,]  0.221061059  0.088810828  0.15844942 #>  [131,]  0.016342845  0.008684932  0.02882932 #>  [132,] -0.854092130  0.059573473 -0.88081772 #>  [133,] -0.734189932  0.107022182  0.18074515 #>  [134,] -0.613594802  0.160889835  0.24030645 #>  [135,]  0.797997292 -0.523181450  0.51106341 #>  [136,]  0.448105639 -0.807818419  0.27178426 #>  [137,]  0.029879908  0.014579528  0.04247939 #>  [138,]  0.008676612  0.005058932  0.01918422 #>  [139,]  0.020966926  0.010751166  0.03383424 #>  [140,]  0.169781999  0.068726880  0.13203289 #>  [141,] -0.076175212 -0.297465162  0.68446545 #>  [142,]  0.101885046  0.042833465  0.09392078 #>  [143,] -0.615320633  0.160056667  0.23944182 #>  [144,] -0.018838455 -0.109431895 -0.15148716 #>  [145,] -0.756888258  0.097691006  0.16949259 #>  [146,]  0.414937194 -0.825018265  0.25471249 #>  [147,]  0.035855219  0.017066123  0.04775937 #>  [148,] -0.055180728  0.759909143 -0.26916422 #>  [149,]  0.718613323 -0.613752338 -0.55963701 #>  [150,]  0.698975573 -0.632719845  0.42515753 #>  [151,]  0.589319615  0.278390663 -0.64905861 #>  [152,] -0.665827540  0.136548103  0.21438225 #>  [153,] -0.178848879 -0.491292287 -0.46452945 #>  [154,]  0.095519494  0.040410321  0.09003021 #>  [155,] -0.034295353 -0.171577645  0.78962686 #>  [156,] -0.214895850 -0.539702278  0.49834611 #>  [157,]  0.037113633  0.017583500  0.04883042 #>  [158,] -0.084674804  0.681733993  0.66807652 #>  [159,] -0.437108037  0.260311589  0.33506539 #>  [160,]  0.864932141 -0.421340405 -0.41127765 #>  [161,]  0.273258696  0.110130592  0.18442052 #>  [162,]  0.008715434  0.005078211  0.01923946 #>  [163,]  0.024691948  0.012371972  0.03758156 #>  [164,] -0.295560581 -0.627555193  0.42931544 #>  [165,] -0.005836871 -0.043008167 -0.07626323 #>  [166,]  0.022505827  0.011424897  0.03540911 #>  [167,]  0.173465733  0.070148175  0.13397781 #>  [168,] -0.530482474  0.203804873  0.28303641 #>  [169,] -0.302851495  0.365571759  0.42377910 #>  [170,]  0.404707198  0.169858461 -0.75047867 #>  [171,] -0.302630040 -0.634221661  0.42394586 #>  [172,]  0.412046594 -0.826474182  0.25324248 #>  [173,] -0.210661568  0.465633213  0.50245977 #>  [174,] -0.004894479 -0.037230309 -0.06853137 #>  [175,]  0.018165146  0.009507451  0.03085574 #>  [176,]  0.008521296  0.004981675  0.01896234 #>  [177,] -0.187684088  0.496179435  0.52590002 #>  [178,] -0.048037811  0.781811716 -0.25086520 #>  [179,]  0.188323846  0.075910752  0.14173735 #>  [180,]  0.298419074  0.120816024  0.19680043 #>  [181,] -0.052124937 -0.230891303 -0.26152606 #>  [182,]  0.531283968  0.240000419 -0.68318011 #>  [183,] -0.120109943 -0.393776550 -0.39025399 #>  [184,] -0.240991813  0.429195642  0.47421780 #>  [185,] -0.030149921 -0.156106678 -0.19634103 #>  [186,]  0.008715434  0.005078211  0.01923946 #>  [187,] -0.433501472 -0.737283024 -0.66280351 #>  [188,] -0.011545667 -0.074574050 -0.11440782 #>  [189,] -0.476900730  0.234952858  0.31221182 #>  [190,]  0.162268086  0.065835889  0.12803658 #>  [191,] -0.082995036 -0.314251286 -0.32877422 #>  [192,] -0.005091136 -0.038453910 -0.07019481 #>  [193,]  0.829517669  0.521015329 -0.45514477 #>  [194,]  0.090710432  0.038576372  0.08703852 #>  [195,]  0.466536042  0.202160275  0.28145734 #>  [196,] -0.244397542 -0.574653786 -0.52878865 #>  [197,]  0.061898502  0.027473114  0.06789943 #>  [198,] -0.015064534 -0.091988292 -0.13342602 #>  [199,]  0.071906152  0.031359920  0.07482149 #>  [200,] -0.279046292 -0.611414590  0.44222521 #>  [201,]  0.080066612  0.034502562  0.08023479 #>  [202,]  0.021896103  0.011158695 -0.96521010 #>  [203,] -0.354032052 -0.678861078  0.38733042 #>  [204,] -0.082052932 -0.311979452 -0.32698932 #>  [205,]  0.049095464  0.022424649  0.05846555 #>  [206,] -0.008039637 -0.055792313 -0.09242524 #>  [207,] -0.082314305  0.687388794 -0.32748587 #>  [208,] -0.135630006  0.577665079 -0.41203491 #>  [209,]  0.628694914  0.307466483  0.37585074 #>  [210,]  0.055296319  0.024882538  0.06312726 #>  [211,] -0.499689256  0.221320086  0.29960581 #>  [212,] -0.672418645 -0.866404384  0.21113653 #>  [213,] -0.558021769  0.188933056 -0.73140011 #>  [214,] -0.141917943 -0.433268915  0.57964311 #>  [215,]  0.506998736  0.225258900  0.30327282 #>  [216,]  0.008676612  0.005058932  0.01918422 #>  [217,] -0.038664299 -0.187117797 -0.22414425 #>  [218,]  0.057513844  0.025755401  0.06475053 #>  [219,] -0.496213445  0.223360848  0.30150833 #>  [220,] -0.282679245  0.384963850 -0.56066074 #>  [221,]  0.191330803  0.077083312  0.14329263 #>  [222,] -0.432399212  0.263455903  0.33784996 #>  [223,]  0.539867488  0.245384566  0.32170176 #>  [224,]  0.088557451  0.037754158  0.08568339 #>  [225,]  0.005438721  0.003399196  0.01419660 #>  [226,] -0.487810231  0.228351157  0.30613732 #>  [227,] -0.152799468  0.548590423  0.56584369 #>  [228,] -0.022871151 -0.126928592 -0.16881610 #>  [229,] -0.459284246  0.245921816 -0.67781296 #>  [230,] -0.015193958 -0.092606045 -0.13408110 #>  [231,] -0.106654455  0.633023629  0.63028996 #>  [232,]  0.074067151  0.032194140  0.07627351 #>  [233,] -0.087626758  0.674787519 -0.33735809 #>  [234,]  0.012986531  0.007135728  0.02486881 #>  [235,] -0.563714616 -0.814055412  0.26565446 #>  [236,]  0.034612184  0.016553061  0.04668832 #>  [237,] -0.005813036 -0.042864592 -0.07607471 #>  [238,]  0.195283634  0.078628219  0.14533014 #>  [239,] -0.097186347  0.653187095 -0.35415263 #>  [240,]  0.046563749  0.021412890  0.05650477 #>  [241,]  0.175854356  0.071071268  0.13523421 #>  [242,] -0.102749436  0.641200404 -0.36341331 #>  [243,]  0.014824395  0.007990062  0.02707785 #>  [244,] -0.060051139 -0.254265434 -0.28081012 #>  [245,] -0.276676225  0.390970363 -0.55587751 #>  [246,] -0.059303076  0.747874405 -0.27906103 #>  [247,]  0.929241840 -0.283537056  0.69554928 #>  [248,]  0.050645435  0.023041583  0.05964881 #>  [249,]  0.192849926  0.077676561  0.14407659 #>  [250,]  0.038685589  0.018227069  0.05015057 #>  [251,] -0.244305312  0.425449862 -0.52870763 #>  [252,]  0.558954674  0.257706979  0.33275097 #>  [253,]  0.244748672  0.098357186  0.17030739 #>  [254,] -0.107244132 -0.368194749  0.62935301 #>  [255,]  0.014597933  0.007885616  0.02681121 #>  [256,]  0.471513078  0.204910493 -0.71590436 #>  [257,] -0.794065887  0.082811756  0.15078351 #>  [258,]  0.123113729  0.050898438  0.10641358 #>  [259,] -0.301024256 -0.632719685  0.42515766 #>  [260,] -0.109019362 -0.371837408 -0.37344634 #>  [261,] -0.872270494  0.052652210  0.10904661 #>  [262,] -0.103683614 -0.360773045  0.63506555 #>  [263,] -0.951014837  0.022380676  0.05838086 #>  [264,] -0.108245465 -0.370254061 -0.37222990 #>  [265,]  0.006358292  0.003882396  0.01570157 #>  [266,]  0.037506157  0.017744478  0.04916188 #>  [267,]  0.265926813  0.107070718  0.18080281 #>  [268,]  0.297058403  0.120230458  0.19613172 #>  [269,] -0.004894479 -0.037230309 -0.06853137 #>  [270,]  0.157433134  0.063980913 -0.87455711 #>  [271,]  0.073149675  0.031840155  0.07565874 #>  [272,] -0.842079389  0.064167763 -0.87429478 #>  [273,] -0.196857310  0.483647662 -0.48369594 #>  [274,] -0.025894628 -0.139390456 -0.18076005 #>  [275,]  0.335910672  0.137330886 -0.78476117 #>  [276,]  0.071906521  0.031360063  0.07482174 #>  [277,] -0.178643472 -0.490995416  0.53569710 #>  [278,] -0.475554505  0.235777410  0.31296670 #>  [279,] -0.043757635 -0.204356357  0.76090878 #>  [280,] -0.677839781  0.131185529  0.20846925 #>  [281,]  0.019871481  0.010267673  0.03268782 #>  [282,]  0.127683645  0.052634780  0.10902058 #>  [283,] -0.919592908  0.034633269  0.08045669 #>  [284,] -0.047418728 -0.216222227 -0.24920262 #>  [285,]  0.079251213  0.034189416  0.07970215 #>  [286,]  0.123882246 -0.948809620  0.10685382 #>  [287,] -0.262134511 -0.593994934  0.45602686 #>  [288,] -0.592693795 -0.828847625  0.25083725 #>  [289,] -0.112936783 -0.379744496 -0.37951373 #>  [290,]  0.131078561  0.053925345  0.11094094 #>  [291,] -0.210285069 -0.533888185  0.50282846 #>  [292,] -0.027047343  0.855990987 -0.18511250 #>  [293,] -0.276272670 -0.608621770 -0.55555329 #>  [294,]  0.102360937  0.043014463  0.09420866 #>  [295,]  0.821241640 -0.491161494 -0.46442963 #>  [296,]  0.009760994  0.005593011  0.02069542 #>  [297,]  0.024483416  0.012282104  0.03737739 #>  [298,] -0.260567026  0.407668470 -0.54266174 #>  [299,] -0.311538264  0.357573228  0.41730462 #>  [300,] -0.029584299 -0.153935943  0.80565628 #>  [301,]  0.081169475  0.034925834  0.08095247 #>  [302,]  0.823247081  0.511749262  0.53779117 #>  [303,] -0.483387836  0.231010252  0.30859069 #>  [304,] -0.107873343 -0.369490174 -0.37164283 #>  [305,] -0.008844457 -0.060254655 -0.09781466 #>  [306,] -0.013074895 -0.082295689 -0.12297917 #>  [307,]  0.065371979  0.028826998  0.07034120 #>  [308,] -0.302093367  0.366279526 -0.57564965 #>  [309,]  0.076234150  0.033029157  0.07771583 #>  [310,]  0.008676612  0.005058932  0.01918422 #>  [311,]  0.074639860  0.032414967  0.07665601 #>  [312,]  0.281333391  0.113527854  0.18839821 #>  [313,]  0.141339667  0.057831264  0.11666745 #>  [314,] -0.400958402  0.285318575 -0.64305736 #>  [315,]  0.046196830  0.021265815  0.05621757 #>  [316,] -0.847535642  0.062078470  0.12275786 #>  [317,] -0.039056479 -0.188477391 -0.22533507 #>  [318,] -0.127503525  0.592326339 -0.40086349 #>  [319,] -0.030487112 -0.157393644 -0.19752171 #>  [320,] -0.219364320 -0.545241051 -0.50593149 #>  [321,] -0.005019087 -0.038006772 -0.06958865 #>  [322,]  0.038318631  0.018077095  0.04984411 #>  [323,] -0.175540737  0.513520872 -0.46085759 #>  [324,] -0.242475421  0.427513152  0.47290436 #>  [325,] -0.288357475  0.379384523  0.43488131 #>  [326,]  0.133114756  0.054699746  0.11208636 #>  [327,]  0.100589465  0.042340611  0.09313499 #>  [328,]  0.362694040  0.149622173  0.22848240 #>  [329,] -0.365174877 -0.687749901  0.37988297 #>  [330,] -0.009270022 -0.062575046 -0.10057281 #>  [331,] -0.264862187  0.403130792 -0.54624175 #>  [332,]  0.255421975  0.102726137  0.17560663 #>  [333,] -0.073559166  0.709192286 -0.31024855 #>  [334,] -0.220250247 -0.546328225 -0.50677201 #>  [335,] -0.038281298 -0.185784590 -0.22297444 #>  [336,]  0.362834850  0.149687978  0.22855230 #>  [337,]  0.437862170  0.186769501 -0.73353096 #>  [338,] -0.152506548  0.549066441  0.56620578 #>  [339,] -0.392354585 -0.708417447  0.36233197 #>  [340,]  0.018165146  0.009507451  0.03085574 #>  [341,]  0.212452157  0.085388088  0.15409718 #>  [342,]  0.040563197  0.018992065 -0.94829697 #>  [343,] -0.175100598  0.514166438 -0.46036528 #>  [344,] -0.394037877  0.290346971 -0.63872839 #>  [345,]  0.094700152  0.040098092  0.08952382 #>  [346,] -0.701676526  0.120774853  0.19675345 #>  [347,] -0.005809000 -0.042840267 -0.07604276 #>  [348,]  0.261861001  0.105383774  0.17879366 #>  [349,] -0.024904716 -0.135367269 -0.17693695 #>  [350,] -0.003537669 -0.028486145 -0.05616426 #>  [351,]  0.062962910  0.027888602  0.06865243 #>  [352,]  0.073215789  0.031865673 -0.92429687 #>  [353,]  0.037782659  0.017857763  0.04939463 #>  [354,]  0.448244442 -0.807744442  0.27185657 #>  [355,]  0.603806114  0.288771607  0.35991775 #>  [356,] -0.048629734 -0.220057524 -0.25244269 #>  [357,]  0.022433642  0.011393430  0.03533612 #>  [358,] -0.559469771  0.188170242  0.26784953 #>  [359,] -0.217030314  0.457640415  0.49629481 #>  [360,]  0.147567300  0.060206950  0.12009091 #>  [361,] -0.854625879 -0.940630211  0.11888947 #>  [362,]  0.005438721  0.003399196  0.01419660 #>  [363,] -0.014331419 -0.088460496  0.87033886 #>  [364,] -0.310032533  0.358945219 -0.58158233 #>  [365,] -0.292409471  0.375462059  0.43173829 #>  [366,] -0.421826993  0.270635104  0.34417021 #>  [367,] -0.198233171  0.481807860  0.51489305 #>  [368,] -0.313025996 -0.643776522 -0.58379142 #>  [369,] -0.906491253  0.039643920  0.08878509 #>  [370,] -0.022603137 -0.125798208 -0.16771729 #>  [371,] -0.407836673  0.280400999  0.35268733 #>  [372,]  0.172515899  0.069781438  0.13347718 #>  [373,]  0.108054768  0.045178811  0.09762305 #>  [374,] -0.269895032 -0.602106057  0.44961628 #>  [375,] -0.087170138  0.675853127 -0.33652556 #>  [376,] -0.642586017  0.147163848  0.22586364 #>  [377,]  0.196314630  0.079031841  0.14586031 #>  [378,]  0.630553278 -0.691091163  0.37706838 #>  [379,] -0.041019239 -0.195199174 -0.23119157 #>  [380,]  0.037876462  0.017896174  0.04947346 #>  [381,]  0.037506157  0.017744478  0.04916188 #>  [382,] -0.123850345  0.599123799 -0.39567703 #>  [383,] -0.366266316 -0.688607015  0.37916176 #>  [384,] -0.004994133 -0.037851602 -0.06937784 #>  [385,]  0.328484211  0.133998594  0.21158093 #>  [386,]  0.032829037  0.015813365  0.04512787 #>  [387,] -0.011974238 -0.076763730 -0.11686273 #>  [388,] -0.099394907  0.648379423 -0.35787151 #>  [389,] -0.099006303 -0.350779391  0.64277872 #>  [390,] -0.217545627  0.457002064 -0.50419822 #>  [391,] -0.005917312 -0.043491812 -0.07689699 #>  [392,] -0.725876904  0.110492880  0.18484663 #>  [393,] -0.027245590 -0.144796338 -0.18585071 #>  [394,]  0.524797778  0.235993546 -0.68683557 #>  [395,]  0.160747895  0.065252231  0.12722303 #>  [396,] -0.321379275  0.348750595  0.41012154 #>  [397,]  0.008715434  0.005078211  0.01923946 #>  [398,] -0.390046901  0.293284550  0.36379047 #>  [399,] -0.098294147 -0.349232602  0.64397487 #>  [400,]  0.079607831  0.034326393  0.07993531 #>  [401,] -0.161922178  0.534086680 -0.44519117 #>  [402,]  0.008521296  0.004981675  0.01896234 #>  [403,] -0.473095903 -0.762710984  0.31434841 #>  [404,] -0.894417907  0.044239141  0.09614695 #>  [405,]  0.623106979 -0.696830463 -0.62778631 #>  [406,] -0.009177069 -0.062070438 -0.09997547 #>  [407,] -0.005917312 -0.043491812 -0.07689699 #>  [408,] -0.443277091  0.256240373 -0.66855539 #>  [409,]  0.219401600  0.088149229  0.15761250 #>  [410,] -0.033821049 -0.169844968 -0.20881844 #>  [411,]  0.006358292  0.003882396  0.01570157 #>  [412,] -0.252083164 -0.583176716 -0.53546312 #>  [413,] -0.051461896 -0.228862296 -0.25983238 #>  [414,] -0.030121613  0.844001605 -0.19624157 #>  [415,] -0.034363581 -0.171826125 -0.21059576 #>  [416,]  0.422241708  0.178690546  0.25843899 #>  [417,] -0.578015290  0.178559325  0.25830758 #>  [418,] -0.033447187 -0.168472614 -0.20758415 #>  [419,] -0.107744805 -0.369225927  0.62856028 #>  [420,]  0.177817853  0.071830979  0.13626430 #>  [421,]  0.538870110 -0.755245924  0.32113183 #>  [422,]  0.025314534  0.012639712  0.03818750 #>  [423,]  0.054842595  0.024703572  0.06279242 #>  [424,]  0.149578299  0.060975107  0.12118868 #>  [425,] -0.325437170  0.345183543 -0.59279557 #>  [426,] -0.410636226  0.278421780  0.35096845 #>  [427,]  0.775605252 -0.551367082  0.48932829 #>  [428,]  0.161395784  0.065500931  0.12756997 #>  [429,]  0.032199231  0.015551006  0.04456959 #>  [430,]  0.154532946  0.062870037  0.12387818 #>  [431,] -0.055426869 -0.240821303 -0.26976790 #>  [432,] -0.022871151 -0.126928592 -0.16881610 #>  [433,] -0.560521735  0.187617216  0.26730491 #>  [434,]  0.099516232  0.041932225  0.09248177 #>  [435,]  0.041508075  0.019375597  0.05247475 #>  [436,] -0.013376806 -0.083791100 -0.12461255 #>  [437,]  0.295577541  0.119594203  0.19540390 #>  [438,] -0.515954563  0.211945249  0.29079229 #>  [439,]  0.037766688  0.017851222  0.04938120 #>  [440,]  0.694155638  0.362793075 -0.57846620 #>  [441,] -0.419127743  0.272495290 -0.65420046 #>  [442,] -0.090295493 -0.331376907  0.65783358 #>  [443,]  0.668067438  0.339557001  0.40258735 #>  [444,] -0.074970876  0.705584059 -0.31311610 #>  [445,]  0.027495186  0.013571181  0.04026917 #>  [446,]  0.018512136  0.009662785  0.03123314 #>  [447,] -0.456829521  0.247481837  0.32359429 #>  [448,]  0.869322071  0.586525510 -0.40528572 #>  [449,] -0.018336228 -0.107174726 -0.14919787 #>  [450,]  0.247011175  0.099279623  0.17143262 #>  [451,] -0.091794036 -0.334791700 -0.34482447 #>  [452,]  0.024063833  0.012100991 -0.96303531 #>  [453,] -0.118805860 -0.391266982 -0.38833541 #>  [454,] -0.757187060  0.097569511  0.16934379 #>  [455,]  0.005438721  0.003399196  0.01419660 #>  [456,] -0.047820480 -0.217499387 -0.25028304 #>  [457,] -0.311153317 -0.642076585  0.41758881 #>  [458,] -0.213570337 -0.538041265  0.49962746 #>  [459,]  0.125306664  0.051731539 -0.89233218 #>  [460,]  0.858756548 -0.432112451 -0.41947695 #>  [461,] -0.585521899  0.174750062 -0.74552115 #>  [462,] -0.397712293  0.287666947  0.35896712 #>  [463,] -0.016574274 -0.099104396 -0.14090015 #>  [464,] -0.192970469  0.488900496 -0.47967059 #>  [465,]  0.088908789  0.037888387 -0.91409478 #>  [466,]  0.020490248  0.010541192  0.03333809 #>  [467,] -0.062988843 -0.262543797 -0.28754844 #>  [468,]  0.783998161  0.458918152 -0.50271863 #>  [469,]  0.040334983  0.018899290  0.05151570 #>  [470,] -0.081781666  0.688677414 -0.32647285 #>  [471,] -0.005809000 -0.042840267 -0.07604276 #>  [472,] -0.029456218 -0.153442299 -0.19388848 #>  [473,] -0.020246849 -0.115665570 -0.15774289 #>  [474,]  0.409667235 -0.827667677  0.25203438 #>  [475,]  0.485173712 -0.787413529  0.29139908 #>  [476,]  0.332120282  0.135626174  0.21337130 #>  [477,] -0.274127845  0.393554738  0.44617559 #>  [478,]  0.210805690  0.084736105  0.15326172 #>  [479,] -0.402386349  0.284291186 -0.64394459 #>  [480,]  0.054331820  0.024501947  0.06241436 #>  [481,] -0.080419969 -0.308006643 -0.32386295 #>  [482,] -0.488659970 -0.772157154  0.30566730 #>  [483,] -0.058161242 -0.248833751 -0.27636419 #>  [484,]  0.369509745  0.152822219 -0.76813018 #>  [485,]  0.444540316  0.190287308  0.26992957 #>  [486,] -0.013269604 -0.083261161 -0.12403466 #>  [487,] -0.432094035  0.263660801  0.33803106 #>  [488,]  0.049365341  0.022532199  0.05867249 #>  [489,] -0.762813305  0.095288004  0.16653812 #>  [490,]  0.384076126  0.159765940  0.23913976 #>  [491,] -0.039326375 -0.189409817 -0.22615051 #>  [492,]  0.104243146  0.043730164  0.09534341 #>  [493,]  0.357263853  0.147094210  0.22578925 #>  [494,] -0.139856605  0.570277616 -0.41765821 #>  [495,]  0.029264399  0.014320231  0.04191513 #>  [496,] -0.098476841 -0.349630057 -0.35633255 #>  [497,]  0.440168968 -0.812019785 -0.73233755 #>  [498,]  0.072758531  0.031689157  0.07539589 #>  [499,]  0.127698823  0.052640549  0.10902919 #>  [500,] -0.240509928  0.429744000  0.47464568 #>  [501,] -0.153449000  0.547537232  0.56504257 #>  [502,] -0.520824167  0.209192857 -0.71181908 #>  [503,]  0.125970036  0.051983591  0.10804604 #>  [504,] -0.386847790 -0.704340342  0.36582170 #>  [505,]  0.116182608  0.048266028  0.10240786 #>  [506,]  0.573459298  0.267413439 -0.65865964 #>  [507,]  0.878188830 -0.397023540 -0.39273502 #>  [508,] -0.670282218  0.134549925  0.21218822 #>  [509,] -0.014946535 -0.091423772 -0.13282631 #>  [510,]  0.236849772  0.095151744  0.16636986 #>  [511,] -0.849020064  0.061510820  0.12195167 #>  [512,]  0.636189366 -0.686675209  0.38078647 #>  [513,] -0.026804372 -0.143041306 -0.18420369 #>  [514,] -0.163130362  0.532211134 -0.44661872 #>  [515,]  0.065355322  0.028820518  0.07032960 #>  [516,] -0.059275312  0.747954078 -0.27899585 #>  [517,] -0.002979759 -0.024708057 -0.05051019 #>  [518,]  0.157404490  0.063969935 -0.87457253 #>  [519,] -0.189420750 -0.506229262 -0.47594247 #>  [520,]  0.767582644  0.439093259 -0.51807378 #>  [521,] -0.017833971 -0.104898681 -0.14687584 #>  [522,] -0.674843039 -0.867484220  0.20994347 #>  [523,]  0.075869162  0.032888617  0.07747384 #>  [524,] -0.379004316  0.301561441 -0.62915119 #>  [525,] -0.048146356 -0.218531828 -0.25115536 #>  [526,]  0.108661250  0.045409241  0.09798358 #>  [527,]  0.734579703 -0.597454163 -0.54670385 #>  [528,]  0.506039167  0.224690674 -0.69725492 #>  [529,]  0.817903678  0.504048589 -0.46808628 #>  [530,]  0.323729246  0.131881400  0.20924105 #>  [531,] -0.056700177 -0.244575511 -0.27286436 #>  [532,]  0.151164593  0.061581417  0.12205207 #>  [533,]  0.135739579  0.055698466  0.11355611 #>  [534,]  0.689497206  0.358516085 -0.58193036 #>  [535,]  0.085171940  0.036459523  0.08353152 #>  [536,]  0.040717880  0.019054916  0.05182979 #>  [537,]  0.117345326  0.048707587  0.10308441 #>  [538,]  0.032434822  0.015649216  0.04477888 #>  [539,] -0.005019087 -0.038006772 -0.06958865 #>  [540,] -0.017075982 -0.101427156 -0.14330701 #>  [541,] -0.026896549 -0.143408787 -0.18454900 #>  [542,]  0.594870568 -0.717672849 -0.64564331 #>  [543,]  0.012576517  0.006942915  0.02436097 #>  [544,]  0.064366087  0.028435500  0.06963862 #>  [545,] -0.686105979  0.127541530  0.20440504 #>  [546,]  0.070165730  0.030686873  0.07364169 #>  [547,]  0.551129187 -0.747405032  0.32818747 #>  [548,] -0.692843258  0.124598366  0.20109407 #>  [549,] -0.712265049  0.116242314 -0.80845197 #>  [550,] -0.126954089 -0.406659754  0.59990980 #>  [551,]  0.459422834  0.198271239  0.27770644 #>  [552,] -0.575319269  0.179938582 -0.74031280 #>  [553,]  0.022856096  0.011577402  0.03576211 #>  [554,] -0.044990181 -0.208397834 -0.24255039 #>  [555,] -0.005019087 -0.038006772 -0.06958865 #>  [556,]  0.158920950  0.064551315  0.12624296 #>  [557,] -0.174028066  0.515744722 -0.45916186 #>  [558,]  0.843577996  0.542757443 -0.43859348 #>  [559,]  0.059719892  0.026620921  0.06634455 #>  [560,] -0.093095151 -0.337730032  0.65289137 #>  [561,] -0.240755206 -0.570535228  0.47442781 #>  [562,]  0.084492471  0.036199412 -0.91690356 #>  [563,]  0.203474435  0.081842775  0.14952855 #>  [564,]  0.073904439  0.032131382  0.07616466 #>  [565,] -0.206353428 -0.528848657  0.50670754 #>  [566,] -0.027145750 -0.144400083  0.81452069 #>  [567,] -0.036233022 -0.178561323 -0.21659929 #>  [568,] -0.095559328 -0.343228727  0.64862407 #>  [569,]  0.032503570  0.015677859  0.04483984 #>  [570,]  0.327521924  0.133569106  0.21110728 #>  [571,]  0.515612683  0.230407273  0.30803515 #>  [572,]  0.282622118  0.114072790  0.18903254 #>  [573,] -0.138577223 -0.427502789  0.58403103 #>  [574,] -0.058171786 -0.248864291 -0.27638925 #>  [575,]  0.008676612  0.005058932  0.01918422 #>  [576,] -0.206118679  0.471454674 -0.49305915 #>  [577,] -0.134112346  0.580356592 -0.40998534 #>  [578,] -0.020595934 -0.117189520 -0.15925793 #>  [579,] -0.098647804 -0.350001587  0.64338012 #>  [580,] -0.322554575  0.347713281  0.40927402 #>  [581,] -0.328906611 -0.657834384  0.40473038 #>  [582,] -0.007765793 -0.054250596 -0.09053555 #>  [583,]  0.049572418  0.022614685 -0.94116899 #>  [584,]  0.029683232  0.014496744  0.04229954 #>  [585,]  0.179467640  0.072469961  0.13712799 #>  [586,] -0.011193873 -0.072760955 -0.11235978 #>  [587,]  0.267637790  0.107782704  0.18164763 #>  [588,] -0.257560825 -0.589117169 -0.54013063 #>  [589,] -0.631408510  0.152389306  0.23141296 #>  [590,]  0.008715434  0.005078211  0.01923946 #>  [591,] -0.077987665 -0.302004863 -0.31912722 #>  [592,] -0.150761213 -0.448083512  0.56837363 #>  [593,] -0.120142349  0.606161318 -0.39030148 #>  [594,] -0.408662152  0.279816078 -0.64782028 #>  [595,] -0.013272950 -0.083277718 -0.12405273 #>  [596,] -0.023110141 -0.127932902 -0.16979011 #>  [597,]  0.131775380  0.054190325  0.11133345 #>  [598,]  0.286225630 -0.884399404  0.19080562 #>  [599,] -0.033087238 -0.167145769 -0.20638832 #>  [600,]  0.335745342  0.137256356  0.21515734 #>  [601,] -0.010265690 -0.067905985 -0.10680367 #>  [602,] -0.185693921  0.498961119 -0.47197322 #>  [603,]  0.275867022 -0.888775199  0.18570607 #>  [604,] -0.489622755  0.227267922  0.30513529 #>  [605,] -0.565825179  0.184843778  0.26456558 #>  [606,] -0.090881051  0.667284820 -0.34320858 #>  [607,]  0.020122498  0.010378765  0.03295248 #>  [608,] -0.012846561 -0.081158557 -0.12173155 #>  [609,] -0.241795433  0.428283216 -0.52649437 #>  [610,] -0.149129133  0.554603135 -0.42958283 #>  [611,] -0.521812831  0.208637013  0.28765220 #>  [612,] -0.430815541 -0.735479320  0.33879061 #>  [613,]  0.012576517  0.006942915  0.02436097 #>  [614,] -0.029480936  0.846462373 -0.19397642 #>  [615,] -0.533717354  0.202020900  0.28132332 #>  [616,] -0.002979759 -0.024708057 -0.05051019 #>  [617,]  0.562172692 -0.740165880 -0.66535835 #>  [618,] -0.725015794  0.110854117  0.18527104 #>  [619,] -0.051106101  0.772231458 -0.25891798 #>  [620,]  0.155587792  0.063273931  0.12444809 #>  [621,] -0.628305254  0.153854601  0.23295758 #>  [622,]  0.037017773  0.017544158 -0.95125071 #>  [623,] -0.011789302 -0.075821379 -0.11580867 #>  [624,] -0.011613689 -0.074922980 -0.11480035 #>  [625,] -0.030121613  0.844001605 -0.19624157 #>  [626,] -0.457351318 -0.752850439  0.32329478 #>  [627,] -0.063340646 -0.263522119 -0.28834187 #>  [628,] -0.892974638  0.044787654  0.09700974 #>  [629,]  0.486259933  0.213205047  0.29198387 #>  [630,]  0.019936224  0.010296344  0.03275620 #>  [631,] -0.093046037 -0.337619560  0.65297720 #>  [632,]  0.024416501  0.012253247  0.03731174 #>  [633,] -0.216493216  0.458307068  0.49680959 #>  [634,] -0.027161463 -0.144462479 -0.18553781 #>  [635,]  0.076083336  0.032971090  0.07761588 #>  [636,] -0.018591040 -0.108322246 -0.15036337 #>  [637,] -0.018257513 -0.106819271 -0.14883614 #>  [638,] -0.079295969  0.694754164 -0.32168645 #>  [639,] -0.463213503  0.243441088 -0.68005651 #>  [640,]  0.898075821  0.642953010 -0.36206161 #>  [641,]  0.025085479  0.012541305  0.03796520 #>  [642,] -0.032930863 -0.166567621 -0.20586649 #>  [643,] -0.367000981  0.310817381  0.37867712 #>  [644,] -0.291531375  0.376307986  0.43241676 #>  [645,] -0.041076761 -0.195394131 -0.23136068 #>  [646,] -0.118136600 -0.389972040 -0.38734506 #>  [647,] -0.218027349  0.456406439  0.49534166 #>  [648,]  0.034683467  0.016582539  0.04675011 #>  [649,]  0.031650644  0.015321991  0.04408016 #>  [650,] -0.300727316 -0.632441158 -0.57461776 #>  [651,]  0.029780074  0.014537515  0.04238815 #>  [652,] -0.494013075  0.224659768  0.30271636 #>  [653,] -0.010058021 -0.066804978 -0.10552837 #>  [654,] -0.355552509 -0.680089075  0.38630495 #>  [655,]  0.370938373  0.153496864 -0.76741907 #>  [656,]  0.292290576  0.118185771  0.19378814 #>  [657,] -0.016655622 -0.099482393 -0.14129290 #>  [658,]  0.297620235  0.120472132  0.19640784 #>  [659,]  0.069051812  0.030255516  0.07288156 #>  [660,] -0.073411916 -0.290429214  0.69005263 #>  [661,] -0.044040821 -0.205289215 -0.23989111 #>  [662,]  0.035515528  0.016926118  0.04746800 #>  [663,]  0.391216803  0.163223924  0.24272075 #>  [664,]  0.380125801  0.157868425  0.23716377 #>  [665,] -0.041259033 -0.196011145  0.76810438 #>  [666,] -0.030107747 -0.155945342 -0.19619283 #>  [667,] -0.005019087 -0.038006772 -0.06958865 #>  [668,] -0.378490988  0.301951654  0.37118020 #>  [669,]  0.005438721  0.003399196  0.01419660 #>  [670,]  0.012576517  0.006942915  0.02436097 #>  [671,]  0.104170684  0.043702615  0.09529984 #>  [672,]  0.027653403  0.013638401  0.04041787 #>  [673,] -0.251626041 -0.582676006 -0.53507030 #>  [674,] -0.025621551 -0.138285964 -0.17971349 #>  [675,] -0.163208249  0.532090577  0.55328951 #>  [676,]  0.950598461 -0.222479519 -0.25448207 #>  [677,] -0.211455683  0.464626003  0.50168372 #>  [678,]  0.005438721  0.003399196  0.01419660 #>  [679,] -0.361014866  0.315538891  0.38264519 #>  [680,]  0.095281612  0.040319679  0.08988333 #>  [681,]  0.350533398  0.143986808  0.22245749 #>  [682,]  0.942557142 -0.246746573 -0.27465036 #>  [683,]  0.014871022  0.008011539  0.02713257 #>  [684,]  0.360933316  0.148800416  0.22760862 #>  [685,] -0.056995146 -0.245439417  0.72642455 #>  [686,] -0.392530860 -0.708547070  0.36222079 #>  [687,] -0.009034592 -0.061294593 -0.09905440 #>  [688,]  0.086649341 -0.962975237  0.08447381 #>  [689,]  0.138228216  0.056645902  0.11494277 #>  [690,] -0.154349557 -0.453917662 -0.43606414 #>  [691,]  0.605104317 -0.710280781  0.36073238 #>  [692,]  0.020424496  0.010512179  0.03326933 #>  [693,] -0.014644834 -0.089974685 -0.13128214 #>  [694,] -0.043015921 -0.201900690 -0.23698136 #>  [695,]  0.231207082  0.092875721 -0.83645256 #>  [696,] -0.078790951  0.696001681 -0.32070190 #>  [697,]  0.008715434  0.005078211  0.01923946 #>  [698,]  0.533135754  0.241154023  0.31786874 #>  [699,]  0.006358292  0.003882396  0.01570157 #>  [700,]  0.163650723  0.066367085  0.12877501 #>  [701,] -0.018116529 -0.106181463 -0.14818624 #>  [702,] -0.059841265 -0.253666416  0.71967920 #>  [703,]  0.089043900  0.037940001  0.08599046 #>  [704,]  0.265533302  0.106907143 -0.81939155 #>  [705,]  0.865156520 -0.420942651  0.58902523 #>  [706,] -0.029503572 -0.153624899  0.80594308 #>  [707,]  0.027443195  0.013549082  0.04022024 #>  [708,] -0.188482978  0.495069254  0.52505091 #>  [709,]  0.008676612  0.005058932  0.01918422 #>  [710,]  0.009930800  0.005675853  0.02092646 #>  [711,] -0.058977656 -0.251190601 -0.27829580 #>  [712,] -0.072796904 -0.288843931  0.69131480 #>  [713,] -0.042081753 -0.198782034 -0.23429290 #>  [714,] -0.835145022  0.066830026  0.12941702 #>  [715,] -0.013628031 -0.085028518 -0.12595796 #>  [716,] -0.010265690 -0.067905985 -0.10680367 #>  [717,]  0.006358292  0.003882396  0.01570157 #>  [718,]  0.226065004  0.090811276  0.16096766 #>  [719,]  0.058177745  0.026016162  0.06523238 #>  [720,] -0.148903484 -0.445023758 -0.42929903 #>  [721,] -0.388026886 -0.705217866  0.36507178 #>  [722,] -0.827575935  0.069745990  0.13342874 #>  [723,] -0.007904721 -0.055034286 -0.09149797 #>  [724,] -0.399710904  0.286218948  0.35771940 #>  [725,]  0.488631194  0.214559728  0.29326266 #>  [726,]  0.061994194  0.027510490  0.06796730 #>  [727,] -0.628668901  0.153682561  0.23277649 #>  [728,]  0.009930800  0.005675853  0.02092646 #>  [729,]  0.419463737  0.177274986  0.25701973 #>  [730,] -0.011507153 -0.074376254 -0.11418508 #>  [731,]  0.674082983  0.344764408  0.40686117 #>  [732,] -0.005917312 -0.043491812 -0.07689699 #>  [733,]  0.199236504  0.080177266  0.14736011 #>  [734,]  0.037876462  0.017896174  0.04947346 #>  [735,]  0.559291618 -0.742070988 -0.66705145 #>  [736,] -0.037916335 -0.184509134 -0.22185334 #>  [737,]  0.046265796  0.021293468  0.05627162 #>  [738,]  0.169411621  0.068584127  0.13183683 #>  [739,]  0.778809262  0.452521552 -0.50766161 #>  [740,]  0.080600288  0.034707422  0.08058246 #>  [741,] -0.099492966 -0.351832521 -0.35803531 #>  [742,]  0.080465022  0.034655505  0.08049441 #>  [743,] -0.039977278 -0.191647783  0.77189634 #>  [744,]  0.209175072  0.084091203 -0.84756673 #>  [745,] -0.845752549  0.062760752  0.12372377 #>  [746,] -0.004994133 -0.037851602 -0.06937784 #>  [747,]  0.495226301  0.218358926  0.29683519 #>  [748,]  0.709503407 -0.622692241  0.43321816 #>  [749,]  0.142128153  0.058131809  0.11710296 #>  [750,] -0.069253767 -0.279569048 -0.30127495 #>  [751,] -0.516372192  0.211708238  0.29056786 #>  [752,]  0.018435133  0.009628347  0.03114961 #>  [753,]  0.421590182  0.178357987 -0.74189410 #>  [754,]  0.078350052  0.033843128  0.07911144 #>  [755,]  0.411267629  0.173134599  0.25284678 #>  [756,] -0.107600237  0.631071513  0.62878892 #>  [757,] -0.107015411  0.632277329  0.62971601 #>  [758,] -0.090295493 -0.331376907  0.65783358 #>  [759,] -0.003537669 -0.028486145 -0.05616426 #>  [760,]  0.102600377  0.043105524 -0.90564664 #>  [761,] -0.051198865 -0.228054048  0.74084324 #>  [762,] -0.002979759 -0.024708057 -0.05051019 #>  [763,]  0.019611726  0.010152520  0.03241268 #>  [764,] -0.341958047  0.331066532 -0.60441778 #>  [765,] -0.032387420  0.835449745 -0.20404196 #>  [766,] -0.403504871  0.283488815  0.35536185 #>  [767,] -0.268279387  0.399565795 -0.54906018 #>  [768,]  0.140754739  0.057608352  0.11634397 #>  [769,]  0.097786129 -0.958726356  0.09142427 #>  [770,] -0.005091136 -0.038453910 -0.07019481 #>  [771,] -0.494135127  0.224587575  0.30264928 #>  [772,]  0.100852608  0.042440726  0.09329484 #>  [773,] -0.642417032  0.147242250 -0.77405261 #>  [774,] -0.003537669 -0.028486145 -0.05616426 #>  [775,]  0.679625970  0.349640545 -0.58915185 #>  [776,]  0.083403315  0.035782259  0.08239671 #>  [777,]  0.022522546  0.011432183  0.03542600 #>  [778,] -0.002979759 -0.024708057 -0.05051019 #>  [779,] -0.007765793 -0.054250596 -0.09053555 #>  [780,]  0.253349328 -0.898125760  0.17457928 #>  [781,] -0.058830800  0.749232170 -0.27794959 #>  [782,]  0.290430391  0.117391010  0.19287356 #>  [783,]  0.264449317  0.106456888 -0.81992704 #>  [784,]  0.272975568  0.110011998  0.18428093 #>  [785,] -0.549087397  0.193680998  0.27324809 #>  [786,]  0.487699578  0.214026797 -0.70724010 #>  [787,] -0.158387446 -0.460366264  0.55902997 #>  [788,]  0.012842985  0.007068322  0.02469168 #>  [789,] -0.086389230 -0.322316987  0.66490505 #>  [790,]  0.507135195  0.225339792  0.30334791 #>  [791,] -0.128570257  0.590366219 -0.40235814 #>  [792,]  0.018512136  0.009662785  0.03123314 #>  [793,] -0.876043800  0.051218475  0.10689614 #>  [794,] -0.065718414  0.729936452 -0.29363206 #>  [795,]  0.202976044  0.081646646 -0.85072606 #>  [796,]  0.062706062  0.027788393 -0.93152889 #>  [797,]  0.025017688  0.012512159  0.03789927 #>  [798,]  0.452600175  0.194585916  0.27412973 #>  [799,] -0.191372515  0.491084157 -0.47799856 #>  [800,] -0.110060630 -0.373956583 -0.37507366 #>  [801,]  0.009760994  0.005593011  0.02069542 #>  [802,] -0.028111680 -0.148212510 -0.18904142 #>  [803,]  0.014157131  0.007681674  0.02628789 #>  [804,] -0.389269399  0.293860107  0.36428313 #>  [805,]  0.726208126 -0.606102985 -0.55355271 #>  [806,] -0.793968866  0.082850013  0.15083296 #>  [807,]  0.057672585  0.025817772  0.06486591 #>  [808,]  0.388472301  0.161890544  0.24134297 #>  [809,] -0.013272950 -0.083277718 -0.12405273 #>  [810,]  0.218044918 -0.912391000 -0.84307242 #>  [811,]  0.532614447  0.240828827  0.31757323 #>  [812,]  0.263878942  0.106220171  0.17979113 #>  [813,] -0.096959424 -0.346315194 -0.35376727 #>  [814,] -0.018643482 -0.108557819 -0.15060221 #>  [815,] -0.200485564 -0.521182339  0.51259843 #>  [816,] -0.104881443  0.636712629 -0.36687115 #>  [817,]  0.764086733 -0.564978394 -0.52124117 #>  [818,] -0.058676385  0.749677255 -0.27758498 #>  [819,] -0.246175451 -0.576645372 -0.53034604 #>  [820,] -0.162917982  0.532540081  0.55363166 #>  [821,]  0.068293318  0.029961520  0.07236167 #>  [822,]  0.066442836  0.029243290  0.07108523 #>  [823,] -0.235368832  0.435652381  0.47924985 #>  [824,] -0.431593452  0.263997192 -0.66167171 #>  [825,]  0.350019546  0.143750723  0.22220338 #>  [826,]  0.008676612  0.005058932  0.01918422 #>  [827,] -0.603335319  0.165886918  0.24546125 #>  [828,] -0.013628031 -0.085028518 -0.12595796 #>  [829,] -0.616176796  0.159644123  0.23901314 #>  [830,]  0.716394184 -0.615953276  0.43860747 #>  [831,]  0.019880863  0.010271829  0.03269774 #>  [832,]  0.109179004  0.045605946  0.09829091 #>  [833,] -0.029480936  0.846462373 -0.19397642 #>  [834,] -0.156653354  0.542388272  0.56112567 #>  [835,] -0.065615437  0.730217229 -0.29340552 #>  [836,]  0.265061844  0.106711253  0.18037557 #>  [837,] -0.542725108  0.197106327  0.27657824 #>  [838,]  0.115301059  0.047931245 -0.89810636 #>  [839,] -0.605808576  0.164675265  0.24421617 #>  [840,] -0.082731544  0.686382638 -0.32827638 #>  [841,] -0.062585965 -0.261420064 -0.28663633 #>  [842,]  0.172521538  0.069783615  0.13348015 #>  [843,]  0.807476221 -0.510490518 -0.47920421 #>  [844,] -0.396637433  0.288448511  0.35963981 #>  [845,]  0.034612184  0.016553061  0.04668832 #>  [846,]  0.012576517  0.006942915  0.02436097 #>  [847,] -0.081914768  0.688354958 -0.32672640 #>  [848,]  0.005438721  0.003399196  0.01419660 #>  [849,]  0.740915747 -0.590750085  0.45858405 #>  [850,] -0.748132835  0.101266089 -0.82615586 #>  [851,]  0.352087796  0.144701953  0.22322638 #>  [852,] -0.223022062  0.450293295  0.49061404 #>  [853,]  0.014157131  0.007681674  0.02628789 #>  [854,] -0.034865461 -0.173648072  0.78777438 #>  [855,] -0.781533250  0.087776910  0.15714061 #>  [856,] -0.349973547  0.324440736 -0.60991759 #>  [857,] -0.082440193 -0.312915083 -0.32772466 #>  [858,]  0.034356137  0.016447120  0.04646603 #>  [859,] -0.007583214 -0.053215760 -0.08925876 #>  [860,] -0.236546436 -0.565710446 -0.52181118 #>  [861,] -0.087054817  0.676122759 -0.33631483 #>  [862,]  0.349828266  0.143662883  0.22210880 #>  [863,]  0.273653726  0.110296116 -0.81538474 #>  [864,] -0.143730091  0.563643049  0.57729368 #>  [865,]  0.436135074  0.185866065  0.26557686 #>  [866,]  0.759544215  0.429805670 -0.52530621 #>  [867,]  0.233421436  0.093767556  0.16465605 #>  [868,]  0.430405321 -0.817112833  0.26262486 #>  [869,] -0.718067757  0.113780983  0.18869299 #>  [870,] -0.094853291  0.658338018  0.64983902 #>  [871,]  0.603355759 -0.711556446 -0.64036445 #>  [872,] -0.056256940 -0.243273293 -0.27179147 #>  [873,] -0.038325358 -0.185938237  0.77689064 #>  [874,] -0.328160608  0.342812086  0.40526082 #>  [875,]  0.009973223  0.005696519  0.02098396 #>  [876,] -0.078295066  0.697230949 -0.31973107 #>  [877,]  0.784650714  0.459731427  0.49790910 #>  [878,]  0.227083011  0.091219270 -0.83852099 #>  [879,]  0.697032787  0.365463867  0.42369200 #>  [880,]  0.044196820  0.020462056  0.05463801 #>  [881,]  0.024399034  0.012245712  0.03729460 #>  [882,]  0.065497588  0.028875854  0.07042868 #>  [883,]  0.139326438 -0.942935820  0.11555264 #>  [884,] -0.126802599 -0.406379680  0.60012343 #>  [885,]  0.339420090  0.138916672  0.21696912 #>  [886,] -0.032390641 -0.164562250 -0.20405283 #>  [887,] -0.078368003  0.697049874 -0.31987412 #>  [888,] -0.345996231  0.327710859  0.39280053 #>  [889,]  0.031650644  0.015321991  0.04408016 #>  [890,]  0.292486831  0.118269718  0.19388463 #>  [891,]  0.048651441  0.022247576  0.05812423 #>  [892,]  0.049818625  0.022712714  0.05901919 #>  [893,] -0.404950900  0.282454598 -0.64553298 #>  [894,] -0.011974238 -0.076763730 -0.11686273 #>  [895,]  0.170638791  0.069057213  0.13248606 #>  [896,]  0.014610950  0.007891626  0.02682658 #>  [897,]  0.381858724  0.158699483  0.23803017 #>  [898,] -0.173985773 -0.484192890  0.54088570 #>  [899,]  0.710218170  0.378000179  0.43377291 #>  [900,] -0.033346620 -0.168102455 -0.20725079 #>  [901,]  0.428374098  0.181837808 -0.73841880 #>  [902,] -0.346240786  0.327508793  0.39263279 #>  [903,]  0.067268002  0.029563737  0.07165585 #>  [904,]  0.132030271  0.054287261  0.11147689 #>  [905,] -0.080875397  0.690880846  0.67526091 #>  [906,]  0.091080933  0.038717786 -0.91272929 #>  [907,]  0.084417889  0.036170855  0.08304861 #>  [908,]  0.020424496  0.010512179  0.03326933 #>  [909,] -0.266784434  0.401120545 -0.54783038 #>  [910,]  0.096726903  0.040870278  0.09077404 #>  [911,]  0.008521296  0.004981675  0.01896234 #>  [912,] -0.215765074  0.459213000  0.49750897 #>  [913,]  0.385684118  0.160541467  0.23994511 #>  [914,]  0.403871317 -0.830556584  0.24909852 #>  [915,] -0.296315770 -0.628274060  0.42873752 #>  [916,]  0.351097764  0.144246288  0.22273662 #>  [917,]  0.026782351  0.013267734  0.03959540 #>  [918,]  0.084071893  0.036038359  0.08282658 #>  [919,] -0.065146514 -0.268501348 -0.29237101 #>  [920,] -0.008844457 -0.060254655 -0.09781466 #>  [921,] -0.123138006  0.600464814 -0.39465320 #>  [922,]  0.756435698  0.426283810 -0.52805592 #>  [923,] -0.008994002 -0.061073028 -0.09879076 #>  [924,]  0.008676612  0.005058932  0.01918422 #>  [925,] -0.007583214 -0.053215760 -0.08925876 #>  [926,] -0.135359939  0.578142510 -0.41167139 #>  [927,]  0.044564680  0.020610161  0.05493036 #>  [928,] -0.015186139 -0.092568765 -0.13404160 #>  [929,]  0.085153910  0.036452622  0.08351999 #>  [930,] -0.319051460 -0.649184720  0.41180657 #>  [931,] -0.867120344  0.054610318  0.11195435 #>  [932,]  0.011304042  0.006338756  0.02274544 #>  [933,] -0.098647781  0.649998463 -0.35661984 #>  [934,] -0.078661184  0.696322950 -0.32044824 #>  [935,] -0.004994133 -0.037851602 -0.06937784 #>  [936,] -0.037294446 -0.182324313  0.78007161 #>  [937,] -0.377892450  0.302407264  0.37156697 #>  [938,]  0.370253626  0.153173334  0.23224005 #>  [939,]  0.089525204  0.038123837  0.08629377 #>  [940,]  0.519274736 -0.767377650  0.31007369 #>  [941,] -0.794516155  0.082634244  0.15055397 #>  [942,] -0.582397534  0.176330036 -0.74392977 #>  [943,] -0.157309904  0.541342762  0.56033025 #>  [944,]  0.093139299 -0.960496957  0.08855543 #>  [945,]  0.402647784  0.168836845 -0.75152001 #>  [946,] -0.478080562  0.234232034  0.31155122 #>  [947,] -0.018652387 -0.108597800 -0.15064274 #>  [948,] -0.258428911  0.409951345 -0.54086371 #>  [949,]  0.268012416 -0.892061236  0.18183255 #>  [950,]  0.066253866  0.029169865  0.07095422 #>  [951,] -0.133035501 -0.417720929  0.59147893 #>  [952,] -0.069305481 -0.279706197  0.69861514 #>  [953,]  0.334119082  0.136524093  0.21435595 #>  [954,]  0.115763188  0.048106746  0.10216334 #>  [955,]  0.486553913  0.213372675  0.29214225 #>  [956,] -0.328537018 -0.657514269  0.40499307 #>  [957,] -0.048604432 -0.219977830 -0.25237550 #>  [958,] -0.104336456  0.637854367  0.63400811 #>  [959,] -0.011193873 -0.072760955 -0.11235978 #>  [960,] -0.130323416  0.587168566 -0.40479564 #>  [961,]  0.143343221  0.058595085 -0.88222710 #>  [962,]  0.199559924  0.080304194  0.14752588 #>  [963,] -0.106971570  0.632367888  0.62978565 #>  [964,]  0.401648752 -0.831657588  0.24797526 #>  [965,]  0.611013257 -0.705930385 -0.63553760 #>  [966,] -0.015995828 -0.096400811  0.86192122 #>  [967,]  0.070812733  0.030937207  0.07408139 #>  [968,] -0.034898868 -0.173768982 -0.21233363 #>  [969,] -0.011613689 -0.074922980 -0.11480035 #>  [970,]  0.026712176  0.013237808  0.03952873 #>  [971,] -0.018508133 -0.107949410 -0.14998507 #>  [972,]  0.646466078 -0.678457705 -0.61233296 #>  [973,] -0.020715275 -0.117708641 -0.15977277 #>  [974,] -0.018397049 -0.107449065 -0.14947682 #>  [975,]  0.061338921  0.027254459  0.06750183 #>  [976,] -0.254453515 -0.585760731 -0.53749182 #>  [977,] -0.034937979 -0.173910482  0.78753999 #>  [978,] -0.028020428 -0.147854355 -0.18870783 #>  [979,] -0.008876572 -0.060430680 -0.09802493 #>  [980,]  0.024629537  0.012345086  0.03752052 #>  [981,] -0.318424996 -0.648626745 -0.58773849 #>  [982,]  0.141770894  0.057995626  0.11690571 #>  [983,]  0.265993560  0.107098470  0.18083577 #>  [984,] -0.736538679  0.106046935 -0.82041525 #>  [985,] -0.592653762  0.171172346  0.25085753 #>  [986,] -0.073285768 -0.290104632  0.69031095 #>  [987,] -0.157676520 -0.459239663  0.55988714 #>  [988,]  0.061278664  0.027230904  0.06745894 #>  [989,] -0.042018506 -0.198569837 -0.23410961 #>  [990,]  0.327398828  0.133514203  0.21104669 #>  [991,]  0.824087519 -0.487023418  0.53872731 #>  [992,]  0.768288638 -0.560078293  0.48257008 #>  [993,] -0.135708859  0.577525806  0.58785904 #>  [994,]  0.512563859  0.228575203  0.30634438 #>  [995,]  0.041166383  0.019237009  0.05219639 #>  [996,]  0.269952469  0.108747903  0.18278994 #>  [997,]  0.691475306  0.360325137  0.41953611 #>  [998,]  0.147482051  0.060174399  0.12004429 #>  [999,]  0.126093917  0.052030663  0.10811661 #> [1000,]  0.525866956  0.236650451 -0.68623494 #> [1001,]  0.376139890  0.155964784  0.23517340 #> [1002,]  0.319203291  0.129877782  0.20701510 #> [1003,] -0.061227539 -0.257604140 -0.28353306 #> [1004,] -0.043757635 -0.204356357  0.76090878 #> [1005,]  0.027653403  0.013638401  0.04041787 #> [1006,]  0.187044762  0.075412654  0.14107433 #> [1007,]  0.021158537  0.010835393  0.03403254 #> [1008,]  0.459779105  0.198464878  0.27789377 #> [1009,]  0.508244304  0.225998051  0.30395866 #> [1010,] -0.414629884  0.275620238 -0.65147084 #> [1011,] -0.385869000  0.296390008 -0.63355464 #> [1012,]  0.496284455 -0.781027143 -0.70258939 #> [1013,] -0.029284470 -0.152779130  0.80672370 #> [1014,]  0.016567096  0.008786792  0.02908293 #> [1015,]  0.077090131  0.033358601  0.07828190 #> [1016,]  0.720268685  0.387899386  0.44167899 #> [1017,]  0.013240814  0.007254881  0.02518086 #> [1018,] -0.078317169 -0.302823934  0.68022557 #> [1019,]  0.056809421  0.025478444  0.06423721 #> [1020,]  0.716060933  0.383717513  0.43834469 #> [1021,] -0.021084967 -0.119310789 -0.16135780 #> [1022,]  0.033270738  0.015997017  0.04551714 #> [1023,]  0.040469844  0.018954121  0.05162644 #> [1024,] -0.069466850 -0.280133812  0.69827253 #> [1025,] -0.043316891 -0.202899306 -0.23784009 #> [1026,] -0.016791225 -0.100111304 -0.14194542 #> [1027,] -0.593386912  0.170806800  0.25048612 #> [1028,] -0.004994133 -0.037851602 -0.06937784 #> [1029,] -0.242311640  0.427698462 -0.52695093 #> [1030,]  0.747432541  0.416293656  0.46412127 #> [1031,]  0.092482635  0.039252598  0.08814653 #> [1032,] -0.013272950 -0.083277718 -0.12405273 #> [1033,] -0.115053210 -0.383943388  0.61726902 #> [1034,] -0.509044275  0.215893489 -0.70548084 #> [1035,]  0.027917667  0.013750571  0.04066557 #> [1036,] -0.039083094 -0.188569458 -0.22541563 #> [1037,] -0.005813036 -0.042864592 -0.07607471 #> [1038,] -0.007864429 -0.054807330 -0.09121965 #> [1039,]  0.238902553  0.095982575  0.16739459 #> [1040,] -0.163963874  0.530923194  0.55240087 #> [1041,]  0.252749280  0.101627928  0.17428171 #> [1042,] -0.437231149  0.260229811  0.33499283 #> [1043,] -0.893562858  0.044564116  0.09665852 #> [1044,]  0.524385831  0.235740820 -0.68706678 #> [1045,] -0.267136758  0.400753450  0.45187934 #> [1046,]  0.673906435 -0.655389662 -0.59326504 #> [1047,] -0.919019105  0.034853480  0.08082997 #> [1048,] -0.287331698  0.380385228  0.43568197 #> [1049,] -0.749611792  0.100660114  0.17311017 #> [1050,]  0.268056367 -0.892042923  0.18185425 #> [1051,]  0.008676612  0.005058932  0.01918422 #> [1052,]  0.047157939  0.021650820  0.05696820 #> [1053,] -0.156860123 -0.457941338  0.56087491 #> [1054,]  0.563609491  0.260788642 -0.66451148 #> [1055,]  0.544859484  0.248559852  0.32456511 #> [1056,] -0.013772574 -0.085737659 -0.12672652 #> [1057,]  0.017928444  0.009401261  0.03059680 #> [1058,]  0.125996638  0.051993699  0.10806120 #> [1059,] -0.020753415 -0.117874349 -0.15993698 #> [1060,]  0.164673695  0.066760320  0.12932044 #> [1061,]  0.272776710  0.109928724  0.18418288 #> [1062,] -0.092763960 -0.336984418 -0.34652927 #> [1063,]  0.008521296  0.004981675  0.01896234 #> [1064,]  0.336464853  0.137580822 -0.78448802 #> [1065,] -0.721555111  0.112309211  0.18697597 #> [1066,]  0.417167912 -0.823890182  0.25584870 #> [1067,] -0.041107880 -0.195499553 -0.23145211 #> [1068,] -0.075789812 -0.296492250  0.68523663 #> [1069,] -0.459098429  0.246039629 -0.67770659 #> [1070,] -0.627179188 -0.845612100  0.23351853 #> [1071,] -0.505091813  0.218174597  0.29666233 #> [1072,]  0.259393949  0.104363524  0.17757337 #> [1073,]  0.231497715  0.092992676  0.16369302 #> [1074,]  0.265413680  0.106857431  0.18054937 #> [1075,] -0.066064227  0.728995200 -0.29439117 #> [1076,]  0.110020097  0.045925473 -0.90121074 #> [1077,] -0.038718159  0.812695152 -0.22430821 #> [1078,] -0.405351574  0.282168645  0.35421944 #> [1079,]  0.729464240 -0.602766672  0.44909298 #> [1080,] -0.005836871 -0.043008167 -0.07626323 #> [1081,]  0.739783544 -0.591958330 -0.54236766 #> [1082,] -0.179896920  0.507197049 -0.46568242 #> [1083,] -0.165280972 -0.471102120 -0.44914104 #> [1084,] -0.210237135  0.466172798 -0.49712457 #> [1085,]  0.027185121  0.013439310  0.03997688 #> [1086,] -0.041529035 -0.196923039 -0.23268547 #> [1087,] -0.601842160  0.166620607  0.24621372 #> [1088,] -0.010265690 -0.067905985 -0.10680367 #> [1089,] -0.051507779 -0.229003094  0.74004999 #> [1090,] -0.148367785  0.555863635 -0.42862405 #> [1091,]  0.020424496  0.010512179  0.03326933 #> [1092,] -0.069934755 -0.281370788 -0.30271800 #> [1093,] -0.018838455 -0.109431895 -0.15148716 #> [1094,] -0.009144203 -0.061891731 -0.09976360 #> [1095,] -0.287815313  0.379913042  0.43530424 #> [1096,]  0.012842985  0.007068322  0.02469168 #> [1097,] -0.008004594 -0.055595706 -0.09218508 #> [1098,] -0.113858842  0.618419998 -0.38092050 #> [1099,]  0.014824395  0.007990062  0.02707785 #> [1100,] -0.223700469  0.449471658 -0.51002212 #> [1101,]  0.298606254  0.120896649  0.19689242 #> [1102,]  0.049380078  0.022538070  0.05868378 #> [1103,] -0.012806829 -0.080960134 -0.12151335 #> [1104,]  0.014816494  0.007986422  0.02706857 #> [1105,]  0.054029343  0.024382467  0.06218990 #> [1106,] -0.134286653  0.580046404 -0.41022157 #> [1107,] -0.063356693 -0.263566679 -0.28837800 #> [1108,] -0.272161878 -0.604437181 -0.55223114 #> [1109,]  0.058698773  0.026220632  0.06560923 #> [1110,] -0.098910581 -0.350571879  0.64293915 #> [1111,] -0.025423081 -0.137480692 -0.17894903 #> [1112,] -0.181833459  0.504423339  0.53219990 #> [1113,]  0.188451120  0.075960337  0.14180328 #> [1114,] -0.008996574 -0.061087076 -0.09880749 #> [1115,]  0.597133064  0.283946181  0.35575726 #> [1116,]  0.927853749 -0.287158965 -0.30734228 #> [1117,]  0.602074847 -0.712487595 -0.64116596 #> [1118,] -0.200011682  0.479444549  0.51307963 #> [1119,] -0.333341478 -0.661650219 -0.59840586 #> [1120,] -0.041578552 -0.197090006 -0.23282999 #> [1121,] -0.068076044 -0.276431052  0.70124254 #> [1122,]  0.071929927  0.031369107  0.07483754 #> [1123,]  0.583702079 -0.725542365  0.34751472 #> [1124,] -0.444056632  0.255729744  0.33098923 #> [1125,] -0.003537669 -0.028486145 -0.05616426 #> [1126,] -0.082273824 -0.312513435 -0.32740904 #> [1127,]  0.113684885  0.047317459  0.10094799 #> [1128,] -0.351939270  0.322837135 -0.61125320 #> [1129,] -0.115101394  0.615961599 -0.38280375 #> [1130,] -0.155438246 -0.455668300  0.56260413 #> [1131,] -0.199826629 -0.520310329  0.51326776 #> [1132,] -0.152894089  0.548436799  0.56572684 #> [1133,]  0.104170684  0.043702615  0.09529984 #> [1134,]  0.022338822  0.011352077  0.03524011 #> [1135,]  0.014397864  0.007793159  0.02657441 #> [1136,]  0.032927304  0.015854248  0.04521463 #> [1137,] -0.111521672 -0.376908680  0.62266091 #> [1138,]  0.287591814  0.116181411  0.19147763 #> [1139,] -0.143395949  0.564210381  0.57772530 #> [1140,]  0.483183659  0.211456375  0.29032927 #> [1141,]  0.005438721  0.003399196  0.01419660 #> [1142,] -0.377541721 -0.697325446 -0.62820621 #> [1143,]  0.483991739  0.211914764 -0.70923657 #> [1144,] -0.338824293  0.333695754 -0.60224352 #> [1145,]  0.122426172  0.050637267  0.10601907 #> [1146,]  0.005438721  0.003399196  0.01419660 #> [1147,]  0.575277541  0.268652146 -0.65757037 #> [1148,] -0.296167957  0.371866516 -0.57114944 #> [1149,]  0.014390102  0.007789568  0.02656519 #> [1150,] -0.158675072  0.539178989  0.55868397 #> [1151,] -0.851129079  0.060704844  0.12080295 #> [1152,] -0.085557310 -0.320357070 -0.33356132 #> [1153,] -0.047908526 -0.217778644  0.74948092 #> [1154,]  0.081232079  0.034949851  0.08099311 #> [1155,] -0.003537669 -0.028486145 -0.05616426 #> [1156,]  0.405137727  0.170072442 -0.75026082 #> [1157,]  0.386308729  0.160843208  0.24025810 #> [1158,]  0.651711175  0.325821711  0.39123117 #> [1159,] -0.018361415 -0.107288368 -0.14931344 #> [1160,] -0.214669721 -0.539419502  0.49856429 #> [1161,] -0.040944307 -0.194945040  0.76902894 #> [1162,]  0.008676612  0.005058932  0.01918422 #> [1163,] -0.029272822 -0.152734102  0.80676529 #> [1164,] -0.006720940 -0.048249148 -0.08303126 #> [1165,]  0.412221123  0.173613537  0.25333116 #> [1166,]  0.127058328  0.052397137  0.10866537 #> [1167,]  0.551318237  0.252717467  0.32829716 #> [1168,] -0.406456238 -0.718618355 -0.64646234 #> [1169,]  0.105968687  0.044386077  0.09637839 #> [1170,]  0.005438721  0.003399196  0.01419660 #> [1171,] -0.026896549 -0.143408787 -0.18454900 #> [1172,]  0.027366176  0.013516335  0.04014770 #> [1173,] -0.366266316 -0.688607015  0.37916176 #> [1174,] -0.235817959  0.435131940 -0.52115527 #> [1175,]  0.022433642  0.011393430  0.03533612 #> [1176,]  0.081460443  0.035037455  0.08114130 #> [1177,]  0.018201150  0.009523586  0.03089502 #> [1178,] -0.184362390 -0.499164864 -0.47054104 #> [1179,]  0.032587584  0.015712853  0.04491429 #> [1180,]  0.053945576  0.024349368  0.06212767 #> [1181,] -0.286772674  0.380931916  0.43611917 #> [1182,]  0.065629823  0.028927279  0.07052072 #> [1183,]  0.476097816  0.207465602  0.28653646 #> [1184,] -0.375613715  0.304148024 -0.62695681 #> [1185,]  0.202843221 -0.918405612  0.14920607 #> [1186,]  0.333651219  0.136313710  0.21412544 #> [1187,] -0.093714406 -0.339119958  0.65181184 #> [1188,] -0.299504542 -0.631291619  0.42630873 #> [1189,]  0.006358292  0.003882396  0.01570157 #> [1190,] -0.246584018 -0.577101323  0.46929722 #> [1191,] -0.247675159  0.421684117 -0.53165341 #> [1192,] -0.620563000  0.157538677  0.23681957 #> [1193,]  0.631232923 -0.690561979  0.37751471 #> [1194,] -0.099678918 -0.352234090  0.64165437 #> [1195,]  0.818058133  0.504268737  0.53208184 #> [1196,]  0.112956312  0.047040752  0.10052044 #> [1197,]  0.602504140  0.287824162  0.35910248 #> [1198,]  0.151848730  0.061843013  0.12242375 #> [1199,] -0.455895082  0.248077779  0.32413114 #> [1200,] -0.022971600 -0.127351127 -0.16922614 #> [1201,]  0.396912370  0.166008510  0.24558603 #> [1202,]  0.005438721  0.003399196  0.01419660 #> [1203,] -0.120052311  0.606333977 -0.39016951 #> [1204,] -0.042004354 -0.198522338 -0.23406857 #> [1205,] -0.026804372 -0.143041306 -0.18420369 #> [1206,] -0.153055190  0.548175394  0.56552800 #> [1207,]  0.030310900  0.014760711  0.04287204 #> [1208,] -0.577089840 -0.820967896  0.25878088 #> [1209,] -0.419310866  0.272368734  0.34568879 #> [1210,] -0.045921328 -0.211419252 -0.24512604 #> [1211,]  0.538339377  0.244419102 -0.67917115 #> [1212,] -0.857945420  0.058103763  0.11706235 #> [1213,]  0.011304042  0.006338756  0.02274544 #> [1214,]  0.056202207  0.025239472  0.06379300 #> [1215,] -0.048478446 -0.219580744 -0.25204062 #> [1216,] -0.009177069 -0.062070438 -0.09997547 #> [1217,]  0.108146057  0.045213497  0.09767736 #> [1218,]  0.352733782  0.144999598  0.22354602 #> [1219,]  0.361166248  0.148909014  0.22772419 #> [1220,] -0.055447273 -0.240881783 -0.26981787 #> [1221,] -0.199803991  0.479719670  0.51329079 #> [1222,] -0.078500040 -0.303277688 -0.32013285 #> [1223,] -0.113198643 -0.380266748  0.62008594 #> [1224,] -0.081409626 -0.310419703  0.67423734 #> [1225,] -0.037665098 -0.183628239  0.77892209 #> [1226,] -0.321236377  0.348876949 -0.58977527 #> [1227,]  0.082441296  0.035413578  0.08177626 #> [1228,] -0.097668845 -0.347868837  0.64503003 #> [1229,]  0.758414462  0.428521282  0.47369147 #> [1230,]  0.018257963  0.009549040  0.03095694 #> [1231,]  0.102128343  0.042926002  0.09406801 #> [1232,]  0.063898952  0.028253533  0.06931111 #> [1233,]  0.018690720  0.009742579  0.03142639 #> [1234,] -0.128442832  0.590599783 -0.40218006 #> [1235,]  0.034769848  0.016618251  0.04682492 #> [1236,]  0.022522546  0.011432183  0.03542600 #> [1237,] -0.465382674  0.242080125  0.31870961 #> [1238,]  0.090903000  0.038649875  0.08715924 #> [1239,] -0.437076591  0.260332480  0.33508392 #> [1240,] -0.344228885 -0.670824947 -0.60598479 #> [1241,] -0.005809000 -0.042840267 -0.07604276 #> [1242,]  0.086917429  0.037127284  0.08464425 #> [1243,]  0.009760994  0.005593011  0.02069542 #> [1244,]  0.017928444  0.009401261  0.03059680 #> [1245,]  0.461698649 -0.800489750  0.27890403 #> [1246,]  0.772662051 -0.554899117  0.48659069 #> [1247,] -0.367959360  0.310068103  0.37804587 #> [1248,]  0.183909120  0.074193251  0.13944517 #> [1249,]  0.040604385  0.019008803  0.05173680 #> [1250,] -0.443278852  0.256239218  0.33144358 #> [1251,]  0.014816494  0.007986422  0.02706857 #> [1252,] -0.535749579  0.200905362  0.28024960 #> [1253,]  0.202809254  0.081581025  0.14918871 #> [1254,]  0.020424496  0.010512179  0.03326933 #> [1255,]  0.005438721  0.003399196  0.01419660 #> [1256,] -0.367937821 -0.689915077  0.37806004 #> [1257,]  0.929289240 -0.283412715 -0.30435133 #> [1258,] -0.407988452  0.280293367  0.35259395 #> [1259,] -0.370968993  0.307726841 -0.62392934 #> [1260,]  0.217417645  0.087359419  0.15661068 #> [1261,]  0.511997009  0.228235775 -0.69396934 #> [1262,]  0.026693857  0.013229994  0.03951131 #> [1263,] -0.058238237 -0.249056706 -0.27654708 #> [1264,] -0.022522844 -0.125458710 -0.16738675 #> [1265,]  0.056258210  0.025261521 -0.93616596 #> [1266,] -0.669098816  0.135079644 -0.78722908 #> [1267,] -0.022801660 -0.126635926 -0.16853186 #> [1268,] -0.088190557 -0.326523785 -0.33838203 #> [1269,] -0.246168709 -0.576637842  0.46965985 #> [1270,]  0.616856955 -0.701566784  0.36818775 #> [1271,]  0.849061267 -0.448374474  0.56815232 #> [1272,]  0.028855559  0.014147637  0.04153799 #> [1273,]  0.440958956  0.188395905 -0.73192839 #> [1274,] -0.565825179  0.184843778  0.26456558 #> [1275,]  0.248836673  0.100025318  0.17233973 #> [1276,] -0.069097901  0.720844643 -0.30094337 #> [1277,] -0.483231659  0.231104579  0.30867755 #> [1278,]  0.014597933  0.007885616  0.02681121 #> [1279,] -0.009138637 -0.061861446 -0.09972768 #> [1280,]  0.014610950  0.007891626  0.02682658 #> [1281,]  0.404742093  0.169875799 -0.75046101 #> [1282,]  0.083024220  0.035637001  0.08215249 #> [1283,]  0.726971159  0.394675734 -0.55293477 #> [1284,] -0.065815802 -0.270328880 -0.29384610 #> [1285,] -0.587401238  0.173803421  0.25352309 #> [1286,] -0.054607414 -0.238383483 -0.26775158 #> [1287,]  0.184113155 -0.925727474 -0.86044865 #> [1288,] -0.114366141 -0.382585779 -0.38169110 #> [1289,] -0.014331419 -0.088460496  0.87033886 #> [1290,] -0.038261975 -0.185717185 -0.22291524 #> [1291,] -0.127034427  0.593191809  0.59979658 #> [1292,] -0.214895850 -0.539702278  0.49834611 #> [1293,]  0.625892453  0.305304013 -0.62597782 #> [1294,] -0.099738108 -0.352361815  0.64155568 #> [1295,] -0.414920092  0.275417650  0.34835249 #> [1296,]  0.086111888  0.036819189 -0.91586839 #> [1297,] -0.035471179 -0.175833411 -0.21417481 #> [1298,]  0.069051812  0.030255516  0.07288156 #> [1299,]  0.358565860  0.147698627 -0.77356544 #> [1300,] -0.400835133  0.285407426  0.35701932 #> [1301,] -0.018643482 -0.108557819 -0.15060221 #> [1302,]  0.549605747  0.251609607  0.32730457 #> [1303,] -0.164048637  0.530792492  0.55230137 #> [1304,]  0.125675110 -0.948128470  0.10787795 #> [1305,]  0.024416501  0.012253247  0.03731174 #> [1306,]  0.053521458  0.024181715  0.06181206 #> [1307,] -0.061706910  0.741044494 -0.28463312 #> [1308,] -0.040944307 -0.194945040  0.76902894 #> [1309,] -0.077627543 -0.301107501  0.68158221 #> [1310,] -0.048777980 -0.220524068 -0.25283593 #> [1311,] -0.037735475 -0.183875233 -0.22129543 #> [1312,]  0.018563067  0.009685552  0.03128832 #> [1313,]  0.316612370  0.128735805  0.20574126 #> [1314,]  0.097644042  0.041219543 -0.90866283 #> [1315,] -0.033099563 -0.167191292 -0.20642939 #> [1316,]  0.552441686  0.253446437 -0.67105046 #> [1317,] -0.014794071 -0.090692512 -0.13204793 #> [1318,] -0.038947193 -0.188099084 -0.22500394 #> [1319,] -0.905529923  0.040010400  0.08938139 #> [1320,] -0.104395651 -0.362269823 -0.36608754 #> [1321,] -0.149353089  0.554233225 -0.42986419 #> [1322,] -0.044368954  0.793633090 -0.24081411 #> [1323,] -0.016321661 -0.097927127 -0.13967427 #> [1324,] -0.160618138  0.536122652 -0.44364171 #> [1325,]  0.018165146  0.009507451  0.03085574 #> [1326,] -0.095559328 -0.343228727  0.64862407 #> [1327,] -0.059409391  0.747569487 -0.27931046 #> [1328,] -0.039056479 -0.188477391 -0.22533507 #> [1329,] -0.391911864 -0.708091652  0.36261135 #> [1330,]  0.879263946 -0.394975065 -0.39116994 #> [1331,] -0.638802980  0.148923364  0.22773946 #> [1332,] -0.310343908  0.358661010  0.41818719 #> [1333,]  0.345229300  0.141557667  0.21983618 #> [1334,]  0.343788827  0.140900915 -0.78087510 #> [1335,]  0.083403315  0.035782259  0.08239671 #> [1336,]  0.295672023  0.119634765 -0.80454967 #> [1337,]  0.185764590  0.074914530  0.14040986 #> [1338,]  0.473731961  0.206144474 -0.71472434 #> [1339,]  0.102520879  0.043075291  0.09430533 #> [1340,] -0.296771432 -0.628707020  0.42838932 #> [1341,] -0.033173280 -0.167463438 -0.20667485 #> [1342,] -0.010224179 -0.067686351 -0.10654973 #> [1343,] -0.132412842  0.583395568  0.59232945 #> [1344,] -0.062545068  0.738694213 -0.28654353 #> [1345,]  0.199103593  0.080125112  0.14729198 #> [1346,]  0.401894676 -0.831535947  0.24809948 #> [1347,] -0.170250035  0.521363500 -0.45487948 #> [1348,] -0.130989919  0.585960571  0.59428377 #> [1349,]  0.032503570  0.015677859  0.04483984 #> [1350,] -0.449730110  0.252038786  0.32768925 #> [1351,] -0.094439882 -0.340741358  0.65055328 #> [1352,] -0.092153240 -0.335605347  0.65454276 #> [1353,] -0.665682041  0.136613560 -0.78554606 #> [1354,]  0.205763126  0.082744340  0.15069635 #> [1355,] -0.344854344  0.328656092 -0.60641515 #> [1356,] -0.515473906  0.212218254  0.29105071 #> [1357,] -0.042012073 -0.198548243 -0.23409095 #> [1358,] -0.843475750  0.063632637  0.12495326 #> [1359,]  0.227483820  0.091380002  0.16168026 #> [1360,]  0.124565577  0.051449979  0.10724463 #> [1361,]  0.050232181  0.022877272  0.05933456 #> [1362,]  0.463015504  0.200229427  0.27959805 #> [1363,] -0.453060939 -0.750107626  0.32576334 #> [1364,] -0.029619990 -0.154073361 -0.19447038 #> [1365,] -0.245005766 -0.575336484  0.47067764 #> [1366,] -0.262260926 -0.594128711 -0.54407866 #> [1367,]  0.104434993  0.043803099 -0.90454127 #> [1368,] -0.008876572 -0.060430680 -0.09802493 #> [1369,] -0.014794071 -0.090692512 -0.13204793 #> [1370,] -0.058170255 -0.248859856  0.72361439 #> [1371,]  0.032326106  0.015603906  0.04468237 #> [1372,]  0.427663303  0.181471418 -0.73878367 #> [1373,] -0.190128124 -0.507205439  0.52331057 #> [1374,]  0.342395667 -0.859733081 -0.78156280 #> [1375,] -0.132821345 -0.417337329 -0.40822887 #> [1376,]  0.483548582 -0.788336704  0.29052529 #> [1377,]  0.206442867  0.083012396  0.15104277 #> [1378,]  0.024119787  0.012125167  0.03701987 #> [1379,]  0.054029150  0.024382391  0.06218976 #> [1380,]  0.012793149  0.007044895  0.02463002 #> [1381,]  0.034264091  0.016409014  0.04638598 #> [1382,]  0.224953051  0.090366028  0.16040875 #> [1383,]  0.019880863  0.010271829  0.03269774 #> [1384,]  0.016757651  0.008873199  0.02929745 #> [1385,]  0.012576517  0.006942915  0.02436097 #> [1386,]  0.339065615  0.138756169  0.21679429 #> [1387,] -0.050658941 -0.226388955  0.74223680 #> [1388,]  0.054364467  0.024514840  0.06243856 #> [1389,] -0.065821665  0.729655154 -0.29385898 #> [1390,]  0.505637765  0.224453287 -0.69747552 #> [1391,]  0.852484146 -0.442720405 -0.42754701 #> [1392,]  0.027855912  0.013724370  0.04060776 #> [1393,]  0.016111018  0.008579432  0.02856583 #> [1394,]  0.091701987  0.038954784  0.08765927 #> [1395,] -0.872152793 -0.947303057  0.10911341 #> [1396,]  0.452651267  0.194613353  0.27415644 #> [1397,]  0.009936945  0.005678848  0.02093480 #> [1398,]  0.628816257 -0.692439543  0.37593013 #> [1399,]  0.006358292  0.003882396  0.01570157 #> [1400,]  0.009936945  0.005678848  0.02093480 #> [1401,]  0.627681661 -0.693317122  0.37518855 #> [1402,] -0.008839017 -0.060224825 -0.09777901 #> [1403,]  0.708109732 -0.624038031 -0.56786072 #> [1404,]  0.053769188  0.024279657  0.06199651 #> [1405,] -0.043472503 -0.203414465  0.76171731 #> [1406,] -0.035907530 -0.177398638 -0.21556709 #> [1407,]  0.051218041  0.023269044  0.06008279 #> [1408,] -0.008844457 -0.060254655 -0.09781466 #> [1409,]  0.473090430  0.205787199  0.28493424 #> [1410,] -0.265182785  0.402794643 -0.54650728 #> [1411,] -0.069489226  0.719806935 -0.30177494 #> [1412,]  0.438828408  0.187276063  0.26696867 #> [1413,]  0.603604478  0.288624686 -0.64020863 #> [1414,] -0.398168946  0.287335500  0.35868168 #> [1415,] -0.525492154  0.206577122 -0.71431116 #> [1416,] -0.103229292  0.640185329 -0.36419585 #> [1417,] -0.379512463  0.301175651  0.37052106 #> [1418,]  0.017683628  0.009291234  0.03032769 #> [1419,]  0.053033239  0.023988575  0.06144769 #> [1420,]  0.044944550  0.020762972  0.05523139 #> [1421,] -0.324301922  0.346177392  0.40801796 #> [1422,]  0.102895844  0.043217886  0.09453177 #> [1423,]  0.238179169  0.095689622  0.16703360 #> [1424,]  0.858945906 -0.431787087 -0.41922938 #> [1425,] -0.044598524 -0.207118849 -0.24145743 #> [1426,]  0.039196649  0.018435680  0.05057570 #> [1427,] -0.179014392  0.508468691  0.53528814 #> [1428,]  0.153225689  0.062369729 -0.87682939 #> [1429,]  0.819630887 -0.493481377  0.53379970 #> [1430,] -0.027435094  0.854452947 -0.18655358 #> [1431,] -0.077333066 -0.300372014  0.68216393 #> [1432,] -0.041104082 -0.195486688 -0.23144095 #> [1433,] -0.027245590 -0.144796338 -0.18585071 #> [1434,] -0.015064534 -0.091988292 -0.13342602 #> [1435,]  0.013240814  0.007254881  0.02518086 #> [1436,] -0.044877756 -0.208031198 -0.24223725 #> [1437,]  0.038318631  0.018077095  0.04984411 #> [1438,] -0.291029484 -0.623207496  0.43280520 #> [1439,] -0.051198865 -0.228054048  0.74084324 #> [1440,]  0.546951063  0.249900082  0.32577026 #> [1441,]  0.757068222 -0.573002638  0.47250152 #> [1442,] -0.104265830  0.638002600 -0.36587771 #> [1443,]  0.387568966  0.161452854  0.24088988 #> [1444,] -0.292491284 -0.624616642  0.43167515 #> [1445,]  0.065071531  0.028710110  0.07013173 #> [1446,] -0.642455835  0.147224246  0.22592816 #> [1447,]  0.182932663  0.073813997  0.13893672 #> [1448,] -0.495992827  0.223490836  0.30162933 #> [1449,] -0.010265690 -0.067905985 -0.10680367 #> [1450,]  0.241643657  0.097094393  0.16876132 #> [1451,]  0.251862796  0.101264297  0.17384197 #> [1452,] -0.303953102  0.364546145 -0.57704916 #> [1453,]  0.772796733 -0.554738316  0.48671540 #> [1454,]  0.013190025  0.007231108  0.02511871 #> [1455,]  0.061005581  0.027124131  0.06726440 #> [1456,] -0.340042796  0.332670795  0.39690942 #> [1457,] -0.129103827 -0.410610092  0.59689754 #> [1458,]  0.056755046  0.025457054  0.06419750 #> [1459,] -0.040484392 -0.193380957  0.77038762 #> [1460,] -0.065557801 -0.269625523 -0.29327862 #> [1461,]  0.096280681  0.040700312  0.09049947 #> [1462,] -0.048705442  0.779704137 -0.25264361 #> [1463,]  0.174091016  0.070389703  0.13430705 #> [1464,] -0.207771373 -0.530674990 -0.49469761 #> [1465,] -0.822218666  0.071816841  0.13624517 #> [1466,] -0.142494823  0.565745042 -0.42110712 #> [1467,]  0.047594828  0.021825575  0.05730766 #> [1468,]  0.040926262  0.019139546  0.05200030 #> [1469,] -0.498004663  0.222307480 -0.69947298 #> [1470,]  0.193393141  0.077888842  0.14435664 #> [1471,] -0.008984854 -0.061023063 -0.09873127 #> [1472,] -0.542809178  0.197060821 -0.72346588 #> [1473,] -0.029589639 -0.153956505 -0.19436268 #> [1474,]  0.319820464  0.130150343  0.20731857 #> [1475,] -0.343044555  0.330160101 -0.60516842 #> [1476,]  0.784435272  0.459462700 -0.50229830 #> [1477,] -0.474380800  0.236498104  0.31362581 #> [1478,]  0.069528018  0.030439981  0.07320701 #> [1479,]  0.467366801  0.202617654 -0.71810309 #> [1480,]  0.057243720  0.025649231  0.06455394 #> [1481,] -0.005836871 -0.043008167 -0.07626323 #> [1482,] -0.524978459  0.206863899 -0.71403744 #> [1483,]  0.008521296  0.004981675  0.01896234 #> [1484,] -0.088846884 -0.328044182  0.66043152 #> [1485,] -0.071375234 -0.285151781  0.69425932 #> [1486,] -0.195389117  0.485622163  0.51781771 #> [1487,] -0.465402021  0.242068013  0.31869862 #> [1488,] -0.133169502  0.582039259 -0.40870374 #> [1489,] -0.353554547  0.321525583 -0.61234691 #> [1490,]  0.005438721  0.003399196  0.01419660 #> [1491,] -0.470598537  0.238832103  0.31575604 #> [1492,]  0.038351137  0.018090387  0.04987130 #> [1493,] -0.025621551 -0.138285964 -0.17971349 #> [1494,]  0.130650059  0.053762413  0.11069930 #> [1495,]  0.006358292  0.003882396  0.01570157 #> [1496,]  0.823987532 -0.487169667  0.53861576 #> [1497,] -0.335815591  0.336241070  0.39985705 #> [1498,]  0.014597933  0.007885616  0.02681121 #> [1499,] -0.330891215  0.340452275  0.40332331 #> [1500,]  0.056757359  0.025457964  0.06419919 #> [1501,]  0.328615765  0.134057349  0.21164569 #> [1502,] -0.292984673  0.374909148 -0.56870536 #> [1503,]  0.546112663 -0.750637846  0.32528679 #> [1504,] -0.026542172 -0.141993563  0.81678215 #> [1505,] -0.005019087 -0.038006772 -0.06958865 #> [1506,] -0.354741723 -0.679434847  0.38685142 #> [1507,]  0.333651219  0.136313710  0.21412544 #> [1508,] -0.026575715 -0.142127802 -0.18334427 #> [1509,]  0.079106278  0.034133737  0.07960729 #> [1510,]  0.318708582  0.129659454  0.20677185 #> [1511,]  0.746135746  0.414879722  0.46301123 #> [1512,]  0.438317114  0.187007909 -0.73329575 #> [1513,]  0.121173380  0.050161421  0.10529867 #> [1514,]  0.447502653  0.191860410  0.27147023 #> [1515,]  0.103140357  0.043310866  0.09467930 #> [1516,]  0.194883035  0.078471465  0.14512400 #> [1517,]  0.044504822  0.020586070  0.05488285 #> [1518,] -0.322177965 -0.651954698  0.40954536 #> [1519,]  0.965731896 -0.171478352 -0.21028415 #> [1520,] -0.349915724  0.324488032  0.39012177 #> [1521,]  0.327652656 -0.866372576  0.21117162 #> [1522,] -0.318813921 -0.648973266  0.41197900 #> [1523,]  0.326929856  0.133305113  0.21081588 #> [1524,]  0.295119138  0.119397467 -0.80482142 #> [1525,] -0.136938202 -0.424638321 -0.41378857 #> [1526,] -0.024171111 -0.132350600  0.82594987 #> [1527,]  0.008715434  0.005078211  0.01923946 #> [1528,]  0.053247336  0.024073292  0.06160761 #> [1529,]  0.075383793  0.032701660  0.07715144 #> [1530,]  0.571021250  0.265760287 -0.66011574 #> [1531,]  0.750999628 -0.579784906  0.46719611 #> [1532,] -0.017075982 -0.101427156 -0.14330701 #> [1533,]  0.048726747  0.022277618 -0.94181781 #> [1534,]  0.565551955 -0.737916165 -0.66336388 #> [1535,]  0.870496873  0.588661067 -0.40365806 #> [1536,]  0.792268261  0.469375923 -0.49465843 #> [1537,]  0.047694923  0.021865590  0.05738528 #> [1538,]  0.067619468  0.029700140  0.07189819 #> [1539,] -0.086048603  0.678484179  0.66553179 #> [1540,]  0.208320630  0.083753591 -0.84800126 #> [1541,] -0.011613689 -0.074922980 -0.11480035 #> [1542,]  0.108196694  0.045232736  0.09770747 #> [1543,] -0.018401175 -0.107467666 -0.14949573 #> [1544,] -0.154690035  0.545533881 -0.43648135 #> [1545,]  0.139633263  0.057181061  0.11572281 #> [1546,]  0.061117752  0.027167994  0.06734435 #> [1547,] -0.024964694 -0.135612564 -0.17717091 #> [1548,]  0.124015296  0.051240925  0.10692996 #> [1549,] -0.580321502  0.177384197  0.25712936 #> [1550,] -0.397739873  0.287646919  0.35894987 #> [1551,] -0.149441426 -0.445912571  0.57002491 #> [1552,] -0.014644834 -0.089974685 -0.13128214 #> [1553,]  0.515491326  0.230334140  0.30796774 #> [1554,]  0.124984908  0.051609292  0.10748417 #> [1555,] -0.055439894 -0.240859911 -0.26979980 #> [1556,] -0.108758796 -0.371305102  0.62696256 #> [1557,]  0.008521296  0.004981675  0.01896234 #> [1558,] -0.032277531 -0.164140772 -0.20367091 #> [1559,] -0.005019087 -0.038006772 -0.06958865 #> [1560,]  0.563726177 -0.739133709  0.33555737 #> [1561,]  0.296613708  0.120039281  0.19591317 #> [1562,] -0.721418213  0.112366882  0.18704339 #> [1563,] -0.052354737 -0.231591737 -0.26210996 #> [1564,] -0.735777766  0.106362628 -0.82003924 #> [1565,]  0.806688273  0.488435993 -0.48002636 #> [1566,]  0.013045086  0.007163194  0.02494086 #> [1567,] -0.420527718  0.271529092 -0.65504633 #> [1568,]  0.174874649  0.070692511  0.13471933 #> [1569,]  0.248836673  0.100025318  0.17233973 #> [1570,]  0.416878193  0.175963081  0.25570105 #> [1571,] -0.650877603  0.143338926  0.22175981 #> [1572,] -0.009029071 -0.061264472 -0.09901857 #> [1573,] -0.871549545  0.052926223  0.10945552 #> [1574,] -0.252772071 -0.583929849 -0.53605415 #> [1575,]  0.375378737  0.155602501 -0.76520630 #> [1576,]  0.029690638  0.014499863  0.04230632 #> [1577,] -0.135771759  0.577414748  0.58777448 #> [1578,] -0.098538117  0.650236736  0.64356443 #> [1579,]  0.758116789  0.428183707 -0.52657206 #> [1580,]  0.084118868  0.036056349  0.08285674 #> [1581,] -0.564513186  0.185527627 -0.73475773 #> [1582,] -0.439607459  0.258655601 -0.66640527 #> [1583,] -0.119368548  0.607647977 -0.38916504 #> [1584,] -0.116750231 -0.387274238 -0.38528100 #> [1585,]  0.363088245 -0.850193570  0.22867809 #> [1586,] -0.003537669 -0.028486145 -0.05616426 #> [1587,]  0.018450077  0.009635032  0.03116583 #> [1588,] -0.525386652  0.206635998  0.28574504 #> [1589,] -0.015064534 -0.091988292 -0.13342602 #> [1590,] -0.282035434 -0.614397345 -0.56015125 #> [1591,]  0.666990935 -0.661365813 -0.59817179 #> [1592,] -0.011931732 -0.076547476 -0.11662116 #> [1593,]  0.026463129  0.013131523  0.03929160 #> [1594,] -0.102243885 -0.357726989  0.63741385 #> [1595,] -0.061901763  0.740496693 -0.28507871 #> [1596,]  0.380229863  0.157918271 -0.76278423 #> [1597,]  0.083601054  0.035858014  0.08252396 #> [1598,]  0.686032066  0.355371882  0.41551653 #> [1599,]  0.489542070  0.215081683  0.29375468 #> [1600,] -0.065822371 -0.270346771  0.70613947 #> [1601,] -0.760672274  0.096154848  0.16760670 #> [1602,]  0.277798047  0.112036829 -0.81334262 #> [1603,]  0.444407210  0.190216808  0.26986043 #> [1604,]  0.159447939  0.064753440  0.12652593 #> [1605,]  0.192006237  0.077347010  0.14364134 #> [1606,] -0.051239898 -0.228180260 -0.25926230 #> [1607,]  0.568263107 -0.736099238 -0.66175690 #> [1608,] -0.151638247 -0.449518618  0.56728204 #> [1609,]  0.039928988  0.018734103  0.05118152 #> [1610,]  0.362094303  0.149342042  0.22818471 #> [1611,] -0.240858889 -0.570653190 -0.52566423 #> [1612,] -0.126564011 -0.405938126  0.60046024 #> [1613,]  0.705494269  0.373451657 -0.56987555 #> [1614,] -0.030499041 -0.157439078 -0.19756335 #> [1615,]  0.572692464 -0.733107484  0.34088183 #> [1616,] -0.776905590  0.089622712  0.15947367 #> [1617,] -0.153563482  0.547351939 -0.43509838 #> [1618,] -0.118467739  0.609386644 -0.38783556 #> [1619,] -0.038360843 -0.186061929 -0.22321796 #> [1620,] -0.375557685  0.304190950 -0.62692044 #> [1621,]  0.297806848  0.120552439  0.19649956 #> [1622,] -0.437684004  0.259929189 -0.66527396 #> [1623,] -0.100880512  0.645182019 -0.36034136 #> [1624,] -0.455553209  0.248296100  0.32432771 #> [1625,] -0.029225678 -0.152551792 -0.19306628 #> [1626,] -0.024299093 -0.132879077 -0.17455714 #> [1627,] -0.034232808 -0.171349694 -0.21016883 #> [1628,] -0.387738084  0.294996840  0.36525532 #> [1629,]  0.149163498  0.060816619  0.12096254 #> [1630,] -0.834428964  0.067105419  0.12979826 #> [1631,] -0.044161427 -0.205685726 -0.24023084 #> [1632,]  0.024337021  0.012218958  0.03723369 #> [1633,] -0.075846271 -0.296634944 -0.31487651 #> [1634,] -0.058871882 -0.250886150  0.72195351 #> [1635,] -0.004994133 -0.037851602 -0.06937784 #> [1636,]  0.494090594  0.217701353  0.29621830 #> [1637,] -0.019267664 -0.111346390 -0.15341867 #> [1638,]  0.105128194  0.044066612  0.09587489 #> [1639,]  0.030310900  0.014760711  0.04287204 #> [1640,]  0.008521296  0.004981675  0.01896234 #> [1641,]  0.344178880  0.141078628  0.21931747 #> [1642,]  0.154296312  0.062779455  0.12375020 #> [1643,]  0.184429395  0.074395416  0.13971586 #> [1644,]  0.067501685  0.029654434 -0.92818298 #> [1645,]  0.352609472  0.144942301 -0.77651549 #> [1646,]  0.610097433  0.293391314 -0.63611812 #> [1647,] -0.029814088 -0.154819635 -0.19515770 #> [1648,] -0.168300967 -0.475701056 -0.45264326 #> [1649,]  0.057050791  0.025573376  0.06441334 #> [1650,] -0.355438214  0.320003067 -0.61361806 #> [1651,] -0.009029071 -0.061264472 -0.09901857 #> [1652,] -0.074200834 -0.292452359 -0.31155637 #> [1653,] -0.104881443  0.636712629 -0.36687115 #> [1654,]  0.006358292  0.003882396  0.01570157 #> [1655,] -0.271638487  0.396099549 -0.55180558 #> [1656,] -0.023253719 -0.128534614 -0.17037268 #> [1657,] -0.004994133 -0.037851602 -0.06937784 #> [1658,] -0.016443632 -0.098496212 -0.14026736 #> [1659,]  0.064256124  0.028392674  0.06956160 #> [1660,] -0.022871151 -0.126928592 -0.16881610 #> [1661,]  0.030375370  0.014787787  0.04293061 #> [1662,] -0.179245101  0.508135799  0.53503409 #> [1663,] -0.018401175 -0.107467666 -0.14949573 #> [1664,]  0.027045775  0.013379985  0.03984513 #> [1665,] -0.011931732 -0.076547476 -0.11662116 #> [1666,] -0.061600037 -0.258654680 -0.28438834 #> [1667,]  0.414505504  0.174763885  0.25449279 #> [1668,]  0.611195654 -0.705795115 -0.63542188 #> [1669,] -0.009034592 -0.061294593 -0.09905440 #> [1670,] -0.046169168 -0.212218924  0.75419373 #> [1671,]  0.054051005  0.024391026  0.06220599 #> [1672,] -0.053999971 -0.236565209  0.73375525 #> [1673,]  0.142693018  0.058347158  0.11741458 #> [1674,]  0.059719892  0.026620921  0.06634455 #> [1675,] -0.035952899 -0.177560948 -0.21571129 #> [1676,] -0.067413297 -0.274652762 -0.29732838 #> [1677,] -0.008039637 -0.055792313 -0.09242524 #> [1678,]  0.047688877  0.021863174  0.05738059 #> [1679,] -0.051140624 -0.227874822 -0.25900687 #> [1680,]  0.545180739  0.248765324 -0.67524999 #> [1681,] -0.030499041 -0.157439078 -0.19756335 #> [1682,]  0.207483625  0.083423079 -0.84842720 #> [1683,]  0.020544204  0.010564991  0.03339446 #> [1684,]  0.387653101  0.161493595  0.24093207 #> [1685,] -0.277296245  0.390344729  0.44362503 #> [1686,] -0.009177069 -0.062070438 -0.09997547 #> [1687,]  0.021984746  0.011197455  0.03488030 #> [1688,]  0.325047149  0.132466947  0.20988944 #> [1689,] -0.443828473  0.255879109  0.33112246 #> [1690,]  0.035329243  0.016849276  0.04730779 #> [1691,]  0.044587949  0.020619525  0.05494883 #> [1692,] -0.414209653 -0.724086170  0.34878514 #> [1693,] -0.016443632 -0.098496212 -0.14026736 #> [1694,]  0.038698823  0.018232475  0.05016161 #> [1695,]  0.040555836  0.018989073  0.05169699 #> [1696,] -0.189719573  0.493358016  0.52374174 #> [1697,]  0.009760994  0.005593011  0.02069542 #> [1698,] -0.008984854 -0.061023063 -0.09873127 #> [1699,]  0.490143848 -0.784573000  0.29407998 #> [1700,]  0.014824395  0.007990062  0.02707785 #> [1701,]  0.073116217  0.031827241  0.07563628 #> [1702,]  0.082441296  0.035413578  0.08177626 #> [1703,] -0.479768797  0.233203526 -0.68939247 #> [1704,]  0.034760057  0.016614203  0.04681644 #> [1705,]  0.175649268  0.070991964  0.13512647 #> [1706,]  0.517322947  0.231439782  0.30898614 #> [1707,] -0.149668824 -0.446287600 -0.43026035 #> [1708,]  0.072103531  0.031436181  0.07495470 #> [1709,] -0.271731930  0.396003659  0.44811840 #> [1710,]  0.480988067  0.210214317  0.28915133 #> [1711,]  0.270642343  0.109036020  0.18313028 #> [1712,]  0.692471427  0.361240073  0.42027710 #> [1713,] -0.013628031 -0.085028518 -0.12595796 #> [1714,] -0.533990478  0.201870744  0.28117891 #> [1715,]  0.047702812 -0.978131256  0.05739139 #> [1716,] -0.877958164  0.050491281 -0.89420172 #> [1717,] -0.057921456 -0.248138477 -0.27579363 #> [1718,] -0.081924217 -0.311667923  0.67325561 #> [1719,] -0.004894479 -0.037230309 -0.06853137 #> [1720,]  0.048956498  0.022369247  0.05835884 #> [1721,] -0.523659928  0.207601199  0.28666572 #> [1722,]  0.075595256  0.032783121  0.07729198 #> [1723,] -0.329533614  0.341623301  0.40428521 #> [1724,] -0.607061772 -0.835936965  0.24358588 #> [1725,]  0.027855912  0.013724370  0.04060776 #> [1726,] -0.371923469 -0.693011983  0.37544647 #> [1727,]  0.170200012  0.068888025  0.13225405 #> [1728,] -0.915667106  0.036138310  0.08299410 #> [1729,] -0.009034592 -0.061294593 -0.09905440 #> [1730,] -0.542088359  0.197451209  0.27691248 #> [1731,] -0.005091136 -0.038453910 -0.07019481 #> [1732,]  0.386224819  0.160802656  0.24021605 #> [1733,]  0.547879602  0.250496946  0.32630632 #> [1734,] -0.732587216  0.107689002  0.18153655 #> [1735,]  0.325706691  0.132760345  0.21021396 #> [1736,] -0.277056296  0.390586705 -0.55618254 #> [1737,] -0.253587461  0.415181000 -0.53675219 #> [1738,] -0.665829889  0.136547047  0.21438110 #> [1739,] -0.074015468 -0.291978039 -0.31117932 #> [1740,] -0.047863279  0.782364838 -0.25039781 #> [1741,] -0.029272822 -0.152734102  0.80676529 #> [1742,] -0.013415014 -0.083979696 -0.12481796 #> [1743,] -0.131962026 -0.415793824  0.59294701 #> [1744,] -0.451456164  0.250924629  0.32669019 #> [1745,] -0.013257704 -0.083202267 -0.12397037 #> [1746,]  0.307419739  0.124712813  0.20122331 #> [1747,] -0.225080289 -0.552193174 -0.51131168 #> [1748,] -0.537279317 -0.799931728  0.27944261 #> [1749,] -0.615529795  0.159955834  0.23933708 #> [1750,] -0.370464688  0.308117918  0.37640088 #> [1751,] -0.011743719 -0.075588520 -0.11554765 #> [1752,] -0.044123169 -0.205559996 -0.24012313 #> [1753,] -0.002979759 -0.024708057 -0.05051019 #> [1754,]  0.074601486  0.032400174  0.07663041 #> [1755,] -0.310964709  0.358095136  0.41772815 #> [1756,]  0.040833562 -0.980898096  0.05192448 #> [1757,] -0.012855117 -0.081201259 -0.12177849 #> [1758,]  0.024629537  0.012345086  0.03752052 #> [1759,]  0.071554038  0.031223840  0.07458356 #> [1760,] -0.049755082 -0.223583258  0.74459026 #> [1761,]  0.152836747  0.062220923  0.12295981 #> [1762,]  0.031727152  0.015353958  0.04414860 #> [1763,] -0.071968895 -0.286698269  0.69302514 #> [1764,]  0.027262016  0.013472030  0.04004947 #> [1765,]  0.827506762 -0.481983848 -0.45743035 #> [1766,]  0.048402394  0.022148189  0.05793231 #> [1767,] -0.019701255 -0.113267164  0.84465270 #> [1768,]  0.024734661  0.012390367  0.03762331 #> [1769,] -0.158538732 -0.460605529 -0.44115208 #> [1770,] -0.581392213  0.176840081 -0.74341706 #> [1771,] -0.362325075  0.314499306 -0.61822708 #> [1772,] -0.433642304  0.262622694  0.33711307 #> [1773,] -0.227647753 -0.555268702  0.48630404 #> [1774,]  0.102497591  0.043066435  0.09429126 #> [1775,] -0.476700934  0.235075092  0.31232378 #> [1776,]  0.079339282  0.034223247  0.07975976 #> [1777,]  0.241169325  0.096901801  0.16852494 #> [1778,]  0.455448470  0.196119185  0.27562049 #> [1779,] -0.385397173  0.296742694  0.36674637 #> [1780,]  0.641904115  0.317867560  0.38459620 #> [1781,]  0.257373289  0.103529739  0.17657316 #> [1782,] -0.951405812  0.022224732  0.05808014 #> [1783,]  0.070353176  0.030759414  0.07376922 #> [1784,]  0.055694349  0.025039430 -0.93657977 #> [1785,]  0.016111018  0.008579432  0.02856583 #> [1786,]  0.255135055 -0.897391894  0.17546446 #> [1787,]  0.313253402  0.127260654 -0.79590983 #> [1788,]  0.050645435  0.023041583  0.05964881 #> [1789,] -0.301802439  0.366551548  0.42456984 #> [1790,] -0.098539980  0.650232687 -0.35643871 #> [1791,] -0.024568335 -0.133987810 -0.17561905 #> [1792,] -0.227625769 -0.555242490 -0.51367563 #> [1793,] -0.014644834 -0.089974685 -0.13128214 #> [1794,]  0.038685589  0.018227069  0.05015057 #> [1795,] -0.101902228 -0.357000254 -0.36202555 #> [1796,]  0.043107503  0.020022737  0.05376726 #> [1797,]  0.006358292  0.003882396  0.01570157 #> [1798,] -0.031743724 -0.162144110  0.79814181 #> [1799,]  0.163086928 -0.933849560  0.12847407 #> [1800,] -0.035952899 -0.177560948 -0.21571129 #> [1801,]  0.008827374  0.005133732  0.01939823 #> [1802,]  0.802478530 -0.517241717  0.51562204 #> [1803,]  0.047144041  0.021645258  0.05695738 #> [1804,]  0.103994608  0.043635673  0.09519392 #> [1805,]  0.060211466  0.026813422  0.06669702 #> [1806,]  0.113368273  0.047197213  0.10076229 #> [1807,]  0.053119012  0.024022518  0.06151178 #> [1808,]  0.220944023  0.088764138  0.15839042 #> [1809,]  0.847511984 -0.450903421 -0.43377130 #> [1810,]  0.198211467  0.079775171  0.14683441 #> [1811,]  0.519547346  0.232787884 -0.68977422 #> [1812,]  0.013045086  0.007163194  0.02494086 #> [1813,] -0.664567619  0.137115318  0.21500310 #> [1814,]  0.063500456  0.028098224  0.06903109 #> [1815,] -0.008676000 -0.059328834 -0.09670593 #> [1816,] -0.028416094 -0.149404308 -0.19014994 #> [1817,] -0.029503437 -0.153624376 -0.19405644 #> [1818,]  0.784613832  0.459685406 -0.50212642 #> [1819,] -0.117451873  0.611357806 -0.38632775 #> [1820,] -0.861202569  0.056862683  0.11525903 #> [1821,] -0.273450315 -0.605754638  0.44672375 #> [1822,]  0.708471023  0.376310300 -0.56758139 #> [1823,]  0.044173463  0.020452647  0.05461941 #> [1824,] -0.014363561 -0.088616204 -0.12982819 #> [1825,] -0.413214531  0.276610186 -0.65060805 #> [1826,]  0.170200012  0.068888025  0.13225405 #> [1827,]  0.014390102  0.007789568  0.02656519 #> [1828,] -0.383962541  0.297817548  0.36766309 #> [1829,] -0.349151369  0.325113913 -0.60935744 #> [1830,]  0.798240456  0.477138158 -0.48869113 #> [1831,] -0.168460064  0.524058381  0.54717350 #> [1832,] -0.122721535 -0.398748766  0.60594731 #> [1833,] -0.008876572 -0.060430680 -0.09802493 #> [1834,] -0.117060179  0.612120812  0.61425606 #> [1835,] -0.369793526  0.308639157 -0.62315917 #> [1836,] -0.202057466 -0.523253380 -0.48899184 #> [1837,] -0.034863166 -0.173639762 -0.21221820 #> [1838,] -0.070391069  0.717427059 -0.30367986 #> [1839,] -0.268136057  0.399714533  0.45105752 #> [1840,]  0.008827374  0.005133732  0.01939823 #> [1841,] -0.219533682  0.454550837 -0.50609236 #> [1842,] -0.055296456 -0.240434484 -0.26944826 #> [1843,]  0.012998647  0.007141413  0.02488373 #> [1844,] -0.009144203 -0.061891731 -0.09976360 #> [1845,] -0.822765163  0.071605312  0.13595869 #> [1846,]  0.280317144  0.113098673  0.18789791 #> [1847,] -0.118703189 -0.391068636  0.61181626 #> [1848,]  0.060634250  0.026978884  0.06699940 #> [1849,]  0.086797490  0.037081419  0.08456802 #> [1850,] -0.563863436  0.185866843 -0.73442237 #> [1851,] -0.034295353 -0.171577645  0.78962686 #> [1852,]  0.182258201  0.073552166  0.13858520 #> [1853,] -0.026542172 -0.141993563  0.81678215 #> [1854,] -0.119981123 -0.393529450 -0.39006512 #> [1855,] -0.747942202  0.101344259  0.17393872 #> [1856,]  0.284664206  0.114937848  0.19003744 #> [1857,] -0.405444666  0.282102246 -0.64583806 #> [1858,]  0.191929973  0.077317230  0.14360198 #> [1859,] -0.004894479 -0.037230309 -0.06853137 #> [1860,]  0.027736091  0.013673513  0.04049547 #> [1861,] -0.319403019  0.350502590  0.41155153 #> [1862,]  0.417375249  0.176214870 -0.74404561 #> [1863,]  0.086584894  0.037000115  0.08443281 #> [1864,] -0.605106319  0.165018845  0.24456954 #> [1865,]  0.221349465  0.088925901  0.15859478 #> [1866,] -0.033979559 -0.170425058 -0.20933939 #> [1867,] -0.016574274 -0.099104396 -0.14090015 #> [1868,]  0.009930800  0.005675853  0.02092646 #> [1869,] -0.008844457 -0.060254655 -0.09781466 #> [1870,]  0.437430060  0.186543224  0.26624572 #> [1871,] -0.482886386  0.231313219  0.30886965 #> [1872,] -0.021084967 -0.119310789 -0.16135780 #> [1873,] -0.047830482 -0.217531121 -0.25030987 #> [1874,] -0.034755759 -0.173250703  0.78812948 #> [1875,]  0.192452528  0.077521312  0.14387162 #> [1876,] -0.005917312 -0.043491812 -0.07689699 #> [1877,] -0.036211251 -0.178483685 -0.21653042 #> [1878,]  0.492930445  0.217031068  0.29558885 #> [1879,] -0.018508133 -0.107949410 -0.14998507 #> [1880,]  0.555339003  0.255334447 -0.66936349 #> [1881,]  0.178040199  0.071917061  0.13638080 #> [1882,] -0.561486592  0.187110831  0.26680575 #> [1883,]  0.497737326  0.219817790  0.29820169 #> [1884,]  0.075594096  0.032782674  0.07729121 #> [1885,]  0.539657173 -0.754748492  0.32158152 #> [1886,]  0.277232878  0.111798993  0.18637899 #> [1887,] -0.039429802 -0.189766438 -0.22646213 #> [1888,] -0.327868392 -0.656934322  0.40546882 #> [1889,] -0.033290039 -0.167894008 -0.20706298 #> [1890,] -0.098134225  0.651115682  0.64424429 #> [1891,]  0.008715434  0.005078211  0.01923946 #> [1892,]  0.567340472  0.263281233 -0.66230446 #> [1893,]  0.037623167  0.017792429  0.04926045 #> [1894,] -0.096082882  0.655613949 -0.35227293 #> [1895,] -0.029818718  0.845162585 -0.19517407 #> [1896,] -0.761156820  0.095958523 -0.83263504 #> [1897,]  0.262538413  0.105664359  0.17912857 #> [1898,]  0.008827374  0.005133732  0.01939823 #> [1899,]  0.114864255  0.047765359  0.10163843 #> [1900,]  0.066598279  0.029303677  0.07119290 #> [1901,] -0.057840389 -0.247903103 -0.27560039 #> [1902,]  0.321248835  0.130781946  0.20802101 #> [1903,] -0.153558349  0.547360244 -0.43509206 #> [1904,]  0.361928609 -0.850735311  0.22810248 #> [1905,] -0.044657023  0.792689809 -0.24162105 #> [1906,] -0.394184036  0.290239920  0.36117968 #> [1907,] -0.090606120 -0.332087465 -0.34271983 #> [1908,]  0.542230583  0.246883580  0.32305494 #> [1909,]  0.367641381 -0.848058037 -0.76905959 #> [1910,] -0.588379569  0.173311728  0.25302597 #> [1911,]  0.956941313 -0.202042769 -0.23710360 #> [1912,] -0.405917936  0.281764898 -0.64613026 #> [1913,] -0.022544135 -0.125548773 -0.16747446 #> [1914,] -0.422683481  0.270047204  0.34365457 #> [1915,] -0.018176894 -0.106454735 -0.14846482 #> [1916,]  0.502050512  0.222339874  0.30055722 #> [1917,]  0.055952516  0.025141140  0.06360987 #> [1918,]  0.068712338  0.030123962  0.07264911 #> [1919,]  0.032759951  0.015784615  0.04506681 #> [1920,]  0.057332556  0.025684152  0.06461863 #> [1921,] -0.263136326  0.404946426 -0.54480832 #> [1922,]  0.435047646  0.185298555  0.26501569 #> [1923,] -0.013272950 -0.083277718 -0.12405273 #> [1924,]  0.072327146  0.031522563  0.07510546 #> [1925,] -0.082709067 -0.313563233 -0.32823386 #> [1926,]  0.074330462  0.032295682 -0.92355051 #> [1927,] -0.035087808  0.825548024 -0.21294338 #> [1928,]  0.063184795  0.027975145  0.06880886 #> [1929,]  0.870524093  0.588710703 -0.40362022 #> [1930,]  0.018450077  0.009635032  0.03116583 #> [1931,] -0.603782195  0.165667659  0.24523617 #> [1932,]  0.804810845  0.485891985 -0.48197550 #> [1933,] -0.492485381  0.225564823  0.30355676 #> [1934,] -0.078460966 -0.303180784  0.67994368 #> [1935,] -0.176350626 -0.487663811  0.53823887 #> [1936,] -0.081632326 -0.310960438 -0.32618803 #> [1937,]  0.012576517  0.006942915  0.02436097 #> [1938,] -0.076895945 -0.299277415  0.68303013 #> [1939,]  0.207461509 -0.916585652  0.15156154 #> [1940,]  0.749634930  0.418709220 -0.53398401 #> [1941,] -0.020809536 -0.118118000 -0.16017832 #> [1942,]  0.919464695 -0.308288717 -0.32408514 #> [1943,] -0.021332320 -0.120377765 -0.16241013 #> [1944,] -0.013457572 -0.084189598 -0.12504643 #> [1945,] -0.009144203 -0.061891731 -0.09976360 #> [1946,]  0.210037647  0.084432248  0.15287164 #> [1947,] -0.278365987  0.389268169 -0.55723138 #> [1948,]  0.005438721  0.003399196  0.01419660 #> [1949,]  0.114677306  0.047694361  0.10152912 #> [1950,]  0.012576517  0.006942915  0.02436097 #> [1951,]  0.242643597 -0.902499330  0.16925946 #> [1952,] -0.852038851  0.060357351  0.12030619 #> [1953,]  0.117878134 -0.951090070  0.10339380 #> [1954,] -0.127171978 -0.407062191  0.59960286 #> [1955,]  0.100132578  0.042166770  0.09285717 #> [1956,]  0.450487342  0.193453372 -0.72697389 #> [1957,]  0.113260454  0.047156264 -0.89930098 #> [1958,] -0.143692751 -0.436293597 -0.42265812 #> [1959,]  0.153818593  0.062596611  0.12349170 #> [1960,]  0.684827091 -0.645714175  0.41463335 #> [1961,] -0.029272822 -0.152734102  0.80676529 #> [1962,] -0.023394923 -0.129125184 -0.17094373 #> [1963,]  0.030310900  0.014760711  0.04287204 #> [1964,]  0.221512227  0.088990855  0.15867680 #> [1965,]  0.580596914  0.272305021  0.34563303 #> [1966,]  0.185136499  0.074670280 -0.85991648 #> [1967,]  0.356255486  0.146626845  0.22528966 #> [1968,] -0.009177069 -0.062070438 -0.09997547 #> [1969,] -0.002979759 -0.024708057 -0.05051019 #> [1970,]  0.456905072 -0.803093804  0.27638419 #> [1971,] -0.079147041 -0.304878406  0.67860346 #> [1972,] -0.058795405 -0.250665860 -0.27786607 #> [1973,]  0.224265663  0.090090991  0.16006305 #> [1974,] -0.290732513  0.377079543 -0.56696473 #> [1975,]  0.118247445  0.049050183  0.10360802 #> [1976,]  0.154093264  0.062701735  0.12364035 #> [1977,] -0.011193873 -0.072760955 -0.11235978 #> [1978,] -0.144758488 -0.438097215 -0.42403022 #> [1979,]  0.362663378  0.149607846  0.22846718 #> [1980,]  0.009930800  0.005675853  0.02092646 #> [1981,] -0.005019087 -0.038006772 -0.06958865 #> [1982,] -0.053799346 -0.235962559 -0.26574476 #> [1983,] -0.128442832  0.590599783 -0.40218006 #> [1984,]  0.201586990  0.081100389  0.14856378 #> [1985,]  0.006358292  0.003882396  0.01570157 #> [1986,] -0.256278442  0.412263809  0.46095560 #> [1987,] -0.048709424 -0.220308393 -0.25265417 #> [1988,] -0.029804930 -0.154784467 -0.19512533 #> [1989,] -0.010265690 -0.067905985 -0.10680367 #> [1990,]  0.153913857  0.062633070  0.12354327 #> [1991,] -0.059275357 -0.252046050 -0.27899595 #> [1992,] -0.143539094  0.563967225  0.57754031 #> [1993,] -0.280418007 -0.612786833  0.44113240 #> [1994,] -0.350570332  0.323953015  0.38967639 #> [1995,]  0.031650644  0.015321991  0.04408016 #> [1996,]  0.016567096  0.008786792  0.02908293 #> [1997,]  0.009930800  0.005675853  0.02092646 #> [1998,] -0.005019087 -0.038006772 -0.06958865 #> [1999,] -0.311620420  0.357498541 -0.58275600 #> [2000,]  0.087590871  0.037384758  0.08507169 #>  #> $std.resid #>             Item_1     Item_2     Item_3       Item_4     Item_5     Item_6 #>    [1,] -1.7636730 -1.7617119 -1.0944553  1.416090353 -1.5120434  0.9545684 #>    [2,]  0.6158622  0.7036894  0.9916025  3.248655162  0.8044244  1.0324466 #>    [3,]         NA  0.4525283         NA  0.589870036         NA  0.8787872 #>    [4,]  0.5515545  0.5283131 -1.1247845  1.073055539 -1.6142712 -1.0754035 #>    [5,] -1.3157208  1.2156994  1.2211223 -0.037213955 -0.7552724 -0.7933488 #>    [6,]  0.6408203  0.7802335 -0.9695841 -0.206538648  0.8838048 -0.9327480 #>    [7,] -1.6981013 -1.5964900 -1.0541715  2.071894011 -1.3822425 -1.0106069 #>    [8,]  0.4714528  0.3513618  0.7611586  0.221865175  0.4271479 -1.2480355 #>    [9,] -1.5719238  0.7655806  1.0239507 -0.222238765 -1.1511925 -0.9392250 #>   [10,]  0.5076620  0.4258767 -1.2210009  0.466533356  0.5089888  0.8595310 #>   [11,]  0.5608516  0.5517731  0.9038914 -0.787878806  0.6444973 -1.0584837 #>   [12,]  0.5995545  0.6562776  0.9656096 -0.403053820 -1.3247216 -0.9935496 #>   [13,]  0.5521156  0.5297113  0.8899545 -0.922448400  0.6209686 -1.0743666 #>   [14,]  0.9756933 -0.4297528 -0.6395426 -0.003027680 -0.4179511 -0.6259646 #>   [15,]  0.4486047  0.3088006 -1.3800006  0.134705715  0.3797253  0.7643725 #>   [16,]  0.3739431  0.1923927  0.6051572  0.021641426  0.2467080  0.6431329 #>   [17,]  0.6531964  0.8200071  1.0510838 -0.170434180 -1.0813429 -0.9159733 #>   [18,]  0.8471620  1.6118617 -0.7355141 -0.012511434 -0.5840552 -0.7157325 #>   [19,]  0.5614685 -1.8071681 -1.1051245 -0.779226622  0.6461780 -1.0573803 #>   [20,]  0.6034623  0.6674538  0.9718389 -0.377592032 -1.3044897 -0.9874447 #>   [21,]  0.3855853  0.2083517  0.6238030  0.029446115  0.2652931  0.6621143 #>   [22,]  0.6388627  0.7740532 -0.9725249 -0.212984613 -1.1397024 -0.9354595 #>   [23,] -1.6539082  0.6708114 -1.0270128  2.700217458  0.7700972 -0.9856378 #>   [24,] -1.5796734 -1.3230021  1.0189784 -0.233492555  0.8586030 -0.9436174 #>   [25,] -1.5633222  0.7765775 -0.9713199 -0.210321627  0.8800296  1.0702645 #>   [26,]  0.6093526 -1.4608780 -1.0191314 -0.342491633  0.7844276 -0.9783868 #>   [27,] -1.1340417 -0.5590288 -0.7069097 -0.008365424 -0.5311574  1.4513135 #>   [28,]  0.4630494  0.3353146 -1.3373839  0.185196640  0.4093310 -1.2695133 #>   [29,] -1.6505104 -1.4827845 -1.0249243 -0.362768834  0.7738582 -0.9837166 #>   [30,]  0.3685330  0.1852413  0.5964905  0.018694451  0.2383360  0.6343021 #>   [31,]  0.5125286  0.4365698 -1.2095247  0.513454298  0.5206238  0.8673463 #>   [32,] -1.4816259  0.8928372  1.0857005 -0.122672689  0.9993500  1.1261746 #>   [33,] -1.9872599  0.4162274  0.8118835  0.426991504  0.4984674 -1.1731982 #>   [34,]  0.6765313 -1.1131655 -0.9189121 -0.119794723  1.0049611 -0.8859729 #>   [35,] -1.2883882 -0.7788911  1.2467610 -0.030139103  1.3915352  1.2858352 #>   [36,]  0.4866037  0.3814701  0.7853665  0.304840371  0.4603851  0.8256688 #>   [37,]  0.6599348  0.8421760 -0.9417831 -0.153739809  0.9475356  1.1024168 #>   [38,] -1.6155037 -1.4024217  0.9966062 -0.292491317  0.8141738  1.0374397 #>   [39,]  0.6008408  0.6599435 -1.0334208 -0.394470397  0.7587177  1.0085407 #>   [40,] -1.3970536 -0.9613500  1.1507351 -0.067976325  1.1486468 -0.8398035 #>   [41,]  0.7528653  1.1860968 -0.8266427 -0.040933490 -0.7724339 -0.8005195 #>   [42,]  0.6242735 -1.3718480 -0.9950182 -0.268608780 -1.2038108 -0.9561875 #>   [43,]  0.4042182  0.2355423  0.6536330  0.047303525  0.2966735 -1.4441844 #>   [44,] -1.1918074  1.5721079 -0.7425421 -0.013779026 -0.5975009 -0.7222863 #>   [45,]  0.5314034  0.4795981 -1.1669940  0.738350304  0.5671937  0.8976217 #>   [46,] -2.0027471  0.4079131  0.8056690  0.394961627  0.4893842 -1.1818707 #>   [47,]  0.4719926  0.3524084 -1.3122994  0.224430037 -2.3347715 -1.2466813 #>   [48,]  0.6038196  0.6684813  0.9724084 -0.375354098 -1.3026621  1.0132837 #>   [49,] -1.8892119  0.4747291 -1.1715377  0.709801045 -1.7795396 -1.1182122 #>   [50,]  0.6140552  0.6983354  0.9887226 -0.317040285  0.7988442  1.0295725 #>   [51,]  0.6607938  0.8450285  1.0631837 -0.151743972 -1.0521219 -0.9059791 #>   [52,] -1.8990333 -2.1350466 -1.1775658  0.673778953  0.5550827 -1.1237266 #>   [53,] -2.1754056  0.3290176  0.7423498  0.172114009  0.4023192 -1.2783284 #>   [54,]  0.5112051  0.4336456  0.8246578 -1.998838400  0.5174445 -1.1557737 #>   [55,]  0.3855853  0.2083517  0.6238030  0.029446115  0.2652931  0.6621143 #>   [56,]  0.5478131  0.5190487 -1.1323878 -0.997859135  0.6095662  0.9238982 #>   [57,] -1.2689530  1.3356148 -0.7901014 -0.025871671 -0.6932147  1.3045118 #>   [58,]  0.7764870  1.2852676 -0.8017476 -0.030013235  1.3929094 -0.7773973 #>   [59,]  0.8053987  1.4133853 -0.7732551 -0.020789273 -0.6583635  1.3317403 #>   [60,]  0.6934692  0.9579743 -0.8966938 -0.093447452 -0.9384473 -0.8654299 #>   [61,]  0.7108553  1.0216589 -0.8749833 -0.072869996  1.1299677 -0.8453359 #>   [62,]  0.5878436  0.6234770  0.9469390 -0.491374950  0.7204116  0.9878315 #>   [63,] -1.2413194 -0.7070744  1.2935454 -0.020738593 -0.6579846 -0.7507240 #>   [64,]  0.5486606  0.5211386 -1.1306563 -0.982483642  0.6118027  0.9252543 #>   [65,] -1.4328197  0.9740541  1.1222996 -0.087625534  1.0818796  1.1625370 #>   [66,]  0.3739431  0.1923927  0.6051572  0.021641426  0.2467080  0.6431329 #>   [67,]  0.5077280  0.4260208 -1.2208436  0.467143593 -1.9640740  0.8596371 #>   [68,]  0.5068812 -2.3575100 -1.2228625  0.459376136  0.5071363  0.8582768 #>   [69,]  0.4633826  0.3359419  0.7482609  0.186539288 -2.4388519 -1.2686474 #>   [70,]  0.4332023  0.2819941  0.7000068  0.094837478  0.3495626  0.7394520 #>   [71,]  0.7591664  1.2120723  1.2197336 -0.037646153 -0.7573321  1.2591056 #>   [72,]  0.7487316 -0.8552536  1.2031379 -0.043260987 -0.7825747  1.2426807 #>   [73,]  0.4356354  0.2861294  0.7038983  0.100325837  0.3542316  0.7433917 #>   [74,] -1.4752714  0.9028676  1.0903293 -0.117489346  1.0095774  1.1307762 #>   [75,]  0.6195162  0.7145930 -1.0025809 -0.290061803 -1.2258252  1.0382574 #>   [76,]  0.7134207  1.0312702  1.1469615 -0.070280346  1.1396522  1.1870117 #>   [77,]  0.6889733  0.9419152 -0.9024852 -0.099756312  1.0492971  1.1483869 #>   [78,]  0.6310302  0.7496281 -0.9844723 -0.241079492 -1.1734994  1.0565556 #>   [79,]  0.5236573 -2.1661983  0.8445380  0.637098940  0.5478026 -1.1296836 #>   [80,]  0.6944249 -1.0401390  1.1167293 -0.092163569 -0.9353903  1.1570060 #>   [81,]  0.6718065 -1.1336289 -0.9253086 -0.128531600  0.9884139 -0.8918833 #>   [82,]  0.3898832  0.2144419  0.6306848  0.032914101  0.2723517  0.6691139 #>   [83,] -1.5009370  0.8632858  1.0718734 -0.139713052  0.9691585  1.1124237 #>   [84,]  0.6319550  0.7524871  1.0172462 -0.237559001 -1.1694350  1.0580247 #>   [85,]  0.6250848 -1.3672251  1.0062994 -0.265127688  0.8332549 -0.9550102 #>   [86,]  0.4828474  0.3738633  0.7793655  0.282012058 -2.2123380 -1.2200765 #>   [87,] -1.5972038  0.7344823 -0.9921543 -0.260865505 -1.1955346 -0.9535494 #>   [88,]  0.6263054  0.7351264 -0.9918231 -0.259983321  0.8371144  1.0490489 #>   [89,]  0.6612902  0.8466793  1.0639742 -0.150603795  0.9521524 -0.9053339 #>   [90,]  0.6107939 -1.4519350 -1.0167511 -0.334460132 -1.2677003 -0.9761964 #>   [91,] -1.7343853  0.5928814 -1.0764645 -0.596843978  0.6881196  0.9698545 #>   [92,] -1.5325075 -1.2227642  1.0500149 -0.172202967  0.9225269 -0.9168670 #>   [93,]  0.5385367  0.4965117  0.8682870 -1.184595924  0.5853964  0.9090491 #>   [94,] -1.0389761 -0.4452492  1.5426662 -0.003471859 -0.4316653 -0.6341107 #>   [95,]  0.6065042  0.6762340  0.9766876 -0.358995628 -1.2890438 -0.9827456 #>   [96,] -1.0948539  1.9600320 -0.6827265 -0.005875979 -0.4887002 -0.6664216 #>   [97,]  0.6061175  0.6751139  0.9760712 -0.361302874 -1.2909929 -0.9833404 #>   [98,]  0.6955732  0.9655476  1.1185570 -0.090646654 -0.9317362 -0.8629460 #>   [99,] -1.3452952 -0.8714976 -0.8371365 -0.046523635  1.2561074  1.2341758 #>  [100,]  0.7567351 -0.8319408 -0.8224584 -0.038878866 -0.7631090  1.2552797 #>  [101,] -1.2238132 -0.6814470  1.3118591 -0.017981290 -0.6362137 -0.7406759 #>  [102,]  0.4531227  0.3169493  0.7318605  0.148970161  0.3888473 -1.2958841 #>  [103,]  0.9620564 -0.4457662 -0.6485149 -0.003487465 -0.4321221 -0.6343794 #>  [104,]  0.6705043  0.8776856 -0.9270873 -0.131061000 -1.0163826 -0.8935265 #>  [105,] -1.1663176  1.6629802 -0.7268210 -0.011089402 -0.5676697 -0.7076224 #>  [106,] -1.3071769 -0.8087599  1.2290221 -0.034856684 -0.7437053 -0.7884604 #>  [107,]  0.3685330  0.1852413  0.5964905  0.018694451  0.2383360  0.6343021 #>  [108,]  0.6688831  0.8721803 -0.9293114 -0.134286937  0.9782552  1.1165936 #>  [109,] -1.2107063  1.5091161  1.3259156 -0.016137996 -0.6201903  1.3639809 #>  [110,] -1.1692279  1.6522427 -0.7286162 -0.011370503 -0.5710311  1.4098457 #>  [111,]  0.6044463 -1.4919000 -1.0273191  2.692056734 -1.2994647 -0.9859196 #>  [112,]  0.6108163 -1.4517962  0.9835607 -0.334336606  0.7888987 -0.9761623 #>  [113,]  0.6177933  0.7094391  0.9946801 -0.298290168  0.8104128  1.0355178 #>  [114,] -1.3240534 -0.8361808 -0.8240521 -0.039650197 -0.7666528  1.2529526 #>  [115,] -1.0936757 -0.5087700 -0.6819993 -0.005812776 -0.4874553  1.5020850 #>  [116,] -1.4734048 -1.1039433 -0.9160055 -0.116004711  1.0126099  1.1321352 #>  [117,]  0.4258226  0.2696774 -1.4530605  0.079804571  0.3356199  0.7274960 #>  [118,]  0.7785782 -0.7726280 -0.7996161 -0.029213282 -0.7133622  1.2896300 #>  [119,] -0.9763456 -0.3788081 -0.6095387 -0.001859265 -0.3725465 -0.5977888 #>  [120,]  0.3904618  0.2152701  0.6316113  0.033408043  0.2733101  0.6700560 #>  [121,] -1.8852996  0.4772939  0.8553323  0.724735924  0.5647096 -1.1160151 #>  [122,] -1.6658104  0.6584247 -1.0343279 -0.397998313  0.7571261 -0.9923658 #>  [123,]  0.4762200  0.3606713  0.7687764  0.245458219  0.4374509 -1.2361796 #>  [124,]  0.4920899  0.3927498  0.7941302  0.341176223  0.4727763  0.8344977 #>  [125,]  0.6997506  0.9806922 -0.8887261 -0.085355588 -0.9186132 -0.8580579 #>  [126,]  0.4358573  0.2865083  0.7042531  0.100840198  0.3546591  0.7437509 #>  [127,]  0.6222261  0.7227461 -0.9982589 -0.277619902  0.8242557 -0.9591723 #>  [128,]  0.7683380  1.2505019 -0.8101638 -0.033368382 -0.7360908  1.2735326 #>  [129,]  0.6252015  0.7317633  1.0064853 -0.264631190  0.8336233  1.0472947 #>  [130,]  0.5315458  0.4799323  0.8571298  0.740340533 -1.7619471  0.8978500 #>  [131,]  0.4085403  0.2421447 -1.5138891  0.052636819  0.3042433  0.6994546 #>  [132,]  0.5071043  0.4246619  0.8181098  0.461411531 -1.9698014  0.8586353 #>  [133,]  0.5436864  0.5089469  0.8765049  0.928849586  0.5987443 -1.0901629 #>  [134,]  0.5723258  0.5815960  0.9221932  1.555554245 -1.4789145 -1.0383407 #>  [135,]  0.6785827 -1.1044399  1.0915095 -0.116206498  1.0121949 -0.8834317 #>  [136,]  0.5859742 -1.6172422  0.9439583 -0.507349841 -1.3986088  0.9848509 #>  [137,] -2.3115535  0.2809922  0.6990587  0.093541960  0.3484305  0.7384920 #>  [138,]  0.3849644  0.2074807 -1.6056295  0.028973258  0.2642821  0.6611026 #>  [139,] -2.3907823  0.2574257  0.6761246  0.066679875 -3.1085381  0.7152539 #>  [140,]  0.5156355 -2.2548842 -1.2023110 -1.832883258  0.5281311 -1.1463504 #>  [141,] -1.3280673  1.1865416 -0.8265247 -0.040874218 -0.7721699 -0.8004100 #>  [142,]  0.4882119  0.3847556  0.7879355  0.315112384 -2.1551831  0.8282574 #>  [143,]  0.5719392  0.5805756  0.9215767 -0.647235163 -1.4812835  0.9624580 #>  [144,]  0.8619411 -0.5931292 -0.7230303 -0.010516278  1.7837732  1.4202839 #>  [145,]  0.5376838  0.4944705  0.8669260  0.830837131  0.5832025  0.9076833 #>  [146,] -1.7281027  0.5985002  0.9323099 -0.575480011 -1.4407959  0.9731994 #>  [147,]  0.4402380  0.2940533  0.7112589  0.111495840  0.3631616  0.7508410 #>  [148,] -1.2862601 -0.7755515  1.2488028 -0.029642779 -0.7158219 -0.7764859 #>  [149,] -1.5345013 -1.2269034 -0.9535938 -0.174466607  0.9196898 -0.9179987 #>  [150,]  0.6459510  0.7965747 -0.9619610 -0.190640026 -1.1102970 -0.9257178 #>  [151,]  0.6177539  0.7093213  0.9946172 -0.298481638 -1.2341258  1.0354551 #>  [152,]  0.5604068 -1.8160801  0.9031819  1.259157390  0.6432872 -1.0592806 #>  [153,]  0.6881103 -1.0651310 -0.9036055 -0.101020133  1.0461861  1.1470222 #>  [154,] -2.0619330  0.3781740  0.7827754  0.294786774  0.4567581 -1.2149818 #>  [155,] -1.2282656  1.4536790 -0.7650219 -0.018649302 -0.6417107 -0.7432322 #>  [156,]  0.6736816  0.8885366  1.0837061 -0.124983131 -1.0050637  1.1241916 #>  [157,]  0.4417021  0.2966020  0.7136002  0.115276950  0.3660294  0.7532098 #>  [158,] -1.3423103  1.1540940 -0.8352980 -0.045497141 -0.7919321 -0.8085517 #>  [159,]  0.6115833  0.6910523 -1.0154520 -0.330148845  0.7912474 -0.9750008 #>  [160,]  0.7096734  1.0172498 -0.8764255 -0.074098138 -0.8884763 -0.8466714 #>  [161,] -1.8328532  0.5136098 -1.1369394 -1.039317874 -1.6563370 -1.0865400 #>  [162,] -2.5965584  0.2077061  0.6230662  0.029095061  0.2645437  0.6613646 #>  [163,]  0.4248152  0.2680222 -1.4564712  0.077928309  0.3337419  0.7258630 #>  [164,]  0.6475167 -1.2475004 -0.9596587 -0.186060152 -1.1039476 -0.9235941 #>  [165,]  0.9620564 -0.4457662 -0.6485149 -0.003487465 -0.4321221 -0.6343794 #>  [166,]  0.4210911  0.2619579  0.6806332  0.071332173  0.3268526 -1.3892269 #>  [167,]  0.5168761  0.4462605  0.8337122  0.558917986  0.5311462 -1.1437398 #>  [168,]  0.5906800  0.6313264 -1.0510149 -0.468182962 -1.3723570  0.9923528 #>  [169,]  0.6454320  0.7949119 -0.9627268 -0.192185681 -1.1124135 -0.9264241 #>  [170,]  0.5764038  0.5924289  0.9286970 -0.598607529 -1.4542473  0.9695843 #>  [171,]  0.6454948  0.7951130  1.0388163 -0.191997953 -1.1121572 -0.9263386 #>  [172,]  0.5780300  0.5967831  0.9312904 -0.581905287  0.6922457 -1.0286168 #>  [173,] -1.4809048 -1.1186087 -0.9206206 -0.122074330 -0.9994972 -0.8875518 #>  [174,] -1.0225135 -0.4271434 -0.6380611 -0.002957254 -0.4156376  1.6010898 #>  [175,]  0.4126363  0.2485056  0.6671052  0.058184565  0.3115191  0.7061060 #>  [176,]  0.3843144  0.2065715  0.6217679  0.028485671  0.2632263 -1.5150512 #>  [177,] -1.4612339  0.9255854 -0.9085158 -0.106731333 -0.9683314  1.1410796 #>  [178,] -1.2689428 -0.7487032 -0.7900952 -0.025869586 -0.6932015 -0.7665645 #>  [179,]  0.5217076  0.4571841 -1.1884593  0.613669934  0.5429832 -1.1336885 #>  [180,]  0.5518729  0.5291062 -1.1241422 -0.926531697  0.6203221  0.9303928 #>  [181,] -1.2790990  1.3082523 -0.7963541 -0.028026226  1.4155946 -0.7723840 #>  [182,]  0.6043882  0.6701189 -1.0274168 -0.371821870  0.7693725 -0.9860095 #>  [183,] -1.3916293  1.0507753  1.1551746 -0.065371352  1.1592815 -0.8367098 #>  [184,]  0.6644725 -1.1664384  1.0690421 -0.143513795  0.9630429 -0.9012199 #>  [185,] -1.2131960  1.5010795  1.3232222 -0.016474454 -0.6232159 -0.7345784 #>  [186,] -2.5965584  0.2077061  0.6230662  0.029095061  0.2645437  0.6613646 #>  [187,]  0.6124161 -1.4419597  0.9861103 -0.325667241  0.7938021  1.0269650 #>  [188,] -1.1079112 -0.5261622 -0.6907852 -0.006619071 -0.5026200 -0.6739596 #>  [189,]  0.6025505  0.6648355  0.9703854 -0.383371092  0.7638420 -0.9888623 #>  [190,]  0.5130465  0.4377174  0.8275980 -1.927935339  0.5218709  0.8681778 #>  [191,]  0.7464968  1.1601945 -0.8336227 -0.044579588  1.2688165 -0.8069973 #>  [192,] -1.0262747 -0.4312393 -0.6403842 -0.003068354 -0.4192686 -0.6267540 #>  [193,] -1.4454530 -1.0503311 -0.8988035 -0.095702760 -0.9437404 -0.8673814 #>  [194,]  0.4824266  0.3730169 -1.2842030  0.279552807  0.4510777  0.8189430 #>  [195,]  0.5900243 -1.5885457  0.9504160 -0.473434825  0.7267588  0.9913078 #>  [196,]  0.6633316 -1.1716603 -0.9370094 -0.146012596  0.9591302 -0.9026904 #>  [197,] -2.1538631  0.3376396  0.7496986  0.190208550 -2.4276732  0.7896927 #>  [198,]  0.8803116 -0.5614920 -0.7080942 -0.008508764 -0.5332900 -0.6901376 #>  [199,] -2.1220224  0.3509663  0.7608322  0.220901657 -2.3435136  0.8009300 #>  [200,] -1.5328509  0.8173431  1.0497821 -0.172590918 -1.0845547 -0.9170619 #>  [201,]  0.4763601  0.3609472  0.7690003  0.246184693  0.4377559  0.8091698 #>  [202,]  0.4199956  0.2601902  0.6788805  0.069489898  0.3248417  0.7180480 #>  [203,] -1.5831047  0.7516058  1.0167923  4.190459186  0.8542009 -0.9455619 #>  [204,]  0.7473588  1.1636797  1.2009544 -0.044065840 -0.7859844 -0.8061142 #>  [205,]  0.4538398 -3.1421372 -1.3642436  0.151355190  0.3903067 -1.2939414 #>  [206,]  0.9337163 -0.4817919 -0.6679950 -0.004709159 -0.4638407 -0.6526326 #>  [207,]  0.7471186 -0.8600611  1.2005724 -0.044208310 -0.7865830  1.2401408 #>  [208,] -1.4097267  1.0160726 -0.8768121 -0.074430441 -0.8894145  1.1805967 #>  [209,]  0.6273069  0.7381858  1.0098401 -0.255844121 -1.1900667 -0.9518005 #>  [210,]  0.4591521  0.3280284 -1.3486194  0.170122782  0.4012165 -1.2797341 #>  [211,] -1.6737116  0.6503761  0.9622937 -0.417372084 -1.3356730  1.0031792 #>  [212,]  0.5588617  0.5466990  0.9007170 -0.816515169  0.6390934  0.9415673 #>  [213,]  0.5846275  0.6146497  0.9418109  1.925996227 -1.4062530  0.9827034 #>  [214,] -1.4166230 -0.9967446  1.1349997 -0.078169696  1.1114121 -0.8509599 #>  [215,]  0.5989588  0.6545840 -1.0366348 -0.407098829  0.7530998  1.0055434 #>  [216,]  0.3849644  0.2074807 -1.6056295  0.028973258  0.2642821  0.6611026 #>  [217,] -1.2425229  1.4107205 -0.7738110 -0.020941445 -0.6594969 -0.7514146 #>  [218,]  0.4609300  0.3313399  0.7443408  0.176856209 -2.4697062  0.7842825 #>  [219,]  0.5982454 -1.5324274 -1.0378584 -0.412001283  0.7509767 -0.9956122 #>  [220,]  0.6512918  0.8138069 -0.9541528 -0.175507134  0.9184009  1.0887146 #>  [221,]  0.5226544  0.4593439 -1.1863281  0.624949545 -1.8337834 -1.1317399 #>  [222,] -1.6321970  0.6942516  0.9865168 -0.324308017  0.7945855 -0.9733584 #>  [223,]  0.6063256  0.6757166  0.9764030 -0.360058995 -1.2899433  1.0172732 #>  [224,]  0.4812475  0.3706519 -1.2873172  0.272765334 -2.2298014  0.8170439 #>  [225,]  0.3685330  0.1852413  0.5964905  0.018694451  0.2383360  0.6343021 #>  [226,]  0.6001137  0.6578698  0.9665010 -0.399297252 -1.3217993  1.0073828 #>  [227,]  0.7002549 -1.0177804 -0.8880927 -0.084740198 -0.9170469  1.1662193 #>  [228,]  0.8462505  1.6073576 -0.7362983 -0.012647464 -0.5855466 -0.7164639 #>  [229,]  0.6065177 -1.4786925  0.9767091 -0.358915317  0.7758098  1.0175789 #>  [230,] -1.1368769 -0.5626689 -0.7086590 -0.008577891  1.8715773 -0.6906652 #>  [231,]  0.7275672 -0.9214313 -0.8550877 -0.057700610 -0.8375804 -0.8269036 #>  [232,]  0.4726466 -2.8274226 -1.3105021  0.227573263  0.4297147 -1.2450447 #>  [233,]  0.7423979 -0.8743483 -0.8381783 -0.047114498 -0.7984834 -0.8112238 #>  [234,]  0.3997965  0.2289037  0.6465554  0.042355723  0.2890430 -1.4593336 #>  [235,] -1.7141615 -1.6360333 -1.0640395  1.884969485  0.7075076 -1.0196726 #>  [236,]  0.4387473  0.2914724 -1.4106858  0.107761375  0.3602554  0.7484288 #>  [237,] -1.0390434 -0.4453242 -0.6482699 -0.003474120 -0.4317315 -0.6341497 #>  [238,]  0.5238846  0.4621594  0.8449009  0.639882541  0.5483662  0.8855682 #>  [239,] -1.3613128 -0.8987254  1.1806353 -0.052396903 -0.8187484  1.2203946 #>  [240,]  0.4515055 -3.1845359  0.7292751  0.143715105  0.3855677  0.7690608 #>  [241,]  0.5176710  0.4480465 -1.1976316  0.567612213  0.5330834 -1.1420736 #>  [242,]  0.7303839  1.0962223 -0.8518237 -0.055504137 -0.8299488  1.2137720 #>  [243,]  0.4048043  0.2364311  0.6545711  0.047997033  0.2976936  0.6933849 #>  [244,] -1.2970111 -0.7925133  1.2385564 -0.032227652 -0.7300768 -0.7826419 #>  [245,]  0.6530942  0.8196736 -0.9515463 -0.170702297 -1.0817439 -0.9161093 #>  [246,] -1.2954086 -0.7899706 -0.8064041 -0.031829917  1.3737364 -0.7817245 #>  [247,]  0.7585541 -0.8267654 -0.8205062 -0.037952500 -0.7587810 -0.7948227 #>  [248,]  0.4552188  0.3207743 -1.3601529  0.156038599  0.3931220  0.7750602 #>  [249,]  0.5231291 -2.1718871  0.8436949  0.630674247  0.5464947 -1.1307656 #>  [250,]  0.4434719  0.2997007 -1.3958094  0.120001258  0.3695132  0.7560727 #>  [251,] -1.5074718  0.8535924 -0.9369664 -0.145944672 -1.0424969  1.1078482 #>  [252,]  0.6106773  0.6883943 -1.0169433 -0.335102243  0.7884732 -0.9763732 #>  [253,]  0.5381266  0.4955295  0.8676326 -1.193694869 -1.7113299 -1.1008458 #>  [254,]  0.7271508  1.0836542  1.1688081 -0.058033416 -0.8387173 -0.8273529 #>  [255,]  0.4042182  0.2355423  0.6536330  0.047303525  0.2966735 -1.4441844 #>  [256,] -1.6917070  0.6325465 -1.0502424 -0.464702534  0.7299568 -1.0069962 #>  [257,]  0.5271219  0.4696192  0.8500686  0.680728468  0.5564277 -1.1226380 #>  [258,]  0.4979604  0.4050446  0.8035068  0.384336379 -2.0565690  0.8439397 #>  [259,]  0.6459511  0.7965749 -0.9619610 -0.190639882  0.9006601 -0.9257177 #>  [260,]  0.7259104  1.0788563  1.1668347 -0.059037145 -0.8421162 -0.8286940 #>  [261,]  0.4999077  0.4091745  0.8066169  0.399702653  0.4907634  0.8470704 #>  [262,]  0.7297006  1.0935586 -0.8526133 -0.056028418 -0.8317911  1.2126947 #>  [263,]  0.4537403  0.3180733  0.7328478  0.151022084  0.3901039  0.7726717 #>  [264,] -1.3765597  1.0809367 -0.8563909 -0.058599242  1.1895716 -0.8281115 #>  [265,]  0.3739431  0.1923927  0.6051572  0.021641426  0.2467080  0.6431329 #>  [266,]  0.4421500  0.2973843 -1.3999398  0.116456493  0.3669093 -1.3263753 #>  [267,]  0.5437166 -1.9645583  0.8765531  0.929367272  0.5988229 -1.0901055 #>  [268,]  0.5515399  0.5282768 -1.1248139 -0.932165435  0.6194359 -1.0754305 #>  [269,] -1.0225135 -0.4271434 -0.6380611 -0.002957254 -0.4156376  1.6010898 #>  [270,]  0.5113363  0.4339349 -1.2123163  0.501581790 -1.9313999  0.8654319 #>  [271,]  0.4720572  0.3525338  0.7621245  0.224738739  0.4284463  0.8022338 #>  [272,]  0.5115104  0.4343190 -1.2119079  0.503299667  0.5181768  0.8657115 #>  [273,] -1.4692616 -1.0958928  1.0947435 -0.112769526  1.0193874  1.1351638 #>  [274,] -1.1957121 -0.6415197 -0.7449500 -0.014239253 -0.6021487 -0.7245312 #>  [275,]  0.5608125 -1.8126678 -1.1064040  1.268342185  0.6443909 -1.0585537 #>  [276,]  0.4712488  0.3509667  0.7608326  0.220902795  0.4267102 -1.2485480 #>  [277,]  0.6881996  0.9391684  1.1068197 -0.100888542  1.0465078 -0.8717154 #>  [278,]  0.6028521  0.6657010 -1.0300080 -0.381448494  0.7647483  1.0117435 #>  [279,] -1.2574844  1.3675074 -0.7830331 -0.023616743 -0.6784645 -0.7599959 #>  [280,]  0.5575821 -1.8400911  0.8986756  1.196840014  0.6356323 -1.0643712 #>  [281,]  0.4161536  0.2540489 -1.4864732  0.063362652  0.3178463  0.7118149 #>  [282,]  0.4998886  0.4091339  0.8065864 -2.502819439  0.4907190  0.8470397 #>  [283,]  0.4765640  0.3613488 -1.2998390  0.247245013  0.4381998  0.8094983 #>  [284,]  0.7890537 -0.7462489  1.2672539 -0.025543408 -0.6911301  1.3060861 #>  [285,] -2.1014186  0.3599808  0.7682156  0.243647209  0.4366875  0.8083783 #>  [286,] -2.0068701  0.4057384  0.8040307  0.386886671  0.4870058  0.8444670 #>  [287,] -1.5207153  0.8344050 -0.9451136 -0.159347189 -1.0643239  1.0986929 #>  [288,]  0.5769802  0.5939699  0.9296162  1.687398816  0.6892710 -1.0303924 #>  [289,]  0.7232421  1.0685787  1.1625892 -0.061261853 -0.8494950 -0.8315944 #>  [290,]  0.5012879  0.4121173  0.8088212  0.410926543  0.4939793  0.8492890 #>  [291,]  0.6754047  0.8944560  1.0864497 -0.121816955 -0.9989998 -0.8873748 #>  [292,] -1.2006834 -0.6484753 -0.7480156 -0.014845204 -0.6080963  1.3747807 #>  [293,] -1.5308862  0.8200723 -0.9513701 -0.170381799  0.9248430  1.0917665 #>  [294,] -2.0473052 -2.5958027  0.7883110  0.316639540  0.4645271  0.8286357 #>  [295,]  0.6881497 -1.0649727  1.1067402 -0.100962137  1.0463278 -0.8717754 #>  [296,]  0.3892313  0.2135112  0.6296411  0.032365511  0.2712742 -1.4968883 #>  [297,] -2.3558637  0.2674611 -1.4576341  0.077299662  0.3331050  0.7253079 #>  [298,]  0.6580807 -1.1961154 -0.9444094  6.323252520 -1.0624269 -0.9095224 #>  [299,] -1.5552262  0.7871288 -0.9663409 -0.199634009  0.8909208 -0.9297573 #>  [300,]  0.8257627 -0.6630597 -0.7543779 -0.016177574 -0.6205487 -0.7333177 #>  [301,]  0.4770180  0.3622442  0.7700514  0.249620856  0.4391893 -1.2342177 #>  [302,]  0.6890259 -1.0614561 -0.9024171 -0.099679879  1.0494868 -0.8707236 #>  [303,]  0.6010999  0.6606834  0.9680730 -0.392765937  0.7594930  1.0089533 #>  [304,] -1.3760669 -0.9242629 -0.8560874 -0.058388864 -0.8399260 -0.8278302 #>  [305,] -1.0805887 -0.4930971 -0.6739211 -0.005150740 -0.4737503  1.5193386 #>  [306,]  0.8921192 -0.5423795 -0.6988171 -0.007442936 -0.5167203  1.4674188 #>  [307,] -2.1422475  0.3424187  0.7537220  0.200825518  0.4172277  0.7937543 #>  [308,]  0.6456471  0.7956008  1.0390590 -0.191543452  0.8996562 -0.9261313 #>  [309,]  0.4740153 -2.8062508 -1.3067564  0.234280234  0.4326685  0.8053905 #>  [310,]  0.3849644  0.2074807 -1.6056295  0.028973258  0.2642821  0.6611026 #>  [311,]  0.4730115  0.3543892 -1.3095014  0.229344167  0.4305010  0.8037723 #>  [312,]  0.5476401  0.5186228 -1.1327418 -1.001029366  0.6091103  0.9236215 #>  [313,]  0.5053605  0.4208766  0.8153250  0.445719379 -1.9859418  0.8558337 #>  [314,]  0.6200682  0.7162490 -1.0016976 -0.287478744  0.8174998  1.0391350 #>  [315,]  0.4511583  0.3133902  0.7287199  0.142608764  0.3848656 -1.3012367 #>  [316,]  0.5095398  0.4299834  0.8219987  0.484159805  0.5134602  0.8625470 #>  [317,]  0.8040308  1.4071543  1.2910602 -0.021147284  1.5128134 -0.7521091 #>  [318,]  0.7140532  1.0336482 -0.8711045 -0.069657577 -0.8756206 -0.8417438 #>  [319,]  0.8233928 -0.6680316 -0.7565270 -0.016651415 -0.6247883  1.3599521 #>  [320,] -1.4880041  0.8829239  1.0810941 -0.128081557  0.9892320  1.1215944 #>  [321,]  0.9756933 -0.4297528 -0.6395426 -0.003027680 -0.4179511 -0.6259646 #>  [322,]  0.4430644  0.2989855  0.7157786  0.118898276  0.3687093 -1.3237783 #>  [323,]  0.6895599  0.9440009  1.1089851 -0.098907264 -0.9510997  1.1493144 #>  [324,]  0.6639739 -1.1687165  1.0682481 -0.144599953  0.9613319  1.1088172 #>  [325,] -1.5393788  0.8083646 -0.9565939 -0.180117507 -1.0955283 -0.9207667 #>  [326,]  0.5021142  0.4138855  0.8101409  0.417781824  0.4959106  0.8506172 #>  [327,] -2.0509975  0.3834373 -1.2707993  0.310960239  0.4625484  0.8272203 #>  [328,]  0.5669772 -1.7618845  0.9136624 -0.706436982  0.6612976  0.9545343 #>  [329,] -1.5902251  0.7428897  1.0122858 -0.249640351 -1.1831969 -0.9495963 #>  [330,] -1.0853518 -0.4987664 -0.6768614 -0.005383388  2.0889378 -0.6609332 #>  [331,]  0.6567287 -1.2025262 -0.9463338 -0.161447264  0.9366667  1.0973350 #>  [332,]  0.5409747  0.5023752 -1.1465554  0.883351406  0.5916939 -1.0953466 #>  [333,]  0.7556163 -0.8351463 -0.8236637 -0.039460960 -0.7657883 -0.7977542 #>  [334,]  0.6717192  0.8818251  1.0805815 -0.128699412  0.9881098 -0.8919932 #>  [335,] -1.2413304  1.4142457  1.2935340 -0.020740442 -0.6579985  1.3320362 #>  [336,]  0.5670092  0.5676575 -1.0944349 -0.706036243 -1.5119761  0.9545854 #>  [337,] -1.7131430  0.6121795 -1.0634137 -0.527354896  0.7085045 -1.0190978 #>  [338,]  0.7004020 -1.0172250  1.1262427 -0.084561625 -0.9165908  1.1664517 #>  [339,] -1.6073577  0.7224833  1.0016054 -0.278010301  0.8239826 -0.9592996 #>  [340,]  0.4126363  0.2485056  0.6671052  0.058184565  0.3115191  0.7061060 #>  [341,] -1.8901744  0.4741010 -1.1721284 -1.416071626  0.5612655  0.8938526 #>  [342,] -2.2446379  0.3032872  0.7196830  0.125646537  0.3735412  0.7593627 #>  [343,] -1.4497910 -1.0585439  1.1092950 -0.098627182  1.0521179  1.1496223 #>  [344,] -1.6084097  0.7212557 -0.9990440 -0.279843420 -1.2155005  1.0417803 #>  [345,]  0.4845538  0.3773071  0.7820916  0.292184040  0.4558038 -1.2160000 #>  [346,] -1.8120883  0.5290479  0.8895299  1.078834861  0.6202599  0.9303554 #>  [347,] -1.0389761 -0.4452492  1.5426662 -0.003471859 -0.4316653 -0.6341107 #>  [348,]  0.5426622  0.5064585  0.8748705  0.911422232  0.5960756  0.9156545 #>  [349,]  0.8394294 -0.6353647  1.3473092 -0.013718517 -0.5968810  1.3850682 #>  [350,] -0.9920616 -0.3948617 -0.6192495 -0.002182734 -0.3869095 -0.6069141 #>  [351,] -2.1502336 -2.9487834  0.7509511  0.193458152  0.4135661 -1.2642909 #>  [352,]  0.4720999  0.3526166  0.7621927  0.224942897  0.4285381  0.8023026 #>  [353,] -2.2600756  0.2979320  0.7148171  0.117287438  0.3675250  0.7544409 #>  [354,]  0.5860047  0.6184202 -1.0593143 -0.507084660  0.7150844  0.9848995 #>  [355,] -1.6097559 -1.3894892  1.0001284 -0.282204963 -1.2179119 -0.9606574 #>  [356,] -1.2704581  1.3315059  1.2641761 -0.026181569  1.4385092 -0.7674329 #>  [357,]  0.4209628 -3.8204325 -1.4696635  0.071114131  0.3266167  0.7196167 #>  [358,]  0.5843091  0.6137801  0.9413033 -0.522060207 -1.4080687 -1.0181270 #>  [359,]  0.6728944  0.8858407 -0.9238278 -0.126459447 -1.0078511 -0.8905152 #>  [360,]  0.5077280  0.4260208 -1.2208436  0.467143593 -1.9640740  0.8596371 #>  [361,]  0.5069027  0.4242230  0.8177877  0.459571461  0.5071872 -1.1650785 #>  [362,]  0.3685330  0.1852413  0.5964905  0.018694451  0.2383360  0.6343021 #>  [363,] -1.1306397 -0.5546804 -0.7048106 -0.008116752 -0.5273905 -0.6870699 #>  [364,]  0.6434126 -1.2682891 -0.9657175 -0.198331004 -1.1207021 -0.9291824 #>  [365,] -1.5421887 -1.2429433 -0.9583222 -0.183447309 -1.1002715  1.0841740 #>  [366,]  0.6151312 -1.4254751 -1.0096548 -0.311513647  0.8021644 -0.9696650 #>  [367,]  0.6800663  0.9105909  1.0938716 -0.113684981 -0.9828537  1.1342973 #>  [368,]  0.6425803  0.7858155 -0.9669556 -0.200926431  0.8895659  1.0748942 #>  [369,]  0.4839262  0.3760381  0.7810889  0.288404761  0.4544064 -1.2174962 #>  [370,]  0.8471977  1.6120379  1.3596498 -0.012506152 -0.5839970 -0.7157040 #>  [371,]  0.6184281  0.7113353 -1.0043269 -0.295229027  0.8123868 -0.9647600 #>  [372,]  0.5165579 -2.2444329  0.8332043  0.555471943 -1.8854689 -1.1444081 #>  [373,]  0.4911951  0.3908963 -1.2615098  0.334996005  0.4707424 -1.2003965 #>  [374,]  0.6551657 -1.2099971  1.0542202 -0.165357970  0.9313943 -0.9133611 #>  [375,]  0.7427922 -0.8731425 -0.8377379 -0.046863906  1.2539504  1.2333266 #>  [376,]  0.5657735  0.5644475  0.9117425 -0.721679280  0.6579766 -1.0497457 #>  [377,]  0.5242028  0.4628894  0.8454088 -1.553283875  0.5491555 -1.1285682 #>  [378,] -1.5929384 -1.3520728 -0.9895317 -0.253951900  0.8417615  1.0513773 #>  [379,]  0.8002311 -0.7194580  1.2850210 -0.022177796 -0.6684796  1.3236325 #>  [380,]  0.4425688  0.2981171  0.7149862  0.117569345  0.3677332  0.7546120 #>  [381,]  0.4421500  0.2973843 -1.3999398  0.116456493  0.3669093 -1.3263753 #>  [382,]  0.7162584  1.0419658  1.1514769 -0.067533205  1.1504199  1.1914905 #>  [383,]  0.6285674 -1.3476225  1.0118487 -0.250736921 -1.1844206  1.0526433 #>  [384,] -1.0244362 -0.4292342  1.5643366 -0.003013585 -0.4174914 -0.6256887 #>  [385,] -1.7886719  0.5472391  0.9010557 -0.813405679  0.6396688  0.9419067 #>  [386,]  0.4365257  0.2876517  0.7053221  0.102404340  0.3559489 -1.3425830 #>  [387,]  0.8995175 -0.5308608  1.4427352 -0.006850427 -0.5067091 -0.6761501 #>  [388,] -1.3644626 -0.9041403  1.1779377 -0.053627464  1.2147078  1.2177217 #>  [389,]  0.7331849 -0.9031930 -0.8486025 -0.053410657  1.2158689  1.2181877 #>  [390,]  0.6727054 -1.1296959  1.0821518 -0.126816882 -1.0085222  1.1226461 #>  [391,] -1.0407682 -0.4472481 -0.6493351 -0.003532482 -0.4334312 -0.6351484 #>  [392,]  0.5458175  0.5141484  0.8799055  0.966074933  0.6043189 -1.0861243 #>  [393,]  0.8322794 -0.6496498 -0.7485312 -0.014949377 -0.6091000 -0.7278693 #>  [394,]  0.6029311  0.6659277  0.9709921 -0.380946895  0.7649857 -0.9882700 #>  [395,]  0.5125127  0.4365345  0.8267456  0.513293910  0.5205854 -1.1529760 #>  [396,]  0.6402859  0.7785433 -0.9703852 -0.208276804 -1.1337101 -0.9334866 #>  [397,] -2.5965584  0.2077061  0.6230662  0.029095061  0.2645437  0.6613646 #>  [398,] -1.6059139 -1.3808859 -0.9975095 -0.275512224 -1.2110371  1.0433163 #>  [399,]  0.7337297  1.1093227 -0.8479789 -0.053013654 -0.8210112 -0.8203133 #>  [400,]  0.4760843  0.3604042 -1.3011353  0.244756670  0.4371557  0.8087253 #>  [401,]  0.6958000  0.9663661  1.1189180 -0.090350324 -0.9310170 -0.8626792 #>  [402,]  0.3843144  0.2065715  0.6217679  0.028485671  0.2632263 -1.5150512 #>  [403,]  0.6034037 -1.4986095 -1.0290761  2.645777028  0.7664068  1.0126216 #>  [404,]  0.4900159  0.3884618 -1.2645147  0.327004918  0.4680695  0.8311606 #>  [405,]  0.6259200  0.7339513  1.0076302 -0.261595565 -1.1963229  1.0484366 #>  [406,]  0.9222298 -0.4975450 -0.6762297 -0.005332619 -0.4776436 -0.6603420 #>  [407,] -1.0407682 -0.4472481 -0.6493351 -0.003532482 -0.4334312 -0.6351484 #>  [408,] -1.6389009 -1.4558276  0.9825226  2.959116986  0.7869074 -0.9771508 #>  [409,]  0.5310697  0.4788157 -1.1677199  0.733706136 -1.7656917 -1.1147192 #>  [410,] -1.2266244 -0.6855232  1.3088832 -0.018400508  1.5632786 -0.7422900 #>  [411,]  0.3739431  0.1923927  0.6051572  0.021641426  0.2467080  0.6431329 #>  [412,]  0.6608027  0.8450580 -0.9405587 -0.151723472  0.9504905  1.1037923 #>  [413,]  0.7827798  1.3125170 -0.7953678 -0.027675954 -0.7043247 -0.7714670 #>  [414,] -1.2130871 -0.6660317 -0.7556638 -0.016459597 -0.6230833 -0.7345158 #>  [415,] -1.2285001  1.4529580  1.3069052 -0.018685091 -0.6420009  1.3452309 #>  [416,]  0.5802823  0.6028461 -1.0696536 -0.559612755 -1.4313263  0.9757728 #>  [417,]  0.5802256  0.6026930  0.9347917 -0.560162244  0.6984910  0.9756824 #>  [418,]  0.8161156 -0.6836250 -0.7632038 -0.018204398 -0.6380667 -0.7415391 #>  [419,] -1.3758964 -0.9239652 -0.8559824 -0.058316224  1.1909306  1.2081192 #>  [420,]  0.5183190  0.4495058 -1.1961495  0.574789491  0.5346655  0.8766402 #>  [421,]  0.6060999  0.6750630  0.9760432 -0.361407979 -1.2910815 -0.9833674 #>  [422,]  0.4258226  0.2696774 -1.4530605  0.079804571  0.3356199  0.7274960 #>  [423,]  0.4587810  0.3273396 -1.3496993  0.168746578  0.4004487  0.7808130 #>  [424,]  0.5084772  0.4276565 -1.2190633  0.474113079  0.5109272  0.8608404 #>  [425,] -1.5644908 -1.2902048  1.0287658 -0.211906121  0.8784732  1.0695061 #>  [426,]  0.6177643  0.7093525  0.9946339  3.350859333  0.8103226 -0.9657434 #>  [427,]  0.6702276  0.8767442  1.0782063 -0.131605667 -1.0173773  1.1187227 #>  [428,]  0.5127406 -2.2881235  0.8271095 -1.939519552  0.5211341  0.8676867 #>  [429,] -2.2950735  0.2862668  0.7040270  0.100512093  0.3543866  0.7435220 #>  [430,] -1.9596598  0.4316367 -1.2147703  0.491393503 -1.9407704  0.8637561 #>  [431,] -1.2868223 -0.7764328 -0.8011134 -0.029773159 -0.7165633 -0.7768078 #>  [432,]  0.8462505  1.6073576 -0.7362983 -0.012647464 -0.5855466 -0.7164639 #>  [433,]  0.5840778  0.6131487 -1.0627733 -0.524140591  0.7095268 -1.0185095 #>  [434,]  0.4870290 -2.6154927  0.7860458  0.307526658  0.4613388  0.8263533 #>  [435,]  0.4464994  0.3050478 -1.3864413  0.128488690  0.3755170 -1.3141145 #>  [436,] -1.1233340 -0.5454126 -0.7003027 -0.007605075  1.9254718  1.4644350 #>  [437,]  0.5511767  0.5273732 -1.1255474 -0.938352876 -1.6168930  0.9292793 #>  [438,] -1.6838445 -1.5618844 -1.0454108 -0.443458936  0.7380571  0.9974511 #>  [439,]  0.4424451  0.2979004  0.7147883  0.117239442  0.3674896  0.7544117 #>  [440,] -1.5513825  0.7922078  1.0373693 -0.194733162  0.8961588 -0.9275771 #>  [441,]  0.6157634  0.7033962 -1.0086287 -0.308315714 -1.2435971 -0.9687204 #>  [442,]  0.7401341  1.1346661 -0.8407158 -0.048582176 -0.8042812 -0.8135776 #>  [443,] -1.5687678 -1.2993929 -0.9746688 -0.217797561 -1.1457248  1.0667395 #>  [444,]  0.7541787 -0.8392905  1.2118014 -0.040223065  1.2999659 -0.7991968 #>  [445,]  0.4291875  0.2752515 -1.4417838  0.086370155  0.3419367  0.7329489 #>  [446,] -2.4191131  0.2496629  0.6682866  0.059238741  0.3128411  0.7073046 #>  [447,]  0.6070742 -1.4751720 -1.0229173 -0.355624347 -1.2861785 -0.9818702 #>  [448,] -1.4041281 -0.9740546  1.1449962 -0.071514123 -0.8810695 -0.8438376 #>  [449,] -1.1572134 -0.5892056  1.3865680 -0.010249984 -0.5572285  1.4237288 #>  [450,]  0.5387359 -2.0121162 -1.1512714 -1.180203527  0.5859095 -1.0996646 #>  [451,]  0.7388921 -0.8851720 -0.8421145 -0.049408643  1.2384095  1.2271822 #>  [452,]  0.4237759  0.2663213  0.6849284  0.076034448  0.3318110  0.7241783 #>  [453,]  0.7194089  1.0539203 -0.8646854 -0.064620722  1.1624434  1.1964620 #>  [454,]  0.5376028 -2.0231576 -1.1536731  0.829580770 -1.7152823  0.9075536 #>  [455,]  0.3685330  0.1852413  0.5964905  0.018694451  0.2383360  0.6343021 #>  [456,]  0.7884057 -0.7478442 -0.7897498 -0.025755067 -0.6924765  1.3050685 #>  [457,]  0.6431003 -1.2698904  1.0350021 -0.199300408 -1.1219916  1.0757195 #>  [458,]  0.6741737 -1.1233118 -0.9220927 -0.124069724  0.9966846 -0.8889120 #>  [459,]  0.4988922  0.4070178 -1.2422435  0.391622126 -2.0474805  0.8454379 #>  [460,]  0.7062675 -0.9954121  1.1355780 -0.077766618  1.1127681  1.1757174 #>  [461,] -1.7284058 -1.6716051  0.9321480  1.734620863 -1.4413947  0.9730374 #>  [462,]  0.6208469  0.7185894 -1.0004540 -0.283877387 -1.2196103  1.0403730 #>  [463,]  0.8724245 -0.5747815 -0.7144301 -0.009313783 -0.5447820  1.4366672 #>  [464,] -1.4658903  0.9179627 -0.9113813 -0.110197270  1.0249500 -0.8790123 #>  [465,] -2.0770956  0.3710403  0.7771192  0.273871608  0.4488987 -1.2234566 #>  [466,] -2.3959949  0.2559726  0.6746686  0.065237015  0.3200391  0.7137776 #>  [467,] -1.3031471 -0.8022954 -0.8111722 -0.033792268  1.3544896 -0.7861542 #>  [468,] -1.4852818 -1.1272225 -0.9233138 -0.125747250  0.9935326  1.1235446 #>  [469,]  0.4452633  0.3028577 -1.3902508  0.124960215  0.3730590 -1.3175753 #>  [470,] -1.3375980  1.1646919 -0.8323954 -0.043918028 -0.7853618 -0.8058585 #>  [471,] -1.0389761 -0.4452492  1.5426662 -0.003471859 -0.4316653 -0.6341107 #>  [472,] -1.2104996  1.5097861 -0.7540684 -0.016110340 -0.6199395 -0.7330293 #>  [473,] -1.1681112 -0.6037367 -0.7279274 -0.011261899 -0.5697400 -0.7086548 #>  [474,]  0.5775033  0.5953707 -1.0747483 -0.587258217  0.6907523 -1.0295069 #>  [475,]  0.5941279 -1.5601845  0.9569585  2.264509494 -1.3535646  0.9978476 #>  [476,] -1.7859473  0.5494117  0.9024164 -0.801045308  0.6419830  0.9432699 #>  [477,]  0.6538681 -1.2162480  1.0521537 -0.168683648 -1.0787132  1.0928000 #>  [478,]  0.5285677 -2.1142787 -1.1731907  0.699716938  0.5600499  0.8930769 #>  [479,]  0.6197266 -1.3981635 -1.0022441 -0.289074291 -1.2248397 -0.9628421 #>  [480,]  0.4583601  0.3265596  0.7402330  0.167197923  0.3995789 -1.2818321 #>  [481,]  0.7488768 -0.8548227  1.2033688 -0.043176805  1.2784204 -0.8045639 #>  [482,]  0.5999245  0.6573307 -1.0349831 -0.400564234  0.7559795 -0.9929683 #>  [483,]  0.7734374  1.2721883  1.2424265 -0.031223334 -0.7246458  1.2815500 #>  [484,]  0.5685236  0.5716066  0.9161290 -0.687371633  0.6655785  0.9570041 #>  [485,]  0.5851907  0.6161898 -1.0607728 -0.514214583  0.7127334  0.9836015 #>  [486,]  0.8908807 -0.5443415 -0.6997786 -0.007547521 -0.5184236 -0.6823674 #>  [487,]  0.6127418 -1.4399682  0.9866294 -0.323932554 -1.2581741 -0.9732519 #>  [488,]  0.4540825  0.3186974 -1.3635217  0.152170310  0.3908014  0.7732247 #>  [489,]  0.5360671  0.4906152 -1.1569445  0.806082097 -1.7269463 -1.1048579 #>  [490,]  0.5718040  0.5802189 -1.0853508 -0.648774012  0.6747122 -1.0392395 #>  [491,] -1.2445605  1.4047252  1.2902110 -0.021288953  1.5104330 -0.7525835 #>  [492,]  0.4893683  0.3871289  0.7897828  0.322690238  0.4666055 -1.2046473 #>  [493,]  0.5657392  0.5643586 -1.0968667 -0.722118904  0.6578821 -1.0498061 #>  [494,]  0.7070200 -0.9926610 -0.8796812 -0.076939338  1.1155785 -0.8496858 #>  [495,]  0.4317498  0.2795431  0.6976836  0.091691506  0.3467924 -1.3566687 #>  [496,]  0.7335896  1.1087721 -0.8481392 -0.053115461 -0.8213828 -0.8204619 #>  [497,]  0.5842297  0.6135632 -1.0624998 -0.522773592  0.7099639 -1.0182583 #>  [498,]  0.4718041  0.3520426 -1.3128184  0.223531219 -2.3369823 -1.2471539 #>  [499,]  0.4998949  0.4091474 -1.2397772  0.399600116  0.4907337 -1.1805680 #>  [500,]  0.6646350  0.8578556  1.0693008 -0.143161787  0.9636008 -0.9010108 #>  [501,]  0.6999297 -1.0190100  1.1254910 -0.085136513 -0.9180566 -0.8578496 #>  [502,]  0.5928058 -1.5692452 -1.0472843 -0.451590043  0.7349011  0.9957407 #>  [503,] -2.0033186  0.4076107  0.8054415  0.393831319 -2.0447659  0.8458873 #>  [504,]  0.6234766 -1.3764105  1.0037367 -0.272077557  0.8281852  1.0445532 #>  [505,]  0.4949300 -2.5083466  0.7986668  0.361479657  0.4792661 -1.1918007 #>  [506,]  0.6140312  0.6982646 -1.0114451 -0.317164513  0.7987704 -0.9713129 #>  [507,]  0.7175167  1.0467305 -0.8669423 -0.066352974  1.1552136  1.1934763 #>  [508,]  0.5593638  0.5479766  0.9015179 -0.809183316  0.6404544  0.9423698 #>  [509,] -1.1351207  1.7844001 -0.7075754 -0.008445719 -0.5323555 -0.6896530 #>  [510,]  0.5359744  0.4903949 -1.1571423  0.804684319 -1.7276533 -1.1050391 #>  [511,]  0.5089951  0.4287896 -1.2178356  0.478985754  0.5121608  0.8616722 #>  [512,] -1.5893568  0.7439451  1.0128332 -0.248274490  0.8462622  1.0536250 #>  [513,]  0.8335756  1.5455298 -0.7473791 -0.014717516 -0.6068587 -0.7267955 #>  [514,]  0.6952275  0.9643006 -0.8944490 -0.091100505  1.0720017  1.1582745 #>  [515,]  0.4667877  0.3423962  0.7537032  0.200774514 -2.3969164 -1.2598659 #>  [516,] -1.2953488 -0.7898759 -0.8063673 -0.031815161  1.3738866  1.2792792 #>  [517,] -0.9763456 -0.3788081 -0.6095387 -0.001859265 -0.3725465 -0.5977888 #>  [518,]  0.5113260  0.4339123  0.8248509  0.501480898 -1.9314915 -1.1555143 #>  [519,]  0.6836331  0.9230563  1.0995501 -0.107865861  1.0301322  1.1399405 #>  [520,]  0.6674038  0.8671753  1.0737099 -0.137306921  0.9731374 -0.8974643 #>  [521,] -1.1541818 -0.5852019 -0.7193350 -0.009983438 -0.5537764  1.4272764 #>  [522,]  0.5582904 -1.8340288 -1.1113511  1.212200560  0.6375469 -1.0630899 #>  [523,]  0.4737871  0.3559014  0.7648887  0.233149378  0.4321750  0.8050226 #>  [524,]  0.6253989  0.7323642  1.0067999 -0.263793116  0.8342472  1.0476085 #>  [525,] -1.2692219  1.3348795 -0.7902671 -0.025926788  1.4418307 -0.7667244 #>  [526,]  0.4914811  0.3914883 -1.2607831  0.336960618  0.4713920  0.8335183 #>  [527,] -1.5231034 -1.2033569  1.0564318 -0.161878632 -1.0682877 -0.9115284 #>  [528,]  0.5987456  0.6539785 -1.0370002 -0.408557261  0.7524649  1.0052038 #>  [529,]  0.6867105 -1.0707836 -0.9054287 -0.103107666  1.0411515  1.1448084 #>  [530,] -1.7922648  0.5443922 -1.1120158  1.204867269  0.6366352 -1.0636994 #>  [531,]  0.7753759 -0.7809493 -0.8028848 -0.030448043  1.3881923 -0.7784541 #>  [532,]  0.5090630 -2.3313370  0.8212374  0.479628625  0.5123228 -1.1603872 #>  [533,]  0.5031658  0.4161423  0.8118203  0.426654241  0.4983745 -1.1732858 #>  [534,]  0.6432815  0.7880462  1.0352907 -0.198737407  0.8918671  1.0760069 #>  [535,]  0.4793461  0.3668575  0.7737713  0.262131769  0.4442842  0.8139810 #>  [536,]  0.4456701  0.3035774  0.7199452  0.126111754  0.3738669  0.7596278 #>  [537,]  0.4954478  0.3997539 -1.2507914  0.365296096  0.4804547 -1.1906190 #>  [538,] -2.2934705  0.2867871 -1.4194181  0.101219939  0.3549737 -1.3440590 #>  [539,]  0.9756933 -0.4297528 -0.6395426 -0.003027680 -0.4179511 -0.6259646 #>  [540,] -1.1494599 -0.5789994 -0.7164221 -0.009580695 -0.5484244 -0.6979155 #>  [541,]  0.8333029 -0.6475778  1.3375758 -0.014765959 -0.6073292 -0.7270211 #>  [542,] -1.6153209  0.7132621  0.9967179 -0.292158990  0.8143921 -0.9638079 #>  [543,]  0.3985934  0.2271176  0.6446296  0.041092747  0.2869867  0.6832878 #>  [544,]  0.4660821  0.3410527 -1.3287702  0.197747163 -2.4055206 -1.2616751 #>  [545,]  0.5556146  0.5384812  0.8955369  1.155091423  0.6303318  0.9363764 #>  [546,]  0.4700973  0.3487420  0.7589924  0.215540330  0.4242442 -1.2514494 #>  [547,]  0.6088853  0.6831563  0.9804829 -0.345140966  0.7830033  1.0213471 #>  [548,]  0.5539954  0.5344118 -1.1198790 -0.891486451  0.6259889 -1.0709077 #>  [549,]  0.5492396  0.5225691  0.8853658 -0.972130719  0.6133332  0.9261805 #>  [550,]  0.7143809 -0.9662939  1.1484895 -0.069337245  1.1432893  1.1885273 #>  [551,]  0.5884609  0.6251801 -1.0549378 -0.486222177  0.7222050 -1.0113110 #>  [552,]  0.5808202 -1.6548082 -1.0686731  1.803657396 -1.4281882 -1.0239283 #>  [553,] -2.3713053  0.2629576  0.6816212  0.072389957  0.3279893  0.7208263 #>  [554,] -1.2608789 -0.7363993  1.2736821 -0.024264970 -0.6828112  1.3124356 #>  [555,]  0.9756933 -0.4297528 -0.6395426 -0.003027680 -0.4179511 -0.6259646 #>  [556,]  0.5118664  0.4351052  0.8257137  0.506829763  0.5190317 -1.1543570 #>  [557,] -1.4487905 -1.0566463  1.1100532 -0.097945685  1.0538399  1.1503755 #>  [558,]  0.6984572  0.9759877 -0.8903551 -0.086956561 -0.9226481 -0.8595652 #>  [559,]  0.4626423  0.3345488 -1.3385488  0.183567518  0.4084789  0.7870463 #>  [560,]  0.7378302  1.1255085 -0.8433142 -0.050127613 -0.8102433  1.2255089 #>  [561,] -1.5047725 -1.1660746  1.0691691 -0.143340911  0.9633167  1.1097335 #>  [562,]  0.4789572  0.3660843  0.7731499  0.260003334  0.4434307 -1.2294763 #>  [563,] -1.8997543  0.4679120  0.8488904  0.671214799 -1.8031542  0.8895758 #>  [564,]  0.4725425  0.3534766  0.7629000  0.227070351  0.4294905 -1.2453048 #>  [565,] -1.4773238  0.8996110 -0.9184171 -0.119141492 -0.9937810  1.1292858 #>  [566,]  0.8325707 -0.6490591 -0.7482719 -0.014896916 -0.6085952 -0.7276277 #>  [567,] -1.2347722 -0.6974218  1.3003341 -0.019665738  1.5389518 -0.7469670 #>  [568,]  0.7358590  1.1177095 -0.8455502 -0.051492859  1.2264002 -0.8180612 #>  [569,]  0.4361089  0.2869384 -1.4191330  0.101426495  0.3551444 -1.3438002 #>  [570,]  0.5588477  0.5466635  0.9006947 -0.816720424 -1.5648093 -1.0620842 #>  [571,] -1.6642346  0.6600463 -1.0333595 -0.394232934  0.7588255  1.0085981 #>  [572,] -1.8249391  0.5194192  0.8833297 -0.995111454  0.6099627  0.9241389 #>  [573,]  0.7077203  1.0099891  1.1378901 -0.076177946  1.1181982 -0.8488880 #>  [574,]  0.7734236  1.2721293  1.2424045 -0.031228932 -0.7246765 -0.7803183 #>  [575,]  0.3849644  0.2074807 -1.6056295  0.028973258  0.2642821  0.6611026 #>  [576,]  0.6769897 -1.1112074  1.0889733 -0.118982447  1.0065750 -0.8854037 #>  [577,]  0.7102136 -0.9811006 -0.8757658 -0.073534044  1.1275528 -0.8460605 #>  [578,]  0.8546985 -0.6062817 -0.7290944 -0.011446470 -0.5719285  1.4089593 #>  [579,] -1.3634033 -0.9023170 -0.8482890 -0.053210755 -0.8217301  1.2186193 #>  [580,] -1.5625823  0.7775336 -0.9708649 -0.209323975  0.8810170 -0.9339289 #>  [581,]  0.6382520  0.7721316 -0.9734459 -0.215040257 -1.1422872 -0.9363085 #>  [582,]  0.9367461 -0.4777520 -0.6658564 -0.004558389 -0.4602946  1.5369722 #>  [583,]  0.4542680  0.3190359 -1.3629706  0.152795852  0.3911797  0.7735243 #>  [584,]  0.4323365 -3.5646620  0.6986220  0.092950718  0.3479098 -1.3549220 #>  [585,]  0.5188598  0.4507257 -1.1949156  0.580841476  0.5359879 -1.1395910 #>  [586,] -1.1046999 -0.5222073 -0.6888034 -0.006428868 -0.4991756  1.4878603 #>  [587,]  0.5441578  0.5100947  0.8772571  0.936970762  0.5999748  0.9180486 #>  [588,] -1.5173650  0.8392020 -0.9430527 -0.155855965  0.9444854  1.1009943 #>  [589,]  0.5683157  0.5710635  0.9157974  1.449482592 -1.5037548 -1.0452903 #>  [590,] -2.5965584  0.2077061  0.6230662  0.029095061  0.2645437  0.6613646 #>  [591,] -1.3312091  1.1792766  1.2070588 -0.041855933  1.2878228  1.2465621 #>  [592,]  0.7012838  0.9862871  1.1276463 -0.083499600 -0.9138627  1.1678450 #>  [593,]  0.7185617 -0.9517486  1.1551421 -0.065390025  1.1592034 -0.8367323 #>  [594,] -1.6175153  0.7107497  0.9953794 -0.296170250  0.8117772 -0.9650501 #>  [595,]  0.8908596 -0.5443750  1.4289898 -0.007549317 -0.5184527 -0.6823828 #>  [596,]  0.8454159 -0.6237368  1.3568193 -0.012773441 -0.5869170 -0.7171350 #>  [597,] -1.9937328  0.4127242  0.8092745  0.413269852  0.4946422  0.8497453 #>  [598,]  0.5488640  0.5216408  0.8847665 -0.978833365  0.6123400 -1.0804041 #>  [599,] -1.2240454 -0.6817831  1.3116129 -0.018015584  1.5710927 -0.7408092 #>  [600,]  0.5607739 -1.8129917  0.9037675 -0.788975353  0.6442859  0.9446236 #>  [601,]  0.9125987 -0.5113084 -0.6832931 -0.005925655 -0.4896714 -0.6669518 #>  [602,]  0.6851855 -1.0769891 -0.9074233 -0.105436062  1.0356824 -0.8753530 #>  [603,]  0.5462605 -1.9408671 -1.1355735  0.973978887  0.6054814  0.9214138 #>  [604,] -1.6674722  0.6567205  0.9658577 -0.402004511  0.7553398 -0.9933050 #>  [605,]  0.5829112  0.6099707 -1.0648785 -0.534772885  0.7061742  0.9799663 #>  [606,]  0.7396463 -0.8828279 -0.8412645 -0.048904917  1.2414061 -0.8140866 #>  [607,]  0.4166482  0.2548345  0.6735247  0.064123231  0.3187420  0.7126175 #>  [608,] -1.1190724 -0.5400508 -0.6976730 -0.007320204 -0.5146979 -0.6803993 #>  [609,]  0.6642022  0.8564042  1.0686115 -0.144101677  0.9621148  1.1091788 #>  [610,]  0.7021171  0.9893361  1.1289725 -0.082509538 -0.9112954 -0.8553138 #>  [611,]  0.5925880  0.6366407 -1.0476652 -0.453259768 -1.3619121 -1.0046276 #>  [612,]  0.6130380 -1.4381602 -1.0130670 -0.322363640  0.7957132  1.0279545 #>  [613,]  0.3985934  0.2271176  0.6446296  0.041092747  0.2869867  0.6832878 #>  [614,] -1.2105966 -0.6624835 -0.7541282 -0.016123315 -0.6200572  1.3640982 #>  [615,]  0.5899686 -1.5889356 -1.0522692 -0.473884078  0.7265963 -1.0088588 #>  [616,] -0.9763456 -0.3788081 -0.6095387 -0.001859265 -0.3725465 -0.5977888 #>  [617,]  0.6114176 -1.4480884 -1.0157245 -0.331048964  0.7907395  1.0253764 #>  [618,]  0.5460364  0.5146845  0.8802548  0.969973562  0.6048932 -1.0857112 #>  [619,]  0.7833109  1.3148327 -0.7948340 -0.027488062 -0.7031940 -0.7709708 #>  [620,]  0.5106738  0.4324752  0.8238095 -2.019823226  0.5161715  0.8643682 #>  [621,]  0.5690177  0.5728988  0.9169171  1.467567496  0.6669496 -1.0440668 #>  [622,] -2.2645333  0.2964100  0.7134243  0.114988899  0.3658135 -1.3279651 #>  [623,]  0.9008325 -0.5288488 -0.6921263 -0.006750640 -0.5049586  1.4810127 #>  [624,]  0.9021021 -0.5269165  1.4468384 -0.006655817 -0.5032767  1.4829929 #>  [625,] -1.2130871 -0.6660317 -0.7556638 -0.016459597 -0.6230833 -0.7345158 #>  [626,]  0.6069558  0.6775436 -1.0231148 -0.356321598 -1.2867728 -0.9820518 #>  [627,]  0.7669501 -0.8034460  1.2321113 -0.033979933  1.3527215 -0.7865655 #>  [628,]  0.4907067  0.3898870  0.7919208  0.331665557  0.4696344 -1.2015298 #>  [629,]  0.5943676  0.6416220  0.9573405 -0.439811567  0.7394961 -1.0017737 #>  [630,] -2.4022195  0.2542522  0.6729382  0.063558849  0.3180781  0.7120228 #>  [631,]  0.7378700 -0.8883627  1.1858610 -0.050100450 -0.8101397  1.2255716 #>  [632,]  0.4243623  0.2672803  0.6858666  0.077097915  0.3328998  0.7251289 #>  [633,] -1.4856812 -1.1280106  1.0827672 -0.126087322 -1.0071508 -0.8902674 #>  [634,] -1.2011654 -0.6491522  1.3363396 -0.014905172 -0.6086748  1.3742574 #>  [635,]  0.4739211  0.3561633  0.7651030  0.233812903  0.4324648  0.8052387 #>  [636,] -1.1587234 -0.5912060  1.3847795 -0.010385121 -0.5589525 -0.7032504 #>  [637,] -1.1567432  1.6989942 -0.7209151 -0.010208226 -0.5566922 -0.7021102 #>  [638,]  0.7499399 -0.8516764  1.2050598 -0.042565920 -0.7795909 -0.8034818 #>  [639,]  0.6056289 -1.4843394  0.9752925 -0.364241100 -1.2934614  1.0161642 #>  [640,]  0.7309926 -0.9102504  1.1749203 -0.055041591 -0.8283124 -0.8232270 #>  [641,] -2.3504274  0.2690719 -1.4543048  0.079114379  0.3349330 -1.3757062 #>  [642,]  0.8173345 -0.6809784  1.3122028 -0.017933554 -0.6358150  1.3504572 #>  [643,]  0.6283830  0.7414819  1.0115548 -0.251476970 -1.1852442 -0.9502539 #>  [644,]  0.6486846 -1.2416713 -0.9579486 -0.182722866 -1.0992452  1.0845793 #>  [645,]  0.8001227  1.3894456 -0.7783018 -0.022208007 -0.6686942 -0.7555938 #>  [646,]  0.7198365 -0.9473738  1.1571706 -0.064236110 -0.8590466 -0.8353264 #>  [647,]  0.6725290  0.8845908 -0.9243247 -0.127151377  0.9909340  1.1223668 #>  [648,]  0.4388341  0.2916221  0.7090138  0.107975525  0.3604241  0.7485691 #>  [649,]  0.4349992  0.2850445  0.7028808  0.098863745  0.3530073 -1.3470524 #>  [650,]  0.6460357  0.7968460 -0.9618363 -0.190389354  0.9009395  1.0803771 #>  [651,]  0.4324711  0.2807586 -1.4309482  0.093241847  0.3481665 -1.3545219 #>  [652,] -1.6701909  0.6539456  0.9643015 -0.408636811  0.7524304 -0.9948414 #>  [653,] -1.0936757 -0.5087700 -0.6819993 -0.005812776 -0.4874553  1.5020850 #>  [654,]  0.6312812  0.7504034  1.0161725 -0.240118429  0.8529553 -0.9461147 #>  [655,]  0.5688467  0.5724515  0.9166444  1.463144639 -1.5004313  0.9575201 #>  [656,]  0.5503677  0.5253636 -1.1271850 -0.952299754  0.6163218  0.9279853 #>  [657,] -1.1467604  1.7377048 -0.7147567 -0.009357080 -0.5453782 -0.6963604 #>  [658,]  0.5516775  0.5286194  0.8892555 -0.929833280  0.6198019 -1.0751761 #>  [659,]  0.4693480  0.3472990 -1.3196182  0.212114341  0.4226441 -1.2533448 #>  [660,]  0.7557679 -0.8347110 -0.8235002 -0.039381540  1.3064646 -0.7976024 #>  [661,] -1.2582715  1.3652851 -0.7835182 -0.023765644 -0.6794710 -0.7604472 #>  [662,]  0.4398351  0.2933544 -1.4072324  0.110475273  0.3623749  0.7501891 #>  [663,] -1.7439787  0.5844417  0.9239089  1.585173040 -1.4723502  0.9647923 #>  [664,] -1.7515668  0.5778835 -1.0870191 -0.658965141  0.6722366  0.9608266 #>  [665,]  0.7997801 -0.7205131 -0.7786317 -0.022303740  1.4939355 -0.7559009 #>  [666,]  0.8243794 -0.6659555 -0.7556308 -0.016452320 -0.6230183 -0.7344851 #>  [667,]  0.9756933 -0.4297528 -0.6395426 -0.003027680 -0.4179511 -0.6259646 #>  [668,]  0.6255255 -1.3647230 -0.9930471 -0.263257567 -1.1981111  1.0478096 #>  [669,]  0.3685330  0.1852413  0.5964905  0.018694451  0.2383360  0.6343021 #>  [670,]  0.3985934  0.2271176  0.6446296  0.041092747  0.2869867  0.6832878 #>  [671,]  0.4893331 -2.5836024  0.7897265  0.322456981  0.4665259 -1.2047296 #>  [672,]  0.4294225  0.2756433 -1.4410031  0.086846202  0.3423803  0.7333295 #>  [673,]  0.6609514  0.8455523  1.0634347 -0.151380972 -1.0515278  1.1040280 #>  [674,]  0.8371661 -0.6398391 -0.7442062 -0.014095639 -0.6007109 -0.7238378 #>  [675,] -1.4384542 -1.0371636  1.1179481 -0.091148925  1.0718673 -0.8633965 #>  [676,]  0.7859099 -0.7540330 -0.7922323 -0.026588534 -0.6976976 -0.7685518 #>  [677,]  0.6749642 -1.1198954  1.0857484 -0.122617862 -1.0005449  1.1262222 #>  [678,]  0.3685330  0.1852413  0.5964905  0.018694451  0.2383360  0.6343021 #>  [679,]  0.6298918 -1.3402705  1.0139587 -0.245491917  0.8485147  1.0547472 #>  [680,]  0.4848578 -2.6460432 -1.2778290  0.294030804 -2.1906687 -1.2152765 #>  [681,]  0.5641969  0.5603683 -1.0998346 -0.742193700  0.6536413  0.9500930 #>  [682,]  0.7743841 -0.7835517 -0.8039026 -0.030842013  1.3839895 -0.7794000 #>  [683,] -2.4695991  0.2366129  0.6547627  0.048139769  0.2979021  0.6935794 #>  [684,]  0.5665763  0.5665318 -1.0952625 -0.711472871 -1.5147139  0.9538941 #>  [685,] -1.2903552  1.2787958  1.2448799 -0.030604485 -0.7212325 -0.7788310 #>  [686,]  0.6220964  0.7223546 -0.9984649 -0.278201831  0.8238488 -0.9593620 #>  [687,]  0.9235813 -0.4956547 -0.6752501 -0.005254752 -0.4759894 -0.6594252 #>  [688,]  0.4801832  0.3685250  0.7751088  0.266766274 -2.2415275 -1.2264980 #>  [689,] -1.9835399  0.4182594 -1.2294216 -2.298303109  0.5006848 -1.1711146 #>  [690,]  0.6994809 -1.0207102  1.1247767 -0.085686774  1.0876036 -0.8583718 #>  [691,]  0.6215251  0.7206315 -0.9993734 -0.280781161 -1.2164599 -0.9601986 #>  [692,]  0.4172362  0.2557702 -1.4826556  0.065037917  0.3198085  0.7135715 #>  [693,]  0.8826563 -0.5576233 -0.7062323 -0.008284437 -0.5299401  1.4526477 #>  [694,] -1.2554020 -0.7281140  1.2791820 -0.023226835  1.4797148 -0.7588018 #>  [695,]  0.5344120  0.4866878  0.8617043 -1.279704383  0.5748305  0.9024424 #>  [696,]  0.7504226  1.1761200 -0.8293061 -0.042291723  1.2846806 -0.8029915 #>  [697,] -2.5965584  0.2077061  0.6230662  0.029095061  0.2645437  0.6613646 #>  [698,]  0.6048053  0.6713214 -1.0267156 -0.369254499  0.7706308  1.0148530 #>  [699,]  0.3739431  0.1923927  0.6051572  0.021641426  0.2467080  0.6431329 #>  [700,]  0.5135290  0.4387882  0.8283684  0.523610485 -1.9119201 -1.1508110 #>  [701,] -1.1558965 -0.5874644  1.3881316 -0.010133420 -0.5557274 -0.7016226 #>  [702,]  0.7712698 -0.7918021 -0.8071156 -0.032116038 -0.7294797  1.2781423 #>  [703,]  0.4815159  0.3711894  0.7772381  0.274297179  0.4490632  0.8174762 #>  [704,] -1.8395376  0.5087729 -1.1410435  0.927622894 -1.6706828 -1.0902990 #>  [705,]  0.7097999  1.0177212  1.1411996 -0.073965591 -0.8881012 -0.8465282 #>  [706,] -1.2106854 -0.6626098  1.3259382 -0.016135197 -0.6201650 -0.7331361 #>  [707,] -2.3304043  0.2751224  0.6934613  0.086213713  0.3417905  0.7328234 #>  [708,] -1.4619430 -1.0817607 -0.9089522 -0.107252739 -0.9694450 -0.8767666 #>  [709,]  0.3849644  0.2074807 -1.6056295  0.028973258  0.2642821  0.6611026 #>  [710,]  0.3898606  0.2144096 -1.5856689  0.032894950  0.2723143  0.6690772 #>  [711,]  0.7723760  1.2676557 -0.8059713 -0.031656980  1.3755026  1.2798815 #>  [712,] -1.3220442  1.2006434 -0.8228143 -0.039049974 -0.7638997  1.2547591 #>  [713,]  0.7982534 -0.7241003  1.2818775 -0.022735930 -0.6724097  1.3205288 #>  [714,]  0.5139470  0.4397171  0.8290357  0.527907001  0.5240434 -1.1499230 #>  [715,]  0.8886514 -0.5478980 -0.7015162 -0.007739876  1.9175095 -0.6839914 #>  [716,]  0.9125987 -0.5113084 -0.6832931 -0.005925655 -0.4896714 -0.6669518 #>  [717,]  0.3739431  0.1923927  0.6051572  0.021641426  0.2467080  0.6431329 #>  [718,]  0.5329689 -2.0691978  0.8594010 -1.314939033  0.5711600  0.9001302 #>  [719,]  0.4614510  0.3323143  0.7451736  0.178874579  0.4059916  0.7851235 #>  [720,]  0.7022330 -1.0103454  1.1291569 -0.082372884 -0.9109392 -0.8551799 #>  [721,]  0.6231894 -1.3780599 -0.9967316 -0.273339661  0.8272818  1.0440967 #>  [722,]  0.5165271  0.4454777  0.8331551  0.555139099  0.5302971  0.8737647 #>  [723,]  0.9351948 -0.4798146  1.4993634 -0.004634913 -0.4621055 -0.6516537 #>  [724,] -1.6119489  0.7171468  0.9987816 -0.286090510 -1.2218461 -0.9618990 #>  [725,]  0.5948910  0.6430917 -1.0436507 -0.435940220  0.7410397  0.9990634 #>  [726,]  0.4643530  0.3377736 -1.3336677  0.190500561  0.4120661  0.7898071 #>  [727,]  0.5689355  0.5726837  0.9167860 -0.682388963 -1.4998767 -1.0442098 #>  [728,]  0.3898606  0.2144096 -1.5856689  0.032894950  0.2723143  0.6690772 #>  [729,]  0.5796693  0.6011921 -1.0707733 -0.565585922 -1.4349149  0.9747948 #>  [730,] -1.1075639  1.9021040 -0.6905709 -0.006598261 -0.5022468 -0.6737592 #>  [731,]  0.6390561  0.7746626 -0.9722335 -0.212337871  0.8780516  1.0693005 #>  [732,] -1.0407682 -0.4472481 -0.6493351 -0.003532482 -0.4334312 -0.6351484 #>  [733,]  0.5250989  0.4649488 -1.1808617  0.654937166  0.5513820 -1.1267410 #>  [734,]  0.4425688  0.2981171  0.7149862  0.117569345  0.3677332  0.7546120 #>  [735,]  0.6107547  0.6886212  0.9834624 -0.334675827  0.7887100  1.0243217 #>  [736,] -1.2401845  1.4176448  1.2947171 -0.020548922 -0.6565604  1.3332038 #>  [737,]  0.4512237  0.3135083 -1.3720723  0.142816693  0.3849979  0.7686054 #>  [738,]  0.5155097  0.4432007  0.8315308  0.544253513  0.5278260  0.8721318 #>  [739,]  0.6713787 -1.1355074  1.0800393 -0.129356619 -1.0132497 -0.8924225 #>  [740,]  0.4766794  0.3615762 -1.2995276  0.247846863  0.4384511 -1.2350494 #>  [741,]  0.7328149  1.1057311 -0.8490267 -0.053682191  1.2144156 -0.8212848 #>  [742,]  0.4765986  0.3614171  0.7693814  0.247425463 -2.2816714 -1.2352479 #>  [743,] -1.2465350  1.3989489 -0.7762841 -0.021630658 -0.6645528  1.3267592 #>  [744,]  0.5280861  0.4718552  0.8516076 -1.442295212  0.5588418 -1.1206933 #>  [745,] -1.9600572  0.4314092 -1.2150142  0.490393512  0.5150118 -1.1579570 #>  [746,] -1.0244362 -0.4292342  1.5643366 -0.003013585 -0.4174914 -0.6256887 #>  [747,]  0.5963486  0.6471953  0.9604988 -0.425354965 -1.3416546  1.0013856 #>  [748,]  0.6489864 -1.2401710  1.0443780 -0.181871186 -1.0980346 -0.9216097 #>  [749,]  0.5056644  0.4215347  0.8158103  0.448418812 -1.9831157 -1.1677851 #>  [750,]  0.7601815  1.2162892  1.2213478 -0.037144268 -0.7549386 -0.7932084 #>  [751,]  0.5937870  0.6399942 -1.0455713 -0.444150285 -1.3554065 -1.0027030 #>  [752,]  0.4132119  0.2494075 -1.4969474  0.059004858  0.3125494 -1.4143465 #>  [753,]  0.5801386  0.6024581 -1.0699159 -0.561007011  0.6982428  0.9755435 #>  [754,]  0.4753215  0.3589051 -1.3032022  0.240845802  0.4354981  0.8074958 #>  [755,]  0.5778576  0.5963206  0.9310155 -0.583651330  0.6917567 -1.0289080 #>  [756,]  0.7269004  1.0826844  1.1684097 -0.058234542 -0.8394019 -0.8276233 #>  [757,]  0.7273120  1.0842790 -0.8553847 -0.057904293 -0.8382768  1.2089284 #>  [758,]  0.7401341  1.1346661 -0.8407158 -0.048582176 -0.8042812 -0.8135776 #>  [759,] -0.9920616 -0.3948617 -0.6192495 -0.002182734 -0.3869095 -0.6069141 #>  [760,] -2.0468110  0.3854791  0.7884994  0.317408323  0.4647928 -1.2065266 #>  [761,]  0.7831721 -0.7609035 -0.7949735 -0.027537046  1.4214856 -0.7711004 #>  [762,] -0.9763456 -0.3788081 -0.6095387 -0.001859265 -0.3725465 -0.5977888 #>  [763,]  0.4156359  0.2532282  0.6719049  0.062575303  0.3169103 -1.4065198 #>  [764,]  0.6347955 -1.3135256  1.0217717 -0.227095418 -1.1570768  1.0625358 #>  [765,] -1.2215390 -0.6781605 -0.7608749 -0.017648471 -0.6334166 -0.7393701 #>  [766,] -1.6143107  0.7144228 -1.0026719 -0.290328975 -1.2260914  1.0381671 #>  [767,]  0.6556650  0.8280864  1.0550155 -0.164097442 -1.0717231  1.0956488 #>  [768,]  0.5051343  0.4203871 -1.2270484 -2.253677197  0.5030056 -1.1689477 #>  [769,]  0.4861509  0.3805481  0.7846431  0.302002837  0.4593708 -1.2122097 #>  [770,] -1.0262747 -0.4312393 -0.6403842 -0.003068354 -0.4192686 -0.6267540 #>  [771,] -1.6702665  0.6538686  0.9642582 -0.408822721  0.7523497 -0.9948842 #>  [772,]  0.4876990 -2.6061629 -1.2704605  0.311802934  0.4628438  0.8274318 #>  [773,] -1.7673712 -1.7713297 -1.0967268  1.386607037  0.6580830  0.9526733 #>  [774,] -0.9920616 -0.3948617 -0.6192495 -0.002182734 -0.3869095 -0.6069141 #>  [775,] -1.5611343 -1.2830225  1.0309551 -0.207383718 -1.1325617 -0.9331078 #>  [776,]  0.4783285  0.3648366  0.7721454  0.256595467  0.4420530  0.8123415 #>  [777,]  0.4211208  0.2620059  0.6806806  0.071382670  0.3269071  0.7198729 #>  [778,] -0.9763456 -0.3788081 -0.6095387 -0.001859265 -0.3725465 -0.5977888 #>  [779,]  0.9367461 -0.4777520 -0.6658564 -0.004558389 -0.4602946  1.5369722 #>  [780,] -1.8503896  0.5010536  0.8713032  0.874405074 -1.6941254 -1.0964003 #>  [781,] -1.2943881 -0.7883541  1.2410407 -0.031578953  1.3763034  1.2801799 #>  [782,]  0.5499081 -1.9075819 -1.1281176 -0.960325742  0.6151031  0.9272499 #>  [783,] -1.8404873  0.5080908  0.8759432  0.922826161  0.5978262 -1.0908330 #>  [784,]  0.5455253  0.5134332 -1.1370883 -1.040699550  0.6035527 -1.0866763 #>  [785,]  0.5865910  0.6200297  0.9449417 -0.502016932  0.7167803  0.9858343 #>  [786,]  0.5946853  0.6425139  0.9578471 -0.437456997  0.7404330 -1.0012659 #>  [787,]  0.6974980  0.9725075  1.1216206 -0.088165298  1.0803138  1.1618629 #>  [788,] -2.5038860  0.2282832  0.6458874  0.041913756  0.2883288 -1.4607802 #>  [789,]  0.7434713 -0.8710710 -0.8369805 -0.046435697  1.2566681  1.2343964 #>  [790,] -1.6694795  0.6546701  0.9647082 -0.406891843 -1.3276860 -0.9944394 #>  [791,]  0.7134207  1.0312702  1.1469615 -0.070280346  1.1396522  1.1870117 #>  [792,] -2.4191131  0.2496629  0.6682866  0.059238741  0.3128411  0.7073046 #>  [793,]  0.4983198  0.4058051  0.8040810  0.387132257 -2.0530563  0.8445177 #>  [794,]  0.7641532  1.2328756  1.2276638 -0.035250045 -0.7456763 -0.7892965 #>  [795,]  0.5262336  0.4675649  0.8486506  0.669293052  0.5542088  0.8893349 #>  [796,]  0.4648777 -2.9518855 -1.3321778  0.192673697  0.4131699 -1.2647762 #>  [797,]  0.4253450  0.2688920  0.6874386  0.078910090  0.3347289 -1.3760422 #>  [798,]  0.5869618  0.6210489 -1.0576046 -0.498840602 -1.3930406 -1.0137613 #>  [799,]  0.6828308 -1.0866692  1.0982728 -0.109145675 -0.9734534 -0.8782166 #>  [800,]  0.7251921  1.0760836 -0.8578597 -0.059627162  1.1847028 -0.8294727 #>  [801,]  0.3892313  0.2135112  0.6296411  0.032365511  0.2712742 -1.4968883 #>  [802,]  0.8297989 -0.6547095  1.3320086 -0.015404357  1.6301987 -0.7299334 #>  [803,]  0.4030537  0.2337826  0.6517691  0.045952394  0.2946527  0.6905397 #>  [804,]  0.6228872 -1.3797981 -0.9972102 -0.274674455  0.8263318 -0.9582064 #>  [805,]  0.6539706  0.8225356  1.0523168 -0.168418441 -1.0783129 -0.9149446 #>  [806,]  0.5271509  0.4696864  0.8501148  0.681104737 -1.7969446  0.8908056 #>  [807,]  0.4610550  0.3315735 -1.3431100  0.177338702  0.4051667  0.7844843 #>  [808,]  0.5727882  0.5828184 -1.0835048 -0.637662939  0.6774667  0.9638134 #>  [809,]  0.8908596 -0.5443750  1.4289898 -0.007549317 -0.5184527 -0.6823828 #>  [810,] -1.8843790  0.4779002  0.8557459  0.728299881  0.5653633  0.8964605 #>  [811,]  0.6046878  0.6709826 -1.0269130 -0.369975582 -1.2982355 -0.9855460 #>  [812,]  0.5431865  0.5077315 -1.1419341 -1.086593766  0.5974410  0.9164939 #>  [813,] -1.3609860  1.1133816 -0.8468003 -0.052270688  1.2220713  1.2206726 #>  [814,]  0.8627890 -0.5916152  1.3844147 -0.010412926 -0.5593050 -0.7034281 #>  [815,]  0.6791769  0.9074987 -0.9153690 -0.115189280 -0.9859056 -0.8826984 #>  [816,]  0.7288333  1.0901834  1.1714849 -0.056701737  1.1988426  1.2113272 #>  [817,]  0.6661982 -1.1586011 -0.9330184 -0.139823153  0.9689785  1.1123409 #>  [818,] -1.2940530 -0.7878237  1.2413588 -0.031496921 -0.7261384 -0.7809483 #>  [819,] -1.5088850  0.8515160  1.0662847 -0.147324764  0.9571085  1.1068638 #>  [820,]  0.6953278  0.9646625 -0.8943212 -0.090968511  1.0723683  1.1584331 #>  [821,] -2.1329600  0.3463076  0.7569704  0.209783867  0.4215443  0.7970330 #>  [822,]  0.4675531  0.3438575 -1.3246323  0.204106154  0.4188252 -1.2579090 #>  [823,]  0.6663850 -1.1577572 -0.9327596 -0.139429997  0.9696222  1.1126368 #>  [824,] -1.6317000  0.6948014  0.9868142 -0.323317485 -1.2576103 -0.9730772 #>  [825,]  0.5640787 -1.7855122 -1.1000625 -0.743756390  0.6533171 -1.0527377 #>  [826,]  0.3849644  0.2074807 -1.6056295  0.028973258  0.2642821  0.6611026 #>  [827,]  0.5746162 -1.7016491 -1.0800931  1.619228532  0.6825997 -1.0344136 #>  [828,]  0.8886514 -0.5478980 -0.7015162 -0.007739876  1.9175095 -0.6839914 #>  [829,]  0.5717473  0.5800694  0.9212706  1.539834200 -1.4824616  0.9621516 #>  [830,]  0.6510162  0.8129119 -0.9545527 -0.176255061 -1.0899417  1.0882774 #>  [831,]  0.4161722  0.2540783  0.6727630  0.063391085  0.3178799  0.7118450 #>  [832,]  0.4917243  0.3919920  0.7935463  0.338639259  0.4719448  0.8339096 #>  [833,] -1.2105966 -0.6624835 -0.7541282 -0.016123315 -0.6200572  1.3640982 #>  [834,] -1.4319596 -1.0250359 -0.8904983 -0.087098612  1.0834197  1.1631995 #>  [835,] -1.3084344  1.2333745  1.2278529 -0.035194976 -0.7454014 -0.7891800 #>  [836,]  0.5434930 -1.9666599 -1.1412969  0.925535138  0.5982397 -1.0905311 #>  [837,]  0.5879889 -1.6028785 -1.0557760 -0.490156712  0.7208335 -1.0120811 #>  [838,] -2.0221022  0.3978421  0.7980356  0.358590832  0.4783600 -1.1927042 #>  [839,] -1.7419626  0.5862015 -1.0811193 -0.623558599 -1.4683211 -1.0353556 #>  [840,] -1.3391598  1.1611646 -0.8333575 -0.044435838  1.2697834 -0.8067511 #>  [841,]  0.7678605  1.2484825  1.2335589 -0.033577437  1.3565285  1.2727816 #>  [842,]  0.5165598  0.4455511 -1.2001815  0.555492383  0.5303767  0.8738172 #>  [843,]  0.6823609 -1.0886152 -0.9111412 -0.109902964  1.0255967  1.1379279 #>  [844,]  0.6211054 -1.3901102  0.9999582  3.537409994 -1.2184080  1.0407840 #>  [845,]  0.4387473  0.2914724 -1.4106858  0.107761375  0.3602554  0.7484288 #>  [846,]  0.3985934  0.2271176  0.6446296  0.041092747  0.2869867  0.6832878 #>  [847,]  0.7474860 -0.8589628 -0.8325308 -0.043990548  1.2728031  1.2407193 #>  [848,]  0.3685330  0.1852413  0.5964905  0.018694451  0.2383360  0.6343021 #>  [849,]  0.6585514 -1.1938944  1.0596125 -0.157014684 -1.0606288  1.1002243 #>  [850,]  0.5400334  0.5001063  0.8706756  0.868033794 -1.6970499 -1.0971579 #>  [851,]  0.5645539 -1.7816090 -1.0991462 -0.737492888  0.6546215  0.9506633 #>  [852,] -1.4909372  0.8784163  1.0789889 -0.130640190  0.9846280 -0.8932551 #>  [853,]  0.4030537  0.2337826  0.6517691  0.045952394  0.2946527  0.6905397 #>  [854,]  0.8128677 -0.6907474 -0.7662221 -0.018948351 -0.6441228 -0.7443498 #>  [855,]  0.5308005  0.4781851  0.8559401  0.729979147 -1.7678137  0.8966555 #>  [856,] -1.5804945  0.7548364  1.0184544 -0.234714547  0.8575466 -0.9440828 #>  [857,]  0.7470032 -0.8604064 -0.8330633 -0.044276946  1.2708566  1.2399591 #>  [858,] -2.2808422  0.2909325  0.7083748  0.106992153  0.3596472 -1.3370368 #>  [859,] -1.0651541 -0.4749989 -0.6643926 -0.004457711 -0.4578764 -0.6492588 #>  [860,]  0.6659815  0.8623800  1.0714450 -0.140280991 -1.0328107 -0.8992826 #>  [861,] -1.3460905 -0.8728374 -0.8376264 -0.046800642  1.2543500  1.2334840 #>  [862,]  0.5640348  0.5599499 -1.1001475 -0.744339206 -1.5309330 -1.0528156 #>  [863,] -1.8325153 -1.9460706  0.8797149  0.963953291 -1.6556137  0.9205137 #>  [864,]  0.7049357 -1.0003075  1.1334585 -0.079255030  1.1078036 -0.8520689 #>  [865,] -1.7142587  0.6111444 -1.0640992 -0.530814695 -1.4136022  0.9806542 #>  [866,] -1.5045438  0.8579169 -0.9351651 -0.143122261  0.9636636 -0.9009873 #>  [867,]  0.5350277 -2.0485648  0.8626870  0.790521113 -1.7349041 -1.1068941 #>  [868,]  0.5820815 -1.6455043 -1.0663810 -0.542479509  0.7037952  0.9786428 #>  [869,]  0.5477905 -1.9268082 -1.1324341 -0.998272993  0.6095066  0.9238620 #>  [870,] -1.3579235 -0.8929209 -0.8449142 -0.051101204  1.2286106 -0.8174715 #>  [871,]  0.6211038  0.7193625 -1.0000444 -0.282700197  0.8207380  1.0407814 #>  [872,]  0.7759743 -0.7793851 -0.8022720 -0.030213036  1.3907314 -0.7778846 #>  [873,]  0.8054979 -0.7072946 -0.7731608 -0.020763565  1.5193610 -0.7508094 #>  [874,]  0.6384522  0.7727613  1.0275974 -0.214363905 -1.1414388  1.0683418 #>  [875,] -2.5639956  0.2146323  0.6308980  0.033027150  0.2725720  0.6693307 #>  [876,] -1.3317360 -0.8488502  1.2065861 -0.042022651  1.2866159  1.2460942 #>  [877,]  0.6735138 -1.1261748  1.0834390 -0.125296187  0.9943750 -0.8897383 #>  [878,] -1.8752716  0.4839563  0.8598594  0.764618133 -1.7485897 -1.1103827 #>  [879,]  0.6453991  0.7948069 -0.9627752 -0.192283817  0.8988381 -0.9264688 #>  [880,]  0.4492230  0.3099080  0.7256258  0.136582036 -2.6249054  0.7653718 #>  [881,]  0.4243335  0.2672330  0.6858204  0.077045250  0.3328461 -1.3791541 #>  [882,]  0.4668884  0.3425883  0.7538642  0.201210142  0.4174160 -1.2596080 #>  [883,]  0.5045790  0.4191869  0.8140770  0.438843956 -1.9932364 -1.1701682 #>  [884,]  0.7144715  1.0352230 -0.8705996 -0.069248975 -0.8744065 -0.8412762 #>  [885,]  0.5616292  0.5537638  0.9051318 -0.776989684  0.6466162 -1.0570932 #>  [886,] -1.2215507  1.4745406 -0.7608821 -0.017650161 -0.6334309  1.3524904 #>  [887,]  0.7508292  1.1777773 -0.8288615 -0.042062217 -0.7774052 -0.8025789 #>  [888,]  0.6337428  0.7580328 -0.9803013  4.330637636 -1.1616350 -0.9426278 #>  [889,]  0.4349992  0.2850445  0.7028808  0.098863745  0.3530073 -1.3470524 #>  [890,]  0.5504162  0.5254838  0.8872431 -0.951458655  0.6164502 -1.0775134 #>  [891,]  0.4534379  0.3175228  0.7323645  0.150014392 -2.5674701  0.7721832 #>  [892,]  0.4544877  0.3194371  0.7340427  0.153539704  0.3916280 -1.2921913 #>  [893,]  0.6191146 -1.4017588 -1.0032247  3.425156860  0.8145247  1.0376188 #>  [894,]  0.8995175 -0.5308608  1.4427352 -0.006850427 -0.5067091 -0.6761501 #>  [895,]  0.5159256  0.4441307  0.8321948  0.548680309  0.5288354 -1.1457387 #>  [896,]  0.4042521  0.2355937  0.6536872  0.047343401  0.2967324  0.6924874 #>  [897,] -1.7503736  0.5789080 -1.0862861 -0.654469989  0.6733227  0.9614480 #>  [898,]  0.6902497  0.9464576  1.1100832 -0.097918840  1.0539080 -0.8692589 #>  [899,]  0.6491953  0.8070152  1.0447108 -0.181284177  0.9114127 -0.9213284 #>  [900,] -1.2249626  1.4638891 -0.7629856 -0.018151645  1.5683072 -0.7413359 #>  [901,]  0.5816341  0.6065032  0.9370378 -0.546685112  0.7025145 -1.0225689 #>  [902,]  0.6336793  0.7578354  1.0199934 -0.231145429 -1.1619108 -0.9427174 #>  [903,]  0.4681270  0.3449556  0.7558437  0.206636591  0.4200441  0.7958958 #>  [904,] -1.9933212  0.4129457 -1.2354222  0.414127711  0.4948841  0.8499117 #>  [905,]  0.7484503 -0.8560893 -0.8314691 -0.043424570 -0.7832716 -0.8049989 #>  [906,]  0.4826272  0.3734203 -1.2836745  0.280722855  0.4515223  0.8192661 #>  [907,] -2.0880561 -2.7322463  0.7730815  0.259769819  0.4433367  0.8132854 #>  [908,]  0.4172362  0.2557702 -1.4826556  0.065037917  0.3198085  0.7135715 #>  [909,]  0.6561291  0.8296106  1.0557546 -0.162935395  0.9346420 -0.9120888 #>  [910,]  0.4856073  0.3794430 -1.2758770  0.298627774  0.4581548 -1.2134971 #>  [911,]  0.3843144  0.2065715  0.6217679  0.028485671  0.2632263 -1.5150512 #>  [912,]  0.6733602  0.8874355  1.0831944 -0.125583519 -1.0062003  1.1236829 #>  [913,] -1.7477497  0.5811697  0.9219357 -0.644682165 -1.4799034  0.9628173 #>  [914,] -1.7354534 -1.6893790  0.9284012  1.665151353 -1.4553566  0.9692883 #>  [915,]  0.6472991  0.8009029 -0.9599780 -0.186689413  0.9051191  1.0823815 #>  [916,]  0.5643266  0.5607031  0.9094345 -0.740482386  0.6539973 -1.0522991 #>  [917,] -2.3358255  0.2734658 -1.4453618  0.084224865  0.3399143  0.7312098 #>  [918,]  0.4787152  0.3656038  0.7727633  0.258686814 -2.2578453  0.8129646 #>  [919,] -1.3075036  1.2356582 -0.8138563 -0.034944280  1.3438228  1.2679939 #>  [920,] -1.0805887 -0.4930971 -0.6739211 -0.005150740 -0.4737503  1.5193386 #>  [921,] -1.3952924  1.0436200  1.1521728 -0.067120468  1.1520845 -0.8387991 #>  [922,]  0.6636096  0.8544196  1.0676678 -0.145399458  0.9600825  1.1082399 #>  [923,] -1.0822855 -0.4951121 -0.6749686 -0.005232557 -0.4755145 -0.6591616 #>  [924,]  0.3849644  0.2074807 -1.6056295  0.028973258  0.2642821  0.6611026 #>  [925,] -1.0651541 -0.4749989 -0.6643926 -0.004457711 -0.4578764 -0.6492588 #>  [926,] -1.4094253  1.0166375  1.1407367 -0.074270755  1.1249049 -0.8468575 #>  [927,]  0.4495845  0.3105566 -1.3770239  0.137690072 -2.6199081  0.7659561 #>  [928,] -1.1368218 -0.5625980  1.4111837 -0.008573715  1.8717922 -0.6906334 #>  [929,]  0.4793358  0.3668370 -1.2923989  0.262075267  0.4442616  0.8139644 #>  [930,]  0.6409212  0.7805529 -0.9694331 -0.206212301  0.8841345 -0.9326087 #>  [931,]  0.5020193  0.4136821  0.8099893  0.416989091 -2.0173961 -1.1758278 #>  [932,]  0.3946225  0.2212833  0.6382727  0.037161158  0.2802599  0.6768281 #>  [933,] -1.3634033  1.1082580  1.1788435 -0.053210742 -0.8217300  1.2186193 #>  [934,] -1.3323614  1.1766274  1.2060255 -0.042221295  1.2851857 -0.8028651 #>  [935,] -1.0244362 -0.4292342  1.5643366 -0.003013585 -0.4174914 -0.6256887 #>  [936,]  0.8076177 -0.7024794 -0.7711521 -0.020222607 -0.6540864  1.3352211 #>  [937,] -1.5982786  0.7331992  1.0072369 -0.262634135 -1.1974413  1.0480443 #>  [938,]  0.5686919  0.5720465 -1.0912296 -0.685331000 -1.5013993  0.9572729 #>  [939,] -2.0756348  0.3717194  0.7776606  0.275813812  0.4496475 -1.2226402 #>  [940,]  0.6016947  0.6623839 -1.0319692 -0.388883535  0.7612745 -0.9901966 #>  [941,]  0.5269872  0.4693074  0.8498535  0.678983229  0.5560909  0.8905432 #>  [942,] -1.7263457  0.6000848 -1.0715253 -0.569629836  0.6957354 -1.0265475 #>  [943,]  0.6980225  0.9744096 -0.8909039 -0.087502069 -0.9240099  1.1626919 #>  [944,]  0.4837302  0.3756426  0.7807759  0.287234110  0.4539707 -1.2179640 #>  [945,] -1.7362719  0.5912084 -1.0776234 -0.603397165  0.6863497  0.9688547 #>  [946,]  0.6022863  0.6640781 -1.0309659 -0.385063626  0.7630489  1.0108425 #>  [947,]  0.8627501 -0.5916846 -0.7223592 -0.010417647 -0.5593648 -0.7034582 #>  [948,]  0.6587601 -1.1929115 -0.9434453 -0.156515725  0.9435450 -0.9086324 #>  [949,]  0.5442542  0.5103296 -1.1397167  0.938639718  0.6002267  0.9182030 #>  [950,]  0.4674209  0.3436047  0.7547151  0.203526971 -2.3892314  0.7947567 #>  [951,]  0.7108267 -0.9789026  1.1428335 -0.072899429  1.1298601 -0.8453681 #>  [952,] -1.3155732 -0.8223318  1.2212579 -0.037172030 -0.7550716  1.2606138 #>  [953,] -1.7844576  0.5506047  0.9031620 -0.794359402  0.6432533  0.9440170 #>  [954,]  0.4947423  0.3982760  0.7983669  0.360104717  0.4788355 -1.1922297 #>  [955,]  0.5944324 -1.5581079 -1.0444475 -0.439329698 -1.3519225  0.9983328 #>  [956,] -1.5665359  0.7724434  1.0274364 -0.214705003 -1.1418669  1.0681814 #>  [957,] -1.2703937  1.3316814  1.2642396 -0.026168231  1.4386821  1.3031082 #>  [958,]  0.7292266 -0.9159912  1.1721107 -0.056395241  1.2003760 -0.8251183 #>  [959,] -1.1046999 -0.5222073 -0.6888034 -0.006428868 -0.4991756  1.4878603 #>  [960,]  0.7123921 -0.9733213 -0.8731149 -0.071306292  1.1357636 -0.8436057 #>  [961,]  0.5061303  0.4225450  0.8165543  0.452586062 -1.9787939 -1.1667652 #>  [962,]  0.5251976  0.4651760  0.8469967  0.656174360  0.5516274  0.8876737 #>  [963,] -1.3748672 -0.9221699 -0.8553487 -0.057879549 -0.8381923 -0.8271455 #>  [964,] -1.7369411  0.5906166 -1.0780346 -0.605737316 -1.4583139 -1.0325239 #>  [965,] -1.6052500  0.7249515  1.0029071 -0.274370371 -1.2098515 -0.9581062 #>  [966,] -1.1423987 -0.5697998 -0.7120658 -0.009005683 -0.5404769 -0.6938473 #>  [967,]  0.4705280 -2.8606322 -1.3163425  0.217532192  0.4251656  0.7997680 #>  [968,]  0.8127929 -0.6909127 -0.7662919 -0.018965875 -0.6442633  1.3433371 #>  [969,]  0.9021021 -0.5269165  1.4468384 -0.006655817 -0.5032767  1.4829929 #>  [970,]  0.4280072  0.2732882  0.6916971  0.084013627  0.3397131  0.7310363 #>  [971,] -1.1582341 -0.5905574 -0.7218348 -0.010341159  1.7908518 -0.7029687 #>  [972,]  0.6317978  0.7520006  1.0169957 -0.238153466  0.8546099 -0.9453807 #>  [973,] -1.1706436  1.6470542  1.3708219 -0.011509548 -0.5726703 -0.7101122 #>  [974,]  0.8638745 -0.5896849 -0.7214285 -0.010282245 -0.5576416  1.4233063 #>  [975,]  0.4638656  0.3368528  0.7490329  0.188501496  0.4110422 -1.2673942 #>  [976,]  0.6600351 -1.1869313 -0.9416414 -0.153505275  0.9478768 -0.9069671 #>  [977,] -1.2304581 -0.6911060 -0.7663736 -0.018986390 -0.6444276 -0.7444908 #>  [978,] -1.2047375 -0.6541817 -0.7505154 -0.015356429  1.6313972  1.3703914 #>  [979,]  0.9251076 -0.4935319 -0.6741474 -0.005168316 -0.4741311  1.5188498 #>  [980,]  0.4247130 -3.7333681 -1.4568181  0.077740175  0.3335517  0.7256973 #>  [981,]  0.6410927  0.7810959 -0.9691764 -0.205658850  0.8846951  1.0725333 #>  [982,]  0.5055268 -2.3739618  0.8155907  0.447195246  0.5039322  0.8561010 #>  [983,]  0.5437338  0.5090622  0.8765806 -1.075658236 -1.6698173 -1.0900728 #>  [984,] -1.8413555  0.5074683  0.8755344  0.918464896 -1.6745967 -1.0913212 #>  [985,]  0.5769891  0.5939937 -1.0756964 -0.592536588  0.6892961  0.9705183 #>  [986,] -1.3229298 -0.8343376  1.2145357 -0.039313512  1.3069974 -0.7974722 #>  [987,]  0.6978437  0.9737608 -0.8911299 -0.087727572  1.0815827 -0.8602822 #>  [988,]  0.4638205  0.3367678  0.7489609  0.188317730  0.4109476  0.7889478 #>  [989,]  0.7983697 -0.7238263 -0.7799933 -0.022702701 -0.6721778  1.3207112 #>  [990,]  0.5588187  0.5465898  0.9006485 -0.817145782 -1.5650014 -1.0621364 #>  [991,]  0.6893958  0.9434171 -0.9019378 -0.099144009 -0.9516361 -0.8702804 #>  [992,]  0.6676490  0.8680038  1.0741004 -0.136801144 -1.0267101  1.1146389 #>  [993,] -1.4098146  1.0159080 -0.8768662 -0.074477079 -0.8895459 -0.8470794 #>  [994,]  0.6001971 -1.5195091  0.9666339 -0.398740713  0.7567934  1.0075156 #>  [995,] -2.2414365  0.3044144  0.7207004  0.127460786  0.3748063  0.7603916 #>  [996,] -1.8356961  0.5115448 -1.1386849  0.947306530 -1.6624297  0.9190004 #>  [997,] -1.5531956 -1.2661330  1.0361707 -0.197031235  0.8936825 -0.9286055 #>  [998,]  0.5076961  0.4259512 -1.2209196 -2.142021568 -1.9643665 -1.1633509 #>  [999,]  0.4992238  0.4077212 -1.2414269  0.394244145  0.4891744  0.8459710 #> [1000,]  0.6031709  0.6666164  0.9713744 -0.379428364 -1.3059832 -0.9878973 #> [1001,]  0.5700206  0.5755270  0.9185167 -0.669452939 -1.4931217 -1.0423239 #> [1002,]  0.5568806 -1.8461217  0.8975566 -0.846165389  0.6337396  0.9384005 #> [1003,]  0.7695281  1.2555423 -0.8089237 -0.032853680 -0.7333970 -0.7840654 #> [1004,] -1.2574844  1.3675074 -0.7830331 -0.023616743 -0.6784645 -0.7599959 #> [1005,]  0.4294225  0.2756433 -1.4410031  0.086846202  0.3423803  0.7333295 #> [1006,] -1.9182746  0.4562604  0.8407778 -1.642325781  0.5419833  0.8814256 #> [1007,]  0.4186338  0.2580030  0.6767016  0.067259610 -3.1021979  0.7158390 #> [1008,]  0.5885392  0.6253963  0.9480480 -0.485572901  0.7224326  0.9889403 #> [1009,]  0.5992357  0.6553708 -1.0361607 -0.405213354  0.7539248 -0.9940512 #> [1010,]  0.6168210  0.7065405 -1.0069170 -0.303047072  0.8073944  1.0339716 #> [1011,] -1.6032955 -1.3750414  1.0041172 -0.271033216 -1.2063646  1.0449327 #> [1012,]  0.5965827  0.6478560  0.9608721 -0.423681040  0.7460418 -0.9982444 #> [1013,]  0.8265669 -0.6613843 -0.7536515 -0.016020179 -0.6191195 -0.7326409 #> [1014,]  0.4090657  0.2429548  0.6613911  0.053320643  0.3051710  0.7003079 #> [1015,]  0.4745472 -2.7980824  0.7661035  0.236934293 -2.3051060  0.8062479 #> [1016,]  0.6521733 -1.2244803  1.0494543 -0.173138818 -1.0853658 -0.9173365 #> [1017,] -2.4967188  0.2299905  0.6477226  0.043138129  0.2902934  0.6864299 #> [1018,]  0.7508782 -0.8489129 -0.8288079 -0.042034640 -0.7772850 -0.8025292 #> [1019,]  0.4603716  0.3302975  0.7434482  0.174715903  0.4037454 -1.2765180 #> [1020,]  0.6509172  0.8125906 -0.9546964 -0.176524478  0.9171498  1.0881204 #> [1021,]  0.8528009 -0.6097944 -0.7307002 -0.011704889  1.7392880 -0.7112419 #> [1022,]  0.4370856  0.2886117  0.7062176  0.103731362 -2.8008735  0.7457393 #> [1023,]  0.4454069 -3.2991137  0.7195244  0.125365784  0.3733442 -1.3171721 #> [1024,]  0.7599488 -0.8228274  1.2209778 -0.037258666 -0.7554863 -0.7934388 #> [1025,]  0.7960195 -0.7293941 -0.7822727 -0.023385035 -0.6768887 -0.7592885 #> [1026,]  0.8713551 -0.5766168  1.3980188 -0.009429237 -0.5463672  1.4349965 #> [1027,]  0.5768265  0.5935589  0.9293711 -0.594215703  0.6888363  0.9702589 #> [1028,] -1.0244362 -0.4292342  1.5643366 -0.003013585 -0.4174914 -0.6256887 #> [1029,] -1.5059586  0.8558235  1.0683356 -0.144479869  0.9615203  1.1089042 #> [1030,]  0.6606454  0.8445352  1.0629474 -0.152086724 -1.0526819 -0.9061722 #> [1031,]  0.4833805  0.3749370  0.7802171  0.285154859  0.4531935 -1.2188000 #> [1032,]  0.8908596 -0.5443750  1.4289898 -0.007549317 -0.5184527 -0.6823828 #> [1033,]  0.7218379 -0.9405617  1.1603550 -0.062469467  1.1717629 -0.8331290 #> [1034,]  0.5954044 -1.5515055  0.9589935  2.313855835  0.7425557 -1.0001186 #> [1035,]  0.4298122  0.2762941  0.6945845  0.087641246 -2.9144585  0.7339610 #> [1036,] -1.2438152 -0.7107756  1.2909762 -0.021161254  1.5125778 -0.7521560 #> [1037,] -1.0390434 -0.4453242 -0.6482699 -0.003474120 -0.4317315 -0.6341497 #> [1038,] -1.0687853 -0.4792193 -0.6666344 -0.004612727 -0.4615828  1.5352529 #> [1039,]  0.5365376  0.4917353  0.8650966  0.813217014  0.5802616 -1.1039387 #> [1040,]  0.6948347 -1.0385453 -0.8949494 -0.091619045  1.0705676 -0.8638162 #> [1041,]  0.5402676 -1.9973222  0.8710494 -1.147021745 -1.6953074 -1.0967066 #> [1042,] -1.6351760  0.6909689  0.9847379 -0.330302761 -1.2639661 -0.9750438 #> [1043,]  0.4904260  0.3893075 -1.2634678  0.329764831  0.4689982  0.8318206 #> [1044,]  0.6028388 -1.5022624 -1.0300306 -0.381533508  0.7647081  1.0117222 #> [1045,]  0.6560195 -1.2059080 -0.9473464 -0.163208889 -1.0703516 -0.9122333 #> [1046,]  0.6390085  0.7745126 -0.9723052 -0.212496862 -1.1390863  1.0692249 #> [1047,] -2.0968493  0.3620232 -1.2989164  0.249032966  0.4389451 -1.2344926 #> [1048,]  0.6499142  0.8093403  1.0458560 -0.179279854 -1.0943246 -0.9203614 #> [1049,] -1.8530883  0.4991592  0.8700472  0.861698006 -1.6999845  0.9108154 #> [1050,]  0.5442655  0.5103572  0.8774290 -1.065149195  0.6002562  0.9182211 #> [1051,]  0.3849644  0.2074807 -1.6056295  0.028973258  0.2642821  0.6611026 #> [1052,]  0.4520629  0.3150261  0.7301662  0.145507197  0.3866963  0.7699615 #> [1053,] -1.4321673  0.9752078 -0.8906262 -0.087225621  1.0830474  1.1630394 #> [1054,]  0.6117488 -1.4460515  0.9850468 -0.329253016  0.7917546 -0.9747507 #> [1055,]  0.6074576  0.6790006 -1.0222782 -0.353375890  0.7786610 -0.9812821 #> [1056,] -1.1264175 -0.5493126 -0.7022054 -0.007817386  1.9130084 -0.6846354 #> [1057,]  0.4121255  0.2477067 -1.5008531  0.057465072  0.3106063  0.7052767 #> [1058,]  0.4991829  0.4076344  0.8054594  0.393919961  0.4890795 -1.1821655 #> [1059,] -1.1708475 -0.6074195 -0.7296152 -0.011529706  1.7454849  1.4079954 #> [1060,] -1.9459636 -2.2749118  0.8289355  0.527259594  0.5238918  0.8695226 #> [1061,]  0.5454746  0.5133092 -1.1371929 -1.041671621  0.6034198  0.9201561 #> [1062,]  0.7380991  1.1265750 -0.8430101 -0.049944481  1.2352630 -0.8157055 #> [1063,]  0.3843144  0.2065715  0.6217679  0.028485671  0.2632263 -1.5150512 #> [1064,]  0.5609417  0.5520034  0.9040350 -0.786609030  0.6447425  0.9448916 #> [1065,]  0.5469127  0.5168343  0.8816531 -1.014482984  0.6071955  0.9224575 #> [1066,]  0.5791623  0.5998263  0.9330960 -0.570578865 -1.4378924  0.9739859 #> [1067,]  0.8000641 -0.7198485  1.2847555 -0.022224351 -0.6688102 -0.7556464 #> [1068,]  0.7533573  1.1881127  1.2104950 -0.040665741 -0.7712393 -0.8000235 #> [1069,] -1.6486421 -1.4784258 -1.0237759 -0.358665230  0.7759373  1.0176459 #> [1070,] -1.7566293 -1.7434827  0.9173228  1.474170050 -1.4977771 -1.0436242 #> [1071,]  0.5962782  0.6469968 -1.0412474 -0.425859502  0.7451399  1.0012735 #> [1072,]  0.5420182  0.5048979  0.8738429 -1.110349766  0.5944013 -1.0933458 #> [1073,] -1.8709318  0.4868796  0.8618336 -1.277757577  0.5750370 -1.1079446 #> [1074,]  0.5435840  0.5086976 -1.1411077 -1.078640497  0.5984770 -1.0903578 #> [1075,] -1.3093202  1.2312070  1.2270308 -0.035435021 -0.7465973 -0.7896868 #> [1076,]  0.4921176 -2.5457778  0.7941744  0.341369076  0.4728393 -1.1982617 #> [1077,]  0.8047061 -0.7091051 -0.7739139 -0.020969713 -0.6597068 -0.7515103 #> [1078,]  0.6190191 -1.4023207  0.9966336 -0.292409937  0.8142272  1.0374670 #> [1079,]  0.6549683  0.8258012  1.0539059 -0.165859217  0.9307297 -0.9136223 #> [1080,]  0.9620564 -0.4457662 -0.6485149 -0.003487465 -0.4321221 -0.6343794 #> [1081,]  0.6581918  0.8364067 -0.9442516 -0.157878520 -1.0620021  1.0996542 #> [1082,]  0.6876561 -1.0669607 -0.9041963 -0.101692374 -0.9573492  1.1463038 #> [1083,]  0.6942178 -1.0409457  1.1163996 -0.092440101 -0.9360515 -0.8645444 #> [1084,]  0.6754228  0.8945183 -0.9204048 -0.121784202  1.0010647  1.1269481 #> [1085,]  0.4287237  0.2744790  0.6928433  0.085437110  0.3410619 -1.3657520 #> [1086,] -1.2511329  1.3856253  1.2835022 -0.022445563  1.4917038  1.3221330 #> [1087,]  0.5749486  0.5885492 -1.0794750 -0.614001402 -1.4629820  0.9672618 #> [1088,]  0.9125987 -0.5113084 -0.6832931 -0.005925655 -0.4896714 -0.6669518 #> [1089,] -1.2776098 -0.7620675 -0.7954364 -0.027700188  1.4195067 -0.7715308 #> [1090,]  0.7025087  0.9907711  1.1295958 -0.082048685 -0.9100924 -0.8548615 #> [1091,]  0.4172362  0.2557702 -1.4826556  0.065037917  0.3198085  0.7135715 #> [1092,]  0.7594404  1.2132096  1.2201693 -0.037509962 -0.7566850  1.2595367 #> [1093,]  0.8619411 -0.5931292 -0.7230303 -0.010516278  1.7837732  1.4202839 #> [1094,] -1.0839644 -0.4971109 -0.6760049 -0.005314663 -0.4772638 -0.6601317 #> [1095,]  0.6497720  0.8088799  1.0456294 -0.179674511  0.9133319 -0.9205526 #> [1096,] -2.5038860  0.2282832  0.6458874  0.041913756  0.2883288 -1.4607802 #> [1097,] -1.0705518 -0.4812807  1.4976225 -0.004689880 -0.4633921 -0.6523798 #> [1098,]  0.7226272 -0.9378937 -0.8608735 -0.061787476 -0.8512084 -0.8322657 #> [1099,]  0.4048043  0.2364311  0.6545711  0.047997033  0.2976936  0.6933849 #> [1100,]  0.6704758  0.8775886 -0.9271263 -0.131116986  0.9837823 -0.8935626 #> [1101,]  0.5519186  0.5292202 -1.1240499 -0.925760514  0.6204439  0.9304659 #> [1102,]  0.4540958  0.3187215  0.7334161  0.152214824  0.3908284  0.7732460 #> [1103,] -1.1187468 -0.5396425  1.4337491 -0.007298838 -0.5143432 -0.6802115 #> [1104,]  0.4047840  0.2364003 -1.5277938  0.047972845  0.2976582  0.6933519 #> [1105,]  0.4581092  0.3260953 -1.3516582  0.166281115 -2.5058823  0.7797283 #> [1106,]  0.7101148  1.0188949 -0.8758864 -0.073636878  1.1271812  1.1817926 #> [1107,]  0.7669308 -0.8034983 -0.8116352 -0.033988495 -0.7392944 -0.7865842 #> [1108,]  0.6544689  0.8241657  1.0531105 -0.167134803  0.9290495  1.0937525 #> [1109,] -2.1651751  0.3330737  0.7458216  0.180459408  0.4068371  0.7857779 #> [1110,]  0.7332579 -0.9029593 -0.8485189 -0.053357271  1.2161557  1.2183028 #> [1111,] -1.1936223 -0.6386094  1.3446982 -0.013991245 -0.5996586 -0.7233298 #> [1112,]  0.6868230 -1.0703278  1.1046283 -0.102938192 -0.9601025  1.1449863 #> [1113,]  0.5217478  0.4572758  0.8414898  0.614145973  0.5430825 -1.1336055 #> [1114,] -1.0823145 -0.4951465  1.4815113 -0.005233963 -0.4755446 -0.6591783 #> [1115,]  0.6196117 -1.3988371 -1.0024279 -0.289612854  0.8160751  1.0384093 #> [1116,] -1.3208580 -0.8309456  1.2164214 -0.038699448  1.3118592  1.2558282 #> [1117,]  0.6207957  0.7184355 -1.0005356 -0.284112455  0.8197740  1.0402917 #> [1118,]  0.6793633 -1.1011443  1.0927524 -0.114872207 -0.9852648  1.1331848 #> [1119,]  0.6370679 -1.3013824  1.0253920 -0.219089049  0.8715938  1.0661440 #> [1120,]  0.7991834 -0.7219122 -0.7792072 -0.022471574 -0.6705575 -0.7564363 #> [1121,]  0.7614810  1.2217009 -0.8173846 -0.036512462 -0.7518902  1.2627473 #> [1122,]  0.4712641  0.3509964  0.7608571  0.220974967  0.4267431  0.8009551 #> [1123,]  0.6164282 -1.4176923 -1.0075521 -0.304992260  0.8061770 -0.9677292 #> [1124,]  0.6099863  0.6863718 -1.0180834 -0.338934341  0.7863616  1.0230991 #> [1125,] -0.9920616 -0.3948617 -0.6192495 -0.002182734 -0.3869095 -0.6069141 #> [1126,]  0.7471558  1.1628583  1.2006315 -0.044186241 -0.7864903 -0.8063220 #> [1127,]  0.4938043  0.3963162 -1.2549120  0.353305137 -2.0978103 -1.1943783 #> [1128,] -1.5817599  0.7532678 -0.9826581 -0.236608995  0.8559223 -0.9447999 #> [1129,]  0.7218062  1.0630733 -0.8618427 -0.062497008  1.1716410 -0.8331637 #> [1130,] -1.4307348  0.9777478 -0.8897444 -0.086353208 -0.9211342 -0.8590001 #> [1131,] -1.4718085 -1.1008373  1.0928684 -0.114748473 -0.9850144  1.1333001 #> [1132,] -1.4281483 -1.0179597  1.1259331 -0.084797902  1.0902817  1.1661444 #> [1133,]  0.4893331 -2.5836024  0.7897265  0.322456981  0.4665259 -1.2047296 #> [1134,]  0.4207937  0.2614772  0.6801573  0.070827692  0.3263059  0.7193424 #> [1135,]  0.4036936  0.2347486  0.6527933  0.046690488  0.2957622 -1.4459649 #> [1136,] -2.2901594  0.2878661 -1.4173897  0.102699571  0.3561907  0.7450355 #> [1137,] -1.3808428  1.0722435 -0.8590283 -0.060456644  1.1808490  1.2040130 #> [1138,] -1.8208170  0.5224811  0.8853090 -0.972763492  0.6132391  0.9261236 #> [1139,] -1.4182115 -0.9996524  1.1337413 -0.079054643 -0.9021482 -0.8518652 #> [1140,]  0.5936890  0.6397199 -1.0457420 -0.444886757  0.7374978  0.9971483 #> [1141,]  0.3685330  0.1852413  0.5964905  0.018694451  0.2383360  0.6343021 #> [1142,]  0.6257597  0.7334629  1.0073749 -0.262269325  0.8353878 -0.9540329 #> [1143,]  0.5938672  0.6402191  0.9565429 -0.443547767  0.7380223  0.9974322 #> [1144,]  0.6356177  0.7638756  1.0230816 -0.224161889  0.8669011  1.0638415 #> [1145,]  0.4976656  0.4044218 -1.2452740  0.382057482  0.4855652  0.8434658 #> [1146,]  0.3685330  0.1852413  0.5964905  0.018694451  0.2383360  0.6343021 #> [1147,]  0.6144549 -1.4295566  0.9893597 -0.314974689  0.8000767 -0.9706775 #> [1148,]  0.6473417  0.8010398 -0.9599156 -0.186566154  0.9052601 -0.9238310 #> [1149,]  0.4036731  0.2347176 -1.5319554  0.046666697  0.2957266 -1.4460345 #> [1150,]  0.6973585 -1.0288043  1.1213986 -0.088342557  1.0798022  1.1616425 #> [1151,]  0.5082145 -2.3414679 -1.2196870  0.471658640  0.5103021  0.8604185 #> [1152,]  0.7442016 -0.8688509  1.1959327 -0.045980002 -0.7939064 -0.8093583 #> [1153,]  0.7882645 -0.7481925  1.2659993 -0.025801460  1.4434794 -0.7663736 #> [1154,]  0.4770551  0.3623174  0.7701107  0.249816053 -2.2765029  0.8102896 #> [1155,] -0.9920616 -0.3948617 -0.6192495 -0.002182734 -0.3869095 -0.6069141 #> [1156,]  0.5764993  0.5926841 -1.0766009 -0.597612039 -1.4536765  0.9697367 #> [1157,]  0.5723042  0.5815390  0.9221588 -0.643101398 -1.4790467 -1.0383778 #> [1158,]  0.6331486 -1.3224249 -0.9812120 -0.233099118 -1.1642195  1.0599203 #> [1159,]  0.8640328 -0.5894043 -0.7212977 -0.010263344 -0.5573997 -0.7024674 #> [1160,]  0.6737654  0.8888239  1.0838395 -0.124827122  0.9952550  1.1243243 #> [1161,]  0.8003727 -0.7191274 -0.7780612 -0.022138443 -0.6681996 -0.7553700 #> [1162,]  0.3849644  0.2074807 -1.6056295  0.028973258  0.2642821  0.6611026 #> [1163,]  0.8265983 -0.6613190  1.3269232 -0.016014064 -0.6190637 -0.7326144 #> [1164,] -1.0532117 -0.4612802 -0.6570190 -0.003980396 -0.4458081 -0.6423507 #> [1165,]  0.5780686  0.5968867 -1.0737079 -0.581514935  0.6923553  0.9722409 #> [1166,]  0.4996278  0.4085795  0.8061700  0.397460900  0.4901128 -1.1811667 #> [1167,]  0.6089285  0.6832821  0.9805517 -0.344895347  0.7831348 -0.9790333 #> [1168,]  0.6187562 -1.4038700  0.9962146 -0.293660396  0.8134082  1.0370489 #> [1169,]  0.4902016  0.3888447  0.7911140  0.328252317  0.4684900  0.8314595 #> [1170,]  0.3685330  0.1852413  0.5964905  0.018694451  0.2383360  0.6343021 #> [1171,]  0.8333029 -0.6475778  1.3375758 -0.014765959 -0.6073292 -0.7270211 #> [1172,]  0.4289951  0.2749308 -1.4424240  0.085981956  0.3415736  0.7326371 #> [1173,]  0.6285674 -1.3476225  1.0118487 -0.250736921 -1.1844206  1.0526433 #> [1174,]  0.6662309 -1.1584534 -0.9329732 -0.139754294 -1.0318948 -0.8989631 #> [1175,]  0.4209628 -3.8204325 -1.4696635  0.071114131  0.3266167  0.7196167 #> [1176,] -2.0956000  0.3625844  0.7703268  0.250528212  0.4395653  0.8105075 #> [1177,]  0.4127135  0.2486264  0.6672287  0.058293978  0.3116572 -1.4159666 #> [1178,] -1.4582640 -1.0746991 -0.9066881 -0.104572335 -0.9636756  1.1432842 #> [1179,] -2.2924378  0.2871230  0.7048282  0.101678912  0.3553526 -1.3434848 #> [1180,]  0.4580396  0.3259664 -1.3518618  0.166027254  0.3989173  0.7796158 #> [1181,]  0.6500789 -1.2347609 -0.9559149 -0.178824246 -1.0936680  1.0867909 #> [1182,] -2.1414108  0.3427666 -1.3262361  0.201615107  0.4176140  0.7940486 #> [1183,]  0.5921279 -1.5739189  0.9537698 -0.456809726 -1.3644203 -1.0053682 #> [1184,] -1.5968408 -1.3606991  1.0081346 -0.260270571 -1.1948910  1.0489395 #> [1185,]  0.5261935  0.4674724 -1.1784301  0.668781235  0.5541089 -1.1245170 #> [1186,]  0.5602851  0.5503255 -1.1074349 -0.795917570  0.6429561  0.9438423 #> [1187,] -1.3562449  1.1235262 -0.8438805 -0.050470260  1.2322158 -0.8165128 #> [1188,]  0.6463845  0.7979650  1.0402337 -0.189359687  0.9020925  1.0809306 #> [1189,]  0.3739431  0.1923927  0.6051572  0.021641426  0.2467080  0.6431329 #> [1190,]  0.6626058 -1.1749991  1.0660694 -0.147627056  0.9566459  1.1066495 #> [1191,] -1.5100140 -1.1766613  1.0654956 -0.148435759  0.9554141 -0.9040948 #> [1192,]  0.5707626  0.5774763  0.9197001 -0.660762643  0.6718048 -1.0410384 #> [1193,]  0.6279406  0.7401257  1.0108499 -0.253262399  0.8423014  1.0516473 #> [1194,] -1.3648636 -0.9048312  1.1775951 -0.053785995  1.2138624  1.2173823 #> [1195,] -1.4560775 -1.0705158  1.1045544 -0.103008074 -0.9602562 -0.8734289 #> [1196,]  0.4934723  0.3956241  0.7963384  0.350926748  0.4759287  0.8367217 #> [1197,]  0.6208989 -1.3913123 -1.0003710 -0.283638531  0.8200968 -0.9611173 #> [1198,] -1.9634240  0.4294890  0.8216387  0.482012290 -1.9496134 -1.1598439 #> [1199,]  0.6072863  0.6785028  0.9779342 -0.354378796  0.7781407 -0.9815448 #> [1200,]  0.8458986 -0.6228121 -0.7366015 -0.012700417 -0.5861239  1.3951930 #> [1201,]  0.5746714 -1.7012247 -1.0799905 -0.616982990  0.6827549  0.9668193 #> [1202,]  0.3685330  0.1852413  0.5964905  0.018694451  0.2383360  0.6343021 #> [1203,]  0.7186185  1.0509135 -0.8656266 -0.065338146  1.1594204 -0.8366696 #> [1204,]  0.7983957 -0.7237649  1.2821037 -0.022695266 -0.6721258  1.3207521 #> [1205,]  0.8335756  1.5455298 -0.7473791 -0.014717516 -0.6068587 -0.7267955 #> [1206,]  0.7001267 -1.0182648 -0.8882536 -0.084896171  1.0899839  1.1660168 #> [1207,]  0.4332023  0.2819941  0.7000068  0.094837478  0.3495626  0.7394520 #> [1208,]  0.5804298  0.6032443 -1.0693846  1.791515994  0.6990733  0.9760081 #> [1209,]  0.6157205  0.7032687  0.9913767 -0.308531805  0.8039861 -0.9687845 #> [1210,] -1.2633910 -0.7402188 -0.7866735 -0.024754947 -0.6860383  1.3099597 #> [1211,]  0.6059799  0.6747156  0.9758519 -0.362127697  0.7741811  1.0167228 #> [1212,]  0.5056361  0.4214734  0.8157651  0.448166770  0.5041902  0.8562765 #> [1213,]  0.3946225  0.2212833  0.6382727  0.037161158  0.2802599  0.6768281 #> [1214,]  0.4598855  0.3293919 -1.3464906  0.172871975  0.4027363 -1.2777979 #> [1215,] -1.2700723  1.3325574 -0.7907913 -0.026101819 -0.6946642 -0.7672118 #> [1216,]  0.9222298 -0.4975450 -0.6762297 -0.005332619 -0.4776436 -0.6603420 #> [1217,]  0.4912382  0.3909856  0.7927698  0.335291606  0.4708403 -1.2002965 #> [1218,]  0.5647021 -1.7803938 -1.0988606 -0.735550841  0.6550288  0.9509001 #> [1219,]  0.5666294  0.5666697 -1.0951610 -0.710803989  0.6603371  0.9539788 #> [1220,]  0.7770800  1.2878205  1.2482181 -0.029783968  1.3954308 -0.7768345 #> [1221,]  0.6794451  0.9084305 -0.9150113 -0.114733340 -0.9849838  1.1333143 #> [1222,]  0.7507020 -0.8494309 -0.8290005 -0.042133852 -0.7777173 -0.8027079 #> [1223,]  0.7230669 -0.9364118  1.1623105 -0.061411050  1.1764948 -0.8317855 #> [1224,]  0.7479531  1.1660866  1.2018997 -0.043715386 -0.7845056 -0.8055065 #> [1225,]  0.8068485 -0.7042214  1.2955385 -0.020417090 -0.6555645 -0.7496170 #> [1226,]  0.6403248  0.7786663 -0.9703268 -0.208149706  0.8821867 -0.9334328 #> [1227,]  0.4777676  0.3637257  0.7712492  0.253589368  0.4408261  0.8114378 #> [1228,] -1.3620057  1.1112162 -0.8474283 -0.052665406 -0.8197360 -0.8198028 #> [1229,]  0.6642727 -1.1673507  1.0687239 -0.143948027 -1.0391155 -0.9014771 #> [1230,] -2.4222749  0.2488167 -1.4982998  0.058466612  0.3118746 -1.4155712 #> [1231,]  0.4883322 -2.5973888  0.7881277  0.315893001 -2.1539258 -1.2070721 #> [1232,]  0.4657458  0.3404134 -1.3297199  0.196318638  0.4150002 -1.2625394 #> [1233,]  0.4137498  0.2502523  0.6688870  0.059781042  0.3135142  0.7079136 #> [1234,] -1.4015496  1.0315531 -0.8717778 -0.070205895  1.1399372 -0.8423674 #> [1235,]  0.4389390  0.2918034  0.7091815  0.108235033  0.3606282  0.7487389 #> [1236,]  0.4211208  0.2620059  0.6806806  0.071382670  0.3269071  0.7198729 #> [1237,]  0.6051393  0.6722856 -1.0261546 -0.367212276 -1.2959421  1.0153847 #> [1238,]  0.4825310 -2.6793368  0.7788598  0.280160865  0.4513090 -1.2208357 #> [1239,] -1.6350808  0.6910736 -1.0154401 -0.330109540  0.7912696  1.0256517 #> [1240,]  0.6342026  0.7594630  1.0208271 -0.229236924  0.8623359  1.0615943 #> [1241,] -1.0389761 -0.4452492  1.5426662 -0.003471859 -0.4316653 -0.6341107 #> [1242,]  0.4803339  0.3688256  0.7753495  0.267608217  0.4464560  0.8155722 #> [1243,]  0.3892313  0.2135112  0.6296411  0.032365511  0.2712742 -1.4968883 #> [1244,]  0.4121255  0.2477067 -1.5008531  0.057465072  0.3106063  0.7052767 #> [1245,]  0.5889610  0.6265621  0.9487206 -0.482090833 -1.3818646 -1.0104962 #> [1246,]  0.6691821  0.8731939 -0.9289005 -0.133685561  0.9792912  1.1170670 #> [1247,] -1.5919947  0.7407453 -0.9889514 -0.252444717  0.8429441  1.0519686 #> [1248,]  0.5202993 -2.2027243 -1.1916432  0.597232809  0.5395174 -1.1365995 #> [1249,]  0.4455499  0.3033646  0.7197529  0.125770411  0.3736280  0.7594333 #> [1250,]  0.6101646  0.6868933  0.9825219 -0.337940897  0.7869061  1.0233828 #> [1251,]  0.4047840  0.2364003 -1.5277938  0.047972845  0.2976582  0.6933519 #> [1252,]  0.5895219 -1.5920673 -1.0530585 -0.477503661  0.7252935  0.9905069 #> [1253,]  0.5261833  0.4674487  0.8485702  0.668650372  0.5540833  0.8892542 #> [1254,]  0.4172362  0.2557702 -1.4826556  0.065037917  0.3198085  0.7135715 #> [1255,]  0.3685330  0.1852413  0.5964905  0.018694451  0.2383360  0.6343021 #> [1256,]  0.6281482  0.7407618  1.0111806 -0.252422938  0.8429612  1.0519772 #> [1257,] -1.3182093 -0.8266217  1.2188405 -0.037927014 -0.7586608 -0.7947723 #> [1258,]  0.6183921  0.7112276  0.9956343 -0.295401907  0.8122746 -0.9648133 #> [1259,]  0.6273906 -1.3542024 -0.9901249 -0.255501153  0.8405549 -0.9516799 #> [1260,]  0.5304976  0.4774761 -1.1689663  0.725805599 -1.7702059  0.8961700 #> [1261,]  0.6000708 -1.5203403  0.9664326 -0.399584319  0.7564163 -0.9927386 #> [1262,]  0.4279792  0.2732417  0.6916524  0.083958482  0.3396605 -1.3680059 #> [1263,]  0.7733366 -0.7863134 -0.8049804 -0.031264217  1.3795587  1.2813916 #> [1264,] -1.1799636  1.6134532 -0.7352377 -0.012463809 -0.5835300  1.3976734 #> [1265,]  0.4599305  0.3294757  0.7427433  0.173042000  0.4028297 -1.2776793 #> [1266,]  0.5596414  0.5486837 -1.1086957  1.241988007  0.6412076  0.9428135 #> [1267,] -1.1813420  1.6085646  1.3585335 -0.012610829 -0.5851462 -0.7162677 #> [1268,] -1.3478652 -0.8758316  1.1922938 -0.047424121  1.2504410 -0.8117258 #> [1269,] -1.5088799  0.8515235  1.0662883 -0.147319778  0.9571162 -0.9034506 #> [1270,]  0.6243820  0.7292729 -0.9948472 -0.268140620  0.8310371  1.0459923 #> [1271,]  0.7011937 -1.0142423 -0.8869157 -0.083607466  1.0939232 -0.8563824 #> [1272,]  0.4311700  0.2785684  0.6967562  0.090462160  0.3456901 -1.3583995 #> [1273,]  0.5844034  0.6140375  0.9414536 -0.521215020  0.7104641  0.9823461 #> [1274,]  0.5829112  0.6099707 -1.0648785 -0.534772885  0.7061742  0.9799663 #> [1275,]  0.5392253  0.4981635  0.8693859 -1.169488811 -1.7030811 -1.0987178 #> [1276,]  0.7603522 -0.8216933 -0.8185857 -0.037060606 -0.7545372  1.2609713 #> [1277,]  0.6011347  0.6607830 -1.0329206 -0.392537183 -1.3164870 -0.9910716 #> [1278,]  0.4042182  0.2355423  0.6536330  0.047303525  0.2966735 -1.4441844 #> [1279,] -1.0839026 -0.4970373  1.4793626 -0.005311621 -0.4771993 -0.6600960 #> [1280,]  0.4042521  0.2355937  0.6536872  0.047343401  0.2967324  0.6924874 #> [1281,]  0.5764115  0.5924496 -1.0767632 -0.598526770 -1.4542010  0.9695966 #> [1282,]  0.4781081 -2.7442383 -1.2956838  0.255410435  0.4415707  0.8119864 #> [1283,] -1.5285762 -1.2146278 -0.9499492 -0.167816918  0.9281575  1.0933318 #> [1284,]  0.7640409 -0.8114218 -0.8146738 -0.035302131 -0.7459360  1.2667743 #> [1285,]  0.5781522  0.5971110  0.9314852  1.722144494 -1.4438507  0.9723742 #> [1286,]  0.7782449  1.2928443 -0.7999551 -0.029339197 -0.7140861 -0.7757313 #> [1287,]  0.5203649  0.4541320  0.8392821  0.597989285  0.5396785  0.8799226 #> [1288,]  0.7222909  1.0649299 -0.8612702 -0.062076989  1.1735059 -0.8326332 #> [1289,] -1.1306397 -0.5546804 -0.7048106 -0.008116752 -0.5273905 -0.6870699 #> [1290,]  0.8056265 -0.7070013  1.2935964 -0.020730302 -0.6579226 -0.7506957 #> [1291,] -1.3999075  1.0347010 -0.8707668 -0.069384065  1.1431073  1.1884515 #> [1292,]  0.6736816  0.8885366  1.0837061 -0.124983131 -1.0050637  1.1241916 #> [1293,]  0.6266099 -1.3585925 -0.9913460 -0.258716923 -1.1932049  1.0495329 #> [1294,]  0.7326291  1.1050029  1.1775238 -0.053819042 -0.8239359 -0.8214823 #> [1295,]  0.6167526  0.7063369 -1.0070275 -0.303384768  0.8071824 -0.9672463 #> [1296,]  0.4798800  0.3679205  0.7746244  0.265079277  0.4454574  0.8148411 #> [1297,] -1.2322508 -0.6937263  1.3029677 -0.019266086  1.5464219 -0.7455198 #> [1298,]  0.4693480  0.3472990 -1.3196182  0.212114341  0.4226441 -1.2533448 #> [1299,]  0.5660365  0.5651298 -1.0962964 -0.718317845  0.6587015 -1.0492829 #> [1300,]  0.6200977  0.7163376 -1.0016504 -0.287341333  0.8175920  1.0391819 #> [1301,]  0.8627890 -0.5916152  1.3844147 -0.010412926 -0.5593050 -0.7034281 #> [1302,]  0.6085378  0.6821432 -1.0204821 -0.347125952 -1.2788624  1.0207940 #> [1303,] -1.4392737  0.9627418  1.1173181 -0.091671823  1.0704222 -0.8638632 #> [1304,]  0.4990476  0.4073473  0.8052433  0.392848841  0.4887655 -1.1824696 #> [1305,]  0.4243623  0.2672803  0.6858666  0.077097915  0.3328998  0.7251289 #> [1306,]  0.4576854  0.3253116  0.7391544  0.164742196  0.3981869 -1.2836247 #> [1307,]  0.7689353 -0.7980656  1.2352679 -0.033108978 -0.7347372  1.2744717 #> [1308,]  0.8003727 -0.7191274 -0.7780612 -0.022138443 -0.6681996 -0.7553700 #> [1309,]  0.7515465 -0.8469522 -0.8280784 -0.041660702  1.2892436 -0.8018521 #> [1310,]  0.7868841 -0.7516089  1.2638048 -0.026259722 -0.6956530 -0.7676490 #> [1311,] -1.2396130 -0.7045508 -0.7720172 -0.020454018 -0.6558440 -0.7497450 #> [1312,]  0.4134820  0.2498314  0.6684584  0.059393419  0.3130336  0.7074788 #> [1313,] -1.7977080  0.5401182  0.8965727  1.168721044  0.6320781 -1.0667640 #> [1314,]  0.4860783  0.3804003  0.7845270  0.301549800  0.4592082 -1.2123816 #> [1315,]  0.8169340  1.4666059 -0.7624471 -0.018022049  1.5709597 -0.7408343 #> [1316,]  0.6091851  0.6840308  0.9809607 -0.343438939  0.7839167  1.0218241 #> [1317,]  0.8818143  1.7888825 -0.7068997 -0.008364232 -0.5311396 -0.6890217 #> [1318,] -1.2433972  1.4081437 -0.7743499 -0.021089922  1.5137828  1.3299355 #> [1319,] -2.0642686  0.3770628  0.7818987  0.291453722  0.4555348  0.8221741 #> [1320,] -1.3713963  1.0915469 -0.8532113 -0.056428519  1.2002090  1.2118799 #> [1321,] -1.4244969  0.9889155 -0.8859046 -0.082645222  1.0969138 -0.8554466 #> [1322,]  0.7941688 -0.7338202  1.2753849 -0.023938203 -0.6806313  1.3141174 #> [1323,]  0.8736888 -0.5726220  1.4017249 -0.009179282 -0.5429162 -0.6950997 #> [1324,]  0.6964224  0.9686145  1.1199087 -0.089542535  1.0763717 -0.8619477 #> [1325,]  0.4126363  0.2485056  0.6671052  0.058184565  0.3115191  0.7061060 #> [1326,]  0.7358590  1.1177095 -0.8455502 -0.051492859  1.2264002 -0.8180612 #> [1327,]  0.7718209 -0.7903333  1.2398563 -0.031886427  1.3731618 -0.7818554 #> [1328,]  0.8040308  1.4071543  1.2910602 -0.021147284  1.5128134 -0.7521091 #> [1329,] -1.6070808  0.7228068 -0.9982270 -0.277529712  0.8243189 -0.9591428 #> [1330,]  0.7181883  1.0492791  1.1545480 -0.065732306 -0.8637242  1.1945361 #> [1331,]  0.5666364 -1.7646397 -1.0951476  1.407032405  0.6603565 -1.0482290 #> [1332,]  0.6433258  0.7881872  1.0353612 -0.198600041 -1.1210605 -0.9293014 #> [1333,]  0.5629748  0.5572189  0.9072783 -0.758536079  0.6502923 -1.0546960 #> [1334,] -1.7773295  0.5563628  0.9067472 -0.763056777  0.6493816  0.9476085 #> [1335,]  0.4783285  0.3648366  0.7721454  0.256595467  0.4420530  0.8123415 #> [1336,] -1.8142237 -1.8959830  0.8884936  1.066147701  0.6185318 -1.0760597 #> [1337,]  0.5208939  0.4553329 -1.1902969  0.604123469 -1.8485004  0.8807712 #> [1338,]  0.5916071  0.6339054  0.9529396 -0.460864804 -1.3672673  0.9938306 #> [1339,] -2.0469749 -2.5947145  0.7884369  0.317153044  0.4647046  0.8287625 #> [1340,]  0.6471680 -1.2492484 -0.9601705 -0.187069672  0.9046848  1.0821735 #> [1341,]  0.8167597 -0.6822247 -0.7626081 -0.018060718  1.5701658 -0.7409843 #> [1342,] -1.0953560 -0.5108041  1.4640509 -0.005903101 -0.4892312 -0.6667116 #> [1343,] -1.4061071 -0.9776270 -0.8745837 -0.072533014 -0.8840141  1.1834797 #> [1344,]  0.7679101 -0.8008378 -0.8106107 -0.033555634  1.3567363  1.2728597 #> [1345,]  0.5250583 -2.1512063 -1.1809520  0.654428974 -1.8139569 -1.1268236 #> [1346,] -1.7367763  0.5907622  0.9277012 -0.605160241 -1.4579861  0.9685878 #> [1347,]  0.6919301 -1.0499150  1.1127581 -0.095556352  1.0599961  1.1530620 #> [1348,]  0.7120045 -0.9746990  1.1447079 -0.071697129 -0.8816007 -0.8440413 #> [1349,]  0.4361089  0.2869384 -1.4191330  0.101426495  0.3551444 -1.3438002 #> [1350,]  0.6086893  0.6825846 -1.0202308 -0.346259350  0.7824061  1.0210350 #> [1351,]  0.7367481  1.1212232  1.1840764 -0.050872058  1.2299135  1.2238037 #> [1352,] -1.3539175  1.1285533  1.1870183 -0.049607002 -0.8082508  1.2267179 #> [1353,]  0.5604408  0.5507233 -1.1071302  1.259924560 -1.5542922  0.9440912 #> [1354,]  0.5270708  0.4695008  0.8499869  0.680065529  0.5562998 -1.1227413 #> [1355,]  0.6340397  0.7589562 -0.9798469 -0.229829108  0.8618113  1.0613356 #> [1356,]  0.5939851  0.6405494  0.9567307 -0.442664629  0.7383693  0.9976200 #> [1357,] -1.2525340 -0.7237984 -0.7799818 -0.022699321  1.4877540 -0.7571571 #> [1358,] -1.9569062 -2.3083115  0.8243474  0.498383019 -1.9343164 -1.1561908 #> [1359,]  0.5333690 -2.0651658  0.8600396  0.766245387  0.5721763  0.9007713 #> [1360,]  0.4985787  0.4063532  0.8044944  0.389157000 -2.0505320  0.8449339 #> [1361,]  0.4548547  0.3201078  0.7346294  0.154789435  0.3923775 -1.2912023 #> [1362,]  0.5892504 -1.5939743 -1.0535387 -0.479717689 -1.3802572  0.9900742 #> [1363,]  0.6079304  0.6803751  0.9789609 -0.350625135  0.7800974  1.0198274 #> [1364,] -1.2111411 -0.6632583 -0.7544639 -0.016196308 -0.6207181 -0.7333979 #> [1365,]  0.6631292  0.8528129 -0.9372925 -0.146460892 -1.0433654  1.1074788 #> [1366,] -1.5208075  0.8342735 -0.9451703 -0.159444219 -1.0644767  1.0986298 #> [1367,]  0.4894615  0.3873205  0.7899317  0.323307922  0.4668160  0.8302684 #> [1368,]  0.9251076 -0.4935319 -0.6741474 -0.005168316 -0.4741311  1.5188498 #> [1369,]  0.8818143  1.7888825 -0.7068997 -0.008364232 -0.5311396 -0.6890217 #> [1370,]  0.7734256 -0.7860783 -0.8048888 -0.031228119 -0.7246720 -0.7803164 #> [1371,] -2.2942087 -3.4898250  0.7042897  0.100893299  0.3547032  0.7437879 #> [1372,]  0.5814775  0.6060789  0.9367881 -0.548165667  0.7020665  0.9776795 #> [1373,]  0.6833415 -1.0845596 -0.9098471 -0.108329116 -0.9717309 -0.8775939 #> [1374,] -1.7783487 -1.8000686 -1.1034692  1.302993941 -1.5420193  0.9470933 #> [1375,]  0.7109492  1.0220098 -0.8748689 -0.072773362 -0.8847041 -0.8452299 #> [1376,]  0.5937695  0.6399453 -1.0456018 -0.444281562  0.7377346 -1.0027310 #> [1377,]  0.5272739  0.4699712  0.8503111 -1.464767108  0.5568078  0.8910028 #> [1378,]  0.4238695  0.2664741 -1.4596876  0.076203198  0.3319845 -1.3805864 #> [1379,] -2.1828862  0.3260950  0.7398317  0.166280529  0.3990607 -1.2824984 #> [1380,]  0.3992333  0.2280666 -1.5488172  0.041760264  0.2880794 -1.4612865 #> [1381,]  0.4383216  0.2907378  0.7081942  0.106715629  0.3594278 -1.3373637 #> [1382,]  0.5326543  0.4825380  0.8588989  0.755994623  0.5703617  0.8996262 #> [1383,]  0.4161722  0.2540783  0.6727630  0.063391085  0.3178799  0.7118450 #> [1384,]  0.4095071  0.2436369  0.6620976  0.053901455 -3.2684897  0.7010249 #> [1385,]  0.3985934  0.2271176  0.6446296  0.041092747  0.2869867  0.6832878 #> [1386,]  0.5615469  0.5535527  0.9050005 -0.778135111 -1.5470498 -1.0572403 #> [1387,] -1.2755365 -0.7588574 -0.7941587 -0.027251988  1.4249785  1.2981231 #> [1388,]  0.4583871  0.3266096 -1.3508473  0.167296890  0.3996347  0.7801770 #> [1389,]  0.7640341 -0.8114405  1.2274744 -0.035305267 -0.7459516 -0.7894133 #> [1390,]  0.5986564 -1.5296943  0.9641778 -0.409168874  0.7521995  1.0050618 #> [1391,] -1.4225780 -1.0076719  1.1302968 -0.081533753  1.1004223  1.1704760 #> [1392,]  0.4297214  0.2761424  0.6944393  0.087455465  0.3429452  0.7338139 #> [1393,]  0.4079905  0.2412985  0.6596704  0.051929531  0.3032742 -1.4315133 #> [1394,]  0.4829621  0.3740941 -1.2827935  0.282685493  0.4522648  0.8198054 #> [1395,] -2.0001735  0.4092787  0.8066951  0.400096038  0.4908772  0.8471491 #> [1396,]  0.5869730  0.6210798  0.9455508 -0.498744784 -1.3929775 -1.0137429 #> [1397,]  0.3898832  0.2144419  0.6306848  0.032914101  0.2723517  0.6691139 #> [1398,]  0.6273371 -1.3545028  1.0098883 -0.255720258  0.8403850 -0.9517569 #> [1399,]  0.3739431  0.1923927  0.6051572  0.021641426  0.2467080  0.6431329 #> [1400,]  0.3898832  0.2144419  0.6306848  0.032914101  0.2723517  0.6691139 #> [1401,]  0.6270545 -1.3560899  1.0094380 -0.256880117  0.8394885 -0.9521638 #> [1402,] -1.0805265 -0.4930233  1.4839377 -0.005147763 -0.4736857  1.5194215 #> [1403,] -1.5418297 -1.2421913  1.0437309 -0.183018766  0.9093680 -0.9221574 #> [1404,]  0.4578925  0.3256945  0.7394856  0.165492756 -2.5086925 -1.2830738 #> [1405,]  0.7957428  1.3697626 -0.7825419 -0.023466838 -0.6774464 -0.7595390 #> [1406,]  0.8105694  1.4370918 -0.7683725 -0.019494986 -0.6484579 -0.7463520 #> [1407,]  0.4557192  0.3216916 -1.3586747  0.157770026 -2.5371277 -1.2888783 #> [1408,] -1.0805887 -0.4930971 -0.6739211 -0.005150740 -0.4737503  1.5193386 #> [1409,]  0.5914660  0.6335123  0.9527145 -0.461970922 -1.3680405  0.9936056 #> [1410,]  0.6566284 -1.2030034 -0.9464768  6.184483627  0.9363281 -0.9114307 #> [1411,] -1.3159204 -0.8228960  1.2209390 -0.037270680 -0.7555438 -0.7934630 #> [1412,]  0.5839349  0.6127589 -1.0630307 -0.525430441 -1.4102073 -1.0187460 #> [1413,]  0.6211637  0.7195428  1.0000510 -0.282426609 -1.2181374 -0.9607287 #> [1414,] -1.6109879  0.7182593 -1.0006290 -0.284381869  0.8195908  1.0401985 #> [1415,]  0.5917779 -1.5763396 -1.0490848 -0.459530770  0.7318861  0.9941027 #> [1416,]  0.7300321  1.0948506  1.1733922 -0.055773351 -0.8308965 -0.8242546 #> [1417,]  0.6252737  0.7319833 -0.9934428 -0.264324053  0.8338517  1.0474095 #> [1418,]  0.4115908  0.2468723  0.6654321  0.056720585  0.3096525 -1.4196307 #> [1419,] -2.1868693  0.3245535  0.7384980  0.163263426  0.3973410 -1.2847184 #> [1420,]  0.4499551  0.3112225  0.7267964  0.138834494  0.3824386  0.7665552 #> [1421,]  0.6394925 -1.2885960  1.0292547 -0.210886846  0.8794727 -0.9345853 #> [1422,]  0.4887101  0.3857770  0.7887314  0.318357368  0.4651202  0.8290592 #> [1423,]  0.5363395 -2.0355678 -1.1563629  0.810205666  0.5797541 -1.1043256 #> [1424,]  0.7063699 -0.9950374 -0.8804825 -0.077653543 -0.8983515 -0.8504276 #> [1425,] -1.2598090  1.3609585 -0.7844658 -0.024058946  1.4674818  1.3134930 #> [1426,] -2.2520805  0.3006889 -1.3940608  0.121537539 -2.6981565  0.7569816 #> [1427,]  0.6880385  0.9385967  1.1065631 -0.101126205  1.0459272  1.1469085 #> [1428,]  0.5098177 -2.3223773  0.8224425  0.486818931 -1.9450562  0.8629934 #> [1429,]  0.6874523 -1.0677833 -0.9044617 -0.101995706 -0.9580220  1.1459814 #> [1430,]  0.8317295 -0.6507667 -0.7490210 -0.015048945 -0.6100544 -0.7283258 #> [1431,] -1.3300813 -0.8461115 -0.8277653 -0.041501122  1.2904110 -0.8015615 #> [1432,] -1.2498887 -0.7198318 -0.7783513 -0.022222356 -0.6687961 -0.7556399 #> [1433,]  0.8322794 -0.6496498 -0.7485312 -0.014949377 -0.6091000 -0.7278693 #> [1434,]  0.8803116 -0.5614920 -0.7080942 -0.008508764 -0.5332900 -0.6901376 #> [1435,] -2.4967188  0.2299905  0.6477226  0.043138129  0.2902934  0.6864299 #> [1436,] -1.2605726 -0.7359344 -0.7849365 -0.024205827  1.4653768 -0.7617665 #> [1437,]  0.4430644  0.2989855  0.7157786  0.118898276  0.3687093 -1.3237783 #> [1438,]  0.6488308  0.8058383 -0.9577349 -0.182309510 -1.0986582  1.0848113 #> [1439,]  0.7831721 -0.7609035 -0.7949735 -0.027537046  1.4214856 -0.7711004 #> [1440,]  0.6079332 -1.4697604 -1.0214867 -0.350609315  0.7801057 -0.9805539 #> [1441,]  0.6638211  0.8551276  1.0680047 -0.144934790  0.9608076 -0.9020589 #> [1442,]  0.7292778 -0.9158243 -0.8531025 -0.056355540 -0.8329339 -0.8250634 #> [1443,]  0.5725862  0.5822842  0.9226086 -0.639926634  0.6769008  0.9634909 #> [1444,]  0.6484053  0.8044653 -0.9583570 -0.183514887 -1.1003671 -0.9223932 #> [1445,] -2.1432268 -2.9238727  0.7533812  0.199905722 -2.3993691 -1.2603820 #> [1446,]  0.5658032  0.5645246 -1.0967439 -0.721298351  0.6580586  0.9526591 #> [1447,] -1.9231331  0.4532704 -1.1923566  0.593616777 -1.8561650 -1.1372516 #> [1448,]  0.5982944  0.6526983 -1.0377743 -0.411662715  0.7511223  1.0044851 #> [1449,]  0.9125987 -0.5113084 -0.6832931 -0.005925655 -0.4896714 -0.6669518 #> [1450,]  0.5372853  0.4935184  0.8662900 -1.212602560  0.5821791 -1.1024811 #> [1451,]  0.5400322 -1.9995859 -1.1485359  0.868015047 -1.6970585  0.9114440 #> [1452,]  0.6451200  0.7939138 -0.9631875 -0.193121090 -1.1136881  1.0789243 #> [1453,] -1.4942553  0.8733553  1.0766174 -0.133590091  0.9794563 -0.8951410 #> [1454,]  0.4003810  0.2297746 -1.5444227  0.042981909  0.2900452  0.6861948 #> [1455,]  0.4636159  0.3363819  0.7486339  0.187485038  0.4105183  0.7886177 #> [1456,]  0.6352974  0.7628755 -0.9779268 -0.225299560 -1.1549123  1.0633329 #> [1457,]  0.7131062 -0.9707898 -0.8722494 -0.070592268  1.1384626  1.1865153 #> [1458,]  0.4603282  0.3302167 -1.3452089  0.174550745  0.4036553 -1.2766321 #> [1459,] -1.2480543 -0.7170890 -0.7772206 -0.021896922 -0.6664731 -0.7545878 #> [1460,]  0.7643388  1.2336542 -0.8143595 -0.035164156 -0.7452474  1.2672429 #> [1461,] -2.0602549  0.3789751 -1.2764766  0.297207484  0.4576400  0.8236936 #> [1462,]  0.7869983 -0.7513255 -0.7911478 -0.026221480  1.4379925 -0.7675433 #> [1463,]  0.5170849  0.4467292 -1.1989752  0.561190018  0.5316547  0.8746598 #> [1464,]  0.6763577 -1.1139081 -0.9191455 -0.120103838  1.0043505 -0.8861886 #> [1465,]  0.5183070  0.4494787  0.8359967 -1.740172275  0.5346362  0.8766209 #> [1466,]  0.7055946  1.0021229 -0.8814401 -0.078514823  1.1102580  1.1746546 #> [1467,]  0.4524689  0.3157621 -1.3683347  0.146825256  0.3875196 -1.2976604 #> [1468,]  0.4458901  0.3039671 -1.3883163  0.126738511  0.3743043  0.7599836 #> [1469,]  0.5978480 -1.5350765 -1.0385412 -0.414760413  0.7497954 -0.9962401 #> [1470,] -1.9109560  0.4608162 -1.1848834  0.632725614  0.5469134 -1.1304188 #> [1471,] -1.0821824 -0.4949896 -0.6749049 -0.005227554 -0.4754072  1.5172157 #> [1472,]  0.5879704  0.6238266 -1.0558088  2.039520137  0.7207799 -1.0121113 #> [1473,]  0.8257485  1.5080923 -0.7543908 -0.016180376 -0.6205741  1.3636431 #> [1474,]  0.5570272  0.5420469 -1.1138456 -0.843930888  0.6341349  0.9386348 #> [1475,]  0.6345115  0.7604249  1.0213192 -0.228118382 -1.1583040 -0.9415443 #> [1476,]  0.6734342 -1.1265208  1.0833122 -0.125445037 -1.0059385  1.1238000 #> [1477,]  0.6031153  0.6664567 -1.0295631 -0.379779736  0.7655395  1.0121625 #> [1478,]  0.4696695  0.3479178  0.7583088  0.213578458  0.4233303  0.7983836 #> [1479,] -1.6943208  0.6300133  0.9507072 -0.471965149 -1.3749637  0.9915989 #> [1480,]  0.4607165  0.3309412 -1.3440867  0.176035317  0.4044624  0.7839379 #> [1481,]  0.9620564 -0.4457662 -0.6485149 -0.003487465 -0.4321221 -0.6343794 #> [1482,]  0.5918910  0.6346962 -1.0488864 -0.458649781  0.7322174 -1.0057500 #> [1483,]  0.3843144  0.2065715  0.6217679  0.028485671  0.2632263 -1.5150512 #> [1484,]  0.7413544 -0.8775507 -0.8393460 -0.047784853 -0.8011484  1.2310617 #> [1485,]  0.7578968  1.2068107 -0.8212105 -0.038284411 -0.7603409  1.2571078 #> [1486,]  0.6812020  0.9145487 -0.9126754 -0.111795488  1.0214752 -0.8802086 #> [1487,]  0.6051349  0.6722730  0.9745051 -0.367238877 -1.2959642 -0.9848551 #> [1488,]  0.7107501  1.0212662 -0.8751114 -0.072978336 -0.8852912  1.1827957 #> [1489,]  0.6317925  0.7519843 -0.9832965 -0.238173487 -1.1701478 -0.9453882 #> [1490,]  0.3685330  0.1852413  0.5964905  0.018694451  0.2383360  0.6343021 #> [1491,]  0.6039647  0.6688991  0.9726397 -0.374448890 -1.3019205 -0.9866654 #> [1492,]  0.4431006 -3.3439332  0.7158365  0.118995976  0.3687807  0.7554721 #> [1493,]  0.8371661 -0.6398391 -0.7442062 -0.014095639 -0.6007109 -0.7238378 #> [1494,]  0.5011127  0.4117432  0.8085415  0.409486927  0.4935706  0.8490075 #> [1495,]  0.3739431  0.1923927  0.6051572  0.021641426  0.2467080  0.6431329 #> [1496,]  0.6893517 -1.0601528  1.1086537 -0.099207716 -0.9517803 -0.8703332 #> [1497,]  0.6364116 -1.3048732 -0.9762322 -0.221368848 -1.1501281 -0.9388772 #> [1498,]  0.4042182  0.2355423  0.6536330  0.047303525  0.2966735 -1.4441844 #> [1499,] -1.5680842  0.7704625 -0.9742484 -0.216846143  0.8737116 -0.9370484 #> [1500,]  0.4603301  0.3302202 -1.3452036  0.174557770  0.4036592  0.7833140 #> [1501,] -1.7885730 -1.8270923  0.9011050 -0.812953952  0.6397526  0.9419561 #> [1502,]  0.6482620  0.8040033 -0.9585667 -0.183922721 -1.1009433  1.0839090 #> [1503,]  0.6077425 -1.4709594  0.9786613 -0.351715931 -1.2828306 -0.9808458 #> [1504,]  0.8343567 -0.6454540 -0.7466865 -0.014579701 -0.6055136  1.3771261 #> [1505,]  0.9756933 -0.4297528 -0.6395426 -0.003027680 -0.4179511 -0.6259646 #> [1506,] -1.5835602  0.7510440  1.0165028 -0.239327846  0.8536190  1.0572836 #> [1507,]  0.5602851  0.5503255 -1.1074349 -0.795917570  0.6429561  0.9438423 #> [1508,] -1.1986724 -0.6456559 -0.7467755 -0.014597333 -0.6056862  1.3769689 #> [1509,]  0.4757813  0.3598083  0.7680754  0.243196443  0.4364968 -1.2372610 #> [1510,]  0.5567630 -1.8471354  0.8973689 -0.847962438  0.6334226 -1.0658567 #> [1511,]  0.6602254  0.8431403 -0.9413728 -0.153061411  0.9485244 -0.9067191 #> [1512,]  0.5838225  0.6124523 -1.0632333 -0.526447793 -1.4108508  0.9814196 #> [1513,]  0.4971254  0.4032816 -1.2466136  0.377911726  0.4843174 -1.1868070 #> [1514,]  0.5858417 -1.6181931  0.9437470 -0.508503632  0.7146133 -1.0156000 #> [1515,]  0.4888301 -2.5905180  0.7889230  0.319143065  0.4653907 -1.2059056 #> [1516,]  0.5237607  0.4618752  0.8447030  0.638363661 -1.8246215  0.8853694 #> [1517,]  0.4495258  0.3104513  0.7261100  0.137509761  0.3815748  0.7658613 #> [1518,]  0.6400686  0.7778568  1.0301725 -0.208988069  0.8813508  1.0709077 #> [1519,] -1.2281719 -0.6877733 -0.7649641 -0.018635009 -0.6415946 -0.7431784 #> [1520,]  0.6327283  0.7548827 -0.9818571 -0.234658977  0.8575945 -0.9440616 #> [1521,] -1.7892978 -1.8290173 -1.1101937 -0.816269013  0.6391388  0.9415941 #> [1522,] -1.5600959  0.7807586  1.0316343 -0.206002339  0.8843469  1.0723642 #> [1523,]  0.5587083  0.5463092  0.9004723 -0.818769092  0.6386780 -1.0623355 #> [1524,]  0.5510642  0.5270933  0.8882769 -0.940280179  0.6181709 -1.0763113 #> [1525,]  0.7086266 -0.9868218 -0.8777070 -0.075205010 -0.8915888 -0.8478580 #> [1526,] -1.1879038 -0.6306875 -0.7401347 -0.013332357 -0.5928751 -0.7200416 #> [1527,] -2.5965584  0.2077061  0.6230662  0.029095061  0.2645437  0.6613646 #> [1528,]  0.4574552  0.3248865 -1.3535711  0.163911839  0.3977126 -1.2842375 #> [1529,]  0.4734821  0.3553063  0.7644014  0.231646296  0.4315163 -1.2429603 #> [1530,]  0.6134643 -1.4355644 -1.0123702 -0.320120929 -1.2546667 -0.9721645 #> [1531,] -1.5110085  0.8484091  1.0648015 -0.149420669 -1.0483003  1.1053880 #> [1532,] -1.1494599 -0.5789994 -0.7164221 -0.009580695 -0.5484244 -0.6979155 #> [1533,]  0.4535063  0.3176472  0.7324738  0.150241763  0.3896276  0.7722937 #> [1534,]  0.6121973  0.6928568 -1.0144441 -0.326838378 -1.2608269  1.0266169 #> [1535,]  0.7128717 -0.9716202  1.1460879 -0.070825881 -0.8790623 -0.8430672 #> [1536,] -1.4784745  0.8977923 -0.9191251 -0.120076900 -0.9956157 -0.8861698 #> [1537,] -2.2096444  0.3159300  0.7309634  0.147127281  0.3877074 -1.2974086 #> [1538,]  0.4683697  0.3454206 -1.3223464  0.207715052  0.4205601 -1.2558283 #> [1539,]  0.7437695 -0.8701636  1.1952453 -0.046249054 -0.7949996 -0.8098045 #> [1540,]  0.5278328  0.4712672 -1.1748075  0.690006249 -1.7914501  0.8918988 #> [1541,]  0.9021021 -0.5269165  1.4468384 -0.006655817 -0.5032767  1.4829929 #> [1542,] -2.0355731  0.3910350 -1.2613394  0.335455588  0.4708946  0.8331660 #> [1543,]  0.8638562 -0.5897174  1.3861096 -0.010284434 -0.5576696  1.4232776 #> [1544,] -1.4299772  0.9790947  1.1245077 -0.085895051 -0.9199792 -0.8585686 #> [1545,]  0.5046986  0.4194453  0.8142681  0.439890231  0.5019785  0.8547702 #> [1546,]  0.4637001  0.3365405 -1.3355265  0.187827046  0.4106948 -1.2678233 #> [1547,] -1.1915579 -0.6357426  1.3470042 -0.013750079 -0.5972046  1.3847676 #> [1548,]  0.4983450  0.4058583  0.8041211  0.387328523 -2.0528109 -1.1840512 #> [1549,]  0.5797167  0.6013199  0.9339801 -0.565121492 -1.4346369 -1.0257773 #> [1550,]  0.6208402 -1.3916540  0.9995357 -0.283907836  0.8199133  1.0403625 #> [1551,] -1.4245887  0.9887498 -0.8859611 -0.082698756 -0.9117879  1.1689085 #> [1552,]  0.8826563 -0.5576233 -0.7062323 -0.008284437 -0.5299401  1.4526477 #> [1553,] -1.6643096  0.6599690  0.9676743  2.535423563  0.7587445 -0.9915176 #> [1554,]  0.4987563  0.4067295  0.8047780  0.390551476  0.4880899 -1.1831248 #> [1555,] -1.2868519 -0.7764794 -0.8011317 -0.029780059  1.3954740 -0.7768248 #> [1556,]  0.7260912  1.0795549 -0.8568082 -0.058889647 -0.8416195 -0.8284982 #> [1557,]  0.3843144  0.2065715  0.6217679  0.028485671  0.2632263 -1.5150512 #> [1558,]  0.8189061 -0.6775866 -0.7606296 -0.017590823 -0.6329280  1.3529207 #> [1559,]  0.9756933 -0.4297528 -0.6395426 -0.003027680 -0.4179511 -0.6259646 #> [1560,]  0.6117757  0.6916174  0.9850897 -0.329107533  0.7918371  1.0259462 #> [1561,]  0.5514309 -1.8939194 -1.1250339  1.070643962  0.6191460  0.9296859 #> [1562,]  0.5469473  0.5169191  0.8817082 -1.013839366  0.6072864  0.9225128 #> [1563,] -1.2796497  1.3067894  1.2551879 -0.028147663  1.4141518 -0.7726995 #> [1564,]  0.5432755 -1.9687063 -1.1417490  0.921822856 -1.6731560  0.9166364 #> [1565,]  0.6820407 -1.0899440 -0.9115646 -0.110422291  1.0244570  1.1374213 #> [1566,] -2.5002155  0.2291553 -1.5460109  0.042535949  0.2893326  0.6855191 #> [1567,]  0.6154353  0.7024223 -1.0091610 -0.309970917  0.8031042  1.0317677 #> [1568,] -1.9329430  0.4473154  0.8344622 -1.772919717  0.5322905  0.8750786 #> [1569,]  0.5392253  0.4981635  0.8693859 -1.169488811 -1.7030811 -1.0987178 #> [1570,]  0.5790983  0.5996541  0.9329939 -0.571212621  0.6952803 -1.0268166 #> [1571,]  0.5638724  0.5595309 -1.1004611 -0.746495178  0.6527510  0.9495745 #> [1572,]  0.9236342 -0.4955810  1.4810165 -0.005251733 -0.4759249 -0.6593894 #> [1573,]  0.5002070  0.4098117  0.8070950  0.402113460  0.4914599  0.8475517 #> [1574,]  0.6605790  0.8443147  1.0628417 -0.152240318  0.9497284  1.1034378 #> [1575,]  0.5698491  0.5750770 -1.0890362 -0.671479625  0.6692605 -1.0426216 #> [1576,]  0.4323468  0.2805489  0.6986385  0.092972982 -2.8741460  0.7380665 #> [1577,]  0.7092779 -0.9844684 -0.8769093 -0.074514287 -0.8896507  1.1804711 #> [1578,] -1.3632473  1.1085877 -0.8481929 -0.053149613 -0.8215073 -0.8205117 #> [1579,] -1.5056326 -1.1678077 -0.9358349 -0.144165955 -1.0394863 -0.9016059 #> [1580,]  0.4787423  0.3656575  0.7728065  0.258833822  0.4429595  0.8130082 #> [1581,]  0.5831999  0.6107562  0.9395346  1.879275448  0.7070030  0.9804267 #> [1582,]  0.6110078  0.6893632  0.9838658 -0.333285862 -1.2666492  1.0247244 #> [1583,]  0.7190511 -0.9500660  1.1559208 -0.064944411  1.1610744 -0.8361921 #> [1584,] -1.3874821  1.0589584  1.1585922 -0.063440705  1.1675070 -0.8343440 #> [1585,]  0.5670668  0.5678074 -1.0943249 -0.705315839  0.6615454  0.9546775 #> [1586,] -0.9920616 -0.3948617 -0.6192495 -0.002182734 -0.3869095 -0.6069141 #> [1587,]  0.4132435  0.2494571 -1.4968340  0.059050250  0.3126061  0.7070917 #> [1588,] -1.6897568  0.6344458  0.9532489 -0.459349690 -1.3662058  0.9941397 #> [1589,]  0.8803116 -0.5614920 -0.7080942 -0.008508764 -0.5332900 -0.6901376 #> [1590,] -1.5349577  0.8144304  1.0483559 -0.174988449  0.9190422  1.0890190 #> [1591,]  0.6371563  0.7686909 -0.9751029 -0.218783901 -1.1469464 -0.9378361 #> [1592,] -1.1113361 -0.5304004 -0.6928989 -0.006827498 -0.5063086 -0.6759360 #> [1593,]  0.4276254  0.2726550  0.6910864  0.083263885  0.3389956 -1.3690797 #> [1594,] -1.3684454 -0.9110161 -0.8513941 -0.055220715  1.2063493  1.2143591 #> [1595,] -1.3009050  1.2520152 -0.8097907 -0.033212783 -0.7352798  1.2740950 #> [1596,] -1.7514951  0.5779450 -1.0869750 -0.658694116  0.6723018 -1.0407301 #> [1597,] -2.0901127  0.3650639 -1.2947857  0.257213816  0.4423040  0.8125262 #> [1598,]  0.6423195  0.7849869 -0.9673441 -0.201747291  0.8887109  1.0744803 #> [1599,]  0.5950921  0.6436570  0.9584957 -0.434462417  0.7416334  0.9993839 #> [1600,]  0.7640333 -0.8114427  1.2274731 -0.035305645  1.3405661 -0.7894141 #> [1601,] -1.8633984  0.4920123  0.8652822  0.814989240 -1.7224762  0.9060337 #> [1602,] -1.8289917  0.5164330 -1.1345685  0.982769828 -1.6480822  0.9221961 #> [1603,] -1.7089302  0.6161098  0.9426623 -0.514472868  0.7126490  0.9835549 #> [1604,]  0.5120534  0.4355184 -1.2106358 -1.965825678  0.5194809 -1.1539571 #> [1605,]  0.5228658  0.4598269 -1.1858535  0.627492682  0.5458432 -1.1313059 #> [1606,]  0.7831107  1.3139596  1.2578061 -0.027558714 -0.7036199  1.2967516 #> [1607,]  0.6128245 -1.4394631  0.9867613 -0.323493630  0.7950568  1.0276148 #> [1608,]  0.7008395  0.9846638  1.1269391 -0.084032847 -0.9152358 -0.8567930 #> [1609,]  0.4448283  0.3020892  0.7185991  0.123739361  0.3721961  0.7582664 #> [1610,]  0.5668407 -1.7629872 -1.0947570 -0.708147098  0.6609206 -1.0478706 #> [1611,]  0.6645173  0.8574608  1.0691134 -0.143416658  0.9631967 -0.9011622 #> [1612,]  0.7146144  1.0357613 -0.8704273 -0.069110001 -0.8739923 -0.8411165 #> [1613,]  0.6478214 -1.2459762  1.0425224 -0.185183194 -1.1027182 -0.9231820 #> [1614,]  0.8233620  1.4967895 -0.7565551 -0.016657675  1.6004003 -0.7353461 #> [1615,]  0.6138527  0.6977372 -1.0117361 -0.318091891 -1.2527865 -0.9715808 #> [1616,]  0.5321264  0.4812959 -1.1654247  0.748502370 -1.7573968  0.8987802 #> [1617,]  0.6998725 -1.0192264  1.1254000 -0.085206413 -0.9182343  1.1656151 #> [1618,]  0.7196246 -0.9480990  1.1568334 -0.064426358 -0.8596460  1.1968024 #> [1619,]  0.8054260  1.4135100  1.2932778 -0.020782187 -0.6583106  1.3317832 #> [1620,]  0.6262504  0.7349587 -0.9919093 -0.260212652  0.8369404 -0.9533238 #> [1621,]  0.5517231  0.5287331 -1.1244441  1.076356166 -1.6131023  0.9301533 #> [1622,]  0.6114506 -1.4478852  0.9845715 -0.330869460  0.7908406 -0.9752017 #> [1623,]  0.7317695 -0.9077407 -0.8502271 -0.054457435  1.2103159  1.2159566 #> [1624,] -1.6464594  0.6787283  0.9780579 -0.353924088  0.7783764  1.0189257 #> [1625,]  0.8267256  1.5127350 -0.7535083 -0.015989314 -0.6188380 -0.7325074 #> [1626,]  0.8413966 -0.6315109 -0.7405025 -0.013399742 -0.5935804  1.3881474 #> [1627,]  0.8142989 -0.6875964 -0.7648892 -0.018616494 -0.6414443 -0.7431086 #> [1628,]  0.6232597  0.7258707 -0.9966203 -0.273030118  0.8275029 -0.9576632 #> [1629,]  0.5083232  0.4273201  0.8200561  0.472673435 -1.9586304 -1.1619892 #> [1630,] -1.9447892  0.4402677  0.8294309  0.530466391  0.5246415 -1.1493979 #> [1631,] -1.2586054 -0.7329530  1.2759594 -0.023829066 -0.6798982 -0.7606387 #> [1632,]  0.4242308 -3.7444065  0.6856562  0.076858273  0.3326554 -1.3794706 #> [1633,] -1.3274905  1.1878820  1.2104055 -0.040696276 -0.7713758 -0.8000802 #> [1634,] -1.2944772 -0.7884951 -0.8058302 -0.031600779  1.3760792 -0.7811912 #> [1635,] -1.0244362 -0.4292342  1.5643366 -0.003013585 -0.4174914 -0.6256887 #> [1636,]  0.5960974 -1.5468218  0.9600983 -0.427159006 -1.3429945 -0.9990156 #> [1637,] -1.1626457 -0.5964218  1.3801553 -0.010743679  1.7747958 -0.7055087 #> [1638,]  0.4897971  0.3880111 -1.2650738  0.325541279  0.4675745  0.8308085 #> [1639,]  0.4332023  0.2819941  0.7000068  0.094837478  0.3495626  0.7394520 #> [1640,]  0.3843144  0.2065715  0.6217679  0.028485671  0.2632263 -1.5150512 #> [1641,]  0.5627321  0.5565946  0.9068911 -0.761829115  0.6496283  0.9477526 #> [1642,]  0.5102069  0.4314481  0.8230639  0.490564618  0.5150542  0.8636184 #> [1643,]  0.5204664  0.4543624  0.8394442  0.599162377  0.5399280  0.8800855 #> [1644,]  0.4682885  0.3452649  0.7561017  0.207353594  0.4203874  0.7961562 #> [1645,]  0.5646736 -1.7806275 -1.0989155  1.358835900  0.6549504  0.9508546 #> [1646,] -1.6058235  0.7242787  1.0025525 -0.275356555 -1.2108757 -0.9584309 #> [1647,]  0.8251523 -0.6643354 -0.7549303 -0.016298190 -0.6216368 -0.7338324 #> [1648,] -1.4433761  0.9556457  1.1141748 10.601025290 -0.9405312 -0.8661990 #> [1649,]  0.4605636  0.3306557 -1.3445286  0.175449134  0.4041444  0.7836910 #> [1650,]  0.6313104  0.7504936  1.0162191 -0.240006872 -1.1722659  1.0570007 #> [1651,]  0.9236342 -0.4955810  1.4810165 -0.005251733 -0.4759249 -0.6593894 #> [1652,]  0.7549594 -0.8370364 -0.8243731 -0.039807206 -0.7673677  1.2524850 #> [1653,]  0.7288333  1.0901834  1.1714849 -0.056701737  1.1988426  1.2113272 #> [1654,]  0.3739431  0.1923927  0.6051572  0.021641426  0.2467080  0.6431329 #> [1655,]  0.6546294  0.8246911 -0.9493376 -0.166723693 -1.0757439 -0.9140710 #> [1656,]  0.8449189 -0.6246909  1.3560299 -0.012849110 -0.5877351 -0.7175352 #> [1657,] -1.0244362 -0.4292342  1.5643366 -0.003013585 -0.4174914 -0.6256887 #> [1658,] -1.1453760  1.7431693 -0.7139026 -0.009244233 -0.5438198 -0.6955628 #> [1659,]  0.4660032  0.3409025 -1.3289931  0.197410831 -2.4064865  0.7924697 #> [1660,]  0.8462505  1.6073576 -0.7362983 -0.012647464 -0.5855466 -0.7164639 #> [1661,]  0.4332903  0.2821431  0.7001476  0.095031256 -2.8593412  0.7395946 #> [1662,]  0.6879383 -1.0658233 -0.9038292 -0.101274117  1.0455667 -0.8720295 #> [1663,]  0.8638562 -0.5897174  1.3861096 -0.010284434 -0.5576696  1.4232776 #> [1664,]  0.4285137  0.2741297 -1.4440279  0.085017741  0.3406663 -1.3663869 #> [1665,] -1.1113361 -0.5304004 -0.6928989 -0.006827498 -0.5063086 -0.6759360 #> [1666,]  0.7690670 -0.7977103  1.2354774 -0.033052051 -0.7344390  1.2746789 #> [1667,]  0.5785739  0.5982437  0.9321577 -0.576434218 -1.4413590 -1.0276995 #> [1668,]  0.6230002 -1.3791475 -0.9970311 -0.274174283 -1.2096475  1.0437961 #> [1669,]  0.9235813 -0.4956547 -0.6752501 -0.005254752 -0.4759894 -0.6594252 #> [1670,] -1.2640522 -0.7412262 -0.7870811 -0.024885403 -0.6868892  1.3093096 #> [1671,] -2.1827997  0.3261286  0.7398608  0.166346765  0.3990982  0.7797574 #> [1672,]  0.7790991 -0.7712860 -0.7990870 -0.029017694 -0.7122328  1.2904485 #> [1673,]  0.5058813  0.4220050  0.8161568  0.450354981  0.5047697 -1.1673100 #> [1674,]  0.4626423  0.3345488 -1.3385488  0.183567518  0.4084789  0.7870463 #> [1675,]  0.8104709 -0.6960695  1.3012956 -0.019518786  1.5416766  1.3396960 #> [1676,]  0.7622224 -0.8164630  1.2245935 -0.036157272  1.3330513  1.2639137 #> [1677,]  0.9337163 -0.4817919 -0.6679950 -0.004709159 -0.4638407 -0.6526326 #> [1678,]  0.4525559  0.3159199  0.7309544  0.147109039 -2.5793399 -1.2974238 #> [1679,] -1.2767166  1.3146071 -0.7948859 -0.027506291 -0.7033040  1.2969848 #> [1680,]  0.6075306  0.6792127  0.9783237 -0.352949684  0.7788826  1.0191911 #> [1681,]  0.8233620  1.4967895 -0.7565551 -0.016657675  1.6004003 -0.7353461 #> [1682,] -1.8954324  0.4706901 -1.1753557  0.686747013  0.5575840  0.8915000 #> [1683,]  0.4174671  0.2561383  0.6748349  0.065400382  0.3202280  0.7139462 #> [1684,]  0.5726050  0.5823340 -1.0838480 -0.639715378  0.6769535 -1.0378602 #> [1685,]  0.6529067  0.8190621 -0.9518168 -0.171195320  0.9238046 -0.9163589 #> [1686,]  0.9222298 -0.4975450 -0.6762297 -0.005332619 -0.4776436 -0.6603420 #> [1687,]  0.4201565  0.2604494  0.6791379  0.069757811  0.3251367  0.7183090 #> [1688,]  0.5582645 -1.8342501  0.8997643 -0.825330694  0.6374768  0.9406128 #> [1689,] -1.6392404 -1.4566118 -1.0179971 -0.338642651  0.7865213 -0.9773429 #> [1690,]  0.4396128  0.2929691 -1.4079369  0.109915610  0.3619411 -1.3336368 #> [1691,] -2.2241634  0.3105975  0.7262402  0.137760168  0.3817386  0.7659930 #> [1692,]  0.6169200  0.7068355  0.9932884 -0.302558621 -1.2380809  1.0341291 #> [1693,] -1.1453760  1.7431693 -0.7139026 -0.009244233 -0.5438198 -0.6955628 #> [1694,]  0.4434865  0.2997265  0.7164536  0.120041036  0.3695420  0.7560963 #> [1695,] -2.2446773 -3.2973549 -1.3895248  0.125624400  0.3735257 -1.3169157 #> [1696,]  0.6835098 -1.0838656  1.0993538 -0.108061478  1.0296921  1.1397455 #> [1697,]  0.3892313  0.2135112  0.6296411  0.032365511  0.2712742 -1.4968883 #> [1698,] -1.0821824 -0.4949896 -0.6749049 -0.005227554 -0.4754072  1.5172157 #> [1699,] -1.6800369  0.6440307  0.9587076 -0.433488907 -1.3476618  0.9995956 #> [1700,]  0.4048043  0.2364311  0.6545711  0.047997033  0.2976936  0.6933849 #> [1701,] -2.1184843 -2.8369452  0.7620899  0.224635430  0.4283999  0.8021989 #> [1702,]  0.4777676  0.3637257  0.7712492  0.253589368  0.4408261  0.8114378 #> [1703,]  0.6019085 -1.5083046 -1.0316063 -0.387497888  0.7619156 -0.9898629 #> [1704,]  0.4389271  0.2917828  0.7091625  0.108205618  0.3606051  0.7487197 #> [1705,]  0.5176030  0.4478937 -1.1977872  0.566864135  0.5329176  0.8754913 #> [1706,]  0.6012586  0.6611369  0.9683260 -0.391725884  0.7599681 -0.9908780 #> [1707,]  0.7018406 -1.0118141 -0.8861066 -0.082836604  1.0963156 -0.8556335 #> [1708,]  0.4713777  0.3512163 -1.3139939  0.221510338  0.4269867  0.8011381 #> [1709,]  0.6546007 -1.2127133 -0.9493787 -0.166797052 -1.0758555  1.0939615 #> [1710,]  0.5932051  0.6383653 -1.0465865 -0.448546070 -1.3585584 -1.0036361 #> [1711,]  0.5449292  0.5119763  0.8784881 -1.052190648  0.6019916  0.9192833 #> [1712,] -1.5525226 -1.2647075  1.0366153 -0.196175331  0.8946006  1.0773265 #> [1713,]  0.8886514 -0.5478980 -0.7015162 -0.007739876  1.9175095 -0.6839914 #> [1714,]  0.5899086  0.6291856  0.9502314 -0.474368818  0.7264211 -1.0089562 #> [1715,] -2.2096088  0.3159433  0.7309750  0.147151086  0.3877222  0.7707790 #> [1716,]  0.4975003  0.4040727  0.8027721  0.380784728  0.4851832 -1.1859583 #> [1717,]  0.7737520 -0.7852166  1.2429268 -0.031096028 -0.7239479 -0.7800040 #> [1718,]  0.7474773 -0.8589888  1.2011429 -0.043995697 -0.7856891  1.2407056 #> [1719,] -1.0225135 -0.4271434 -0.6380611 -0.002957254 -0.4156376  1.6010898 #> [1720,]  0.4537144  0.3180261  0.7328064  0.150935517  0.3900512 -1.2942808 #> [1721,]  0.5921812  0.6355055 -1.0483775 -0.456396625  0.7330684 -1.0052823 #> [1722,]  0.4736151  0.3555659  0.7646140  0.232301043 -2.3158675  0.8047454 #> [1723,]  0.6380840  0.7716034 -0.9736996 -0.215609761  0.8748907  1.0677572 #> [1724,]  0.5737857 -1.7080586 -1.0816405  1.595873606 -1.4700159  0.9654056 #> [1725,]  0.4297214  0.2761424  0.6944393  0.087455465  0.3429452  0.7338139 #> [1726,]  0.6271528  0.7377147 -0.9904965 -0.256476023 -1.1907593 -0.9520223 #> [1727,] -1.9388218  0.4437986  0.8319578 -1.827831802  0.5284750  0.8725611 #> [1728,] -2.0882691  0.3659022  0.7730034  0.259503730  0.4432296  0.8132067 #> [1729,]  0.9235813 -0.4956547 -0.6752501 -0.005254752 -0.4759894 -0.6594252 #> [1730,] -1.7003078  0.6242635 -1.0555274 -0.488986729 -1.3865012  0.9882862 #> [1731,] -1.0262747 -0.4312393 -0.6403842 -0.003068354 -0.4192686 -0.6267540 #> [1732,] -1.7473800  0.5814894  0.9221288 -0.643313478  0.6760586 -1.0384102 #> [1733,]  0.6081445  0.6809980 -1.0211353 -0.349387379 -1.2808225 -0.9802306 #> [1734,] -1.8378979  0.5099535 -1.1400368  0.935969082  0.5998235 -1.0893770 #> [1735,]  0.5584201  0.5455769  0.9000125 -0.823023868  0.6378978 -1.0628557 #> [1736,]  0.6529792  0.8192986 -0.9517122 -0.171004432 -1.0821952 -0.9162624 #> [1737,]  0.6603149 -1.1856244  1.0624210 -0.152853124  0.9488290  1.1030192 #> [1738,] -1.7844197 -1.8160847 -1.1071978 -0.794189703  0.6432858  0.9440360 #> [1739,]  0.7551486  1.1954694  1.2133439 -0.039707155  1.3039298 -0.7982230 #> [1740,] -1.2684930 -0.7480136 -0.7898179 -0.025777618 -0.6926195 -0.7663066 #> [1741,]  0.8265983 -0.6613190  1.3269232 -0.016014064 -0.6190637 -0.7326144 #> [1742,] -1.1236352 -0.5457928  1.4275751 -0.007625583 -0.5196832 -0.6830309 #> [1743,] -1.4055947 -0.9767013 -0.8742682 -0.072267966  1.1321808  1.1838890 #> [1744,]  0.6082958  0.6814383 -1.0208840 -0.348515608  0.7812085 -0.9799993 #> [1745,]  0.8909559 -0.5442222 -0.6997202 -0.007541131 -0.5183200  1.4656034 #> [1746,]  0.5540589  0.5345710 -1.1197520 -0.890460994  0.6261589 -1.0707912 #> [1747,] -1.4925751  0.8759130 -0.9278013 -0.132088926  0.9820702 -0.8941861 #> [1748,]  0.5891856  0.6271834  0.9490788  2.082257956 -1.3806169  0.9899709 #> [1749,]  0.5718923 -1.7227955  0.9215019 -0.647768212 -1.4815711 -1.0390872 #> [1750,]  0.6275164 -1.3534969 -0.9899284  3.921766151  0.8409542 -0.9514989 #> [1751,] -1.1096808 -0.5283493  1.4453429 -0.006726033 -0.5045238  1.4815236 #> [1752,]  0.7945970 -0.7327929  1.2760656 -0.023808947 -0.6797628  1.3147896 #> [1753,] -0.9763456 -0.3788081 -0.6095387 -0.001859265 -0.3725465 -0.5977888 #> [1754,]  0.4729871 -2.8221348  0.7636105  0.229225472  0.4304484  0.8037330 #> [1755,]  0.6431528 -1.2696210 -0.9661036 -0.199137077 -1.1217747  1.0758028 #> [1756,]  0.4457924  0.3037939  0.7201406  0.126459691  0.3741100  0.7598255 #> [1757,]  0.8935413 -0.5401386 -0.6977162 -0.007324804 -0.5147742 -0.6804397 #> [1758,]  0.4247130 -3.7333681 -1.4568181  0.077740175  0.3335517  0.7256973 #> [1759,]  0.4710175 -2.8529110  0.7604630  0.219816136  0.4262142  0.8005574 #> [1760,] -1.2732963  1.3238055  1.2613870 -0.026775021 -0.6988487  1.3002899 #> [1761,]  0.5096759 -2.3240578  0.8222160  0.485459998  0.5137851  0.8627656 #> [1762,] -2.2983233  0.2852158 -1.4223908  0.099093637  0.3532007 -1.3467569 #> [1763,] -1.3205331 -0.8304145  1.2167176 -0.038603945 -0.7618328  1.2561213 #> [1764,]  0.4288392  0.2746711  0.6930280  0.085668515 -2.9301495  0.7323845 #> [1765,]  0.6909172  0.9488380  1.1111456 -0.096972908  1.0563237 -0.8684623 #> [1766,]  0.4532112  0.3171102  0.7320020  0.149262516  0.3890272  0.7718169 #> [1767,] -1.1650955 -0.5996938 -0.7260673 -0.010973245 -0.5662617  1.4145893 #> [1768,]  0.4248850  0.2681368 -1.4562343  0.078057060  0.3338719 -1.3774556 #> [1769,]  0.6974246 -1.0285510 -0.8916599 -0.088258521 -0.9258877  1.1617470 #> [1770,] -1.7256842  0.6006828  0.9336031 -0.567441411 -1.4360237 -1.0261743 #> [1771,]  0.6295603  0.7450980 -0.9867473 -0.246793192  0.8474574  1.0542207 #> [1772,]  0.6123835  0.6934048  0.9860584 -0.325841255  0.7937021 -0.9737921 #> [1773,]  0.6690727  0.8728229  1.0763674 -0.133905275 -1.0215422 -0.8953403 #> [1774,]  0.4885143 -2.5948728  0.7884186  0.317078271  0.4646788  0.8287441 #> [1775,]  0.6025952 -1.5038411 -1.0304427 -0.383085175 -1.3089409 -0.9887926 #> [1776,]  0.4759223 -2.7771186  0.7683007  0.243921152  0.4368032  0.8084641 #> [1777,]  0.5371563  0.4932104  0.8660840 -1.215531882  0.5818479  0.9068383 #> [1778,]  0.5875876 -1.6057255 -1.0564897  2.026220756  0.7196686 -1.0127369 #> [1779,] -1.6029994  0.7276000 -0.9957176 -0.270530873  0.8292995  1.0451159 #> [1780,]  0.6306327  0.7484014  1.0151393 -0.242610135 -1.1752524 -0.9470376 #> [1781,]  0.5414884  0.5036162 -1.1454787  0.891813531  0.5930259 -1.0943607 #> [1782,]  0.4533859  0.3174280 -1.3655955  0.149841532  0.3893826  0.7720992 #> [1783,]  0.4702224 -2.8654669  0.7591923  0.216117253  0.4245118  0.7992752 #> [1784,] -2.1763940  0.3286294 -1.3476796  0.171330477  0.4018865  0.7819346 #> [1785,]  0.4079905  0.2412985  0.6596704  0.051929531  0.3032742 -1.4315133 #> [1786,]  0.5408990 -1.9912684  0.8720569  0.882110384  0.5914977 -1.0954921 #> [1787,]  0.5554613  0.5380950  0.8952922 -0.868135882  0.6299198  0.9361312 #> [1788,]  0.4552188  0.3207743 -1.3601529  0.156038599  0.3931220  0.7750602 #> [1789,]  0.6457297 -1.2564937 -0.9622874 -0.191297328  0.8999291 -0.9260188 #> [1790,] -1.3632499 -0.9020532 -0.8481946 -0.053150651 -0.8215111  1.2187494 #> [1791,]  0.8405157 -0.6332327 -0.7412707 -0.013541479 -0.5950553  1.3867685 #> [1792,]  0.6690805 -1.1456733  1.0763798 -0.133889679 -1.0215142 -0.8953305 #> [1793,]  0.8826563 -0.5576233 -0.7062323 -0.008284437 -0.5299401  1.4526477 #> [1794,]  0.4434719  0.2997007 -1.3958094  0.120001258  0.3695132  0.7560727 #> [1795,] -1.3679724  1.0986623  1.1749462 -0.055029295  1.2073376 -0.8232096 #> [1796,]  0.4481371  0.3079647 -1.3814259  0.133301990  0.3787883 -1.3095578 #> [1797,]  0.3739431  0.1923927  0.6051572  0.021641426  0.2467080  0.6431329 #> [1798,] -1.2191917 -0.6747786  1.3167811 -0.017310773 -0.6305369 -0.7380221 #> [1799,] -1.9480547  0.4383521  0.8280548  0.521602355  0.5225606 -1.1512287 #> [1800,]  0.8104709 -0.6960695  1.3012956 -0.019518786  1.5416766  1.3396960 #> [1801,]  0.3855853  0.2083517  0.6238030  0.029446115  0.2652931  0.6621143 #> [1802,]  0.6803492  0.9115757 -0.9138078 -0.113211113 -0.9818859 -0.8812554 #> [1803,]  0.4520499  0.3150026 -1.3695900  0.145465274  0.3866700 -1.2988015 #> [1804,] -2.0439557  0.3868803  0.7895897  0.321890293  0.4663324 -1.2049298 #> [1805,]  0.4630166  0.3352528  0.7476760  0.185064806  0.4092623  0.7876505 #> [1806,]  0.4936602  0.3960158  0.7966385  0.352271237  0.4763582  0.8370240 #> [1807,]  0.4573471  0.3246870  0.7386137  0.163523184  0.3974900 -1.2845255 #> [1808,]  0.5315123  0.4798537 -1.1667573  0.739871848 -1.7622102  0.8977963 #> [1809,]  0.7004113  0.9831007 -0.8878964 -0.084550331  1.0910338 -0.8572900 #> [1810,]  0.5247855  0.4642279  0.8463390  0.651021496  0.5506027  0.8870129 #> [1811,]  0.6017556  0.6625583  0.9691183 -0.388488118  0.7614571  1.0099975 #> [1812,] -2.5002155  0.2291553 -1.5460109  0.042535949  0.2893326  0.6855191 #> [1813,]  0.5607009  0.5513879 -1.1066219 -0.790007626  0.6440873  0.9445069 #> [1814,] -2.1484247  0.3398656 -1.3305357  0.195100538  0.4143915 -1.2632818 #> [1815,] -1.0786463 -0.4907965 -0.6727221 -0.005058492 -0.4717354 -0.6570586 #> [1816,]  0.8289464 -0.6564611 -0.7515102 -0.015564230  1.6262338 -0.7306455 #> [1817,] -1.2106849  1.5091856 -0.7541826 -0.016135126 -0.6201643  1.3640038 #> [1818,] -1.4847806  0.8879149 -0.9230054 -0.125321664  0.9943273  1.1239045 #> [1819,]  0.7202765  1.0572275 -0.8636543 -0.063843039 -0.8578039 -0.8348423 #> [1820,]  0.5043722  0.4187407 -1.2288834  0.437041362  0.5012099 -1.1706232 #> [1821,]  0.6540748  0.8228764 -0.9501343 -0.168149042 -1.0779059  1.0931276 #> [1822,]  0.6486853  0.8053684 -0.9579476 -0.182720890 -1.0992424  1.0845804 #> [1823,]  0.4491999  0.3098667  0.7255890  0.136511689 -2.6252243 -1.3066181 #> [1824,] -1.1308781 -0.5549844 -0.7049577 -0.008133956 -0.5276539 -0.6872073 #> [1825,] -1.6203390  0.7075349  0.9936626 -0.301404511  0.8084300  1.0345025 #> [1826,] -1.9388218  0.4437986  0.8319578 -1.827831802  0.5284750  0.8725611 #> [1827,]  0.4036731  0.2347176 -1.5319554  0.046666697  0.2957266 -1.4460345 #> [1828,] -1.6020986 -1.3723750 -0.9951638 -0.269007762 -1.2042323 -0.9563216 #> [1829,]  0.6329256  0.7554947 -0.9815541 -0.233925244 -1.1651913  1.0595662 #> [1830,]  0.6786777 -1.1040382 -0.9160355 -0.116043244  1.0125306 -0.8833144 #> [1831,]  0.6927471 -1.0466996 -0.8976189 -0.094430389  1.0629635 -0.8662856 #> [1832,]  0.7169524  1.0445922 -0.8676177 -0.066879385  1.1530626 -0.8385141 #> [1833,]  0.9251076 -0.4935319 -0.6741474 -0.005168316 -0.4741311  1.5188498 #> [1834,] -1.3878685 -0.9450078 -0.8633543 -0.063618379 -0.8570910  1.1982299 #> [1835,]  0.6276840  0.7393398 -0.9896669  3.932297576 -1.1883735  1.0512396 #> [1836,]  0.6785613 -1.1045303  1.0914755 -0.116243272  1.0121194  1.1319156 #> [1837,] -1.2302047  1.4477309 -0.7662173 -0.018947147 -0.6441132 -0.7443453 #> [1838,]  0.7589479 -0.8256508  1.2193861 -0.037755158 -0.7578487 -0.7944315 #> [1839,]  0.6557094  0.8282322 -0.9477898 -0.163985850 -1.0715512 -0.9126426 #> [1840,]  0.3855853  0.2083517  0.6238030  0.029446115  0.2652931  0.6621143 #> [1841,]  0.6719795 -1.1328704 -0.9250728 -0.128199581  0.9890171 -0.8916655 #> [1842,]  0.7772878  1.2887159 -0.8009300 -0.029704077 -0.7161708  1.2876022 #> [1843,]  0.3998315  0.2289558  0.6466115  0.042393019  0.2891030  0.6853012 #> [1844,] -1.0839644 -0.4971109 -0.6760049 -0.005314663 -0.4772638 -0.6601317 #> [1845,]  0.5181271  0.4490733  0.8357095  0.572655475  0.5341967  0.8763322 #> [1846,]  0.5473846  0.5179941  0.8824060  0.994300102 -1.6435546  0.9232126 #> [1847,]  0.7194743 -0.9486140 -0.8646075 -0.064561692  1.1626940 -0.8357254 #> [1848,]  0.4633365  0.3358551  0.7481873  0.186353107  0.4099324  0.7881667 #> [1849,] -2.0821773  0.3686912 -1.2899199  0.267231506  0.4463077 -1.2262961 #> [1850,]  0.5833429 -1.6362720 -1.0640986  1.883907227 -1.4136003  0.9806547 #> [1851,] -1.2282656  1.4536790 -0.7650219 -0.018649302 -0.6417107 -0.7432322 #> [1852,]  0.5197669  0.4527769 -1.1928513  0.591123195  0.5382106  0.8789633 #> [1853,]  0.8343567 -0.6454540 -0.7466865 -0.014579701 -0.6055136  1.3771261 #> [1854,] -1.3914719  1.0510842 -0.8655731 -0.065297133 -0.8623722  1.1952858 #> [1855,]  0.5400841  0.5002283  0.8707564  0.868852032  0.5893888 -1.0970602 #> [1856,]  0.5484745  0.5206791 -1.1310362 -0.985838580  0.6113110 -1.0811320 #> [1857,]  0.6189969  0.7130373  0.9965982  3.418626342  0.8141581  1.0374318 #> [1858,]  0.5228420  0.4597724  0.8432365  0.627205362  0.5457843 -1.1313548 #> [1859,] -1.0225135 -0.4271434 -0.6380611 -0.002957254 -0.4156376  1.6010898 #> [1860,] -2.3280460  0.2758474 -1.4405970  0.087094983  0.3426113  0.7335277 #> [1861,]  0.6408251 -1.2816429  1.0313776 -0.206523284  0.8838203 -0.9327415 #> [1862,]  0.5792081  0.5999496  0.9331690 -0.570125828  0.6955926  0.9740590 #> [1863,]  0.4801469 -2.7140531  0.7750509  0.266563919  0.4460445 -1.2265859 #> [1864,]  0.5742217  0.5866171 -1.0808276 -0.621853297 -1.4673730 -1.0350878 #> [1865,]  0.5316284  0.4801260  0.8572615 -1.348624951 -1.7612991 -1.1136078 #> [1866,] -1.2271751 -0.6863234 -0.7643496 -0.018483654  1.5616172 -0.7426061 #> [1867,]  0.8724245 -0.5747815 -0.7144301 -0.009313783 -0.5447820  1.4366672 #> [1868,]  0.3898606  0.2144096 -1.5856689  0.032894950  0.2723143  0.6690772 #> [1869,] -1.0805887 -0.4930971 -0.6739211 -0.005150740 -0.4737503  1.5193386 #> [1870,]  0.5836274  0.6119204 -1.0635851 -0.528218113  0.7082312  0.9811085 #> [1871,]  0.6012118 -1.5128518  0.9682515 -0.392031914  0.7598281 -0.9909511 #> [1872,]  0.8528009 -0.6097944 -0.7307002 -0.011704889  1.7392880 -0.7112419 #> [1873,]  0.7883897 -0.7478838  1.2661983 -0.025760337 -0.6925100 -0.7662581 #> [1874,] -1.2298400 -0.6902040  1.3054958 -0.018890807 -0.6436609  1.3438404 #> [1875,]  0.5230052  0.4601456  0.8434970  0.629174970  0.5461880 -1.1310198 #> [1876,] -1.0407682 -0.4472481 -0.6493351 -0.003532482 -0.4334312 -0.6351484 #> [1877,] -1.2347008 -0.6973170  1.3004086 -0.019654317  1.5391626  1.3388207 #> [1878,]  0.5958408  0.6457640 -1.0420039 -0.429009876  0.7438458  1.0005767 #> [1879,] -1.1582341 -0.5905574 -0.7218348 -0.010341159  1.7908518 -0.7029687 #> [1880,] -1.6397532  0.6859669  0.9820171 -0.339708056  0.7859388 -0.9776329 #> [1881,]  0.5183921  0.4496705 -1.1959826  0.575603986 -1.8697037 -1.1405664 #> [1882,]  0.5838657  0.6125700 -1.0631555 -0.526056951 -1.4106037  0.9814885 #> [1883,]  0.5969044 -1.5413920  0.9613848 -0.421393511 -1.3386971  1.0022710 #> [1884,]  0.4736144  0.3555645  0.7646129  0.232297452  0.4318021  0.8047443 #> [1885,]  0.6062780  0.6755787 -1.0242469 -0.360343069  0.7750837  1.0171974 #> [1886,] -1.8294699  0.5160822  0.8811643 -1.020207613  0.6063902 -1.0846370 #> [1887,]  0.8032928 -0.7123524 -0.7752616 -0.021343245 -0.6624596 -0.7527646 #> [1888,]  0.6385307 -1.2936471  1.0277225 -0.214099339  0.8763425  1.0684665 #> [1889,]  0.8164845 -0.6828226  1.3108521 -0.018121965 -0.6373841 -0.7412213 #> [1890,]  0.7338526  1.1098056 -0.8478383 -0.052924559 -0.8206855 -0.8201830 #> [1891,] -2.5965584  0.2077061  0.6230662  0.029095061  0.2645437  0.6613646 #> [1892,]  0.6126109 -1.4407682 -1.0137662 -0.324628581  0.7944003 -0.9734493 #> [1893,]  0.4422827  0.2976164  0.7145287  0.116808128 -2.7235322 -1.3259977 #> [1894,]  0.7354467  1.1160825 -0.8460193 -0.051783540  1.2247731 -0.8184963 #> [1895,] -1.2119155 -0.6643611 -0.7549414 -0.016300620 -0.6216587 -0.7338427 #> [1896,]  0.5365213  0.4916965 -1.1559749  0.812969668 -1.7234844  0.9058214 #> [1897,]  0.5428384  0.5068862 -1.1426589 -1.093613141  0.5965343 -1.0917785 #> [1898,]  0.3855853  0.2083517  0.6238030  0.029446115  0.2652931  0.6621143 #> [1899,]  0.4943382  0.3974310 -1.2535705  0.357160930 -2.0924469  0.8381145 #> [1900,]  0.4676617  0.3440650  0.7551000  0.204582666  0.4190556 -1.2576319 #> [1901,]  0.7738587  1.2739905 -0.8044428 -0.031052995 -0.7237115 -0.7799020 #> [1902,]  0.5573661 -1.8419446  0.8983311 -0.838790687  0.6350493 -1.0647624 #> [1903,] -1.4288265  0.9811456  1.1254041 -0.085203279  1.0890561 -0.8579131 #> [1904,]  0.5668030  0.5671210  0.9133846 -0.708620509  0.6608165 -1.0479367 #> [1905,] -1.2599693 -0.7350193  1.2745922 -0.024089716 -0.6816449  1.3133345 #> [1906,]  0.6216968 -1.3866755 -0.9991001 -0.280003028  0.8225958 -0.9599470 #> [1907,]  0.7398750  1.1336339 -0.8410072 -0.048753351 -0.8049487  1.2287308 #> [1908,]  0.6068610 -1.4765193 -1.0232730 -0.356881178 -1.2872491 -0.9821974 #> [1909,]  0.5681005  0.5705015 -1.0923541  1.443977836  0.6644056  0.9563283 #> [1910,] -1.7302963  0.5965300  0.9311400  1.715678585  0.6919782 -1.0287761 #> [1911,]  0.7964809 -0.7282963  1.2790601 -0.023249313 -0.6759601 -0.7588712 #> [1912,]  0.6188843 -1.4031150  0.9964187 -0.293050516  0.8138071  1.0372526 #> [1913,] -1.1800694  1.6130773  1.3599836 -0.012475038 -0.5836540 -0.7155356 #> [1914,]  0.6149309  0.7009271  0.9901184 -0.312534111 -1.2475892  1.0309655 #> [1915,]  0.8648576 -0.5879443 -0.7206169 -0.010165452 -0.5561412 -0.7018318 #> [1916,] -1.6726318  0.6514680  0.9629086 -0.414675149  0.7498318 -0.9962207 #> [1917,] -2.1754056  0.3290176  0.7423498  0.172114009  0.4023192 -1.2783284 #> [1918,] -2.1316615  0.3468562  0.7574268  0.211071071  0.4221529 -1.2539286 #> [1919,] -2.2912786  0.2875007  0.7051811  0.102196777  0.3557787 -1.3428403 #> [1920,]  0.4607868  0.3310725  0.7441120  0.176305263  0.4046086  0.7840514 #> [1921,]  0.6572699 -1.1999543 -0.9455625 -0.160116928 -1.0655342  1.0981930 #> [1922,]  0.5831033 -1.6380199  0.9393805 -0.533006318  0.7067255  0.9802726 #> [1923,]  0.8908596 -0.5443750  1.4289898 -0.007549317 -0.5184527 -0.6823828 #> [1924,] -2.1207846  0.3514989 -1.3135914  0.222200090  0.4272999 -1.2478577 #> [1925,]  0.7467574  1.1612475 -0.8333348 -0.044423578  1.2698660 -0.8067301 #> [1926,] -2.1149937  0.3540060 -1.3100410  0.228387314  0.4300767  0.8034550 #> [1927,] -1.2309642 -0.6918452  1.3043156 -0.019064984 -0.6450557  1.3426760 #> [1928,] -2.1494850  0.3394300  0.7512100  0.194135981  0.4139074  0.7912185 #> [1929,] -1.4027455 -0.9715636  1.1461133 -0.070809951 -0.8790157 -0.8430493 #> [1930,]  0.4132435  0.2494571 -1.4968340  0.059050250  0.3126061  0.7070917 #> [1931,]  0.5745167  0.5874007 -1.0802783 -0.618653423  0.6823197 -1.0345836 #> [1932,]  0.6812824  0.9148293 -0.9125688 -0.111663055  1.0217608 -0.8801101 #> [1933,]  0.5990734 -1.5269280 -1.0364384 -0.406316867  0.7534414  1.0057260 #> [1934,]  0.7507397 -0.8493203  1.2063318 -0.042112651  1.2859669 -0.8026697 #> [1935,]  0.6892028  0.9427307  1.1084166 -0.099423264 -0.9522676  1.1487497 #> [1936,]  0.7477468 -0.8581843  1.2015716 -0.043836674  1.2738554 -0.8057173 #> [1937,]  0.3985934  0.2271176  0.6446296  0.041092747  0.2869867  0.6832878 #> [1938,]  0.7522621  1.1836285 -0.8272987 -0.041264347 -0.7739019 -0.8011285 #> [1939,]  0.5275775  0.4706749  0.8507957  0.686660972  0.5575676 -1.1217182 #> [1940,]  0.6613627  0.8469206 -0.9397704 -0.150438062 -1.0499794 -0.9052398 #> [1941,]  0.8538638 -0.6078235 -0.7297999 -0.011559364  1.7444276  1.4076538 #> [1942,] -1.3355262 -0.8551439 -0.8311193 -0.043239538 -0.7824832  1.2427389 #> [1943,]  0.8518590 -0.6115485 -0.7314999 -0.011835536  1.7347407 -0.7119880 #> [1944,]  0.8897036 -0.5462153  1.4271544 -0.007648424 -0.5200499 -0.6832239 #> [1945,] -1.0839644 -0.4971109 -0.6760049 -0.005314663 -0.4772638 -0.6601317 #> [1946,] -1.8927164  0.4724478  0.8520147  0.696710253  0.5594814  0.8927137 #> [1947,]  0.6525840  0.8180101  1.0501083 -0.172047695  0.9227232 -0.9167889 #> [1948,]  0.3685330  0.1852413  0.5964905  0.018694451  0.2383360  0.6343021 #> [1949,]  0.4942538  0.3972547  0.7975867  0.356549243 -2.0932929 -1.1933476 #> [1950,]  0.3985934  0.2271176  0.6446296  0.041092747  0.2869867  0.6832878 #> [1951,]  0.5375569  0.4941671 -1.1537707  0.828869120  0.5828764  0.9074800 #> [1952,]  0.5078753 -2.3455342  0.8193409  0.468506557 -1.9627249  0.8598737 #> [1953,] -2.0174153  0.4002490 -1.2502021  0.367047332  0.4809969  0.8402787 #> [1954,] -1.4000685  1.0343919  1.1482824 -0.069464244  1.1427960 -0.8415228 #> [1955,] -2.0519603  0.3829698 -1.2713898  0.309497867 -2.1643406 -1.2094061 #> [1956,]  0.5864975 -1.6134940  0.9447927 -0.502820874  0.7165099  0.9856854 #> [1957,]  0.4936111  0.3959134  0.7965600  0.351919270  0.4762459  0.8369449 #> [1958,]  0.7049556  0.9997657 -0.8822309 -0.079232631  1.1078775  1.1736453 #> [1959,] -1.9606556  0.4310671 -1.2153813  0.488892357  0.5146396 -1.1582924 #> [1960,] -1.5576646 -1.2756239  1.0332281 -0.202800310  0.8876204 -0.9311402 #> [1961,]  0.8265983 -0.6613190  1.3269232 -0.016014064 -0.6190637 -0.7326144 #> [1962,] -1.1842261 -0.6256250 -0.7378666 -0.012923518  1.6991312 -0.7179266 #> [1963,]  0.4332023  0.2819941  0.7000068  0.094837478  0.3495626  0.7394520 #> [1964,]  0.5316749  0.4802353  0.8573358 -1.347439407  0.5678805  0.8980568 #> [1965,]  0.6156989 -1.4220614  0.9913422 -0.308640675 -1.2439061  1.0321869 #> [1966,]  0.5206930  0.4548768  0.8398059  0.601788063  0.5404851 -1.1357841 #> [1967,] -1.7683194 -1.7738010  0.9113201 -0.725080783  0.6572473  0.9521886 #> [1968,]  0.9222298 -0.4975450 -0.6762297 -0.005332619 -0.4776436 -0.6603420 #> [1969,] -0.9763456 -0.3788081 -0.6095387 -0.001859265 -0.3725465 -0.5977888 #> [1970,]  0.5879076 -1.6034544  0.9470411 -0.490837633  0.7205976 -1.0122138 #> [1971,] -1.3331877  1.1747328 -0.8296788 -0.042485043 -0.7792413  1.2448069 #> [1972,]  0.7726116  1.2686610 -0.8057281 -0.031560149 -0.7264819  1.2802519 #> [1973,] -1.8780777  0.4820791 -1.1647033  0.753220193 -1.7547945 -1.1119589 #> [1974,]  0.6489175  0.8061180  1.0442683 -0.182065168 -1.0983107 -0.9217025 #> [1975,] -2.0167518  0.4005913 -1.2497951  0.368262066  0.4813718  0.8405410 #> [1976,]  0.5101332  0.4312862 -1.2151461  0.489853665  0.5148780 -1.1580775 #> [1977,] -1.1046999 -0.5222073 -0.6888034 -0.006428868 -0.4991756  1.4878603 #> [1978,]  0.7043913 -1.0023184 -0.8829305 -0.079872516  1.1057778 -0.8526938 #> [1979,] -1.7637612  0.5675560  0.9136513 -0.706524282 -1.5122225 -1.0476436 #> [1980,]  0.3898606  0.2144096 -1.5856689  0.032894950  0.2723143  0.6690772 #> [1981,]  0.9756933 -0.4297528 -0.6395426 -0.003027680 -0.4179511 -0.6259646 #> [1982,]  0.7793834  1.2977660 -0.7987984 -0.028911541 -0.7116175 -0.7746562 #> [1983,] -1.4015496  1.0315531 -0.8717778 -0.070205895  1.1399372 -0.8423674 #> [1984,] -1.9018144  0.4665957  0.8479802 -1.506143132  0.5531617  0.8886616 #> [1985,]  0.3739431  0.1923927  0.6051572  0.021641426  0.2467080  0.6431329 #> [1986,]  0.6594479 -1.1896804 -0.9424713 -0.154883776 -1.0572162  1.1016451 #> [1987,]  0.7869920  1.3309536 -0.7911540 -0.026223579  1.4379653  1.3028482 #> [1988,]  0.8251765 -0.6642847 -0.7549084 -0.016293383 -0.6215936 -0.7338120 #> [1989,]  0.9125987 -0.5113084 -0.6832931 -0.005925655 -0.4896714 -0.6669518 #> [1990,]  0.5100681  0.4311431 -1.2152997  0.489225713  0.5147223  0.8633955 #> [1991,]  0.7719928  1.2660215 -0.8063673 -0.031815185 -0.7278622 -0.7816903 #> [1992,]  0.7050373  1.0000668 -0.8821298 -0.079140473  1.1081816 -0.8519525 #> [1993,]  0.6519674  0.8160028  1.0491262 -0.173688972  0.9206593 -0.9176114 #> [1994,]  0.6325595  0.7543594  1.0182093 -0.235288599  0.8570527  1.0589848 #> [1995,]  0.4349992  0.2850445  0.7028808  0.098863745  0.3530073 -1.3470524 #> [1996,]  0.4090657  0.2429548  0.6613911  0.053320643  0.3051710  0.7003079 #> [1997,]  0.3898606  0.2144096 -1.5856689  0.032894950  0.2723143  0.6690772 #> [1998,]  0.9756933 -0.4297528 -0.6395426 -0.003027680 -0.4179511 -0.6259646 #> [1999,]  0.6429704  0.7870561 -0.9663748 -0.199705249 -1.1225287 -0.9297886 #> [2000,] -2.0802533  0.3695782  0.7759516  0.269724515  0.4472862 -1.2252211 #>             Item_7      Item_8     Item_9    Item_10      Item_11    Item_12 #>    [1,]  0.8882463  1.53300829  1.0340972 -1.3006837 -4.221110655  0.8580501 #>    [2,]  1.1579284  2.19483934  1.3896675  0.8565120 -1.779545491 -0.9103040 #>    [3,]         NA  1.04993486  0.7571682 -1.4576124  0.095266533 -1.5123649 #>    [4,] -1.2300813 -0.73539823 -1.0673724  0.7415815  0.177524730  0.7900725 #>    [5,] -0.4398654 -0.18281463 -0.3392341  1.1274182 -0.197610543 -0.4854626 #>    [6,]  1.3152764 -0.38344091 -0.6243237 -1.1084752  0.851052677 -0.8083923 #>    [7,] -0.9969919 -0.55337852  1.1840955  0.8078411  0.351963628 -1.0406604 #>    [8,]  0.4914575 -1.45338445  0.5346191 -1.6553079  0.034450196  0.4942913 #>    [9,] -0.7782928 -0.39577697 -0.6408179  0.8935840  0.788602440  1.2103477 #>   [10,]  0.6231005  0.94870712  0.6965197 -1.5027711  0.074639555  0.6166386 #>   [11,]  0.8577287  1.46215374  0.9945742  0.7579550  0.211402565 -1.2040265 #>   [12,] -0.9412375 -0.51191039 -0.7920554  0.8270019  0.424536911 -0.9863245 #>   [13,] -1.2260761  1.36582343 -1.0634993 -1.3466793  0.179420886 -1.2618659 #>   [14,] -0.1974230 -0.06181349 -0.1388960 -0.6400155 -0.014534070 -0.2301148 #>   [15,] -2.3862182  0.55457404  0.4476260  0.5661539  0.020500860  0.4260912 #>   [16,]  0.2337348  0.25162064  0.2334955  0.4463190  0.003060065  0.2472958 #>   [17,] -0.7150526 -0.35288512 -0.5830558  0.9249702  1.039339626 -0.7634720 #>   [18,] -0.3105686 -0.11413166 -0.2301480  1.2991531 -0.063587212 -0.3509903 #>   [19,] -1.1617662  1.46914862  0.9984908  0.7590444  0.213844845  0.8332799 #>   [20,] -0.9218278 -0.49767427 -0.7738712  0.8340512  0.454355311  1.0337437 #>   [21,]  0.2578867  0.28744196  0.2605435  0.4645594  0.004215532  0.2710266 #>   [22,]  1.3024324  2.57355213  1.5843085 -1.1129150 -1.213185784  1.2257627 #>   [23,] -0.9161376 -0.49352068  1.3011540  0.8361576 -2.156969908  1.0397255 #>   [24,] -0.7906664 -0.40431764  1.5333090  0.8878609  0.749103760 -0.8384425 #>   [25,]  1.3076756 -0.38646070 -0.6283699  0.9000129  0.835135173 -0.8127700 #>   [26,]  1.1191296 -0.47712423 -0.7474589  0.8447033  0.502889810 -0.9396779 #>   [27,] -0.2731087 -0.09590662 -0.1994276  1.3689865 -0.041832987 -0.3113705 #>   [28,]  0.4639102  0.63637115  0.5013261 -1.6946641  0.028548277  0.4684230 #>   [29,]  1.0987628 -0.48913408 -0.7629186  0.8384073  0.473683283  1.0461360 #>   [30,]  0.2230610  0.23619446  0.2216418  0.4379014  0.002627849  0.2367557 #>   [31,]  0.6424622 -1.01129975  0.7206867 -1.4841555  0.082463581  0.6344751 #>   [32,]  1.5533262 -0.30613346 -0.5186585  0.9653904 -0.683422824 -0.6923092 #>   [33,]  0.6057260  0.91307846 -1.4816872  0.6578157  0.068070424  0.6006007 #>   [34,] -0.6389180 -0.30300842 -0.5142945  0.9683760 -0.666752372  1.4546809 #>   [35,] -0.4112241 -0.16689051 -0.3147067 -0.8629859 -0.158690582  2.1932729 #>   [36,] -1.8384600 -1.26690355  0.5986260 -1.5882952  0.047942996  0.5433005 #>   [37,] -0.6918983 -0.33750749 -0.5620506 -1.0667164 -0.864313605 -0.7404088 #>   [38,] -0.8496398 -0.44566600  1.4151629  0.8622215  0.592606759 -0.8965731 #>   [39,] -0.9347900 -0.50716985  1.2722481 -1.2058062  0.434150306 -0.9800272 #>   [40,] -0.5331736 -0.23719085 -0.4203653 -0.9592862 -0.369816632 -0.5807788 #>   [41,] -0.4534514 -0.19049891 -0.3509337 -0.8980414 -0.218196217 -0.4994205 #>   [42,] -0.8268421 -0.42955728  1.4587233  0.8718274  0.647511284  1.1439882 #>   [43,]  0.3000299  0.35279795  0.3084267  0.4941040  0.006902373  0.3120811 #>   [44,] -0.3202878 -0.11899273 -0.2381904  1.2829475 -0.070301892 -0.3612152 #>   [45,]  0.7214772 -0.86436089  0.8201566 -1.4156613  0.120328497 -1.4146320 #>   [46,]  0.5908305  0.88281926  0.6564331 -1.5356794  0.062767089  0.5868262 #>   [47,]  0.4932645 -1.44618221  0.5368107  0.6050211  0.034864571  0.4959847 #>   [48,] -0.9200797  2.01451552 -0.7722356  0.8346964  0.457173566 -0.9656483 #>   [49,] -1.4036081 -0.87921878  0.8087259 -1.4229412  0.115492508  0.6986517 #>   [50,] -0.8717888 -0.46146342 -0.7271957 -1.1720167  0.544950754  1.0889289 #>   [51,] -0.6890174 -0.33560676 -0.5594427 -1.0649049  1.172821183 -0.7375357 #>   [52,]  0.7006990 -0.89923471  0.7938724 -1.4326135  0.109401884  0.6879079 #>   [53,]  0.4531838  0.61653693 -2.0474059  0.5844911  0.026453506  0.4583224 #>   [54,]  0.6371562 -1.02271573  0.7140554  0.6715115  0.080265518  0.6295908 #>   [55,]  0.2578867  0.28744196  0.2605435  0.4645594  0.004215532  0.2710266 #>   [56,]  0.7953995 -0.75745238 -1.0936637 -1.3605143  0.165338175  0.7741626 #>   [57,] -0.3916573 -0.15623344 -0.2980618 -0.8460173 -0.135387406  2.2952082 #>   [58,] -0.4106749 -0.16658892 -0.3142382  1.1593985 -0.158001251 -0.4553722 #>   [59,] -0.3652383 -0.14214154 -0.2757396  1.2161175 -0.107838165 -0.4082394 #>   [60,] -0.5902021 -0.27216530 -0.4707807 -0.9998278 -0.514938616  1.5662630 #>   [61,] -0.5451412 -0.24442557  2.3207453 -0.9679996 -0.397550116 -0.5929173 #>   [62,] -1.0027117 -0.55768002 -0.8499288 -1.2407551  0.345465179  0.9558194 #>   [63,] -0.3649537 -0.14199167 -0.2755001  1.2165037 -0.107564715 -0.4079430 #>   [64,] -1.2510114 -0.75238580  0.9194254  0.7365022  0.168030573 -1.2857636 #>   [65,] -0.5782028 -0.26470269  2.1733249 -0.9914971 -0.481609413 -0.6263580 #>   [66,]  0.2337348  0.25162064  0.2334955  0.4463190  0.003060065  0.2472958 #>   [67,]  0.6233606 -1.05347074  0.6968438  0.6655505  0.074741115  0.6168785 #>   [68,]  0.6200321 -1.06113288 -1.4436315  0.6641006  0.073448800  0.6138085 #>   [69,]  0.4649815  0.63836107  0.5026167 -1.6930725  0.028763604  0.4694309 #>   [70,]  0.3746490 -2.09850959  0.3950671  0.5408925  0.014231012  0.3838432 #>   [71,] -0.4414902 -0.18372927 -0.3406312  1.1257262 -0.199998434 -0.4871334 #>   [72,]  2.1667067 -0.19510708 -0.3579097 -0.9045246 -0.231116489 -0.5077067 #>   [73,]  0.3814401  0.48825758  0.4030575  0.5448650  0.015088684 -2.5619821 #>   [74,] -0.6349659 -0.30047423 -0.5107498  0.9708267 -0.653410213  1.4631162 #>   [75,]  1.1801082 -0.44406227 -0.7045378 -1.1585372  0.597770864  1.1181296 #>   [76,] -0.5388788 -0.24063268 -0.4253822  1.0379320 -0.382864347 -0.5865677 #>   [77,] -0.6026437  3.57194167  2.0753094  0.9917091 -0.551149772 -0.6509951 #>   [78,] -0.7987809 -0.40994426 -0.6596492  0.8841758  0.724596376 -0.8464581 #>   [79,]  0.6882859 -0.92125569  0.7782123  0.6929611  0.103213474 -1.4780983 #>   [80,] -0.5876007  3.69627272 -0.4684683  1.0019736 -0.507581303  1.5727237 #>   [81,] -0.6534423 -0.31236915  1.8962990 -1.0421555 -0.717408486  1.4245277 #>   [82,]  0.2672201  0.30161223  0.2710756 -2.1216282  0.004733161  0.2801559 #>   [83,] -0.6710811 -0.32383636 -0.5432342  0.9491949 -0.782439456  1.3896054 #>   [84,] -0.7950376 -0.40734609 -0.6562044 -1.1288348  0.735769723 -0.8427611 #>   [85,] -0.8234053  2.34114011 -0.6823556 -1.1450715  0.656357317 -0.8707486 #>   [86,]  0.5305808  0.76321320 -1.7174188 -1.6044575  0.044214083  0.5308618 #>   [87,] -0.8191552  2.35759631 -0.6784309  0.8751508  0.667516291  1.1539885 #>   [88,]  1.2220911 -0.42354027 -0.6776134 -1.1421569  0.669872596 -0.8656867 #>   [89,] -0.6873600 -0.33451455 -0.5579429  0.9399727 -0.845981593 -0.7358824 #>   [90,]  1.1276416 -0.47225584 -0.7411726 -1.1801993  0.515457628  1.0717350 #>   [91,] -1.0669433  1.64860357  1.0978948  0.7858321  0.282201758  0.9020867 #>   [92,] -0.7174139 -0.35446333 -0.5852023 -1.0825688  1.028236918 -0.7658211 #>   [93,]  0.7530021 -0.81574602  0.8602006  0.7187974  0.138316972  0.7356383 #>   [94,] -0.2062441 -0.06558110 -0.1458311 -0.6515136 -0.016758330 -0.2396816 #>   [95,]  1.1024373 -0.48692870 -0.7600848  0.8395482  0.478863254 -0.9529294 #>   [96,] -0.2439779 -0.08232755 -0.1758670 -0.6976651 -0.028969473 -0.2803049 #>   [97,]  1.1001844 -0.48827880 -0.7618199  0.8388490  0.475682688 -0.9547477 #>   [98,] -0.5844951 -0.26860920 -0.4657093  1.0041388 -0.498893907 -0.6327075 #>   [99,] -0.4723706 -0.20133572 -0.3672928  1.0951469 -0.249274743 -0.5188105 #>  [100,] -0.4460558 -0.18630572 -0.3445600  1.1210183 -0.206815186 -0.4918261 #>  [101,] -0.3487014 -0.13350090 -0.2618602 -0.8069146 -0.092729782  2.5576219 #>  [102,]  0.4327609  0.57923205  0.4639528  0.5736147  0.022763741  0.4390455 #>  [103,] -0.2065397 -0.06570834 -0.1460640 -0.6518938 -0.016836693 -0.2400017 #>  [104,]  1.5208635 -0.31501129 -0.5310135  0.9571205 -0.732100162 -0.7060695 #>  [105,] -0.2988311 -0.10833258 -0.2204739 -0.7577468 -0.056087122 -0.3386131 #>  [106,] -0.4307696 -0.17771653  3.0172800 -0.8794646 -0.184606601 -0.4761014 #>  [107,]  0.2230610  0.23619446  0.2216418  0.4379014  0.002627849  0.2367557 #>  [108,] -0.6626463 -0.31833934  1.8669636  0.9540981 -0.750854110 -0.7111966 #>  [109,] -0.3368644 -0.12740399 -0.2519715  1.2568458 -0.082862618 -0.3786058 #>  [110,] -0.3012293 -0.10951101 -0.2224470 -0.7602181 -0.057566785 -0.3411447 #>  [111,] -0.9170235 -0.49416673 -0.7693769 -1.1964178  0.462155905 -0.9626589 #>  [112,] -0.8867020 -0.47218045 -0.7410751  0.8473552  0.515655733 -0.9329639 #>  [113,]  1.1696143 -0.44946353 -0.7115872 -1.1627601  0.580627630 -0.9018258 #>  [114,] -0.4488627 -0.18789432 -0.3469776  1.1181574 -0.211084997 -0.4947095 #>  [115,] -0.2431368 -0.08194364 -0.1751914  1.4353701 -0.028645407 -0.2794044 #>  [116,] -0.6323927 -0.29882728 -0.5084433 -1.0283476  1.550811780 -0.6808914 #>  [117,]  0.3545614  0.44227703  0.3715299  0.5288857  0.011892379  0.3646294 #>  [118,]  2.4561117 -0.16465514 -0.3112313 -0.8594908 -0.153622968 -0.4517264 #>  [119,] -0.1689574 -0.05006751 -0.1167661 -0.6006834 -0.008751863 -0.1990364 #>  [120,]  0.2684941  0.30356024  0.2725165  0.4722502  0.004807071  0.2814003 #>  [121,] -1.3943066  1.14765547 -1.2273827 -1.4190925  0.118021386  0.7029938 #>  [122,] -0.9374515  1.96415302 -0.7885050  0.8283608  0.430147854 -0.9826270 #>  [123,]  0.5075748  0.71876720  0.5541984 -1.6336921  0.038268855  0.5093802 #>  [124,]  0.5638482 -1.20671877 -1.6048618  0.6388958  0.053901222 -1.7799497 #>  [125,] -0.5733772 -0.26171691 -0.4558462 -0.9881180 -0.468638277 -0.6214854 #>  [126,]  0.3820635  0.48933792  0.4037918  0.5452276  0.015169162  0.3909172 #>  [127,]  1.1967447 -0.43572726 -0.6936295  0.8680936  0.625663090 -0.8827597 #>  [128,] -0.4248090 -0.17439625 -0.3263167  1.1435274 -0.176414401 -0.4699596 #>  [129,] -0.8229126 -0.42679641 -0.6819005  0.8735208  0.657638348 -0.8702631 #>  [130,]  0.7220976 -0.86335584 -1.2181117  0.7066310  0.120665908  0.7074641 #>  [131,]  0.3104412  0.36946954  0.3203800 -1.9959372  0.007713665  0.3221609 #>  [132,]  0.6209080  0.94419145  0.6937884 -1.5049304  0.073787356  0.6146165 #>  [133,] -1.2880933  1.27758044 -1.1236317  0.7277906  0.152778060  0.7568631 #>  [134,] -1.0925479 -0.62636009 -0.9352315  0.7782774  0.261221147  0.8823706 #>  [135,]  1.5804185 -0.29905182 -0.5087579 -1.0285801 -0.645990388 -0.6812436 #>  [136,] -1.0130078 -0.56544498 -0.8596623 -1.2459291  0.334157245  0.9467635 #>  [137,]  0.3730072  0.47370423  0.3931378 -1.8521069  0.014028848  0.3822755 #>  [138,]  0.2565571  0.28543779  0.2590466  0.4635823  0.004145137  0.2697242 #>  [139,]  0.3347915  0.40923071  0.3485140  0.5166686  0.009864999  0.3456471 #>  [140,]  0.6550369  1.01511318  0.7364271 -1.4724830  0.087838723  0.6460395 #>  [141,] -0.4532416 -0.19037964 -0.3507527  1.1137443 -0.217867567 -0.4992052 #>  [142,]  0.5497202 -1.24888614 -1.6509033  0.6323258  0.049624608  0.5486846 #>  [143,]  0.9133105 -0.62819995  1.0666744  0.7775908  0.259383604 -1.1356015 #>  [144,] -0.2938102 -0.10587623 -0.2163489 -0.7525346 -0.053075013 -0.3333085 #>  [145,]  0.7491840 -0.82137819 -1.1691252 -1.3940964  0.136045289 -1.3658183 #>  [146,]  0.9482297 -0.59709265  1.1122314 -1.2665174  0.293107576  0.9119241 #>  [147,]  0.3945168  0.51105044  0.4184894 -1.8102888  0.016839969 -2.4827591 #>  [148,] -0.4090495 -0.16569708 -0.3128522 -0.8611240 -0.155973092  2.2041363 #>  [149,] -0.7204118 -0.35646972 -0.5879288 -1.0844092  1.014362945  1.3007238 #>  [150,] -0.7410968 -0.37039342  1.6480550  0.9115885 -1.081078082  1.2668605 #>  [151,] -0.8551579 -0.44958820 -0.7117498 -1.1628572  0.580240192  1.1086499 #>  [152,] -1.1688399 -0.68628204 -1.0083110 -1.3207077  0.209657544 -1.2068846 #>  [153,]  1.6526980 -0.28148726  2.0660310  0.9900865 -0.558415039  1.5303664 #>  [154,]  0.5381399  0.77796779  0.5915232  0.6268655  0.046299345  0.5379061 #>  [155,] -0.3527866 -0.13562229 -0.2652821 -0.8107522 -0.096315942 -0.3952550 #>  [156,]  1.5440989 -0.30861226  1.9152889  0.9630502 -0.696817325 -0.6961636 #>  [157,]  0.3987405  0.51847011 -2.3613503  0.5547995  0.017434428  0.4067945 #>  [158,] -0.4690173 -0.19940359 -0.3643877 -0.9104735 -0.243556095 -0.5153776 #>  [159,] -0.8831403 -0.46961510  1.3554582 -1.1782093  0.522461371 -0.9294713 #>  [160,]  1.8246234 -0.24619759 -0.4334670  1.0308150 -0.404522234 -0.5958733 #>  [161,] -1.2736786  1.29719020  0.9012055  0.7311346  0.158483067  0.7648420 #>  [162,]  0.2569010  0.28595581  0.2594336  0.4638353  0.004163266  0.2700611 #>  [163,]  0.3518780  0.43775250  0.3683971  0.5272516  0.011601673  0.3620573 #>  [164,]  1.3598695 -0.36652101  1.6623807 -1.0935220  0.948698993 -0.7836621 #>  [165,] -0.2065397 -0.06570834 -0.1460640 -0.6518938 -0.016836693 -0.2400017 #>  [166,]  0.3420798  0.42133522  0.3569812 -1.9185720  0.010581954  0.3526536 #>  [167,]  0.6601051 -0.97488813  0.7427811  0.6812605  0.090072156  0.6506962 #>  [168,] -0.9873505 -0.54614746 -0.8354282 -1.2329769  0.363283999  0.9696694 #>  [169,] -0.7430102 -0.37168837 -0.6085223 -1.0981390  0.917265247 -0.7912518 #>  [170,]  0.9363743  1.64650263 -0.9117911 -1.2730250  0.281336976  0.9012951 #>  [171,] -0.7427783 -0.37153141  1.6438969 -1.0979994  0.918198205 -0.7910217 #>  [172,]  0.9448738 -0.59996489 -0.9026536  0.7884273  0.289741715  0.9089162 #>  [173,]  1.5557534 -0.30548719  1.9314093  0.9660046 -0.679955553 -0.6913027 #>  [174,] -0.1959449 -0.06118790 -0.1377374 -0.6380593 -0.014182564 -0.2285090 #>  [175,]  0.3205349  0.38582234  0.3320124  0.5075906  0.008561096  0.3319110 #>  [176,]  0.2551705  0.28335165  0.2574864  0.4625600  0.004072598  0.2683655 #>  [177,] -0.6157905 -0.28825809 -0.4935873  0.9830294 -0.591291716  1.5055275 #>  [178,] -0.3916472 -0.15622800 -0.2980532 -0.8460084 -0.135376061  2.2952633 #>  [179,]  0.6801003 -0.93629569  0.7679033  0.6895922  0.099268131  0.6690443 #>  [180,] -1.2278065 -0.73355807  0.9388151 -1.3474532  0.178598432 -1.2635253 #>  [181,] -0.4017901 -0.16172934 -0.3066698 -0.8548657 -0.147134923  2.2412232 #>  [182,]  1.0901486 -0.49437290 -0.7696412 -1.1965680  0.461692169 -0.9629354 #>  [183,] -0.5265624  4.28782117 -0.4145595 -0.9544229 -0.355086066 -0.5740652 #>  [184,] -0.6768573 -0.32761492 -0.5484487  0.9458869 -0.804593058  1.3785516 #>  [185,] -0.3390913 -0.12854530 -0.2538289  1.2534770 -0.084660444 -0.3809375 #>  [186,]  0.2569010  0.28595581  0.2594336  0.4638353  0.004163266  0.2700611 #>  [187,]  1.1372754 -0.46684920  1.3620679  0.8502558  0.529942373 -0.9256991 #>  [188,] -0.2534336 -0.08667570 -0.1834811 -0.7085554 -0.032789712 -0.2904150 #>  [189,]  1.0795527 -0.50095214 -0.7780662  0.8324051  0.447232890 -0.9717397 #>  [190,]  0.6445467 -1.00687538  0.7232936 -1.4821984  0.083338397  0.6363932 #>  [191,] -0.4659760 -0.19765546 -0.3617550 -0.9080639 -0.238448748 -0.5122628 #>  [192,] -0.1982661 -0.06217104 -0.1395573 -0.6411274 -0.014737229 -0.2310304 #>  [193,]  1.6814815 -0.27498505 -0.4747936  0.9970746 -0.527872516 -0.6430090 #>  [194,] -1.8900057 -1.31521924  0.5804568  0.6225540  0.043813082  0.5294801 #>  [195,] -0.9908736 -0.54878695 -0.8387517 -1.2347672  0.359092892 -1.0347081 #>  [196,] -0.6805984 -0.33006826 -0.5518286  0.9437655  1.220746551  1.3714891 #>  [197,]  0.4678827  0.64375812 -1.9758414  0.5921405  0.029352379  0.4721597 #>  [198,] -0.2745943 -0.09661345 -0.2006372  1.3659646 -0.042578871 -0.3129485 #>  [199,]  0.4907750  0.68675615  0.5337916 -1.6562453  0.034294581  0.4936516 #>  [200,]  1.3928942 -0.35480825 -0.5856712 -1.0828857  1.025832783 -0.7663340 #>  [201,]  0.5080540 -1.38949513  0.5547817  0.6123458  0.038386681  0.5098283 #>  [202,]  0.3392335  0.41659715  0.3536721  0.5194501  0.010297813  0.3499186 #>  [203,] -0.7961882  2.45011431 -0.6572631  0.8853475 -1.365538967 -0.8438975 #>  [204,] -0.4642546 -0.19666773 -0.3602656  1.1029056 -0.235590933 -0.5104991 #>  [205,]  0.4349614  0.58322206  0.4665830  0.5748010  0.023142972  0.4411254 #>  [206,] -0.2273279 -0.07481599 -0.1625426 -0.6778637 -0.023011065 -0.2624370 #>  [207,] -0.4647333 -0.19694229 -0.3606797 -0.9070767 -0.236383313  1.9569869 #>  [208,]  1.8220182 -0.24667419 -0.4341578 -0.9706710 -0.406409508 -0.5966672 #>  [209,]  1.2283700  2.37748491 -0.6737538  0.8773661 -1.468105903 -0.8615625 #>  [210,] -2.2148247  0.61344389  0.4864042  0.5836071  0.026135224  0.4567382 #>  [211,]  1.0506544 -0.51969233  1.2469486  0.8232554  0.409397608 -0.9966228 #>  [212,]  0.8480063  1.43976557 -1.0183131  0.7544434  0.203695652  0.8217703 #>  [213,] -1.0205111 -0.57112135  1.1537181  0.8002048  0.326219652 -1.0635184 #>  [214,]  1.7937224 -0.25195582 -0.4417987 -0.9768794 -0.427669184 -0.6054334 #>  [215,] -0.9442435 -0.51412453 -0.7948755 -1.2107587  0.420149841  1.0108571 #>  [216,]  0.2565571  0.28543779  0.2590466  0.4635823  0.004145137  0.2697242 #>  [217,] -0.3660898 -0.14259030 -0.2764563  1.2149645 -0.108659385 -0.4091263 #>  [218,]  0.4571341  0.62382226 -2.0276950 -1.7048521  0.027212105  0.4620440 #>  [219,]  1.0550085 -0.51679135 -0.7982694  0.8246434  0.414950582  1.0072630 #>  [220,] -0.7217810 -0.35738703 -0.5891744  0.9214481  1.008107952 -0.7701642 #>  [221,] -1.4618446 -0.92895407 -1.2938326  0.6912279  0.101166826  0.6726801 #>  [222,] -0.8781210 -0.46600606  1.3640970 -1.1754770  0.532252974 -0.9245478 #>  [223,]  1.1013966 -0.48755155 -0.7608854  0.8392253 -2.094713635 -0.9537684 #>  [224,]  0.5249625  0.75229505 -1.7379186  0.6205668  0.042707067  0.5256218 #>  [225,]  0.2230610  0.23619446  0.2216418  0.4379014  0.002627849  0.2367557 #>  [226,]  1.0656126 -0.50984280  1.2667528  0.8280098 -2.332675070  1.0166939 #>  [227,] -0.5720540 -0.26089971 -0.4546737  1.0129778 -0.465124131  1.6125163 #>  [228,] -0.3116428 -0.11466633 -0.2310355 -0.7708157 -0.064306525 -0.3521215 #>  [229,]  1.1025160 -0.48688161  1.3157474  0.8395727  0.478974716  1.0494655 #>  [230,] -0.2753047 -0.09695192 -0.2012159  1.3645277 -0.042938763 -0.3137029 #>  [231,]  1.9763288 -0.22097077 -0.3965459 -0.9390530 -0.311850317 -0.5531359 #>  [232,] -2.0183262  0.69564491  0.5394746 -1.6498477  0.035372645  0.4980415 #>  [233,] -0.4742780  4.93981052 -0.3689463  1.0933506 -0.252568784 -0.5207623 #>  [234,]  0.2896299  0.33634757  0.2965339  0.4870543  0.006153002  0.3019886 #>  [235,]  0.9731871 -0.57646107  1.1449103  0.7979668  0.318994269  0.9342703 #>  [236,]  0.3902484  0.50358069  0.4134457  0.5499556  0.016253640  0.3987154 #>  [237,] -0.2062870 -0.06559955 -0.1458648  1.5347574 -0.016769679 -0.2397280 #>  [238,]  0.6892447 -0.91952144 -1.2830040  0.6933542  0.103682612  0.6774232 #>  [239,]  2.0381229 -0.21195144 -0.3831681 -0.9273495 -0.282089594 -0.5374919 #>  [240,]  0.4278266  0.57031075 -2.1831193  0.5709415  0.021929029  0.4343788 #>  [241,] -1.5074619  1.03262482 -1.3389155  0.6826297  0.091530080 -1.5297733 #>  [242,]  2.0009730 -0.21729514 -0.3911059 -0.9343246 -0.299511274 -0.5467850 #>  [243,]  0.3014275  0.35502420  0.3100286 -2.0200378  0.007007669  0.3134356 #>  [244,] -0.4201168 -0.17179403 -0.3223017 -0.8705396 -0.170145285 -0.4651206 #>  [245,] -0.7154116 -0.35312494 -0.5833821  0.9247811  1.037641556  1.3091933 #>  [246,] -0.4184542 -0.17087445 -0.3208803 -0.8691346 -0.167961535 -0.4634051 #>  [247,] -0.4426342 -0.18437398 -0.3416152 -0.8892524 -0.201691670 -0.4883096 #>  [248,]  0.4392145  0.59095450  0.4716713  0.5770839  0.023888352 -2.2464665 #>  [249,]  0.6860619 -0.92530020 -1.2896403 -1.4449861  0.102130993 -1.4825627 #>  [250,]  0.4038874 -1.89555853  0.4295839  0.5577055  0.018178274  0.4116853 #>  [251,]  1.4695136 -0.33000189  1.8124570  0.9438226 -0.818774461 -0.7290335 #>  [252,] -0.8873498 -0.47264749 -0.7416787  0.8471032  0.514430236 -0.9335991 #>  [253,]  0.7511646 -0.81844824  0.8578612  0.7180823  0.137220411  0.7339653 #>  [254,]  1.9727027 -0.22152072 -0.3973584 -0.9397558 -0.313721571 -0.5540832 #>  [255,]  0.3000299  0.35279795  0.3084267  0.4941040  0.006902373  0.3120811 #>  [256,] -0.9850008  1.83692178  1.2001741  0.8118328  0.366114711 -1.0289922 #>  [257,]  0.7029987 -0.89525542 -1.2550560  0.6989573  0.110575912 -1.4492511 #>  [258,]  0.5857080  0.87247508 -1.5382427  0.6488719  0.061011570  0.5820837 #>  [259,]  1.3493517  2.69983286 -0.6067757  0.9115886 -1.081077231  1.2668608 #>  [260,] -0.5097020 -0.22316859  2.5013068  1.0617355 -0.319367813  1.7955977 #>  [261,] -1.6860963 -1.12690801  0.6592268  0.6521890  0.063551025  0.5889134 #>  [262,] -0.5012594  4.58337407 -0.3924168 -0.9354678 -0.302454749 -0.5483167 #>  [263,]  0.4346555  0.58266695  0.4662173  0.5746363  0.023089992  0.4408363 #>  [264,]  1.9666003 -0.22245164 -0.3987330  1.0627642 -0.316904014 -0.5556852 #>  [265,]  0.2337348  0.25162064  0.2334955  0.4463190  0.003060065  0.2472958 #>  [266,]  0.4000388  0.52075638 -2.3528097  0.5555346  0.017620035  0.4080286 #>  [267,]  0.7764794 -0.78254111 -1.1234088  0.7278434  0.152866635  0.7569886 #>  [268,] -1.2301855  1.35965159  0.9367917  0.7415559  0.177475755  0.7900102 #>  [269,] -0.1959449 -0.06118790 -0.1377374 -0.6380593 -0.014182564 -0.2285090 #>  [270,] -1.5681826  0.97887873  0.7147108  0.6717367  0.080481023 -1.5871156 #>  [271,]  0.4934811 -1.44532331  0.5370734 -1.6525395  0.034914457  0.4961876 #>  [272,] -1.5664714  0.98032633  0.7155811  0.6720355  0.080767771  0.6307151 #>  [273,] -0.6267069 -0.29519643  1.9866876 -1.0245712 -0.626127734  1.4810757 #>  [274,] -0.3236656  8.28538327 -0.2409921 -0.7827932 -0.072746087 -0.3647637 #>  [275,] -1.1661305 -0.68412965 -1.0057061  0.7578859  0.211248617 -1.2042775 #>  [276,]  0.4907758 -1.45611769 -1.8733869  0.6037757  0.034294765  0.4936523 #>  [277,]  1.6533861 -0.28132872 -0.4837953  0.9902543 -0.557658396 -0.6531849 #>  [278,]  1.0812871 -0.49986478  1.2875396 -1.2005528  0.449577966 -0.9702871 #>  [279,] -0.3804171 -0.15019545 -0.2885428 -0.8360415 -0.123134793 -0.4240270 #>  [280,]  0.8417944 -0.70150392  0.9740015 -1.3294560  0.198874866 -1.2252507 #>  [281,]  0.3293806  0.40030403  0.3422414  0.5132506  0.009355009  0.3404385 #>  [282,] -1.6863028  0.88723681  0.6591368  0.6521565  0.063525678  0.5888462 #>  [283,] -1.9655952  0.72102393  0.5556309  0.6126882  0.038558678  0.5104807 #>  [284,] -0.3900636 -0.15537357  3.3702918  1.1839738 -0.133600957 -0.4340380 #>  [285,] -1.9748170  0.71647035  0.5527396  0.6115211  0.037975191 -1.9675009 #>  [286,] -1.7037337  0.87497257  0.6516245  0.6494303  0.061432757  0.5832303 #>  [287,] -0.6998584 -0.34277384 -0.5692629  0.9330983  1.114666083  1.3362849 #>  [288,] -1.0645310 -0.60471842 -0.9085389 -1.2713638  0.284290339 -1.1062052 #>  [289,] -0.5157581 -0.22676516  2.4685912 -0.9463967 -0.331896067  1.7759427 #>  [290,]  0.5983538  0.89806904  0.6657568 -1.5277846  0.065408395  0.5937862 #>  [291,]  1.5568022  3.27644710 -0.5173679  0.9662698 -0.678464371 -0.6908687 #>  [292,] -0.3280014 -0.12288810 -0.2445933 -0.7870480 -0.075969033 -0.3693151 #>  [293,]  1.3986357 -0.35283824 -0.5829920 -1.0810727  1.039672006 -0.7634021 #>  [294,] -1.8163012  0.80238840  0.6067722 -1.5804691  0.049874806  0.5494745 #>  [295,] -0.6049603 -0.28141740 -0.4839209  0.9901604 -0.558081559  1.5306279 #>  [296,]  0.2657897  0.29942914  0.2694588  0.4703068  0.004651127  0.2787582 #>  [297,]  0.3509691  0.43622273  0.3673366  0.5266964  0.011504334  0.3611857 #>  [298,]  1.4323157 -0.34165510 -0.5677324  0.9340168 -0.890098667 -0.7466610 #>  [299,] -0.7520864 -0.37784717 -0.6168137  0.9061389  0.881692632 -0.8002548 #>  [300,] -0.3371280 -0.12753894 -0.2521913 -0.7958961 -0.083074019 -0.3788819 #>  [301,] -1.9596020  0.72401033  0.5575254 -1.6301226  0.038944176  0.5119354 #>  [302,] -0.6024962 -0.27986705 -0.4817244 -1.0082597 -0.550710505 -0.6508466 #>  [303,] -0.9334984 -0.50622155 -0.7847997  0.8297879  0.436110312  1.0216954 #>  [304,]  1.9688601 -0.22210611  2.5111561 -0.9405024 -0.315720619  1.8015068 #>  [305,] -0.2339281 -0.07777115 -0.1678116  1.4581239 -0.025259735 -0.2695303 #>  [306,] -0.2631070 -0.09118365 -0.1913043  1.3899508 -0.037045384 -0.3007312 #>  [307,]  0.4760682  0.65904932  0.5159929  0.5963387  0.031058536  0.4798526 #>  [308,]  1.3473159  2.69432094 -0.6077977 -1.0976610 -1.086407790 -0.7904641 #>  [309,]  0.5000767 -1.41958170  0.5450806 -1.6436263  0.036457706  0.5023646 #>  [310,]  0.2565571  0.28543779  0.2590466  0.4635823  0.004145137  0.2697242 #>  [311,] -2.0133367  0.69797940  0.5409651  0.6067280  0.035659021  0.4991916 #>  [312,]  0.7945943  1.31840629  0.9133262  0.7347130  0.164793526  0.7734323 #>  [313,] -1.6284374 -1.07506478  0.6852967 -1.5117187  0.071178788  0.6083211 #>  [314,] -0.8449630 -0.44234879 -0.7022983  0.8641623  0.603359014  1.1211096 #>  [315,] -2.3431706  0.56840906  0.4568020  0.5703679  0.021753453  0.4333811 #>  [316,]  0.6305230  0.96403600  0.7057744 -1.4955396  0.077575201  0.6234808 #>  [317,] -0.3672350 -0.14319437 -0.2774204 -0.8241172 -0.109770604 -0.4103187 #>  [318,]  1.8609866 -0.23970876 -0.4240367  1.0391343 -0.379335874 -0.5850163 #>  [319,] -0.3402501 -0.12914027 -0.2547960 -0.7988904 -0.085606608  2.6167701 #>  [320,] -0.6527109 -0.31189596 -0.5266851  0.9599876  1.399001174 -0.7012548 #>  [321,] -0.1974230 -0.06181349 -0.1388960 -0.6400155 -0.014534070 -0.2301148 #>  [322,]  0.4026982 -1.90313871  0.4281744  0.5570360  0.018004502  0.4105558 #>  [323,] -0.6010011 -0.27892742 -0.4803921 -1.0072398 -0.546270966 -0.6493415 #>  [324,] -0.6784889 -0.32868428 -0.5499225  0.9449597 -0.810928372  1.3754623 #>  [325,]  1.3740379  2.76690401 -0.5946370  0.9183456 -1.019077171  1.2884450 #>  [326,] -1.6624461  0.90451393 -1.4932310  0.6559526  0.066543840 -1.6758373 #>  [327,]  0.5473968 -1.25606642  0.6028761  0.6312358  0.048944598 -1.8297480 #>  [328,]  0.8881390  1.53275751 -0.9671574 -1.3007477  0.236811212  0.8579535 #>  [329,]  1.2380360 -0.41617372  1.4972459 -1.1361418  0.698766502  1.1691905 #>  [330,] -0.2372513 -0.07927035 -0.1704710 -0.6897649 -0.026447617 -0.2730967 #>  [331,]  1.4228992 -0.34471907  1.7484905  0.9315106 -0.909431966  1.3310890 #>  [332,] -1.3089171 -0.79990596  0.8742039  0.7230517  0.145001255  0.7456366 #>  [333,]  2.2312586 -0.18750621 -0.3463873 -0.8937721 -0.210037138 -0.4940057 #>  [334,] -0.6537146 -0.31254535 -0.5275879  0.9593869  1.392015435 -0.7022596 #>  [335,] -0.3649641 -0.14199715 -0.2755089  1.2164896 -0.107574694 -0.4079538 #>  [336,] -1.1257459 -0.65225894 -0.9669621  0.7688453  0.236951031 -1.1653676 #>  [337,] -1.0255947 -0.57497560 -0.8715770  0.7985867  0.320981395  0.9359314 #>  [338,] -0.5716688 -0.26066194 -0.4543324  1.0132558 -0.464104596 -0.6197596 #>  [339,]  1.1962079 -0.43599198 -0.6939765 -1.1521601  0.624749183  1.1323376 #>  [340,]  0.3205349  0.38582234  0.3320124  0.5075906  0.008561096  0.3319110 #>  [341,]  0.7112867  1.13486120  0.8072547  0.7023023  0.114879513  0.6975889 #>  [342,]  0.4098597  0.53813549  0.4366705  0.5610502  0.019068671  0.4173553 #>  [343,]  1.6653978 -0.27858577 -0.4799075 -1.0068683 -0.544661929  1.5413218 #>  [344,] -0.8377313 -0.43723217  1.4376042 -1.1531454  0.620492703 -0.8848576 #>  [345,]  0.5366181  0.77499157 -1.6958953  0.6261428  0.045874192 -1.8639728 #>  [346,] -1.2279733 -0.73369295  0.9386729  0.7420998  0.178519419 -1.2636853 #>  [347,] -0.2062441 -0.06558110 -0.1458311 -0.6515136 -0.016758330 -0.2396816 #>  [348,]  0.7716602 -0.78916344 -1.1312320  0.7259998  0.149797426 -1.3287101 #>  [349,] -0.3198380 -0.11876660 -0.2378176 -0.7790091 -0.069980780 -0.3607425 #>  [350,] -0.1778363 -0.05366153 -0.1236261 -0.6133470 -0.010340985 -0.2087660 #>  [351,] -2.1257581  0.64848875  0.5091743  0.5934467  0.029874196  0.4745456 #>  [352,]  0.4936242  0.69215830 -1.8613413  0.6052007  0.034947451  0.4963217 #>  [353,]  0.4009481  0.52235909  0.4261007 -1.7984040  0.017750834  0.4088928 #>  [354,] -1.0128387 -0.56531722  1.1634639  0.8026684  0.334339024  0.9469108 #>  [355,] -0.8399822 -0.43882307 -0.6976853  0.8662460  0.615092363 -0.8870729 #>  [356,] -0.3931493 -0.15703954 -0.2993277 -0.8473286 -0.137074750 -0.4372367 #>  [357,]  0.3417455  0.42077810  0.3565925  0.5210135  0.010548309  0.3523325 #>  [358,] -1.0222954  1.74680600  1.1514738  0.7996355  0.324368390  0.9387458 #>  [359,] -0.6500598 -0.31018255  1.9073006  0.9615804 -0.705381316  1.4314336 #>  [360,]  0.6233606 -1.05347074  0.6968438  0.6655505  0.074741115  0.6168785 #>  [361,]  0.6201162  0.94256221  0.6928024 -1.5057128  0.073481286  0.6138861 #>  [362,]  0.2230610  0.23619446  0.2216418  0.4379014  0.002627849  0.2367557 #>  [363,] -0.2704897 -0.09466387 -0.1972971 -0.7276058 -0.040540214 -0.3085871 #>  [364,]  1.3324176 -0.37677929 -0.6153777  0.9069110  0.887719014 -0.7986971 #>  [365,] -0.7320514 -0.36428750 -0.5985266  0.9161601  0.962758848  1.2814414 #>  [366,] -0.8669071  2.18355241 -0.7226584  0.8551840  0.555011305  1.0946418 #>  [367,]  1.5915281 -0.29622978 -0.5048010  0.9749922 -0.631415906 -0.6768112 #>  [368,]  1.3268975 -0.37890248 -0.6182320  0.9053786  0.875793956 -0.8017929 #>  [369,]  0.5343920  0.77064306  0.5869331 -1.5997865  0.045257122  0.5344143 #>  [370,] -0.3105267 -0.11411083 -0.2301134 -0.7696900 -0.063559284 -0.3509462 #>  [371,] -0.8521712 -0.44746414 -0.7089795  0.8611773  0.586891443  1.1122703 #>  [372,] -1.5179049 -0.97749752  0.7411479  0.6807127  0.089494544  0.6494998 #>  [373,]  0.5605665  0.82217186 -1.6153377 -1.5689265  0.052885930 -1.7896579 #>  [374,] -0.7081821 -0.34830349 -0.5768147  0.9286152  1.072549249 -0.7566339 #>  [375,] -0.4734711 -0.20197085 -0.3682467 -0.9139854 -0.251171537 -0.5199366 #>  [376,] -1.1336510 -0.65846611  1.0261318 -1.3043644  0.231610662  0.8525212 #>  [377,]  0.6905884  1.09039288  0.7811147  0.6939045  0.104342535  0.6786537 #>  [378,]  1.2312852 -0.41926520 -0.6719760 -1.1386751  0.686430019 -0.8596616 #>  [379,] -0.3728570 -0.14616955 -0.2821584  1.2059333 -0.115340280 -0.4161691 #>  [380,]  0.4012555  0.52290136 -2.3448589  0.5562223  0.017795217  0.4091850 #>  [381,]  0.4000388  0.52075638 -2.3528097  0.5555346  0.017620035  0.4080286 #>  [382,] -0.5320613 -0.23652134 -0.4193880  1.0433289 -0.367309258 -0.5796497 #>  [383,] -0.8088622 -0.41696284  1.4949120  0.8796702  0.695587884  1.1676667 #>  [384,] -0.1971291 -0.06168895 -0.1386655 -0.6396272 -0.014463694 -0.2297956 #>  [385,]  0.8490401 -0.69341308 -1.0169311  0.7548179  0.204505724  0.8227038 #>  [386,]  0.3839459  0.49260410  0.4060099  0.5463202  0.015413993 -2.5463977 #>  [387,] -0.2562292 -0.08797233 -0.1857385 -0.7117288 -0.033982737 -0.2933991 #>  [388,]  2.0230712 -0.21408868 -0.3863470 -0.9301538 -0.288984280 -0.5412174 #>  [389,]  2.0256898 -0.21371417 -0.3857904 -0.9296638 -0.287769071 -0.5405654 #>  [390,] -0.6506460 -0.31056117 -0.5248282  0.9612274  1.413516711 -0.6991873 #>  [391,] -0.2073873 -0.06607360 -0.1467323 -0.6529822 -0.017062829 -0.2409194 #>  [392,]  0.7861436  1.29946324 -1.1080262  0.7315199  0.159152270 -1.3058846 #>  [393,]  3.0419672 -0.12326007 -0.2452028 -0.7877642 -0.076523649 -0.3700843 #>  [394,] -0.9244352 -0.49958058  1.2881427 -1.2003474  0.450193759 -0.9699073 #>  [395,] -1.5566670 -1.01143631 -1.3877198 -1.4842158  0.082436786  0.6344161 #>  [396,] -0.7623337 -0.38483227 -0.6261887  0.9011574  0.843665852 -0.8104107 #>  [397,]  0.2569010  0.28595581  0.2594336  0.4638353  0.004163266  0.2700611 #>  [398,]  1.1996605 -0.43429443  1.4456076  0.8689545  0.630642722 -0.8807602 #>  [399,] -0.4924843 -0.21302614 -0.3847673 -0.9287621 -0.285544371 -0.5393667 #>  [400,] -1.9719542  0.71787859  0.5536341 -1.6343004  0.038155085 -1.9648429 #>  [401,]  1.7126682 -0.26822933 -0.4651668 -0.9954542 -0.497197498 -0.6320913 #>  [402,]  0.2551705  0.28335165  0.2574864  0.4625600  0.004072598  0.2683655 #>  [403,]  1.0844632 -0.49788428  1.2917558  0.8339453 -2.203156662  1.0334434 #>  [404,]  0.5562615  0.81363721  0.6137687  0.6353800  0.051574265  0.5547663 #>  [405,] -0.8198865 -0.42467347  1.4725240  0.8748327  0.665578564 -0.8672806 #>  [406,] -0.2365346 -0.07894638 -0.1698971 -0.6889154 -0.026188217 -0.2723278 #>  [407,] -0.2073873 -0.06607360 -0.1467323 -0.6529822 -0.017062829 -0.2409194 #>  [408,] -0.8897413 -0.47437245 -0.7439070  0.8461750  0.509939576 -0.9359435 #>  [409,] -1.3888406 -0.86672132 -1.2220206  0.7058041  0.119541296 -1.4172904 #>  [410,] -0.3512769 -0.13483732 -0.2640170 -0.8093371 -0.094979698 -0.3936786 #>  [411,]  0.2337348  0.25162064  0.2334955  0.4463190  0.003060065  0.2472958 #>  [412,] -0.6889877 -0.33558717 -0.5594158 -1.0648862  1.172986030 -0.7375060 #>  [413,] -0.4001798 -0.16085261 -0.3053001  1.1716895 -0.145222547  2.2496261 #>  [414,] -0.3389936 -0.12849519 -0.2537474 -0.7976873 -0.084581027 -0.3808353 #>  [415,] -0.3530027 -0.13573471 -0.2654632 -0.8109544 -0.096508218 -0.3954806 #>  [416,]  0.9567332 -0.58992069  1.1233549 -1.2619198  0.301757518 -1.0874975 #>  [417,]  0.9564335 -0.59017097  1.1229626 -1.2620809  0.301449610  0.9192739 #>  [418,] -0.3500771 -0.13421432 -0.2630121  1.2373023 -0.093926930  2.5482546 #>  [419,]  1.9696429 -0.22198665 -0.3980465  1.0634336 -0.315312049 -0.5548853 #>  [420,] -1.5014256 -0.96316095 -1.3329408 -1.4625308  0.092734307  0.6561403 #>  [421,] -0.9090230 -0.48834019 -0.7618988  0.8388172  0.475538786 -0.9548303 #>  [422,]  0.3545614  0.44227703  0.3715299  0.5288857  0.011892379  0.3646294 #>  [423,]  0.4503335 -1.63587364  0.4850001  0.5829909  0.025915335  0.4556356 #>  [424,] -1.5966398 -1.04674945  0.7005265 -1.4996242  0.075901404 -1.6139372 #>  [425,]  1.3045454 -0.38771637 -0.6300507 -1.1121804  0.828640388 -0.8145872 #>  [426,] -0.8551115 -0.44955518  1.4050732  0.8599698 -1.723119535 -0.9019524 #>  [427,]  1.5188508 -0.31557644 -0.5317979  0.9566043 -0.735265289 -0.7069413 #>  [428,]  0.6433150  0.99060340  0.7217530  0.6741480  0.082820681 -1.5741591 #>  [429,]  0.3816661  0.48864915 -2.4793983  0.5449965  0.015117824  0.3905383 #>  [430,] -1.5784922  0.97023501 -1.4094243  0.6699461  0.078781211 -1.5968365 #>  [431,]  2.4412683  6.02367269 -0.3133413 -0.8616157 -0.156686776 -0.4542853 #>  [432,] -0.3116428 -0.11466633 -0.2310355 -0.7708157 -0.064306525 -0.3521215 #>  [433,]  0.9769494 -0.57345828  1.1498450 -1.2512168  0.323029250  0.9376355 #>  [434,]  0.5454595 -1.26210862  0.6004983  0.6303248  0.048382546  0.5447207 #>  [435,]  0.4127976  0.54336321  0.4401609  0.5626849  0.019517561 -2.3801457 #>  [436,] -0.2649237 -0.09203692 -0.1927772 -0.7214694 -0.037885217 -0.3026658 #>  [437,]  0.8111701 -0.73758856  0.9345884  0.7409180  0.176258580 -1.2683008 #>  [438,]  1.0305104  1.87444954 -0.8194507 -1.2243066  0.384375954  0.9854501 #>  [439,] -2.4944146  0.52226669  0.4260386 -1.7984997  0.017743278  0.4088430 #>  [440,]  1.3402293  2.67515714 -0.6113810 -1.1000215 -1.105233355 -0.7943581 #>  [441,]  1.1573332  2.19331246 -0.7200091  0.8563326  0.561000831 -0.9107402 #>  [442,] -0.4789465 -0.20513875 -0.3729966  1.0889968 -0.260758174 -0.5255375 #>  [443,] -0.7732923 -0.39233900  1.5717578 -1.1161545 -1.241716502  1.2176395 #>  [444,] -0.4509234 -0.18906285 -0.3487537  1.1160731 -0.214258350 -0.4968255 #>  [445,]  0.3636263  0.45765111  0.3821331  0.5343526  0.012911770 -2.6787462 #>  [446,]  0.3223779  0.38882816  0.3341411  0.5087774  0.008722501  0.3336891 #>  [447,]  1.1057637 -0.48494707  1.3200683 -1.1896559  0.483586321  1.0523459 #>  [448,] -0.5418816 -0.24244943 -0.4280252  1.0355852 -0.389858369 -0.5896130 #>  [449,] -0.2914138 -0.10470905 -0.2143829 -0.7500283 -0.051677701 -0.3307745 #>  [450,]  0.7538958  1.22784154 -1.1609834  0.7191448  0.138852497  0.7364519 #>  [451,] -0.4815333 -0.20663982 -0.3752428  1.0866101 -0.265374120  1.8932871 #>  [452,]  0.3491245  0.43312235  0.3651853  0.5255670  0.011308526  0.3594165 #>  [453,]  1.9061267 -0.23205747 -0.4128589 -0.9529903 -0.350845754 -0.5720959 #>  [454,]  0.7488221 -0.82191559  0.8548798  0.7171693  0.135831298  0.7318322 #>  [455,]  0.2230610  0.23619446  0.2216418  0.4379014  0.002627849  0.2367557 #>  [456,] -0.3910928 -0.15592872  3.3604074  1.1827037 -0.134752728 -0.4351051 #>  [457,] -0.7516849 -0.37757415 -0.6164466 -1.1033435  0.883227877  1.2502240 #>  [458,]  1.5477197 -0.30763543 -0.5207531 -1.0373772 -0.691520759 -0.6946458 #>  [459,]  0.5892307  0.87958531  0.6544522 -1.5373764  0.062215125  0.5853454 #>  [460,]  1.7966859 -0.25139347 -0.4409865 -0.9762228 -0.425375464 -0.6045028 #>  [461,] -1.0551903 -0.59754751  1.1115342 -1.2668077  0.292570864 -1.0971576 #>  [462,] -0.8415685 -0.43994517 -0.6991542 -1.1552941  0.611323321  1.1253229 #>  [463,] -0.2826361 -0.10046292 -0.2071977 -0.7407422 -0.046777061 -0.3214805 #>  [464,] -0.6221064 -0.29226716 -0.4992335  0.9789517 -0.611278256 -0.6705652 #>  [465,] -1.9024374  0.75361225  0.5762305 -1.6105819  0.042887259  0.5262552 #>  [466,]  0.3324611  0.40537968  0.3458109  0.5152005  0.009643045  0.3434044 #>  [467,] -0.4265248 -0.17535033  3.0507697 -0.8759241 -0.178746167  2.1198651 #>  [468,] -0.6488886 -0.30942633 -0.5232483  0.9622870 -0.701249418 -0.6974273 #>  [469,]  0.4091435  0.53686306 -2.2945249  0.5606506  0.018960334  0.4166757 #>  [470,] -0.4637567 -0.19638233 -0.3598350  1.1033877 -0.234768947 -0.5099889 #>  [471,] -0.2062441 -0.06558110 -0.1458311 -0.6515136 -0.016758330 -0.2396816 #>  [472,] -0.3366800 -0.12730958 -0.2518178 -0.7954651 -0.082714906 -0.3784126 #>  [473,] -0.3003076 -0.10905771 -0.2216885  1.3170551 -0.056994937 -0.3401719 #>  [474,] -1.0614414 -0.60234405 -0.9056003 -1.2698594  0.286994958  0.9064431 #>  [475,] -0.9690899 -0.53252055 -0.8182243 -1.2236366  0.386062196 -1.0134949 #>  [476,]  0.8532016  1.45171773 -1.0114039 -1.3221867  0.207789250  0.8264608 #>  [477,] -0.7126993 -0.35131401 -0.5809173  0.9262131  1.050561656 -0.7611302 #>  [478,] -1.4100359 -0.88467302 -1.2428262  0.7014630  0.113786203  0.6956834 #>  [479,] -0.8464577  2.25525809 -0.7036831 -1.1580234  0.599895204 -0.8934437 #>  [480,]  0.4490097  0.60886311  0.4834111  0.5822922  0.025667979 -2.2007653 #>  [481,] -0.4612430 -0.19494290 -0.3576616 -0.9042954 -0.230648686  1.9707832 #>  [482,]  1.0645352 -0.51054137  1.2653252  0.8276686  0.427281966  1.0157360 #>  [483,] -0.4158912 -0.16945935 -0.3186904  1.1534529 -0.164633224 -0.4607596 #>  [484,]  0.8959318 -0.64474974  1.0440753  0.7715293  0.243647526  0.8649663 #>  [485,]  0.9829319 -0.56873907 -0.8637844  0.8012120  0.329518076 -1.0604623 #>  [486,] -0.2642819 -0.09173523 -0.1922567 -0.7207569 -0.037587019 -0.3019825 #>  [487,]  1.1392165  2.14696947 -0.7327835 -1.1752999  0.532894726  1.0819828 #>  [488,]  0.4357080  0.58457751 -2.1391480  0.5752027  0.023272635  0.4418309 #>  [489,]  0.7419828  1.20165316 -1.1817800  0.7144939  0.131831286  0.7256016 #>  [490,] -1.0957485  1.59021685 -0.9382860  0.7773506  0.258743647  0.8799686 #>  [491,] -0.3680188 -0.14360819 -0.2780804 -0.8248332 -0.110535657 -0.4111347 #>  [492,]  0.5539073  0.80897975 -1.6369989  0.6342833  0.050866583  0.5525781 #>  [493,]  0.8819342 -0.65863944  1.0259095 -1.3044677  0.231463988  0.8523667 #>  [494,] -0.5546828 -0.25023411  2.2762914 -0.9748657 -0.420669318 -0.6025822 #>  [495,]  0.3706350  0.46963112 -2.5617910  0.5385243  0.013740281  0.3800095 #>  [496,]  2.0292779 -0.21320285 -0.3850301 -0.9289939 -0.286114805 -0.5396747 #>  [497,]  0.9777644  1.74577535  1.1509142  0.7994935  0.323907961 -1.0656841 #>  [498,]  0.4926329  0.69027754  0.5360445 -1.6536980  0.034719337  0.4953928 #>  [499,]  0.5930373 -1.12703298  0.6591666  0.6521673  0.063534066  0.5888684 #>  [500,]  1.4785752 -0.32726738 -0.5479695  0.9461891 -0.802540291 -0.7248692 #>  [501,] -0.5729069 -0.26142638 -0.4554294  1.0123632 -0.467387144  1.6102791 #>  [502,] -0.9760393  1.85978720 -0.8247672 -1.2272034  0.377179312 -1.0202658 #>  [503,] -1.6940824 -1.13413864  0.6557638  0.6509349  0.062580247  0.5863260 #>  [504,] -0.8302368 -0.43194609  1.4520767 -1.1489319  0.638926179  1.1396288 #>  [505,] -1.7410907 -1.17694330  0.6360596 -1.5534759  0.057241831  0.5715607 #>  [506,] -0.8718979 -0.46154156  1.3749538  0.8531867 -1.835776154  1.0888020 #>  [507,] -0.5290743 -0.23472587 -0.4167645 -0.9562750 -0.360634206 -0.5766167 #>  [508,]  0.8504522 -0.69185507 -1.0150491 -1.3239262  0.205615885  0.8239788 #>  [509,] -0.2739430 -0.09630341 -0.2001068 -0.7313756 -0.042250748 -0.3122568 #>  [510,]  0.7415717 -0.83281135 -1.1825102  0.7143326  0.131593499  0.7252270 #>  [511,]  0.6283636 -1.04213377  0.7030806  0.6677212  0.076713021  0.6214908 #>  [512,] -0.8063171 -0.41518805 -0.6665900  0.8808002  0.702765774 -0.8538975 #>  [513,] -0.3270979 -0.12243014 -0.2438424 -0.7861641 -0.075289432 -0.3683670 #>  [514,]  1.7081522 -0.26918963 -0.4665379  1.0034867 -0.501492509 -0.6336484 #>  [515,]  0.4760296  0.65897698  0.5159462  0.5963190  0.031050331 -2.0841310 #>  [516,] -0.4183923 -0.17084021 -0.3208274 -0.8690822 -0.167880536 -0.4633412 #>  [517,] -0.1689574 -0.05006751 -0.1167661 -0.6006834 -0.008751863 -0.1990364 #>  [518,]  0.6376399 -1.02166582  0.7146596  0.6717191  0.080464183  0.6300361 #>  [519,]  1.6184554 -0.28957843  2.0183739 -1.0186636 -0.597831208 -0.6663121 #>  [520,] -0.6673689 -0.32141403 -0.5398858  0.9513421 -0.768427198 -0.7159186 #>  [521,] -0.2889723 -0.10352339 -0.2123818  1.3378603 -0.050280529 -0.3281913 #>  [522,]  0.8452293 -0.69764806 -1.0220430  0.7534361  0.201530624  0.8192623 #>  [523,] -2.0027854  0.70296124  0.5441427  0.6080280  0.036274667 -1.9934542 #>  [524,]  1.2164273 -0.42621170 -0.6811311 -1.1443202  0.659811851 -0.8694421 #>  [525,] -0.3919236 -0.15637721 -0.2982876 -0.8462515 -0.135687454 -0.4359663 #>  [526,]  0.5616142 -1.21322067  0.6203554 -1.5677336  0.053208597 -1.7865467 #>  [527,] -0.7033895 -0.34511685  1.7468307 -1.0738978  1.096539634 -0.7518613 #>  [528,] -0.9453223 -0.51491978  1.2564583  0.8255443  0.418589811 -0.9903128 #>  [529,] -0.6090360 -0.28398671 -0.4875563  0.9874559 -0.570423526 -0.6574273 #>  [530,] -1.1854055 -0.69948010 -1.0242527 -1.3283006  0.200262566  0.8177845 #>  [531,] -0.4125654 -0.16762775 -0.3158511  1.1572315 -0.160383009  2.1866275 #>  [532,] -1.5907539  0.96012613  0.7034163 -1.4973698  0.076820126 -1.6083923 #>  [533,]  0.6055732 -1.09557022 -1.4821040  0.6577480  0.068014496 -1.6653911 #>  [534,] -0.7510062 -0.37711279  1.6238346 -1.1029376 -1.128883813  1.2512768 #>  [535,] -1.9292391  0.73947629 -1.7626903 -1.6197863  0.040976570  0.5194393 #>  [536,]  0.4103437  0.53899575 -2.2870457  0.5613200  0.019142119  0.4178145 #>  [537,]  0.5762820 -1.17161301  0.6384417 -1.5513552  0.057870623  0.5733496 #>  [538,]  0.3825223  0.49013351  0.4043323  0.5454942  0.015228588  0.3913546 #>  [539,] -0.1974230 -0.06181349 -0.1388960 -0.6400155 -0.014534070 -0.2301148 #>  [540,] -0.2851976 -0.10169728 -0.2092918 -0.7434695 -0.048172306  3.0845661 #>  [541,] -0.3274413 -0.12260415 -0.2441278  1.2714554 -0.075547236 -0.3687274 #>  [542,] -0.8493315 -0.44544708  1.4157356  0.8623490  0.593307972 -0.8962699 #>  [543,]  0.2868438  0.33197558  0.2933561  0.4851403  0.005962266  0.2992807 #>  [544,]  0.4737258  0.65466394 -1.9486958  0.5951417  0.030563459  0.4776521 #>  [545,] -1.2014831 -0.71235188 -1.0397492 -1.3356099  0.191663726  0.8075824 #>  [546,]  0.4869397  0.67950202 -1.8898447  0.6018489  0.033429191  0.4900558 #>  [547,] -0.8957529  2.08892161 -0.7495117 -1.1850348  0.498874934 -0.9418349 #>  [548,]  0.8245502 -0.72143467  0.9517878  0.7458722  0.185907425  0.8005689 #>  [549,]  0.8020617 -0.74894887  0.9228986  0.7375177  0.169892428  0.7802033 #>  [550,] -0.5365591 -0.23923170 -0.4233416  1.0397575 -0.377521439 -0.5842145 #>  [551,] -0.9993421  1.80133154 -0.8467458  0.8070667  0.349274339 -1.0429461 #>  [552,] -1.0421221 -0.58755268 -0.8872470  0.7934032  0.304692889  0.9220922 #>  [553,]  0.3436914  0.42402434  0.3588564 -1.9149021  0.010745234  0.3542016 #>  [554,] -0.3837206 -0.15196354 -0.2913371  1.1919075 -0.126652437  2.3394154 #>  [555,] -0.1974230 -0.06181349 -0.1388960 -0.6400155 -0.014534070 -0.2301148 #>  [556,] -1.5629793  0.98329223  0.7173634  0.6726467  0.081357137 -1.5822078 #>  [557,]  1.6690891 -0.27775215 -0.4787246 -1.0059606 -0.540747568 -0.6474566 #>  [558,] -0.5767896 -0.26382737 -0.4588711  1.0095816 -0.477785288 -0.6249314 #>  [559,] -2.1616798  0.63394561 -2.0009923  0.5894097  0.028287091  0.4671931 #>  [560,] -0.4837597 -0.20793409  2.6512735 -0.9220243 -0.269392211 -0.5304573 #>  [561,] -0.6765969 -0.32744429 -0.5482134  0.9460352  1.244423674 -0.7251389 #>  [562,]  0.5169914  0.73687518 -1.7678126  0.6167111  0.040630525  0.5181807 #>  [563,] -1.4288848  1.11022561 -1.2613588 -1.4333242  0.108968828  0.6871279 #>  [564,] -2.0197525  0.69498006 -1.8551155 -1.6503225  0.035291335  0.4977138 #>  [565,] -0.6378035  3.30804677 -0.5132946  0.9690650 -0.662970800  1.4570495 #>  [566,] -0.3283658 -0.12307293 -0.2448962 -0.7874040 -0.076244324 -0.3696974 #>  [567,] -0.3588158 -0.13876897 -0.2703405  1.2249378 -0.101782448 -0.4015460 #>  [568,] -0.4879284 -0.21036308 -0.3808019  1.0807860 -0.277028481 -0.5347156 #>  [569,]  0.3827714  0.49056555  0.4046258  0.5456388  0.015260916 -2.5536778 #>  [570,] -1.1793312 -0.69463297  0.9819284  0.7544188  0.203642401 -1.2169760 #>  [571,]  1.0699647 -0.50703787  1.2725208  0.8293856 -2.301907435  1.0205627 #>  [572,]  0.7961001  1.32178930  0.9152557  0.7352798  0.165813092 -1.2906589 #>  [573,] -0.5529241 -0.24916082 -0.4377588  1.0271101 -0.416339796  1.6644429 #>  [574,]  2.4043376 -0.16947248 -0.3187107 -0.8669823 -0.164663931 -0.4607842 #>  [575,]  0.2565571  0.28543779  0.2590466  0.4635823  0.004145137  0.2697242 #>  [576,]  1.5685500 -0.30211871  1.9491254  0.9692334 -0.662050208 -0.6860457 #>  [577,] -0.5467226 -0.24538578 -0.4322896  1.0318401 -0.401319310 -0.5945199 #>  [578,] -0.3018705 -0.10982664 -0.2229749  1.3142733 -0.057966915 -0.3418213 #>  [579,] -0.4930683  4.68673649 -0.3852758 -0.9292105 -0.286648789 -0.5399626 #>  [580,] -0.7635555 -0.38566733 -0.6273074 -1.1104082  0.839275982 -0.8116209 #>  [581,]  1.2984438 -0.39018448 -0.6333518 -1.1143063  0.816081164  1.2222644 #>  [582,] -0.2249781 -0.07377115 -0.1606710 -0.6750008 -0.022245205 -0.2599082 #>  [583,]  0.4362791  0.58561492  0.4681589  0.5755097  0.023372161  0.4423706 #>  [584,]  0.3722527  0.47240783  0.3922515  0.5394805  0.013936622  0.3815549 #>  [585,]  0.6682649 -0.95881067  0.7530228 -1.4605397  0.093750200  0.6581884 #>  [586,] -0.2510851 -0.08559031 -0.1815869 -0.7058734 -0.031810152 -0.2879064 #>  [587,] -1.2845178 -0.77979013  0.8927331  0.7286152  0.154167812 -1.3178249 #>  [588,] -0.6949252 -0.33950756 -0.5647920  0.9357909  1.140650908 -0.7434268 #>  [589,]  0.8948815 -0.64577423 -0.9590384 -1.2967466  0.242718256  0.8640213 #>  [590,]  0.2569010  0.28595581  0.2594336  0.4638353  0.004163266  0.2700611 #>  [591,] -0.4566896 -0.19234260  2.8270289 -0.9006483 -0.223313385 -0.5027431 #>  [592,] -0.5693663 -0.25924196  2.2109548 -0.9852966 -0.458042906 -0.6174333 #>  [593,] -0.5266104 -0.23324747  2.4119539 -0.9544584 -0.355191575 -0.5741140 #>  [594,] -0.8530377  2.23174358 -0.7097831  0.8608208  0.584951417 -0.8999139 #>  [595,] -0.2643020 -0.09174467 -0.1922730  1.3873874 -0.037596327 -0.3020039 #>  [596,] -0.3126307 -0.11515858 -0.2318519 -0.7718100 -0.064972958  2.8315656 #>  [597,]  0.5994412 -1.11076692  0.6671055  0.6550268  0.065796434 -1.6812607 #>  [598,]  0.8003039 -0.75117635  0.9206443 -1.3571119  0.168682448  0.7786098 #>  [599,] -0.3489136 -0.13361089 -0.2620379 -0.8071146 -0.092913753 -0.3912099 #>  [600,] -1.1663876  1.46127508  0.9940820 -1.3195783  0.211096940  0.8302028 #>  [601,] -0.2446346 -0.08262764 -0.1763947  1.4317838 -0.029224277 -0.2810079 #>  [602,]  1.6302728  3.48746914 -0.4914469 -1.0156492 -0.583829109 -0.6618102 #>  [603,]  0.7881917  1.30404762 -1.1048174  0.7322956  0.160506974  0.7676233 #>  [604,]  1.0633159 -0.51133396 -0.7913209  0.8272823  0.425689666  1.0146518 #>  [605,]  0.9707047 -0.57845734  1.1416556  0.7971371  0.316351177  0.9320494 #>  [606,]  2.0835061 -0.20572664 -0.3738767 -0.9190675 -0.262560360 -0.5265739 #>  [607,]  0.3306380  0.40237377  0.3436979  0.5140478  0.009471847  0.3416494 #>  [608,]  3.8209682 -0.09053072 -0.1901755 -0.7178957 -0.036410158 -0.2992471 #>  [609,]  1.4754889 -0.32819428 -0.5492472 -1.0577712 -0.808021802  1.3768758 #>  [610,] -0.5672019 -0.25790893 -0.4503772  1.0164987 -0.452394747  1.6253666 #>  [611,] -0.9771902 -0.53855429 -0.8258513  0.8144698  0.375734072  0.9790610 #>  [612,]  1.1409840 -0.46479646 -0.7315183  0.8513842  0.535592860  1.0835470 #>  [613,]  0.2868438  0.33197558  0.2933561  0.4851403  0.005962266  0.2992807 #>  [614,] -0.3367665 -0.12735389 -0.2518899 -0.7955484 -0.082784207 -0.3785033 #>  [615,]  1.0089048 -0.54901196  1.1918455  0.8097694  0.358738777  0.9661834 #>  [616,] -0.1689574 -0.05006751 -0.1167661 -0.6006834 -0.008751863 -0.1990364 #>  [617,] -0.8839084 -0.47016805  1.3541453  0.8484451  0.520983744  1.0750092 #>  [618,]  0.7871552 -0.76821015 -1.1064390 -1.3663008  0.159820423  0.7666827 #>  [619,] -0.3993102 -0.16037972 -0.3045608 -0.8527125 -0.144197117 -0.4436182 #>  [620,] -1.5747165  0.97338517  0.7114061  0.6705999  0.079398244  0.6276373 #>  [621,] -1.1130507 -0.64232268 -0.9548152  0.7724055  0.245869200  0.8672151 #>  [622,]  0.3984221  0.51790978  0.4231096  0.5546190  0.017389113  0.4064918 #>  [623,] -0.2550314 -0.08741618 -0.1847710 -0.7103717 -0.033467966 -0.2921209 #>  [624,] -0.2538820 -0.08688335 -0.1838430 -0.7090659 -0.032979090 -0.2908938 #>  [625,] -0.3389936 -0.12849519 -0.2537474 -0.7976873 -0.084581027 -0.3808353 #>  [626,]  1.1050723 -0.48535778  1.3191483 -1.1899590  0.482602014 -0.9508119 #>  [627,] -0.4272797 -0.17577055  3.0447621 -0.8765553 -0.179778874 -0.4725061 #>  [628,]  0.5587809 -1.22155446  0.6168680  0.6365507  0.052339112  0.5571073 #>  [629,] -0.9678372 -0.53158906 -0.8170455  0.8176668  0.387692362 -1.0122741 #>  [630,]  0.3297059  0.40083928  0.3426182  0.5134571  0.009385143  0.3407518 #>  [631,] -0.4836760 -0.20788539 -0.3771045  1.0846466 -0.269240364 -0.5303717 #>  [632,]  0.3506763  0.43573029  0.3669951  0.5265174  0.011473102  0.3609050 #>  [633,] -0.6494484 -0.30978772 -0.5237516 -1.0395561  1.422025507 -0.6979880 #>  [634,] -0.3284239 -0.12310241 -0.2449445  1.2699045 -0.076288282 -0.3697583 #>  [635,]  0.4997579 -1.42080733  0.5446934  0.6082528  0.036382060 -1.9917692 #>  [636,] -0.2926352 -0.10530349 -0.2153846  1.3310135 -0.052386617 -0.3320661 #>  [637,] -0.2910342 -0.10452447 -0.2140716  1.3339911 -0.051458719 -0.3303729 #>  [638,] -0.4591491 -0.19374599 -0.3558523 -0.9026209 -0.227255071  1.9791570 #>  [639,]  1.0973427 -0.48999107  1.3088676 -1.1933663  0.471691800  1.0448760 #>  [640,] -0.4984232 -0.21651062 -0.3899427 -0.9333081 -0.296915320 -0.5454251 #>  [641,]  0.3535793  0.44061976  0.3703831  0.5282885  0.011785409  0.3636882 #>  [642,] -0.3484055 -0.13334761 -0.2616126 -0.8066357 -0.092473715 -0.3906791 #>  [643,] -0.8096237 -0.41749430  1.4933447 -1.1372255  0.693458690 -0.8571601 #>  [644,]  1.3677514 -0.36366504 -0.5976843  0.9166317 -1.034415246 -0.7794530 #>  [645,] -0.3730191 -0.14625558  3.5423914 -0.8293801 -0.115503722 -0.4163378 #>  [646,]  1.9097635 -0.23145951  2.4272867  1.0501437 -0.348673845 -0.5710806 #>  [647,] -0.6511935 -0.31091494 -0.5253205  0.9608981 -0.709396535  1.4291114 #>  [648,] -2.5608467  0.50401298  0.4137379  0.5500977  0.016287241  0.3989510 #>  [649,]  0.3796562  0.48516937  0.4009569  0.5438256  0.014860013  0.3886215 #>  [650,] -0.7407855 -0.37018285 -0.6064918 -1.0967985  0.926269469  1.2673566 #>  [651,]  0.3726246  0.47304676  0.3926884 -1.8528812  0.013982031  0.3819101 #>  [652,]  1.0577745 -0.51496311  1.2563713 -1.2113527  0.418505046 -0.9903701 #>  [653,] -0.2431368 -0.08194364 -0.1751914  1.4353701 -0.028645407 -0.2794044 #>  [654,]  1.2535055 -0.40923713 -0.6587121 -1.1304093  0.727613437 -0.8454526 #>  [655,] -1.1141240 -0.64316115 -0.9558415 -1.2951652  0.245098458 -1.1541526 #>  [656,] -1.2386085 -0.74230692  0.9296936  0.7394975  0.173574154 -1.2738808 #>  [657,] -0.2830550 -0.10066450 -0.2075400 -0.7411892 -0.047003281 -0.3219245 #>  [658,]  0.8135360  1.36112444  0.9376273 -1.3480767  0.177938817  0.7905992 #>  [659,]  0.4844548 -1.48189265  0.5261350 -1.6650131  0.032876643  0.4877250 #>  [660,] -0.4478893 -0.18734301 -0.3461390 -0.8935379 -0.209597426 -0.4937097 #>  [661,] -0.3811813 -0.15060401 -0.2891890 -0.8367253 -0.123942475  2.3539340 #>  [662,]  0.3933601  0.50902337  0.4171220 -1.8124554  0.016679656 -2.4895616 #>  [663,] -1.0859875 -0.62127471 -0.9289741  0.7801892  0.266397005 -1.1269680 #>  [664,] -1.1012155 -0.63309552  1.0598772  0.7757763  0.254582430  0.8758970 #>  [665,] -0.3735318 -0.14652774 -0.2827277 -0.8298443 -0.116021704 -0.4168710 #>  [666,] -0.3389457 -0.12847063  3.9415475 -0.7976414 -0.084542127 -0.3807852 #>  [667,] -0.1974230 -0.06181349 -0.1388960 -0.6400155 -0.014534070 -0.2301148 #>  [668,]  1.2172169 -0.42583750 -0.6806386  0.8741123  0.661208163 -0.8689165 #>  [669,]  0.2230610  0.23619446  0.2216418  0.4379014  0.002627849  0.2367557 #>  [670,]  0.2868438  0.33197558  0.2933561  0.4851403  0.005962266  0.2992807 #>  [671,]  0.5537794 -1.23651127  0.6107167 -1.5767309  0.050828335  0.5524592 #>  [672,]  0.3642651  0.45873961  0.3828814  0.5347348  0.012985807  0.3739200 #>  [673,]  1.4524525 -0.33525954 -0.5589660  0.9393436  1.175746783 -0.7370102 #>  [674,] -0.3226196 -0.12016684 -0.2401242 -0.7817618 -0.071983029  2.7497822 #>  [675,] -0.5855273 -0.26925146 -0.4666261 -0.9965943 -0.501769777  1.5779128 #>  [676,] -0.3950904 -0.15808994 -0.3009754  1.1778143 -0.139291825 -0.4392480 #>  [677,] -0.6436879 -0.30607432  1.9283577  0.9654465 -0.683105090 -0.6922171 #>  [678,]  0.2230610  0.23619446  0.2216418  0.4379014  0.002627849  0.2367557 #>  [679,] -0.8034205 -0.41317045  1.5062025 -1.1336681  0.711053686 -0.8510386 #>  [680,]  0.5376988  0.77710488 -1.6920964  0.6266562  0.046175843  0.5374952 #>  [681,]  0.8742459 -0.66649157 -0.9843045  0.7638669  0.224955120 -1.1828153 #>  [682,] -0.4142625 -0.16856176 -0.3172996 -0.8655776 -0.162542254 -0.4590781 #>  [683,]  0.3017134  0.35548014  0.3103564  0.4952315  0.007029348  0.3137127 #>  [684,] -1.1285067 -0.65442497 -0.9696057 -1.3019501  0.235067862  0.8561420 #>  [685,] -0.4132411 -0.16799945 -0.3164277  1.1564603 -0.161240295 -0.4580232 #>  [686,]  1.1959448 -0.43612178  1.4406178  0.8678572  0.624301775 -0.8833099 #>  [687,] -0.2354262 -0.07844606 -0.1690099  1.4543371 -0.025790549 -0.2711384 #>  [688,]  0.5212479  0.74509881  0.5708645  0.6187743  0.041730445  0.5221551 #>  [689,]  0.6093771  0.92053584  0.6794423  0.6594279  0.069416175  0.6039735 #>  [690,]  1.7418972 -0.26215532  2.1907009  1.0115152 -0.470529914 -0.6222020 #>  [691,]  1.1924258 -0.43786481 -0.6964305 -1.1536473  0.618337199 -0.8857388 #>  [692,]  0.3321367  0.40484450  0.3454349  0.5149957  0.009612433  0.3430923 #>  [693,] -0.2722616 -0.09550422 -0.1987383  1.3707199 -0.041411785 -0.3104705 #>  [694,] -0.3784002 -0.14911865 -0.2868382 -0.8342332 -0.121020792  2.3700514 #>  [695,]  0.7346604 -0.84343348  0.8368784  0.7116132  0.127640056  0.7189267 #>  [696,] -0.4582025 -0.19320559 -0.3550347 -0.9018625 -0.225732477 -0.5042950 #>  [697,]  0.2569010  0.28595581  0.2594336  0.4638353  0.004163266  0.2700611 #>  [698,] -0.9152788 -0.49289464 -0.7677456 -1.1954901  0.465031830 -0.9609522 #>  [699,]  0.2337348  0.25162064  0.2334955  0.4463190  0.003060065  0.2472958 #>  [700,]  0.6464930  0.99723305  0.7257285 -1.4803791  0.084161001  0.6381837 #>  [701,]  3.4441016 -0.10419272 -0.2135120 -0.7489134 -0.051066519 -0.3296507 #>  [702,] -0.4196516 -0.17153663 -0.3219040  1.1492313 -0.169532360 -0.4646407 #>  [703,] -1.9014944  0.75411816 -1.7344579 -1.6102567  0.042956585  0.5264984 #>  [704,]  0.7760137  1.27685093 -1.1241603  0.7276655  0.152568182  0.7565656 #>  [705,] -0.5477451 -0.24600715 -0.4331908 -0.9698803 -0.403769542 -0.5955560 #>  [706,] -0.3368458 -0.12739444 -0.2519560 -0.7956246 -0.082847671 -0.3785863 #>  [707,]  0.3634159  0.45729265  0.3818866 -1.8718647  0.012887443  0.3731077 #>  [708,] -0.6167494 -0.28886588  2.0224730  0.9824065 -0.594296789 -0.6651829 #>  [709,]  0.2565571  0.28543779  0.2590466  0.4635823  0.004145137  0.2697242 #>  [710,]  0.2671704  0.30153637  0.2710194  0.4713004  0.004730297  0.2801073 #>  [711,] -0.4177269 -0.17047257 -0.3202587 -0.8685189 -0.167012368 -0.4626545 #>  [712,] -0.4466818 -0.18665966 -0.3450989 -0.8925558 -0.207762088 -0.4924692 #>  [713,] -0.3758279  6.76827077 -0.2846656 -0.8319184 -0.118361245 -0.4192584 #>  [714,] -1.5427760 -0.99923907  0.7278424  0.6762210  0.084879484  0.6397374 #>  [715,] -0.2664142 -0.09273848 -0.1939865 -0.7231201 -0.038583995 -0.3042523 #>  [716,] -0.2446346 -0.08262764 -0.1763947  1.4317838 -0.029224277 -0.2810079 #>  [717,]  0.2337348  0.25162064  0.2334955  0.4463190  0.003060065  0.2472958 #>  [718,] -1.3730298  1.17179300  0.8288271  0.7091036  0.124084220 -1.4022496 #>  [719,]  0.4587935 -1.59517778  0.4951667 -1.7023375  0.027535228  0.4636068 #>  [720,] -0.5669018 -0.25772422 -0.4501115 -0.9835570  2.214273620  1.6261685 #>  [721,]  1.2026970  2.31047756 -0.6898042 -1.1496238  0.635857656  1.1380605 #>  [722,]  0.6586767  1.02275551  0.7409898  0.6806596  0.089438762 -1.5399209 #>  [723,] -0.2261772 -0.07430387 -0.1616258 -0.6764640 -0.022633796 -0.2611989 #>  [724,] -0.8436580 -0.44142429 -0.7010893 -1.1564617  0.606404831 -0.8906896 #>  [725,]  1.0361527 -0.52956161 -0.8144785 -1.2215865  0.391274368 -1.0096145 #>  [726,]  0.4681119 -1.55234889  0.5063899 -1.6884513  0.029399255  0.4723753 #>  [727,]  0.8980155 -0.64272557 -0.9553084 -1.2949012  0.245498423  0.8668408 #>  [728,]  0.2671704  0.30153637  0.2710194  0.4713004  0.004730297  0.2801073 #>  [729,] -1.0487730 -0.59263393  1.1191179  0.7913498  0.298443169  0.9166420 #>  [730,] -0.2531789 -0.08655782 -0.1832756 -0.7082653 -0.032682484 -0.2901431 #>  [731,] -0.7670489 -0.38805760 -0.6305073  0.8988967 -1.209353920 -0.8150807 #>  [732,] -0.2073873 -0.06607360 -0.1467323 -0.6529822 -0.017062829 -0.2409194 #>  [733,]  0.6943817 -0.91032584  0.7858987  0.6954546  0.106221281  0.6821268 #>  [734,]  0.4012555  0.52290136 -2.3448589  0.5562223  0.017795217  0.4091850 #>  [735,]  1.1274095 -0.47238745 -0.7413427  0.8472435  0.515112062 -0.9332455 #>  [736,] -0.3638846 -0.14142894 -0.2746007 -0.8210461 -0.106541571 -0.4068293 #>  [737,]  0.4269708  0.56876711 -2.1879974  0.5704760  0.021786448  0.4335691 #>  [738,] -1.5278262  1.01403892  0.7357853  0.6789086  0.087615161 -1.5490218 #>  [739,]  1.5272336 -0.31323416 -0.5285453  0.9587515 -0.722199228 -0.7033248 #>  [740,]  0.5091469 -1.38545991  0.5561119  0.6128820  0.038656318  0.5108501 #>  [741,]  2.0224124 -0.21418308 -0.3864873 -0.9302772 -0.289291061 -0.5413816 #>  [742,]  0.5088703  0.72125132  0.5557752 -1.6319967  0.038587952 -1.9585128 #>  [743,] -0.3698947 -0.14459993 -0.2796609 -0.8265433 -0.112381796 -0.4130873 #>  [744,]  0.7071313  1.12589668  0.8019998 -1.4272908  0.112707576 -1.4413571 #>  [745,] -1.5795193  0.96938115  0.7089953 -1.4930530  0.078614449  0.6258587 #>  [746,] -0.1971291 -0.06168895 -0.1386655 -0.6396272 -0.014463694 -0.2297956 #>  [747,] -0.9575632 -0.52396530  1.2385684  0.8212291 -2.491229674 -1.0022570 #>  [748,] -0.7300371 -0.36293145 -0.5966912  0.9171889  0.971439367 -0.7783702 #>  [749,] -1.6253007  0.93260715 -1.4560894  0.6620185  0.071627266  0.6094151 #>  [750,]  2.2747838 -0.18266659 -0.3390079 -0.8867661 -0.197225630 -0.4851919 #>  [751,] -0.9708757 -0.53384926 -0.8199052 -1.2245547  0.383753601  0.9849934 #>  [752,]  0.3219710  0.38816391  0.3336709  0.5085157  0.008686681  0.3332965 #>  [753,] -1.0460543 -0.59055548  1.1223604  0.7921869  0.300977441  0.9188618 #>  [754,] -1.9821229  0.71289824  0.5504692  0.6106020  0.037521102  0.5065131 #>  [755,] -1.0593554 -0.60074230  1.1066640  0.7881201  0.288840117  0.9081063 #>  [756,] -0.5074791 -0.22185221 -0.3978480 -0.9401787 -0.314852645 -0.5546539 #>  [757,] -0.5065583 -0.22130756 -0.3970435 -0.9394835 -0.312995507 -0.5537161 #>  [758,] -0.4789465 -0.20513875 -0.3729966  1.0889968 -0.260758174 -0.5255375 #>  [759,] -0.1778363 -0.05366153 -0.1236261 -0.6133470 -0.010340985 -0.2087660 #>  [760,]  0.5509960  0.80322982  0.6072962  0.6329232  0.050000776 -1.8186079 #>  [761,] -0.3995373 -0.16050318 -0.3047539  1.1724566 -0.144464421 -0.4438533 #>  [762,] -0.1689574 -0.05006751 -0.1167661 -0.6006834 -0.008751863 -0.1990364 #>  [763,]  0.3280681  0.39814652  0.3407217  0.5124166  0.009234117  0.3391742 #>  [764,] -0.7836839 -0.39949219  1.5485447 -1.1222401  0.771066653  1.2025872 #>  [765,] -0.3466274 -0.13242726 -0.2601248  1.2423037 -0.090945060 -0.3888207 #>  [766,]  1.1797613 -0.44423900 -0.7047687  0.8630541  0.597198655 -0.8945958 #>  [767,] -0.7064538 -0.34715344 -0.5752458 -1.0758011  1.081120841 -0.7549130 #>  [768,]  0.6132044  0.92837016  0.6842006  0.6611119  0.070846565  0.6075076 #>  [769,]  0.5423116  0.78614212 -1.6760615  0.6288405  0.047478867  0.5417908 #>  [770,] -0.1982661 -0.06217104 -0.1395573 -0.6411274 -0.014737229 -0.2310304 #>  [771,]  1.0576208 -0.51506436 -0.7960719  0.8254746  0.418307080  1.0095869 #>  [772,]  0.5478700 -1.25459809  0.6034571  0.6314580  0.049082580 -1.8282752 #>  [773,] -1.1334029  1.51913095  1.0263822  0.7667253  0.231775836  0.8526951 #>  [774,] -0.1778363 -0.05366153 -0.1236261 -0.6133470 -0.010340985 -0.2087660 #>  [775,] -0.7612884 -0.38411820 -0.6252317 -1.1090640  0.847445515 -0.8093751 #>  [776,]  0.5148180 -1.36484261  0.5630207 -1.6242899  0.040076707  0.5161504 #>  [777,]  0.3421571  0.42146411  0.3570712 -1.9183954  0.010589747  0.3527279 #>  [778,] -0.1689574 -0.05006751 -0.1167661 -0.6006834 -0.008751863 -0.1990364 #>  [779,] -0.2249781 -0.07377115 -0.1606710 -0.6750008 -0.022245205 -0.2599082 #>  [780,]  0.7615111 -0.80343294  0.8710423  0.7220950  0.143473966  0.7433815 #>  [781,] -0.4173978 -0.17029085 -0.3199776 -0.8682402 -0.166584185 -0.4623149 #>  [782,]  0.8051969 -0.74500442 -1.0788411  0.7386907  0.172065400  0.7830449 #>  [783,] -1.2907720  1.27399307 -1.1262366  0.7271750  0.151747605  0.7553994 #>  [784,] -1.2742191 -0.77133974  0.9007795 -1.3679736  0.158264201  0.7645397 #>  [785,] -1.0095955  1.77661410  1.1676307  0.8037178  0.337850554 -1.0529142 #>  [786,]  1.0350041 -0.53035717 -0.8154860  0.8182379  0.389863248 -1.0106585 #>  [787,] -0.5793377 -0.26540619 -0.4611313  1.0077705 -0.484695789  1.5936163 #>  [788,]  0.2886615  0.33482616  0.2954289  0.4863902  0.006086229  0.3010475 #>  [789,] -0.4720853 -0.20117115 -0.3670456 -0.9128948 -0.248784637  1.9285716 #>  [790,] -0.9440902 -0.51401154  1.2582863  0.8259831 -2.378844442 -0.9891099 #>  [791,] -0.5388788 -0.24063268 -0.4253822  1.0379320 -0.382864347 -0.5865677 #>  [792,]  0.3223779  0.38882816  0.3341411  0.5087774  0.008722501  0.3336891 #>  [793,]  0.5870651  0.87521258  0.6517717  0.6494839  0.061473322  0.5833405 #>  [794,] -0.4323159 -0.17858057 -0.3327507 -0.8807493 -0.186774191 -0.4776938 #>  [795,]  0.6992060 -0.90183470 -1.2626467  0.6974187  0.108644310  0.6865420 #>  [796,]  0.4698105  0.64735093  0.5084384  0.5931332  0.029748197  0.4739723 #>  [797,]  0.3532875  0.44012765  0.3700424  0.5281109  0.011753755  0.3634085 #>  [798,]  0.9925053 -0.56132643 -0.8545026  0.8043816  0.340088608  0.9515404 #>  [799,] -0.6202046 -0.29105843 -0.4975327 -1.0202276  1.652315049 -0.6686547 #>  [800,] -0.5113231 -0.22412983  2.4924693 -0.9430732 -0.322688624  1.7902925 #>  [801,]  0.2657897  0.29942914  0.2694588  0.4703068  0.004651127  0.2787582 #>  [802,] -0.3318968 -0.12486764 -0.2478333  1.2644748 -0.078947772 -0.3734005 #>  [803,]  0.2972664  0.34840679  0.3052619  0.4922451  0.006697409  0.3094017 #>  [804,] -0.8327590 -0.43372317 -0.6910012 -1.1503524  0.632643699 -0.8799625 #>  [805,]  1.4038215 -0.35107518  1.7223799 -1.0794442 -0.950315091  1.3144509 #>  [806,] -1.4222267 -0.89504163  0.7969339 -1.4305998  0.110639491  0.6901250 #>  [807,]  0.4575319  0.62455726  0.4936493 -1.7042480  0.027289334 -2.1625420 #>  [808,]  0.9176661 -0.62416748  1.0723462  0.7790992  0.263435153 -1.1305779 #>  [809,] -0.2643020 -0.09174467 -0.1922730  1.3873874 -0.037596327 -0.3020039 #>  [810,]  0.7183267  1.15009130  0.8161656  0.7051255  0.118625172 -1.4204128 #>  [811,] -0.9158492 -0.49331041 -0.7682789  0.8362648  0.464089064  1.0400306 #>  [812,]  0.7740542 -0.78586149 -1.1273328  0.7269165  0.151316745  0.7547852 #>  [813,] -0.4902699 -0.21173063 -0.3828393 -0.9270586 -0.281382792  1.8618288 #>  [814,] -0.2928851 -0.10542525 -0.2155897 -0.7515685 -0.052532524 -0.3323304 #>  [815,] -0.6309699 -0.29791759 -0.5071683 -1.0274044  1.562233257 -0.6794637 #>  [816,] -0.5031751 -0.21930926 -0.3940888 -0.9369225 -0.306236600 -0.5502692 #>  [817,] -0.6712499  3.08692815 -0.5433866  0.9490977 -0.783080874  1.3892797 #>  [818,] -0.4170513 -0.17009951 -0.3196815 -0.8679465 -0.166134070  2.1647024 #>  [819,]  1.4651038 -0.33134702  1.8063957  0.9426679 -0.826829973  1.3678430 #>  [820,] -0.5851570 -0.26902099 -0.4662972  1.0036760 -0.500736698 -0.6333751 #>  [821,] -2.0714708 -1.48898539  0.5240703  0.5997334  0.032500986  0.4861243 #>  [822,] -2.0896990  0.66368107  0.5189773  0.5975969  0.031586481  0.4821717 #>  [823,] -0.6706467 -0.32355264  1.8421557  0.9494453 -0.780790561 -0.7191946 #>  [824,]  1.1399081 -0.46539037  1.3655830  0.8510570  0.533949305  1.0825948 #>  [825,]  0.8736590 -0.66709772 -0.9850416 -1.3094867  0.224463482  0.8449116 #>  [826,]  0.2565571  0.28543779  0.2590466  0.4635823  0.004145137  0.2697242 #>  [827,] -1.0786414 -0.61559317 -0.9219725 -1.2782015  0.272352977  0.8929667 #>  [828,] -0.2664142 -0.09273848 -0.1939865 -0.7231201 -0.038583995 -0.3042523 #>  [829,]  0.9123279 -0.62911584 -0.9386187  0.7772499  0.258475688 -1.1367410 #>  [830,] -0.7227618 -0.35804449  1.6947233  0.9209386 -0.996354914  1.2967825 #>  [831,]  0.3294278  0.40038165  0.3422960 -1.9482521  0.009359375  0.3404840 #>  [832,]  0.5625060 -1.21061774  0.6214535 -1.5667206  0.053484357 -1.7839070 #>  [833,] -0.3367665 -0.12735389 -0.2518899 -0.7955484 -0.082784207 -0.3785033 #>  [834,]  1.7328310 -0.26401356 -0.4591378  1.0093673 -0.478597209 -0.6252349 #>  [835,] -0.4321001 -0.17845994 -0.3325656  1.1356278 -0.186470676 -0.4774716 #>  [836,] -1.2895645 -0.78393984  0.8888398 -1.3746606  0.152211009  0.7560585 #>  [837,] -1.0019172 -0.55708202  1.1776091  0.8062211  0.346358381 -1.0454502 #>  [838,]  0.5728829  0.84671717 -1.5766761  0.6430463  0.056766050 -1.7537776 #>  [839,]  0.9242436  1.61769725 -0.9251403  0.7813692  0.269636298 -1.1230785 #>  [840,] -0.4654957 -0.19737974 -0.3613394  1.1017068 -0.237648981 -0.5117707 #>  [841,] -0.4256571 -0.17486765 -0.3270429  1.1425988 -0.177564250 -0.4708338 #>  [842,] -1.5178870  1.02303676  0.7411576  0.6807160  0.089497970  0.6495069 #>  [843,]  1.6088153 -0.29192954  2.0049780  0.9792923 -0.609580129 -0.6700318 #>  [844,] -0.8404455 -0.43915071  1.4324302  0.8660514 -1.628695081  1.1267240 #>  [845,]  0.3902484  0.50358069  0.4134457  0.5499556  0.016253640  0.3987154 #>  [846,]  0.2868438  0.33197558  0.2933561  0.4851403  0.005962266  0.2992807 #>  [847,] -0.4640011 -0.19652242 -0.3600464 -0.9064943 -0.235172221 -0.5102394 #>  [848,]  0.2230610  0.23619446  0.2216418  0.4379014  0.002627849  0.2367557 #>  [849,]  1.4356044 -0.34059619  1.7659016 -1.0696449 -0.883473408 -0.7450671 #>  [850,]  0.7597349 -0.80597641  0.8687781  0.7214085  0.142386665  0.7417657 #>  [851,]  0.8760215 -0.66466380  1.0182459  0.7644985  0.226446860  0.8470404 #>  [852,]  1.5224260 -0.31457374 -0.5304060  0.9575209 -0.729655151 -0.7053942 #>  [853,]  0.2972664  0.34840679  0.3052619  0.4922451  0.006697409  0.3094017 #>  [854,] -0.3545832 -0.13655798 -0.2667884 -0.8124315 -0.097923045 -0.3971304 #>  [855,]  0.7188551 -0.86863112  0.8168349  0.7053368  0.118909705  0.7045033 #>  [856,]  1.2626495 -0.40523084 -0.6533971  0.8872583  0.745047259 -0.8397458 #>  [857,]  2.1507061 -0.19707438 -0.3608790 -0.9072597 -0.236765088  1.9560838 #>  [858,]  0.3893567  0.50202391  0.4123928 -1.8200236  0.016132969  0.3978664 #>  [859,] -0.2233793 -0.07306247 -0.1593988 -0.6730427 -0.021734354 -0.2581867 #>  [860,] -0.6719510 -0.32440467 -0.5440192  0.9486942  1.272672162  1.3879290 #>  [861,] -0.4732669 -0.20185296 -0.3680697  1.0943016 -0.250818840 -0.5197277 #>  [862,] -1.1448977 -0.66732360  1.0149025  0.7635802  0.224280661  0.8447147 #>  [863,]  0.7855919 -0.77028010  0.9017998  0.7313108  0.158788706  0.7652637 #>  [864,] -0.5599599 -0.25346185 -0.4439723  1.0218334 -0.433847643 -0.6079226 #>  [865,]  0.9730102 -0.57660294  1.1446783  0.7979077  0.318805403 -1.0705354 #>  [866,] -0.6762671  3.05597022 -0.5479156  0.9462231 -0.802309800 -0.7248096 #>  [867,] -1.3561553 -0.83922772  0.8403307  0.7126846  0.129185022 -1.3861836 #>  [868,]  0.9662799 -0.58204563  1.1358564  0.7956549  0.311677571  0.9280897 #>  [869,] -1.2573963  1.31997842  0.9142229  0.7349765  0.165266873  0.7740671 #>  [870,] -0.4867403 -0.20967004 -0.3797684  1.0818599 -0.274836980 -0.5335022 #>  [871,] -0.8404526 -0.43915574  1.4324167 -1.1546698  0.613971543 -0.8875358 #>  [872,] -0.4115459 -0.16706733 -0.3149812 -0.8632609 -0.159095535  2.1916746 #>  [873,] -0.3650940 -0.14206555 -0.2756182 -0.8221566 -0.107699451 -0.4080891 #>  [874,] -0.7693784 -0.38965359 -0.6326420  0.8977871  0.818759767 -0.8173871 #>  [875,]  0.2675128  0.30205953  0.2714066  0.4715464  0.004750073  0.2804418 #>  [876,] -0.4572697 -0.19267335 -0.3542291  1.1097374 -0.224238724 -0.5033381 #>  [877,] -0.6481444 -0.30894612 -0.5225795  0.9627369 -0.698633001 -0.6966820 #>  [878,]  0.7295759 -0.85139938 -1.2042026  0.7096029  0.124784689  0.7142891 #>  [879,] -0.7431313 -0.37177039 -0.6086329 -1.0982119 -1.090776285 -0.7913720 #>  [880,]  0.4209283  0.55789957  0.4498353  0.5671735  0.020797986  0.4278486 #>  [881,]  0.3505998  0.43560163  0.3669059  0.5264706  0.011464950  0.3608316 #>  [882,]  0.4763592 -1.51608284  0.5163444  0.5964872  0.031120415  0.4801258 #>  [883,] -1.6365409  0.92394770  0.6815154  0.6601625  0.070037015 -1.6514901 #>  [884,] -0.5363409 -0.23910003  2.3632296 -0.9616034 -0.377021516  1.7123490 #>  [885,] -1.1607002 -0.67982111  0.9995129  0.7593283  0.214485300  0.8339930 #>  [886,] -0.3466379 -0.13243274 -0.2601336  1.2422882 -0.090954117 -0.3888318 #>  [887,] -0.4574071 -0.19275173 -0.3543478  1.1096016 -0.224458349 -0.5034791 #>  [888,] -0.7878665 -0.40238090 -0.6496105 -1.1246761 -1.319590159 -0.8356754 #>  [889,]  0.3796562  0.48516937  0.4009569  0.5438256  0.014860013  0.3886215 #>  [890,]  0.8075855 -0.74202349 -1.0752850  0.7395825  0.173733770 -1.2735460 #>  [891,]  0.4337273  0.58098342  0.4651077  0.5741361  0.022929749 -2.2729392 #>  [892,]  0.4369562  0.58684541 -2.1323379  0.5758734  0.023490531  0.4430103 #>  [893,]  1.1776561 -0.44531423 -0.7061731  0.8624264 -1.684255759  1.1159645 #>  [894,] -0.2562292 -0.08797233 -0.1857385 -0.7117288 -0.033982737 -0.2933991 #>  [895,] -1.5238793 -0.98270876 -1.3551792  0.6796243  0.088356581  0.6471267 #>  [896,]  0.3001106  0.35292646  0.3085192  0.4941581  0.006908426  0.3121594 #>  [897,]  0.9100744  1.58422031 -0.9412097 -1.2878843  0.256401584 -1.1393638 #>  [898,] -0.5990767 -0.27771924 -0.4786779  0.9941101 -0.540593402 -0.6474038 #>  [899,] -0.7292839 -0.36242471 -0.5960050  0.9175747 -1.025944408 -0.7776218 #>  [900,] -0.3497529 -0.13404609 -0.2627405 -0.8079049 -0.093643815 -0.3920868 #>  [901,]  0.9639000 -0.58399160  1.1327386 -1.2580894  0.309183804  0.9259595 #>  [902,]  1.2688426 -0.40255600 -0.6498433 -1.1248234  0.757017976 -0.8359258 #>  [903,]  0.4804243  0.66722484 -1.9184348  0.5985554  0.031993932 -2.0663601 #>  [904,]  0.5998383  0.90108610 -1.4979073  0.6552035  0.065938513  0.5951589 #>  [905,] -0.4620865 -0.19542560 -0.3583908  1.1050106 -0.232025632 -0.5082771 #>  [906,]  0.5298050 -1.31284717  0.5813204 -1.6054140  0.044003850  0.5301385 #>  [907,]  0.5168431 -1.35760906  0.5654899  0.6166390  0.040592567  0.5180422 #>  [908,]  0.3321367  0.40484450  0.3454349  0.5149957  0.009612433  0.3430923 #>  [909,] -0.7048525  2.88943193  1.7427898 -1.0748071 -0.918153394 -0.7533184 #>  [910,]  0.5403690 -1.27822835  0.5942550 -1.5925546  0.046927044  0.5399821 #>  [911,]  0.2551705  0.28335165  0.2574864  0.4625600  0.004072598  0.2683655 #>  [912,]  1.5417379 -0.30925213 -0.5230058  0.9624501 -0.700299641 -0.6971570 #>  [913,] -1.0935370  1.59457134 -0.9361754  0.7779906  0.260452187  0.8816268 #>  [914,]  0.9354081 -0.60819722  1.0954812 -1.2735604  0.280392393 -1.1105824 #>  [915,] -0.7361579 -0.36705625 -0.6022703  0.9140748 -1.057783671  1.2747789 #>  [916,]  0.8748906 -0.66582694 -0.9834961 -1.3087355  0.225495947  0.8460215 #>  [917,]  0.3607176  0.45270302  0.3787275  0.5326073  0.012578332  0.3705256 #>  [918,] -1.9374059  0.73526024  0.5646497 -1.6225759  0.040416540  0.5173986 #>  [919,] -0.4311149 -0.17790942 -0.3317205  1.1366842 -0.185089209 -0.4764571 #>  [920,] -0.2339281 -0.07777115 -0.1678116  1.4581239 -0.025259735 -0.2695303 #>  [921,]  1.8831654 -0.23589549 -0.4184739 -0.9577065 -0.364974397 -0.5785933 #>  [922,] -0.6796845 -0.32946850 -0.5510027  0.9442822 -0.815592924 -0.7282221 #>  [923,] -0.2351082 -0.07830268 -0.1687555 -0.6872200 -0.025677243 -0.2707972 #>  [924,]  0.2565571  0.28543779  0.2590466  0.4635823  0.004145137  0.2697242 #>  [925,] -0.2233793 -0.07306247 -0.1593988 -0.6730427 -0.021734354 -0.2581867 #>  [926,] -0.5484657 -0.24644531 -0.4338261 -0.9703999 -0.405502550  1.6770475 #>  [927,]  0.4220157  0.55985125  0.4511308  0.5677698  0.020973527  0.4288785 #>  [928,] -0.2752619 -0.09693151 -0.2011810 -0.7328079 -0.042917019 -0.3136574 #>  [929,] -1.9293719  0.73940739 -1.7628255  0.6173481  0.040967382  0.5194059 #>  [930,] -0.7599126 -0.38317894 -0.6239724 -1.1082472  0.852453755  1.2376053 #>  [931,]  0.6011586  0.90377174 -1.4942408  0.6557906  0.066412501  0.5963795 #>  [932,]  0.2777788  0.31785513  0.2830414 -2.0883996  0.005370053  0.2904577 #>  [933,] -0.4930682 -0.21336806 -0.3852758 -0.9292105 -0.286648716 -0.5399625 #>  [934,] -0.4579588 -0.19306647 -0.3548242 -0.9016670 -0.225341457 -0.5040449 #>  [935,] -0.1971291 -0.06168895 -0.1386655 -0.6396272 -0.014463694 -0.2297956 #>  [936,] -0.3620294 -0.14045385 -0.2730406  1.2204969 -0.104782215 -0.4048961 #>  [937,] -0.8209245 -0.42540135 -0.6800645 -1.1436650  0.662840928 -0.8683037 #>  [938,]  0.8967828 -0.64392176  1.0451807 -1.2956260  0.244402234  0.8657318 #>  [939,] -1.8981495  0.75591747  0.5776816 -1.6091022  0.043203680  0.5273629 #>  [940,] -0.9305420 -0.50405275 -0.7820298 -1.2035711  0.440640234  1.0247199 #>  [941,] -1.4236442  1.11576104  0.7960495  0.6987239  0.110281031 -1.4503585 #>  [942,]  0.9513285  1.68219441  1.1162836  0.7906168  0.296239557  0.9147008 #>  [943,] -0.5779426 -0.26454143 -0.4598936 -0.9913153 -0.480903549 -0.6260953 #>  [944,] -1.8737175  0.76928953  0.5860840  0.6247528  0.045066048  0.5337679 #>  [945,]  0.9339945 -0.60944353 -0.9143810 -1.2743453  0.279014330 -1.1121487 #>  [946,]  1.0780352 -0.50190682 -0.7792871 -1.2020267 -2.246241012  1.0277341 #>  [947,] -0.2929275 -0.10544590 -0.2156245  1.3304722 -0.052557300 -0.3323752 #>  [948,] -0.6958632 -0.34012797 -0.5656418  0.9352768  1.135649755 -0.7443618 #>  [949,]  0.7789448 -0.77919057 -1.1194463  0.7287838  0.154453475  0.7592281 #>  [950,]  0.4781038  0.66286644  0.5184527  0.5973761  0.031493250 -2.0757042 #>  [951,]  1.8341506 -0.24446823 -0.4309580 -0.9680504 -0.397717155 -0.5929886 #>  [952,] -0.4397071 -0.18272559 -0.3390981 -0.8868523 -0.197378965  2.0605820 #>  [953,]  0.8554881 -0.68634833 -1.0083912  0.7571478  0.209608810  0.8285245 #>  [954,] -1.7432107 -1.17888342  0.6351974  0.6433988  0.057015363  0.5709129 #>  [955,] -0.9674985  1.88204383 -0.8167268 -1.2228177  0.388134708  0.9881970 #>  [956,] -0.7697691 -0.38992145 -0.6330001  0.8976014  0.817406743  1.2228320 #>  [957,] -0.3930853 -0.15700495 -0.2992734 -0.8472724 -0.137002108 -0.4371704 #>  [958,] -0.5023050 -0.21879611 -0.3933293 -0.9362622 -0.304514870 -0.5493824 #>  [959,] -0.2510851 -0.08559031 -0.1815869 -0.7058734 -0.031810152 -0.2879064 #>  [960,] -0.5413782 -0.24214465 -0.4275820  1.0359773 -0.388679875  1.6974972 #>  [961,] -1.6205071 -1.06798449  0.6890359  0.6628155  0.072319816  0.6110947 #>  [962,]  0.6948003 -0.90958361  0.7864268  0.6956253  0.106430015 -1.4651800 #>  [963,] -0.5064892 -0.22126668 -0.3969831  1.0644738 -0.312856374 -0.5536457 #>  [964,]  0.9328408  1.63809834  1.0921303  0.7843217  0.277893141  0.8981253 #>  [965,]  1.2012525 -0.43351558  1.4477461  0.8694241  0.633373075 -0.8796725 #>  [966,] -0.2796164 -0.09901284 -0.2047317 -0.7375082 -0.045168519 -0.3182787 #>  [967,]  0.4883721  0.68220894  0.5308793 -1.6595599  0.033750604  0.4913990 #>  [968,] -0.3546879 -0.13661255 -0.2668762  1.2307249 -0.098017248 -0.3972396 #>  [969,] -0.2538820 -0.08688335 -0.1838430 -0.7090659 -0.032979090 -0.2908938 #>  [970,]  0.3604285  0.45221195  0.3783891  0.5324334  0.012545518  0.3702488 #>  [971,] -0.2922390 -0.10511059 -0.2150597 -0.7508927 -0.052155955 -0.3316472 #>  [972,] -0.7956723 -0.40778634 -0.6567884  0.8855813  0.733859358 -0.8433880 #>  [973,] -0.3024007 -0.11008781 -0.2234114 -0.7614209 -0.058299243 -0.3423807 #>  [974,] -0.2917064 -0.10485136 -0.2146228 -0.7503349 -0.051846907 -0.3310839 #>  [975,]  0.4665377  0.64125467  0.5044921  0.5914466  0.029078405  0.4708948 #>  [976,] -0.6915611 -0.33728486  1.7801663  0.9376425  1.158826326  1.3512188 #>  [977,] -0.3548104 -0.13667640 -0.2669789 -0.8126435 -0.098127543  2.5165625 #>  [978,] -0.3315667 -0.12469958 -0.2475586  1.2649875 -0.078692273 -0.3730545 #>  [979,] -0.2341827 -0.07788574 -0.1680152 -0.6861167 -0.025349404 -0.2698036 #>  [980,]  0.3516065  0.43729543  0.3680803  0.5270858  0.011572539  0.3617970 #>  [981,]  1.3170705 -0.38273411  1.6041687 -1.1078598  0.854840205 -0.8073662 #>  [982,] -1.6267194  0.93150645 -1.4575061  0.6617832  0.071423972 -1.6422524 #>  [983,]  0.7765584  1.27806406  0.8902488  0.7278735  0.152917289  0.7570604 #>  [984,]  0.7735591 -0.78654237 -1.1281371  0.7267271  0.151001673  0.7543354 #>  [985,]  0.9394271  1.65377262 -0.9084890  0.7865728  0.284336025  0.9040329 #>  [986,] -0.4476421 -0.18720307 -0.3459261 -0.8933370 -0.209220815 -0.4934558 #>  [987,] -0.5784177 -0.26483587 -0.4603151  1.0084231 -0.482192813  1.5959782 #>  [988,]  0.4663925 -1.56010036 -1.9828796  0.5913716  0.029048918  0.4707582 #>  [989,] -0.3756524 -0.14765486 -0.2845174  1.2022696 -0.118181304  2.3862022 #>  [990,]  0.8477973 -0.69478931  0.9817465 -1.3256135  0.203532134 -1.2171646 #>  [991,] -0.6014601 -0.27921579 -0.4808011  0.9925036 -0.547631186  1.5389266 #>  [992,] -0.6665829  3.11621822 -0.5391771  0.9517989 -0.765483020 -0.7151329 #>  [993,] -0.5489517 -0.24674098  2.3027963 -0.9707501 -0.406674410 -0.5967784 #>  [994,] -0.9380095 -0.50953555 -0.7890282  0.8281600  0.429314796 -0.9831721 #>  [995,]  0.4117402  0.54148018 -2.2784008  0.5620974  0.019355167  0.4191394 #>  [996,]  0.7812342 -0.77610146 -1.1157903  0.7296556  0.155937240 -1.3135301 #>  [997,]  1.3352180 -0.37571008  1.6288255 -1.1017014 -1.118804203 -0.7971360 #>  [998,]  0.6232349  0.94898423  0.6966872  0.6654958  0.074692038  0.6167626 #>  [999,]  0.5904876 -1.13362520 -1.5243708 -1.5360426  0.062648486  0.5865088 #> [1000,] -0.9232570 -0.49871890  1.2899753  0.8335251  0.452068128  1.0322525 #> [1001,]  0.9035204 -0.63743092  1.0539373  0.7741846  0.250434975  0.8717914 #> [1002,] -1.1927445 -0.70534808  0.9696279  0.7509513  0.196276209  0.8130946 #> [1003,] -0.4227056 -0.17322848 -0.3245163  1.1458419 -0.173584666 -0.4677909 #> [1004,] -0.3804171 -0.15019545 -0.2885428 -0.8360415 -0.123134793 -0.4240270 #> [1005,]  0.3642651  0.45873961  0.3828814  0.5347348  0.012985807  0.3739200 #> [1006,]  0.6784052  1.06443711  0.7657702  0.6888916  0.098464383 -1.4981491 #> [1007,]  0.3357183  0.41076470  0.3495895  0.5172507  0.009954233  0.3465385 #> [1008,]  1.0010854  1.80237216 -0.8463432  0.8072070 -2.859102043  0.9592036 #> [1009,] -0.9428449 -0.51309403 -0.7935633 -1.2100278  0.422183641 -0.9878940 #> [1010,] -0.8593130  2.20971263  1.3974178 -1.1651554  0.571149979 -0.9060813 #> [1011,]  1.2059557  2.31895501 -0.6877269 -1.1483574  0.641487302 -0.8764751 #> [1012,] -0.9563583 -0.52307311  1.2403079 -1.2170626  0.403058041 -1.0010818 #> [1013,] -0.3360772 -0.12700115 -0.2513153  1.2580442 -0.082233430 -0.3777812 #> [1014,]  0.3117234  0.37153649  0.3218552 -1.9925890  0.007817934  0.3234006 #> [1015,]  0.5018787 -1.41268694  0.5472705  0.6093029  0.036887430  0.5040513 #> [1016,] -0.7186566 -0.35529463 -0.5863323  0.9230779 -0.978037043  1.3036839 #> [1017,]  0.2913277  0.33901895  0.2984721  0.4882152  0.006271277  0.3036378 #> [1018,] -0.4573113 -0.19269711 -0.3542650 -0.9011475 -0.224305276  1.9865673 #> [1019,]  0.4553602 -1.61147870  0.4910382  0.5856329  0.026869623  0.4603731 #> [1020,] -0.7231143 -0.35828093 -0.5903877 -1.0860645 -0.997939210 -0.7714899 #> [1021,] -0.3040301 -0.11089149 -0.2247537  1.3104623 -0.059328851 -0.3440995 #> [1022,]  0.3855276  0.49535298  0.4078748 -1.8273654  0.015621825  0.3942190 #> [1023,]  0.4095671  0.53761546  0.4363230  0.5608870  0.019024351  0.4170776 #> [1024,] -0.4400341 -0.18290953 -0.3393792  1.1272421 -0.197857518  2.0591551 #> [1025,]  2.6369826 -0.14955678 -0.2875320  1.1976478 -0.121878349 -0.4227848 #> [1026,] -0.2837502 -0.10099928 -0.2081082 -0.7419302 -0.047380386 -0.3226612 #> [1027,]  0.9385787  1.65175123 -0.9094045  0.7862833  0.283500287  0.9032721 #> [1028,] -0.1971291 -0.06168895 -0.1386655 -0.6396272 -0.014463694 -0.2297956 #> [1029,]  1.4742546 -0.32856627 -0.5497599 -1.0581318 -0.810227854  1.3758023 #> [1030,] -0.6895140 -0.33593419 -0.5598921  0.9387755 -0.854648368 -0.7380310 #> [1031,]  0.5324617 -1.30398887  0.5845705  0.6241627  0.044726748 -1.8775279 #> [1032,] -0.2643020 -0.09174467 -0.1922730  1.3873874 -0.037596327 -0.3020039 #> [1033,] -0.5189829 -0.22868644 -0.4079136  1.0539599 -0.338704352  1.7656572 #> [1034,]  1.0390236 -0.52758205  1.2315720  0.8195308 -2.532818072  0.9930341 #> [1035,]  0.3653266  0.46055000  0.3841253  0.5353690  0.013109491  0.3749353 #> [1036,] -0.3673124 -0.14323525 -0.2774856  1.2133155 -0.109846037 -0.4103994 #> [1037,] -0.2062870 -0.06559955 -0.1458648  1.5347574 -0.016769679 -0.2397280 #> [1038,] -0.2258309 -0.07414994 -0.1613500 -0.6760420 -0.022521108 -0.2608263 #> [1039,] -1.3439531 -0.82902332  0.8488394  0.7153133  0.133045323 -1.3745577 #> [1040,] -0.5864899 -0.26985080  2.1391231 -0.9972614 -0.504462137 -0.6347194 #> [1041,]  0.7607923  1.24306912 -1.1492588  0.7218173  0.143033289  0.7427277 #> [1042,] -0.8832717 -0.46970972 -0.7378803  0.8486942  0.522208121  1.0757312 #> [1043,]  0.5577564  0.81659811  0.6156074  0.6360750  0.052027135 -1.7980587 #> [1044,]  1.0812102 -0.49991293 -0.7767367  0.8329254  0.449473761  1.0305544 #> [1045,]  1.4179770 -0.34633975  1.7417498  0.9301966 -0.919756597 -0.7536944 #> [1046,] -0.7672323 -0.38818315  1.5856019  0.8988092  0.826244244 -0.8152622 #> [1047,]  0.5099236  0.72327287  0.5570577 -1.6306226  0.038848773  0.5115763 #> [1048,]  1.3760846 -0.36068737 -0.5936513  0.9189026 -1.014147689  1.2902333 #> [1049,]  0.7579598  1.23680888  0.8665158 -1.3874987  0.141305739 -1.3510765 #> [1050,] -1.2837025  1.28349884  0.8933651 -1.3721117  0.154487007 -1.3170455 #> [1051,]  0.2565571  0.28543779  0.2590466  0.4635823  0.004145137  0.2697242 #> [1052,]  0.4295229 -1.74406352  0.4600851  0.5718625  0.022213549  0.4359835 #> [1053,] -0.5773589 -0.26417988 -0.4593760  1.0091760 -0.479323203  1.5987055 #> [1054,] -0.8823744 -0.46906394 -0.7370448  0.8490456  0.523940138  1.0767506 #> [1055,] -0.9025226 -0.48361950 -0.7558284  0.8412730  0.486787454 -0.9484662 #> [1056,] -0.2672633 -0.09313875 -0.1946758 -0.7240580 -0.038986015 -0.3051557 #> [1057,]  0.3192639  0.38375302  0.3305453  0.5067697  0.008451001  0.3306844 #> [1058,] -1.6939607 -1.13402833  0.6558163 -1.5362070  0.062594899  0.5863652 #> [1059,] -0.3025697 -0.11017110 -0.2235506  1.3130352 -0.058405457 -0.3425590 #> [1060,]  0.6479283  1.00023088  0.7275246  0.6761131  0.084771207 -1.5637122 #> [1061,] -1.2745990  1.29592255 -1.1105186  0.7309195  0.158110574  0.7643274 #> [1062,] -0.4831947 -0.20760543 -0.3766862  1.0850866 -0.268368522  1.8872202 #> [1063,]  0.2551705  0.28335165  0.2574864  0.4625600  0.004072598  0.2683655 #> [1064,]  0.8581706 -0.68344600  0.9951453 -1.3190628  0.211757557 -1.2034488 #> [1065,]  0.7912142  1.31082094  0.9089967 -1.3634413  0.162520813 -1.2980842 #> [1066,] -1.0517205 -0.59488946  1.1156225 -1.2651092  0.295727028 -1.0937953 #> [1067,]  2.6801983 -0.14630209 -0.2823691 -0.8294595 -0.115592147 -0.4164289 #> [1068,] -0.4525022 -0.18995936 -0.3501149 -0.8972752 -0.216711767 -0.4984462 #> [1069,]  1.1027615 -0.48673496  1.3160739  0.8396488  0.479322129  1.0496832 #> [1070,] -1.1114565  1.55987330  1.0489977 -1.2939011  0.247019958  0.8683742 #> [1071,] -0.9579257 -0.52423383 -0.8077245  0.8211025  0.400913506 -1.0026106 #> [1072,]  0.7687271 -0.79324168 -1.1360440  0.7248745  0.147950553  0.7499436 #> [1073,]  0.7350176 -0.84287868  0.8373320  0.7117541  0.127842359  0.7192524 #> [1074,]  0.7758721  1.27653561  0.8893719  0.7276114  0.152477516  0.7564370 #> [1075,] -0.4330390 -0.17898499 -0.3333711 -0.8813491 -0.187793823 -0.4784383 #> [1076,]  0.5639500  0.82889593 -1.6045390 -1.5650853  0.053932916  0.5619081 #> [1077,] -0.3662475 -0.14267345 -0.2765890 -0.8232138 -0.108811961 -0.4092905 #> [1078,]  1.1770739 -0.44561241 -0.7065625  0.8622527  0.592778321 -0.8964989 #> [1079,]  1.4107022 -0.34875942 -0.5774364  0.9282496 -0.935298219 -0.7573156 #> [1080,] -0.2065397 -0.06570834 -0.1460640 -0.6518938 -0.016836693 -0.2400017 #> [1081,] -0.6977922 -0.34140480 -0.5673899  0.9342228  1.125454389 -0.7462844 #> [1082,]  1.6492016 -0.28229532 -0.4851638  0.9892327 -0.562281013  1.5273491 #> [1083,] -0.5881631 -0.27089335 -0.4689681 -0.9984193  1.963997473  1.5713224 #> [1084,] -0.6422872  3.27682792 -0.5173183 -1.0348714 -0.678274614 -0.6908134 #> [1085,]  0.3623674  0.45550772  0.3806587  0.5335982  0.012766707 -2.6874176 #> [1086,] -0.3742886 -0.14692971 -0.2833663 -0.8305287 -0.116789221 -0.4176580 #> [1087,]  0.9288132 -0.61404976  1.0868757 -1.2772363  0.274003480 -1.1179289 #> [1088,] -0.2446346 -0.08262764 -0.1763947  1.4317838 -0.029224277 -0.2810079 #> [1089,] -0.4002916 -0.16091347 -0.3053953  1.1715561 -0.145354827 -0.4446341 #> [1090,] -0.5661884 -0.25728533 -0.4494802 -0.9830526 -0.449766579  1.6280777 #> [1091,]  0.3321367  0.40484450  0.3454349  0.5149957  0.009612433  0.3430923 #> [1092,] -0.4409796 -0.18344170 -0.3401921  1.1262570 -0.199245861  2.0550406 #> [1093,] -0.2938102 -0.10587623 -0.2163489 -0.7525346 -0.053075013 -0.3333085 #> [1094,] -0.2362800 -0.07883138 -0.1696933  1.4521941 -0.026096494 -0.2720546 #> [1095,] -0.7272099 -0.36103033 -0.5941161  0.9186398 -1.016470078  1.2893894 #> [1096,]  0.2886615  0.33482616  0.2954289  0.4863902  0.006086229  0.3010475 #> [1097,] -0.2270303 -0.07468345 -0.1623055 -0.6775021 -0.022913082 -0.2621168 #> [1098,] -0.5171670 -0.22760403 -0.4063230  1.0554658 -0.334858764  1.7714338 #> [1099,]  0.3014275  0.35502420  0.3100286 -2.0200378  0.007007669  0.3134356 #> [1100,]  1.5206561 -0.31506944 -0.5310942  0.9570673 -0.732425480  1.4161112 #> [1101,]  0.8146771  1.36370930 -1.0648569 -1.3473072  0.178753196  0.7916326 #> [1102,]  0.4357487  0.58465141 -2.1389253 -1.7384514  0.023279717  0.4418694 #> [1103,] -0.2614696 -0.09041642 -0.1899777 -0.7176228 -0.036299616 -0.2989869 #> [1104,]  0.3013790  0.35494687  0.3099730  0.4950078  0.007003995  0.3133886 #> [1105,]  0.4482220  0.60741789  0.4824660  0.5818759  0.025521587  0.4536446 #> [1106,] -0.5469666 -0.24553403 -0.4325046 -0.9693186 -0.401903126  1.6813302 #> [1107,] -0.4273141 -0.17578969 -0.3284623  1.1407919 -0.179825995 -0.4725416 #> [1108,] -0.7106031 -0.34991617 -0.5790131  0.9273251  1.060690737 -0.7590440 #> [1109,]  0.4600876 -1.58910780  0.4967238 -1.7003855  0.027789048  0.4648252 #> [1110,] -0.4935014 -0.21362181 -0.3856531  1.0757976 -0.287469873 -0.5404045 #> [1111,] -0.3218547 -0.11978138 -0.2394897  1.2803995 -0.071428553 -0.3628617 #> [1112,]  1.6428018 -0.28378487 -0.4872710 -1.0124868 -0.569448261 -0.6571056 #> [1113,] -1.4700073 -0.93598195  0.7681153  0.6896618  0.099348235  0.6691987 #> [1114,] -0.2351284 -0.07831178 -0.1687716  1.4550871 -0.025684423 -0.2708188 #> [1115,]  1.1806920  2.25344453 -0.7041495  0.8633314 -1.670188505 -0.8939386 #> [1116,] -0.4453975 -0.18593364 -0.3439932 -0.8915096 -0.205822479 -0.4911497 #> [1117,] -0.8417910 -0.44010259  1.4298784 -1.1554185  0.610797192  1.1250457 #> [1118,] -0.6304148 -0.29756288 -0.5066710  0.9736756 -0.638276524  1.4729565 #> [1119,] -0.7747535  2.54231155  1.5684538 -1.1170132  0.800399133 -0.8227072 #> [1120,] -0.3744270 -0.14700327 -0.2834831 -0.8306538 -0.116930010  2.3934788 #> [1121,] -0.4372006 -0.18131716 -0.3369442  1.1302123 -0.193737179 -0.4827214 #> [1122,]  0.4908270  0.68685464  0.5338546  0.6038014  0.034306420  0.4937003 #> [1123,]  1.1613453 -0.45380072 -0.7172371 -1.1661255  0.567361249  1.1015546 #> [1124,]  1.1228669 -0.47497602 -0.7446864 -1.1822410  0.508381358 -0.9367632 #> [1125,] -0.1778363 -0.05366153 -0.1236261 -0.6133470 -0.010340985 -0.2087660 #> [1126,] -0.4646592 -0.19689979 -0.3606157 -0.9070178 -0.236260566  1.9572777 #> [1127,]  0.5701729  0.84130019 -1.5850315  0.6418054  0.055895911 -1.7615440 #> [1128,]  1.2594126  2.45917018  1.5260903  0.8863311 -1.353467561  1.1879915 #> [1129,] -0.5190560 -0.22873001 -0.4079776  1.0538995 -0.338859683 -0.5664356 #> [1130,]  1.7375933 -0.26303462 -0.4577354  1.0104964 -0.474337281 -0.6236380 #> [1131,] -0.6301979 -0.29742431 -0.5064767  0.9738121  1.568476457 -0.6786890 #> [1132,] -0.5721783 -0.26097648 -0.4547839  1.0128881 -0.465453601 -0.6202744 #> [1133,]  0.5537794 -1.23651127  0.6107167 -1.5767309  0.050828335  0.5524592 #> [1134,]  0.3413054  0.42004475 -2.8083529  0.5207401  0.010504116  0.3519097 #> [1135,]  0.2987828  0.35081453  0.3069981 -2.0273023  0.006809347  0.3108722 #> [1136,]  0.3842990  0.49321740  0.4064262  0.5465248  0.015460221 -2.5442173 #> [1137,]  1.9471023 -0.22547212 -0.4031862 -0.9447694 -0.327359450 -0.5608688 #> [1138,]  0.8018951 -0.74915953  0.9226849  0.7374553  0.169777471 -1.2819653 #> [1139,] -0.5595074 -0.25318468 -0.4435724 -0.9783109 -0.432706644  1.6461859 #> [1140,]  1.0294532 -0.53423167 -0.8203888  0.8164474  0.383092799 -1.0157358 #> [1141,]  0.2230610  0.23619446  0.2216418  0.4379014  0.002627849  0.2367557 #> [1142,] -0.8205602  2.35213391 -0.6797281  0.8745401  0.663800036 -0.8679447 #> [1143,] -0.9704550  1.87428728 -0.8195092  0.8167676  0.384295877 -1.0148252 #> [1144,] -0.7804370 -0.39725358 -0.6427861 -1.1203438  0.781565966 -0.8283298 #> [1145,]  0.5845968  0.87023539  0.6487179  0.6483702  0.060635300  0.5810546 #> [1146,]  0.2230610  0.23619446  0.2216418  0.4379014  0.002627849  0.2367557 #> [1147,] -0.8699711 -0.46016157 -0.7255059 -1.1710207  0.548668764  1.0910489 #> [1148,] -0.7360027 -0.36695149 -0.6021287 -1.0939084  0.946022597  1.2750294 #> [1149,]  0.2987342  0.35073726  0.3069424  0.4932336  0.006805738  0.3108250 #> [1150,] -0.5797094 -0.26563669 -0.4614611  1.0075072 -0.485709522 -0.6278787 #> [1151,]  0.6252782  0.95319775 -1.4301372  0.6663837  0.075492707  0.6186466 #> [1152,]  2.1249421 -0.20031551  2.7340373 -0.9117246 -0.246245498 -0.5169991 #> [1153,] -0.3913176 -0.15605005 -0.2977736 -0.8457183 -0.135005232 -0.4353382 #> [1154,]  0.5104351  0.72425497  0.5576805  0.6135132  0.038975855  0.5120545 #> [1155,] -0.1778363 -0.05366153 -0.1236261 -0.6133470 -0.010340985 -0.2087660 #> [1156,]  0.9368721  1.64768748  1.0973924 -1.2727494  0.281824489  0.9017415 #> [1157,] -1.0926801 -0.62646271 -0.9353577 -1.2849522  0.261118172 -1.1334385 #> [1158,]  1.2654371 -0.40402305  1.5342296  0.8880557 -1.332588795 -0.8380219 #> [1159,] -0.2915350 -0.10476802 -0.2144823 -0.7501554 -0.051747772 -0.3309027 #> [1160,] -0.6473687 -0.30844571 -0.5218824 -1.0381988 -0.695912570 -0.6959049 #> [1161,] -0.3726456 -0.14605740 -0.2819801  1.2062119 -0.115127390 -0.4159493 #> [1162,]  0.2565571  0.28543779  0.2590466  0.4635823  0.004145137  0.2697242 #> [1163,] -0.3360362 -0.12698020 -0.2512811 -0.7948452 -0.082200779 -0.3777383 #> [1164,] -0.2154455 -0.06957227 -0.1531013  1.5078390 -0.019318915 -0.2496311 #> [1165,]  0.9450763 -0.59979091 -0.9024380 -1.2682371  0.289944035  0.9090977 #> [1166,]  0.5920217  0.88522939  0.6579085  0.6517121  0.063180301 -1.7008867 #> [1167,] -0.8955493 -0.47856863  1.3345401 -1.1849250 -2.003026552  1.0619821 #> [1168,]  1.1754711 -0.44643502  1.4131551  0.8617742  0.590152859  1.1140349 #> [1169,]  0.5569382 -1.22702819  0.6146010  0.6356948  0.051778930  0.5553951 #> [1170,]  0.2230610  0.23619446  0.2216418  0.4379014  0.002627849  0.2367557 #> [1171,] -0.3274413 -0.12260415 -0.2441278  1.2714554 -0.075547236 -0.3687274 #> [1172,]  0.3631037  0.45676094  0.3815209 -1.8725202  0.012851408  0.3728089 #> [1173,] -0.8088622 -0.41696284  1.4949120  0.8796702  0.695587884  1.1676667 #> [1174,] -0.6711444 -0.32387768 -0.5432913  0.9491585  1.277661831  1.3894833 #> [1175,]  0.3417455  0.42077810  0.3565925  0.5210135  0.010548309  0.3523325 #> [1176,] -1.9573330  0.72514660 -1.7913254  0.6137404  0.039091440  0.5124884 #> [1177,]  0.3207272  0.38613574  0.3322345  0.5077146  0.008577843  0.3320966 #> [1178,] -0.6117853 -0.28572328  2.0407738  0.9856459  1.727548780 -0.6601924 #> [1179,]  0.3830753  0.49109284  0.4049839  0.5458153  0.015300425 -2.5517899 #> [1180,]  0.4480034 -1.64740055  0.4822037  0.5817602  0.025481057  0.4534384 #> [1181,] -0.7261093 -0.36029092 -0.5931139 -1.0878946  0.988663115  1.2912106 #> [1182,]  0.4766651 -1.51476593  0.5167140  0.5966432  0.031185571  0.4804132 #> [1183,] -0.9796275 -0.54037328  1.2075141 -1.2290392  0.372697197  0.9767909 #> [1184,]  1.2216602 -0.42374246 -0.6778798 -1.1423210  0.669103564 -0.8659712 #> [1185,]  0.6990352 -0.90213293  0.7917716 -1.4340015  0.108557888 -1.4569068 #> [1186,]  0.8549530 -0.68692988  0.9909872  0.7569548  0.209181970  0.8280416 #> [1187,] -0.4848131 -0.20854721 -0.3780928  1.0836096 -0.271307967 -0.5315336 #> [1188,]  1.3522579  2.70770664 -0.6053223 -1.0960251 -1.073526537  1.2694033 #> [1189,]  0.2337348  0.25162064  0.2334955  0.4463190  0.003060065  0.2472958 #> [1190,] -0.6829924 -0.33164070 -0.5539926 -1.0611018  1.206862454 -0.7315241 #> [1191,] -0.6841848 -0.33242468 -0.5550708 -1.0618561  1.200023541 -0.7327142 #> [1192,]  0.9072979 -0.63384133  1.0588501  0.7755015  0.253862061  0.8751874 #> [1193,]  1.2323546 -0.41877282  1.4895892  0.8785243 -1.452698498 -0.8589664 #> [1194,] -0.4947641 -0.21436198 -0.3867531  1.0746783 -0.289872977  1.8460644 #> [1195,] -0.6088481 -0.28386812 -0.4873887 -1.0125762 -0.569850402 -0.6572383 #> [1196,] -1.7576408  0.83884771  0.6293874  0.6412418  0.055504547  0.5665440 #> [1197,]  1.1885768  2.27383760 -0.6989447 -1.1551676 -1.634363894 -0.8884113 #> [1198,]  0.6296287 -1.03930058  0.7046586  0.6682685  0.077217304 -1.6060215 #> [1199,] -0.9033397 -0.48421224  1.3217178  0.8409629  0.485354494 -0.9492663 #> [1200,] -0.3120588 -0.11487358 -0.2313793 -0.7712347 -0.064586617 -0.3525596 #> [1201,] -1.0783094 -0.61533674 -0.9216562  0.7824473  0.272626224  0.8932229 #> [1202,]  0.2230610  0.23619446  0.2216418  0.4379014  0.002627849  0.2367557 #> [1203,] -0.5264769 -0.23316747 -0.4144845 -0.9543599 -0.354898441  1.7422258 #> [1204,] -0.3756132 -0.14763396 -0.2844843 -0.8317247 -0.118141042  2.3864348 #> [1205,] -0.3270979 -0.12243014 -0.2438424 -0.7861641 -0.075289432 -0.3683670 #> [1206,] -0.5723900 -0.26110715 -0.4549714  1.0127355 -0.466014711 -0.6204882 #> [1207,]  0.3746490 -2.09850959  0.3950671  0.5408925  0.014231012  0.3838432 #> [1208,]  0.9575132 -0.58927039 -0.8893825 -1.2615010  0.302559624  0.9202409 #> [1209,] -0.8642488 -0.45606947  1.3885250 -1.1678770  0.560592115 -0.9109301 #> [1210,]  2.5894801 -0.15328226 -0.2934175  1.1888122 -0.129313844 -0.4300075 #> [1211,]  1.0993836 -0.48876027 -0.7624385 -1.1924634  0.474555689 -0.9553957 #> [1212,] -1.6255925 -1.07252344  0.6866336  0.6619701  0.071585387  0.6093131 #> [1213,]  0.2777788  0.31785513  0.2830414 -2.0883996  0.005370053  0.2904577 #> [1214,] -2.2035162  0.61770896  0.4891874  0.5848253  0.026574701  0.4589220 #> [1215,] -0.3927665 -0.15683262 -0.2990028  1.1806481 -0.136640450  2.2891678 #> [1216,] -0.2365346 -0.07894638 -0.1698971 -0.6889154 -0.026188217 -0.2723278 #> [1217,]  0.5607244  0.82248534  0.6192600  0.6374516  0.052934474  0.5589127 #> [1218,] -1.1405638  1.50623561 -0.9811598  0.7647607  0.227068821 -1.1796553 #> [1219,] -1.1281678  1.52868038  1.0316924 -1.3017908  0.235297967  0.8563816 #> [1220,] -0.4096706 -0.16603772 -0.3133818  1.1605555 -0.156745948 -0.4543344 #> [1221,] -0.6301713 -0.29740736 -0.5064529 -1.0268746 -0.637473906  1.4734868 #> [1222,] -0.4576557  5.18420662 -0.3545624  1.1093560 -0.224856009 -0.5037341 #> [1223,] -0.5161588 -0.22700369  2.4664549  1.0563051 -0.332736918 -0.5634889 #> [1224,] -0.4630724 -0.19599019 -0.3592432  1.1040517 -0.233642237 -0.5092876 #> [1225,] -0.3631375 -0.14103607 -0.2739724  1.2189784 -0.105830648 -0.4060509 #> [1226,] -0.7621851 -0.38473076 -0.6260526 -1.1095960  0.844201729  1.2341664 #> [1227,] -1.9497572 -1.37181190  0.5606642  0.6147107  0.039588425  0.5143437 #> [1228,]  2.0347991 -0.21242019 -0.3838658  1.0776254 -0.283593432 -0.5383100 #> [1229,] -0.6775106 -0.32804299 -0.5490387  0.9455153 -0.807125604 -0.7260514 #> [1230,]  0.3210302  0.38662956  0.3325844  0.5079100  0.008604269  0.3323889 #> [1231,] -1.8176707  0.80157021  0.6062627  0.6325293  0.049752492  0.5490887 #> [1232,] -2.1158184  0.65261572  0.5118412  0.5945808  0.030333821  0.4766227 #> [1233,]  0.3233174  0.39036262  0.3352266  0.5093809  0.008805578  0.3345951 #> [1234,]  1.8563332 -0.24052247 -0.4252217 -0.9633215 -0.382442459 -0.5863828 #> [1235,]  0.3907953  0.50453617  0.4140916  0.5502695  0.016327962 -2.5047839 #> [1236,]  0.3421571  0.42146411  0.3570712 -1.9183954  0.010589747  0.3527279 #> [1237,] -0.9136594  2.03370013 -0.7662316  0.8370807  0.467722397  1.0423532 #> [1238,]  0.5294661  0.76104385 -1.7214493  0.6227299  0.043912218  0.5298225 #> [1239,] -0.8831067 -0.46959094 -0.7377266 -1.1781911  0.522526080  1.0759185 #> [1240,] -0.7860361 -0.40111606  1.5433803  0.8899877  0.763575109  1.1992334 #> [1241,] -0.2062441 -0.06558110 -0.1458311 -0.6515136 -0.016758330 -0.2396816 #> [1242,]  0.5217726 -1.34027726 -1.7497657  0.6190280  0.041867457  0.5226449 #> [1243,]  0.2657897  0.29942914  0.2694588  0.4703068  0.004651127  0.2787582 #> [1244,]  0.3192639  0.38375302  0.3305453  0.5067697  0.008451001  0.3306844 #> [1245,]  1.0033886 -0.55310126 -0.8441780  0.8079630  0.352388423 -1.0403014 #> [1246,] -0.6616973 -0.31772240 -0.5347741 -1.0474985 -0.747356633  1.4079601 #> [1247,]  1.2336278  2.39126941  1.4913047  0.8788939 -1.447819989 -0.8581403 #> [1248,]  0.6742297  1.05557909  0.7605185 -1.4552625  0.096503792 -1.5067930 #> [1249,] -2.4390915  0.53836473  0.4368237 -1.7821432  0.019088227  0.4174777 #> [1250,]  1.1239199 -0.47437381 -0.7439088 -1.1817897  0.509936049 -0.9359453 #> [1251,]  0.3013790  0.35494687  0.3099730  0.4950078  0.007003995  0.3133886 #> [1252,] -0.9935849 -0.55082046  1.1886221 -1.2361423  0.355910511 -1.0373462 #> [1253,] -1.4306324  1.10839034  0.7917164  0.6973316  0.108535791 -1.4569916 #> [1254,]  0.3321367  0.40484450  0.3454349  0.5149957  0.009612433  0.3430923 #> [1255,]  0.2230610  0.23619446  0.2216418  0.4379014  0.002627849  0.2367557 #> [1256,] -0.8105950 -0.41817233 -0.6705332 -1.1377810  0.690755590  1.1653406 #> [1257,] -0.4425393 -0.18432045 -0.3415335  1.1246384 -0.201550783 -0.4882120 #> [1258,]  1.1732539 -0.44757737 -0.7091272  0.8611117 -1.704930534  1.1120766 #> [1259,] -0.8137383  2.37886371 -0.6734322 -1.1395763  0.682100903  1.1611452 #> [1260,] -1.3936501  1.14838726 -1.2267385  0.7048109  0.118202592  0.7033024 #> [1261,]  1.0653681 -0.51000119  1.2664288  0.8279324  0.428372005 -0.9837905 #> [1262,]  0.3603529  0.45208363  0.3783007  0.5323879  0.012536952  0.3701765 #> [1263,]  2.4034708 -0.16955521 -0.3188388  1.1532566 -0.164857467 -0.4609391 #> [1264,] -0.3101906 -0.11394369 -0.2298358 -0.7693505 -0.063335447 -0.3505923 #> [1265,]  0.4539626  0.61797147  0.4893586  0.5849001  0.026601889 -2.1783822 #> [1266,] -1.1739754  1.44850601  0.9869230  0.7558189  0.206684564 -1.2118251 #> [1267,] -0.3113543 -0.11452265 -0.2307970 -0.7705249 -0.064112769 -0.3518177 #> [1268,] -0.4752711 -0.20301083  2.7041097 -0.9153992 -0.254295583  1.9165227 #> [1269,] -0.6825381 -0.33134217 -0.5535819  0.9426721  1.209481079 -0.7310707 #> [1270,] -0.8263817 -0.42923354 -0.6851055 -1.1467558  0.648687321 -0.8736813 #> [1271,] -0.5696011 -0.25938665 -0.4525011  1.0147524 -0.458658425 -0.6176705 #> [1272,] -2.7097264  0.46689930  0.3884810  0.5375796  0.013548701  0.3784863 #> [1273,] -1.0217667 -0.57207266 -0.8679516  0.7998041  0.324915551  0.9391985 #> [1274,]  0.9707047 -0.57845734  1.1416556  0.7971371  0.316351177  0.9320494 #> [1275,]  0.7560945 -0.81123334 -1.1572209  0.7199984  0.140176059  0.7384531 #> [1276,] -0.4392858 -0.18248866 -0.3387359 -0.8865061 -0.196763557 -0.4848665 #> [1277,] -0.9333247 -0.50609410 -0.7846370  0.8298508  0.436374684 -0.9785956 #> [1278,]  0.3000299  0.35279795  0.3084267  0.4941040  0.006902373  0.3120811 #> [1279,] -0.2362368 -0.07881187 -0.1696587 -0.6885619 -0.026080957 -0.2720083 #> [1280,]  0.3001106  0.35292646  0.3085192  0.4941581  0.006908426  0.3121594 #> [1281,]  0.9364147  1.64659865  1.0967952 -1.2730026  0.281376464 -1.1094700 #> [1282,] -1.9453074  0.73122082  0.5620939  0.6152831  0.039884194  0.5154400 #> [1283,]  1.4054263 -0.35053268  1.7245747  0.9268340 -0.946784675 -0.7599644 #> [1284,]  2.3120330 -0.17869457 -0.3329256 -0.8809185 -0.187061282  2.0924718 #> [1285,] -1.0576253 -0.59941471 -0.9019719 -1.2679977  0.290382204  0.9094905 #> [1286,] -0.4077071 -0.16496150 -0.3117081 -0.8599717 -0.154311810 -0.4523049 #> [1287,] -1.4825746  1.05615675 -1.3143000  0.6872744  0.096630947  0.6639112 #> [1288,] -0.5179395 -0.22806435  2.4570048  1.0548243 -0.336491053 -0.5653002 #> [1289,] -0.2704897 -0.09466387 -0.1972971 -0.7276058 -0.040540214 -0.3085871 #> [1290,] -0.3649071 -0.14196714  3.6302788  1.2165670 -0.107519985 -0.4078945 #> [1291,] -0.5366748 -0.23930151 -0.4234434 -0.9618472 -0.377786619 -0.5843319 #> [1292,]  1.5440989 -0.30861226  1.9152889  0.9630502 -0.696817325 -0.6961636 #> [1293,]  1.2239981 -0.42264736 -0.6764368 -1.1414317 -1.485257794  1.1568319 #> [1294,] -0.4948611 -0.21441890 -0.3868377 -0.9305853 -0.290058246  1.8457270 #> [1295,] -0.8596186  2.20864924 -0.7158893 -1.1653242  0.570488679 -0.9063816 #> [1296,]  0.5201931 -1.34578881  0.5695769  0.6182640  0.041455967  0.5211704 #> [1297,] -0.3564711 -0.13754300 -0.2683721  1.2282134 -0.099631683 -0.3991003 #> [1298,]  0.4844548 -1.48189265  0.5261350 -1.6650131  0.032876643  0.4877250 #> [1299,]  0.8834217 -0.65713878 -0.9729156  0.7671226  0.232738207  0.8537063 #> [1300,] -0.8448340 -0.44225740 -0.7021788 -1.1571181  0.603659157  1.1212691 #> [1301,] -0.2928851 -0.10542525 -0.2155897 -0.7515685 -0.052532524 -0.3323304 #> [1302,] -0.8973947 -0.47990392 -0.7510431  0.8432279  0.495907791 -0.9434434 #> [1303,] -0.5865978 -0.26991797 -0.4675771  1.0026710 -0.504764427 -0.6348282 #> [1304,]  0.5898194 -1.13536366  0.6551811  0.6507234  0.062417859  0.5858904 #> [1305,]  0.3506763  0.43573029  0.3669951  0.5265174  0.011473102  0.3609050 #> [1306,]  0.4468933 -1.65294230  0.4808720  0.5811726  0.025275932  0.4523912 #> [1307,] -0.4237517 -0.17380900 -0.3254116  1.1446888 -0.174988025 -0.4688696 #> [1308,] -0.3726456 -0.14605740 -0.2819801  1.2062119 -0.115127390 -0.4159493 #> [1309,] -0.4560083 -0.19195433  2.8317371 -0.9001007 -0.222229977 -0.5020442 #> [1310,] -0.3935236  6.35962521 -0.2996454  1.1797223 -0.137500408 -0.4376246 #> [1311,] -0.3633471 -0.14114626  3.6476564 -0.8205519 -0.106029770 -0.4062693 #> [1312,]  0.3226465  0.38926663  0.3344513  0.5089500  0.008746194 -2.9944773 #> [1313,] -1.1969911 -0.70874941 -1.0354172  0.7498649  0.194016805  0.8104062 #> [1314,]  0.5420517  0.78563221  0.5963181 -1.5905389  0.047404780  0.5415489 #> [1315,] -0.3489536 -0.13363161 -0.2620713 -0.8071523 -0.092948438 -0.3912517 #> [1316,]  1.1181430 -0.47769415 -0.7481941 -1.1842730  0.501446977 -0.9404505 #> [1317,] -0.2730962 -0.09590071 -0.1994175 -0.7304539 -0.041826783 -0.3113573 #> [1318,] -0.3669166 -0.14302637 -0.2771523 -0.8238261 -0.109460893 -0.4099872 #> [1319,]  0.5361895 -1.29173306  0.5891341  0.6259390  0.045754922  0.5360892 #> [1320,]  1.9904474 -0.21885191 -0.3934119 -0.9363340 -0.304701791 -0.5494789 #> [1321,] -0.5674996 -0.25809215  2.2190630  1.0162815 -0.453168646 -0.6155467 #> [1322,] -0.3820629 -0.15107566 -0.2899346 -0.8375130 -0.124878737 -0.4257362 #> [1323,] -0.2813263 -0.09983329 -0.2061277 -0.7393420 -0.046074583 -0.3200921 #> [1324,] -0.5822123 -0.26719020 -0.4636823  1.0057407 -0.492574271 -0.6304044 #> [1325,]  0.3205349  0.38582234  0.3320124  0.5075906  0.008561096  0.3319110 #> [1326,] -0.4879284 -0.21036308 -0.3808019  1.0807860 -0.277028481 -0.5347156 #> [1327,] -0.4186913 -0.17100550 -0.3210830 -0.8693351 -0.168271733 -0.4636498 #> [1328,] -0.3672350 -0.14319437 -0.2774204 -0.8241172 -0.109770604 -0.4103187 #> [1329,]  1.1968689 -0.43566608  1.4418586 -1.1519008  0.625874595  1.1329206 #> [1330,] -0.5274890 -0.23377438 -0.4153727  1.0470034 -0.357125798 -0.5750065 #> [1331,]  0.8864281 -0.65412386 -0.9692383  0.7681850  0.235328378  0.8564133 #> [1332,] -0.7508404 -0.37700011 -0.6156747  0.9067511  0.886468109 -0.7990193 #> [1333,]  0.8681870  1.48633647 -0.9919645 -1.3128425  0.219915801 -1.1905056 #> [1334,]  0.8665412 -0.67452526 -0.9940646 -1.3138575  0.218560674  0.8384954 #> [1335,]  0.5148180 -1.36484261  0.5630207 -1.6242899  0.040076707  0.5161504 #> [1336,] -1.2326206 -0.73745383 -1.0698288  0.7409588  0.176336094 -1.2681413 #> [1337,]  0.6767040 -0.94266191 -1.3095346  0.6881874  0.097662272 -1.5016584 #> [1338,]  1.0179195  1.84351742 -0.8307568  0.8127089  0.369286594 -1.0264563 #> [1339,]  0.5508544  0.80295055 -1.6471147  0.6328569  0.049958946  0.5497395 #> [1340,] -0.7366364 -0.36737920  1.6591821  0.9138329 -1.060024974  1.2740073 #> [1341,] -0.3491925 -0.13375546 -0.2622713 -0.8073774 -0.093155906 -0.3915013 #> [1342,] -0.2443369 -0.08249157 -0.1761555  1.4324942 -0.029108578 -0.2806893 #> [1343,] -0.5443350 -0.24393639 -0.4301858  1.0336813 -0.395637907  1.6889035 #> [1344,] -0.4255688 -0.17481856 -0.3269673 -0.8751239 -0.177444312 -0.4707428 #> [1345,]  0.6942096 -0.91063130 -1.2727802  0.6953844  0.106135546  0.6819693 #> [1346,]  0.9331248 -0.61021253 -0.9153311  0.7844189  0.278168802 -1.1131146 #> [1347,] -0.5944230 -0.27480316  2.1073261 -1.0027343 -0.527032511  1.5558968 #> [1348,] -0.5423240 -0.24271739 -0.4284147 -0.9659587 -0.390896203 -0.5900615 #> [1349,]  0.3827714  0.49056555  0.4046258  0.5456388  0.015260916 -2.5536778 #> [1350,] -0.8966787 -0.47938573 -0.7503752  0.8435021  0.497198913  1.0607356 #> [1351,] -0.4860423 -0.20926317 -0.3791614 -0.9237939 -0.273555110 -0.5327892 #> [1352,] -0.4821497 -0.20699796 -0.3757783  1.0860439 -0.266482455 -0.5288120 #> [1353,] -1.1686126  1.45751052 -1.0080924 -1.3206031  0.209790422 -1.2066659 #> [1354,] -1.4229203  1.11652937 -1.2554914  0.6988687  0.110463896  0.6898115 #> [1355,] -0.7866839 -0.40156358 -0.6485237  0.8896891  0.761528628 -0.8345064 #> [1356,]  1.0311005 -0.53307674 -0.8189280  0.8169794  0.385093437  0.9859759 #> [1357,] -0.3756346 -0.14764536 -0.2845024 -0.8317441 -0.118163000 -0.4190574 #> [1358,]  0.6363795  0.97617573  0.7130852  0.6711779  0.079947190 -1.5901399 #> [1359,] -1.3697292  1.17561662  0.8310536  0.7097991  0.125060948 -1.3991081 #> [1360,]  0.5880438 -1.14000642  0.6529830  0.6499248  0.061807802 -1.7116060 #> [1361,]  0.4380887  0.58890513  0.4703239  0.5764809  0.023689455 -2.2518456 #> [1362,]  1.0049709 -0.55192285 -0.8426966  0.8084817  0.354201975  0.9626724 #> [1363,] -0.9002733 -0.48198881 -0.7537290  0.8421285  0.490760678 -0.9462633 #> [1364,]  2.9651365 -0.12760276 -0.2522952  1.2562563 -0.083174095 -0.3790124 #> [1365,] -0.6812649 -0.33050587 -0.5524310  0.9433893  1.216859965 -0.7297999 #> [1366,]  1.4285828 -0.34286404  1.7562771 -1.0717833  1.113960477 -0.7484790 #> [1367,]  0.5542456  0.80964867  0.6112899  0.6344411  0.050967870  0.5528926 #> [1368,] -0.2341827 -0.07788574 -0.1680152 -0.6861167 -0.025349404 -0.2698036 #> [1369,] -0.2730962 -0.09590071 -0.1994175 -0.7304539 -0.041826783 -0.3113573 #> [1370,] -0.4159115 -0.16947057 -0.3187078  1.1534299 -0.164659472 -0.4607807 #> [1371,]  0.3821277  0.48944928  0.4038674 -1.8339710  0.015177471  0.3909784 #> [1372,] -1.0383483 -0.58467465  1.1316487 -1.2585320  0.308315179  0.9252146 #> [1373,]  1.6162422  3.44690547 -0.4962046 -1.0192316 -0.600502240  1.4988857 #> [1374,] -1.1561370  1.47883918 -0.9961040  0.7605477  0.217255452 -1.1946575 #> [1375,]  1.8351645  4.09357220 -0.4306926 -0.9678325 -0.397001726 -0.5926833 #> [1376,]  1.0299008 -0.53391745  1.2195249 -1.2246017  0.383635649 -1.0153245 #> [1377,] -1.4211631 -0.89413575  0.7975987  0.6992206  0.110909467  0.6906063 #> [1378,]  0.3493717  0.43353755  0.3654736  0.5257186  0.011334635  0.3596536 #> [1379,]  0.4482215  0.60741696  0.4824654  0.5818756  0.025521494 -2.2043712 #> [1380,]  0.2883235  0.33429566  0.2950434  0.4861582  0.006063046  0.3007191 #> [1381,]  0.3890351  0.50146271  0.4120132  0.5492585  0.016089598  0.3975601 #> [1382,]  0.7269383 -0.85558333  0.8270794 -1.4113195  0.123321068 -1.4047263 #> [1383,]  0.3294278  0.40038165  0.3422960 -1.9482521  0.009359375  0.3404840 #> [1384,]  0.3128036  0.37328027  0.3230987  0.5025673  0.007906538  0.3244448 #> [1385,]  0.2868438  0.33197558  0.2933561  0.4851403  0.005962266  0.2992807 #> [1386,]  0.8611438  1.47003896  0.9989890 -1.3172058  0.214156885 -1.1995766 #> [1387,] -0.3982120 -0.15978295 -0.3036273  1.1740446 -0.142909126 -0.4424811 #> [1388,]  0.4490945  0.60901885  0.4835130 -1.7172188  0.025683784 -2.2003779 #> [1389,] -0.4325321 -0.17870143 -0.3329362 -0.8809286 -0.187078566 -0.4779163 #> [1390,]  1.0573351 -0.51525280 -0.7963118 -1.2115577  0.417938968  1.0093326 #> [1391,] -0.5650513 -0.25658620 -0.4484742  1.0180729 -0.446830705  1.6311305 #> [1392,]  0.3650792 -2.17330926  0.3838353  0.5352213  0.013080585  0.3746987 #> [1393,]  0.3091031  0.36731558  0.3188410 -1.9994524  0.007605875  0.3208667 #> [1394,]  0.5309850 -1.30889989  0.5827637 -1.6039599  0.044323917  0.5312387 #> [1395,]  0.5932722  0.88776124  0.6594577  0.6522725  0.063616089  0.5890858 #> [1396,]  0.9925661 -0.56127983  1.1703515  0.8044017  0.340156573 -1.0508674 #> [1397,]  0.2672201  0.30161223  0.2710756 -2.1216282  0.004733161  0.2801559 #> [1398,]  1.2285600 -0.42052453 -0.6736377 -1.1397033  0.681492973 -0.8614384 #> [1399,]  0.2337348  0.25162064  0.2334955  0.4463190  0.003060065  0.2472958 #> [1400,]  0.2672201  0.30161223  0.2710756 -2.1216282  0.004733161  0.2801559 #> [1401,] -0.8151381 -0.42134784 -0.6747236  0.8769050  0.678292432  1.1592870 #> [1402,] -0.2338849 -0.07775171 -0.1677770 -0.6857612 -0.025244546 -0.2694839 #> [1403,]  1.3670449 -0.36391945 -0.5980286 -1.0911803  0.965103955 -0.7798284 #> [1404,]  0.4475424  0.60617153 -2.0761937  0.5815163  0.025395731  0.4530035 #> [1405,] -0.3796444 -0.14978267 -0.2878896 -0.8353494 -0.122321873 -0.4232244 #> [1406,] -0.3578180 -0.13824692 -0.2695027 -0.8154425 -0.100863313 -0.4005054 #> [1407,]  0.4407649  0.59377972  0.4735275 -1.7303648  0.024164144  0.4466075 #> [1408,] -0.2339281 -0.07777115 -0.1678116  1.4581239 -0.025259735 -0.2695303 #> [1409,]  1.0171406 -0.54300361 -0.8314659  0.8124555  0.368366873 -1.0271887 #> [1410,] -0.7031346 -0.34494758 -0.5722341  0.9313248 -0.910883566  1.3304819 #> [1411,] -0.4400794 -0.18293502 -0.3394181  1.1271949 -0.197923886 -0.4856827 #> [1412,]  0.9761829 -0.57406779  1.1488395 -1.2516169  0.322204408 -1.0672928 #> [1413,]  1.1902030 -0.43897200 -0.6978803 -1.1545244  0.614590236 -0.8872801 #> [1414,] -0.8420458 -0.44028291  1.4293961  0.8653806  0.610195278 -0.8891035 #> [1415,]  1.0188621 -0.54176212 -0.8299001  0.8130154  0.370401832  0.9750663 #> [1416,] -0.5005296 -0.21775003 -0.3917800  1.0696185 -0.301022586 -0.5475728 #> [1417,] -0.8226075 -0.42658225 -0.6816187 -1.1446195  0.658433261 -0.8699624 #> [1418,]  0.3179373  0.38159627  0.3290147  0.5059109  0.008337140  0.3294038 #> [1419,] -2.2441228  0.60262871  0.4793312  0.5804914  0.025039965  0.4511791 #> [1420,]  0.4231326 -1.77981016  0.4524618  0.5683814  0.021154893  0.4299361 #> [1421,]  1.3065554  2.58458548 -0.6289704  0.8996988 -1.200758491 -0.8134193 #> [1422,] -1.8131660  0.80426694 -1.6448942 -1.5793572  0.050156300 -1.8169931 #> [1423,]  0.7431927 -0.83035366 -1.1796357 -1.3986636  0.132532876 -1.3760758 #> [1424,]  1.7975209 -0.25123542 -0.4407582  1.0245502 -0.424732097  1.6549684 #> [1425,] -0.3826772 -0.15140453 -0.2904543  1.1932302 -0.125534020 -0.4263741 #> [1426,]  0.4055313  0.53045747  0.4315333  0.5586290  0.018420419  0.4132466 #> [1427,] -0.6052740 -0.28161496 -0.4842007  0.9899513 -0.559024976 -0.6536424 #> [1428,]  0.6316267  0.96632085  0.7071516 -1.4944745  0.078018450 -1.6012867 #> [1429,]  1.6476339 -0.28265895 -0.4856784 -1.0112762 -0.564025772 -0.6553096 #> [1430,] -0.3294322 -0.12361422 -0.2457829 -0.7884446 -0.077053893 -0.3708160 #> [1431,]  2.1956315 -0.19163620 -0.3526581 -0.8996515 -0.221344562 -0.5014713 #> [1432,] -0.3730960 -0.14629641  3.5415771  1.2056185 -0.115581354 -0.4164178 #> [1433,]  3.0419672 -0.12326007 -0.2452028 -0.7877642 -0.076523649 -0.3700843 #> [1434,] -0.2745943 -0.09661345 -0.2006372  1.3659646 -0.042578871 -0.3129485 #> [1435,]  0.2913277  0.33901895  0.2984721  0.4882152  0.006271277  0.3036378 #> [1436,] -0.3834217 -0.15180334 -0.2910842 -0.8387250 -0.126331335  2.3411147 #> [1437,]  0.4026982 -1.90313871  0.4281744  0.5570360  0.018004502  0.4105558 #> [1438,] -0.7305985 -0.36330924 -0.5972027 -1.0906293  0.969009924  1.2838158 #> [1439,] -0.3995373 -0.16050318 -0.3047539  1.1724566 -0.144464421 -0.4438533 #> [1440,]  1.1107898 -0.48197941 -0.7537169  0.8421335  0.490783713 -0.9462506 #> [1441,] -0.6789902 -0.32901301 -0.5503754  0.9446755 -0.812881786 -0.7275288 #> [1442,] -0.5021920 -0.21872953 -0.3932307 -0.9361764 -0.304291876  1.8206071 #> [1443,]  0.9166283 -0.62512419 -0.9337116 -1.2841253  0.262465856  0.8835712 #> [1444,] -0.7321375 -0.36434549  1.6705506  0.9161162  0.962390062 -0.7804568 #> [1445,]  0.4753709  0.65774302  0.5151505  0.5959828  0.030910578  0.4791976 #> [1446,]  0.8822544 -0.65831587 -0.9743505 -1.3042748  0.231737901  0.8526551 #> [1447,] -1.4860530 -0.94983716  0.7588764 -1.4564125  0.095896068  0.6624630 #> [1448,]  1.0552855 -0.51660776 -0.7980358  0.8247316  0.415305588  1.0075094 #> [1449,] -0.2446346 -0.08262764 -0.1763947  1.4317838 -0.029224277 -0.2810079 #> [1450,] -1.3379635 -0.82402631  0.8530761  0.7166160  0.134995419  0.7305411 #> [1451,] -1.3162577  1.24071953  0.8687714 -1.3861811  0.142383466 -1.3481433 #> [1452,]  1.3437916 -0.37246919 -0.6095748  0.9100566  0.912644085 -0.7923957 #> [1453,] -0.6615464 -0.31762432 -0.5346382 -1.0474012 -0.746801456  1.4082594 #> [1454,]  0.2909904  0.33848778  0.2980869  0.4879849  0.006247655  0.3033102 #> [1455,]  0.4657330  0.63975788 -1.9860097 -1.6919592  0.028915316  0.4701378 #> [1456,] -0.7816996 -0.39812371 -0.6439454 -1.1210818  0.777461049 -0.8295784 #> [1457,] -0.5396413 -0.24109369 -0.4260532 -0.9640094 -0.384632107  1.7025880 #> [1458,]  0.4552227  0.62029447 -2.0371869  0.5855609  0.026843202  0.4602436 #> [1459,] -0.3713426 -0.14536657 -0.2808814  1.2079342 -0.113821171 -0.4145938 #> [1460,] -0.4319793 -0.17839238  3.0078633 -0.8804699 -0.186300821 -0.4773471 #> [1461,]  0.5395470 -1.28086484  0.5932475 -1.5935425  0.046694901  0.5392166 #> [1462,] -0.3933405 -0.15714296 -0.2994900 -0.8474965 -0.137292118 -0.4374349 #> [1463,] -1.5129491  1.02755883  0.7438544 -1.4670929  0.090453062 -1.5349616 #> [1464,] -0.6394440 -0.30334610 -0.5147664 -1.0330029  1.495792022  1.4535658 #> [1465,]  0.6659842  1.03814365  0.7501587 -1.4625751  0.092711862  0.6560948 #> [1466,]  1.7912010 -0.25243600 -0.4424920 -0.9774394 -0.429633509 -0.6062276 #> [1467,]  0.4307615 -1.73727936  0.4615641  0.5725337  0.022422899  0.4371549 #> [1468,]  0.4109938  0.54015188  0.4380175  0.5616821  0.019241089  0.4184313 #> [1469,]  1.0527624  1.92944286  1.2497376 -1.2136985  0.412079541  1.0052645 #> [1470,] -1.4560838 -0.92400242  0.7763068  0.6923406  0.102476575  0.6751598 #> [1471,] -0.2350364 -0.07827032 -0.1686981 -0.6871346 -0.025651707 -0.2707201 #> [1472,] -1.0020182  1.79482299 -0.8492736  0.8061880  0.346244704 -1.0455484 #> [1473,] -0.3371466 -0.12754849 -0.2522069  1.2564171 -0.083088990 -0.3789014 #> [1474,] -1.1917378 -0.70454243  0.9705409  0.7512096  0.196816828 -1.2289019 #> [1475,] -0.7848094  2.49832009 -0.6468014 -1.1228964 -1.302982258  1.2009800 #> [1476,] -0.6483902 -0.30910470  1.9127758 -1.0388658 -0.699496373  1.4348681 #> [1477,]  1.0828020 -0.49891846 -0.7754641  0.8334247  0.451633058 -0.9690221 #> [1478,]  0.4855200 -1.47749347  0.5274247 -1.6635241  0.033112734  0.4887243 #> [1479,]  1.0102128 -0.54805000 -0.8378241 -1.2342679  0.360256140 -1.0337513 #> [1480,]  0.4564555 -1.60624726  0.4923549  0.5862063  0.027080730  0.4614049 #> [1481,] -0.2065397 -0.06570834 -0.1460640 -0.6518938 -0.016836693 -0.2400017 #> [1482,] -0.9808858  1.84736014  1.2057876 -1.2296820  0.371141958  0.9756232 #> [1483,]  0.2551705  0.28335165  0.2574864  0.4625600  0.004072598  0.2683655 #> [1484,]  2.0989775 -0.20367681 -0.3708062  1.0913433 -0.256307997 -0.5229561 #> [1485,] -0.4438666 -0.18506915 -0.3426756 -0.8902601 -0.203526820 -0.4895764 #> [1486,] -0.6249733 -0.29409171 -0.5017986  0.9771200 -0.620503053 -0.6734444 #> [1487,] -0.9136805  2.03363646 -0.7662513 -1.1946392  0.467687154  1.0423307 #> [1488,] -0.5453999 -0.24458256 -0.4311240 -0.9681866 -0.398164972  1.6858304 #> [1489,]  1.2567650 -0.40780116  1.5225148  0.8855716  0.733795188 -0.8434091 #> [1490,]  0.2230610  0.23619446  0.2216418  0.4379014  0.002627849  0.2367557 #> [1491,] -0.9193706 -0.49587951  1.2960549 -1.1976642  0.458323266  1.0363180 #> [1492,]  0.4028039  0.52563434  0.4282996  0.5570956  0.018019891  0.4106561 #> [1493,] -0.3226196 -0.12016684 -0.2401242 -0.7817618 -0.071983029  2.7497822 #> [1494,] -1.6731260  0.89670786  0.6649257 -1.5284822  0.065170047  0.5931665 #> [1495,]  0.2337348  0.25162064  0.2334955  0.4463190  0.003060065  0.2472958 #> [1496,] -0.6015835 -0.27929332  2.0793867  0.9924207 -0.547997234 -0.6499278 #> [1497,] -0.7773187 -0.39510666  1.5626855 -1.1185182  0.791826330  1.2117610 #> [1498,]  0.3000299  0.35279795  0.3084267  0.4941040  0.006902373  0.3120811 #> [1499,] -0.7722120 -0.39159733 -0.6352397  0.8964436  0.809012691 -0.8201920 #> [1500,]  0.4552286  0.62030526  0.4908800 -1.7077553  0.026844325 -2.1727364 #> [1501,]  0.8491907  1.44248811  0.9835452 -1.3247271  0.204623932 -1.2153034 #> [1502,]  1.3648959 -0.36469523 -0.5990782 -1.0918798  0.960170300 -0.7809725 #> [1503,]  1.1096726 -0.48263632 -0.7545628  0.8417883  0.489177533  1.0558120 #> [1504,] -0.3261168 -0.12193333 -0.2430273 -0.7852027 -0.074556204 -0.3673372 #> [1505,] -0.1974230 -0.06181349 -0.1388960 -0.6400155 -0.014534070 -0.2301148 #> [1506,] -0.7969231 -0.40865424  1.5198970  0.8850149  0.730113839 -0.8446234 #> [1507,]  0.8549530 -0.68692988  0.9909872  0.7569548  0.209181970  0.8280416 #> [1508,]  3.0652032 -0.12199704 -0.2431319  1.2733563 -0.074649997 -0.3674694 #> [1509,]  0.5060767 -1.39684869  0.5523754  0.6113739  0.037902111  0.5079790 #> [1510,]  0.8378348 -0.70599512 -1.0321025  0.7507441  0.195843537  0.8125815 #> [1511,] -0.6909219 -0.33686300 -0.5611666 -1.0661029 -0.860346647 -0.7394352 #> [1512,]  0.9755802 -0.57454793  1.1480489 -1.2519319  0.321556733  0.9364109 #> [1513,] -1.7165505 -1.15454587  0.6462036 -1.5445191  0.059951023  0.5791713 #> [1514,] -1.0137428 -0.56600039  1.1623074  0.8023768  0.333368583  0.9461238 #> [1515,] -1.8117394 -1.24204436  0.6084754  0.6333720  0.050285070  0.5507636 #> [1516,]  0.6887219 -0.92046640  0.7787618  0.6931399  0.103426615  0.6769443 #> [1517,]  0.4218392  0.55953426  0.4509204 -1.7615773  0.020944958 -2.3325722 #> [1518,]  1.3103343 -0.38539973  1.5950262 -1.1101763 -1.189514308  1.2326912 #> [1519,] -0.3527003 -0.13557735 -0.2652097 -0.8106714 -0.096239154 -0.3951649 #> [1520,] -0.7919255 -0.40518937 -0.6533420  0.8872857  0.745230793 -0.8396866 #> [1521,]  0.8480879 -0.69446701  0.9821217 -1.3254284  0.203759550  0.8218440 #> [1522,] -0.7596655 -0.38301026 -0.6237462 -1.1081003  0.853357557  1.2379805 #> [1523,] -1.1802750 -0.69538552  0.9810533 -1.3259558  0.203112392 -1.2178836 #> [1524,] -1.2335950 -0.73824295  0.9339061  0.7407203  0.175882785  0.7879753 #> [1525,]  1.8160049 -0.24778041 -0.4357606 -0.9719790  2.434215984 -0.5985081 #> [1526,] -0.3169352 -0.11730996 -0.2354130  1.2884584 -0.067932838 -0.3576906 #> [1527,]  0.2569010  0.28595581  0.2594336  0.4638353  0.004163266  0.2700611 #> [1528,]  0.4461728  0.60366198  0.4800079  0.5807907  0.025143422  0.4517116 #> [1529,]  0.4982745 -1.42653568  0.5428915  0.6075167  0.036031434  0.5006774 #> [1530,] -0.8744848 -0.46339610  1.3704208 -1.1734918  0.539496607  1.0858002 #> [1531,] -0.6856312  2.99961417 -0.5563789  0.9409375 -0.839069430 -0.7341574 #> [1532,] -0.2851976 -0.10169728 -0.2092918 -0.7434695 -0.048172306  3.0845661 #> [1533,]  0.4339371  0.58136384  0.4653585 -1.7414041  0.022965902  0.4401573 #> [1534,] -0.8803029 -0.46757406  1.3603288  0.8498589  0.527967230  1.0791115 #> [1535,] -0.5402109 -0.24143820 -0.4265545 -0.9644238 -0.385956269 -0.5879188 #> [1536,]  1.5639706 -0.30331669 -0.5147253 -1.0329728 -0.668386160 -0.6879174 #> [1537,]  0.4310442 -1.73573709  0.4619018  0.5726867  0.022470881  0.4374223 #> [1538,]  0.4812235 -1.49537698  0.5222249  0.5989608  0.032167647  0.4846929 #> [1539,] -0.4714786 -0.20082128 -0.3665198 -0.9124167 -0.247744536 -0.5178975 #> [1540,]  0.7060441 -0.89003274  0.8006254 -1.4281857  0.112144019 -1.4434253 #> [1541,] -0.2538820 -0.08688335 -0.1838430 -0.7090659 -0.032979090 -0.2908938 #> [1542,]  0.5608120 -1.21557023 -1.6145497  0.6374922  0.052961405  0.5589940 #> [1543,] -0.2917262 -0.10486101 -0.2146391  1.3327013 -0.051858386 -0.3311049 #> [1544,] -0.5745319  3.81053207 -0.4568695  1.0111958 -0.471719685 -0.6226516 #> [1545,] -1.6352970 -1.08119899 -1.4660752  0.6603670  0.070210720 -1.6503204 #> [1546,]  0.4660041 -1.56186057  0.5038490 -1.6915582  0.028970187  0.4703929 #> [1547,] -0.3200727 -0.11888462 -0.2380122 -0.7792420 -0.070148264  2.7701660 #> [1548,]  0.5871602 -1.14232929  0.6518893 -1.5395825  0.061505741 -1.7140063 #> [1549,]  0.9537454 -0.59242356 -0.8932997  0.7914343  0.298698307  0.9168661 #> [1550,] -0.8415974 -0.43996557  1.4302451 -1.1553102  0.611255120 -0.8886622 #> [1551,]  1.7617516 -0.25816439  2.2185517  1.0161959 -0.453473999 -0.6156653 #> [1552,] -0.2722616 -0.09550422 -0.1987383  1.3707199 -0.041411785 -0.3104705 #> [1553,]  1.0698100 -0.50713708 -0.7859684 -1.2057828 -2.302991515 -0.9799836 #> [1554,]  0.5887158 -1.13824538 -1.5294851  0.6502272  0.062038204  0.5848688 #> [1555,] -0.4096534 -0.16602830 -0.3133671  1.1605753 -0.156724548 -0.4543166 #> [1556,] -0.5092950  4.48576454 -0.3994352  1.0620810 -0.318537858 -0.5565032 #> [1557,]  0.2551705  0.28335165  0.2574864  0.4625600  0.004072598  0.2683655 #> [1558,]  2.8879581 -0.13224013 -0.2598220 -0.8046137 -0.090636061 -0.3884424 #> [1559,] -0.1974230 -0.06181349 -0.1388960 -0.6400155 -0.014534070 -0.2301148 #> [1560,] -0.8822499 -0.46897435 -0.7369289 -1.1777253  0.524181065  1.0768922 #> [1561,]  0.8123706 -0.73611369 -1.0682275 -1.3488642  0.177109733 -1.2665542 #> [1562,]  0.7913746 -0.76267148  0.9092020 -1.3633288  0.162628138  0.7705115 #> [1563,] -0.4023452 -0.16203185 -0.3071421  1.1691167 -0.147798161 -0.4467593 #> [1564,]  0.7744611 -0.78530275  0.8875692  0.7270721  0.151575992  0.7551549 #> [1565,] -0.6225117 -0.29252495 -0.4995961 -1.0217719 -0.612576738 -0.6709723 #> [1566,]  0.2900229  0.33696539  0.2969824  0.4873234  0.006180239  0.3023704 #> [1567,]  1.1553562 -0.45698768 -0.7213825  0.8557364  0.557885002  1.0962601 #> [1568,] -1.5105027  1.02981206  0.7451974  0.6820696  0.090931174  0.6524653 #> [1569,]  0.7560945 -0.81123334 -1.1572209  0.7199984  0.140176059  0.7384531 #> [1570,] -1.0520934 -0.59517496  1.1151818  0.7903315  0.295385731 -1.0941566 #> [1571,]  0.8726342 -0.66815832  1.0138583  0.7632930  0.223606895 -1.1848509 #> [1572,] -0.2353830 -0.07842658 -0.1689754 -0.6875471 -0.025775139 -0.2710921 #> [1573,]  0.5942258 -1.12398297 -1.5136854  0.6526993  0.063949799  0.5899681 #> [1574,] -0.6897363 -0.33608078 -0.5600933 -1.0653573  1.168843917 -0.7382527 #> [1575,] -1.1078507 -0.63826424 -0.9498444  0.7738803  0.249648747  0.8710076 #> [1576,]  0.3722812  0.47245674  0.3922850  0.5394973  0.013940094  0.3815821 #> [1577,] -0.5490393 -0.24679425 -0.4343319  1.0300643 -0.406885753 -0.5968671 #> [1578,] -0.4928873 -0.21326209 -0.3851182 -0.9290715 -0.286306173 -0.5397779 #> [1579,]  1.4752788 -0.32825754  1.8203847  0.9453292 -0.808396730 -0.7263783 #> [1580,]  0.5162477  0.73544080  0.5647639  0.6163495  0.040440433  0.5174861 #> [1581,]  0.9722474 -0.57721532 -0.8743719  0.7976529  0.317991966 -1.0713180 #> [1582,] -0.8858112 -0.47153851  1.3509035  0.8477022  0.517346928  1.0728572 #> [1583,]  1.9030879 -0.23255914 -0.4135938 -0.9536098 -0.352674029 -0.5729470 #> [1584,] -0.5215459  4.34373907 -0.4101597 -0.9507086 -0.344183844 -0.5689672 #> [1585,]  0.8885895 -0.65197121  1.0345425  0.7689474  0.237202791 -1.1650137 #> [1586,] -0.1778363 -0.05366153 -0.1236261 -0.6133470 -0.010340985 -0.2087660 #> [1587,]  0.3220500  0.38829295  0.3337623  0.5085666  0.008693633  0.3333728 #> [1588,]  1.0189904 -0.54166984 -0.8297837  0.8130571  0.370553723  0.9751806 #> [1589,] -0.2745943 -0.09661345 -0.2006372  1.3659646 -0.042578871 -0.3129485 #> [1590,]  1.3867718 -0.35693015 -0.5885541  0.9218029  1.011216472 -0.7694863 #> [1591,]  1.2913077 -0.39310595 -0.6372544 -1.1168107  0.801560424  1.2160035 #> [1592,] -0.2559550 -0.08784495 -0.1855170 -0.7114185 -0.033864427 -0.2931065 #> [1593,] -2.7824284  0.45046332  0.3771838  0.5318130  0.012429078  0.3692626 #> [1594,] -0.4989406 -0.21681487  2.5615154 -0.9337026 -0.297920517 -0.5459527 #> [1595,] -0.4241755 -0.17404431 -0.3257743 -0.8739557 -0.175558762 -0.4693065 #> [1596,] -1.1010709  1.57982135 -0.9433674 -1.2889625  0.254691394  0.8760043 #> [1597,] -1.9409418 -1.36342353  0.5635032  0.6158464  0.040177174  0.5165202 #> [1598,] -0.7546195 -0.37957074 -0.6191298  0.9048986 -1.146673880 -0.8027662 #> [1599,] -0.9640629 -0.52878498 -0.8134947  0.8189693  0.392658896 -1.0085950 #> [1600,] -0.4325335 -0.17870226 -0.3329374  1.1351642 -0.187080650 -0.4779178 #> [1601,]  0.7445910 -0.82824368 -1.1771667  0.7155159  0.133346941 -1.3736676 #> [1602,] -1.2650920  1.30912172  0.9080262  0.7331520  0.162014222 -1.2992440 #> [1603,]  0.9827743 -0.56886252 -0.8639388 -1.2481906  0.329345993  0.9428440 #> [1604,]  0.6405535  0.98485220  0.7183005 -1.4859554  0.081668131  0.6327184 #> [1605,]  0.6849549  1.07837060 -1.2919638  0.6915931  0.101595103 -1.4847955 #> [1606,] -0.3996377 -0.16055775 -0.3048392  1.1723367 -0.144582669 -0.4439572 #> [1607,] -0.8774163 -0.46549993 -0.7324299 -1.1750926  0.533646873 -0.9238563 #> [1608,]  1.7527719 -0.25995621 -0.4533192  1.0140828 -0.461086115  1.6165432 #> [1609,]  0.4078629  0.53458978 -2.3025569  0.5599351  0.018767679  0.4154602 #> [1610,]  0.8874535 -0.65310105  1.0330685  0.7685469  0.236216359  0.8573364 #> [1611,] -0.6767110 -0.32751906 -0.5483165  0.9459702  1.243739985 -0.7252529 #> [1612,] -0.5359969 -0.23889252 -0.4228473 -0.9613522 -0.376234479  1.7133729 #> [1613,] -0.7342562  2.73393332  1.6651784 -1.0928502 -1.048907590  1.2778553 #> [1614,] -0.3402910 -0.12916125 -0.2548301 -0.7989294 -0.085640086 -0.3821932 #> [1615,] -0.8727111 -0.46212435  1.3735257  0.8528627  0.543076815  1.0878565 #> [1616,]  0.7246301 -0.85927431  0.8241527 -1.4131490  0.122049995 -1.4088955 #> [1617,] -0.5730571 -0.26151912 -0.4555625 -0.9878933 -0.467786328  1.6098859 #> [1618,] -0.5241197 -0.23175554  2.4247332  1.0497399 -0.349748113 -0.5715833 #> [1619,] -0.3651985 -0.14212060 -0.2757061 -0.8222525 -0.107799932 -0.4081980 #> [1620,] -0.8185000 -0.42370171  1.4753046  0.8754361  0.669258486 -0.8659139 #> [1621,]  0.8137520 -0.73442272  0.9379048 -1.3479310  0.178092780 -1.2645505 #> [1622,] -0.8837554  2.12739772 -0.7383306  0.8485050  0.521277762  1.0751827 #> [1623,] -0.4967280 -0.21551449 -0.3884647 -0.9320138 -0.293638117  1.8392622 #> [1624,]  1.1074572 -0.48394361 -0.7562455  0.8411034  0.486003158 -0.9489037 #> [1625,] -0.3358703 -0.12689534 -0.2511428 -0.7946853 -0.082068632 -0.3775645 #> [1626,] -0.3174458 -0.11756585 -0.2358358  1.2876137 -0.068290034 -0.3582276 #> [1627,]  2.8361686 -0.13551912 -0.2651159 -0.8105666 -0.096139694 -0.3950480 #> [1628,] -0.8311638 -0.43259905 -0.6895261  0.8699780  0.636607563  1.1384443 #> [1629,]  0.6257074  0.95408360 -1.4290437  0.6665700  0.075661674 -1.6153983 #> [1630,] -1.5403953 -0.99715251  0.7290964  0.6766466  0.085307590  0.6406587 #> [1631,] -0.3815059 -0.15077758 -0.2894634  1.1947212 -0.124286552  2.3520681 #> [1632,]  0.3503279  0.43514441  0.3665887  0.5263042  0.011436009  0.3605708 #> [1633,]  2.2094046 -0.19002099 -0.3502085  1.1143765 -0.216881037 -0.4985576 #> [1634,] -0.4174899 -0.17034171 -0.3200563 -0.8683182 -0.166703957 -0.4624100 #> [1635,] -0.1971291 -0.06168895 -0.1386655 -0.6396272 -0.014463694 -0.2297956 #> [1636,] -0.9588581  1.90503541 -0.8086009  0.8207772  0.399644865 -1.0035200 #> [1637,] -0.2958242 -0.10685973 -0.2180025 -0.7546316 -0.054269369 -0.3354370 #> [1638,]  0.5554653  0.81206123  0.6127895 -1.5747798  0.051334160  0.5540263 #> [1639,]  0.3746490 -2.09850959  0.3950671  0.5408925  0.014231012  0.3838432 #> [1640,]  0.2551705  0.28335165  0.2574864  0.4625600  0.004072598  0.2683655 #> [1641,] -1.1534200 -0.67405601 -0.9934951 -1.3135824  0.218927056 -1.1920412 #> [1642,]  0.6331745  0.96952732  0.7090834 -1.4929853  0.078642982 -1.5976389 #> [1643,]  0.6749245 -0.94602749 -1.3133836  0.6874496  0.096828143  0.6642985 #> [1644,]  0.4809560  0.66822449  0.5219013  0.5988252  0.032109420 -2.0642315 #> [1645,]  0.8766174 -0.66405232 -0.9813370  0.7647103  0.226949041 -1.1798333 #> [1646,] -0.8334187 -0.43418836 -0.6916115 -1.1507236  0.631013590 -0.8806121 #> [1647,] -0.3379286 -0.12794906 -0.2528589 -0.7966655 -0.083718410  2.6335180 #> [1648,] -0.5919773 -0.27327390 -0.4723593 -1.0010517 -0.520001296 -0.6402516 #> [1649,] -2.1931288  0.62167230  0.4917707  0.5859520  0.026986932  0.4609472 #> [1650,] -0.7976444 -0.40915495  1.5183651 -1.1303410  0.727965241  1.1829620 #> [1651,] -0.2353830 -0.07842658 -0.1689754 -0.6875471 -0.025775139 -0.2710921 #> [1652,] -0.4494295  5.31305783  2.8779793 -0.8947883 -0.211954554 -0.4952915 #> [1653,] -0.5031751 -0.21930926 -0.3940888 -0.9369225 -0.306236600 -0.5502692 #> [1654,]  0.2337348  0.25162064  0.2334955  0.4463190  0.003060065  0.2472958 #> [1655,] -0.7100445 -0.34954391 -0.5785058 -1.0780251  1.063411541  1.3184125 #> [1656,] -0.3132208 -0.11545293 -0.2323398 -0.7724032 -0.065373381 -0.3537827 #> [1657,] -0.1971291 -0.06168895 -0.1386655 -0.6396272 -0.014463694 -0.2297956 #> [1658,] -0.2819605 -0.10013799 -0.2066456  1.3513141 -0.046413763 -0.3207643 #> [1659,] -2.1120735  0.65418247  0.5128529 -1.6806441  0.030509387  0.4774102 #> [1660,] -0.3116428 -0.11466633 -0.2310355 -0.7708157 -0.064306525 -0.3521215 #> [1661,]  0.3748933  0.47694926  0.3953542  0.5410361  0.014261261  0.3840764 #> [1662,]  1.6513734 -0.28179292 -0.4844526  0.9897631 -0.559875545 -0.6539267 #> [1663,] -0.2917262 -0.10486101 -0.2146391  1.3327013 -0.051858386 -0.3311049 #> [1664,]  0.3617985  0.45454002  0.3799926  0.5332568  0.012701528  0.3715600 #> [1665,] -0.2559550 -0.08784495 -0.1855170 -0.7114185 -0.033864427 -0.2931065 #> [1666,] -0.4235189 -0.17367977 -0.3252123  1.1449450 -0.174675061  2.1338817 #> [1667,]  0.9477282 -0.59752035  1.1115758  0.7893966  0.292602878 -1.0971232 #> [1668,]  1.2015267  2.30743506 -0.6905531  0.8695049  0.633844288 -0.8794854 #> [1669,] -0.2354262 -0.07844606 -0.1690099  1.4543371 -0.025790549 -0.2711384 #> [1670,] -0.3868266 -0.15363087 -0.2939669 -0.8417510 -0.130022800 -0.4306806 #> [1671,]  0.4482785 -1.64603221  0.4825338  0.5819057  0.025532069  0.4536979 #> [1672,] -0.4062752 -0.16417777 -0.3104880 -0.8587401 -0.152553209  2.2181586 #> [1673,] -1.6230663  0.93434541  0.6878250 -1.5096856  0.071949003  0.6101968 #> [1674,] -2.1616798  0.63394561 -2.0009923  0.5894097  0.028287091  0.4671931 #> [1675,] -0.3579574 -0.13831984 -0.2696197  1.2261334 -0.100991405 -0.4006508 #> [1676,] -0.4358381 -0.18055271 -0.3357739  1.1316503 -0.191777097 -0.4813194 #> [1677,] -0.2273279 -0.07481599 -0.1625426 -0.6778637 -0.023011065 -0.2624370 #> [1678,]  0.4310271  0.57609325  0.4618814 -1.7461835  0.022467983  0.4374062 #> [1679,] -0.3993948 -0.16042568 -0.3046327  1.1726270 -0.144296591 -0.4437057 #> [1680,] -0.9021749 -0.48336731  1.3236201 -1.1884883  0.487398935 -0.9481256 #> [1681,] -0.3402910 -0.12916125 -0.2548301 -0.7989294 -0.085640086 -0.3821932 #> [1682,] -1.4184851  1.12125734  0.7992774  0.6997580  0.111593054  0.6918212 #> [1683,]  0.3327267  0.40581813  0.3461189  0.5153681  0.009668165 -2.9098519 #> [1684,]  0.9167249 -0.62503499 -0.9336019  0.7787736  0.262556018  0.8836580 #> [1685,] -0.7160708 -0.35356539  1.7123838  0.9244342 -0.966619486  1.3080703 #> [1686,] -0.2365346 -0.07894638 -0.1698971 -0.6889154 -0.026188217 -0.2723278 #> [1687,] -2.9442020  0.41729058  0.3541568  0.5197101  0.010339116  0.3503195 #> [1688,]  0.8451035 -0.69778865 -1.0222126 -1.3273331  0.201432911  0.8191487 #> [1689,] -0.8903327 -0.47479931  1.3432587 -1.1821086  0.508836872  1.0677792 #> [1690,]  0.3927227  0.50790724  0.4163687  0.5513734  0.016591768  0.4010706 #> [1691,]  0.4220843  0.55997442  0.4512125  0.5678074  0.020984634 -2.3313098 #> [1692,]  1.1643199 -0.45223213  1.3982203 -1.1649110  0.572109164 -0.9056465 #> [1693,] -0.2819605 -0.10013799 -0.2066456  1.3513141 -0.046413763 -0.3207643 #> [1694,]  0.4039301 -1.89528703  0.4296346 -1.7929838  0.018184542  0.4117259 #> [1695,]  0.4098367  0.53809451  0.4366431  0.5610374  0.019065176  0.4173334 #> [1696,]  1.6175193 -0.28980529 -0.4957680 -1.0189037 -0.598959036 -0.6666714 #> [1697,]  0.2657897  0.29942914  0.2694588  0.4703068  0.004651127  0.2787582 #> [1698,] -0.2350364 -0.07827032 -0.1686981 -0.6871346 -0.025651707 -0.2707201 #> [1699,]  1.0380200 -0.52827255  1.2302461 -1.2206908  0.393576223  0.9921403 #> [1700,]  0.3014275  0.35502420  0.3100286 -2.0200378  0.007007669  0.3134356 #> [1701,]  0.4934086 -1.44561055  0.5369855  0.6050931  0.034897762  0.4961197 #> [1702,] -1.9497572 -1.37181190  0.5606642  0.6147107  0.039588425  0.5143437 #> [1703,]  1.0758681  1.98698242 -0.7810369  0.8312466  0.442279408  1.0258088 #> [1704,]  0.3907614  0.50447690 -2.4151585 -1.8173557  0.016323346  0.3992038 #> [1705,]  0.6630874 -0.96895808  0.7465226 -1.4651744  0.091404601 -1.5303737 #> [1706,]  1.0721465  1.97768481 -0.7840595  0.8300741 -2.286682028  1.0225018 #> [1707,]  1.7608149 -0.25835029  2.2172370  1.0159758 -0.454260310  1.6234544 #> [1708,]  0.4912064  0.68757337  0.5343146  0.6039914  0.034392884 -2.0240624 #> [1709,] -0.7101443 -0.34961038 -0.5785964  0.9275691 -0.940800120  1.3182399 #> [1710,] -0.9739337  1.86523162 -0.8227842  0.8155780  0.379842289 -1.0182146 #> [1711,]  0.7820474 -0.77500931  0.8972657  0.7299649  0.156466652 -1.3122572 #> [1712,]  1.3370754 -0.37500382 -0.6129887  0.9082011 -1.113749070 -0.7961041 #> [1713,] -0.2664142 -0.09273848 -0.1939865 -0.7231201 -0.038583995 -0.3042523 #> [1714,]  1.0085755 -0.54925461 -0.8393403  0.8096617  0.358357459  0.9658896 #> [1715,]  0.4310665  0.57616440  0.4619284  0.5726988  0.022474663  0.4374434 #> [1716,]  0.5839742  0.86898123  0.6479479  0.6480888  0.060425194 -1.7227183 #> [1717,] -0.4153489 -0.16916038  3.1424081 -0.8665015 -0.163935029 -0.4601998 #> [1718,] -0.4640185  5.08822052 -0.3600614 -0.9065081 -0.235200854 -0.5102571 #> [1719,] -0.1959449 -0.06118790 -0.1377374 -0.6380593 -0.014182564 -0.2285090 #> [1720,]  0.4345759  0.58252257 -2.1453604  0.5745935  0.023076224  0.4407611 #> [1721,] -0.9793446 -0.54016202 -0.8278811  0.8137394  0.373048114 -1.0234850 #> [1722,]  0.4987238  0.70185461 -1.8401390  0.6077398  0.036137379  0.5010980 #> [1723,] -0.7708034 -0.39063076 -0.6339482 -1.1146897  0.813839011 -0.8187977 #> [1724,]  0.9228012 -0.61947082  1.0790370  0.7808722  0.268267880  0.8891148 #> [1725,]  0.3650792 -2.17330926  0.3838353  0.5352213  0.013080585  0.3746987 #> [1726,]  1.2274028 -0.42106124 -0.6743456  0.8770846  0.679404146  1.1598302 #> [1727,] -1.5252868  1.01632474  0.7371509  0.6793688  0.088091255  0.6465702 #> [1728,] -1.9354564  0.73626288  0.5652837  0.6165568  0.040549315  0.5178842 #> [1729,] -0.2354262 -0.07844606 -0.1690099  1.4543371 -0.025790549 -0.2711384 #> [1730,] -1.0011529 -0.55650692  1.1786112 -1.2399691  0.347220477  0.9572061 #> [1731,] -0.1982661 -0.06217104 -0.1395573 -0.6411274 -0.014737229 -0.2310304 #> [1732,]  0.9150846 -0.62655200 -0.9354675  0.7782057  0.261028628  0.8821845 #> [1733,]  1.1120288 -0.48125268 -0.7527809 -1.1869211  0.492569331 -0.9452681 #> [1734,] -1.2849566  1.28180361 -1.1205821  0.7285138  0.153996371  0.7585847 #> [1735,] -1.1822300  1.43483338 -1.0211948  0.7536647  0.202020243  0.8198312 #> [1736,] -0.7158157 -0.35339494 -0.5837494  0.9245684  1.035734555 -0.7642312 #> [1737,] -0.6906216 -0.33666480 -0.5608947  0.9381619  1.163969795 -0.7391356 #> [1738,]  0.8555465  1.45712069  0.9917540  0.7571688  0.209655400 -1.2068882 #> [1739,]  2.2268317 -0.18801093 -0.3471549 -0.8944954 -0.211400430 -0.4949208 #> [1740,] -0.3912021 -0.15598771 -0.2976757  1.1825690 -0.134875466 -0.4352184 #> [1741,] -0.3360362 -0.12698020 -0.2512811 -0.7948452 -0.082200779 -0.3777383 #> [1742,] -0.2651517 -0.09214410 -0.1929621  1.3855747 -0.037991495 -0.3029085 #> [1743,]  1.8392529 -0.24355073 -0.4296256  1.0341737 -0.394134137  1.6907442 #> [1744,]  1.1129162 -0.48073333 -0.7521119 -1.1865355  0.493851059  1.0586876 #> [1745,] -0.2642104 -0.09170165 -0.1921988 -0.7206775 -0.037553919 -0.3019064 #> [1746,]  0.8248533  1.38681658 -1.0502241  0.7459839  0.186130133  0.8008431 #> [1747,] -0.6591635 -0.31607675  1.8779622 -1.0458628  1.354877684 -0.7077127 #> [1748,] -0.9954047 -0.55218641  1.1862002  0.8083656  0.353795206 -1.0391165 #> [1749,]  0.9130704 -0.62842351  1.0663619  0.7775075  0.259161575 -1.1358797 #> [1750,]  1.2296867 -0.42000306 -0.6729497  0.8777490 -1.462990949 -0.8607028 #> [1751,] -0.2547342 -0.08727832 -0.1845310 -0.7100344 -0.033341076 -0.2918036 #> [1752,]  2.6218988 -0.15072255 -0.2893764 -0.8369234 -0.124177398 -0.4250509 #> [1753,] -0.1689574 -0.05006751 -0.1167661 -0.6006834 -0.008751863 -0.1990364 #> [1754,]  0.4966058  0.69782326 -1.8488888  0.6066871  0.035639823  0.4991147 #> [1755,] -0.7514881 -0.37744038 -0.6162668  0.9064327  0.883981443  1.2505290 #> [1756,]  0.4107049  0.53963796  0.4376743 -1.7808767  0.019197059  0.4181572 #> [1757,] -0.2617663 -0.09055531 -0.1902180 -0.7179543 -0.036433960 -0.2993030 #> [1758,]  0.3516065  0.43729543  0.3680803  0.5270858  0.011572539  0.3617970 #> [1759,]  0.4900036 -1.45922447  0.5328565  0.6033886  0.034119294  0.4929285 #> [1760,] -0.3959731 -0.15856822 -0.3017251 -0.8498025 -0.140308233 -0.4401625 #> [1761,]  0.6310632  0.96515408 -1.4155316  0.6688883  0.077791918  0.6239786 #> [1762,]  0.3799379  0.48565666  0.4012885  0.5439899  0.014895959  0.3888901 #> [1763,]  2.2469575 -0.18573518 -0.3436908 -0.8912231 -0.205294146 -0.4907887 #> [1764,]  0.3626805  0.45604054  0.3810253  0.5337860  0.012802679  0.3724040 #> [1765,]  1.6744174 -0.27655650 -0.4770269 -1.0046555 -0.535162070 -0.6455365 #> [1766,]  0.4330319 -1.72496150  0.4642766 -1.7428859  0.022810214  0.4393017 #> [1767,] -0.2978280 -0.10784067 -0.2196492 -0.7567097 -0.055476128 -0.3375538 #> [1768,]  0.3520635  0.43806494  0.3686137  0.5273648  0.011621613  0.3622351 #> [1769,]  1.7255265 -0.26552745  2.1677643  1.0076320 -0.485228917  1.5931153 #> [1770,] -1.0498704  1.68499533  1.1178140  0.7910127  0.297428097 -1.0920022 #> [1771,]  1.2425789 -0.41411559 -0.6651718  0.8814860  0.707154100 -0.8523784 #> [1772,] -0.8794445  2.14152481 -0.7343174  0.8501967  0.529647979 -0.9258462 #> [1773,] -0.6620444 -0.31794799 -0.5350868  0.9544514  1.335765548 -0.7105946 #> [1774,] -1.8154984  0.80286872 -1.6472529  0.6328375  0.049946693  0.5497009 #> [1775,] -0.9260890 -0.50079063  1.2855790 -1.2012216  0.447580116 -0.9715240 #> [1776,]  0.5065578  0.71681841 -1.8084467  0.6116105  0.038019606  0.5084290 #> [1777,]  0.7468289  1.21228862  0.8523438  0.7163911 -7.426274369  0.7300169 #> [1778,]  0.9959033  1.78975519 -0.8512534  0.8055023 -2.907852556 -1.0475857 #> [1779,]  1.2066703 -0.43088310  1.4550260 -1.1480803 -1.555871923  1.1415636 #> [1780,] -0.8003968 -0.41106717 -0.6611369  0.8834482 -1.389194563  1.1791707 #> [1781,]  0.7663197 -0.79661663 -1.1400229  0.7239489  0.146446453 -1.3373367 #> [1782,]  0.4335676  0.58069398  0.4649169  0.5740500  0.022902265  0.4398081 #> [1783,] -2.0518903  0.68028751  0.5296477  0.6020581  0.033522273  0.4904457 #> [1784,]  0.4525240  0.61532228  0.4876304  0.5841444  0.026328247  0.4577005 #> [1785,]  0.3091031  0.36731558  0.3188410 -1.9994524  0.007605875  0.3208667 #> [1786,]  0.7636474  1.24938756 -1.1444705  0.7229195  0.144789354 -1.3416971 #> [1787,]  0.8315682 -0.71320598  0.9608218  0.7484517  0.191111768 -1.2392856 #> [1788,]  0.4392145  0.59095450  0.4716713  0.5770839  0.023888352 -2.2464665 #> [1789,]  1.3478692 -0.37094483 -0.6075197  0.9111805 -1.084955699 -0.7901617 #> [1790,] -0.4928904 -0.21326389 -0.3851209  1.0763406 -0.286311991  1.8526031 #> [1791,] -0.3185142 -0.11810172 -0.2367207 -0.7776941 -0.069041594 -0.3593509 #> [1792,] -0.6620198  3.14532686 -0.5350646 -1.0477064 -0.748543670  1.4073210 #> [1793,] -0.2722616 -0.09550422 -0.1987383  1.3707199 -0.041411785 -0.3104705 #> [1794,]  0.4038874 -1.89555853  0.4295839  0.5577055  0.018178274  0.4116853 #> [1795,] -0.4983877 -0.21648972 -0.3899117 -0.9332810 -0.296846326  1.8335541 #> [1796,]  0.4176737  0.55206889  0.4459602  0.5653830  0.020278681  0.4247652 #> [1797,]  0.2337348  0.25162064  0.2334955  0.4463190  0.003060065  0.2472958 #> [1798,] -0.3444955 -0.13132607 -0.2583422  1.2454295 -0.089135560 -0.3865919 #> [1799,]  0.6457003 -1.00444138 -1.3798116 -1.4811192  0.083825273  0.6374544 #> [1800,] -0.3579574 -0.13831984 -0.2696197  1.2261334 -0.100991405 -0.4006508 #> [1801,]  0.2578867  0.28744196  0.2605435  0.4645594  0.004215532  0.2710266 #> [1802,] -0.6274895 -0.29569548  1.9839261  0.9755220 -0.628678370 -0.6759706 #> [1803,]  0.4294834  0.57330221  0.4600379 -1.7487375  0.022206892 -2.2938613 #> [1804,] -1.8067876 -1.23745165  0.6103345  0.6340785  0.050735420  0.5521701 #> [1805,] -2.1560798  0.63617531  0.5011991 -1.6948211  0.028527138 -2.1352749 #> [1806,]  0.5696396  0.84023523  0.6302446  0.6415608  0.055725770  0.5671890 #> [1807,] -2.2429839  0.60304292  0.4796025  0.5806114  0.025081408 -2.2153664 #> [1808,]  0.7219516  1.15795398 -1.2183862 -1.4152823  0.120586446 -1.4137657 #> [1809,] -0.5716444 -0.26064690 -0.4543108  1.0132734 -0.464040114  1.6135929 #> [1810,]  0.6930534 -0.91268825 -1.2751473 -1.4390304  0.105560752  0.6809108 #> [1811,]  1.0749917 -0.50383117 -0.7817467 -1.2034118  0.441106783 -0.9755811 #> [1812,]  0.2900229  0.33696539  0.2969824  0.4873234  0.006180239  0.3023704 #> [1813,]  0.8569900 -0.68472068 -1.0064215  0.7576890  0.210810021  0.8298799 #> [1814,]  0.4716920  0.65086250  0.5107086 -1.6832194  0.030138063  0.4757408 #> [1815,] -0.2325820 -0.07716606 -0.1667356 -0.6842026 -0.024789313 -0.2680848 #> [1816,] -0.3329929 -0.12542611 -0.2487458  1.2627778 -0.079800261 -0.3745495 #> [1817,] -0.3368453 -0.12739420 -0.2519556 -0.7956242 -0.082847291 -0.3785858 #> [1818,] -0.6481865 -0.30897327  1.9134458 -1.0387328 -0.698780774 -0.6967241 #> [1819,] -0.5225998 -0.23084629 -0.4110836  1.0509825 -0.346454704 -0.5700385 #> [1820,] -1.6386933  0.92230548  0.6805177 -1.5155897  0.069737785  0.6047726 #> [1821,]  1.4045393 -0.35083235 -0.5802613 -1.0792194  1.054036340 -0.7604116 #> [1822,] -0.7311245 -0.36366334  1.6731307  0.9166330 -1.034403609  1.2829551 #> [1823,]  0.4208591  0.55777536  0.4497528  0.5671354  0.020786843  0.4277830 #> [1824,] -0.2706726 -0.09475054 -0.1974459  1.3739920 -0.040629601 -0.3087816 #> [1825,] -0.8578230 -0.45148575 -0.7142227  0.8588615  0.574388122  1.1054400 #> [1826,] -1.5252868  1.01632474  0.7371509  0.6793688  0.088091255  0.6465702 #> [1827,]  0.2987342  0.35073726  0.3069424  0.4932336  0.006805738  0.3108250 #> [1828,]  1.2088477 -0.42983293  1.4579529  0.8716591  0.646512323 -0.8745211 #> [1829,]  1.2640084 -0.40464130 -0.6526142 -1.1265738  0.747662471  1.1920308 #> [1830,] -0.6324598 -0.29887017 -0.5085034  0.9723919 -0.645046388  1.4685179 #> [1831,] -0.5921774 -0.27339894 -0.4725372 -1.0011895 -0.520574110  1.5613941 #> [1832,]  1.8853303 -0.23552891 -0.4179383 -0.9572584 -0.363610851 -0.5779741 #> [1833,] -0.2341827 -0.07788574 -0.1680152 -0.6861167 -0.025349404 -0.2698036 #> [1834,] -0.5220119 -0.23049485 -0.4105681  1.0514645 -0.345186604  1.7561085 #> [1835,]  1.2307402 -0.41951652 -0.6723077  0.8780553 -1.458915406 -0.8600163 #> [1836,] -0.6328077 -0.29909272 -0.5088152 -1.0286224  1.547501231 -0.6813077 #> [1837,] -0.3545760 -0.13655423  3.7483737 -0.8124248 -0.097916572 -0.3971229 #> [1838,] -0.4418980 -0.18395901 -0.3409819 -0.8886496 -0.200600862  2.0510603 #> [1839,] -0.7063004 -0.34705139 -0.5751066 -1.0757059  1.081886143 -0.7547602 #> [1840,]  0.2578867  0.28744196  0.2605435  0.4645594  0.004215532  0.2710266 #> [1841,] -0.6529028 -0.31202014 -0.5268577  0.9598726  1.397661439 -0.7014470 #> [1842,] -0.4093194 -0.16584508 -0.3130823 -0.8613554 -0.156308612  2.2027819 #> [1843,]  0.2897113  0.33647555  0.2966269  0.4871101  0.006158638  0.3020677 #> [1844,] -0.2362800 -0.07883138 -0.1696933  1.4521941 -0.026096494 -0.2720546 #> [1845,]  0.6652431 -0.96471060  0.7492283  0.6834155  0.092376192  0.6554145 #> [1846,] -1.2603889 -0.76002971  0.9118037 -1.3619059  0.163991964 -1.2947425 #> [1847,] -0.5244710 -0.23196582  2.4229229 -0.9528770 -0.350512375  1.7484342 #> [1848,]  0.4648333 -1.56718780  0.5024381 -1.6932925  0.028733742  0.4692915 #> [1849,]  0.5215380  0.74566015 -1.7506433 -1.6157318  0.041806151  0.5224259 #> [1850,] -1.0277366 -0.57660153  1.1446806 -1.2532768  0.318807274  0.9341136 #> [1851,] -0.3527866 -0.13562229 -0.2652821 -0.8107522 -0.096315942 -0.3952550 #> [1852,] -1.4880518  1.05089833 -1.3197133  0.6862428  0.095477073  0.6616338 #> [1853,] -0.3261168 -0.12193333 -0.2430273 -0.7852027 -0.074556204 -0.3673372 #> [1854,] -0.5263714  4.28992692 -0.4143919  1.0479084 -0.354666714  1.7425513 #> [1855,]  0.7599635 -0.80564826 -1.1506560 -1.3860074  0.142526285 -1.3477567 #> [1856,] -1.2523739 -0.75349515 -1.0889562  0.7361757  0.167435783  0.7769595 #> [1857,] -0.8496619 -0.44568170  1.4151218  0.8622124 -1.687602694 -0.8965949 #> [1858,] -1.4601637 -0.92750856  0.7738893  0.6915519  0.101546714  0.6734017 #> [1859,] -0.1959449 -0.06118790 -0.1377374 -0.6380593 -0.014182564 -0.2285090 #> [1860,]  0.3645980  0.45930712  0.3832714 -1.8693902  0.013024505  0.3742384 #> [1861,] -0.7602784 -0.38342858 -0.6243071  0.9021489  0.851118536 -0.8083745 #> [1862,]  0.9510642 -0.59468527 -0.8961072  0.7905273  0.295971476  0.9144640 #> [1863,]  0.5211216 -1.34254411  0.5707103  0.6187133  0.041697517  0.5220372 #> [1864,]  0.9250522 -0.61743141 -0.9242391  0.7816475  0.270405503  0.8911356 #> [1865,]  0.7224573  1.15905192  0.8213986 -1.4148787  0.120861814  0.7077924 #> [1866,] -0.3517830 -0.13510032 -0.2644410 -0.8098119 -0.095426186  2.5367376 #> [1867,] -0.2826361 -0.10046292 -0.2071977 -0.7407422 -0.046777061 -0.3214805 #> [1868,]  0.2671704  0.30153637  0.2710194  0.4713004  0.004730297  0.2801073 #> [1869,] -0.2339281 -0.07777115 -0.1678116  1.4581239 -0.025259735 -0.2695303 #> [1870,] -1.0261305 -0.57538218  1.1466779  0.7984168  0.320435765 -1.0689745 #> [1871,]  1.0718792 -0.50581244 -0.7842774  0.8299898  0.436959742  1.0222643 #> [1872,] -0.3040301 -0.11089149 -0.2247537  1.3104623 -0.059328851 -0.3440995 #> [1873,] -0.3911184 -0.15594250  3.3601627 -0.8455428 -0.134781409 -0.4351316 #> [1874,] -0.3542390 -0.13637859 -0.2664997 -0.8121102 -0.097613719 -0.3967711 #> [1875,] -1.4587026  1.07961919 -1.2907332  0.6918340  0.101878448  0.6740302 #> [1876,] -0.2073873 -0.06607360 -0.1467323 -0.6529822 -0.017062829 -0.2409194 #> [1877,] -0.3587492 -0.13873413 -0.2702846  1.2250304 -0.101720959 -0.4014766 #> [1878,] -0.9601828 -0.52590646 -0.8098462 -1.2190428  0.397851488  0.9952112 #> [1879,] -0.2922390 -0.10511059 -0.2150597 -0.7508927 -0.052155955 -0.3316472 #> [1880,] -0.8912262 -0.47544434 -0.7452910  0.8456004  0.507176954  1.0667816 #> [1881,] -1.5007469 -0.96257166  0.7505990  0.6838722  0.092871005  0.6564168 #> [1882,] -1.0247880 -0.57436353  1.1483524 -1.2518109  0.321805252  0.9366179 #> [1883,]  1.0474424 -0.52185061 -0.8046994  0.8222292  0.405334292 -0.9994704 #> [1884,]  0.4987213  0.70184992  0.5434342  0.6077386  0.036136798  0.5010957 #> [1885,] -0.9081668 -0.48771776 -0.7610990 -1.1916973  0.477000744  1.0482265 #> [1886,]  0.7897939  1.30763686  0.9071780  0.7329016  0.161572296 -1.3002595 #> [1887,] -0.3683182 -0.14376637 -0.2783326 -0.8251065 -0.110828904  2.4304501 #> [1888,] -0.7690750 -0.38944567  1.5813677 -1.1136709 -1.219791489  1.2238603 #> [1889,] -0.3495702 -0.13395131 -0.2625875  1.2380329 -0.093484542 -0.3918959 #> [1890,] -0.4922199 -0.21287133 -0.3845370 -0.9285589 -0.285045197 -0.5390968 #> [1891,]  0.2569010  0.28595581  0.2594336  0.4638353  0.004163266  0.2700611 #> [1892,] -0.8783981 -0.46620509 -0.7333435  0.8506092  0.531706256  1.0812920 #> [1893,]  0.4004241  0.52143540  0.4254801  0.5557525  0.017675381  0.4083948 #> [1894,] -0.4888062 -0.21087551 -0.3815656  1.0799950 -0.278655414 -0.5356119 #> [1895,] -0.3379447 -0.12795730 -0.2528724  1.2552077 -0.083731395 -0.3797370 #> [1896,] -1.3440837  1.20608011  0.8487475  0.7152850  0.133003228 -1.3746821 #> [1897,]  0.7724643 -0.78805163 -1.1299194  0.7263079  0.150306580  0.7533405 #> [1898,]  0.2578867  0.28744196  0.2605435  0.4645594  0.004215532  0.2710266 #> [1899,]  0.5721525 -1.18307318 -1.5789198  0.6427122  0.056530606  0.5695202 #> [1900,]  0.4788943  0.66435030 -1.9252679  0.5977782  0.031663193  0.4825064 #> [1901,] -0.4151653 -0.16905916  3.1439573  1.1542740 -0.163699042 -0.4600103 #> [1902,]  0.8407493 -0.70268454 -1.0281152  0.7518068  0.198071611 -1.2266700 #> [1903,]  1.7450474 -0.26151497 -0.4555565 -0.9878885 -0.467768431 -0.6211552 #> [1904,]  0.8872642 -0.65328972 -0.9682203 -1.3012700  0.236052203 -1.1666352 #> [1905,] -0.3828334 -0.15148819 -0.2905864 -0.8382006 -0.125701032 -0.4265362 #> [1906,]  1.1934829 -0.43733993 -0.6957429 -1.1532309  0.620124785  1.1299337 #> [1907,] -0.4794847 -0.20545083  2.6776352 -0.9186965 -0.261713957 -0.5260878 #> [1908,]  1.1045188 -0.48568707 -0.7584884  0.8401936  0.481814896 -0.9512559 #> [1909,] -1.1188250 -0.64683709 -0.9603381  0.7707791  0.241759472 -1.1586899 #> [1910,]  0.9443795 -0.60039002 -0.9031803  0.7882592  0.289248177 -1.1007480 #> [1911,] -0.3785171 -0.14918100 -0.2869369 -0.8343381 -0.121142625 -0.4220532 #> [1912,]  1.1762517 -0.44603406 -0.7071130  0.8620073  0.591430507  1.1147243 #> [1913,] -0.3102798 -0.11398804 -0.2299094  1.2996454 -0.063394801 -0.3506862 #> [1914,]  1.1523221 -0.45861712 -0.7235000 -1.1698365  0.553126355  1.0935771 #> [1915,]  3.4406325 -0.10433495 -0.2137519 -0.7492209 -0.051234445 -0.3299604 #> [1916,]  1.0528315 -0.51823828 -0.8001094  0.8239499  0.412167679 -0.9947022 #> [1917,]  0.4531838  0.61653693 -2.0474059  0.5844911  0.026453506  0.4583224 #> [1918,]  0.4836927 -1.48505395  0.5252125  0.6002108  0.032708454  0.4870100 #> [1919,]  0.3836972  0.49217231  0.4057169  0.5461761  0.015381495  0.3924746 #> [1920,] -2.1897226 -1.60518384  0.4926235  0.5863232  0.027123929  0.4616153 #> [1921,] -0.7009361 -0.34348851 -0.5702401 -1.0723704  1.109092489  1.3343702 #> [1922,] -1.0290915 -0.57763067 -0.8748900  0.7974802  0.317441920 -1.0718487 #> [1923,] -0.2643020 -0.09174467 -0.1922730  1.3873874 -0.037596327 -0.3020039 #> [1924,]  0.4916942 -1.45243724  0.5349062 -1.6549832  0.034504293  0.4945132 #> [1925,] -0.4654547 -0.19735620  2.7677534  1.1017463 -0.237580775 -0.5117287 #> [1926,]  0.4960253  0.69671931 -1.8513010  0.6063981  0.035504275  0.4985710 #> [1927,] -0.3552787 -0.13692064 -0.2673717 -0.8130803 -0.098550111 -0.3978562 #> [1928,]  0.4709461  0.64946980 -1.9615208 -1.6843048  0.029983086  0.4750398 #> [1929,]  1.8512618 -0.24141473 -0.4265203 -0.9643956 -0.385865968 -0.5878795 #> [1930,]  0.3220500  0.38829295  0.3337623  0.5085666  0.008693633  0.3333728 #> [1931,]  0.9265773 -0.61605623 -0.9225435  0.7821722  0.271860536 -1.1204425 #> [1932,] -0.6247368 -0.29394108 -0.5015870  0.9772706 -0.619738459 -0.6732069 #> [1933,] -0.9436640 -0.51369748 -0.7943318  0.8261350  0.420990981  1.0114355 #> [1934,] -0.4575821 -0.19285159 -0.3544989  1.1094286 -0.224738319 -0.5036587 #> [1935,]  1.6611281 -0.27955542 -0.4812827 -1.0079217 -0.549235810  1.5376392 #> [1936,]  2.1575800 -0.19622502 -0.3595976  1.1036538 -0.234316587 -0.5097077 #> [1937,]  0.2868438  0.33197558  0.2933561  0.4851403  0.005962266  0.2992807 #> [1938,] -0.4546185 -0.19116288 -0.3519406  1.1123690 -0.220031084 -0.5006182 #> [1939,]  0.7049492  1.12119662  0.7992417 -1.4290888  0.111578510 -1.4455141 #> [1940,] -0.6871184 -0.33435539  1.7930005  0.9401073 -0.845013199 -0.7356413 #> [1941,] -0.3028180 -0.11029350 -0.2237551 -0.7618487 -0.058561746 -0.3428210 #> [1942,] -0.4614568  5.12648933 -0.3578465 -0.9044662 -0.230997291 -0.5076317 #> [1943,] -0.3051096 -0.11142476 -0.2256434 -0.7641920 -0.060017853 -0.3452379 #> [1944,] -0.2654050 -0.09226329 -0.1931676 -0.7220030 -0.038109873 -0.3031781 #> [1945,] -0.2362800 -0.07883138 -0.1696933  1.4521941 -0.026096494 -0.2720546 #> [1946,]  0.7082273  1.12825929 -1.2447326 -1.4263907  0.113277641 -1.4392785 #> [1947,] -0.7172073 -0.35432516 -0.5850145 -1.0824418  1.029202242 -0.7656155 #> [1948,]  0.2230610  0.23619446  0.2216418  0.4379014  0.002627849  0.2367557 #> [1949,]  0.5718394 -1.18394997  0.6329581 -1.5562533  0.056429899  0.5692298 #> [1950,]  0.2868438  0.33197558  0.2933561  0.4851403  0.005962266  0.2992807 #> [1951,]  0.7486169 -0.82222052  0.8546187  0.7170893  0.135710091 -1.3667824 #> [1952,]  0.6239408 -1.05214506  0.6975668  0.6658028  0.074967969  0.6174135 #> [1953,]  0.5771627 -1.16919373  0.6395293 -1.5503904  0.058159242  0.5741661 #> [1954,] -0.5368727 -0.23942099 -0.4236175  1.0395100 -0.378240749 -0.5845327 #> [1955,]  0.5465735  0.79451589 -1.6615009  0.6308489  0.048705188  0.5457573 #> [1956,] -1.0101114 -0.56325784 -0.8569231 -1.2444768  0.337288668  0.9492929 #> [1957,]  0.5694578 -1.19065721  0.6300204  0.6414774  0.055667854 -1.7636053 #> [1958,]  1.7860033 -0.25343089 -0.4439276 -0.9785971 -0.433720097  1.6450847 #> [1959,]  0.6324845  0.96809752  0.7082221  0.6695015  0.078364136 -1.5992629 #> [1960,] -0.7558749 -0.38042574 -0.6202780 -1.1058447  0.867377668 -0.8040106 #> [1961,] -0.3360362 -0.12698020 -0.2512811 -0.7948452 -0.082200779 -0.3777383 #> [1962,] -0.3137989 -0.11574142 -0.2328178  1.2936886 -0.065767224 -0.3543911 #> [1963,]  0.3746490 -2.09850959  0.3950671  0.5408925  0.014231012  0.3838432 #> [1964,]  0.7226602 -0.86244623 -1.2170547 -1.4147169  0.120972434  0.7079777 #> [1965,]  1.1569439 -0.45613902  1.3883506  0.8562153 -1.784482933  1.0976638 #> [1966,]  0.6758676  1.05905134 -1.3113411 -1.4538249  0.097269576 -1.5033901 #> [1967,]  0.8807822 -0.65980569 -0.9761660  0.7661882  0.230480532 -1.1746337 #> [1968,] -0.2365346 -0.07894638 -0.1698971 -0.6889154 -0.026188217 -0.2723278 #> [1969,] -0.1689574 -0.05006751 -0.1167661 -0.6006834 -0.008751863 -0.1990364 #> [1970,]  0.9976441 -0.55741637  1.1770274  0.8060755  0.345858577 -1.0458822 #> [1971,] -0.4588703 -0.19358680 -0.3556115  1.1081589 -0.226805923 -0.5049798 #> [1972,] -0.4173185 -0.17024701 -0.3199097 -0.8681729 -0.166481001  2.1634111 #> [1973,] -1.3772484 -0.85694399 -1.2106569  0.7082180  0.122850322  0.7111041 #> [1974,]  1.3693272  2.75407203 -0.5969177 -1.0904391 -1.030542459 -0.7786171 #> [1975,]  0.5777719 -1.16752531 -1.5618122 -1.5497243  0.058359474  0.5747309 #> [1976,] -1.5800750  0.96891979  0.7087174  0.6696726  0.078524427  0.6256536 #> [1977,] -0.2510851 -0.08559031 -0.1815869 -0.7058734 -0.031810152 -0.2879064 #> [1978,] -0.5613493 -0.25431347 -0.4452003 -0.9796215  2.286423396 -0.6093280 #> [1979,] -1.1259944 -0.65245376 -0.9671999 -1.3007686  0.236780774  0.8579219 #> [1980,]  0.2671704  0.30153637  0.2710194  0.4713004  0.004730297  0.2801073 #> [1981,] -0.1974230 -0.06181349 -0.1388960 -0.6400155 -0.014534070 -0.2301148 #> [1982,]  2.4642680 -0.16391792 -0.3100833  1.1650519 -0.151972734 -0.4503330 #> [1983,]  1.8563332 -0.24052247 -0.4252217 -0.9633215 -0.382442459 -0.5863828 #> [1984,]  0.6974180 -0.90496570  0.7897300  0.6966917  0.107741829  0.6849058 #> [1985,]  0.2337348  0.25162064  0.2334955  0.4463190  0.003060065  0.2472958 #> [1986,] -0.6935381 -0.33859063 -0.5635356  0.9365528  1.148099582 -0.7420439 #> [1987,] -0.3933506 -0.15714840 -0.2994985 -0.8475053 -0.137303551 -0.4374453 #> [1988,] -0.3378967 -0.12793275  3.9551894  1.2552802 -0.083692728 -0.3796869 #> [1989,] -0.2446346 -0.08262764 -0.1763947  1.4317838 -0.029224277 -0.2810079 #> [1990,]  0.6326222 -1.03264953 -1.4116439 -1.4935161  0.078419719  0.6254149 #> [1991,] -0.4183924 -0.17084026 -0.3208275  1.1506391 -0.167880666  2.1582362 #> [1992,] -0.5597013 -0.25330345 -0.4437437 -0.9784490 -0.433195344 -0.6076610 #> [1993,] -0.7193849 -0.35578213 -0.5869947 -1.0837793  1.019087517 -0.7677815 #> [1994,] -0.7926034 -0.40565889  1.5291329  0.8869765 -1.345611614  1.1899714 #> [1995,]  0.3796562  0.48516937  0.4009569  0.5438256  0.014860013  0.3886215 #> [1996,]  0.3117234  0.37153649  0.3218552 -1.9925890  0.007817934  0.3234006 #> [1997,]  0.2671704  0.30153637  0.2710194  0.4713004  0.004730297  0.2801073 #> [1998,] -0.1974230 -0.06181349 -0.1388960 -0.6400155 -0.014534070 -0.2301148 #> [1999,] -0.7521721 -0.37790544 -0.6168920  0.9060968  0.881365459  1.2494693 #> [2000,]  0.5230867 -1.33572203 -1.7448669  0.6196626  0.042211925  0.5238713 #>            Item_13    Item_14     Item_15    Item_16    Item_17     Item_18 #>    [1,] -1.2105171  0.9940128  1.29028981  1.0612213  1.1048953  0.75454380 #>    [2,] -1.1117834 -0.9801479 -0.43547830 -0.8057476 -0.7683858 -0.84870655 #>    [3,] -1.3241663 -1.0340543  0.70250524 -1.1114956 -1.0756398 -2.12060246 #>    [4,] -1.2454175 -1.0148187  1.06427749  1.0071428 -0.9559406 -1.53807272 #>    [5,] -0.8953603  1.0901930 -0.10045059 -0.5409827 -0.5065990 -0.27305050 #>    [6,]  0.9369939 -0.9679511 -0.33011162 -0.7473490 -0.7102512 -0.68508087 #>    [7,]  0.8589431 -0.9940803 -0.59507767 -0.8770623  1.1909885 -1.08044766 #>    [8,]  0.6831928 -1.0662766  0.35631582  0.7482030 -1.3043544  0.27899834 #>    [9,]  0.9299860  1.0307375 -0.34733615  1.3197054 -0.7205853 -0.71255819 #>   [10,]  0.7372569  0.9599746 -1.67522685  0.8607629  0.8876615 -2.40513631 #>   [11,]  0.8168771  0.9906033 -0.83622545 -0.9619663  1.0812993  0.71147869 #>   [12,] -1.1429194  1.0116603 -0.52509404  1.1795805  1.2340689  1.01954687 #>   [13,]  0.8037844 -1.0144935  1.07185061 -0.9909975  1.0481988  0.65373839 #>   [14,] -0.6923898 -0.8478205 -0.01760063 -0.3370820 -0.3089130 -0.07102398 #>   [15,]  0.6491401  0.9232722  0.25199647  0.6810189 -1.4392011  0.21344537 #>   [16,]  0.5382323 -1.1470702  0.07081259  0.4824232  0.4845195  0.07999362 #>   [17,] -1.0464367 -0.9621324 -0.28888932 -0.7207583  1.4623127 -0.61794970 #>   [18,] -0.8007377 -0.8864226 -0.04713108 -0.4404758 -0.4086274 -0.15210634 #>   [19,] -1.2227900 -1.0091360  1.20505222  1.0417041 -0.9228020 -1.39721762 #>   [20,] -1.1353027  1.0137341 -0.50183692 -0.8373919 -0.7999686  1.05589016 #>   [21,] -1.8002224  0.8802519  0.08769152  0.5112648  0.5148494  0.09437156 #>   [22,]  0.9340479  1.0321142 -0.33723028 -0.7516923  1.3994473 -0.69647536 #>   [23,] -1.1330492 -0.9858519 -0.49512647  1.1985583 -0.7969159 -0.93726199 #>   [24,] -1.0807414 -0.9716842 -0.35945402 -0.7648356 -0.7276377 -0.73170379 #>   [25,] -1.0692295 -0.9685026 -0.33429749 -0.7499111 -0.7127974 -0.69178766 #>   [26,] -1.1240092 -0.9834363 -0.46897136 -0.8221275 -0.7847270  1.11265948 #>   [27,]  1.3014361  1.1424710 -0.03564049 -0.4082810 -0.3774502 -0.12255007 #>   [28,]  0.6706627  0.9325413  0.31431781  0.7231464  0.7398365  0.25321564 #>   [29,] -1.1306534  1.0150089 -0.48807668 -0.8310923  1.2599587  1.07883323 #>   [30,]  0.5302194  0.8677908  0.06397001  0.4692899  0.4707355  0.07394905 #>   [31,]  0.7445321  0.9628659 -1.56740281  0.8764578 -1.1054697  0.43772289 #>   [32,]  0.9883714  1.0501387 -0.22992706  1.4761740 -0.6409189 -0.51796550 #>   [33,] -1.3687445 -1.0445934 -1.78145934  0.8465081  0.8722959  0.39647438 #>   [34,]  0.9907786  1.0509213 -0.22616869  1.4827966 -0.6379260 -0.51140723 #>   [35,]  1.1412626  1.0974308 -0.08677178 -0.5198960 -0.4859695 -0.24383163 #>   [36,]  0.7058005 -1.0556982  0.44424910 -1.2588187  0.8162245  0.33087492 #>   [37,]  0.9657718  1.0427258  3.71834090  1.4146597 -0.6700893 -0.58468607 #>   [38,] -1.1059796 -0.9785780 -0.42030664 -0.7980245  1.3146023 -0.82575395 #>   [39,] -1.1404013  1.0123439  1.93309394 -0.8443251  1.2393176 -0.96956059 #>   [40,] -0.9523759 -0.9347760  6.55242918 -0.6060647 -0.5704957 -0.37729756 #>   [41,]  1.1060196  1.0869387 -0.10731850  1.8155806 -0.5162042 -0.28737555 #>   [42,] -1.0963686 -0.9759658 -0.39617307  1.2733826  1.3368664  1.26766682 #>   [43,] -1.7148725 -1.1192645  0.12186374  0.5590655  0.5652875  0.12171355 #>   [44,]  1.2365600  1.1247187 -0.05039684 -0.4485643 -0.4164769 -0.16019287 #>   [45,] -1.2940510  0.9739048 -1.21803360 -1.0654242  0.9717572  0.53195748 #>   [46,] -1.3797244  0.9549706 -1.88055209 -1.1988205  0.8589879  0.38022313 #>   [47,]  0.6839979 -1.0658920  0.35917043  0.7498263  0.7684022  0.28072493 #>   [48,]  0.8813590  1.0139232 -0.49977020 -0.8364538  1.2515150 -0.94405122 #>   [49,] -1.2992904  0.9727004  0.79882484 -1.0733756 -1.0370957  0.52081643 #>   [50,]  0.8967397  1.0193097 -0.44449322 -0.8102441 -0.7728703 -0.86225877 #>   [51,]  0.9670657 -0.9586318 -0.26650855 -0.7051443  1.4961881 -0.58059964 #>   [52,]  0.7655544 -1.0297475 -1.29792992  0.9225361  0.9543804  0.50645851 #>   [53,]  0.6656470  0.9303999  0.29873143 -1.4020806  0.7292268  0.24345174 #>   [54,]  0.7425533  0.9620814  0.62659783  0.8721762  0.8999725  0.43166320 #>   [55,] -1.8002224  0.8802519  0.08769152  0.5112648  0.5148494  0.09437156 #>   [56,] -1.2541727  0.9832858  1.01494462  0.9942432 -0.9689134  0.62673842 #>   [57,]  1.1592570  1.1027013 -0.07804541 -0.5051429 -0.4715588 -0.22464695 #>   [58,]  1.1417521  1.0975749 -0.08652005 -0.5194859 -0.4855686 -0.24328453 #>   [59,]  1.1855300 -0.9006611 -0.06705116 -0.4847350 -0.4516566 -0.19976411 #>   [60,] -0.9839438 -0.9441581 -0.19034712 -0.6435451 -0.6074384  2.23425237 #>   [61,]  1.0425527  1.0674438 -0.16016110 -0.6140612 -0.5783689 -0.39164175 #>   [62,] -1.1663606 -0.9946393 -0.60252504  1.1363248 -0.8426097  0.91668490 #>   [63,] -0.8432937 -0.9005921 -0.06693764 -0.4845119 -0.4514393 -0.19950257 #>   [64,]  0.7986081  0.9837651  1.02594513 -1.0028496  1.0352487  0.63198402 #>   [65,] -0.9774796 -0.9422541 -0.18203374 -0.6357867  1.6672696 -0.43238714 #>   [66,]  0.5382323 -1.1470702  0.07081259  0.4824232  0.4845195  0.07999362 #>   [67,]  0.7373556  0.9600140 -1.67370732  0.8609751  0.8878903  0.41606867 #>   [68,] -1.3585297  0.9595090  0.59056154  0.8582574 -1.1299947  0.41234092 #>   [69,] -1.4899592 -1.0720955  0.31589803 -1.3809636  0.7408910  0.25419934 #>   [70,]  0.6262128 -1.0950978  0.19751061  0.6374151  0.6483801  0.17680036 #>   [71,]  1.1155482 -0.9176012 -0.10125905 -0.5421619  1.9694592 -0.27474807 #>   [72,]  1.0997699 -0.9216131 -0.11151884 -0.5565614 -0.5218635 -0.29603375 #>   [73,]  0.6298331  0.9147740  0.20537722 -1.5522824  0.6556120  0.18222057 #>   [74,]  0.9927534 -0.9509659 -0.22313813 -0.6719348  1.5735973 -0.50610094 #>   [75,] -1.1050348  1.0221584 -0.41787988 -0.7967704 -0.7594364 -0.82206532 #>   [76,] -0.9556343  1.0686566 -0.15618791 -0.6098858 -0.5742574 -0.38410863 #>   [77,]  1.0095375 -0.9460957 -0.19917898 -0.6515217 -0.6153134 -0.46355031 #>   [78,] -1.0842883 -0.9726597 -0.36752273 -0.7694610  1.3656732  1.34341675 #>   [79,]  0.7611759  0.9694075 -1.34936125  0.9128502  0.9439051  0.49146799 #>   [80,]  1.0177600  1.0596046 -0.18852775 -0.6418686 -0.6057838 -0.44426582 #>   [81,]  0.9836577  1.0486023 -0.23749610  1.4632451  1.5459732 -0.53110016 #>   [82,]  0.5618605  0.8833329  0.09473842  0.5221114  0.5262764  0.10018323 #>   [83,]  0.9752859  1.0458610 -0.25165537 -0.6942465 -0.6575680 -0.55541963 #>   [84,]  0.9236551 -0.9722108 -0.36378849  1.3032209 -0.7301189 -0.73851629 #>   [85,] -1.0949042 -0.9755664 -0.39260162  1.2765185  1.3403091  1.27657361 #>   [86,]  0.7001936 -1.0582801  0.42088013  0.7828215 -1.2441004  0.31733590 #>   [87,]  0.9148399 -0.9750703 -0.38820921 -0.7809905  1.3445987 -0.77656225 #>   [88,]  0.9151575 -0.9749667 -0.38729734 -0.7804919  1.3454970 -0.77515157 #>   [89,]  0.9678134  1.0434004 -0.26511677  1.4201677 -0.6673720  1.72934393 #>   [90,] -1.1212795  1.0176002  2.16774447 -0.8184572  1.2803046 -0.88737301 #>   [91,] -1.1898328  0.9992733  1.45010398 -0.9128943 -0.8755410 -1.21089667 #>   [92,] -1.0475443  1.0390213 -0.29096741 -0.7221628 -0.6852417  1.60931156 #>   [93,] -1.2764129 -1.0224878  0.90099403  0.9625984  0.9977603 -1.74945153 #>   [94,] -0.7021704  1.1744389 -0.01935536 -0.3458959 -0.3173642 -0.07643914 #>   [95,]  0.8853924 -0.9848898 -0.48454678  1.2056103 -0.7920424  1.08490468 #>   [96,] -0.7410679 -0.8656468 -0.02788972 -0.3819738 -0.3520572 -0.10138468 #>   [97,]  0.8848114 -0.9850878 -0.48670659 -0.8304580  1.2609650  1.08118052 #>   [98,] -0.9808805  1.0601566 -0.18636813 -0.6398632  1.6561641 -0.44032595 #>   [99,]  1.0916068 -0.9237183 -0.11729242 -0.5642442  1.8889359 -0.30781532 #>  [100,] -0.8993847  1.0886967 -0.10354953  1.8332960 -0.5109894 -0.27954089 #>  [101,] -0.8310558  1.1153629 -0.06062578 -0.4716523  2.2783298 -0.18479596 #>  [102,]  0.6558698 -1.0796885  0.27023480 -1.4407828  0.7087567  0.22529405 #>  [103,] -0.7024932  1.1742736 -0.01941572 -0.3461886 -0.3176449 -0.07662336 #>  [104,]  0.9816954 -0.9542338 -0.24073104  1.4578782 -0.6493319  1.86329136 #>  [105,] -0.7908992 -0.8830728 -0.04334417  2.3225120 -0.3990215 -0.14256808 #>  [106,]  1.1243829  1.0924341 -0.09598929 -0.5343487 -0.5001047 -0.26362631 #>  [107,]  0.5302194  0.8677908  0.06397001  0.4692899  0.4707355  0.07394905 #>  [108,]  0.9792525 -0.9549622 -0.24482925 -0.6890805  1.5326789  1.83913055 #>  [109,] -0.8218966 -0.8935313 -0.05624044 -0.4621313 -0.4296575 -0.17437361 #>  [110,]  1.2611446 -0.8837668 -0.04410400 -0.4326054 -0.4009958 -0.14449658 #>  [111,]  0.8823006  1.0142548 -0.49616797 -0.8348120  1.2540889 -0.93878594 #>  [112,] -1.1212371 -0.9826929 -0.46119070  1.2218960 -0.7810072  1.12714527 #>  [113,] -1.1082067  1.0212615 -0.42607415 -0.8009840 -0.7636364 -0.83450117 #>  [114,]  1.1096354  1.0880257 -0.10497143 -0.5474899  1.9494223 -0.28250410 #>  [115,] -0.7402472  1.1555977 -0.02768112 -0.3811957 -0.3513073 -0.10079788 #>  [116,] -1.0059878  1.0519821 -0.22117685 -0.6703256 -0.6338953 -0.50265818 #>  [117,] -1.6253921  0.9082282  0.17520913  0.6170066 -1.5956886  0.16115832 #>  [118,]  1.1449170  1.0985058 -0.08491253 -0.5168465  2.0704397 -0.23978230 #>  [119,] -0.6586451 -0.8349460 -0.01254622 -0.3074720 -0.2805971 -0.05466868 #>  [120,] -1.7770868 -1.1315470  0.09572318  0.5235799  0.5278242  0.10098741 #>  [121,]  0.7712948 -1.0273943 -1.23387299  0.9353054 -1.0328467  0.52666998 #>  [122,] -1.1414421 -0.9880826 -0.52051288  1.1823912  1.2371439  1.02647776 #>  [123,]  0.6903040  0.9408219  0.38221132 -1.3113095  0.7820915 -3.39501238 #>  [124,] -1.4005763  0.9505937  0.48037290  0.8114435  0.8345496  0.35149098 #>  [125,]  1.0257943  1.0621594 -0.17874695  1.5806578 -0.5966873  2.34555416 #>  [126,] -1.5868904  0.9149208  0.20610763 -1.5507863 -1.5237552  0.18272142 #>  [127,] -1.1000818 -0.9769769 -0.40535307 -0.7902111 -0.7529002 -0.80294663 #>  [128,]  1.1294216  1.0939310 -0.09312506 -0.5299702  2.0168587 -0.25752351 #>  [129,]  0.9134974  1.0251059 -0.39209107  1.2769697  1.3408045 -0.78255919 #>  [130,]  0.7729802 -1.0267077 -1.21575950  0.9390698 -1.0285177  0.53272664 #>  [131,]  0.5895521 -1.1155185  0.13124533  0.5704412  0.5773205  0.12889675 #>  [132,]  0.7364234  0.9596421  0.59237686  0.8589731 -1.1290101 -2.41942966 #>  [133,]  0.7911572 -1.0194251 -1.03862056 -1.0202977  1.0167438 -1.66195209 #>  [134,]  0.8340827 -1.0030622 -0.72609324  1.0801843 -0.8884557 -1.26014162 #>  [135,] -1.0061670  1.0519247 -0.22144387  1.4913236 -0.6341125  1.98756853 #>  [136,]  0.8545617 -0.9956384  1.62322597  1.1294906  1.1793265  0.90107767 #>  [137,]  0.6253308 -1.0955706  0.19563360  0.6357641 -1.5464935  0.17549990 #>  [138,]  0.5545662  0.8798049  0.08671151  0.5097065  0.5132088  0.09355509 #>  [139,]  0.6040127  0.9031216  0.15466224  0.5964532  0.6048764  0.14634190 #>  [140,]  0.7491776 -1.0365897  0.66545931  0.8865473  0.9154846  0.45221998 #>  [141,]  1.1061838 -0.9199732 -0.10721060  1.8160768 -0.5160567 -0.28715212 #>  [142,] -1.4120277  0.9482260  0.45458858  0.7993752  0.8215754  0.33681332 #>  [143,]  0.8335029  0.9967349  1.37076038 -0.9269533 -0.8896452 -1.26474011 #>  [144,] -0.7866104 -0.8816035 -0.04177646 -0.4262816 -0.3948685 -0.13856463 #>  [145,] -1.2784968 -1.0229988  0.89109116  0.9597133 -1.0053956 -1.76446447 #>  [146,]  0.8435992  1.0004171 -0.67237395  1.1029719  1.1503891  0.84215094 #>  [147,] -1.5706407  0.9178094  0.22099356  0.6571639  0.6694005  0.19284353 #>  [148,] -0.8747329 -0.9107445 -0.08577726 -0.5182708 -0.4843811 -0.24166811 #>  [149,] -1.0489470 -0.9628387 -0.29361738 -0.7239433  1.4555863  1.59807025 #>  [150,] -1.0585191 -0.9655211 -0.31225590  1.3584254  1.4303648  1.52380758 #>  [151,]  0.9022994 -0.9792008 -0.42626400 -0.8010809 -0.7637330  1.19790801 #>  [152,]  0.8162105  0.9903557  1.18925287 -0.9634127  1.0796019 -1.41154767 #>  [153,] -0.9918313 -0.9464696 -0.20092742  1.5312292 -0.6168426 -0.46669330 #>  [154,]  0.7033793  0.9462440 -2.30401059 -1.2668039  0.8108454  0.32497234 #>  [155,] -0.8341678  1.1140869 -0.06218062 -0.4749075 -0.4420861 -0.18844971 #>  [156,] -1.0137017  1.0495240 -0.23292480 -0.6798144  1.5545303 -0.52317909 #>  [157,]  0.6388623  0.9187705  0.22616981 -1.5121515  0.6738166  0.19632663 #>  [158,] -0.9139889  1.0833393 -0.11548969 -0.5618755 -0.5270749 -0.30415110 #>  [159,]  0.8930247  1.0180146 -0.45717266  1.2248035 -0.7790687 -0.88121498 #>  [160,]  1.0407688 -0.9373089 -0.16203025 -0.6159994 -0.5802780  2.53055051 #>  [161,]  0.7940195 -1.0182983  0.98666344 -1.0135399 -0.9767212  0.61319284 #>  [162,]  0.5548047  0.8799207  0.08696441  0.5101099  0.5136334  0.09376599 #>  [163,] -1.6293594  0.9075504  0.17233903 -1.6280151  0.6237559  0.15911340 #>  [164,] -1.0558849  1.0365008 -0.30702882  1.3646682 -0.6957785 -0.64774106 #>  [165,] -0.7024932  1.1742736 -0.01941572 -0.3461886 -0.3176449 -0.07662336 #>  [166,] -1.6441923 -1.1049295  0.16207596  0.6040866  0.6129735  0.15173662 #>  [167,]  0.7510328 -1.0358048 -1.47775016 -1.1228493 -1.0871316  0.45811701 #>  [168,]  0.8616258 -0.9931314  1.71633404 -0.8720439  1.1981562 -1.06294212 #>  [169,] -1.0593953  1.0354478 -0.31401128  1.3563587 -0.7002363 -0.65910136 #>  [170,]  0.8402002 -1.0008198 -0.69101966  1.0948079 -0.8760504  0.82452751 #>  [171,] -1.0592892  1.0354795 -0.31379831  1.3566086 -0.7001014 -0.65875572 #>  [172,]  0.8426400  1.0000685 -0.67757671  1.1006651  1.1478734  0.83714697 #>  [173,]  0.9888667 -0.9521091 -0.22914789 -0.6768026  1.5617646 -0.51660789 #>  [174,] -0.6907221 -0.8471945 -0.01731539 -0.3355894 -0.3074828 -0.07013240 #>  [175,] -1.6788760  0.8992675  0.14070037 -1.7202185  0.5888398  0.13601920 #>  [176,]  0.5536027  0.8793364  0.08569583  0.5080780  0.5114943  0.09270670 #>  [177,] -0.9974362 -0.9481044 -0.20874691  1.5154332 -0.6235674 -0.48067468 #>  [178,] -0.8626144  1.1027041 -0.07804104 -0.5051352 -0.4715514 -0.22463724 #>  [179,]  0.7582592 -1.0327715 -1.38491999 -1.1032366 -1.0672837  0.48168294 #>  [180,] -1.2446779 -1.0146341  1.06856907  1.0082442  1.0472864  0.65219040 #>  [181,] -0.8697210  1.0999367 -0.08250206 -0.5128196 -0.4790550 -0.23450236 #>  [182,]  0.8822133  1.0142241 -0.49650052 -0.8349639  1.2538502  1.06465390 #>  [183,]  1.0542181  1.0710876 -0.14853080  1.6621906 -0.5661174 -0.36946668 #>  [184,] -1.0281642  1.0449805 -0.25638851  1.4331392  1.5127288 -0.56347923 #>  [185,]  1.2141282 -0.8941101 -0.05705188 -0.4639328 -0.4314091 -0.17631562 #>  [186,]  0.5548047  0.8799207  0.08696441  0.5101099  0.5136334  0.09376599 #>  [187,] -1.1182228  1.0184513  2.20821046 -0.8143561 -0.7769721 -0.87477406 #>  [188,]  1.3330387 -0.8688877 -0.03029335  2.5598532 -0.3604208 -0.10807648 #>  [189,]  0.8794525  1.0132510 -0.50715661 -0.8397936  1.2463111 -0.95482094 #>  [190,]  0.7453064  0.9631725  0.64250713  0.8781359  0.9064040  0.44011283 #>  [191,]  1.0963916 -0.9224819 -0.11386773  1.7866037  1.9048999 -0.30084321 #>  [192,]  1.4422996 -0.8481756 -0.01776444 -0.3379312 -0.3097268 -0.07153452 #>  [193,] -0.9863511  1.0583523 -0.19352470 -0.6464454  1.6385349  2.20583556 #>  [194,]  0.6995654  0.9446697  0.41832876 -1.2795418  0.8024068  0.31584755 #>  [195,] -1.1619240 -0.9934791  1.70309384 -0.8738800 -0.8364534  0.93516891 #>  [196,]  0.9708885 -0.9574742 -0.25947943 -0.7000437  1.5075891 -0.56872424 #>  [197,] -1.4869882  0.9333231  0.32019892  0.7267966  0.7437419  0.25687105 #>  [198,]  1.2991724  1.1418620 -0.03606334 -0.4095910 -0.3787166 -0.12367273 #>  [199,]  0.6828882 -1.0664222  0.35524086 -1.3376329 -1.3054741  0.27834734 #>  [200,] -1.0477859  1.0389479 -0.29142232 -0.7224693  1.4586917 -0.62213472 #>  [201,] -1.4481985 -1.0628019  0.38299629 -1.3105790 -1.2778779  0.29501734 #>  [202,]  0.6065729  0.9042922  0.15915841  0.6011136  0.6098193  0.14962044 #>  [203,] -1.0831577 -0.9723490 -0.36493408  1.3021085 -0.7307711 -0.74031373 #>  [204,]  1.0976946 -0.9221464 -0.11295513  1.7905127  1.9092583 -0.29897731 #>  [205,]  0.6569381 -1.0791505  0.27323106 -1.4364743  0.7109797  0.22722297 #>  [206,]  1.3803614 -0.8596543 -0.02391683 -0.3663587 -0.3370223 -0.09002665 #>  [207,] -0.9113016  1.0843167 -0.11320853 -0.5588393 -0.5240971 -0.29949576 #>  [208,]  1.0402917  1.0667343 -0.16253436  1.6220092 -0.5807901 -0.39612117 #>  [209,]  0.9166637 -0.9744758 -0.38300614 -0.7781336 -0.7408717  1.30123137 #>  [210,]  0.6648538 -1.0751992  0.29632786 -1.4051603  0.7275557  0.24193589 #>  [211,]  0.8718283  1.0105527 -0.53797461 -0.8533574  1.2256045 -0.99937870 #>  [212,]  0.8138943 -1.0106174  1.16657529  1.0325632 -0.9313460 -1.43271658 #>  [213,] -1.1729650 -0.9963608 -0.62602111 -0.8892214  1.1739649 -1.12363467 #>  [214,]  1.0350799 -0.9388836 -0.16816040  1.6070871  1.7052325 -0.40668134 #>  [215,] -1.1440895  1.0113433 -0.52874687 -0.8493567 -0.8119245  1.01409682 #>  [216,]  0.5545662  0.8798049  0.08671151  0.5097065  0.5132088  0.09355509 #>  [217,]  1.1846444 -0.9008672 -0.06739150 -0.4854020  2.2108903 -0.20054763 #>  [218,]  0.6675035 -1.0738903  0.30442171  0.7168904  0.7331452  0.24702944 #>  [219,]  0.8729861 -0.9891554 -0.53315917  1.1747072  1.2287382 -0.99245535 #>  [220,] -1.0495864 -0.9630184 -0.29483197 -0.7247554 -0.6878143 -0.62775512 #>  [221,]  0.7596757 -1.0321814  0.73125140 -1.0994543  0.9403287  0.48641504 #>  [222,]  0.8946595 -0.9817541 -0.45154242 -0.8137142  1.2881092 -0.87281249 #>  [223,] -1.1297851 -0.9849812  2.05955099 -0.8299181  1.2618226  1.08318373 #>  [224,] -1.4330636 -1.0593878  0.41125112  0.7779161 -1.2523048  0.31170797 #>  [225,]  0.5302194  0.8677908  0.06397001  0.4692899  0.4707355  0.07394905 #>  [226,] -1.1418233  1.0119576  1.91684118  1.1816650 -0.8088328 -0.97591053 #>  [227,]  1.0265552  1.0624006 -0.17785130 -0.6317854 -0.5958366 -0.42468587 #>  [228,]  1.2474654  1.1277473 -0.04748623 -0.4413749 -0.4094996 -0.15299178 #>  [229,]  0.8854127 -0.9848829 -0.48447153 -0.8294205 -0.7920075 -0.92162928 #>  [230,] -0.7703592 -0.8759850 -0.03626649 -0.4102164 -0.3793213 -0.12421102 #>  [231,] -0.9365158  1.0752912 -0.13620236 -0.5876222 -0.5523557 -0.34552523 #>  [232,]  0.6849734  0.9385909  0.36265516  0.7517953  0.7705122  0.28282844 #>  [233,] -0.9172662 -0.9240842 -0.11832457 -0.5655885 -0.5307175 -0.30990751 #>  [234,] -1.7343962  0.8903517  0.11286639  0.5475397  0.5531070  0.11470571 #>  [235,] -1.1755557  1.0029746 -0.63544907 -0.8928389 -0.8554381 -1.13669596 #>  [236,]  0.6344642 -1.0907163  0.21582820 -1.5314967 -1.5039420  0.18934925 #>  [237,] -0.7022172 -0.8514878 -0.01936411 -0.3459384 -0.3174049 -0.07646584 #>  [238,] -1.3131700  0.9695401 -1.34528346  0.9136009 -1.0585182  0.49261940 #>  [239,] -0.9273087  1.0785497 -0.12738378  1.7329956 -0.5419543 -0.32809799 #>  [240,]  0.6534607 -1.0809060  0.26358066  0.6893831  0.7037559  0.22099281 #>  [241,] -1.3293954  0.9659006  0.68399483 -1.1195860 -1.0838281  0.46192831 #>  [242,] -0.9327989 -0.9288487 -0.13258166 -0.5833378 -0.5481453 -0.33840195 #>  [243,] -1.7123169  0.8938520  0.12310130  0.5606018  0.5669119  0.12266811 #>  [244,]  1.1334542 -0.9131371 11.00070979 -0.5265057 -0.4924318 -0.25276010 #>  [245,] -1.0466052 -0.9621799 -0.28920474 -0.7209719 -0.6840602 -0.61847130 #>  [246,] -0.8811369 -0.9127814 -0.09012292 -0.5252743  2.0357162 -0.25108094 #>  [247,] -0.8971650 -0.9178346 -0.10183039 -0.5429910 -0.5085656  3.62389924 #>  [248,] -1.5174677  0.9275414  0.27907307 -1.4282440  0.7152644  0.23097019 #>  [249,]  0.7603858  0.9690992  0.73589515  0.9111073 -1.0615477  0.48880157 #>  [250,]  0.6414970 -1.0870402  0.23256493  0.6663367  0.6791738  0.20060506 #>  [251,]  0.9709348 -0.9574602 -0.25939562  1.4286076  1.5077274 -0.56858221 #>  [252,] -1.1214999  1.0175389 -0.46192364 -0.8187533 -0.7813595  1.12576226 #>  [253,] -1.2774141 -1.0227334  0.89622063  0.9612106 -1.0037579  0.56926492 #>  [254,]  1.0671586  1.0750971 -0.13674726 -0.5882598 -0.5529824 -0.34659350 #>  [255,] -1.7148725 -1.1192645  0.12186374  0.5590655  0.5652875  0.12171355 #>  [256,]  0.8622848  1.0071519 -0.57962686 -0.8708179 -0.8333888  0.94456043 #>  [257,] -1.3048701 -1.0294159  0.77596575  0.9243227  0.9563132 -1.96365019 #>  [258,]  0.7227600  0.9541538 -1.91649352  0.8298751  0.8543817  0.37469820 #>  [259,]  0.9447161 -0.9655211 -0.31225573  1.3584256 -0.6991222 -0.65625057 #>  [260,] -0.9387158  1.0745188 -0.13838489 -0.5901649 -0.5548552 -0.34979829 #>  [261,]  0.7256691 -1.0467606  0.53618195  0.8360321  0.8610111 -2.61324408 #>  [262,] -0.9336979 -0.9291228 -0.13344981 -0.5843728 -0.5491623 -0.34011391 #>  [263,] -1.5225572 -1.0792251  0.27281346  0.6958598  0.7106709 -4.40617118 #>  [264,]  1.0660981  1.0747698 -0.13767148  1.6968220 -0.5540413 -0.34840325 #>  [265,]  0.5382323 -1.1470702  0.07081259  0.4824232  0.4845195  0.07999362 #>  [266,]  0.6395291  0.9190640  0.22777390  0.6625800  0.6751704  0.19740234 #>  [267,]  0.7912023  0.9809622 -1.03821888 -1.0201905 -0.9834238  0.60188204 #>  [268,]  0.8029218  0.9853895 -0.93977762  1.0070925 -0.9559906  0.65007176 #>  [269,] -0.6907221 -0.8471945 -0.01731539 -0.3355894 -0.3074828 -0.07013240 #>  [270,]  0.7427495 -1.0393290  0.62772010  0.8726002 -1.1105805  0.43226083 #>  [271,] -1.4617868 -1.0658461  0.35951333  0.7500207 -1.3010491  0.28093212 #>  [272,]  0.7430097 -1.0392175  0.62921182  0.8731629 -1.1098321 -2.30917641 #>  [273,]  0.9969330 -0.9497431 -0.21687621  1.4997897 -0.6303701 -0.49508460 #>  [274,]  1.2324041 -0.8900283 -0.05155954 -0.4513517 -0.4191835 -0.16304289 #>  [275,]  0.8168185 -1.0095080  1.19526849 -0.9620934 -0.9249410  0.71121130 #>  [276,]  0.6828886  0.9377151  0.35524213  0.7475900  0.7660060  0.27834811 #>  [277,] -0.9916988  1.0566012 -0.20074568 -0.6529096  1.6215758 -0.46636690 #>  [278,]  0.8799057 -0.9867666 -0.50538957 -0.8389979 -0.8015729 -0.95224778 #>  [279,]  1.1701401  1.1058614 -0.07325764 -0.4965313 -0.4631561 -0.21391583 #>  [280,] -1.2315629  0.9887794 -0.87102220  1.0280900  1.0688515 -1.45053286 #>  [281,]  0.6008627 -1.1090451  0.14927920 -1.6927869  0.5988213  0.14238807 #>  [282,]  0.7256406  0.9553168  0.53603922  0.8359716  0.8609460  0.38258737 #>  [283,]  0.6908172  0.9410360  0.38414071  0.7636401  0.7832108 -3.38182109 #>  [284,] -0.8614935 -0.9065006 -0.07735661 -0.5039281 -0.4703731 -0.22311251 #>  [285,]  0.6897804 -1.0631475  0.38025140  0.7615324 -1.2804910  0.29338127 #>  [286,]  0.7232500 -1.0478316  0.52418748 -1.2034989 -1.1689118  0.37603069 #>  [287,] -1.0392491  1.0415542 -0.27570941 -0.7116747 -0.6748390 -0.59603739 #>  [288,]  0.8410649  0.9994957  1.45725769 -0.9116749 -0.8743181 -1.20629819 #>  [289,] -0.9422806 -0.9317301 -0.14198460  1.6826646 -0.5589166 -0.35681280 #>  [290,] -1.3741336 -1.0458513 -1.82952460 -1.1898968 -1.1551009  0.38839674 #>  [291,] -1.0110399  1.0503694 -0.22881239  1.4781237 -0.6400350 -0.51602298 #>  [292,] -0.8148945 -0.8911931 -0.05307302 -0.4549123 -0.4226419 -0.16673104 #>  [293,]  0.9556541  1.0393680 -0.28882768 -0.7207165  1.4624014 -0.61784776 #>  [294,] -1.4113284 -1.0544409  0.45611691 -1.2498372  0.8223589  0.33768849 #>  [295,]  1.0082953  1.0565770 -0.20084733  1.5313951 -0.6167728  2.14339542 #>  [296,]  0.5608937 -1.1326733  0.09363940  0.5204594  0.5245352  0.09928348 #>  [297,]  0.6132290  0.9073198  0.17137269 -1.6305034  0.6227606  0.15842316 #>  [298,] -1.0384440 -0.9598758 -0.27426546  1.4071417 -0.6738333 -0.59362246 #>  [299,] -1.0635310 -0.9669188 -0.32241062 -0.7425730 -0.7055056 -0.67269127 #>  [300,]  1.2163927  1.1190689 -0.05633616 -0.4623447 -0.4298651 -0.17460301 #>  [301,]  0.6914945 -1.0623397  0.38669956 -1.3071581 -1.2743903  0.29722043 #>  [302,] -0.9904748  1.0570009 -0.19907302 -0.6514275 -0.6152204  2.15815087 #>  [303,]  0.8772735 -0.9876724 -0.51575266  1.1853454 -0.8062071 -0.96730970 #>  [304,]  1.0664911 -0.9303268 -0.13732817  1.6979731 -0.5536486 -0.34773132 #>  [305,] -0.7311321 -0.8620757 -0.02545231 -0.3726029 -0.3430310 -0.09446364 #>  [306,] -0.7592375 -0.8720923 -0.03286367 -0.3993845 -0.3688543 -0.11510045 #>  [307,]  0.6762535 -1.0696156 -3.00748980  0.7342783  0.7517494  0.26447000 #>  [308,]  0.9442585  1.0355565 -0.31328244  1.3572150  1.4290321 -0.65791825 #>  [309,]  0.6870151  0.9394468  0.37004207  0.7559239  0.7749374  0.28727235 #>  [310,]  0.5545662  0.8798049  0.08671151  0.5097065  0.5132088  0.09355509 #>  [311,] -1.4587516  0.9388192  0.36461199 -1.3282066 -1.2958560  0.28400763 #>  [312,] -1.2545804 -1.0170995 -0.98744748 -1.0063919 -0.9695195  0.62567227 #>  [313,] -1.3627374  0.9586007  0.57831708  0.8533873 -1.1367386  0.40571525 #>  [314,]  0.9057787  1.0224454 -0.41529293  1.2571853 -0.7580982 -0.81812783 #>  [315,]  0.6529434 -1.0811682  0.26217036  0.6883793 -1.4231139  0.22007804 #>  [316,] -1.3512348 -1.0404826 -1.63264747  0.8668030  0.8941758 -2.35773408 #>  [317,] -0.8449817 -0.9011438 -0.06785068 -0.4862981 -0.4531796 -0.20160329 #>  [318,]  1.0473802  1.0689552 -0.15522578 -0.6088631 -0.5732505 -0.38227796 #>  [319,]  1.2127998 -0.8944099 -0.05747662 -0.4648683 -0.4323188 -0.17732965 #>  [320,]  0.9840113 -0.9535454 -0.23691849 -0.6829607 -0.6463946 -0.53010121 #>  [321,] -0.6923898 -0.8478205 -0.01760063 -0.3370820 -0.3089130 -0.07102398 #>  [322,]  0.6408903 -1.0873552  0.23107886  0.6651775  0.6779384  0.19961326 #>  [323,] -0.9896854 -0.9458420  5.05049104 -0.6504724 -0.6142773 -0.46142844 #>  [324,]  0.9718562  1.0447332 -0.25773405 -0.6987616  1.5104816 -0.56576424 #>  [325,]  0.9502282 -0.9638023 -0.30018732 -0.7283075 -0.6913397 -0.63655313 #>  [326,]  0.7289660  0.9566555  0.55290433 -1.1861905 -1.1513391  0.39186123 #>  [327,]  0.7072395  0.9478314  0.45042176 -1.2541097  0.8194296  0.33442387 #>  [328,] -1.2105641 -1.0060352 -0.77522337  1.0611456 -0.9051307  0.75439051 #>  [329,] -1.0881722  1.0269836 -0.37653456 -0.7745403 -0.7372947 -0.75844378 #>  [330,] -0.7344492 -0.8632716 -0.02624500 -0.3757196 -0.3460320 -0.09673034 #>  [331,] -1.0406443  1.0411263 -0.27822692 -0.7134339  1.4780146 -0.60024092 #>  [332,] -1.2704928 -1.0210331 -1.07547239 -1.0300057 -0.9933195  0.58569838 #>  [333,]  1.1101795  1.0881891 -0.10462337 -0.5469963 -0.5124889 -0.28177960 #>  [334,]  0.9835262 -0.9536894 -0.23771132 -0.6835807 -0.6470081 -0.53147223 #>  [335,]  1.1858157 -0.9005946 -0.06694179 -0.4845201 -0.4514472 -0.19951212 #>  [336,]  0.8261092 -1.0060173  1.29045903  1.0612591  1.1049364  0.75462031 #>  [337,]  0.8511820 -0.9968475  1.58022585 -0.8918344 -0.8544318  0.88256623 #>  [338,]  1.0267771  1.0624709 -0.17759103 -0.6315342  1.6790106 -0.42420528 #>  [339,]  0.9088924 -0.9770200 -0.40574871  1.2651493 -0.7531088 -0.80355249 #>  [340,] -1.6788760  0.8992675  0.14070037 -1.7202185  0.5888398  0.13601920 #>  [341,]  0.7692475  0.9725442 -1.25629291  0.9307421  0.9632591  0.51938822 #>  [342,] -1.5515282 -1.0854731  0.24010667  0.6721375  0.6853576  0.20561647 #>  [343,] -0.9893979 -0.9457578 -0.19761114 -0.6501247  1.6288397 -0.46072664 #>  [344,] -1.1009814 -0.9772215  2.45336062 -0.7914006 -0.7540853 -0.80639207 #>  [345,] -1.4230005 -1.0571040  0.43136184 -1.2689240  0.8094289  0.32342912 #>  [346,]  0.8033857 -1.0146477 -0.93610736  1.0081634  1.0471986 -1.53364471 #>  [347,] -0.7021704  1.1744389 -0.01935536 -0.3458959 -0.3173642 -0.07643914 #>  [348,]  0.7896232 -1.0200312 -1.05236755 -1.0239480 -0.9872116  0.59561597 #>  [349,] -0.8083305  1.1248741 -0.05024310 -0.4481922  2.4031781 -0.15981490 #>  [350,] -0.6695596  1.1916690 -0.01402402 -0.3169131 -0.2896126 -0.05958380 #>  [351,]  0.6736686 -1.0708709  0.32398677  0.7291218  0.7462301  0.25921731 #>  [352,]  0.6841579  0.9382485  0.35974002 -1.3330683  0.7687481  0.28106907 #>  [353,] -1.5625118 -1.0878207  0.22890094 -1.5072297  0.6761176  0.19815711 #>  [354,]  0.8546075 -0.9956221 -0.61583361 -0.8852676  1.1794480  0.90133056 #>  [355,]  0.9074988 -0.9774792 -0.40998901 -0.7926556  1.3239146  1.23451073 #>  [356,] -0.8636746 -0.9072028 -0.07869322 -0.5062782  2.1156535 -0.22608730 #>  [357,]  0.6080106  0.9049481  0.16173187  0.6037380  0.6126036  0.15148749 #>  [358,] -1.1736227  1.0034802 -0.62840332  1.1234199 -0.8527336 -1.12693912 #>  [359,] -1.0149221 -0.9531641 -0.23483142 -0.6813213 -0.6447722 -0.52648709 #>  [360,]  0.7373556  0.9600140 -1.67370732  0.8609751  0.8878903  0.41606867 #>  [361,]  0.7361220 -1.0421858  0.59073586  0.8583262 -1.1299000 -2.42462439 #>  [362,]  0.5302194  0.8677908  0.06397001  0.4692899  0.4707355  0.07394905 #>  [363,] -0.7660097 -0.8744673 -0.03490160 -0.4059645 -0.3752111 -0.12058107 #>  [364,] -1.0628176  1.0344255 -0.32094825  1.3483328  1.4192544 -0.67033104 #>  [365,] -1.0543559 -0.9643565 -0.30402913 -0.7308274 -0.6938411 -0.64284269 #>  [366,] -1.1131432 -0.9805149 -0.43909964 -0.8075619 -0.7701952 -0.85415813 #>  [367,] -1.0039078  1.0526491 -0.21809694 -0.6677774 -0.6313757 -0.49723778 #>  [368,]  0.9396426 -0.9671147 -0.32385822 -0.7434771  1.4156209 -0.67502530 #>  [369,] -1.4249001  0.9455943  0.42748072  0.7861371 -1.2386143 -3.11354890 #>  [370,] -0.8007031  1.1281450 -0.04711726 -0.4404408 -0.4085934 -0.15207187 #>  [371,]  0.9033130 -0.9788642 -0.42303387 -0.7994276 -0.7620849 -0.82989354 #>  [372,] -1.3323438  0.9652455  0.67380515 -1.1241595  0.9187309  0.45659877 #>  [373,]  0.7126557  0.9500485  0.47431511  0.8086514 -1.2025777  0.34805900 #>  [374,]  0.9585893 -0.9612199 -0.28288846  1.3953603 -0.6797836 -0.60800170 #>  [375,] -0.9167651  1.0823335 -0.11788731 -0.5650200  1.8862239 -0.30902168 #>  [376,]  0.8242563 -1.0067094  1.27097532  1.0568830 -0.9089483 -1.34084898 #>  [377,]  0.7619921  0.9697257 -1.33959916  0.9146522  0.9458536  0.49423478 #>  [378,] -1.0900831 -0.9742488 -0.38103737 -0.7770451  1.3517383  1.30642651 #>  [379,]  1.1777019 -0.9024903 -0.07012930  2.0379860 -0.4574509 -0.20681825 #>  [380,]  0.6401526  0.9193384  0.22928275  0.6637693 -1.4783328  0.19841262 #>  [381,]  0.6395291  0.9190640  0.22777390  0.6625800  0.6751704  0.19740234 #>  [382,] -0.9517379 -0.9345841 -0.15192381 -0.6053178 -0.5697606 -0.37597543 #>  [383,]  0.9185596 -0.9738594 -0.37768202  1.2900218 -0.7379321 -0.76023016 #>  [384,] -0.6920588 -0.8476963 -0.01754370 -0.3367855 -0.3086289 -0.07084631 #>  [385,]  0.8142126  0.9896126 -0.85494240  1.0333063  1.0745229  0.69940565 #>  [386,] -1.5843896  0.9153628  0.20832181  0.6467083  0.6582680  0.18423725 #>  [387,]  1.3283542 -0.8698250 -0.03102455 -0.3931862 -0.3628705 -0.11008795 #>  [388,] -0.9295171 -0.9278467 -0.12945328 -0.5795668 -0.5444405 -0.33221166 #>  [389,]  1.0762741 -0.9277287 -0.12908973 -0.5791242 -0.5440058 -0.33149009 #>  [390,] -1.0152157  1.0490444 -0.23529201 -0.6816840 -0.6451311 -0.52728531 #>  [391,]  1.4216318  1.1738011 -0.01958937 -0.3470268 -0.3184492 -0.07715267 #>  [392,] -1.2588923  0.9821554 -1.01067070 -1.0127661  1.0246516 -1.62726647 #>  [393,]  1.2262737  1.1218451 -0.05333129 -0.4555125 -0.4232250 -0.16735801 #>  [394,] -1.1363322  1.0134527 -0.50492811 -0.8387897  1.2478708  1.05088880 #>  [395,]  0.7445082 -1.0385764  0.63785973 -1.1410235  0.9045371  0.43764949 #>  [396,] -1.0681597 -0.9682057 -0.33203777  1.3359502 -0.7114257 -0.68816943 #>  [397,]  0.5548047  0.8799207  0.08696441  0.5101099  0.5136334  0.09376599 #>  [398,]  0.9097334  1.0238105 -0.40321416 -0.7890764 -0.7517698 -0.79966888 #>  [399,]  1.0770972 -0.9275115 -0.12842284  1.7291760  1.8409216 -0.33016527 #>  [400,] -1.4490620  0.9407374  0.38145262  0.7621850  0.7816503  0.29409757 #>  [401,] -0.9805515 -0.9431600 -0.18594496  1.5637992  1.6572337 -0.43955274 #>  [402,]  0.5536027  0.8793364  0.08569583  0.5080780  0.5114943  0.09270670 #>  [403,] -1.1354163  1.0137031 -0.50217711  1.1939642  1.2498085 -0.94756455 #>  [404,] -1.4066779 -1.0533756  0.46643140 -1.2422692 -1.2083159 -2.91055030 #>  [405,] -1.0934005 -0.9751559 -0.38896313 -0.7814022  1.3438580  1.28579656 #>  [406,]  1.3628872  1.1587284 -0.02607293 -0.3750489 -0.3453861 -0.09623964 #>  [407,]  1.4216318  1.1738011 -0.01958937 -0.3470268 -0.3184492 -0.07715267 #>  [408,] -1.1224689 -0.9830234 -0.46463446  1.2194296 -0.7826591 -0.89231480 #>  [409,] -1.2948879  0.9737120  0.81740698  0.9374773  0.9705490  0.53015891 #>  [410,]  1.2004505 -0.8972178 -0.06160356 -0.4737063  2.2680008 -0.18709611 #>  [411,]  0.5382323 -1.1470702  0.07081259  0.4824232  0.4845195  0.07999362 #>  [412,] -1.0340415  1.0431579 -0.26648355  1.4181856  1.4962280 -0.58055754 #>  [413,] -0.8686009  1.1003709 -0.08178487 -0.5116049 -0.4778686 -0.23292468 #>  [414,]  1.2142405  1.1184621 -0.05701616 -0.4638539 -0.4313323 -0.17623026 #>  [415,] -0.8343317 -0.8976500 -0.06226344  2.1049123 -0.4422532 -0.18864374 #>  [416,]  0.8460195  1.0012952 -0.65944892  1.1088019 -0.8644924  0.85488456 #>  [417,] -1.1821247  1.0012644 -0.65989837 -0.9020412  1.1565244 -1.17036495 #>  [418,]  1.2017692 -0.8969162 -0.06114701 -0.4727502 -0.4399865 -0.18602315 #>  [419,]  1.0666271  1.0749331 -0.13720954 -0.5887993 -0.5535127 -0.34749905 #>  [420,] -1.3276849 -1.0348950  0.68998757  0.8953060 -1.0811463  0.46505430 #>  [421,] -1.1302181  1.0151287  2.05421114 -0.8305035 -0.7930889  1.08101174 #>  [422,] -1.6253921  0.9082282  0.17520913  0.6170066 -1.5956886  0.16115832 #>  [423,]  0.6643007  0.9298232  0.29466165  0.7105735 -1.3766681  0.24088343 #>  [424,]  0.7384754  0.9604602  0.60365030  0.8633826 -1.1229815  0.41938909 #>  [425,]  0.9345339 -0.9687307 -0.33604387 -0.7509731  1.4008487 -0.69458016 #>  [426,] -1.1082602 -0.9791956 -0.42621370 -0.8010552 -0.7637074 -0.83471249 #>  [427,]  0.9812783 -0.9543580 -0.24142513 -0.6864650 -0.6498630  1.85914827 #>  [428,]  0.7448490  0.9629914  0.63984059  0.8771445  0.9053340  0.43869994 #>  [429,]  0.6299528 -1.0931026  0.20564184  0.6444380  0.6558518  0.18240207 #>  [430,] -1.3491830  0.9615399  0.61884069  0.8692302  0.8967942  0.42752567 #>  [431,]  1.1426921 -0.9108700 -0.08603900 -0.5186998 -0.4848004 -0.24223806 #>  [432,]  1.2474654  1.1277473 -0.04748623 -0.4413749 -0.4094996 -0.15299178 #>  [433,]  0.8517154  1.0033550 -0.63014071 -0.8908069  1.1717801 -1.12934733 #>  [434,]  0.7064353 -1.0554076  0.44696318 -1.2567380 -1.2230356  0.33243674 #>  [435,] -1.5479761  0.9219042  0.24386427  0.6749783  0.6883868  0.20809999 #>  [436,] -0.7609159 -0.8726822 -0.03335904 -0.4010107 -0.3704248 -0.11643956 #>  [437,] -1.2462959 -1.0150379  1.05920558  1.0058370 -0.9572383  0.64776745 #>  [438,]  0.8664291 -0.9914420 -0.56110059  1.1585223 -0.8257355 -1.03243487 #>  [439,] -1.5625774  0.9192573  0.22883591  0.6634177  0.6760630  0.19811359 #>  [440,]  0.9426619 -0.9661649 -0.31689504 -0.7391010 -0.7020567  1.50653140 #>  [441,]  0.8993074 -0.9801974 -0.43596535  1.2407068 -0.7686298 -0.84944035 #>  [442,]  1.0867747 -0.9249742 -0.12087143 -0.5688694  1.8728798 -0.31505245 #>  [443,]  0.9319116 -0.9695647 -0.34250259  1.3247381  1.3932951  1.41868254 #>  [444,] -0.9025225 -0.9195097 -0.10602200 -0.5489727 -0.5144253 -0.28468763 #>  [445,]  0.6202405 -1.0983165  0.18509453  0.6262734  0.6365340  0.16814442 #>  [446,]  0.5967335  0.8997743  0.14246521  0.5832930 -1.6922534  0.13733644 #>  [447,]  0.8862488 -0.9845982 -0.48138329 -0.8279811  1.2649096 -0.91708376 #>  [448,] -0.9573399 -0.9362654 -0.15808633 -0.6118904  1.7354147  2.57922501 #>  [449,] -0.7845458  1.1352101 -0.04103918 -0.4242251  2.5453275 -0.13667013 #>  [450,] -1.2759272  0.9781208  0.90332062  0.9632729 -1.0015110  0.57274860 #>  [451,]  1.0848978 -0.9254640 -0.12229523  1.7522905 -0.5357159 -0.31791796 #>  [452,]  0.6121929 -1.1027182  0.16942050  0.6114020  0.6207375  0.15702605 #>  [453,]  1.0554664  1.0714759 -0.14734470 -0.6003071  1.7704449 -0.36718348 #>  [454,] -1.2786950 -1.0230473  0.89015549 -1.0422752 -1.0056956 -1.76589826 #>  [455,]  0.5302194  0.8677908  0.06397001  0.4692899  0.4707355  0.07394905 #>  [456,]  1.1597937 -0.9067354 -0.07780104 -0.5047128 -0.4711391 -0.22410294 #>  [457,]  0.9404253 -0.9668681 -0.32203649  1.3470937  1.4178906 -0.67208768 #>  [458,] -1.0129401  1.0497656  4.31514876 -0.6788749  1.5567801 -0.52112334 #>  [459,] -1.3809254  0.9547162  0.52863334 -1.2007414 -1.1661114  0.37849415 #>  [460,]  1.0356283 -0.9387313 -0.16755796 -0.6216376 -0.5858329  2.46576037 #>  [461,]  0.8434469  1.0003617  1.48544955 -0.9069427 -0.8695732 -1.18855909 #>  [462,]  0.9069495  1.0228499 -0.41167425  1.2601772 -0.7562162 -0.81261065 #>  [463,] -0.7768837 -0.8782505 -0.03839909 -0.4166324  2.5938513 -0.12982146 #>  [464,] -1.0007077  1.0536789  4.68538044 -0.6638656 -0.6275088 -0.48899083 #>  [465,]  0.6980952 -1.0592533  0.41240833  0.7785101  0.7991651  0.31238590 #>  [466,]  0.6026603 -1.1080310  0.15233114  0.5939980 -1.6603764  0.14463361 #>  [467,] -0.8865549  1.0934977 -0.09394474 -0.5312331 -0.4970561 -0.25927428 #>  [468,]  0.9858676 -0.9529952 -0.23391249  1.4693000  1.5526632  1.90514835 #>  [469,]  0.6441642 -1.0856597  0.23919540  0.6714437  0.6846178  0.20501286 #>  [470,] -0.9106866  1.0845409 -0.11269196 -0.5581455  1.9105235 -0.29843860 #>  [471,] -0.7021704  1.1744389 -0.01935536 -0.3458959 -0.3173642 -0.07643914 #>  [472,]  1.2169119  1.1192152 -0.05617351  2.1645874 -0.4295122 -0.17421315 #>  [473,]  1.2623854  1.1318611 -0.04381113  2.3157624 -0.4002377 -0.14375415 #>  [474,] -1.1878604 -1.0002188  1.46649550  1.0987664  1.1458029  0.83304252 #>  [475,]  0.8668028 -0.9913111 -0.55946380  1.1594419 -0.8250507  0.97077431 #>  [476,] -1.2262550 -1.0100110 -0.84590225 -0.9649771  1.0777718  0.70517770 #>  [477,] -1.0453303 -0.9618207 -0.28682618 -0.7193566 -0.6824577 -0.61453484 #>  [478,]  0.7685233 -1.0285276  0.79092896 -1.0762754 -1.0400257  0.51683176 #>  [479,] -1.1046487  1.0222678  2.39870440  1.2558740 -0.7589259 -0.82056193 #>  [480,] -1.5067652 -1.0757845  0.29278166  0.7093393 -1.3791729  0.23969432 #>  [481,]  1.0999894  1.0851203 -0.11136815 -0.5563570  1.9169460 -0.29572442 #>  [482,]  0.8755080 -0.9882819 -0.52284025  1.1809594 -0.8093382 -0.97757140 #>  [483,] -0.8794014 -0.9122304 -0.08892710 -0.5233721  2.0434536 -0.24850124 #>  [484,] -1.2071751 -1.0051719 -0.76063832  1.0666338 -0.9002614  0.76555035 #>  [485,] -1.1718031 -0.9960584 -0.62183206 -0.8876013  1.1762056  0.89460085 #>  [486,] -0.7603238  1.1461657 -0.03318357 -0.4004367  2.7036494 -0.11596575 #>  [487,] -1.1176110 -0.9817185 -0.45117944 -0.8135365 -0.7761544 -0.87226997 #>  [488,]  0.6572997 -1.0789686  0.27425176 -1.4350203  0.7117330  0.22787897 #>  [489,]  0.7797481 -1.0239703 -1.14603435  0.9542552  0.9887192 -1.79334550 #>  [490,] -1.2000478 -1.0033506 -0.73072580 -0.9273684  1.1235174  0.78966909 #>  [491,]  1.1826483 -0.9013326 -0.06816591 -0.4869107 -0.4537766 -0.20232708 #>  [492,]  0.7099279  0.9489334 -2.16379857  0.8029650  0.8254337  0.34113689 #>  [493,] -1.2132906  0.9933164 -0.78713004 -0.9462872  1.1000406  0.74555241 #>  [494,]  1.0367639  1.0656251 -0.16631849 -0.6203852  1.7105747 -0.40323300 #>  [495,]  0.6240519  0.9121942  0.19293873  0.6333735  0.6440818  0.17362783 #>  [496,]  1.0768855  1.0780888 -0.12859400  1.7285506  1.8402254 -0.33050544 #>  [497,]  0.8519434  1.0034372 -0.62899933 -0.8903684  1.1723836  0.88670922 #>  [498,] -1.4625940 -1.0660263  0.35817121  0.7492592 -1.3024318  0.28012092 #>  [499,]  0.7256501  0.9553206 -1.86537074  0.8359916  0.8609676  0.38261344 #>  [500,]  0.9728521  1.0450610 -0.25595177 -0.6974459 -0.6607370 -0.56273698 #>  [501,]  1.0260645  1.0622450 -0.17842833 -0.6323415 -0.5963850 -0.42575080 #>  [502,]  0.8648175 -0.9920074  1.75987241  1.1545601  1.2067109 -1.04255292 #>  [503,]  0.7245696 -1.0472468  0.53070180 -1.1994685  0.8585026  0.37963869 #>  [504,]  0.9109036 -0.9763589 -0.39971784  1.2703056 -0.7499127 -0.79430247 #>  [505,]  0.7182335  0.9523197  0.50004269  0.8203364  0.8441157  0.36256785 #>  [506,] -1.1151956 -0.9810682  2.24914134 -0.8103040 -0.7729300  1.15950082 #>  [507,]  1.0526094  1.0705868 -0.15007563 -0.6033088 -0.5677834  2.68503776 #>  [508,] -1.2275257 -1.0103314  1.17390320  1.0343208  1.0756260 -1.42579690 #>  [509,]  1.3001628 -0.8755582 -0.03587763 -0.4090171 -0.3781617 -0.12318004 #>  [510,] -1.2826936 -1.0240260 -1.14741599  0.9539430  0.9883810  0.55709783 #>  [511,]  0.7392495 -1.0408335  0.60795052 -1.1560042 -1.1207199 -2.37137020 #>  [512,] -1.0875606 -0.9735578 -0.37510316 -0.7737395 -0.7364976  1.32237767 #>  [513,] -0.8141735 -0.8909515 -0.05275568  2.2018092 -0.4219227 -0.16595974 #>  [514,] -0.9813826  1.0599904 -0.18701543 -0.6404661 -0.6043998 -0.44150792 #>  [515,]  0.6762359  0.9349078  0.33244458  0.7342431 -1.3302971  0.26443395 #>  [516,]  1.1349514 -0.9127681 -0.09009391 -0.5252284 -0.4911827 -0.25101846 #>  [517,] -0.6586451 -0.8349460 -0.01254622 -0.3074720 -0.2805971 -0.05466868 #>  [518,]  0.7427341 -1.0393355  0.62763244 -1.1460437 -1.1106245  0.43221416 #>  [519,]  1.0014848  1.0543862 -0.21028486  1.5124148 -0.6248687 -0.48341045 #>  [520,] -1.0235169  1.0464313 -0.24863862  1.4451365 -0.6553196  1.81730698 #>  [521,] -0.7824305 -0.8801661 -0.04029532  2.3689796 -0.3908411 -0.13475087 #>  [522,] -1.2299547 -1.0109432  1.15828560  1.0305651 -0.9332342 -1.44063797 #>  [523,] -1.4562940  0.9393042  0.36880115  0.7552346 -1.2916585  0.28652724 #>  [524,] -1.0943382  1.0252079 -0.39122861  1.2777337 -0.7453546 -0.78122798 #>  [525,]  1.1590043 -0.9069245 -0.07816080  1.9788438 -0.4717568 -0.22490371 #>  [526,]  0.7130828 -1.0523847  0.47624448 -1.2352641  0.8325063  0.34915314 #>  [527,] -1.0409289 -0.9605787 -0.27874279  1.4009666 -0.6769393  1.66361335 #>  [528,] -1.1445088 -0.9888949 -0.53006117 -0.8499296  1.2307735  1.01215217 #>  [529,] -0.9939122 -0.9470773 -0.20380086  1.5253352 -0.6193352  2.11933931 #>  [530,] -1.2307197 -1.0111358 -0.86698946  1.0293867 -0.9343514  0.69187982 #>  [531,]  1.1400707 -0.9115109 -0.08738829 -0.5208967 -0.4869476 -0.24517000 #>  [532,]  0.7393511  0.9608089  0.60851686 -1.1557119 -1.1204235  0.42200082 #>  [533,]  0.7305374  0.9572865  0.56102970  0.8463820 -1.1465786  0.39630626 #>  [534,] -1.0630405  1.0343591 -0.32140467 -0.7419430 -0.7048798  1.49016205 #>  [535,]  0.6949683  0.9427642  0.40005358 -1.2951601  0.7922916  0.30512552 #>  [536,]  0.6447700 -1.0853472  0.24072350  0.6726061 -1.4580296  0.20602475 #>  [537,] -1.3908073  0.9526336  0.50370187 -1.2166006 -1.1822212  0.36461748 #>  [538,]  0.6304060  0.9150287  0.20664615  0.6452913 -1.5226264  0.18309043 #>  [539,] -0.6923898 -0.8478205 -0.01760063 -0.3370820 -0.3089130 -0.07102398 #>  [540,]  1.2834727 -0.8790295 -0.03915974 -0.4188579 -0.3876808 -0.13180530 #>  [541,] -0.8144477  1.1222798 -0.05287617  2.2004453 -0.4221962 -0.16625272 #>  [542,]  0.9042811 -0.9785431 -0.41997506 -0.7978535  1.3148970  1.21175367 #>  [543,]  0.5747839  0.8895063  0.11051920 -1.8368062  0.5498156  0.11285699 #>  [544,]  0.6751840 -1.0701342  0.32895655  0.7321427  0.7494634  0.26228628 #>  [545,]  0.8090277 -1.0124754 -0.89275849  1.0212303  1.0613954 -1.47844128 #>  [546,]  0.6811712 -1.0672448  0.34923297 -1.3438441 -1.3118135  0.27470069 #>  [547,] -1.1248971  1.0165968 -0.47148684 -0.8233229 -0.7859201  1.10806700 #>  [548,] -1.2397700  0.9867702  1.09755871  1.0156012 -0.9476172 -1.50188774 #>  [549,]  0.7994754 -1.0161650  1.03351795  0.9991523  1.0374132 -1.57334697 #>  [550,] -0.9543123 -0.9353576 -0.15472988  1.6438333  1.7460241 -0.38133336 #>  [551,]  0.8582944 -0.9943104 -0.59813163 -0.8782825 -0.8408602  0.92188647 #>  [552,]  0.8468267 -0.9984149  1.52624641 -0.9002932 -0.8629076 -1.16392014 #>  [553,] -1.6417142 -1.1044193  0.16374072  0.6057656  0.6147550  0.15294024 #>  [554,]  1.1668980  1.1049221 -0.07464777 -0.4990729 -0.4656354 -0.21704758 #>  [555,] -0.6923898 -0.8478205 -0.01760063 -0.3370820 -0.3089130 -0.07102398 #>  [556,] -1.3449139 -1.0389895 -1.58159699  0.8743144  0.9022798  0.43468251 #>  [557,]  1.0114341 -0.9455521 -0.19666219  1.5401787  1.6310680 -0.45901513 #>  [558,]  1.0238430 -0.9420275 -0.18106783 -0.6348686 -0.5988774  2.32227528 #>  [559,]  0.6700558  0.9322828  0.31239571  0.7219427  0.7385488  0.25201761 #>  [560,] -0.9231113 -0.9258837 -0.12352793 -0.5722383 -0.5372439 -0.32039274 #>  [561,]  0.9727274  1.0450200 -0.25617405 -0.6976103 -0.6609000 -0.56311479 #>  [562,]  0.6943880  0.9425230  0.39779571 -1.2971526  0.7910190  0.30379320 #>  [563,]  0.7652554  0.9709957 -1.30137009  0.9218731  0.9536632  0.50542308 #>  [564,]  0.6848181  0.9385257  0.36209860  0.7514818  0.7701762  0.28249279 #>  [565,]  0.9913339  1.0511017 -0.22531180  1.4843262 -0.6372387 -0.50990852 #>  [566,]  1.2267155 -0.8912903 -0.05320129 -0.4552107 -0.4229318 -0.16704252 #>  [567,] -0.8387162 -0.8990921 -0.06451420 -0.4796834  2.2384585 -0.19389484 #>  [568,]  1.0803144 -0.9266647 -0.12585392 -0.5751450 -0.5400978 -0.32504725 #>  [569,]  0.6305377  0.9150873  0.20693881  0.6455394  0.6570240  0.18329088 #>  [570,]  0.8138734  0.9894863  1.16637175  1.0325142 -0.9313922  0.69788060 #>  [571,]  0.8769384  1.0123631 -0.51708923  1.1845124 -0.8067999  1.03172847 #>  [572,]  0.7975637 -1.0169103 -0.98339119  0.9947602 -0.9683868  0.62766669 #>  [573,] -0.9635574 -0.9381235 -0.16517414 -0.6192230 -0.5834537 -0.40108623 #>  [574,]  1.1371163 -0.9122355 -0.08893817 -0.5233898 -0.4893849 -0.24852515 #>  [575,]  0.5545662  0.8798049  0.08671151  0.5097065  0.5132088  0.09355509 #>  [576,] -1.0086038 -0.9513429 -0.22510295  1.4847001 -0.6370709 -0.50954305 #>  [577,]  1.0415841  1.0671400 -0.16117292  1.6257191  1.7259105 -0.39355334 #>  [578,]  1.2602844  1.1312838 -0.04430836 -0.4331489 -0.4015226 -0.14501395 #>  [579,]  1.0766877  1.0780282 -0.12875412  1.7279665 -0.5436038 -0.33082358 #>  [580,] -1.0687087 -0.9683581 -0.33319583  1.3346874 -0.7121295 -0.69002440 #>  [581,] -1.0716631 -0.9691772 -0.33948653 -0.7530549  1.3967995 -0.70007541 #>  [582,] -0.7220365 -0.8587769 -0.02338260 -0.3641178 -0.3348670 -0.08846792 #>  [583,]  0.6575761 -1.0788297  0.27503393  0.6973935 -1.4038852  0.22838130 #>  [584,] -1.6001928  0.9125848  0.19477434  0.6350045  0.6458163  0.17490363 #>  [585,]  0.7539996 -1.0345549 -1.43880137  0.8970759 -1.0789159  0.46767615 #>  [586,] -0.7479279 -0.8680931 -0.02968634  2.5739650 -0.3583549 -0.10639828 #>  [587,] -1.2628444  0.9812130 -1.03236268 -1.0186244 -0.9818452  0.60452011 #>  [588,] -1.0368928  1.0422785 -0.27150165  1.4110179  1.4883215 -0.58899209 #>  [589,] -1.2076296 -1.0052877 -0.76258062 -0.9381785  1.1099842 -1.30882796 #>  [590,]  0.5548047  0.8799207  0.08696441  0.5101099  0.5136334  0.09376599 #>  [591,] -0.9062100 -0.9206587 -0.10899172 -0.5531072 -0.5184772 -0.29083361 #>  [592,]  1.0281077 -0.9408290 -0.17603964  1.5872235 -0.5941065 -0.42133729 #>  [593,]  1.0541873 -0.9336388 -0.14856025 -0.6016481 -0.5661493 -0.36952332 #>  [594,]  0.9030185  1.0214901 -0.42396970  1.2501445 -0.7625633 -0.83131262 #>  [595,] -0.7603423 -0.8724807 -0.03318906 -0.4004547 -0.3698878 -0.11598056 #>  [596,] -0.8024400 -0.8869993 -0.04781410 -0.4422005 -0.4103006 -0.15380785 #>  [597,] -1.3733332 -1.0456647  0.54875205 -1.1886217 -1.1538066  0.38958398 #>  [598,]  0.7989127 -1.0163841  1.02859970  0.9978586 -0.9652428  0.63324794 #>  [599,]  1.2030538 -0.8966228 -0.06070602  2.1194443 -0.4390829 -0.18498504 #>  [600,]  0.8167607 -1.0095299 -0.83703325 -0.9622186  1.0810029  0.71094777 #>  [601,] -0.7417074  1.1549004 -0.02805320 -0.3825806 -0.3526421 -0.10184384 #>  [602,] -0.9961890  1.0551404 -0.20698495  1.5189261 -0.6220681 -0.47753478 #>  [603,]  0.7950126 -1.0179085 -1.00496978 -1.0112113 -0.9743749  0.61722105 #>  [604,] -1.1426142 -0.9883932 -0.52414463 -0.8473424  1.2347034 -0.97945648 #>  [605,]  0.8499646  1.0027229 -0.63898738 -0.8941864 -0.8567882 -1.14158648 #>  [606,] -0.9207785  1.0808866 -0.12142831 -0.5695800 -0.5346346 -0.31617412 #>  [607,] -1.6622401 -1.1086299  0.15052090 -1.6889826  0.6002317  0.14330293 #>  [608,] -0.7579450 -0.8716373 -0.03248651 -0.3981344 -0.3676470 -0.11407780 #>  [609,] -1.0285950  1.0448464 -0.25711716 -0.6983070  1.5115100 -0.56471698 #>  [610,] -0.9714727 -0.9404769 -0.17458793 -0.6286156  1.6871629 -0.41864838 #>  [611,] -1.1567507  1.0079402  1.75536919  1.1537569 -0.8293021 -1.04462020 #>  [612,]  0.8952110  1.0187772 -0.44966128  1.2303270  1.2896373 -0.86999982 #>  [613,]  0.5747839  0.8895063  0.11051920 -1.8368062  0.5498156  0.11285699 #>  [614,] -0.8218200  1.1191869 -0.05620492 -0.4620520 -0.4295804 -0.17428845 #>  [615,]  0.8605578  1.0065337 -0.58755345  1.1441172 -0.8366098 -1.06987007 #>  [616,] -0.6586451 -0.8349460 -0.01254622 -0.3074720 -0.2805971 -0.05466868 #>  [617,]  0.8927756  1.0179276 -0.45803761 -0.8168767  1.2828950  1.13313969 #>  [618,]  0.7946770 -1.0180402 -1.00784889  0.9881449  1.0254656 -1.62375259 #>  [619,] -0.8679949 -0.9085902 -0.08139901 -0.5109482 -0.4772272 -0.23207457 #>  [620,]  0.7417591  0.9617662  0.62207122  0.8704603 -1.1134354  0.42925020 #>  [621,]  0.8291212  0.9951272 -0.75604441 -0.9359876 -0.8987139 -1.30014603 #>  [622,]  0.6386985  0.9186983  0.22577732  0.6609975  0.6734843  0.19606317 #>  [623,]  1.3303530 -0.8694245 -0.03071011 -0.3920999 -0.3618222 -0.10922430 #>  [624,] -0.7505914 -0.8690387 -0.03041000 -0.3910554 -0.3608145 -0.10839812 #>  [625,]  1.2142405  1.1184621 -0.05701616 -0.4638539 -0.4313323 -0.17623026 #>  [626,]  0.8860709 -0.9846587  2.07452389 -0.8282870 -0.7908757 -0.91804843 #>  [627,]  1.1273218  1.0933077 -0.09430662 -0.5317882 -0.4975992 -0.26004614 #>  [628,] -1.4046396  0.9497507  0.47103648  0.8071294  0.8299106 -2.88852553 #>  [629,]  0.8671626 -0.9911851 -0.55789273 -0.8618254  1.2130151  0.97288728 #>  [630,]  0.6010531 -1.1089375  0.14959994 -1.6918004  0.5991864  0.14262455 #>  [631,] -0.9230600 -0.9258679 -0.12348146  1.7477024  1.8615508 -0.32029954 #>  [632,]  0.6130648  0.9072454  0.17106205 -1.6313070 -1.6065811  0.15820110 #>  [633,] -1.0146157 -0.9530760 -0.23435148 -0.6809429 -0.6443977 -0.52565496 #>  [634,] -0.8152312  1.1219494 -0.05322176 -0.4552583  2.3641891 -0.16709221 #>  [635,]  0.6868745  0.9393879  0.36952948 -1.3233826  0.7746324  0.28696463 #>  [636,] -0.7855995 -0.8812563 -0.04141405 -0.4252741  2.5387628 -0.13763435 #>  [637,] -0.7842177  1.1353556 -0.04092304 -0.4238986 -0.3925607 -0.13637100 #>  [638,]  1.1015967 -0.9211448 -0.11027188 -0.5548642 -0.5201996 -0.29347123 #>  [639,]  0.8840774 -0.9853382 -0.48945096  1.2023173  1.2589529 -0.92894460 #>  [640,] -0.9319994  1.0768844 -0.13181365 -0.5824181 -0.5472416  2.96836903 #>  [641,] -1.6268395  0.9079807  0.17415577  0.6159969  0.6256163  0.16040870 #>  [642,]  1.2036165  1.1154560 -0.06051400 -0.4714160  2.2795243 -0.18453247 #>  [643,]  0.9182823 -0.9739494 -0.37845554 -0.7756116 -0.7383611 -0.76143370 #>  [644,] -1.0539285  1.0370897  3.29820615  1.3693334 -0.6933000 -0.64147885 #>  [645,] -0.8492298 -0.9025288 -0.07019560 -0.4908065 -0.4575737 -0.20696942 #>  [646,]  1.0561122  1.0716766 -0.14673533 -0.5996317  1.7725299 -0.36600884 #>  [647,] -1.0154898  1.0489577 -0.23572268 -0.6820227 -0.6454663 -0.52803135 #>  [648,]  0.6345933  0.9168858  0.21612586  0.6532005 -1.5033535  0.18955113 #>  [649,]  0.6288864  0.9143527  0.20329471 -1.5565852 -1.5297136  0.18079035 #>  [650,] -1.0583764 -0.9654812 -0.31197080  1.3587625  1.4307359 -0.65578754 #>  [651,] -1.5996801 -1.0956811  0.19519765  0.6353790  0.6462146  0.17519746 #>  [652,]  0.8737199 -0.9889009 -0.53013282  1.1765248 -0.8125284 -0.98809699 #>  [653,] -0.7402472  1.1555977 -0.02768112 -0.3811957 -0.3513073 -0.10079788 #>  [654,]  0.9226415 -0.9725378 -0.36650498 -0.7688816  1.3667492 -0.74277641 #>  [655,]  0.8288648  0.9950330 -0.75763026  1.0677823  1.1120392  0.76789932 #>  [656,]  0.8011656 -1.0155079  1.04841211  1.0030427 -0.9600269  0.64265800 #>  [657,]  1.2865824  1.1384617 -0.03852293 -0.4169969 -0.3858798 -0.13014504 #>  [658,] -1.2451317  0.9854669 -0.93814473 -0.9924886 -0.9555185  0.65094640 #>  [659,] -1.4704720  0.9365212  0.34536988  0.7418892  0.7598991  0.27234837 #>  [660,]  1.1104087  1.0882579 -0.10447714  1.8288607 -0.5122853 -0.28147506 #>  [661,] -0.8551491 -0.9044508 -0.07357799  2.0115864 -0.4637304 -0.21463870 #>  [662,]  0.6360832  0.9175446  0.21958727  0.6560255  0.6681880  0.19189406 #>  [663,] -1.1966070  0.9975374 -0.71664758 -0.9224813 -0.8851578  0.80163639 #>  [664,]  0.8319703 -1.0038415 -0.73867541 -0.9300978  1.1200701  0.78309039 #>  [665,] -0.8496041  1.1078483 -0.07040553 -0.4912047 -0.4579619 -0.20744782 #>  [666,]  1.2142955  1.1184777 -0.05699866 -0.4638152 -0.4312947 -0.17618843 #>  [667,] -0.6923898 -0.8478205 -0.01760063 -0.3370820 -0.3089130 -0.07102398 #>  [668,]  0.9139846  1.0252733 -0.39067704 -0.7823359  1.3421810 -0.78037627 #>  [669,]  0.5302194  0.8677908  0.06397001  0.4692899  0.4707355  0.07394905 #>  [670,]  0.5747839  0.8895063  0.11051920 -1.8368062  0.5498156  0.11285699 #>  [671,]  0.7098753 -1.0538386  0.46191828  0.8028555 -1.2116571  0.34100451 #>  [672,] -1.6113700 -1.0981270  0.18580217  0.6269228 -1.5693063  0.16864122 #>  [673,]  0.9673031 -0.9585597 -0.26606579 -0.7048259 -0.6680496 -0.57985373 #>  [674,]  1.2336849  1.1239172 -0.05119797 -0.4504898 -0.4183465 -0.16215818 #>  [675,] -0.9814361 -0.9434205 -0.18708443  1.5612066 -0.6044631 -0.44163385 #>  [676,] -0.8650407  1.1017559 -0.07954039 -0.5077528 -0.4741068  4.38660283 #>  [677,]  0.9884167  1.0501534 -0.22985571 -0.6773698  1.5603972 -0.51784123 #>  [678,]  0.5302194  0.8677908  0.06397001  0.4692899  0.4707355  0.07394905 #>  [679,] -1.0863053 -0.9732135 -0.37217960 -0.7720969 -0.7348628 -0.75165260 #>  [680,]  0.7031943 -1.0568950  0.43325278  0.7890061  0.8104350  0.32452476 #>  [681,] -1.2167043 -1.0075953  1.24648283 -0.9511924 -0.9139853  0.73465982 #>  [682,] -0.8782948 -0.9118787 -0.08817173 -0.5221609 -0.4881834  4.05075359 #>  [683,] -1.7117960 -1.1186491  0.12335533  0.5609158  0.5672439  0.12286378 #>  [684,]  0.8254602  0.9937794  1.28360534 -0.9436408  1.1032666  0.75151975 #>  [685,] -0.8775993  1.0969032 -0.08769976 -0.5214003 -0.4874399 -0.24584533 #>  [686,]  0.9088283 -0.9770411 -0.40594275 -0.7905232 -0.7532111 -0.80384959 #>  [687,] -0.7326313 -0.8626167 -0.02580803 -0.3740101 -0.3443859 -0.09548277 #>  [688,]  0.6962174 -1.0601274  0.40495064 -1.2908873  0.7950340  0.30800932 #>  [689,] -1.3661075  0.9578758  0.56871974  0.8495173  0.8755387  0.40049972 #>  [690,]  1.0253874  1.0620303 -0.17922814 -0.6331101  1.6746407 -0.42722558 #>  [691,]  0.9079693 -0.9773241 -0.40855189 -0.7919000  1.3252355  1.23786685 #>  [692,]  0.6024716 -1.1081373  0.15200824  0.5936557 -1.6613774  0.14439652 #>  [693,] -0.7676164  1.1428198 -0.03540059 -0.4075328 -0.3767269 -0.12191182 #>  [694,]  1.1721379 -0.9038001 -0.07241586 -0.4949751 -0.4616383 -0.21201289 #>  [695,]  0.7772704 -1.0249688  0.85396096  0.9486830 -1.0176221  0.54839802 #>  [696,] -0.9071723 -0.9209580 -0.10977826 -0.5541885 -0.5195372 -0.29245501 #>  [697,]  0.5548047  0.8799207  0.08696441  0.5101099  0.5136334  0.09376599 #>  [698,] -1.1327082 -0.9857610 -0.49411802 -0.8338738  1.2555643  1.06862074 #>  [699,]  0.5382323 -1.1470702  0.07081259  0.4824232  0.4845195  0.07999362 #>  [700,]  0.7460279 -1.0379281 -1.54623383 -1.1367502 -1.1012088  0.44234907 #>  [701,] -0.7836269 -0.8805781 -0.04071462 -0.4233112 -0.3919918 -0.13583370 #>  [702,] -0.8819452  1.0952450 -0.09068455  1.9005575 -0.4920951 -0.25228986 #>  [703,]  0.6982063 -1.0592017  0.41285311 -1.2841289  0.7994098  0.31264635 #>  [704,] -1.2641425  0.9809043 -1.03957387 -1.0205520  1.0164790  0.60127541 #>  [705,]  1.0409598 -0.9372562 -0.16182898 -0.6157914 -0.5800732  2.53298354 #>  [706,]  1.2167197  1.1191610 -0.05623367 -0.4621161 -0.4296428 -0.17435738 #>  [707,]  0.6201253  0.9104326  0.18486172  0.6260594 -1.5715695  0.16798088 #>  [708,]  1.0020699 -0.9482494 -0.20945434  1.5140413  1.6021357 -0.48193365 #>  [709,]  0.5545662  0.8798049  0.08671151  0.5097065  0.5132088  0.09355509 #>  [710,]  0.5618270 -1.1320967  0.09470015  0.5220542  0.5262160  0.10015193 #>  [711,] -0.8806452 -0.9126253 -0.08978270 -0.5247350  2.0379041 -0.25034780 #>  [712,]  1.1113711 -0.9186561 -0.10386570 -0.5459175  1.9552940 -0.28020057 #>  [713,] -0.8512766 -0.9031945 -0.07134987 -0.4929855 -0.4596981 -0.20959585 #>  [714,]  0.7466528  0.9637050  0.65041222  0.8810573 -1.0994359 -2.25076377 #>  [715,] -0.7622870 -0.8731635 -0.03376842 -0.4023414 -0.3717103 -0.11754285 #>  [716,] -0.7417074  1.1549004 -0.02805320 -0.3825806 -0.3526421 -0.10184384 #>  [717,]  0.5382323 -1.1470702  0.07081259  0.4824232  0.4845195  0.07999362 #>  [718,] -1.2901392  0.9748082  0.83800955  0.9438369  0.9774347  0.54046108 #>  [719,]  0.6682801  0.9315255  0.30682940  0.7184259 -1.3609380  0.24853867 #>  [720,] -0.9713077 -0.9404280 -0.17438714 -0.6284192 -0.5925173 -0.41827607 #>  [721,] -1.0983318 -0.9765007 -0.40100416 -0.7878994 -0.7505972 -0.79627804 #>  [722,] -1.3324256  0.9652274 -1.48472625  0.8894530  0.9186223 -2.19081138 #>  [723,] -0.7232692 -0.8592257 -0.02365442 -0.3652625 -0.3359679 -0.08926199 #>  [724,] -1.1034749  1.0226007  2.41604445 -0.7947020 -0.7573750 -0.81600491 #>  [725,]  0.8679486 -0.9909101 -0.55447898 -0.8603899 -0.8229562  0.97751511 #>  [726,] -1.4867545 -1.0713887  0.32054011  0.7270069  0.7439669  0.25708264 #>  [727,]  0.8289980 -1.0049424  1.32134211  1.0680980  1.1123829 -1.30115887 #>  [728,]  0.5618270 -1.1320967  0.09470015  0.5220542  0.5262160  0.10015193 #>  [729,] -1.1832924  1.0009616 -0.66432748 -0.9036816  1.1543293  0.85002664 #>  [730,] -0.7499238  1.1510104 -0.03022720 -0.3904155 -0.3601971 -0.10789397 #>  [731,] -1.0702753 -0.9687926 -0.33651904  1.3310947  1.4002866  1.43814662 #>  [732,]  1.4216318  1.1738011 -0.01958937 -0.3470268 -0.3184492 -0.07715267 #>  [733,] -1.3100446  0.9702479 -1.32373962 -1.0897810 -1.0536761  0.49880675 #>  [734,]  0.6401526  0.9193384  0.22928275  0.6637693 -1.4783328  0.19841262 #>  [735,]  0.8917793  1.0175796 -0.46151550  1.2216624 -0.7811634  1.12653192 #>  [736,] -0.8425001  1.1107008 -0.06651204 -0.4836733  2.2191538 -0.19852114 #>  [737,]  0.6530409  0.9249678  0.26243567 -1.4522885  0.7028863  0.22025021 #>  [738,] -1.3351321  0.9646277 -1.50527941  0.8861379 -1.0928454  0.45162573 #>  [739,]  0.9830130  1.0483918 -0.23855337 -0.6842375  1.5440242  1.87642878 #>  [740,] -1.4472003 -1.0625775  0.38478962  0.7639903 -1.2761836  0.29608480 #>  [741,]  1.0757150 -0.9278764 -0.12954498  1.7250949 -0.5445500 -0.33239358 #>  [742,]  0.6908689  0.9410576  0.38433532  0.7637452 -1.2766119  0.29581449 #>  [743,] -0.8469407 -0.9017831 -0.06892362 -0.4883748 -0.4552034 -0.20406375 #>  [744,]  0.7678026  0.9719844  0.78591732  0.9275275  0.9597805  0.51429794 #>  [745,]  0.7410346 -1.0400650  0.61796614  0.8688964 -1.1155310 -2.34159973 #>  [746,] -0.6920588 -0.8476963 -0.01754370 -0.3367855 -0.3086289 -0.07084631 #>  [747,] -1.1492437 -0.9901460  1.83453526  1.1676632  1.2210349  0.99049775 #>  [748,]  0.9492853 -0.9640954 -0.30221333 -0.7296393 -0.6926617  1.56281194 #>  [749,]  0.7342713 -1.0429896  0.58074635 -1.1704675 -1.1353861  0.40703228 #>  [750,] -0.8951883 -0.9172148 -0.10031996 -0.5407916  1.9746776 -0.27277594 #>  [751,]  0.8662908  1.0085826  1.78028531  1.1581821 -0.8259892 -1.03329848 #>  [752,] -1.6764694  0.8996626  0.14207449  0.5828581  0.5904673  0.13704514 #>  [753,]  0.8458038  1.0012170 -0.66058909 -0.9022976  1.1561808  0.85374351 #>  [754,] -1.4514557 -1.0635334  0.37721085 -1.3160082 -1.2834139  0.29156584 #>  [755,] -1.1871108  0.9999745 -0.67898750 -0.9090549 -0.8716909  0.83580181 #>  [756,] -0.9374001 -0.9302495 -0.13707609 -0.5886437 -0.5533597 -0.34723772 #>  [757,] -0.9368540 -0.9300835 -0.13653596 -0.5880128 -0.5527396 -0.34617937 #>  [758,]  1.0867747 -0.9249742 -0.12087143 -0.5688694  1.8728798 -0.31505245 #>  [759,] -0.6695596  1.1916690 -0.01402402 -0.3169131 -0.2896126 -0.05958380 #>  [760,] -1.4109778  0.9484421  0.45688542 -1.2492658  0.8227522  0.33812831 #>  [761,] -0.8681532 -0.9086410 -0.08149968 -0.5111198 -0.4773947 -0.23229645 #>  [762,] -0.6586451 -0.8349460 -0.01254622 -0.3074720 -0.2805971 -0.05466868 #>  [763,]  0.6000934 -1.1094804  0.14798898 -1.6967826  0.5973468  0.14143564 #>  [764,] -1.0776695 -0.9708375 -0.35258819  1.3143371 -0.7236632 -0.72087443 #>  [765,] -0.8294664  1.1160170 -0.05984454 -0.4699938 -0.4373042 -0.18295211 #>  [766,]  0.9048635 -0.9783502 -0.41814706 -0.7969087  1.3165270 -0.82247166 #>  [767,] -1.0423819 -0.9609891 -0.28138964  1.3973751 -0.6787588 -0.60550957 #>  [768,]  0.7334790 -1.0433345  0.57651424 -1.1727950  0.8789300  0.40473703 #>  [769,]  0.7051245  0.9469624  0.44137425 -1.2610404  0.8147209  0.32921823 #>  [770,]  1.4422996 -0.8481756 -0.01776444 -0.3379312 -0.3097268 -0.07153452 #>  [771,] -1.1445849  1.0112092 -0.53030025  1.1764239 -0.8126012 -0.98833825 #>  [772,]  0.7074356 -1.0549504  0.45126881  0.7977854  0.8198669  0.33491001 #>  [773,]  0.8243142  0.9933567 -0.78642309 -0.9460563 -0.9088254 -1.34035584 #>  [774,] -0.6695596  1.1916690 -0.01402402 -0.3169131 -0.2896126 -0.05958380 #>  [775,] -1.0676894 -0.9680751 -0.33104871  1.3370331  1.4068196  1.45648605 #>  [776,]  0.6934499 -1.0614214  0.39416879 -1.3003836 -1.2674849  0.30164944 #>  [777,]  0.6082455 -1.1049050  0.16215561  0.6041673 -1.6311644  0.15179426 #>  [778,] -0.6586451 -0.8349460 -0.01254622 -0.3074720 -0.2805971 -0.05466868 #>  [779,] -0.7220365 -0.8587769 -0.02338260 -0.3641178 -0.3348670 -0.08846792 #>  [780,] -1.2718187 -1.0213593 -1.08309941  0.9690067  1.0047070  0.58250700 #>  [781,] -0.8804225 -0.9125547 -0.08962902 -0.5244909 -0.4904615 -0.25001641 #>  [782,]  0.8004769 -1.0157754  1.04232139 -0.9985454  1.0399153  0.63976949 #>  [783,] -1.2648142  0.9807448 -1.04332219  0.9789045 -0.9847943  0.59960455 #>  [784,]  0.7939114  0.9819896  0.98575387 -1.0137939  1.0235654  0.61275574 #>  [785,]  0.8554875  1.0047138 -0.61155442 -0.8835926 -0.8461769 -1.10350562 #>  [786,]  0.8676397  1.0090633 -0.55581757  1.1615028 -0.8235200  0.97569445 #>  [787,] -0.9780948  1.0610804 -0.18281145 -0.6365233 -0.6005097 -0.43381471 #>  [788,]  0.5759501  0.8900586  0.11204748  0.5464578  0.5519643  0.11406171 #>  [789,] -0.9159032  1.0826454 -0.11713846 -0.5640430 -0.5292011 -0.30750289 #>  [790,]  0.8741031  1.0113595  1.89193201  1.1774745  1.2317651  1.01437368 #>  [791,] -0.9556343  1.0686566 -0.15618791 -0.6098858 -0.5742574 -0.38410863 #>  [792,]  0.5967335  0.8997743  0.14246521  0.5832930 -1.6922534  0.13733644 #>  [793,] -1.3825579 -1.0478108  0.52441846 -1.2033549 -1.1687656 -2.65845175 #>  [794,] -0.8904000  1.0920494 -0.09674002 -0.5354805 -0.5012125 -0.26521900 #>  [795,]  0.7650306  0.9709083 -1.30396302  0.9213748  0.9531242  0.50464585 #>  [796,]  0.6733882  0.9337003  0.32307418  0.7285634  0.7456326  0.25865261 #>  [797,] -1.6272705  0.9079070  0.17384345  0.6156966 -1.5992387  0.16018624 #>  [798,] -1.1681642 -0.9951101 -0.60886559  1.1330986 -0.8451186  0.90929548 #>  [799,]  1.0002751 -0.9487702 -0.21201382 -0.6626664 -0.6263236 -0.48648061 #>  [800,] -0.9396728  1.0741835 -0.13934355 -0.5912725 -0.5559441 -0.35167038 #>  [801,]  0.5608937 -1.1326733  0.09363940  0.5204594  0.5245352  0.09928348 #>  [802,] -0.8179877 -0.8922277 -0.05445292 -0.4580948 -0.4257342 -0.17007294 #>  [803,]  0.5814048 -1.1202828  0.11943660 -1.7984996  0.5620669  0.11983503 #>  [804,] -1.0988802 -0.9766499  2.48532054 -0.7886235 -0.7513185 -0.79836280 #>  [805,]  0.9567897 -0.9617732 -0.28651304 -0.7191432  1.4657470  1.62862192 #>  [806,]  0.7664032  0.9714415  0.77626348  0.9244191 -1.0455686 -1.96306785 #>  [807,]  0.6676898 -1.0737985  0.30499803  0.7172587 -1.3632539  0.24739094 #>  [808,]  0.8347764  0.9972010 -0.72201493 -0.9243527 -0.8870356  0.79702503 #>  [809,] -0.7603423 -0.8724807 -0.03318906 -0.4004547 -0.3698878 -0.11598056 #>  [810,]  0.7716826 -1.0272361 -1.22967813  0.9361709  0.9691348  0.52805855 #>  [811,]  0.8826634 -0.9858214 -0.49478769 -0.8341806 -0.7967610  1.06750232 #>  [812,] -1.2651685 -1.0197208  0.95665961 -1.0220767  1.0148934  0.59872549 #>  [813,]  1.0786561 -0.9271008 -0.12717068 -0.5767732  1.8460515 -0.32767355 #>  [814,] -0.7858148  1.1346484 -0.04149099 -0.4254885  2.5374248 -0.13783202 #>  [815,]  0.9947666 -0.9503761 -0.22009637 -0.6694346 -0.6330142 -0.50075858 #>  [816,] -0.9348415 -0.9294712 -0.13456113 -0.5856905 -0.5504572 -0.34230169 #>  [817,] -1.0254232  1.0458352 -0.25179303 -0.6943496  1.5205191  1.79967941 #>  [818,] -0.8801879  1.0959142 -0.08946732 -0.5242337 -0.4902101 -0.24966761 #>  [819,]  0.9699989  1.0441214 -0.26109604  1.4260746 -0.6644818 -0.57146184 #>  [820,] -0.9812368 -0.9433618 -0.18682728 -0.6402910 -0.6042270 -0.44116445 #>  [821,]  0.6792843  0.9361966  0.34273118  0.7403454  0.7582457  0.27073818 #>  [822,] -1.4762822 -1.0690719  0.33626467 -1.3577269  0.7541549  0.26678022 #>  [823,]  0.9754886  1.0459276 -0.25130131 -0.6939811  1.5213635 -0.55481536 #>  [824,]  0.8949400  1.0186827 -0.45058454 -0.8132450 -0.7758636 -0.87138060 #>  [825,] -1.2169666 -1.0076618  1.24466410  1.0508952 -0.9143644  0.73383091 #>  [826,]  0.5545662  0.8798049  0.08671151  0.5097065  0.5132088  0.09355509 #>  [827,]  0.8375185 -1.0018002 -0.70614994  1.0883863  1.1344867 -1.23329681 #>  [828,] -0.7622870 -0.8731635 -0.03376842 -0.4023414 -0.3717103 -0.11754285 #>  [829,] -1.2001703 -1.0033820 -0.73123127  1.0781176 -0.8902367 -1.26703046 #>  [830,] -1.0500438 -0.9631469 -0.29570365 -0.7253368  1.4526623  1.58934602 #>  [831,]  0.6008903  0.9016893  0.14932570 -1.6926437  0.5988742  0.14242236 #>  [832,] -1.4016478 -1.0522206  0.47789029 -1.2341073  0.8333224  0.35008568 #>  [833,] -0.8218200  1.1191869 -0.05620492 -0.4620520 -0.4295804 -0.17428845 #>  [834,] -0.9768757 -0.9420757 -0.18127312 -0.6350640 -0.5990702 -0.43098960 #>  [835,] -0.8902573 -0.9156646 -0.09663507 -0.5353227 -0.5010580 -0.26499653 #>  [836,]  0.7908674  0.9808350 -1.04120126 -1.0209857  1.0160275  0.60054867 #>  [837,]  0.8575859 -0.9945619  1.66254463  1.1368568 -0.8421974 -1.08943489 #>  [838,]  0.7176432 -1.0503320  0.49726505  0.8190962  0.8427813  0.36100972 #>  [839,]  0.8366918 -1.0021032  1.40668693 -0.9204626  1.1323331 -1.23969293 #>  [840,] -0.9117811 -0.9223884 -0.11361271 -0.5593805 -0.5246278 -0.30032213 #>  [841,] -0.8859758 -0.9143136 -0.09352971 -0.5305947 -0.4964315 -0.25838824 #>  [842,] -1.3323388 -1.0360047 -1.48407066 -1.1241517 -1.0884501  0.45660778 #>  [843,] -1.0004335  1.0537674 -0.21303396 -0.6635309 -0.6271780  2.04796571 #>  [844,] -1.1021248  1.0229842 -0.41048080 -0.7929137 -0.7555930 -0.81078866 #>  [845,]  0.6344642 -1.0907163  0.21582820 -1.5314967 -1.5039420  0.18934925 #>  [846,]  0.5747839  0.8895063  0.11051920 -1.8368062  0.5498156  0.11285699 #>  [847,] -0.9108406 -0.9220969 -0.11282111  1.7910902 -0.5235870 -0.29870301 #>  [848,]  0.5302194  0.8677908  0.06397001  0.4692899  0.4707355  0.07394905 #>  [849,]  0.9636882  1.0420363 -0.27290135 -0.7096987  1.4861495  1.69107903 #>  [850,] -1.2727721  0.9788627  0.91860076 -1.0334086 -0.9967512 -1.72346942 #>  [851,]  0.8224276 -1.0073944 -0.79872639  1.0525723 -0.9128411  0.73716958 #>  [852,]  0.9820190  1.0480670 -0.24019419 -0.6855126 -0.6489203 -0.53575912 #>  [853,]  0.5814048 -1.1202828  0.11943660 -1.7984996  0.5620669  0.11983503 #>  [854,] -0.8355287 -0.8980442 -0.06287114 -0.4763341  2.2549194 -0.19006571 #>  [855,]  0.7718647 -1.0271619 -1.22771362  0.9365775  0.9695750 -1.89138986 #>  [856,]  0.9247959  1.0289724 -0.36075897 -0.7655887 -0.7283869 -0.73375672 #>  [857,] -0.9114465  1.0842639 -0.11333052 -0.5590028 -0.5242574 -0.29974525 #>  [858,]  0.6339986  0.9166226  0.21475749 -1.5335668  0.6639808  0.18862257 #>  [859,] -0.7203860 -0.8581753 -0.02302286  2.7579540 -0.3333956 -0.08741372 #>  [860,]  0.9748805  1.0457279 -0.25236511 -0.6947777 -0.6580942 -0.55663036 #>  [861,] -0.9166382 -0.9238904 -0.11777680 -0.5648761  1.8867263 -0.30879770 #>  [862,] -1.2170643 -1.0076865  1.24398745 -0.9517102 -0.9145057  0.73352244 #>  [863,]  0.7941702  0.9820876 -1.01221446  0.9869856 -0.9763646  0.61380275 #>  [864,]  1.0336184  1.0646340 -0.16977785 -0.6238637 -0.5880268 -0.40970240 #>  [865,] -1.1756243  1.0029567 -0.63570028  1.1199027 -0.8555341  0.87947392 #>  [866,] -1.0278764  1.0450701 -0.25590271 -0.6974096 -0.6607011  1.77729253 #>  [867,]  0.7781921  0.9759936  0.86084547 -1.0517965 -1.0153042  0.55181313 #>  [868,]  0.8487194  1.0022727 -0.64536612 -0.8966021  1.1638617  0.86927233 #>  [869,] -1.2542260  0.9832730  1.01465249  0.9941654  1.0319996 -1.59591714 #>  [870,] -0.9249326 -0.9264427 -0.12518860 -0.5743176 -0.5392854 -0.32371790 #>  [871,]  0.9073358 -0.9775330 -0.41048836  1.2611650 -0.7555969  1.23334948 #>  [872,] -0.8764425  1.0973464 -0.08691949 -0.5201362  2.0567487 -0.24415250 #>  [873,] -0.8433977 -0.9006261 -0.06699359 -0.4846219 -0.4515464 -0.19963148 #>  [874,] -1.0713173  1.0319051 -0.33874490 -0.7526078 -0.7154779 -0.69889268 #>  [875,]  0.5620579 -1.1319543  0.09496420  0.5224491  0.5266323  0.10036777 #>  [876,] -0.9065792  1.0860434 -0.10929291 -0.5535220 -0.5188838 -0.29145482 #>  [877,] -1.0139615  1.0494416 -0.23332968 -0.6801352 -0.6435985  1.90882656 #>  [878,]  0.7755401 -1.0256686  0.84116374 -1.0584245 -1.0219953  0.54203321 #>  [879,]  0.9438853 -0.9657812 -0.31412259  1.3562281  1.4279456  1.51680163 #>  [880,]  0.6500609  0.9236731  0.25442808 -1.4645631 -1.4352812  0.21503605 #>  [881,] -1.6312632  0.9072259  0.17098093 -1.6315172  0.6223559  0.15814308 #>  [882,] -1.4784455  0.9349714  0.33294517  0.7345432 -1.3297287  0.26474175 #>  [883,]  0.7326491  0.9581332  0.57210934  0.8508895  0.8770175  0.40234401 #>  [884,] -0.9541877  1.0691525 -0.15459310 -0.6081881 -0.5725859 -0.38107272 #>  [885,] -1.2224298  0.9910361 -0.82818503  1.0422689  1.0842704  0.71681336 #>  [886,]  1.2055826  1.1160137 -0.05984852 -0.4700022 -0.4373125 -0.18296151 #>  [887,]  1.1029412 -0.9208007 -0.10936434 -0.5536202 -0.5189801 -0.29160208 #>  [888,]  0.9263446 -0.9713455 -0.35669235  1.3102123  1.3773240 -0.72735354 #>  [889,]  0.6288864  0.9143527  0.20329471 -1.5565852 -1.5297136  0.18079035 #>  [890,]  0.8012381  0.9847562  1.04905543  1.0032099 -0.9598597  0.64296287 #>  [891,] -1.5236020 -1.0794519  0.27154844  0.6949819  0.7097335  0.22614033 #>  [892,]  0.6579034 -1.0786653  0.27596277  0.6980324 -1.4025416  0.22897740 #>  [893,]  0.9043451  1.0219495 -0.41977389  1.2535261 -0.7604124 -0.82494460 #>  [894,]  1.3283542 -0.8698250 -0.03102455 -0.3931862 -0.3628705 -0.11008795 #>  [895,]  0.7496115 -1.0364059  0.66807505 -1.1267701 -1.0911013  0.45359371 #>  [896,]  0.5831841 -1.1192349  0.12193505  0.5591543 -1.7687176  0.12176861 #>  [897,]  0.8325541  0.9963872 -0.73517363  1.0765443 -0.8915972  0.78597275 #>  [898,]  1.0114625  1.0575923 -0.19662477  1.5402583  1.6311562 -0.45894760 #>  [899,] -1.0530752 -0.9639976 -0.30153583  1.3713758 -0.6922203  1.56552611 #>  [900,]  1.2021266  1.1150329 -0.06102394 -0.4724916 -0.4397348 -0.18573362 #>  [901,]  0.8480481 -0.9979743 -0.64883539 -0.8979086 -0.8605179  0.86567655 #>  [902,] -1.0796232  1.0294673 -0.35694169 -0.7633800 -0.7261897 -0.72774663 #>  [903,]  0.6782330  0.9357526  0.33915336 -1.3545763  0.7559893  0.26855042 #>  [904,] -1.3730414  0.9563918 -1.81969520  0.8416396  0.8670508  0.39001784 #>  [905,] -0.9096328  1.0849255 -0.11181142 -0.5569576 -0.5222520 -0.29663406 #>  [906,]  0.6998649 -1.0584323  0.41954349  0.7821455  0.8030678  0.31655642 #>  [907,]  0.6943240  0.9424965  0.39754765  0.7707887 -1.2644161  0.30364672 #>  [908,]  0.6024716 -1.1081373  0.15200824  0.5936557 -1.6613774  0.14439652 #>  [909,]  0.9600401 -0.9607748 -0.28000479  1.3992488 -0.6778084 -0.60320427 #>  [910,] -1.4198233 -1.0563806  0.43794402  0.7913174 -1.2301369  0.32723828 #>  [911,]  0.5536027  0.8793364  0.08569583  0.5080780  0.5114943  0.09270670 #>  [912,]  0.9859992  1.0493662 -0.23370101 -0.6804290 -0.6438892 -0.52452656 #>  [913,]  0.8338405  0.9968585 -0.72752322 -0.9262628  1.1249198  0.79235537 #>  [914,]  0.8399219  0.9990795 -0.69257239 -0.9139593 -0.8766090  0.82309790 #>  [915,] -1.0562503  1.0363910  3.24939799 -0.7332455  1.4362826 -0.64891599 #>  [916,]  0.8220868  0.9925339 -0.80097270  1.0517697  1.0946075  0.73557066 #>  [917,]  0.6186441 -1.0991837  0.18189062 -1.6043372  0.6333853  0.16588968 #>  [918,] -1.4408664  0.9423729  0.39639630  0.7701818 -1.2654580  0.30296658 #>  [919,] -0.8896055  1.0923480 -0.09615669  1.8705517 -0.5003523 -0.26398170 #>  [920,] -0.7311321 -0.8620757 -0.02545231 -0.3726029 -0.3430310 -0.09446364 #>  [921,] -0.9511402 -0.9344044 -0.15127862 -0.6046185 -0.5690723 -0.37474033 #>  [922,] -1.0295404 -0.9573478 -0.25872251  1.4296162 -0.6627606  1.76229736 #>  [923,] -0.7323137  1.1594174 -0.02573230 -0.3737117  2.9061440 -0.09526609 #>  [924,]  0.5545662  0.8798049  0.08671151  0.5097065  0.5132088  0.09355509 #>  [925,] -0.7203860 -0.8581753 -0.02302286  2.7579540 -0.3333956 -0.08741372 #>  [926,]  1.0405207 -0.9373774 -0.16229220 -0.6162697 -0.5805442 -0.39566478 #>  [927,] -1.5370444  0.9239073  0.25585924 -1.4623335  0.6978384  0.21597066 #>  [928,] -0.7703208  1.1415896 -0.03625423 -0.4101787 -0.3792849 -0.12417856 #>  [929,]  0.6949530 -1.0607178  0.39999372 -1.2952128  0.7922579  0.30509022 #>  [930,] -1.0670699  1.0331613 -0.32974942 -0.7471262  1.4083917 -0.68449964 #>  [931,] -1.3720730 -1.0453707  0.55217579  0.8427330  0.8682287 -2.55452667 #>  [932,]  0.5688912 -1.1277727  0.10306633  0.5341969  0.5390211  0.10692654 #>  [933,]  1.0766878 -0.9276195 -0.12875410  1.7279666 -0.5436038 -0.33082353 #>  [934,] -0.9070174 -0.9209098 -0.10965132 -0.5540144 -0.5193665 -0.29219350 #>  [935,] -0.6920588 -0.8476963 -0.01754370 -0.3367855 -0.3086289 -0.07084631 #>  [936,] -0.8411194 -0.8998803 -0.06577701 -0.4822157 -0.4492023 -0.19682277 #>  [937,]  0.9142067  1.0253496 -0.39003452  1.2787949  1.3428086 -0.77938380 #>  [938,]  0.8286326 -1.0050781 -0.75906995 -0.9370035  1.1114398  0.76677302 #>  [939,]  0.6986009  0.9442706  0.41443650 -1.2827945 -1.2495636  0.31357303 #>  [940,]  0.8781669  1.0127972 -0.51220807  1.1875677  1.2428079  1.03932201 #>  [941,]  0.7661582  0.9713464 -1.29101538  0.9238755  0.9558293 -1.96635771 #>  [942,]  0.8444829  1.0007379 -0.66762140 -0.9048964  1.1527089 -1.18094110 #>  [943,]  1.0231871  1.0613318 -0.18185565 -0.6356177  1.6677332 -0.43206003 #>  [944,]  0.7015112  0.9454736  0.42627537 -1.2730187  0.8067066  0.32047650 #>  [945,]  0.8395144 -1.0010702  1.43915251 -0.9147759  1.1396946  0.82100805 #>  [946,]  0.8790556  1.0131110  1.96575672  1.1897801  1.2452291 -0.95708125 #>  [947,] -0.7858512 -0.8813428 -0.04150405 -0.4255249  2.5371980 -0.13786555 #>  [948,] -1.0373417  1.0421404 -0.27229901  1.4098945 -0.6724577 -0.59032905 #>  [949,]  0.7920076  0.9812678 -1.03108801  0.9820456 -0.9815008  0.60509784 #>  [950,] -1.4767121  0.9353074  0.33560195  0.7361306 -1.3267306  0.26637362 #>  [951,]  1.0425096  1.0674303 -0.16020601 -0.6141079  1.7288625 -0.39172665 #>  [952,]  1.1169978  1.0902316 -0.10037201 -0.5408678 -0.5064864 -0.27288535 #>  [953,]  0.8161918 -1.0097453 -0.84099453  1.0379330  1.0795543  0.70835727 #>  [954,]  0.7179531  0.9522058  0.49872152 -1.2198884 -1.1855622  0.36182698 #>  [955,] -1.1530567 -0.9911510 -0.55746832 -0.8616473  1.2132773  0.97345989 #>  [956,]  0.9332782 -0.9691297 -0.33911901  1.3283151 -0.7157022 -0.69948937 #>  [957,]  1.1579040 -0.9071883 -0.07866539 -0.5062296 -0.4726197 -0.22602547 #>  [958,] -0.9343225 -0.9293131 -0.13405576 -0.5850923 -0.5498693 -0.34130731 #>  [959,] -0.7479279 -0.8680931 -0.02968634  2.5739650 -0.3583549 -0.10639828 #>  [960,] -0.9570544 -0.9361799 -0.15776724 -0.6115547  1.7364108 -0.38710817 #>  [961,]  0.7349676  0.9590607  0.58448778  0.8558509  0.8823654  0.40905825 #>  [962,]  0.7634804  0.9703054 -1.32200643 -1.0893932 -1.0532841  0.49931229 #>  [963,]  1.0674489  1.0751867 -0.13649545  1.7007804 -0.5526930 -0.34609996 #>  [964,] -1.1916374  0.9988096 -0.69672311  1.0923664 -0.8780979  0.81930407 #>  [965,]  0.9101206  1.0239439 -0.40205330 -0.7884588 -0.7511544  1.25330830 #>  [966,] -0.7742105  1.1398300 -0.03751274 -0.4139981 -0.3829786 -0.12749845 #>  [967,]  0.6818135  0.9372627  0.35147032 -1.3415153 -1.3094364  0.27606036 #>  [968,]  1.1967337  1.1134986 -0.06291150  2.0990009 -0.4435557 -0.19016004 #>  [969,] -0.7505914 -0.8690387 -0.03041000 -0.3910554 -0.3608145 -0.10839812 #>  [970,]  0.6184849 -1.0992703  0.18157380 -1.6050970 -1.5795998  0.16566623 #>  [971,] -0.7852581 -0.8811390 -0.04129226  2.3533065 -0.3935633 -0.13732132 #>  [972,]  0.9234186 -0.9722871 -0.36442023  1.3026069 -0.7304788  1.35225104 #>  [973,]  1.2595749 -0.8841039 -0.04447772 -0.4335979 -0.4019579 -0.14544234 #>  [974,] -0.7847985  1.1350982 -0.04112881 -0.4244765  2.5437509 -0.13690085 #>  [975,]  0.6718793  0.9330591 -3.14266570  0.7255622  0.7424211  0.25563108 #>  [976,] -1.0352793 -0.9589790 -0.26865226 -0.7066803 -0.6698876 -0.58420714 #>  [977,] -0.8357004 -0.8981008 -0.06295874 -0.4765143 -0.4436502 -0.19027042 #>  [978,]  1.2229028 -0.8921404 -0.05433525 -0.4578258 -0.4254727 -0.16978871 #>  [979,] -0.7313873  1.1598670 -0.02551257 -0.3728423 -0.3432615 -0.09463652 #>  [980,]  0.6135861 -1.1019508  0.17205008  0.6139650  0.6234587  0.15890711 #>  [981,]  0.9374038 -0.9678214 -0.32913477 -0.7467477 -0.7096536 -0.68351295 #>  [982,]  0.7340657  0.9587001  0.57964580 -1.1710707  0.8802833  0.40643577 #>  [983,]  0.7912282  0.9809720 -1.03798936  0.9802679 -0.9833621  0.60198494 #>  [984,] -1.2654283  0.9805990  0.95532975  0.9780305  1.0144925 -1.67201183 #>  [985,] -1.1889500 -1.0004997 -0.68614684 -0.9116484  1.1437833 -1.20619818 #>  [986,]  1.1106054  1.0883169 -0.10435182  1.8294570 -0.5121107 -0.28121398 #>  [987,] -0.9775961  1.0612461 -0.18218088  1.5725095 -0.5999207 -0.43265732 #>  [988,]  0.6718122  0.9330306  0.31798582  0.7254288  0.7422784  0.25549729 #>  [989,]  1.1748824 -0.9031530 -0.07127746 -0.4928495 -0.4595656 -0.20943138 #>  [990,]  0.8138299  0.9894702  1.16595023 -0.9686047 -0.9314878  0.69768558 #>  [991,] -0.9899279  1.0571797 -0.19832945 -0.6507657 -0.6145669  2.16440407 #>  [992,] -1.0231299  1.0465525 -0.24800244 -0.6914948 -0.6548430  1.82091025 #>  [993,] -0.9613305  1.0667134 -0.16260506 -0.6165921 -0.5808619 -0.39625437 #>  [994,]  0.8759174  1.0120019 -0.52118673 -0.8460410  1.2366894  1.02545151 #>  [995,] -1.5492507 -1.0849849  0.24250825  0.6739568  0.6872975  0.20720476 #>  [996,]  0.7927539 -1.0187959 -1.02452997  0.9837490  1.0206958  0.60809031 #>  [997,]  0.9415294 -0.9665207 -0.31948659 -0.7407378 -0.7036825  1.49707436 #>  [998,]  0.7373079 -1.0416721  0.59721417  0.8608726  0.8877798  0.41592768 #>  [999,] -1.3799815  0.9549162  0.53108794 -1.1992316  0.8586800  0.37985224 #> [1000,] -1.1358672  1.0135798 -0.50352996 -0.8381583 -0.8007342  1.05314417 #> [1001,]  0.8306253  0.9956797 -0.74681730 -0.9328711 -0.8955851  0.77648145 #> [1002,] -1.2331596 -1.0117493  1.13804265 -0.9749992 -0.9379189  0.68473883 #> [1003,] -0.8839998  1.0944648 -0.09212549  1.8924372  2.0230496 -0.25538373 #> [1004,]  1.1701401  1.1058614 -0.07325764 -0.4965313 -0.4631561 -0.21391583 #> [1005,] -1.6113700 -1.0981270  0.18580217  0.6269228 -1.5693063  0.16864122 #> [1006,] -1.3198667 -1.0330249  0.71815636  0.9050891 -1.0689296  0.47966658 #> [1007,] -1.6541264  0.9033670  0.15559452  0.5974275  0.6059097  0.14702346 #> [1008,]  0.8584119  1.0057644 -0.59757703 -0.8780613  1.1895717  0.92254790 #> [1009,] -1.1435454  1.0114907 -0.52704558  1.1783926  1.2327694  1.01662681 #> [1010,] -1.1100047  1.0207546 -0.43077978 -0.8033770 -0.7660222 -0.84161802 #> [1011,] -1.0973785  1.0243372 -0.39865208  1.2712270  1.3345001 -0.79266455 #> [1012,]  0.8704891  1.0100770  1.83956402 -0.8557748 -0.8183410  0.99259632 #> [1013,] -0.8212798 -0.8933259 -0.05595508 -0.4614932 -0.4290372 -0.17368915 #> [1014,] -1.6939609 -1.1150667  0.13242668  0.5718312  0.5787916  0.12979287 #> [1015,]  0.6878085  0.9397789  0.37294728  0.7575313  0.7766605  0.28901458 #> [1016,]  0.9540836  1.0388446 -0.29206426 -0.7229012  1.4577804  1.60463671 #> [1017,] -1.7311464  0.8908632  0.11430972  0.5494326  0.5551067  0.11583819 #> [1018,]  1.1030153 -0.9207818 -0.10931456 -0.5535517  1.9271055 -0.29149945 #> [1019,]  0.6666712 -1.0743007  0.30185936 -1.3981196  0.7313873  0.24542028 #> [1020,]  0.9521922 -0.9631931 -0.29601737  1.3782730 -0.6885986  1.58804357 #> [1021,] -0.7952889 -0.8845710 -0.04500043 -0.4349761 -0.4032939 -0.14676212 #> [1022,] -1.5823007 -1.0920216  0.21019223  0.6482803  0.6599412  0.18551490 #> [1023,]  0.6443781 -1.0855493  0.23973408  0.6718541 -1.4597361  0.20536974 #> [1024,] -0.8954705 -0.9173033 -0.10053436 -0.5411052 -0.5067189 -0.27322654 #> [1025,] -0.8537356 -0.9039927 -0.07275792  2.0177193 -0.4622566 -0.21278675 #> [1026,]  1.2855700 -0.8785901 -0.03872892 -0.4176013 -0.3864647 -0.13068277 #> [1027,]  0.8408344 -1.0005886 -0.68749610 -0.9121349 -0.8747794 -1.20803163 #> [1028,] -0.6920588 -0.8476963 -0.01754370 -0.3367855 -0.3086289 -0.07084631 #> [1029,]  0.9719389  1.0447605 -0.25758544 -0.6986522  1.5107291 -0.56551201 #> [1030,] -1.0342949  1.0430796 -0.26692631  1.4175463 -0.6686625  1.72027272 #> [1031,]  0.7009891 -1.0579121  0.42413079  0.7844591 -1.2413849  0.31922921 #> [1032,] -0.7603423 -0.8724807 -0.03318906 -0.4004547 -0.3698878 -0.11598056 #> [1033,]  1.0591344 -0.9323010 -0.14392182 -0.5964870 -0.5610719 -0.36057100 #> [1034,]  0.8687195 -0.9906407 -0.55115348  1.1641643  1.2172092 -1.01825515 #> [1035,]  0.6211697  0.9109019  0.18698137  0.6280010 -1.5664892  0.16946813 #> [1036,] -0.8450388  1.1096778 -0.06788179 -0.4863586  2.2063434 -0.20167476 #> [1037,] -0.7022172 -0.8514878 -0.01936411 -0.3459384 -0.3174049 -0.07646584 #> [1038,]  1.3832910 -0.8590963 -0.02357575 -0.3649322 -0.3356502 -0.08903240 #> [1039,]  0.7804525 -1.0236871 -1.13904455 -1.0461979  0.9904386  0.56026083 #> [1040,]  1.0183781  1.0598017 -0.18775378 -0.6411519 -0.6050765 -0.44285501 #> [1041,]  0.7860374  0.9789965  0.92138274  0.9684666 -0.9958956  0.58158312 #> [1042,]  0.8929820 -0.9823186 -0.45732061  1.2246959  1.2834659 -0.88143547 #> [1043,]  0.7115073 -1.0530978  0.46916082  0.8062552 -1.2063153 -2.89745001 #> [1044,]  0.8798856 -0.9867735 -0.50546776 -0.8390331 -0.8016081  1.05002124 #> [1045,]  0.9598751  1.0407718 -0.28033099  1.3988064  1.4748555 -0.60374751 #> [1046,] -1.0703574  1.0321884 -0.33669395 -0.7513674 -0.7142449  1.43756896 #> [1047,]  0.6913275  0.9412488  0.38606708  0.7646783  0.7843242 -3.36876707 #> [1048,]  0.9506822  1.0377090 -0.29921746 -0.7276677  1.4477969 -0.63496246 #> [1049,] -1.2737279 -1.0218286 -1.09416271  0.9663357  1.0018113 -1.73025960 #> [1050,]  0.7920245 -1.0190831  0.96998983  0.9820843  1.0188898  0.60516562 #> [1051,]  0.5545662  0.8798049  0.08671151  0.5097065  0.5132088  0.09355509 #> [1052,]  0.6542910 -1.0804857  0.26585810 -1.4471867  0.7054775  0.22246769 #> [1053,] -0.9770215  1.0614372 -0.18145659  1.5742118 -0.5992423 -0.43132682 #> [1054,] -1.1194782  1.0181014 -0.45631112  1.2254312 -0.7786514  1.13645306 #> [1055,]  0.8868250 -0.9844023 -0.47926831 -0.8269915 -0.7895823  1.09413147 #> [1056,]  1.3105031 -0.8734366 -0.03400283 -0.4030981 -0.3724413 -0.11817321 #> [1057,]  0.5948777  0.8989164  0.13949022 -1.7242591  0.5873970  0.13511381 #> [1058,] -1.3800978 -1.0472394  0.53078472  0.8337380 -1.1647671  0.37968455 #> [1059,] -0.7940610 -0.8841525 -0.04453179 -0.4337410 -0.4020966 -0.14557901 #> [1060,]  0.7465589 -1.0377019 -1.53879682  0.8808534 -1.0997019  0.44400109 #> [1061,] -1.2597069  0.9819608  0.98511516 -1.0139723 -0.9771570  0.61244875 #> [1062,]  1.0836994  1.0801734 -0.12321446 -0.5718435 -0.5368564 -0.31976395 #> [1063,]  0.5536027  0.8793364  0.08569583  0.5080780  0.5114943  0.09270670 #> [1064,]  0.8170122 -1.0094347  1.19718954 -0.9616738 -0.9245192  0.71209492 #> [1065,] -1.2562978 -1.0175257  1.00336955  0.9911506 -0.9720748 -1.60977481 #> [1066,]  0.8443389  1.0006856  1.49612494 -0.9051805  1.1523307  0.84602602 #> [1067,] -0.8492938 -0.9025497 -0.07023146 -0.4908745  2.1851234 -0.20705116 #> [1068,] -0.9035353  1.0871626 -0.10683068  1.8178286 -0.5155367 -0.28636507 #> [1069,]  0.8854759 -0.9848613 -0.48423715 -0.8293114  1.2627879 -0.92128454 #> [1070,]  0.8295027  0.9952674 -0.75369202  1.0692949  1.1136864 -1.29701723 #> [1071,]  0.8700318 -0.9901829  1.83302611 -0.8566028 -0.8191689 -1.01023601 #> [1072,] -1.2679754  0.9799953  0.94240345  0.9744184 -0.9895357  0.59181544 #> [1073,]  0.7773917  0.9756861  0.85486401 -1.0537903 -1.0173167  0.54884634 #> [1074,] -1.2642165 -1.0194857 -1.03998637  0.9797563 -0.9838990  0.60109101 #> [1075,]  1.1224887  1.0918701 -0.09709216 -0.5360092 -0.5017299 -0.26596511 #> [1076,]  0.7140332  0.9506106  0.48056139  0.8115300  0.8346426  0.35159761 #> [1077,]  1.1844806  1.1099945 -0.06745464 -0.4855255 -0.4524268 -0.20069289 #> [1078,]  0.9042016  1.0218998 -0.42022545 -0.7979826 -0.7606446 -0.82563063 #> [1079,] -1.0435232  1.0402459 -0.28348349  1.3945642 -0.6801894  1.64206243 #> [1080,] -0.7024932  1.1742736 -0.01941572 -0.3461886 -0.3176449 -0.07662336 #> [1081,] -1.0382636  1.0418569 -0.27394278 -0.7104333 -0.6736081  1.68610631 #> [1082,]  1.0075510  1.0563381 -0.20185471 -0.6538873  1.6190405 -0.46835768 #> [1083,]  1.0174476 -0.9438370 -0.18892027 -0.6422313 -0.6061418 -0.44498080 #> [1084,]  0.9891079  1.0503783 -0.22876968 -0.6764990  1.5624975 -0.51594851 #> [1085,]  0.6195506 -1.0986909  0.18370409  0.6249921  0.6351724  0.16716699 #> [1086,] -0.8501561  1.1076279 -0.07071603 -0.4917921 -0.4585346 -0.20815480 #> [1087,]  0.8380171 -1.0016176  1.42185153  1.0895789 -0.8804471 -1.22945792 #> [1088,] -0.7417074  1.1549004 -0.02805320 -0.3825806 -0.3526421 -0.10184384 #> [1089,]  1.1511734 -0.9088094 -0.08183457 -0.5116894 -0.4779510 -0.23303413 #> [1090,]  1.0299560  1.0634772 -0.17391038  1.5924782 -0.5920568 -0.41739166 #> [1091,]  0.6024716 -1.1081373  0.15200824  0.5936557 -1.6613774  0.14439652 #> [1092,] -0.8960874 -0.9174969 -0.10100460 -0.5417915 -0.5073909 -0.27421412 #> [1093,] -0.7866104 -0.8816035 -0.04177646 -0.4262816 -0.3948685 -0.13856463 #> [1094,]  1.3633583 -0.8629236 -0.02601195 -0.3748105 -0.3451565 -0.09606556 #> [1095,] -1.0521132  1.0376374 -0.29967458  1.3736840  1.4471693 -0.63571233 #> [1096,]  0.5759501  0.8900586  0.11204748  0.5464578  0.5519643  0.11406171 #> [1097,]  1.3809418 -0.8595436 -0.02384881 -0.3660754 -0.3367498 -0.08982864 #> [1098,]  1.0603264  1.0729845 -0.14282921  1.6799562 -0.5598589 -0.35845276 #> [1099,] -1.7123169  0.8938520  0.12310130  0.5606018  0.5669119  0.12266811 #> [1100,] -1.0186905 -0.9542466 -0.24080243  1.4577608 -0.6493866 -0.53680776 #> [1101,] -1.2445717 -1.0146076 -0.93529013  1.0084026  1.0474584  0.65248195 #> [1102,]  0.6573194  0.9268195  0.27430745 -1.4349411  0.7117741  0.22791475 #> [1103,] -0.7577181  1.1473714 -0.03242065  2.5130994 -0.3674352 -0.11389895 #> [1104,] -1.7124054 -1.1187711  0.12305823  0.5605485  0.5668556  0.12263492 #> [1105,]  0.6632996  0.9293938  0.29166619 -1.4112250 -1.3806689  0.23898795 #> [1106,] -0.9602136 -0.9371253 -0.16132936 -0.6152745 -0.5795640 -0.39384866 #> [1107,] -0.8870811 -0.9146628 10.60185476 -0.5318134 -0.4976239 -0.26008130 #> [1108,]  0.9575401 -0.9615424 -0.28499527 -0.7181065  1.4679597 -0.61149970 #> [1109,] -1.4950267  0.9317834  0.30871411  0.7196218  0.7360664  0.24971820 #> [1110,]  1.0763844 -0.9276996 -0.12900014  1.7270708 -0.5438986 -0.33131220 #> [1111,]  1.2346249 -0.8895377 -0.05093443 -0.4498588  2.3938690 -0.16151246 #> [1112,]  1.0062947  1.0559346 -0.20356825  1.5258084 -0.6191344 -0.47142873 #> [1113,]  0.7583195  0.9682919 -1.38417466  0.9065564 -1.0671206  0.48188346 #> [1114,] -0.7323338 -0.8625094 -0.02573711 -0.3737307 -0.3441168 -0.09527983 #> [1115,]  0.9050925 -0.9782744 -0.41743077  1.2554333 -0.7592045  1.21746013 #> [1116,] -0.8989585  1.0888547 -0.10321755 -0.5449901 -0.5105236  3.58618656 #> [1117,] -1.1026907 -0.9776859 -0.41191087 -0.7936630 -0.7563396  1.23005504 #> [1118,]  0.9950476  1.0523060 -0.21967560  1.4945745 -0.6326703 -0.50001825 #> [1119,] -1.0737134  1.0311993 -0.34391126 -0.7557082  1.3916719 -0.70711974 #> [1120,]  1.1761149  1.1075877 -0.07077291  2.0329355 -0.4586393 -0.20828424 #> [1121,] -0.8936161  1.0908442 -0.09913224 -0.5390451 -0.5047017 -0.27027565 #> [1122,]  0.6829114  0.9377247 -2.81434315 -1.3375492  0.7660553  0.27839692 #> [1123,]  0.9003066  1.0205497 -0.43269748 -0.8043468 -0.7669891  1.18411395 #> [1124,]  0.8906247 -0.9831141 -0.46558442 -0.8205106  1.2769546 -0.89372499 #> [1125,] -0.6695596  1.1916690 -0.01402402 -0.3169131 -0.2896126 -0.05958380 #> [1126,]  1.0973877  1.0843337 -0.11316930  1.7895918 -0.5240455 -0.29941550 #> [1127,] -1.3955719 -1.0508216  0.49216499  0.8168059  0.8403174  0.35814368 #> [1128,] -1.0822107 -0.9720886 -0.36277792 -0.7667501  1.3707224 -0.73692962 #> [1129,]  1.0590866  1.0726001 -0.14396587 -0.5965365 -0.5611206 -0.36065631 #> [1130,]  1.0245737  1.0617721 -0.18019471  1.5771983  1.6720846 -0.42900587 #> [1131,]  0.9951575  1.0523416 -0.21951130 -0.6689508 -0.6325359 -0.49972909 #> [1132,] -0.9741997 -0.9412847 -0.17793537 -0.6318665  1.6780872 -0.42484107 #> [1133,]  0.7098753 -1.0538386  0.46191828  0.8028555 -1.2116571  0.34100451 #> [1134,]  0.6077592  0.9048335  0.16127935  0.6032788  0.6121163  0.15115968 #> [1135,]  0.5823548  0.8930782  0.12076516  0.5576921  0.5638355  0.12086435 #> [1136,]  0.6313441  0.9154455  0.20873857  0.6470595  0.6586418  0.18452216 #> [1137,] -0.9410040  1.0737179 -0.14068641 -0.5928147 -0.5574605 -0.35428782 #> [1138,] -1.2509036 -1.0161857  1.03305119 -1.0009712 -0.9640597  0.63536576 #> [1139,]  1.0338866 -0.9392154 -0.16947973 -0.6235660  1.7014519 -0.40914607 #> [1140,] -1.1545428 -0.9915420 -0.56235416 -0.8636919 -0.8262590  0.96691434 #> [1141,]  0.5302194  0.8677908  0.06397001  0.4692899  0.4707355  0.07394905 #> [1142,]  0.9143369  1.0253943 -0.38965833  1.2791302  1.3431766 -0.77880253 #> [1143,]  0.8664113  1.0086256 -0.56117862 -0.8632011 -0.8257681  0.96847998 #> [1144,]  0.9291654  1.0304589 -0.34941999 -0.7589769  1.3854053 -0.71586120 #> [1145,] -1.3844285  0.9539757 -1.92442234 -1.2063527 -1.1718102  0.37350404 #> [1146,]  0.5302194  0.8677908  0.06397001  0.4692899  0.4707355  0.07394905 #> [1147,]  0.8973405 -0.9808549 -0.44248075  1.2357180 -0.7718749  1.16382075 #> [1148,] -1.0561788 -0.9648668 -0.30760824 -0.7331542 -0.6961512 -0.64868599 #> [1149,]  0.5823244 -1.1197406  0.12072244  0.5576385  0.5637788  0.12083129 #> [1150,]  1.0221853  1.0610135 -0.18306654 -0.6367644 -0.6007475 -0.43428264 #> [1151,]  0.7380827 -1.0413371  0.60147909 -1.1593692  0.8895758 -2.39107268 #> [1152,] -0.9149782  1.0829805 -0.11633922 -0.5629951  1.8933185 -0.30587946 #> [1153,] -0.8623813 -0.9067866 -0.07789831 -0.5048841 -0.4713063 -0.22431952 #> [1154,]  0.6915499 -1.0623136 -2.58458403  0.7651311  0.7848099  0.29734516 #> [1155,] -0.6695596  1.1916690 -0.01402402 -0.3169131 -0.2896126 -0.05958380 #> [1156,] -1.1899896  0.9992330 -0.69022168 -0.9131157 -0.8757630  0.82526444 #> [1157,]  0.8340503 -1.0030741  1.37687123  1.0801071  1.1254644  0.79340017 #> [1158,]  0.9254506  1.0291954 -0.35903343  1.3078864 -0.7273958  1.36791091 #> [1159,]  1.2744527  1.1351637 -0.04107631  2.3566604 -0.3929777 -0.13676572 #> [1160,]  0.9866098 -0.9527756  4.29695531 -0.6796544 -0.6431227 -0.52282846 #> [1161,]  1.1779162  1.1081069 -0.07004288 -0.4905162 -0.4572907 -0.20662118 #> [1162,]  0.5545662  0.8798049  0.08671151  0.5097065  0.5132088  0.09355509 #> [1163,] -0.8212476  1.1194257 -0.05594025 -0.4614600 -0.4290049 -0.17365356 #> [1164,] -0.7120744  1.1694119 -0.02128204 -0.3549268 -0.3260336 -0.08225823 #> [1165,] -1.1866648 -0.9999104 -0.67726113 -0.9084266  1.1480253  0.83744855 #> [1166,]  0.7252511 -1.0469453 -1.87233491  0.8351460 -1.1627138  0.38151266 #> [1167,]  0.8890351 -0.9836522 -0.47125388  1.2147534  1.2725726  1.10849049 #> [1168,]  0.9038063 -0.9787006 -0.42147219  1.2521522 -0.7612848 -0.82752386 #> [1169,]  0.7111722 -1.0532497 -2.13827872  0.8055566  0.8282197  0.34428049 #> [1170,]  0.5302194  0.8677908  0.06397001  0.4692899  0.4707355  0.07394905 #> [1171,] -0.8144477  1.1222798 -0.05287617  2.2004453 -0.4221962 -0.16625272 #> [1172,]  0.6199543  0.9103557  0.18451659  0.6257417 -1.5724038  0.16773835 #> [1173,]  0.9185596 -0.9738594 -0.37768202  1.2900218 -0.7379321 -0.76023016 #> [1174,] -1.0253714  1.0458513 -0.25170694 -0.6942851 -0.6576063 -0.55550763 #> [1175,]  0.6080106  0.9049481  0.16173187  0.6037380  0.6126036  0.15148749 #> [1176,]  0.6917516  0.9414257  0.38767484 -1.3062642  0.7852505  0.29779983 #> [1177,]  0.5957513  0.8993205  0.14088399  0.5815275 -1.6976259  0.13615643 #> [1178,]  1.0046720  1.0554128 -0.20580633 -0.6573396 -0.6210600 -0.47543105 #> [1179,]  0.6306983  0.9151587  0.20729620  0.6458420  0.6573460  0.18353557 #> [1180,]  0.6631958  0.9293492  0.29135699 -1.4116316  0.7240685  0.23879205 #> [1181,] -1.0516020 -0.9635844 -0.29868936 -0.7273186 -0.6903582 -0.63409583 #> [1182,]  0.6765255  0.9350304  0.33341023  0.7348217 -1.3292017  0.26502762 #> [1183,]  0.8637997  1.0076935 -0.57277451  1.1520610 -0.8305787  0.95328551 #> [1184,]  0.9150539 -0.9750005  2.58001690 -0.7806544 -0.7433816 -0.77561115 #> [1185,] -1.3072397 -1.0299881  0.76648574 -1.0854912  0.9529805  0.50443868 #> [1186,]  0.8160279  0.9902878 -0.84213941 -0.9638094 -0.9266661  0.70761260 #> [1187,] -0.9237558 -0.9260816 -0.12411350  1.7452806 -0.5379660 -0.32156638 #> [1188,] -1.0577885  1.0359292 -0.31079853  1.3601525 -0.6981941 -0.65388149 #> [1189,]  0.5382323 -1.1470702  0.07081259  0.4824232  0.4845195  0.07999362 #> [1190,] -1.0311456 -0.9578047 -0.26146785 -0.7014967  1.5043241 -0.57209091 #> [1191,]  0.9692524 -0.9579689 -0.26246137  1.4240559 -0.6654668 -0.57377091 #> [1192,] -1.2023015  0.9960881 -0.74007365  1.0746036  1.1194687 -1.27886028 #> [1193,]  0.9176168 -0.9741657 -0.38031886  1.2875864 -0.7393917  1.30833437 #> [1194,] -0.9297983 -0.9279326 -0.12971883 -0.5798894 -0.5447574 -0.33273842 #> [1195,]  1.0062248 -0.9470486 -0.20366418 -0.6554742  1.6149422  2.12043889 #> [1196,]  0.7160563  0.9514347 -2.04138903  0.8157663 -1.1916124  0.35684757 #> [1197,]  0.9070277 -0.9776347 -0.41143375  1.2603772  1.3225926  1.23115778 #> [1198,] -1.3518505 -1.0406278  0.61061476  0.8660768 -1.1193289  0.42312523 #> [1199,] -1.1279457 -0.9844898 -0.48021219  1.2085563 -0.7900236 -0.91535831 #> [1200,]  1.2469314 -0.8868398 -0.04762417 -0.4417227  2.4399942 -0.15333526 #> [1201,] -1.1938856  0.9982332  1.41707788 -0.9186245 -0.8812884  0.81125448 #> [1202,]  0.5302194  0.8677908  0.06397001  0.4692899  0.4707355  0.07394905 #> [1203,] -0.9485209 -0.9336155 -0.14847842 -0.6015581 -0.5660607 -0.36936593 #> [1204,]  1.1749218  1.1072435 -0.07126125 -0.4928191 -0.4595359 -0.20939456 #> [1205,] -0.8141735 -0.8909515 -0.05275568  2.2018092 -0.4219227 -0.16595974 #> [1206,] -0.9743153 -0.9413189 -0.17807849 -0.6320045  1.6777041 -0.42510526 #> [1207,]  0.6262128 -1.0950978  0.19751061  0.6374151  0.6483801  0.17680036 #> [1208,]  0.8462408  1.0013754 -0.65828166 -0.9014405 -0.8640575 -1.16814742 #> [1209,]  0.8992428  1.0201802 -0.43617745 -0.8060987 -0.7687360 -0.84975985 #> [1210,] -0.8587302  1.1042292 -0.07569101  1.9961765 -0.4674743 -0.21938914 #> [1211,]  0.8846047 -0.9851583 -0.48747768 -0.8308151 -0.7934001  1.07985802 #> [1212,] -1.3619730 -1.0430080  0.58051972  0.8542689  0.8806600 -2.45754914 #> [1213,]  0.5688912 -1.1277727  0.10306633  0.5341969  0.5390211  0.10692654 #> [1214,]  0.6659468 -1.0746585  0.29964412  0.7138170 -1.3701278  0.24402662 #> [1215,]  1.1582055 -0.9071160 -0.07852674 -0.5059871 -0.4723830 -0.22571740 #> [1216,]  1.3628872  1.1587284 -0.02607293 -0.3750489 -0.3453861 -0.09623964 #> [1217,]  0.7127201  0.9500748 -2.10701251 -1.2364212 -1.2023686  0.34822382 #> [1218,]  0.8226499  0.9927420  1.25428708 -0.9495813 -0.9123666  0.73821363 #> [1219,] -1.2113287 -1.0062298 -0.77854712 -0.9434735 -0.9062312  0.75189925 #> [1220,] -0.8751589  1.0978390 -0.08606068 -0.5187353 -0.4848351 -0.24228526 #> [1221,]  0.9951709 -0.9502578 -0.21949121  1.4949154 -0.6325195 -0.49969372 #> [1222,] -0.9068248 -0.9208499 -0.10949361  1.8057130  1.9262100 -0.29186853 #> [1223,] -0.9425154  1.0731903 -0.14222456 -0.5945681 -0.5591847 -0.35727896 #> [1224,]  1.0985930  1.0846983 -0.11233073 -0.5576590 -0.5229397 -0.29769870 #> [1225,] -0.8419447 -0.9001506 -0.06621552 -0.4830867 -0.4500507 -0.19783651 #> [1226,]  0.9362482  1.0328582 -0.33189710 -0.7484448 -0.7113401 -0.68794399 #> [1227,]  0.6926130 -1.0618140  0.39095722 -1.3032763  0.7871330  0.29974743 #> [1228,]  1.0778249  1.0783767 -0.12783659 -0.5775919 -0.5425008 -0.32899936 #> [1229,] -1.0284825  1.0448814 -0.25692681  1.4323231  1.5118280  1.77181281 #> [1230,]  0.5959318  0.8994040  0.14117351  0.5818518  0.5894014  0.13637271 #> [1231,]  0.7083810 -1.0545190  0.45537008 -1.2503936  0.8219762  0.33726091 #> [1232,] -1.4821785  0.9342496  0.32730498  0.7311425 -1.3361967  0.26126757 #> [1233,] -1.6742259  0.9000317  0.14336935  0.5842961 -1.6892156  0.13800984 #> [1234,]  1.0465391  1.0686922 -0.15607302 -0.6097639 -0.5741374 -0.38389018 #> [1235,]  0.6347494 -1.0905662  0.21648634 -1.5302307  0.6654945  0.18979552 #> [1236,]  0.6082455 -1.1049050  0.16215561  0.6041673 -1.6311644  0.15179426 #> [1237,]  0.8833417 -0.9855895 -0.49221923 -0.8330023 -0.7955842 -0.93300418 #> [1238,] -1.4291406 -1.0584988  0.41896023  0.7818500 -1.2457169  0.31621611 #> [1239,] -1.1197762 -0.9823006 -0.45713488  1.2248310  1.2836140 -0.88115867 #> [1240,] -1.0787064  1.0297352 -0.35489310 -0.7621875 -0.7250036 -0.72451522 #> [1241,] -0.7021704  1.1744389 -0.01935536 -0.3458959 -0.3173642 -0.07643914 #> [1242,]  0.6964423 -1.0600226  0.40583748 -1.2901205  0.7955281  0.30853072 #> [1243,]  0.5608937 -1.1326733  0.09363940  0.5204594  0.5245352  0.09928348 #> [1244,]  0.5948777  0.8989164  0.13949022 -1.7242591  0.5873970  0.13511381 #> [1245,]  0.8590452 -0.9940441  1.68180621 -0.8768706 -0.8394467  0.92611852 #> [1246,]  0.9797030  1.0473094 -0.24406757 -0.6884976 -0.6518753  1.84356656 #> [1247,]  0.9179209  1.0266236 -0.37946601 -0.7761735 -0.7389204 -0.76300507 #> [1248,] -1.3224842 -1.0336518 -1.41127100  0.9017955  0.9319558  0.47471436 #> [1249,] -1.5513715 -1.0854395  0.24027098  0.6722624  0.6854907  0.20572525 #> [1250,] -1.1224697 -0.9830236 -0.46463661 -0.8200566  1.2776938 -0.89231799 #> [1251,] -1.7124054 -1.1187711  0.12305823  0.5605485  0.5668556  0.12263492 #> [1252,]  0.8598871 -0.9937459  1.69300597  1.1424769 -0.8378658 -1.07424853 #> [1253,] -1.3072660 -1.0299944 -1.30483298 -1.0855313 -1.0493799  0.50438569 #> [1254,]  0.6024716 -1.1081373  0.15200824  0.5936557 -1.6613774  0.14439652 #> [1255,]  0.5302194  0.8677908  0.06397001  0.4692899  0.4707355  0.07394905 #> [1256,]  0.9179290 -0.9740642 -0.37944328  1.2883927 -0.7389079 -0.76296974 #> [1257,] -0.8971033  1.0895439 -0.10178291  1.8418844 -0.5084983  3.62520611 #> [1258,] -1.1071023  1.0215734  2.36291643 -0.7995158 -0.7621728 -0.83015435 #> [1259,] -1.0907627  1.0262360 -0.38264963  1.2854515 -0.7406758 -0.76794971 #> [1260,]  0.7714114 -1.0273467 -1.23261029 -1.0688723  0.9684795  0.52708708 #> [1261,]  0.8757278 -0.9882060 -0.52195198 -0.8463782 -0.8089475  1.02428891 #> [1262,] -1.6169631 -1.0992930  0.18149106 -1.6052958  0.6329898  0.16560785 #> [1263,] -0.8795193 -0.9122679 -0.08900792 -0.5235013 -0.4894939 -0.24867583 #> [1264,]  1.2493365  1.1282650 -0.04700646 -0.4401592 -0.4083203 -0.15179529 #> [1265,]  0.6660139  0.9305569  0.29984869  0.7139493  0.7300004  0.24415542 #> [1266,] -1.2268990  0.9899291 -0.84891692  1.0352932 -0.9287781 -1.42198813 #> [1267,]  1.2478362  1.1278499 -0.04739070 -0.4411335 -0.4092654 -0.15275375 #> [1268,]  1.0894646  1.0819300 -0.11886385 -0.5662875 -0.5314033 -0.31099901 #> [1269,] -1.0309255 -0.9577420 -0.26108991 -0.7012211 -0.6644773 -0.57145146 #> [1270,] -1.0961727  1.0246822 -0.39569359 -0.7850517  1.3373263  1.26885431 #> [1271,] -0.9727894 -0.9408671 -0.17619748 -0.6301844  1.6827714  2.37175139 #> [1272,]  0.6231894 -1.0967222  0.19113920  0.6317635  0.6423700  0.17237442 #> [1273,]  0.8522041 -0.9964812 -0.62769688  1.1237631  1.1730739  0.88813142 #> [1274,]  0.8499646  1.0027229 -0.63898738 -0.8941864 -0.8567882 -1.14158648 #> [1275,]  0.7844766  0.9784008  0.90905809  0.9649308  1.0002884  0.57555921 #> [1276,]  1.1173415  1.0903343 -0.10016305  1.8499276 -0.5061867 -0.27244599 #> [1277,]  0.8773259  1.0125000  1.93969823  1.1854756 -0.8061145 -0.96700727 #> [1278,] -1.7148725 -1.1192645  0.12186374  0.5590655  0.5652875  0.12171355 #> [1279,]  1.3634383  1.1588719 -0.02600161 -0.3747700 -0.3451175 -0.09603604 #> [1280,]  0.5831841 -1.1192349  0.12193505  0.5591543 -1.7687176  0.12176861 #> [1281,]  0.8402118  0.9991851 -0.69095494 -0.9133791  1.1415172  0.82458722 #> [1282,] -1.4427495  0.9419960  0.39290414  0.7683329 -1.2686422  0.30090089 #> [1283,]  0.9571406  1.0398629 -0.28580224 -0.7186582 -0.6817649  1.63175266 #> [1284,]  1.1229209  1.0919988 -0.09683923 -0.5356296 -0.5013584 -0.26542928 #> [1285,] -1.1864883 -0.9998649 -0.67657894  1.1011058 -0.8708116 -1.19317314 #> [1286,]  1.1444126 -0.9104504 -0.08516644  1.9332421  2.0686847 -0.24033649 #> [1287,]  0.7562508 -1.0336108  0.70920409  0.9020107 -1.0727445  0.47503701 #> [1288,] -0.9435577  1.0728271 -0.14329348 -0.5957785  1.7845189 -0.35935329 #> [1289,] -0.7660097 -0.8744673 -0.03490160 -0.4059645 -0.3752111 -0.12058107 #> [1290,] -0.8432591 -0.9005808 -0.06691906 -0.4844754 -0.4514037 -0.19945976 #> [1291,] -0.9543783 -0.9353774 -0.15480240 -0.6084116 -0.5728060 -0.38147155 #> [1292,] -1.0137017  1.0495240 -0.23292480 -0.6798144  1.5545303 -0.52317909 #> [1293,]  0.9156155 -0.9748173  2.59076304 -0.7797736  1.3467930  1.29345589 #> [1294,]  1.0754344 -0.9279505 -0.12977415 -0.5799566 -0.5448234 -0.33284814 #> [1295,]  0.9007943  1.0207189 -0.43111297 -0.8035458 -0.7661904 -0.84212128 #> [1296,]  0.6957650 -1.0603385  0.40317111 -1.2924324  0.7940402  0.30696230 #> [1297,] -0.8369536 -0.8985130 -0.06360117  2.0927944 -0.4449312 -0.19176980 #> [1298,] -1.4704720  0.9365212  0.34536988  0.7418892  0.7598991  0.27234837 #> [1299,]  0.8246507 -1.0065619  1.27510138 -0.9453460 -0.9081120  0.74766738 #> [1300,]  0.9058231 -0.9780327 -0.41515512 -0.7953560 -0.7580267 -0.81791791 #> [1301,] -0.7858148  1.1346484 -0.04149099 -0.4254885  2.5374248 -0.13783202 #> [1302,] -1.1255583  1.0164139 -0.47336767  1.2132777 -0.7868092  1.10466149 #> [1303,]  1.0183180 -0.9435898 -0.18782885 -0.6412215 -0.6051452 -0.44299192 #> [1304,] -1.3804829 -1.0473289  0.52978235 -1.2000335  0.8580799  0.37913006 #> [1305,]  0.6130648  0.9072454  0.17106205 -1.6313070 -1.6065811  0.15820110 #> [1306,]  0.6626680  0.9291227  0.28978958 -1.4137013  0.7229601  0.23779821 #> [1307,] -0.8847012  1.0941989 -0.09262188 -0.5291909 -0.4950582 -0.25644701 #> [1308,]  1.1779162  1.1081069 -0.07004288 -0.4905162 -0.4572907 -0.20662118 #> [1309,] -0.9057760 -0.9205236 -0.10863854 -0.5526199 -0.5179995 -0.29010469 #> [1310,] -0.8639384  1.1021862 -0.07885622 -0.5065629 -0.4729451 -0.22644929 #> [1311,]  1.1875066  1.1108622 -0.06629864  2.0693167 -0.4502111 -0.19802849 #> [1312,]  0.5968930  0.8998480  0.14272335  0.5835798  0.5912320  0.13752880 #> [1313,] -1.2345668 -1.0121027 -0.88551773 -0.9770476 -0.9399795  0.68066024 #> [1314,] -1.4184074 -1.0560579  0.44091449 -1.2613974 -1.2277775  0.32895306 #> [1315,] -0.8312486  1.1152837 -0.06072115 -0.4718537 -0.4391140 -0.18502067 #> [1316,] -1.1243274  1.0167545 -0.46987149 -0.8225558 -0.7851544  1.11101112 #> [1317,] -0.7683707 -0.8752918 -0.03563696 -0.4082701 -0.3774395 -0.12254070 #> [1318,]  1.1837871 -0.9010670 -0.06772285 -0.4860491 -0.4529370 -0.20130959 #> [1319,]  0.7025603  0.9459064  0.43061304  0.7876975  0.8090296 -3.09602364 #> [1320,]  1.0702296  1.0760437 -0.13411067 -0.5851574  1.8184025 -0.34141540 #> [1321,]  1.0291917 -0.9405254 -0.17478720 -0.6288104 -0.5929030 -0.41901777 #> [1322,] -0.8557832 -0.9046562 -0.07394846 -0.4977987 -0.4643923 -0.21547380 #> [1323,] -0.7757266 -0.8778496 -0.03801327  2.4067898 -0.3844230 -0.12881179 #> [1324,]  1.0207732  1.0605644 -0.18478926 -0.6383863  1.6601707 -0.43743900 #> [1325,] -1.6788760  0.8992675  0.14070037 -1.7202185  0.5888398  0.13601920 #> [1326,]  1.0803144 -0.9266647 -0.12585392 -0.5751450 -0.5400978 -0.32504725 #> [1327,] -0.8812971 -0.9128322 -0.09023396 -0.5254500 -0.4913994 -0.25132010 #> [1328,] -0.8449817 -0.9011438 -0.06785068 -0.4862981 -0.4531796 -0.20160329 #> [1329,] -1.1000452  1.0235761 -0.40526164 -0.7901627 -0.7528520 -0.80280661 #> [1330,]  1.0536235  1.0709026 -0.14909967 -0.6022407 -0.5667323  2.69861633 #> [1331,] -1.2113133  0.9938126 -0.77847997 -0.9434514  1.1034982 -1.32987673 #> [1332,] -1.0629652  1.0343815 -0.32125043 -0.7418463 -0.7047837 -0.67081895 #> [1333,] -1.2194227  0.9917839 -0.81447987  1.0470034  1.0894212  0.72612135 #> [1334,] -1.2201654  0.9915990  1.22272311  1.0458310 -0.9189947  0.72380915 #> [1335,]  0.6934499 -1.0614214  0.39416879 -1.3003836 -1.2674849  0.30164944 #> [1336,]  0.8024124  0.9851980  1.05951643 -0.9941177  1.0447590  0.64791442 #> [1337,] -1.3209306  0.9677921  0.71424670  0.9037482 -1.0705881  0.47764636 #> [1338,]  0.8630178 -0.9926405 -0.57629951 -0.8694573 -0.8320273  0.94877415 #> [1339,]  0.7086700 -1.0543873  0.45663030 -1.2494554 -1.2156257  0.33798232 #> [1340,]  0.9465479  1.0363248  3.24481115 -0.7335269 -0.6965212 -0.64962510 #> [1341,]  1.2027453 -0.8966932 -0.06081157  2.1184446 -0.4392996 -0.18523365 #> [1342,] -0.7414177  1.1550386 -0.02797903 -0.3823056 -0.3523770 -0.10163559 #> [1343,]  1.0430480 -0.9366812 -0.15964656 -0.6135247 -0.5778406 -0.39066859 #> [1344,] -0.8859168  1.0937389 -0.09348755 -0.5305297 -0.4963679 -0.25829817 #> [1345,] -1.3101489 -1.0306895  0.75502859  0.9174813 -1.0538374  0.49859897 #> [1346,] -1.1915210  0.9988395  1.43624045  1.0925627  1.1390392  0.81972332 #> [1347,] -0.9861964  1.0584032 -0.19331912 -0.6462589 -0.6101171 -0.45297057 #> [1348,] -0.9575906  1.0679875 -0.15836706  1.6334923  1.7345405 -0.38824559 #> [1349,]  0.6305377  0.9150873  0.20693881  0.6455394  0.6570240  0.18329088 #> [1350,] -1.1252700  1.0164936 -0.47254695  1.2138497 -0.7864215 -0.90404096 #> [1351,] -0.9245067  1.0795498 -0.12479862 -0.5738311 -0.5388077 -0.32293794 #> [1352,] -0.9221243  1.0804032 -0.12263587  1.7509672 -0.5361392 -0.31860239 #> [1353,] -1.2250977  0.9903746  1.18975584 -0.9633021  1.0797315 -1.41108627 #> [1354,]  0.7662833  0.9713949 -1.28958868 -1.0820720 -1.0458834  0.50898942 #> [1355,]  0.9267913  1.0296518 -0.35552931 -0.7625584  1.3786021 -0.72551921 #> [1356,]  0.8665883  1.0086886 -0.56040269 -0.8628768 -0.8254437 -1.03144187 #> [1357,]  1.1749003 -0.9031488 -0.07127009  2.0290738  2.1760319 -0.20941464 #> [1358,]  0.7422627  0.9619661  0.62493826  0.8715481  0.8992949 -2.32137597 #> [1359,]  0.7757091 -1.0256002 -1.18707591 -1.0580003 -1.0215670  0.54265207 #> [1360,] -1.3818191 -1.0476392  0.52632104  0.8318278 -1.1675641  0.37721349 #> [1361,] -1.5187180  0.9273075  0.27752019 -1.4304102  0.7141318  0.22997588 #> [1362,]  0.8594796 -0.9938902 -0.59256531 -0.8760550  1.1924204  0.92857480 #> [1363,] -1.1267157 -0.9841609  2.09786429 -0.8257738  1.2684453 -0.91014134 #> [1364,]  1.2162485  1.1190283 -0.05638144 -0.4624456 -0.4299632 -0.17471152 #> [1365,]  0.9705836  1.0443141 -0.26003223 -0.7004484 -0.6637117 -0.56966080 #> [1366,]  0.9621732  1.0415343 -0.27582595 -0.7117564 -0.6749200 -0.59623217 #> [1367,] -1.4083177  0.9489903 -2.16092783  0.8032546  0.8257450  0.34148723 #> [1368,] -0.7313873  1.1598670 -0.02551257 -0.3728423 -0.3432615 -0.09463652 #> [1369,] -0.7683707 -0.8752918 -0.03563696 -0.4082701 -0.3774395 -0.12254070 #> [1370,]  1.1371193 -0.9122348 -0.08893656 -0.5233872  2.0433919 -0.24852168 #> [1371,]  0.6301972  0.9149359  0.20618297  0.6448982  0.6563415  0.18277306 #> [1372,]  0.8478131  1.0019448 -0.65005478 -0.8983666  1.1614714  0.86442078 #> [1373,]  1.0010451 -0.9485466 -0.21091141  1.5111932 -0.6253970 -0.48452370 #> [1374,]  0.8190776  0.9914198  1.21784506 -0.9572161  1.0869109  0.72157553 #> [1375,]  1.0426945  1.0674883 -0.16001362  1.6289098 -0.5782176 -0.39136289 #> [1376,]  0.8662646  1.0085732 -0.56182297  1.1581175 -0.8260373  0.96762108 #> [1377,] -1.3044831  0.9715129  0.77752711  0.9248275  0.9568593  0.51004776 #> [1378,]  0.6123320  0.9069131  0.16968145 -1.6349014  0.6210089  0.15721301 #> [1379,]  0.6632994 -1.0759703  0.29166548  0.7086038 -1.3806698  0.23898750 #> [1380,]  0.5757337  0.8899562  0.11176246  0.5460799  0.5515652  0.11383732 #> [1381,]  0.6338305 -1.0910501  0.21437201 -1.5343153 -1.5068364  0.18836075 #> [1382,]  0.7746393 -1.0260337 -1.19822708 -1.0606905 -1.0242833  0.53874337 #> [1383,]  0.6008903  0.9016893  0.14932570 -1.6926437  0.5988742  0.14242236 #> [1384,]  0.5909881 -1.1146877  0.13342644  0.5730005  0.5800292  0.13054982 #> [1385,]  0.5747839  0.8895063  0.11051920 -1.8368062  0.5498156  0.11285699 #> [1386,]  0.8179194  0.9909903 -0.82903241 -0.9597118  1.0839556  0.71624681 #> [1387,] -0.8672280 -0.9083443 -0.08091305 -0.5101179 -0.4764163 -0.23100263 #> [1388,]  0.6637137  0.9295714  0.29290196  0.7094184 -1.3790120  0.23977046 #> [1389,]  1.1229107 -0.9157545 -0.09684520  1.8669304 -0.5013672 -0.26544194 #> [1390,] -1.1446842  1.0111824 -0.53061192 -0.8501694  1.2304106  1.01133982 #> [1391,]  1.0306206  1.0636874 -0.17315194 -0.6272071 -0.5913224  2.40394102 #> [1392,]  0.6210346  0.9108412  0.18670612  0.6277498  0.6381032  0.16927521 #> [1393,]  0.5887355 -1.1159921  0.13001849  0.5689879  0.5757826  0.12796419 #> [1394,]  0.7003647  0.9450001  0.42157761 -1.2768560 -1.2435155  0.31774242 #> [1395,]  0.7257423 -1.0467283  0.53654825  0.8361872 -1.1612000 -2.61186464 #> [1396,] -1.1681412  1.0049200 -0.60878439 -0.8825038 -0.8450866  0.90938924 #> [1397,]  0.5618605  0.8833329  0.09473842  0.5221114  0.5262764  0.10018323 #> [1398,]  0.9167092 -0.9744610 -0.38287740 -0.7780625 -0.7408010  1.30156963 #> [1399,]  0.5382323 -1.1470702  0.07081259  0.4824232  0.4845195  0.07999362 #> [1400,]  0.5618605  0.8833329  0.09473842  0.5221114  0.5262764  0.10018323 #> [1401,] -1.0913645 -0.9745994 -0.38408216 -0.7787267 -0.7414623  1.29841196 #> [1402,] -0.7310887  1.1600120 -0.02544209 -0.3725623 -0.3429919 -0.09443433 #> [1403,]  0.9486737  1.0370370 -0.30353589 -0.7305052 -0.6935212  1.55754454 #> [1404,]  0.6629767 -1.0761306  0.29070551  0.7079696  0.7236083  0.23837911 #> [1405,] -0.8540411  1.1060824 -0.07293452 -0.4959355 -0.4625750 -0.21318596 #> [1406,]  1.1933643 -0.8988461 -0.06412480 -0.4788953  2.2423105 -0.19298938 #> [1407,] -1.5157528 -1.0777457  0.28121921  0.7016188  0.7168223  0.23234229 #> [1408,] -0.7311321 -0.8620757 -0.02545231 -0.3726029 -0.3430310 -0.09446364 #> [1409,] -1.1590093 -0.9927152 -0.57725940  1.1496230 -0.8324206  0.94755415 #> [1410,] -1.0408078 -0.9605444 -0.27852322 -0.7136401 -0.6767879 -0.60073509 #> [1411,]  1.1166945 -0.9173126 -0.10055686  1.8479570 -0.5067511 -0.27327382 #> [1412,]  0.8515010  1.0032776 -0.63121685 -0.8912198  1.1712124  0.88429980 #> [1413,]  0.9074258 -0.9775033 -0.41021253 -0.7927729 -0.7554527  1.23399062 #> [1414,] -1.1027978 -0.9777150 -0.41218200 -0.7938049 -0.7564810 -0.81338544 #> [1415,] -1.1583805 -0.9925502  1.73870433 -0.8689822  1.2025708 -1.05235294 #> [1416,] -0.9332615 -0.9289898 -0.13302776  1.7127093 -0.5486684 -0.33928196 #> [1417,]  0.9136061 -0.9754734 -0.39177509  1.2772494 -0.7456501 -0.78207155 #> [1418,]  0.5940833  0.8985486  0.13823314 -1.7285038  0.5858887  0.13417141 #> [1419,]  0.6620560  0.9288598  0.28798125  0.7061614 -1.3856635  0.23665011 #> [1420,]  0.6511513  0.9241473  0.25733371  0.6849066 -1.4306599  0.21693230 #> [1421,] -1.0695236  1.0324348 -0.33492092  1.3328168  1.4021810 -0.69278491 #> [1422,]  0.7089452 -1.0542619  0.45783336  0.8009209  0.8232366  0.33867059 #> [1423,]  0.7801558  0.9767472  0.87567060 -1.0469300 -1.0103925  0.55914631 #> [1424,]  1.0357827 -0.9386885 -0.16738878 -0.6214670 -0.5856648  2.46768692 #> [1425,] -0.8562245  1.1052178 -0.07420720 -0.4982711 -0.4648532 -0.21605648 #> [1426,] -1.5568232 -1.0866063  0.23462785  0.6679368  0.6808793  0.20197946 #> [1427,] -0.9919379 -0.9465007 -0.20107386 -0.6531993 -0.6169703 -0.46695626 #> [1428,]  0.7404793 -1.0403038  0.61483552  0.8676987 -1.1171412  0.42538479 #> [1429,]  1.0072436  1.0562394 -0.20227251 -0.6542546  1.6180900  2.13170976 #> [1430,] -0.8160335 -0.8915744 -0.05357763 -0.4560831 -0.4237793 -0.16795538 #> [1431,]  1.1044599  1.0864691 -0.10834947 -0.5522201 -0.5176077 -0.28950771 #> [1432,] -0.8492860  1.1079754 -0.07022709 -0.4908662  2.1851620 -0.20704118 #> [1433,]  1.2262737  1.1218451 -0.05333129 -0.4555125 -0.4232250 -0.16735801 #> [1434,]  1.2991724  1.1418620 -0.03606334 -0.4095910 -0.3787166 -0.12367273 #> [1435,] -1.7311464  0.8908632  0.11430972  0.5494326  0.5551067  0.11583819 #> [1436,] -0.8567587  1.1050068 -0.07452142  2.0046375 -0.4654114 -0.21676347 #> [1437,]  0.6408903 -1.0873552  0.23107886  0.6651775  0.6779384  0.19961326 #> [1438,] -1.0536840  1.0371634 -0.30271879  1.3699182 -0.6929905 -0.64069953 #> [1439,] -0.8681532 -0.9086410 -0.08149968 -0.5111198 -0.4773947 -0.23229645 #> [1440,] -1.1267104  1.0160955 -0.47666033 -0.8257668 -0.7883597  1.09875706 #> [1441,] -1.0292028 -0.9572516 -0.25814822  1.4304793  1.5097930  1.76532773 #> [1442,] -0.9342551 -0.9292925 -0.13399023  1.7093591  1.8188666 -0.34117832 #> [1443,] -1.1983606  0.9970901 -0.72379337 -0.9249706  1.1265631  0.79551047 #> [1444,]  0.9484105  1.0369489 -0.30410687 -0.7308782 -0.6938915 -0.64296979 #> [1445,] -1.4794311 -1.0697697  0.33144524  0.7336430  0.7510693  0.26381915 #> [1446,]  0.8243009  0.9933518  1.27144126 -0.9460843  1.1002872 -1.34046905 #> [1447,] -1.3233074  0.9672594  0.70560000 -1.1101694  0.9308406  0.47316946 #> [1448,]  0.8730596  1.0109896 -0.53285497 -0.8511440 -0.8137111 -0.99201751 #> [1449,] -0.7417074  1.1549004 -0.02805320 -0.3825806 -0.3526421 -0.10184384 #> [1450,]  0.7815719 -1.0232379  0.88649593  0.9583665 -1.0068729  0.56448322 #> [1451,] -1.2727749  0.9788620 -1.08862853  0.9676675  1.0032551  0.58021825 #> [1452,] -1.0599225  1.0352900 -0.31507152 -0.7379434 -0.7009070 -0.66082131 #> [1453,] -1.0206428  1.0473329 -0.24394656 -0.6884048  1.5342519  1.84427361 #> [1454,] -1.7317900  0.8907618  0.11402218  0.5490569  0.5547098  0.11561284 #> [1455,] -1.4891873  0.9329008  0.31700904  0.7248229 -1.3483811  0.25489028 #> [1456,]  0.9286835  1.0302952 -0.35065017  1.3163061 -0.7225313 -0.71780900 #> [1457,]  1.0459507  1.0685081 -0.15666882 -0.6103953  1.7398597 -0.38502273 #> [1458,]  0.6666066  0.9308104  0.30166123  0.7151189 -1.3675197  0.24529573 #> [1459,] -0.8480031  1.1084884 -0.06951151 -0.4895027  2.1915273 -0.20540821 #> [1460,]  1.1233716  1.0921330 -0.09657632 -0.5352343 -0.5009714 -0.26487195 #> [1461,] -1.4205171 -1.0565387  0.43649698 -1.2648520  0.8121539  0.32640199 #> [1462,] -0.8638094 -0.9072462 -0.07877648 -0.5064237 -0.4728092 -0.22627222 #> [1463,] -1.3309463  0.9655558 -1.47359417  0.8912730  0.9205879  0.45911564 #> [1464,] -1.0095738  1.0508363 -0.22657368  1.4820763 -0.6382502 -0.51211511 #> [1465,]  0.7531728  0.9662745  0.68987611  0.8952667  0.9249018 -2.15055515 #> [1466,] -0.9665452  1.0649475 -0.16867548 -0.6227609 -0.5869399 -0.40764411 #> [1467,]  0.6548958 -1.0801800  0.26752766  0.6921718  0.7067329  0.22354708 #> [1468,] -1.5501531  0.9215075  0.24155341 -1.4853653 -1.4566052  0.20657370 #> [1469,] -1.1462773 -0.9893626 -0.53563538  1.1732297 -0.8149147 -0.99601726 #> [1470,]  0.7606389 -1.0317810 -1.35582920  0.9116653  0.9426241  0.48965431 #> [1471,]  1.3656689  1.1594522 -0.02571522 -0.3736443 -0.3440337 -0.09521719 #> [1472,] -1.1661017 -0.9945717 -0.60161940 -0.8796706 -0.8422498 -1.08961943 #> [1473,] -0.8221175 -0.8936049 -0.05634293 -0.4623598 -0.4298797 -0.17461925 #> [1474,]  0.8111448  0.9884692  1.14013367 -0.9745132 -0.9374301  0.68571136 #> [1475,]  0.9275011 -0.9709744  2.82733440 -0.7614849  1.3806344 -0.72261556 #> [1476,] -1.0140849 -0.9529232 -0.23352208 -0.6802875 -0.6437492  1.90761051 #> [1477,]  0.8803011  1.0135503 -0.50385363  1.1928839 -0.8008803 -0.95000948 #> [1478,] -1.4694359  0.9367234  0.34702311  0.7428521 -1.3141806  0.27335579 #> [1479,]  0.8609157 -0.9933822  1.70677381 -0.8733679 -0.8359408  0.93673083 #> [1480,]  0.6671853 -1.0740471  0.30344007 -1.3961376  0.7324730  0.24641334 #> [1481,] -0.7024932  1.1742736 -0.01941572 -0.3461886 -0.3176449 -0.07662336 #> [1482,] -1.1581527 -0.9924905 -0.57437522  1.1511880  1.2030259 -1.05126956 #> [1483,]  0.5536027  0.8793364  0.08569583  0.5080780  0.5114943  0.09270670 #> [1484,]  1.0886190  1.0816727 -0.11949080 -0.5670972 -0.5321979 -0.31226652 #> [1485,] -0.8979658 -0.9180855 -0.10244780  1.8386299 -0.5094395 -0.27723856 #> [1486,]  0.9978195 -0.9494846 -0.21557403  1.5022449 -0.6292928 -0.49278472 #> [1487,] -1.1320731  1.0146189 -0.49224398 -0.8330136  1.2569200 -0.93304046 #> [1488,] -0.9593301  1.0673941 -0.16032637 -0.6142332  1.7284938 -0.39195418 #> [1489,] -1.0829418  1.0285001 -0.36444150 -0.7677035 -0.7304909 -0.73954103 #> [1490,]  0.5302194  0.8677908  0.06397001  0.4692899  0.4707355  0.07394905 #> [1491,]  0.8815771  1.0140001 -0.49893317 -0.8360731  1.2521110 -0.94282853 #> [1492,] -1.5601981  0.9196864  0.23121066  0.6652805 -1.4748215  0.19970129 #> [1493,]  1.2336849  1.1239172 -0.05119797 -0.4504898 -0.4183465 -0.16215818 #> [1494,]  0.7274696  0.9560536 -1.83398744  0.8398531 -1.1559005  0.38766580 #> [1495,]  0.5382323 -1.1470702  0.07081259  0.4824232  0.4845195  0.07999362 #> [1496,]  1.0101081  1.0571584 -0.19841791 -0.6508446 -0.6146448  2.16365795 #> [1497,] -1.0748529 -0.9700597 -0.34639173 -0.7571847 -0.7200283 -0.71105974 #> [1498,] -1.7148725 -1.1192645  0.12186374  0.5590655  0.5652875  0.12171355 #> [1499,]  0.9323298 -0.9694315 -0.34146321 -0.7542433 -0.7171038 -0.70322492 #> [1500,]  0.6666094 -1.0743312  0.30166966 -1.3983583  0.7312567  0.24530103 #> [1501,] -1.2281106  0.9896299 -0.85461276  1.0334145  1.0746406  0.69961422 #> [1502,]  0.9481948 -0.9644348 -0.30457589 -0.7311842 -0.6941953 -0.64373635 #> [1503,]  0.8872529  1.0159950 -0.47770426 -0.8262576  1.2676687  1.09690014 #> [1504,] -0.8133890 -0.8906885 -0.05241224 -0.4533670 -0.4211408 -0.16512379 #> [1505,] -0.6923898 -0.8478205 -0.01760063 -0.3370820 -0.3089130 -0.07102398 #> [1506,]  0.9229533  1.0283441 -0.36566683 -0.7684037 -0.7311876 -0.74146276 #> [1507,]  0.8160279  0.9902878 -0.84213941 -0.9638094 -0.9266661  0.70761260 #> [1508,] -0.8134898 -0.8907223 -0.05245624 -0.4534703 -0.4212412 -0.16523095 #> [1509,]  0.6896495 -1.0632093  0.37976288 -1.3136003 -1.2809586  0.29308981 #> [1510,]  0.8107488  0.9883214  1.13636778 -0.9753893 -0.9383113  0.68395955 #> [1511,] -1.0349722  1.0428705 -0.26811274  1.4158399 -0.6695053  1.71438416 #> [1512,]  0.8513322 -0.9967936 -0.63206506  1.1216484 -0.8541418  0.88338215 #> [1513,]  0.7215126  0.9536491  0.51571544  0.8272414 -1.1743337  0.37132314 #> [1514,]  0.8543628 -0.9957094 -0.61702945 -0.8857341 -0.8483215  0.89997969 #> [1515,]  0.7091243 -1.0541803  0.45861748  0.8012932  0.8236368  0.33911896 #> [1516,]  0.7613306 -1.0314938 -1.34750478 -1.0950605 -1.0590143  0.49199142 #> [1517,]  0.6505120  0.9238693  0.25562659  0.6836696 -1.4333668  0.21581881 #> [1518,] -1.0685329  1.0327279 -0.33282455  1.3350917  1.4046837 -0.68942984 #> [1519,]  1.1988938 -0.8975744 -0.06214753 -0.4748388 -0.4420192  5.30863971 #> [1520,]  0.9248184 -0.9718362 -0.36069967 -0.7655546 -0.7283529 -0.73366347 #> [1521,] -1.2286228  0.9895035  1.16681951  1.0326219  1.0737787  0.69808772 #> [1522,]  0.9372436  1.0331943 -0.32951630 -0.7469828 -0.7098872 -0.68412547 #> [1523,] -1.2290078  0.9894086  1.16434494  1.0320266 -0.9318523  0.69694279 #> [1524,]  0.8022090  0.9851215  1.05769790  1.0054479 -0.9576257  0.64705445 #> [1525,] -0.9622891 -0.9377451 -0.16370674 -0.6177240 -0.5819768 -0.39832848 #> [1526,] -0.8059690  1.1258824 -0.04925699 -0.4457857 -0.4137797 -0.15738432 #> [1527,]  0.5548047  0.8799207  0.08696441  0.5101099  0.5136334  0.09376599 #> [1528,] -1.5098329 -1.0764548  0.28877478 -1.4150488 -1.3845810  0.23715412 #> [1529,]  0.6862196  0.9391135  0.36714892 -1.3257076 -1.2933066  0.28553427 #> [1530,]  0.8958516 -0.9813539 -0.44748720  1.2319476 -0.7743452  1.15374079 #> [1531,] -1.0324223  1.0436586 -0.26366914 -0.7030958  1.5007465  1.73668024 #> [1532,]  1.2834727 -0.8790295 -0.03915974 -0.4188579 -0.3876808 -0.13180530 #> [1533,]  0.6564412  0.9264401  0.27183410 -1.4384756  0.7099455  0.22632424 #> [1534,]  0.8939473 -0.9819936 -0.45398532  1.2271331 -0.7775222  1.14095189 #> [1535,] -0.9563917  1.0683974 -0.15702857  1.6372624 -0.5751335  2.59264754 #> [1536,]  0.9905398  1.0508437 -0.22653840  1.4821390 -0.6382220  1.95292112 #> [1537,]  0.6550337 -1.0801103  0.26790958  0.6924400  0.7070193  0.22379379 #> [1538,]  0.6785949 -1.0684840  0.34038122 -1.3532474  0.7567656  0.26930181 #> [1539,]  1.0922691 -0.9235468 -0.11681140 -0.5636148 -0.5287811 -0.30683886 #> [1540,] -1.3030614 -1.0289787  0.78329251 -1.0791152  0.9588690  0.51296942 #> [1541,] -0.7505914 -0.8690387 -0.03041000 -0.3910554 -0.3608145 -0.10839812 #> [1542,]  0.7127558  0.9500894  0.47476676 -1.2363072  0.8317719  0.34831522 #> [1543,] -0.7848156 -0.8809869 -0.04113489 -0.4244935 -0.3931367 -0.13691649 #> [1544,] -0.9754838 -0.9416645 -0.17953047 -0.6334000  1.6738393 -0.42778266 #> [1545,]  0.7328279  0.9582048  0.57305591  0.8512717  0.8774294  0.40285860 #> [1546,]  0.6716326 -1.0718640  0.31741039  0.7250720  0.7418966  0.25513975 #> [1547,] -0.8085208  1.1247930 -0.05032332 -0.4483864 -0.4163042 -0.16001215 #> [1548,] -1.3824861  0.9543860  0.52460302  0.8310894  0.8556891  0.37626114 #> [1549,]  0.8451708 -0.9990135  1.50614039 -0.9035416 -0.8661637 -1.17591511 #> [1550,] -1.1026093 -0.9776638 -0.41170490  1.2601517 -0.7562322 -0.81265743 #> [1551,] -0.9717007  1.0632139 -0.17486579 -0.6288872 -0.5929787 -0.41916343 #> [1552,] -0.7676164  1.1428198 -0.03540059 -0.4075328 -0.3767269 -0.12191182 #> [1553,]  0.8768978 -0.9878020 -0.51725174 -0.8443013 -0.8068719  1.03147784 #> [1554,]  0.7239490 -1.0475217  0.52762961 -1.2013614 -1.1667410  0.37793840 #> [1555,]  1.1426650 -0.9108766 -0.08605284  1.9278130  2.0626105 -0.24226819 #> [1556,] -0.9384752 -0.9305761 -0.13814478 -0.5898866 -0.5545816 -0.34932894 #> [1557,]  0.5536027  0.8793364  0.08569583  0.5080780  0.5114943  0.09270670 #> [1558,]  1.2059986 -0.8959517 -0.05970877 -0.4697039 -0.4370222 -0.18263110 #> [1559,] -0.6923898 -0.8478205 -0.01760063 -0.3370820 -0.3089130 -0.07102398 #> [1560,]  0.8933138 -0.9822069 -0.45617114 -0.8159713 -0.7785836  1.13672268 #> [1561,] -1.2457046 -1.0148904 -0.94107334  1.0067157  1.0456262  0.64937963 #> [1562,]  0.7960414  0.9827957  1.00381170  0.9912692 -0.9719532 -1.60922656 #> [1563,]  1.1492847 -0.9092666 -0.08275007 -0.5132378 -0.4794635 -0.23504721 #> [1564,] -1.2649552  0.9807113  0.95775315  0.9787037 -0.9850055 -1.66873990 #> [1565,] -1.0009169 -0.9491165 -0.21373230  1.5057498  1.5929623  2.04279023 #> [1566,]  0.5768204  0.8904703  0.11319958  0.5479782  0.5535703  0.11496743 #> [1567,]  0.8988141 -0.9803621 -0.43758885 -0.8068063 -0.7694416 -0.85188502 #> [1568,]  0.7517354 -1.0355083  0.68100467  0.8921251 -1.0851775  0.46036623 #> [1569,]  0.7844766  0.9784008  0.90905809  0.9649308  1.0002884  0.57555921 #> [1570,]  0.8442429 -0.9993497 -0.66890868 -0.9053700  1.1520785  0.84552207 #> [1571,] -1.2174250 -1.0077780  1.24149214  1.0501671 -0.9150273 -1.36540286 #> [1572,] -0.7325882  1.1592843 -0.02579774 -0.3739696 -0.3443468 -0.09545333 #> [1573,]  0.7261164  0.9555086  0.53842500  0.8369806  0.8620325 -2.60482299 #> [1574,]  0.9667422  1.0430465 -0.26711343  1.4172766 -0.6687956 -0.58161821 #> [1575,]  0.8303681  0.9955853  1.33620860 -0.9334030  1.1159232  0.77522265 #> [1576,]  0.6249400 -1.0957804  0.19480673 -1.5747209  0.6458468  0.17492612 #> [1577,]  1.0401717  1.0666966 -0.16266145  1.6216649 -0.5809191 -0.39636062 #> [1578,]  1.0768146  1.0780671 -0.12865139 -0.5785895 -0.5434806 -0.33061948 #> [1579,]  0.9721555 -0.9570919 -0.25719678  1.4319146 -0.6616482  1.77037470 #> [1580,] -1.4407825  0.9423897 -2.52173311 -1.2982557  0.7903162  0.30305898 #> [1581,] -1.1759202  1.0028794 -0.63678508 -0.8933483 -0.8559485 -1.13854327 #> [1582,]  0.8921597 -0.9825958 -0.46018399 -0.8179147  1.2811928 -0.88569941 #> [1583,]  1.0549262  1.0713079 -0.14785669 -0.6008729 -0.5653865 -0.36816954 #> [1584,]  1.0574615 -0.9327525 -0.14547156 -0.5982246  1.7768897 -0.36356922 #> [1585,] -1.2103671  0.9940505  1.29137392 -0.9420956 -0.9048473  0.75503392 #> [1586,] -0.6695596  1.1916690 -0.01402402 -0.3169131 -0.2896126 -0.05958380 #> [1587,]  0.5965387  0.8996843  0.14215036  0.5829426 -1.6933170  0.13710172 #> [1588,]  0.8633091  1.0075182 -0.57498357  1.1508571  1.2026643 -1.05213034 #> [1589,]  1.2991724  1.1418620 -0.03606334 -0.4095910 -0.3787166 -0.12367273 #> [1590,]  0.9530453  1.0384982 -0.29422680 -0.7243511 -0.6874131 -0.62675864 #> [1591,] -1.0735600  1.0312444 -0.34357865 -0.7555096 -0.7183627  1.41524601 #> [1592,]  1.3288106 -0.8697335 -0.03095243 -0.3929377  2.7576262 -0.10989002 #> [1593,]  0.6179171  0.9094385  0.18044736  0.6219631  0.6319538  0.16487105 #> [1594,] -0.9323097 -0.9286995 -0.13211130  1.7159282 -0.5475923 -0.33747335 #> [1595,]  1.1299626 -0.9140004 -0.09282338 -0.5295034 -0.4953639 -0.25687826 #> [1596,]  0.8320054 -1.0038285  1.35416125 -0.9300257 -0.8927289  0.78326332 #> [1597,]  0.6936209 -1.0613412  0.39482797  0.7693529  0.7893385  0.30203939 #> [1598,]  0.9392501  1.0338713 -0.32477617  1.3439978 -0.7069719  1.47818762 #> [1599,] -1.1517412 -0.9908045 -0.55317341  1.1630082 -0.8224054  0.97929837 #> [1600,] -0.8905438  1.0919954 -0.09684592 -0.5356397 -0.5013682 -0.26544346 #> [1601,] -1.2810222  0.9769277  0.87925657  0.9562345  0.9908638 -1.78279861 #> [1602,]  0.7957449  0.9826836 -0.99872047  0.9905899 -0.9726502  0.62020500 #> [1603,] -1.1718634  1.0039413 -0.62204888 -0.8876854 -0.8502757  0.89435975 #> [1604,]  0.7438215 -1.0388700  0.63388429 -1.1429626  0.9029325  0.43553910 #> [1605,]  0.7599919 -1.0320499 -1.36366872 -1.0986127  0.9410819  0.48747648 #> [1606,]  1.1517776  1.1005175 -0.08154419 -0.5111956 -0.4774688 -0.23239454 #> [1607,]  0.8948900 -0.9816767  2.21850037  1.2295155 -0.7759470  1.14726871 #> [1608,] -0.9732954 -0.9410170 -0.17681935 -0.6307877 -0.5948527 -0.42277942 #> [1609,]  0.6435165 -1.0859942  0.23757062 -1.4920878  0.6832939  0.20393533 #> [1610,]  0.8258566  0.9939256 -0.77652569 -0.9428075  1.1042863  0.75341213 #> [1611,] -1.0280929  1.0450027 -0.25626802  1.4333222 -0.6609688 -0.56327449 #> [1612,] -0.9539913 -0.9352613 -0.15437765  1.6448511  1.7471546 -0.38066204 #> [1613,]  0.9475315 -0.9646415 -0.30602346 -0.7321264 -0.6951307  1.54774664 #> [1614,] -0.8245702 -0.8944205 -0.05749162 -0.4649013 -0.4323508 -0.17736543 #> [1615,] -1.1155293 -0.9811581 -0.44551624 -0.8107502 -0.7733750  1.15768514 #> [1616,]  0.7738491 -1.0263545  0.82881573  0.9410132 -1.0262967 -1.86612091 #> [1617,]  1.0259782  1.0622177 -0.17853002  1.5811792  1.6764979 -0.42593838 #> [1618,]  1.0557923 -0.9332039 -0.14703690 -0.5999662 -0.5644944 -0.36659028 #> [1619,]  1.1855714  1.1103075 -0.06703529 -0.4847038 -0.4516262 -0.19972756 #> [1620,] -1.0928069  1.0256477 -0.38753448 -0.7806216  1.3452632 -0.77551850 #> [1621,] -1.2450256 -1.0147209 -0.93760339 -0.9923330 -0.9553619  0.65123697 #> [1622,]  0.8928252  1.0179449 -0.45786518 -0.8167932  1.2830322 -0.88224685 #> [1623,] -0.9309810  1.0772450 -0.13084089 -0.5812475 -0.5460916 -0.33496153 #> [1624,] -1.1277973  1.0157955 -0.47978435 -0.8272332  1.2661054 -0.91472771 #> [1625,] -0.8211175  1.1194800 -0.05588022  2.1676672 -0.4288741 -0.17350946 #> [1626,] -0.8063855 -0.8883327 -0.04942969  2.2410989 -0.4141912 -0.15781079 #> [1627,] -0.8340173  1.1141485 -0.06210466  2.1063726 -0.4419326 -0.18827170 #> [1628,] -1.0982043 -0.9764659 -0.40068884 -0.7877311 -0.7504296 -0.79579390 #> [1629,] -1.3545633  0.9603686  0.60237720 -1.1588994 -1.1236550  0.41870507 #> [1630,] -1.3386470  0.9638513  0.65259971  0.8818611  0.9104251 -2.24492844 #> [1631,] -0.8553826  1.1055509 -0.07371424  2.0105758 -0.4639741 -0.21494595 #> [1632,]  0.6128693 -1.1023454  0.17069275  0.6126457  0.6220578  0.15793697 #> [1633,] -0.9036048  1.0871370 -0.10688637  1.8175714 -0.5156130 -0.28648046 #> [1634,]  1.1357379 -0.9125744 -0.08967202 -0.5245593  2.0386181 -0.25010915 #> [1635,] -0.6920588 -0.8476963 -0.01754370 -0.3367855 -0.3086289 -0.07084631 #> [1636,]  0.8697602  1.0098179 -0.54670112  1.1667318 -0.8196611  0.98825021 #> [1637,]  1.2684937 -0.8821955 -0.04240154 -0.4280046 -0.3965376 -0.14016490 #> [1638,]  0.7105681 -1.0535239 -2.15062518  0.8042979 -1.2093850  0.34275136 #> [1639,]  0.6262128 -1.0950978  0.19751061  0.6374151  0.6483801  0.17680036 #> [1640,]  0.5536027  0.8793364  0.08569583  0.5080780  0.5114943  0.09270670 #> [1641,] -1.2199641 -1.0084213  1.22409066  1.0461486  1.0884911  0.72443497 #> [1642,]  0.7410611  0.9614889 -1.61781977 -1.1508095 -1.1154543  0.42713844 #> [1643,]  0.7564027 -1.0335472 -1.40811425  0.9023441 -1.0723301  0.47553697 #> [1644,]  0.6784738  0.9358543  0.33996990  0.7387206 -1.3218670  0.26905017 #> [1645,]  0.8226071 -1.0073271 -0.79754644  1.0529950 -0.9124579  0.73801267 #> [1646,]  0.9097861 -0.9767260 -0.40305599  1.2674394  1.3303427  1.25089700 #> [1647,] -0.8227289 -0.8938083 -0.05662742  2.1598610 -0.4304951 -0.17530055 #> [1648,]  1.0153393 -0.9444368 -0.19159404 -0.6446874  1.6432074 -0.44984221 #> [1649,] -1.4993462 -1.0741595  0.30273825  0.7158114 -1.3661362  0.24597257 #> [1650,] -1.0837930 -0.9725236 -0.36638676 -0.7688143 -0.7315961 -0.74259117 #> [1651,] -0.7325882  1.1592843 -0.02579774 -0.3739696 -0.3443468 -0.09545333 #> [1652,] -0.9015620  1.0878908 -0.10525982 -0.5478980 -0.5133723 -0.28310400 #> [1653,] -0.9348415 -0.9294712 -0.13456113 -0.5856905 -0.5504572 -0.34230169 #> [1654,]  0.5382323 -1.1470702  0.07081259  0.4824232  0.4845195  0.07999362 #> [1655,]  0.9577818 -0.9614680 -0.28450842 -0.7177731 -0.6808869 -0.61069190 #> [1656,]  1.2454451 -0.8871638 -0.04801056 -0.4426932  2.4344010 -0.15429623 #> [1657,] -0.6920588 -0.8476963 -0.01754370 -0.3367855 -0.3086289 -0.07084631 #> [1658,] -0.7762873 -0.8780439 -0.03819980 -0.4160440 -0.3849578 -0.12930022 #> [1659,]  0.6750662 -1.0701914  0.32856803  0.7319077  0.7492119  0.26204674 #> [1660,]  1.2474654  1.1277473 -0.04748623 -0.4413749 -0.4094996 -0.15299178 #> [1661,]  0.6263438 -1.0950277  0.19779068  0.6376605 -1.5416846  0.17699417 #> [1662,]  1.0079766  1.0564747 -0.20127798 -0.6533794 -0.6171481 -0.46732273 #> [1663,] -0.7848156 -0.8809869 -0.04113489 -0.4244935 -0.3931367 -0.13691649 #> [1664,]  0.6192383 -1.0988606  0.18307763  0.6244125 -1.5759040  0.16672607 #> [1665,]  1.3288106 -0.8697335 -0.03095243 -0.3929377  2.7576262 -0.10989002 #> [1666,] -0.8845452 -0.9138612 -0.09251130  1.8902904 -0.4948903 -0.25621025 #> [1667,] -1.1855983  1.0003650 -0.67314772 -0.9069247  1.1500133  0.84140239 #> [1668,] -1.0986750  1.0239669 -0.40185380  1.2684681 -0.7510486  1.25378934 #> [1669,] -0.7326313 -0.8626167 -0.02580803 -0.3740101 -0.3443859 -0.09548277 #> [1670,]  1.1638831  1.1040471 -0.07596770  1.9941992 -0.4679590 -0.22000895 #> [1671,]  0.6633264  0.9294053  0.29174613 -1.4111199  0.7243430  0.23903859 #> [1672,] -0.8728247 -0.9101356 -0.08451745 -0.5161922 -0.4823499 -0.23891928 #> [1673,]  0.7345955  0.9589120 -1.71677948 -1.1695171  0.8815061  0.40797465 #> [1674,]  0.6700558  0.9322828  0.31239571  0.7219427  0.7385488  0.25201761 #> [1675,] -0.8380719 -0.8988805 -0.06417914 -0.4790055 -0.4460759 -0.19311581 #> [1676,]  1.1201703 -0.9164400 -0.09846176 -0.5380524  1.9851908 -0.26886123 #> [1677,]  1.3803614 -0.8596543 -0.02391683 -0.3663587 -0.3370223 -0.09002665 #> [1678,]  0.6550254  0.9258277  0.26788652  0.6924238 -1.4144230  0.22377889 #> [1679,]  1.1520023  1.1005833 -0.08143648 -0.5110121  2.0951642 -0.23215716 #> [1680,] -1.1274788  1.0158833 -0.47886695 -0.8268033 -0.7893945  1.09484043 #> [1681,] -0.8245702 -0.8944205 -0.05749162 -0.4649013 -0.4323508 -0.17736543 #> [1682,] -1.3036937  0.9716930 -1.28086548  0.9258582 -1.0438693  0.51166745 #> [1683,]  0.6028147 -1.1079440  0.15259586  0.5942782  0.6025701  0.14482790 #> [1684,]  0.8345016 -1.0029080 -0.72362748  1.0811828 -0.8875978  0.79565147 #> [1685,]  0.9551878 -0.9622669 -0.28978436 -0.7213641 -0.6844493 -0.61942943 #> [1686,]  1.3628872  1.1587284 -0.02607293 -0.3750489 -0.3453861 -0.09623964 #> [1687,]  0.6068121 -1.1057037  0.15958415  0.6015499  0.6102821  0.14992978 #> [1688,]  0.8129992  0.9891608  1.15791076 -0.9704267 -0.9333200  0.69396323 #> [1689,] -1.1227083  1.0172034 -0.46530621  1.2189512  1.2771714 -0.89331207 #> [1690,] -1.5729397 -1.0900390  0.21881441  0.6553975 -1.4980842  0.19137165 #> [1691,]  0.6506332 -1.0823424  0.25594966  0.6839042 -1.4328528  0.21602966 #> [1692,] -1.1098212 -0.9796178 -0.43029764  1.2451242  1.3058605 -0.84088964 #> [1693,] -0.7762873 -0.8780439 -0.03819980 -0.4160440 -0.3849578 -0.12930022 #> [1694,]  0.6415188  0.9199388  0.23261844  0.6663783  0.6792181  0.20064075 #> [1695,]  0.6445142 -1.0854791  0.24007730  0.6721152  0.6853337  0.20559703 #> [1696,]  1.0012989  1.0543263 -0.21054953 -0.6614202 -0.6250920 -0.48388081 #> [1697,]  0.5608937 -1.1326733  0.09363940  0.5204594  0.5245352  0.09928348 #> [1698,]  1.3656689  1.1594522 -0.02571522 -0.3736443 -0.3440337 -0.09521719 #> [1699,]  0.8684502  1.0093519 -0.55231262 -0.8594756 -0.8220418  0.98047821 #> [1700,] -1.7123169  0.8938520  0.12310130  0.5606018  0.5669119  0.12266811 #> [1701,] -1.4618557  0.9382083  0.35939859  0.7499557  0.7685408  0.28086280 #> [1702,]  0.6926130 -1.0618140  0.39095722 -1.3032763  0.7871330  0.29974743 #> [1703,]  0.8784882  1.0129106 -0.51094037  1.1883673 -0.8040635 -0.96032404 #> [1704,]  0.6347317 -1.0905755  0.21644549  0.6534627  0.6654588  0.18976783 #> [1705,]  0.7521200  0.9658606 -1.46333849  0.8929652  0.9224157  0.46160144 #> [1706,]  0.8775119  1.0125658 -0.51480416 -0.8432143 -0.8057857  1.03526742 #> [1707,]  1.0289478 -0.9405937 -0.17506809 -0.6290847 -0.5931735 -0.41953831 #> [1708,] -1.4639557  0.9377959  0.35592011 -1.3369391 -1.3047661  0.27875875 #> [1709,]  0.9577386  1.0400618  3.51376117 -0.7178326 -0.6809460 -0.61083611 #> [1710,] -1.1555123  1.0082709 -0.56556128 -0.8650269  1.2083211  0.96267231 #> [1711,] -1.2610045 -1.0186917  0.97826763 -1.0158951 -0.9790946  0.60915470 #> [1712,] -1.0616281  1.0347803 -0.31852247 -0.7401300  1.4223157  1.50057668 #> [1713,] -0.7622870 -0.8731635 -0.03376842 -0.4023414 -0.3717103 -0.11754285 #> [1714,]  0.8604677  1.0065014 -0.58797063  1.1438967 -0.8367785 -1.07045733 #> [1715,] -1.5266136  0.9258360  0.26793967  0.6924611  0.7070419  0.22381322 #> [1716,]  0.7220728  0.9538758  0.51843409  0.8284236  0.8528192 -2.68214680 #> [1717,]  1.1376133  1.0963548 -0.08867523  1.9121589 -0.4889736 -0.24795689 #> [1718,] -0.9108515 -0.9221003 -0.11283028 -0.5583315 -0.5235991 -0.29872178 #> [1719,] -0.6907221 -0.8471945 -0.01731539 -0.3355894 -0.3074828 -0.07013240 #> [1720,]  0.6567512 -1.0792445  0.27270489 -1.4372266  0.7105906  0.22688458 #> [1721,]  0.8638798 -0.9923371  1.74698466  1.1522575 -0.8304306 -1.04849439 #> [1722,] -1.4568380 -1.0647397  0.36786904 -1.3250023  0.7736422  0.28596718 #> [1723,] -1.0719536  1.0317175 -0.34011044 -0.7534306 -0.7162958 -0.70106996 #> [1724,]  0.8362726 -1.0022570 -0.71330825 -0.9213119  1.1312416 -1.24295184 #> [1725,]  0.6210346  0.9108412  0.18670612  0.6277498  0.6381032  0.16927521 #> [1726,]  0.9164320 -0.9745512 -0.38366261  1.2845288 -0.7412321 -0.76952106 #> [1727,]  0.7493895  0.9647854  0.66673551  0.8870088 -1.0917234  0.45289037 #> [1728,]  0.6942511 -1.0610461  0.39726491  0.7706398  0.7907191 -3.29511294 #> [1729,] -0.7326313 -0.8626167 -0.02580803 -0.3740101 -0.3443859 -0.09548277 #> [1730,]  0.8577959 -0.9944873  1.66530519 -0.8792220 -0.8418007 -1.08803834 #> [1731,]  1.4422996 -0.8481756 -0.01776444 -0.3379312 -0.3097268 -0.07153452 #> [1732,]  0.8340221 -1.0030845 -0.72645060 -0.9258916  1.1253913  0.79325977 #> [1733,]  0.8878570  1.0162068 -0.47550643 -0.8252234 -0.7878172  1.10081798 #> [1734,]  0.7917764 -1.0191809 -1.03312956  0.9815182  1.0182757 -1.65515467 #> [1735,] -1.2296607  0.9892476 -0.86194793  1.0310185  1.0720353  0.69500658 #> [1736,]  0.9552970 -0.9622333 -0.28956000 -0.7212124  1.4613500 -0.61905862 #> [1737,] -1.0348278 -0.9588509 -0.26785940 -0.7061132 -0.6693255 -0.58287365 #> [1738,] -1.2251754 -1.0097386  1.18924475 -0.9634145  1.0795998 -1.41155512 #> [1739,] -0.9013295 -0.9191373 -0.10507609 -0.5476381 -0.5131177 -0.28272185 #> [1740,] -0.8622996 -0.9067603 -0.07784833 -0.5047961  2.1221494 -0.22420824 #> [1741,] -0.8212476  1.1194257 -0.05594025 -0.4614600 -0.4290049 -0.17365356 #> [1742,]  1.3138431 -0.8727560 -0.03342146 -0.4012144 -0.3706216 -0.11660799 #> [1743,] -0.9583691 -0.9365736 -0.15924134 -0.6131014 -0.5774237 -0.38990170 #> [1744,]  0.8880843  1.0162865 -0.47468245 -0.8248347 -0.7874292 -0.90719808 #> [1745,]  1.3153433  1.1461961 -0.03316407 -0.4003728 -0.3698087 -0.11591304 #> [1746,]  0.8066963 -1.0133706 -0.91038529 -0.9844248  1.0555180  0.66624018 #> [1747,]  0.9809099 -0.9544677 -0.24204023 -0.6869396 -0.6503329 -0.53893995 #> [1748,] -1.1636264 -0.9939247 -0.59301991 -0.8762375  1.1921608 -1.07755787 #> [1749,]  0.8334326 -1.0033018  1.36997719  1.0786356  1.1238611 -1.26529909 #> [1750,] -1.0905377 -0.9743732 -0.38211506  1.2859397 -0.7403818 -0.76712010 #> [1751,]  1.3308509 -0.8693249 -0.03063236 -0.3918300 -0.3615618 -0.10901042 #> [1752,]  1.1691687  1.1055802 -0.07367103 -0.4972907 -0.4638968 -0.21484853 #> [1753,] -0.6586451 -0.8349460 -0.01254622 -0.3074720 -0.2805971 -0.05466868 #> [1754,] -1.4588290  0.9388040  0.36448098 -1.3283363  0.7716119  0.28392873 #> [1755,] -1.0632594 -0.9668432 -0.32185325 -0.7422241 -0.7051590 -0.67179199 #> [1756,]  0.6449520  0.9214438  0.24118437  0.6729556  0.6862298  0.20632965 #> [1757,] -0.7579938  1.1472435 -0.03250068  2.5114172 -0.3676926 -0.11411627 #> [1758,]  0.6135861 -1.1019508  0.17205008  0.6139650  0.6234587  0.15890711 #> [1759,]  0.6825436  0.9375700  0.35402806 -1.3388759  0.7652616  0.27761233 #> [1760,] -0.8656604 -0.9078412 -0.07992727 -0.5084224 -0.4747606 -0.22882367 #> [1761,]  0.7402672  0.9611734 -1.62961061 -1.1530814  0.8946488  0.42474702 #> [1762,]  0.6290361  0.9144193  0.20362278 -1.5559037  0.6540166  0.18101588 #> [1763,]  1.1126801  1.0889392 -0.10304065 -0.5447363 -0.5102750 -0.27847817 #> [1764,]  0.6197223  0.9102514  0.18404936 -1.5992043  0.6355112  0.16740987 #> [1765,]  1.0124691  1.0579146 -0.19530416 -0.6480545 -0.6118898  2.19028051 #> [1766,] -1.5243867  0.9262500  0.27060287  0.6943238  0.7090307  0.22553126 #> [1767,] -0.7900463 -0.8827810 -0.04302848 -0.4297143 -0.3981940 -0.14176458 #> [1768,]  0.6138420  0.9075974  0.17253665  0.6144361 -1.6026695  0.15925445 #> [1769,]  1.0222850 -0.9424669 -0.18294563 -0.6366501  1.6649052 -0.43406086 #> [1770,] -1.1836896 -0.9991420  1.50186290  1.1059012  1.1535841 -1.17850371 #> [1771,]  0.9200530 -0.9733750 -0.37354806 -0.7728669 -0.7356292 -0.75378853 #> [1772,] -1.1182840 -0.9818995 -0.45302336 -0.8144382 -0.7770540 -0.87502491 #> [1773,] -1.0208893  1.0472554 -0.24434598 -0.6887108 -0.6520864 -0.54290517 #> [1774,]  0.7086528  0.9484111  0.45655556  0.8003131 -1.2156822  0.33793955 #> [1775,]  0.8795197  1.0132747  1.97279907  1.1909363 -0.8022499 -0.95443866 #> [1776,] -1.4495699 -1.0631100  0.38054816  0.7616938 -1.2802073  0.29355828 #> [1777,]  0.7813787 -1.0233154  0.88501226  0.9579306  0.9927016  0.56375265 #> [1778,]  0.8569835 -0.9947759 -0.60435802 -0.8807564 -0.8433369  0.91453458 #> [1779,]  0.9114358 -0.9761842 -0.39813899  1.2716718  1.3349883 -0.79187564 #> [1780,]  0.9216660 -0.9728529 -0.36914110  1.2980611  1.3639701  1.33886077 #> [1781,]  0.7878654  0.9796933 -1.06837764  0.9726153 -0.9914540  0.58870328 #> [1782,]  0.6562618 -1.0794909  0.27133117  0.6948308  0.7095722 -4.42477037 #> [1783,] -1.4676578  0.9370708  0.34988164 -1.3431670  0.7627054  0.27509510 #> [1784,]  0.6653359  0.9302667  0.29778667 -1.4032873  0.7285711  0.24285624 #> [1785,]  0.5887355 -1.1159921  0.13001849  0.5689879  0.5757826  0.12796419 #> [1786,]  0.7869828  0.9793570 -1.07652257  0.9706111  1.0064464  0.58525657 #> [1787,]  0.8087979 -1.0125634  1.11796992 -0.9797231 -0.9426711  0.67538225 #> [1788,] -1.5174677  0.9275414  0.27907307 -1.4282440  0.7152644  0.23097019 #> [1789,]  0.9443829  1.0355983  3.19485839 -0.7366243 -0.6995970 -0.65746435 #> [1790,] -0.9286668  1.0780664 -0.12865314  1.7283348 -0.5434827 -0.33062295 #> [1791,]  1.2387654  1.1253327 -0.04979208  2.2366570 -0.4150513 -0.15870457 #> [1792,] -1.0208771 -0.9548734  4.09288862  1.4520202  1.5335744 -0.54287123 #> [1793,] -0.7676164  1.1428198 -0.03540059 -0.4075328 -0.3767269 -0.12191182 #> [1794,]  0.6414970 -1.0870402  0.23256493  0.6663367  0.6791738  0.20060506 #> [1795,]  1.0729867  1.0768919 -0.13179320 -0.5823935  1.8274270 -0.33684494 #> [1796,]  0.6484437 -1.0834603  0.25017053 -1.4712912 -1.4421766  0.21224861 #> [1797,]  0.5382323 -1.1470702  0.07081259  0.4824232  0.4845195  0.07999362 #> [1798,] -0.8278259  1.1166939 -0.05904724 -0.4682847 -0.4356416 -0.18106469 #> [1799,]  0.7457342  0.9633417  0.64500980  0.8790636  0.9074053  0.44143768 #> [1800,] -0.8380719 -0.8988805 -0.06417914 -0.4790055 -0.4460759 -0.19311581 #> [1801,] -1.8002224  0.8802519  0.08769152  0.5112648  0.5148494  0.09437156 #> [1802,]  0.9965338 -0.9498596 -0.21746543 -0.6672517 -0.6308560  2.01562417 #> [1803,]  0.6542717 -1.0804955  0.26580493  0.6909583  0.7054375  0.22243329 #> [1804,]  0.7097474  0.9488595  0.46135458  0.8025893 -1.2120773  0.34068271 #> [1805,]  0.6706138 -1.0723625  0.31416246  0.7230493  0.7397326  0.25311887 #> [1806,] -1.3959911 -1.0509182 -2.03597700 -1.2249577 -1.1907144  0.35758075 #> [1807,]  0.6621638  0.9289061  0.28829926  0.7063731  0.7219022  0.23685213 #> [1808,] -1.2937781 -1.0267281 -1.21629411  0.9389577  0.9721517  0.53254560 #> [1809,] -0.9739079 -0.9411983 -0.17757456 -0.6315183 -0.5955732  2.35751827 #> [1810,]  0.7628639  0.9700653 -1.32926185 -1.0910139  0.9479368  0.49720383 #> [1811,] -1.1386170 -0.9873330 -0.51184645 -0.8418958  1.2430572  1.03988968 #> [1812,]  0.5768204  0.8904703  0.11319958  0.5479782  0.5535703  0.11496743 #> [1813,]  0.8166513  0.9905195  1.19361173  1.0390087 -0.9253054 -1.40756058 #> [1814,]  0.6742524  0.9340672  0.32589378 -1.3693285 -1.3378375  0.26039620 #> [1815,] -0.7297794  1.1606490 -0.02513498  2.6929834 -0.3418109 -0.09355176 #> [1816,]  1.2212196 -0.8925168 -0.05484464 -0.4589875 -0.4266017 -0.17101808 #> [1817,] -0.8218816  1.1191612 -0.05623350 -0.4621158  2.3275168 -0.17435697 #> [1818,] -1.0139827 -0.9528938 -0.23336262 -0.6801613 -0.6436243  1.90861826 #> [1819,] -0.9462737 -0.9329376 -0.14611140  1.6696214  1.7746763 -0.36480499 #> [1820,]  0.7323402 -1.0438311  0.57047688 -1.1761532  0.8763061 -2.49093242 #> [1821,]  0.9569467 -0.9617249 -0.28619480 -0.7189262 -0.6820307 -0.61348868 #> [1822,]  0.9488320  1.0370900 -0.30319284 -0.7302809 -0.6932985  1.55890691 #> [1823,] -1.5383986  0.9236581  0.25433710 -1.4647054  0.6966568  0.21497660 #> [1824,] -0.7661759  1.1434774 -0.03495294  2.4622863 -0.3753677 -0.12071818 #> [1825,] -1.1093867 -0.9795003 -0.42915749  1.2460218  1.3068448 -0.83916646 #> [1826,]  0.7493895  0.9647854  0.66673551  0.8870088 -1.0917234  0.45289037 #> [1827,]  0.5823244 -1.1197406  0.12072244  0.5576385  0.5637788  0.12083129 #> [1828,] -1.0965354 -0.9760113 -0.39658150 -0.7855297  1.3364752 -0.78947952 #> [1829,]  0.9251152 -0.9717407 -0.35991632 -0.7651026 -0.7279033 -0.73243127 #> [1830,]  0.9940140 -0.9505964 -0.22122786 -0.6703676 -0.6339368  1.98906889 #> [1831,] -0.9849993  1.0587970 -0.19173486  1.5508298 -0.6086929 -0.45009784 #> [1832,]  1.0517574 -0.9342988 -0.15090120 -0.6042084 -0.5686687 -0.37401727 #> [1833,] -0.7313873  1.1598670 -0.02551257 -0.3728423 -0.3432615 -0.09463652 #> [1834,] -0.9459320 -0.9328344 -0.14575427 -0.5985402 -0.5630916 -0.36411539 #> [1835,] -1.0902380  1.0263872 -0.38140432  1.2865901  1.3513689 -0.76601667 #> [1836,]  0.9938386 -0.9506478 -0.22149252  1.4912346 -0.6341521 -0.50321276 #> [1837,] -0.8355232  1.1135331 -0.06286837 -0.4763284 -0.4434693 -0.19005923 #> [1838,] -0.8966859  1.0896992 -0.10146251 -0.5424575 -0.5080431 -0.27517479 #> [1839,] -1.0423093  1.0406167 -0.28125678 -0.7155357 -0.6786677 -0.60528851 #> [1840,] -1.8002224  0.8802519  0.08769152  0.5112648  0.5148494  0.09437156 #> [1841,] -1.0163444 -0.9535730 -0.23707003 -0.6830793 -0.6465119 -0.53036334 #> [1842,]  1.1429641 -0.9108036 -0.08590036 -0.5184727 -0.4845784 -0.24193621 #> [1843,]  0.5766215  0.8903762  0.11293538  0.5476305 -1.8076546  0.11475991 #> [1844,]  1.3633583 -0.8629236 -0.02601195 -0.3748105 -0.3451565 -0.09606556 #> [1845,]  0.7529038  0.9661688 -1.45304875  0.8946783  0.9242661 -2.15458386 #> [1846,]  0.7966965  0.9830433 -0.99066595  0.9927709 -0.9704159  0.62410010 #> [1847,] -0.9473597 -0.9332653 -0.14725125 -0.6002036 -0.5647280 -0.36700341 #> [1848,]  0.6710907 -1.0721290  0.31567912 -1.3812236  0.7407451  0.25406313 #> [1849,]  0.6963418 -1.0600695  0.40544079  0.7749155 -1.2573758  0.30829752 #> [1850,] -1.1756236  1.0029568 -0.63569779  1.1199039  1.1688618 -1.13703993 #> [1851,] -0.8341678  1.1140869 -0.06218062 -0.4749075 -0.4420861 -0.18844971 #> [1852,]  0.7553564 -1.0339854 -1.42138127  0.9000488 -1.0751898  0.47210157 #> [1853,] -0.8133890 -0.8906885 -0.05241224 -0.4533670 -0.4211408 -0.16512379 #> [1854,]  1.0543409  1.0711258 -0.14841371 -0.6014869 -0.5659906 -0.36924147 #> [1855,] -1.2726492  0.9788917  0.91920180 -1.0332250  1.0034458 -1.72259805 #> [1856,]  0.7983292 -1.0166116  1.02352003  0.9965178  1.0345532  0.63082871 #> [1857,] -1.1059889  1.0218883 -0.42033042 -0.7980368  1.3145812 -0.82579007 #> [1858,]  0.7599562 -1.0320647 -1.36410237 -1.0987076  0.9409969  0.48735666 #> [1859,] -0.6907221 -0.8471945 -0.01731539 -0.3355894 -0.3074828 -0.07013240 #> [1860,] -1.6108977  0.9107232  0.18617151  0.6272611  0.6375837  0.16890035 #> [1861,]  0.9370010 -0.9679488 -0.33009457 -0.7473386 -0.7102407 -0.68505352 #> [1862,]  0.8444076 -0.9992900 -0.66802491  1.1049175 -0.8676706  0.84638680 #> [1863,]  0.6961633 -1.0601527  0.40473737 -1.2910720  0.7949150  0.30788389 #> [1864,]  0.8369266  0.9979870  1.40936381 -0.9199874  1.1329446 -1.23787204 #> [1865,] -1.2934874  0.9740347  0.82342209 -1.0645705 -1.0282015  0.53317275 #> [1866,]  1.1998960 -0.8973448 -0.06179667 -0.4741092 -0.4413091 -0.18754941 #> [1867,] -0.7768837 -0.8782505 -0.03839909 -0.4166324  2.5938513 -0.12982146 #> [1868,]  0.5618270 -1.1320967  0.09470015  0.5220542  0.5262160  0.10015193 #> [1869,] -0.7311321 -0.8620757 -0.02545231 -0.3726029 -0.3430310 -0.09446364 #> [1870,] -1.1750337 -0.9968986 -0.63353987 -0.8921095  1.1699911  0.88179179 #> [1871,]  0.8774417  1.0125409 -0.51508333  1.1857635 -0.8059098 -0.96633897 #> [1872,] -0.7952889 -0.8845710 -0.04500043 -0.4349761 -0.4032939 -0.14676212 #> [1873,] -0.8622404  1.1028505 -0.07781209 -0.5047323  2.1224300 -0.22412755 #> [1874,]  1.1972201 -0.8979585 -0.06273853 -0.4760610 -0.4432090 -0.18975568 #> [1875,] -1.3154426  0.9690268 -1.36113642  0.9106985 -1.0620460  0.48817752 #> [1876,]  1.4216318  1.1738011 -0.01958937 -0.3470268 -0.3184492 -0.07715267 #> [1877,]  1.1923694 -0.8990757 -0.06448819 -0.4796309 -0.4466848 -0.19383439 #> [1878,]  0.8693749 -0.9904119 -0.54834454 -0.8577941 -0.8203601  0.98595945 #> [1879,] -0.7852581 -0.8811390 -0.04129226  2.3533065 -0.3935633 -0.13732132 #> [1880,]  0.8904167 -0.9831845 -0.46632200 -0.8208634 -0.7834654  1.11754384 #> [1881,] -1.3274923  0.9663245  0.69066619 -1.1166384 -1.0808445  0.46540790 #> [1882,]  0.8513970 -0.9967704  1.58293155 -0.8914201 -0.8540168 -1.13156174 #> [1883,]  0.8709721  1.0102486 -0.54156781  1.1697251 -0.8174679  0.99548484 #> [1884,]  0.6864170 -1.0647402 -2.71838787 -1.3250061  0.7736399  0.28596480 #> [1885,]  0.8850526  1.0152227 -0.48580863  1.2047589 -0.7926276  1.08272531 #> [1886,] -1.2570223  0.9826026 -1.00054270  0.9900995  1.0275867  0.61933150 #> [1887,]  1.1823396 -0.9014046 -0.06828655 -0.4871446  2.2026214 -0.20260387 #> [1888,]  0.9335484  1.0319451  2.95460594 -0.7524325  1.3980076 -0.69842957 #> [1889,]  1.2023282 -0.8967884 -0.06095466 -0.4723459  2.2748319 -0.18557055 #> [1890,] -0.9282613  1.0782106 -0.12827297 -0.5781267 -0.5430261 -0.32986732 #> [1891,]  0.5548047  0.8799207  0.08696441  0.5101099  0.5136334  0.09376599 #> [1892,]  0.8945690 -0.9817846 -0.45185222 -0.8138658  1.2878583  1.14511406 #> [1893,]  0.6397267 -1.0879605  0.22825114 -1.5083940  0.6755719  0.19772205 #> [1894,] -0.9261905 -0.9268285 -0.12634671 -0.5757558 -0.5406976 -0.32603086 #> [1895,] -0.8227415 -0.8938125 -0.05663328 -0.4630058 -0.4305077 -0.17531458 #> [1896,]  0.7804281 -1.0236969  0.87774340 -1.0462579  0.9903792 -1.78517439 #> [1897,]  0.7898872 -1.0199268  0.95239264 -1.0233184  1.0136057  0.59665973 #> [1898,] -1.8002224  0.8802519  0.08769152  0.5112648  0.5148494  0.09437156 #> [1899,] -1.3940206  0.9519606  0.49588765  0.8184793  0.8421177  0.36023633 #> [1900,]  0.6775391  0.9354593  0.33680948 -1.3571301 -1.3253780  0.26711434 #> [1901,] -0.8789086  1.0964025 -0.08859002 -0.5228325 -0.4888401 -0.24777265 #> [1902,] -1.2320540  0.9886587  1.14497959  1.0273361  1.0680319  0.68796364 #> [1903,] -0.9746759 -0.9414255 -0.17852546 -0.6324350  1.6765101 -0.42592998 #> [1904,]  0.8258000  0.9939047  1.28719007  1.0605283  1.1041408  0.75314192 #> [1905,]  1.1677650 -0.9048353 -0.07427307 -0.4983912 -0.4649704 -0.21620475 #> [1906,]  0.9082275 -0.9772390 -0.40776554 -0.7914857 -0.7541701 -0.80663890 #> [1907,]  1.0863831  1.0809919 -0.12116693 -0.5692468  1.8715815 -0.31564779 #> [1908,]  0.8859285 -0.9847072 -0.48256372  1.2069539 -0.7911204  1.08835009 #> [1909,] -1.2081006  0.9946213  1.30787744 -0.9388519 -0.9015898  0.76248354 #> [1910,] -1.1869457 -0.9999829 -0.67834808 -0.9088223 -0.8714577 -1.19558465 #> [1911,] -0.8532265 -0.9038276 -0.07246451 -0.4950654 -0.4617264  4.71424620 #> [1912,] -1.1061961 -0.9786367 -0.42086433  1.2526431 -0.7609728 -0.82660095 #> [1913,] -0.8004987 -0.8863416 -0.04703585 -0.4402339 -0.4083928 -0.15186868 #> [1914,] -1.1135163  1.0197677 -0.44009773 -0.8080601 -0.7706920 -0.85565885 #> [1915,] -0.7838804 -0.8806653 -0.04080392 -0.4235632 -0.3922358 -0.13606399 #> [1916,] -1.1462532 -0.9893562 -0.53555893 -0.8523150 -0.8148817  1.00410947 #> [1917,]  0.6656470  0.9303999  0.29873143 -1.4020806  0.7292268  0.24345174 #> [1918,]  0.6797103 -1.0679467  0.34418973  0.7411998 -1.3172440  0.27162856 #> [1919,] -1.5847191  0.9153046  0.20802858  0.6464610 -1.5197458  0.18403672 #> [1920,]  0.6672901  0.9311026  0.30376303  0.7164687  0.7326943  0.24661608 #> [1921,] -1.0397624  1.0413967 -0.27663332  1.4038601 -0.6754804 -0.59758107 #> [1922,] -1.1761207  1.0028270  1.56857517 -0.8936287 -0.8562294  0.87753107 #> [1923,] -0.7603423 -0.8724807 -0.03318906 -0.4004547 -0.3698878 -0.11598056 #> [1924,]  0.6832984 -1.0662261  0.35668914  0.7484158  0.7668909  0.27922432 #> [1925,] -0.9117553 -0.9223804 -0.11359095 -0.5593513 -0.5245992 -0.30027765 #> [1926,]  0.6852241  0.9386961  0.36355525  0.7523016  0.7710549  0.28337102 #> [1927,] -0.8360542 -0.8982172 -0.06313955 -0.4768856 -0.4440117 -0.19069277 #> [1928,]  0.6739101 -1.0707533  0.32477441 -1.3706088  0.7467449  0.25970441 #> [1929,] -0.9563697 -0.9359747 -0.15700405 -0.6107497 -0.5751080  2.59296060 #> [1930,]  0.5965387  0.8996843  0.14215036  0.5829426 -1.6933170  0.13710172 #> [1931,] -1.1942164 -1.0018549  1.41442049  1.0880293  1.1340976 -1.23444902 #> [1932,]  0.9979407 -0.9494493 -0.21539671 -0.6655217 -0.6291458  2.03057515 #> [1933,] -1.1438641 -0.9887242  1.89379023 -0.8490489 -0.8116168 -0.98508202 #> [1934,]  1.1028058  1.0859705 -0.10945536 -0.5537453 -0.5191027 -0.29178970 #> [1935,] -0.9902133 -0.9459964 -0.19871709  1.5358365 -0.6149078 -0.46271898 #> [1936,] -0.9105136 -0.9219955 -0.11254700  1.7922739 -0.5232254 -0.29814175 #> [1937,]  0.5747839  0.8895063  0.11051920 -1.8368062  0.5498156  0.11285699 #> [1938,] -0.9048892 -0.9202475 -0.10791995 -0.5516247  1.9341456 -0.28861998 #> [1939,]  0.7670415  0.9716892 -1.28097690 -1.0801046  0.9579507  0.51163304 #> [1940,]  0.9679226 -0.9583718 -0.26491419 -0.7039960  1.4987400  1.73036626 #> [1941,] -0.7942700  1.1309355 -0.04461128 -0.4339512 -0.4023003 -0.14577989 #> [1942,] -0.9092349 -0.9215988 -0.11148045 -0.5565094 -0.5218125  3.37889249 #> [1943,]  1.2559754  1.1300978 -0.04534854 -0.4358874 -0.4041775 -0.14763911 #> [1944,]  1.3134406  1.1456881 -0.03349093 -0.4014407 -0.3708402 -0.11679533 #> [1945,]  1.3633583 -0.8629236 -0.02601195 -0.3748105 -0.3451565 -0.09606556 #> [1946,] -1.3017710  0.9721323 -1.26812146  0.9283761 -1.0409090  0.51563855 #> [1947,]  0.9547018 -0.9624169 -0.29078524 -0.7220400 -0.6851199 -0.62108292 #> [1948,]  0.5302194  0.8677908  0.06397001  0.4692899  0.4707355  0.07394905 #> [1949,] -1.3942655 -1.0505202  0.49529790  0.8182148 -1.1878839  0.35990505 #> [1950,]  0.5747839  0.8895063  0.11051920 -1.8368062  0.5498156  0.11285699 #> [1951,] -1.2788075  0.9774455 -1.12406875  0.9592842  0.9941684  0.56602325 #> [1952,]  0.7375758  0.9601018  0.59868568  0.8614482  0.8884005 -2.39969392 #> [1953,]  0.7193593 -1.0495640  0.50537702  0.8227040  0.8466634  0.36555467 #> [1954,]  1.0476785  1.0690484 -0.15492657  1.6432662 -0.5729364 -0.38170810 #> [1955,]  0.7068980 -1.0551960  0.44895018  0.7966700 -1.2214959  0.33357879 #> [1956,]  0.8553472  1.0046633  1.63336202 -0.8838592 -0.8464439  0.90542492 #> [1957,] -1.3961341 -1.0509512  0.49082395  0.8162008  0.8396665  0.35738894 #> [1958,] -0.9674470 -0.9392816 -0.16974454 -0.6238305  1.7006976 -0.40964025 #> [1959,]  0.7408018 -1.0401650 -1.62165944 -1.1515506  0.8958924  0.42635629 #> [1960,] -1.0652472  1.0337024 -0.32595206 -0.7447795  1.4130323  1.47406294 #> [1961,] -0.8212476  1.1194257 -0.05594025 -0.4614600 -0.4290049 -0.17365356 #> [1962,]  1.2447085  1.1269834 -0.04820340 -0.4431755 -0.4112466 -0.15477518 #> [1963,]  0.6262128 -1.0950978  0.19751061  0.6374151  0.6483801  0.17680036 #> [1964,]  0.7731734 -1.0266291  0.82392498  0.9395018  0.9727407  0.53342449 #> [1965,]  0.8992103 -0.9802298 -0.43628430  1.2404603 -0.7687895  1.17658024 #> [1966,] -1.3214550  0.9676744  0.71232873 -1.1073113 -1.0714060  0.47665438 #> [1967,] -1.2137996  0.9931888  1.26683310 -0.9470178  1.0991531  0.74391619 #> [1968,]  1.3628872  1.1587284 -0.02607293 -0.3750489 -0.3453861 -0.09623964 #> [1969,] -0.6586451 -0.8349460 -0.01254622 -0.3074720 -0.2805971 -0.05466868 #> [1970,]  0.8574639 -0.9946052 -0.60206757  1.1365593  1.1870451  0.91722338 #> [1971,] -0.9075964  1.0856705 -0.11012639  1.8028891 -0.5200045 -0.29317180 #> [1972,]  1.1358876  1.0958453 -0.08959196 -0.5244320 -0.4904039 -0.24993650 #> [1973,] -1.2914098 -1.0261521  0.83243890  0.9421287 -1.0250261  0.53768124 #> [1974,] -1.0535392 -0.9641276  3.30647296 -0.7297860 -0.6928073 -0.64023848 #> [1975,] -1.3896554 -1.0494552  0.50653755  0.8232167  0.8472151  0.36620352 #> [1976,] -1.3496170  0.9614452 -1.61944948  0.8687160 -1.1157733  0.42680607 #> [1977,] -0.7479279 -0.8680931 -0.02968634  2.5739650 -0.3583549 -0.10639828 #> [1978,]  1.0327968  1.0643747 -0.17069506 -0.6247773 -0.5889272 -0.41141264 #> [1979,] -1.2105794  0.9939971  1.28984014  1.0611208  1.1047859  0.75434048 #> [1980,]  0.5618270 -1.1320967  0.09470015  0.5220542  0.5262160  0.10015193 #> [1981,] -0.6923898 -0.8478205 -0.01760063 -0.3370820 -0.3089130 -0.07102398 #> [1982,] -0.8724970  1.0988637 -0.08430269 -0.5158356 -0.4820015 -0.23844975 #> [1983,]  1.0465391  1.0686922 -0.15607302 -0.6097639 -0.5741374 -0.38389018 #> [1984,] -1.3082118  0.9706640  0.76263555 -1.0869769  0.9516185  0.50247846 #> [1985,]  0.5382323 -1.1470702  0.07081259  0.4824232  0.4845195  0.07999362 #> [1986,] -1.0362281 -0.9592481 -0.27032481 -0.7078726 -0.6710694 -0.58701723 #> [1987,]  1.1576533 -0.9072485 -0.07878086 -0.5064313 -0.4728166 -0.22628194 #> [1988,] -0.8227040 -0.8938001 -0.05661583 -0.4629670 -0.4304700 -0.17527280 #> [1989,] -0.7417074  1.1549004 -0.02805320 -0.3825806 -0.3526421 -0.10184384 #> [1990,] -1.3497944  0.9614065  0.61694415 -1.1514026 -1.1160555  0.42651231 #> [1991,]  1.1349513 -0.9127681 -0.09009395 -0.5252285 -0.4911828 -0.25101856 #> [1992,]  1.0337716 -0.9392473 -0.16960745 -0.6236936 -0.5878591 -0.40938444 #> [1993,] -1.0484670  1.0387412 -0.29270822  1.3824877 -0.6864036 -0.62425612 #> [1994,]  0.9245645 -0.9719179 -0.36137127 -0.7659414  1.3722357 -0.73471942 #> [1995,]  0.6288864  0.9143527  0.20329471 -1.5565852 -1.5297136  0.18079035 #> [1996,] -1.6939609 -1.1150667  0.13242668  0.5718312  0.5787916  0.12979287 #> [1997,]  0.5618270 -1.1320967  0.09470015  0.5220542  0.5262160  0.10015193 #> [1998,] -0.6923898 -0.8478205 -0.01760063 -0.3370820 -0.3089130 -0.07102398 #> [1999,] -1.0635698 -0.9669297 -0.32249048  1.3465784 -0.7055553 -0.67282011 #> [2000,]  0.6970046 -1.0597606  0.40806287  0.7762735  0.7967646  0.30983795 #>             Item_19    Item_20 #>    [1,] -2.38359837 -1.8373382 #>    [2,] -1.63275033 -1.3746714 #>    [3,]  0.28149280  0.4008023 #>    [4,]  0.36972199  0.4939941 #>    [5,]  1.60391272 -0.6570717 #>    [6,]  0.73458521 -1.1957858 #>    [7,]  0.49897094  0.6216629 #>    [8,]  0.18028829  0.2848136 #>    [9,]  0.71046727 -1.2267896 #>   [10,]  0.25295806  0.3692647 #>   [11,]  0.39911732 -1.9089835 #>   [12,]  0.54167495  0.6620649 #>   [13,]  0.37144662  0.4957600 #>   [14,] -0.19876709 -0.2734839 #>   [15,]  0.14362388  0.2392486 #>   [16,]  0.06243018  0.1263014 #>   [17,]  0.80179578 -1.1181489 #>   [18,] -0.37941540 -0.4489702 #>   [19,]  0.40113052  0.5258638 #>   [20,]  0.55802285  0.6773326 #>   [21,]  0.07183469  0.1406484 #>   [22,]  0.72437035 -1.2086944 #>   [23,]  0.56297521  0.6819371 #>   [24,]  0.69465459  0.8011884 #>   [25,]  0.72853508 -1.2033928 #>   [26,]  0.58339028  0.7008195 #>   [27,] -0.31583376 -0.3900673 #>   [28,] -6.02255829  0.2673930 #>   [29,]  0.56829920 -1.4558657 #>   [30,]  0.05840197  0.1200044 #>   [31,]  0.26424835  0.3818375 #>   [32,]  0.93139662 -0.9967939 #>   [33,]  0.24295321  0.3580136 #>   [34,]  0.94152640  1.0115720 #>   [35,] -0.56636037 -0.6104053 #>   [36,]  0.20837215  0.3182505 #>   [37,]  0.84035618 -1.0785937 #>   [38,]  0.62688532  0.7405451 #>   [39,] -1.82810672  0.6670629 #>   [40,] -0.82042908  1.2330247 #>   [41,] -0.65113475  1.4720835 #>   [42,] -1.53446197 -1.3107626 #>   [43,]  0.08915320  0.1659815 #>   [44,] -0.39647144 -0.4643661 #>   [45,]  0.31181428  0.4335077 #>   [46,]  0.23447273  0.3483919 #>   [47,]  0.18123499  0.2859597 #>   [48,]  0.55953637  0.6787408 #>   [49,]  0.30626164  0.4275761 #>   [50,]  0.60428201  0.7199838 #>   [51,] -1.18290765  0.9313755 #>   [52,]  0.29907917  0.4198660 #>   [53,]  0.16059115  0.2606357 #>   [54,]  0.26113963  0.3783884 #>   [55,]  0.07183469  0.1406484 #>   [56,]  0.35838214  0.4823343 #>   [57,] -0.52829995 -0.5786986 #>   [58,] -0.56528141 -0.6095134 #>   [59,] -0.47819005 -0.5361258 #>   [60,]  1.05434711 -0.9063912 #>   [61,] -0.84683269  1.2034379 #>   [62,]  0.49491435  0.6177839 #>   [63,]  2.09354579 -0.5356688 #>   [64,]  0.36092688  0.4849583 #>   [65,] -0.92105800  1.1283525 #>   [66,]  0.06243018  0.1263014 #>   [67,]  0.25310877  0.3694334 #>   [68,]  0.25118238  0.3672755 #>   [69,]  0.16658982  0.2680687 #>   [70,]  0.12240038  0.2116421 #>   [71,] -0.62676430 -0.6597278 #>   [72,] -0.66775096  1.4439135 #>   [73,]  0.12557859  0.2158432 #>   [74,]  0.94989987 -0.9818717 #>   [75,]  0.62927237  0.7427063 #>   [76,]  1.20050194 -0.8205138 #>   [77,] -0.97711239 -0.9273178 #>   [78,] -1.46069255  0.7922874 #>   [79,]  0.29154732  0.4117344 #>   [80,] -0.94249436  1.1086218 #>   [81,]  0.91180560 -1.0131750 #>   [82,]  0.07557302  0.1462273 #>   [83,]  0.87779960  0.9586467 #>   [84,]  0.68921105  0.7963699 #>   [85,] -1.52536864 -1.3048025 #>   [86,]  0.20111132  0.3097123 #>   [87,] -1.51414599  0.7707514 #>   [88,]  0.66145848 -1.2959006 #>   [89,]  0.84828475 -1.0708553 #>   [90,]  0.58973234 -1.4151201 #>   [91,] -2.20774357  0.5772080 #>   [92,] -1.25308157  0.8911150 #>   [93,]  0.33143621  0.4542753 #>   [94,] -0.21156015 -0.2868818 #>   [95,]  0.57101309 -1.4505572 #>   [96,] -0.26887985 -0.3447801 #>   [97,]  0.56934870 -1.4538075 #>   [98,]  1.06906804  1.1150686 #>   [99,] -0.69024408  1.4076958 #>  [100,]  1.57224360 -0.6671963 #>  [101,] -0.44759596 -0.5096235 #>  [102,]  0.15036426 -4.0353211 #>  [103,] -0.21199292 -0.2873317 #>  [104,] -1.10650701  0.9802989 #>  [105,] -0.35911979 -0.4304379 #>  [106,] -0.60515942  1.5570999 #>  [107,]  0.05840197  0.1200044 #>  [108,] -1.11883481 -1.0288001 #>  [109,] -0.42607268 -0.4907256 #>  [110,] -0.36323940 -0.4342190 #>  [111,]  0.56219931  0.6812163 #>  [112,]  0.58983161  0.7067450 #>  [113,]  0.62130270  0.7354831 #>  [114,]  1.55823277 -0.6717914 #>  [115,] -0.26755816 -0.3434799 #>  [116,]  0.95541999 -0.9775189 #>  [117,]  0.11314380  0.1992578 #>  [118,] -0.55836579 -0.6037876 #>  [119,] -0.15916661 -0.2306452 #>  [120,]  0.07608769  0.1469903 #>  [121,]  0.30918123  0.4306980 #>  [122,] -1.83553834  0.6649910 #>  [123,]  0.18878405  0.2950492 #>  [124,]  0.21934303  0.3310213 #>  [125,] -0.91010845  1.1387471 #>  [126,]  0.12587154  0.2162292 #>  [127,]  0.64196924  0.7541700 #>  [128,] -0.59324598 -0.6325028 #>  [129,] -1.52406641  0.7669016 #>  [130,]  0.31219697  0.4339156 #>  [131,]  0.09360033  0.1722937 #>  [132,]  0.25168888 -2.7185491 #>  [133,]  0.34619163  0.4697035 #>  [134,]  0.43787970  0.5624235 #>  [135,] -1.04748930  1.0223771 #>  [136,] -2.05022250  0.6109169 #>  [137,]  0.12163567  0.2106275 #>  [138,]  0.07130676  0.1398551 #>  [139,]  0.10424975  0.1871339 #>  [140,]  0.27165943  0.3900223 #>  [141,] -0.65070497  1.4728289 #>  [142,]  0.21154261  0.3219569 #>  [143,]  0.43652778  0.5610916 #>  [144,] -0.35054065 -0.4225311 #>  [145,]  0.32904072  0.4517557 #>  [146,] -2.17137794  0.5846059 #>  [147,]  0.13176658  0.2239525 #>  [148,]  1.77906995 -0.6068743 #>  [149,] -1.26056036 -1.1273215 #>  [150,] -1.31252322  0.8600041 #>  [151,]  0.62112107 -1.3599554 #>  [152,]  0.39767085  0.5223827 #>  [153,] -0.98273361 -0.9314056 #>  [154,]  0.20521229  0.3145434 #>  [155,] -0.45509750  1.9373845 #>  [156,] -1.08282360  0.9966977 #>  [157,]  0.13378420  0.2265772 #>  [158,]  1.46356612  1.4187116 #>  [159,]  0.59322896  0.7098643 #>  [160,] -0.85330635 -0.8358191 #>  [161,]  0.35179596  0.4755229 #>  [162,]  0.07144320  0.1400603 #>  [163,]  0.11192388  0.1976084 #>  [164,] -1.29806070  0.8673416 #>  [165,] -0.21199292 -0.2873317 #>  [166,]  0.10750318  0.1915958 #>  [167,]  0.27466373  0.3933253 #>  [168,]  0.50593826  0.6283080 #>  [169,]  0.75909314  0.8575812 #>  [170,]  0.45234263 -1.7342645 #>  [171,] -1.31677491  0.8578741 #>  [172,] -2.18239117  0.5823425 #>  [173,]  0.93347404  1.0049317 #>  [174,] -0.19664691 -0.2712443 #>  [175,]  0.09797301  0.1784324 #>  [176,]  0.07075745  0.1390283 #>  [177,]  0.99238784  1.0532140 #>  [178,]  1.89293358 -0.5786823 #>  [179,]  0.28661221  0.4063797 #>  [180,]  0.37069983  0.4949955 #>  [181,] -0.54791088 -0.5950999 #>  [182,]  0.56195213 -1.4684575 #>  [183,] -0.80595085 -0.8000170 #>  [184,]  0.86712960  0.9496990 #>  [185,] -0.43009755 -0.4942761 #>  [186,]  0.07144320  0.1400603 #>  [187,] -1.67522463 -1.4020093 #>  [188,] -0.28387231 -0.3594272 #>  [189,]  0.55417415  0.6737477 #>  [190,]  0.26547264  0.3831933 #>  [191,] -0.67694912 -0.6998655 #>  [192,] -0.19997937 -0.2747619 #>  [193,]  1.04295229 -0.9139748 #>  [194,]  0.20031031  0.3087660 #>  [195,]  0.50337319  0.6258641 #>  [196,] -1.16233643 -1.0593347 #>  [197,]  0.16807501  0.2698992 #>  [198,] -0.31828821 -0.3923896 #>  [199,]  0.17993111  0.2843809 #>  [200,] -1.25436710  0.8904147 #>  [201,]  0.18903843  0.2953540 #>  [202,]  0.10622908 -5.2672550 #>  [203,] -1.45393162  0.7951108 #>  [204,] -0.67338322 -0.6970370 #>  [205,]  0.15145643  0.2491908 #>  [206,] -0.24308235 -0.3191201 #>  [207,]  1.48285591 -0.6978235 #>  [208,]  1.16952514 -0.8371268 #>  [209,]  0.66631331  0.7760031 #>  [210,]  0.15974191  0.2595782 #>  [211,]  0.53312731  0.6540393 #>  [212,] -2.54662042  0.5173456 #>  [213,]  0.48264257 -1.6501545 #>  [214,] -0.87435993  1.1742789 #>  [215,]  0.53921589  0.6597591 #>  [216,]  0.07130676  0.1398551 #>  [217,] -0.47978177 -0.5374936 #>  [218,]  0.16259237  0.2631225 #>  [219,]  0.53628282  0.6570056 #>  [220,]  0.79115150 -1.1296660 #>  [221,]  0.28900073  0.4089740 #>  [222,]  0.59807354  0.7143051 #>  [223,]  0.57024407  0.6886783 #>  [224,]  0.19807943  0.3061259 #>  [225,]  0.05840197  0.1200044 #>  [226,]  0.54399105  0.6642344 #>  [227,]  1.10239879  1.1416295 #>  [228,] -0.38128950 -0.4506697 #>  [229,]  0.57107131 -1.4504438 #>  [230,] -0.31946385 -0.3935004 #>  [231,]  1.31338155  1.3056885 #>  [232,]  0.18238717  0.2873526 #>  [233,]  1.44045574 -0.7135199 #>  [234,]  0.08477625  0.1596967 #>  [235,] -2.09235423  0.6014622 #>  [236,]  0.12973695  0.2213027 #>  [237,] -0.21162290 -0.2869470 #>  [238,]  0.29212705  0.4123620 #>  [239,]  1.37236987 -0.7405089 #>  [240,]  0.14792375  0.2447218 #>  [241,]  0.27660233  0.3954522 #>  [242,]  1.33681380 -0.7555647 #>  [243,]  0.08974641  0.1668277 #>  [244,] -0.58391755 -0.6248627 #>  [245,]  0.80122170 -1.1187632 #>  [246,]  1.72228836 -0.6221575 #>  [247,] -0.62908314  1.5114906 #>  [248,]  0.15357415  0.2518581 #>  [249,]  0.29020399  0.4102790 #>  [250,]  0.13625514  0.2297791 #>  [251,]  0.86051853 -1.0591625 #>  [252,]  0.58921718  0.7061805 #>  [253,]  0.33028267  0.4530625 #>  [254,] -0.76339125  1.3030675 #>  [255,]  0.08915320  0.1659815 #>  [256,]  0.50766134 -1.5874323 #>  [257,]  0.30048082  0.4213740 #>  [258,]  0.23157725  0.3450883 #>  [259,] -1.31252277  0.8600043 #>  [260,] -0.76937931 -0.7720314 #>  [261,]  0.23575102  0.3498474 #>  [262,] -0.75125868  1.3191733 #>  [263,]  0.15130445  0.2489990 #>  [264,] -0.76677373 -0.7700259 #>  [265,]  0.06243018  0.1263014 #>  [266,]  0.13440622  0.2273845 #>  [267,]  0.34627953  0.4697950 #>  [268,]  0.36967731  0.4939483 #>  [269,] -0.19664691 -0.2712443 #>  [270,]  0.26144652 -2.6404082 #>  [271,]  0.18134853  0.2860971 #>  [272,]  0.26185414 -2.6372559 #>  [273,]  0.96781305 -0.9679066 #>  [274,] -0.40245140 -0.4697272 #>  [275,]  0.39898998 -1.9094507 #>  [276,]  0.17993153  0.2843814 #>  [277,] -0.98215012  1.0741352 #>  [278,]  0.55544513  0.6749322 #>  [279,] -0.50679787  1.7839574 #>  [280,]  0.38857910  0.5132005 #>  [281,]  0.10185378  0.1838272 #>  [282,]  0.23570983  0.3498005 #>  [283,]  0.18940899  0.2957978 #>  [284,] -0.52523505 -0.5761226 #>  [285,]  0.18814811  0.2942868 #>  [286,] -4.30522013  0.3458866 #>  [287,] -1.20955507  0.9156015 #>  [288,] -2.20062420  0.5786393 #>  [289,] -0.78245691 -0.7820737 #>  [290,]  0.23874471  0.3532487 #>  [291,] -1.07023734  1.0056730 #>  [292,]  2.43803401 -0.4766165 #>  [293,] -1.24702571 -1.1180289 #>  [294,]  0.21200913  0.3225012 #>  [295,] -0.98247650 -0.9312187 #>  [296,]  0.07499645  0.1453712 #>  [297,]  0.11151157  0.1970500 #>  [298,]  0.82960457 -1.0892958 #>  [299,]  0.74605472  0.8462639 #>  [300,] -0.42654848  2.0360556 #>  [301,]  0.19023615  0.2967878 #>  [302,]  1.02378122  1.0786678 #>  [303,]  0.54809438  0.6680728 #>  [304,] -0.76551819 -0.7690589 #>  [305,] -0.25321546 -0.3292715 #>  [306,] -0.29945885 -0.3744646 #>  [307,]  0.17228656  0.2750699 #>  [308,]  0.76025179 -1.1647074 #>  [309,]  0.18481706  0.2902835 #>  [310,]  0.07130676  0.1398551 #>  [311,]  0.18303250  0.2881319 #>  [312,]  0.35786454  0.4818001 #>  [313,]  0.24775190  0.3634233 #>  [314,]  0.63184241 -1.3422260 #>  [315,]  0.14740379  0.2440620 #>  [316,]  0.25726888  0.3740804 #>  [317,] -0.48192485 -0.5393336 #>  [318,]  1.20538060 -0.8179662 #>  [319,] -0.43219648 -0.4961246 #>  [320,] -1.09497359 -1.0119342 #>  [321,] -0.19876709 -0.2734839 #>  [322,]  0.13568306  0.2290390 #>  [323,]  1.02741747 -0.9245526 #>  [324,]  0.86415567  0.9472006 #>  [325,]  0.78185912  0.8772342 #>  [326,]  0.24055133  0.3552966 #>  [327,]  0.21026792  0.3204683 #>  [328,]  0.41946141  0.5441936 #>  [329,] -1.48410277  0.7826869 #>  [330,] -0.25836420 -0.3343931 #>  [331,]  0.82183266 -1.0971858 #>  [332,]  0.33835919  0.4615335 #>  [333,]  1.56163322 -0.6706695 #>  [334,] -1.09737721 -1.0136370 #>  [335,] -0.47767794 -0.5356855 #>  [336,]  0.41956988  0.5443015 #>  [337,]  0.47923238 -1.6591507 #>  [338,]  1.10345892  1.1424712 #>  [339,] -1.55870474  0.7537998 #>  [340,]  0.09797301  0.1784324 #>  [341,]  0.30554854  0.4268125 #>  [342,]  0.13913931 -4.2826658 #>  [343,]  1.02874587 -0.9236370 #>  [344,]  0.63964001 -1.3296618 #>  [345,]  0.20438472  0.3135704 #>  [346,]  0.37062798  0.4949220 #>  [347,] -0.21156015 -0.2868818 #>  [348,]  0.34321676  0.4666056 #>  [349,] -0.39567717 -0.4636526 #>  [350,] -0.17123492 -0.2439393 #>  [351,]  0.16937736  0.2715014 #>  [352,]  0.18142358 -3.4942086 #>  [353,]  0.13484236  0.2279501 #>  [354,] -2.04973415  0.6110285 #>  [355,]  0.63719550  0.7498661 #>  [356,] -0.53117402 -0.5811111 #>  [357,]  0.10735333  0.1913910 #>  [358,]  0.48144091  0.6048466 #>  [359,]  0.91858326  0.9926169 #>  [360,]  0.25310877  0.3694334 #>  [361,] -3.98039991  0.3673301 #>  [362,]  0.05840197  0.1200044 #>  [363,] -0.31152072  2.5908321 #>  [364,]  0.74828410 -1.1789641 #>  [365,]  0.77536040  0.8716379 #>  [366,]  0.60914353  0.7244211 #>  [367,]  0.96425418  1.0302432 #>  [368,] -1.34433126 -1.1843317 #>  [369,]  0.20317588  0.3121473 #>  [370,] -0.37934239 -0.4489040 #>  [371,]  0.62422981  0.7381385 #>  [372,]  0.27389081  0.3924764 #>  [373,]  0.21752360  0.3289139 #>  [374,] -1.23013517  0.9038331 #>  [375,]  1.44396027 -0.7121917 #>  [376,]  0.41540122  0.5401501 #>  [377,]  0.29294004  0.4132417 #>  [378,] -1.49572759  0.7780184 #>  [379,] -0.49248701 -0.5483741 #>  [380,]  0.13498994  0.2281414 #>  [381,]  0.13440622  0.2273845 #>  [382,]  1.22251205 -0.8091627 #>  [383,] -1.48706964  0.7814893 #>  [384,] -0.19834493 -0.2730384 #>  [385,]  0.39336057  0.5180357 #>  [386,]  0.12675743  0.2173951 #>  [387,] -0.28835110 -0.3637675 #>  [388,]  1.35793028 -0.7465392 #>  [389,] -0.73505678  1.3414117 #>  [390,]  0.91740265 -1.0084320 #>  [391,] -0.21323545 -0.2886221 #>  [392,]  0.35244588  0.4761964 #>  [393,] -0.41147553 -0.4777823 #>  [394,]  0.55577825 -1.4809492 #>  [395,]  0.26421074  0.3817959 #>  [396,]  0.73178551  0.8338252 #>  [397,]  0.07144320  0.1400603 #>  [398,]  0.64420234  0.7561807 #>  [399,] -0.73256218  1.3449128 #>  [400,]  0.18853800  0.2947543 #>  [401,]  1.07066427 -0.8957805 #>  [402,]  0.07075745  0.1390283 #>  [403,] -1.79283856  0.6771017 #>  [404,]  0.21514374  0.3261511 #>  [405,] -1.51607534 -1.2987027 #>  [406,] -0.25725113 -0.3332879 #>  [407,] -0.21323545 -0.2886221 #>  [408,]  0.58695861 -1.4202448 #>  [409,]  0.31091908  0.4325530 #>  [410,] -0.45232099 -0.5137435 #>  [411,]  0.06243018  0.1263014 #>  [412,] -1.18283482 -1.0736301 #>  [413,] -0.54478000 -0.5924908 #>  [414,]  2.32600996 -0.4941203 #>  [415,] -0.45549523 -0.5165057 #>  [416,]  0.46644171  0.5903446 #>  [417,]  0.46623317  0.5901422 #>  [418,] -0.45011800 -0.5118238 #>  [419,] -0.76508410  1.3008562 #>  [420,]  0.27819054  0.3971921 #>  [421,] -1.75662568  0.6877791 #>  [422,]  0.11314380  0.1992578 #>  [423,]  0.15915180  0.2588426 #>  [424,]  0.25482248  0.3713498 #>  [425,]  0.72604786 -1.2065525 #>  [426,]  0.62116917  0.7353619 #>  [427,] -1.10859994  0.9788796 #>  [428,]  0.26474898  0.3823921 #>  [429,]  0.12568476  0.2159831 #>  [430,]  0.25901323  0.3760236 #>  [431,] -0.56321660 -0.6078056 #>  [432,] -0.38128950 -0.4506697 #>  [433,]  0.48056926  0.6040068 #>  [434,]  0.20920682  0.3192276 #>  [435,]  0.14056467  0.2353314 #>  [436,] -0.30241386 -0.3772947 #>  [437,]  0.36856460  0.4928079 #>  [438,]  0.51860136  0.6403313 #>  [439,]  0.13481721  0.2279175 #>  [440,]  0.75455213 -1.1714474 #>  [441,]  0.61201434 -1.3754450 #>  [442,] -0.70399639  1.3865621 #>  [443,]  0.71703222  0.8209049 #>  [444,]  1.54808114 -0.6751667 #>  [445,]  0.11729404  0.2048385 #>  [446,]  0.09877786  0.1795553 #>  [447,]  0.57347326  0.6916666 #>  [448,]  1.19102011 -0.8255178 #>  [449,] -0.34646786 -0.4187618 #>  [450,]  0.33199769  0.4548653 #>  [451,] -0.70942830 -0.7254712 #>  [452,]  0.11067619 -5.1041990 #>  [453,] -0.80172084 -0.7967954 #>  [454,]  0.32881391  0.4515169 #>  [455,]  0.05840197  0.1200044 #>  [456,] -0.52721369 -0.5777860 #>  [457,] -1.33936320  0.8467585 #>  [458,] -1.07921060  0.9992552 #>  [459,]  0.23356730 -2.8788586 #>  [460,] -0.87230270 -0.8500497 #>  [461,]  0.46016747 -1.7116073 #>  [462,]  0.63548226  0.7483197 #>  [463,] -0.33167232 -0.4049803 #>  [464,]  0.97804201 -0.9601351 #>  [465,]  0.19844508 -3.2620140 #>  [466,]  0.10321576  0.1857090 #>  [467,] -0.59666802 -0.6352985 #>  [468,]  0.92095018 -1.0054521 #>  [469,]  0.13879248  0.2330530 #>  [470,]  1.48731379 -0.6962192 #>  [471,] -0.21156015 -0.2868818 #>  [472,] -0.42573981 -0.4904316 #>  [473,] -0.36165443 -0.4327654 #>  [474,] -2.19151590  0.5804824 #>  [475,] -1.92456962  0.6412734 #>  [476,]  0.39611469  0.5208146 #>  [477,]  0.80557646  0.8975670 #>  [478,]  0.30427137  0.4254439 #>  [479,]  0.63025096 -1.3448240 #>  [480,]  0.15848461  0.2580101 #>  [481,] -0.66715858 -0.6920911 #>  [482,] -1.84092100  0.6634996 #>  [483,] -0.57555471 -0.6179892 #>  [484,]  0.42472319 -1.8201002 #>  [485,]  0.48477413  0.6080550 #>  [486,] -0.30136889 -0.3762947 #>  [487,]  0.59838931  0.7145942 #>  [488,]  0.15182754  0.2496588 #>  [489,]  0.32453679  0.4470066 #>  [490,]  0.43605569  0.5606263 #>  [491,] -0.48339324 -0.5405932 #>  [492,]  0.21384560  0.3246411 #>  [493,]  0.41528597  0.5400352 #>  [494,]  1.15199123 -0.8468793 #>  [495,]  0.12053331  0.2091623 #>  [496,] -0.73320286 -0.7440412 #>  [497,] -2.07839091 -1.6541006 #>  [498,]  0.18090391  0.2855591 #>  [499,]  0.23572346  0.3498160 #>  [500,]  0.86810045  0.9505142 #>  [501,]  1.10005755  1.1397700 #>  [502,]  0.51432559 -1.5716369 #>  [503,]  0.23416674  0.3480432 #>  [504,] -1.54345953  0.7595022 #>  [505,]  0.22519720  0.3377747 #>  [506,]  0.60417415 -1.3891102 #>  [507,] -0.81144287 -0.8041937 #>  [508,]  0.39429450  0.5189785 #>  [509,] -0.31721147 -0.3913713 #>  [510,]  0.32428025  0.4467357 #>  [511,]  0.25601247  0.3726788 #>  [512,] -1.48039737  0.7841886 #>  [513,] -0.40855524 -0.4751802 #>  [514,]  1.06663796 -0.8983721 #>  [515,]  0.17226662  0.2750455 #>  [516,]  1.72265230 -0.6220567 #>  [517,] -0.15916661 -0.2306452 #>  [518,]  0.26142255 -2.6405937 #>  [519,] -1.01253711 -0.9529887 #>  [520,]  0.88477543 -1.0368252 #>  [521,] -0.34233312 -0.4149245 #>  [522,] -2.55856817  0.5154922 #>  [523,]  0.18441004  0.2897932 #>  [524,]  0.65708840 -1.3025040 #>  [525,] -0.52881249 -0.5791291 #>  [526,]  0.21810394  0.3295865 #>  [527,] -1.21827302 -1.0982091 #>  [528,]  0.53833798 -1.5175998 #>  [529,]  1.00813023 -0.9380854 #>  [530,]  0.38976447  0.5144005 #>  [531,] -0.56899828 -0.6125841 #>  [532,]  0.25616898  0.3728535 #>  [533,]  0.24286575  0.3579148 #>  [534,]  0.74758648 -1.1798076 #>  [535,]  0.19452280  0.3019023 #>  [536,]  0.13937381  0.2338011 #>  [537,]  0.22627746  0.3390164 #>  [538,]  0.12608730  0.2165133 #>  [539,] -0.19876709 -0.2734839 #>  [540,] -0.33596998 -0.4089979 #>  [541,] -0.40916745 -0.4757260 #>  [542,] -1.59436200 -1.3498205 #>  [543,]  0.08361492  0.1580166 #>  [544,]  0.17107818  0.2735894 #>  [545,]  0.38234325  0.5068737 #>  [546,]  0.17792799  0.2819502 #>  [547,] -1.72014739  0.6989353 #>  [548,]  0.37727020  0.5017089 #>  [549,]  0.36267325 -2.0544154 #>  [550,] -0.82787295  1.2245148 #>  [551,]  0.49729733  0.6200634 #>  [552,]  0.46842380 -1.6884273 #>  [553,]  0.10822665  0.1925837 #>  [554,] -0.51308948 -0.5658797 #>  [555,] -0.19876709 -0.2734839 #>  [556,]  0.26268941  0.3801091 #>  [557,]  1.03200123 -0.9214022 #>  [558,]  1.08950586 -0.8838781 #>  [559,]  0.16537526  0.2665688 #>  [560,] -0.71411361  1.3714746 #>  [561,] -1.15259693  0.9500990 #>  [562,]  0.19380151 -3.3217782 #>  [563,]  0.29856002  0.4193071 #>  [564,]  0.18220341  0.2871306 #>  [565,] -1.05946225  1.0135063 #>  [566,] -0.41081695  2.0955756 #>  [567,] -0.46623634 -0.5258193 #>  [568,] -0.72291085  1.3586592 #>  [569,]  0.12620447  0.2166676 #>  [570,]  0.39263232  0.5173002 #>  [571,]  0.54716412  0.6672032 #>  [572,]  0.35883270  0.4827992 #>  [573,] -0.86413737  1.1849158 #>  [574,] -0.57560173 -0.6180279 #>  [575,]  0.07130676  0.1398551 #>  [576,]  0.94444975 -0.9862133 #>  [577,]  1.17599983 -0.8335905 #>  [578,] -0.36434318 -0.4352303 #>  [579,] -0.73380195  1.3431702 #>  [580,]  0.73011517  0.8323655 #>  [581,] -1.38656458  0.8245672 #>  [582,] -0.23950480 -0.3155126 #>  [583,]  0.15211161 -3.9997298 #>  [584,]  0.12128475  0.2101614 #>  [585,]  0.27952137  0.3986483 #>  [586,] -0.28012595 -0.3557844 #>  [587,]  0.34756755  0.4711343 #>  [588,] -1.19740714 -1.0837576 #>  [589,]  0.42401286  0.5487156 #>  [590,]  0.07144320  0.1400603 #>  [591,] -0.65778016 -0.6846190 #>  [592,] -0.90103736  1.1475272 #>  [593,]  1.24060899 -0.8000968 #>  [594,]  0.62332511 -1.3562667 #>  [595,] -0.30140157 -0.3763260 #>  [596,] -0.38301535 -0.4522330 #>  [597,]  0.23936409  0.3539512 #>  [598,] -2.76594910  0.4855893 #>  [599,] -0.44798471 -0.5099628 #>  [600,]  0.39886447  0.5235845 #>  [601,] -0.26991323 -0.3457957 #>  [602,]  0.99792439 -0.9454329 #>  [603,] -2.82680040  0.4775540 #>  [604,]  0.54231872  0.6626681 #>  [605,]  0.47619189  0.5997837 #>  [606,]  1.41618280 -0.7228785 #>  [607,]  0.10240905  0.1845951 #>  [608,] -0.29719868 -0.3722956 #>  [609,]  0.86551591 -1.0544702 #>  [610,]  1.11588023 -0.8678150 #>  [611,]  0.51346141  0.6354594 #>  [612,] -1.66745997  0.7158074 #>  [613,]  0.08361492  0.1580166 #>  [614,]  2.34799094 -0.4905696 #>  [615,]  0.50315569  0.6256567 #>  [616,] -0.15916661 -0.2306452 #>  [617,] -1.68778235 -1.4100607 #>  [618,]  0.35309324  0.4768669 #>  [619,]  1.84130984 -0.5910823 #>  [620,]  0.25989990  0.3770103 #>  [621,]  0.42641527  0.5510979 #>  [622,]  0.13363178 -4.4173658 #>  [623,] -0.28642959 -0.3619074 #>  [624,] -0.28458930 -0.3601231 #>  [625,]  2.32600996 -0.4941203 #>  [626,] -1.74531745  0.6911934 #>  [627,] -0.59817558 -0.6365289 #>  [628,]  0.21653554  0.3277677 #>  [629,]  0.52055660  0.6421816 #>  [630,]  0.10199736  0.1840258 #>  [631,] -0.71393726  1.3717343 #>  [632,]  0.11137886  0.1968702 #>  [633,]  0.91981755  0.9936394 #>  [634,] -0.41092068 -0.4772883 #>  [635,]  0.18464899  0.2900811 #>  [636,] -0.34854179 -0.4206825 #>  [637,] -0.34582400 -0.4181649 #>  [638,]  1.50865767 -0.6886541 #>  [639,]  0.56725138 -1.4579273 #>  [640,]  1.34192094 -0.7533588 #>  [641,]  0.11269688  0.1986541 #>  [642,] -0.44705413 -0.5091504 #>  [643,]  0.67156104  0.7806850 #>  [644,]  0.77675959  0.8728437 #>  [645,] -0.49279258 -0.5486350 #>  [646,] -0.79954307 -0.7951353 #>  [647,]  0.91630220  0.9907263 #>  [648,]  0.12985437  0.2214562 #>  [649,]  0.12474136  0.2147390 #>  [650,] -1.31173657 -1.1622508 #>  [651,]  0.12145770  0.2103912 #>  [652,]  0.53829022  0.6588904 #>  [653,] -0.26755816 -0.3434799 #>  [654,] -1.45803639  0.7933939 #>  [655,]  0.42582923 -1.8164742 #>  [656,]  0.36609521  0.4902742 #>  [657,] -0.33237397 -0.4056371 #>  [658,]  0.37009950  0.4943808 #>  [659,]  0.17663372  0.2803763 #>  [660,] -0.63976767  1.4920972 #>  [661,] -0.50825132 -0.5617838 #>  [662,]  0.13121564  0.2232342 #>  [663,]  0.44165920  0.5661421 #>  [664,]  0.43296986  0.5575817 #>  [665,] -0.49375939  1.8199684 #>  [666,] -0.42983415 -0.4940440 #>  [667,] -0.19876709 -0.2734839 #>  [668,]  0.65769714  0.7682973 #>  [669,]  0.05840197  0.1200044 #>  [670,]  0.08361492  0.1580166 #>  [671,]  0.21377516  0.3245591 #>  [672,]  0.11758817  0.2052323 #>  [673,] -1.18161743 -1.0727827 #>  [674,] -0.40059679 -0.4680665 #>  [675,]  1.06637975  1.1129179 #>  [676,] -0.53492032 -0.5842511 #>  [677,]  0.93158636  1.0033731 #>  [678,]  0.05840197  0.1200044 #>  [679,]  0.67897230  0.7872827 #>  [680,]  0.20497233  0.3142614 #>  [681,]  0.41012961  0.5348863 #>  [682,] -0.57234120 -0.6153418 #>  [683,]  0.08986792  0.1670008 #>  [684,]  0.41810597  0.5428448 #>  [685,] -0.57032853  1.6295088 #>  [686,] -1.55919395  0.7536184 #>  [687,] -0.25553266 -0.3315794 #>  [688,] -5.09989713  0.3037565 #>  [689,]  0.24504558  0.3603754 #>  [690,] -0.91171579 -0.8793471 #>  [691,] -1.56576427  0.7511924 #>  [692,]  0.10307211  0.1855108 #>  [693,] -0.31443685 -0.3887438 #>  [694,] -0.50296809 -0.5573006 #>  [695,]  0.31997622 -2.2615114 #>  [696,]  1.51310670 -0.6871010 #>  [697,]  0.07144320  0.1400603 #>  [698,]  0.56372908  0.6826372 #>  [699,]  0.06243018  0.1263014 #>  [700,]  0.26661728  0.3844595 #>  [701,] -0.34466698 -0.4170918 #>  [702,] -0.58299522  1.6022925 #>  [703,]  0.19858552  0.3067254 #>  [704,]  0.34598323 -2.1299858 #>  [705,] -0.85261050  1.1971798 #>  [706,] -0.42603901  2.0379223 #>  [707,]  0.11719719  0.2047088 #>  [708,]  0.99018666  1.0514223 #>  [709,]  0.07130676  0.1398551 #>  [710,]  0.07555298  0.1461976 #>  [711,] -0.57918332 -0.6209744 #>  [712,] -0.63730770  1.4965114 #>  [713,] -0.49809620 -0.5531568 #>  [714,]  0.26761191  0.3855588 #>  [715,] -0.30484461 -0.3796179 #>  [716,] -0.26991323 -0.3457957 #>  [717,]  0.06243018  0.1263014 #>  [718,]  0.31604059  0.4380059 #>  [719,]  0.16343525  0.2641677 #>  [720,] -0.89547693 -0.8673126 #>  [721,] -1.54671776  0.7582751 #>  [722,]  0.27381601  0.3923942 #>  [723,] -0.24132852 -0.3173531 #>  [724,]  0.63323758  0.7462921 #>  [725,]  0.52265790  0.6441683 #>  [726,]  0.16819253  0.2700439 #>  [727,]  0.42613347  0.5508186 #>  [728,]  0.07555298  0.1461976 #>  [729,]  0.46419064  0.5881588 #>  [730,] -0.28346530 -0.3590320 #>  [731,]  0.72537481  0.8282185 #>  [732,] -0.21323545 -0.2886221 #>  [733,]  0.29523888  0.4157260 #>  [734,]  0.13498994  0.2281414 #>  [735,] -1.69618270 -1.4154388 #>  [736,] -0.47566302 -0.5339520 #>  [737,]  0.14750168  0.2441862 #>  [738,]  0.27135635  0.3896886 #>  [739,]  0.90915121 -1.0154424 #>  [740,]  0.18961893  0.2960492 #>  [741,] -0.73675717 -0.7468052 #>  [742,]  0.18947196  0.2958732 #>  [743,] -0.48691324  1.8395575 #>  [744,]  0.30300456 -2.3580177 #>  [745,]  0.25877293  0.3757561 #>  [746,] -0.19834493 -0.2730384 #>  [747,]  0.52854478  0.6497243 #>  [748,] -1.28466195  0.8742696 #>  [749,]  0.24843447  0.3641908 #>  [750,] -0.62294307 -0.6566415 #>  [751,]  0.51823338  0.6399829 #>  [752,]  0.09859997  0.1793073 #>  [753,]  0.46591314 -1.6953993 #>  [754,]  0.18715930  0.2931002 #>  [755,]  0.45758789  0.5817332 #>  [756,]  1.30788089  1.3014934 #>  [757,]  1.31127446  1.3040820 #>  [758,] -0.70399639  1.3865621 #>  [759,] -0.17123492 -0.2439393 #>  [760,]  0.21224352 -3.0981377 #>  [761,] -0.54353241  1.6907597 #>  [762,] -0.15916661 -0.2306452 #>  [763,]  0.10127512  0.1830258 #>  [764,]  0.70350336 -1.2360904 #>  [765,]  2.25325781 -0.5063078 #>  [766,]  0.62900845  0.7424674 #>  [767,]  0.81575818 -1.1034450 #>  [768,]  0.24724471  0.3628527 #>  [769,] -4.81959924  0.3172124 #>  [770,] -0.19997937 -0.2747619 #>  [771,]  0.53817867  0.6587857 #>  [772,]  0.21052737  0.3207715 #>  [773,]  0.41553096 -1.8508941 #>  [774,] -0.17123492 -0.2439393 #>  [775,]  0.73321977 -1.1974929 #>  [776,]  0.19263993  0.2996591 #>  [777,]  0.10753785  0.1916431 #>  [778,] -0.15916661 -0.2306452 #>  [779,] -0.23950480 -0.3155126 #>  [780,] -2.96917903  0.4598950 #>  [781,]  1.72851160 -0.6204392 #>  [782,]  0.36469789  0.4888387 #>  [783,]  0.34516689 -2.1338474 #>  [784,]  0.35158307  0.4753023 #>  [785,]  0.49010604  0.6131765 #>  [786,]  0.52183140 -1.5542742 #>  [787,] -0.92363887  1.1259342 #>  [788,]  0.08437203  0.1591125 #>  [789,] -0.68964930  1.4086266 #>  [790,]  0.53934086  0.6598763 #>  [791,]  1.20050194 -0.8205138 #>  [792,]  0.09877786  0.1795553 #>  [793,]  0.23234333  0.3459633 #>  [794,]  1.64402926 -0.6447424 #>  [795,]  0.29817022 -2.3872773 #>  [796,]  0.16906407 -3.6884548 #>  [797,]  0.11256419  0.1984747 #>  [798,]  0.49152554  0.6145377 #>  [799,]  0.98232450 -0.9569240 #>  [800,] -0.77287341 -0.7747184 #>  [801,]  0.07499645  0.1453712 #>  [802,] -0.41713516 -0.4828132 #>  [803,]  0.08798374  0.1643095 #>  [804,]  0.64509688  0.7569857 #>  [805,] -1.24045743 -1.1135107 #>  [806,]  0.30055649  0.4214553 #>  [807,]  0.16279433  0.2633730 #>  [808,]  0.43950151  0.5640201 #>  [809,] -0.30140157 -0.3763260 #>  [810,] -3.22712757 -2.3178366 #>  [811,]  0.56322819  0.6821720 #>  [812,]  0.34473726  0.4681897 #>  [813,] -0.72786624 -0.7398852 #>  [814,] -0.34896668 -0.4210756 #>  [815,] -1.04330134  1.0255225 #>  [816,]  1.32387378 -0.7612209 #>  [817,] -1.13962116 -1.0434243 #>  [818,]  1.73056139 -0.6198757 #>  [819,] -1.16708436 -1.0626510 #>  [820,]  1.06734289  1.1136886 #>  [821,]  0.17574680  0.2792961 #>  [822,]  0.17356331  0.2766316 #>  [823,]  0.87861112  0.9593262 #>  [824,]  0.59890773 -1.3984667 #>  [825,]  0.40973674  0.5344933 #>  [826,]  0.07130676  0.1398551 #>  [827,]  0.44595763  0.5703622 #>  [828,] -0.30484461 -0.3796179 #>  [829,]  0.43585783  0.5604312 #>  [830,] -1.26643193  0.8839032 #>  [831,]  0.10187460  0.1838560 #>  [832,]  0.21859835  0.3301592 #>  [833,]  2.34799094 -0.4905696 #>  [834,]  1.08869586  1.1307328 #>  [835,]  1.64520088 -0.6443903 #>  [836,]  0.34562821  0.4691173 #>  [837,]  0.49547445  0.6183199 #>  [838,]  0.22437538 -2.9688643 #>  [839,]  0.44400362  0.5684449 #>  [840,]  1.47939142 -0.6990762 #>  [841,] -0.59493662 -0.6338845 #>  [842,]  0.27389540  0.3924814 #>  [843,] -1.02120583 -0.9592385 #>  [844,]  0.63669433  0.7494139 #>  [845,]  0.12973695  0.2213027 #>  [846,]  0.08361492  0.1580166 #>  [847,]  1.48619608 -0.6966206 #>  [848,]  0.05840197  0.1200044 #>  [849,] -1.20145524  0.9203308 #>  [850,]  0.33567303 -2.1799723 #>  [851,]  0.41131870  0.5360750 #>  [852,]  0.90507011  0.9814010 #>  [853,]  0.08798374  0.1643095 #>  [854,] -0.45840829  1.9266464 #>  [855,]  0.31019844  0.4317841 #>  [856,]  0.69300435 -1.2504243 #>  [857,] -0.67485123 -0.6982018 #>  [858,]  0.12931416  0.2207495 #>  [859,] -0.23707984 -0.3130602 #>  [860,] -1.14131995 -1.0446167 #>  [861,]  1.44484933 -0.7118557 #>  [862,]  0.40959053  0.5343471 #>  [863,]  0.35209298 -2.1015876 #>  [864,]  1.13653059  1.1686354 #>  [865,]  0.47780658  0.6013426 #>  [866,]  0.86820968 -1.0519606 #>  [867,]  0.32166699  0.4439726 #>  [868,] -2.11372945  0.5967929 #>  [869,]  0.35831444  0.4822645 #>  [870,]  1.38811721  1.3622883 #>  [871,] -1.57063134 -1.3343885 #>  [872,] -0.56699299 -0.6109280 #>  [873,] -0.47792052  1.8660404 #>  [874,]  0.72224289  0.8254752 #>  [875,]  0.07569118  0.1464026 #>  [876,]  1.51751359 -0.6855705 #>  [877,]  0.92245936  0.9958269 #>  [878,]  0.31682084 -2.2787618 #>  [879,]  0.75891659  0.8574283 #>  [880,]  0.14453199  0.2404077 #>  [881,]  0.11134419  0.1968232 #>  [882,]  0.17243683  0.2752539 #>  [883,] -4.06498809  0.3614548 #>  [884,] -0.82739256  1.2250599 #>  [885,]  0.40165631  0.5263923 #>  [886,] -0.44382122 -0.5063248 #>  [887,]  1.51686300 -0.6857959 #>  [888,]  0.69817994  0.8043042 #>  [889,]  0.12474136  0.2147390 #>  [890,]  0.36624264  0.4904255 #>  [891,]  0.15084360  0.2484173 #>  [892,]  0.15244858  0.2504415 #>  [893,]  0.62740739 -1.3494951 #>  [894,] -0.28835110 -0.3637675 #>  [895,]  0.27235981  0.3907931 #>  [896,]  0.08918744  0.1660304 #>  [897,]  0.43432235  0.5589167 #>  [898,] -0.96887007  1.0854063 #>  [899,]  0.77956238  0.8752576 #>  [900,] -0.44952320 -0.5113052 #>  [901,]  0.47143562 -1.6801502 #>  [902,]  0.69785979  0.8040214 #>  [903,]  0.17454048  0.2778250 #>  [904,]  0.23959036  0.3542077 #>  [905,]  1.49499114  1.4420108 #>  [906,]  0.20069188 -3.2339755 #>  [907,]  0.19372219  0.3009491 #>  [908,]  0.10307211  0.1855108 #>  [909,]  0.81840401 -1.1007086 #>  [910,]  0.20642635  0.3159693 #>  [911,]  0.07075745  0.1390283 #>  [912,]  0.92149708  0.9950303 #>  [913,]  0.43731461  0.5618669 #>  [914,] -2.21397271  0.5759624 #>  [915,] -1.30005920  0.8663191 #>  [916,]  0.41056122  0.5353178 #>  [917,]  0.11595746  0.2030464 #>  [918,]  0.19335376  0.3005101 #>  [919,] -0.60585189 -0.6427829 #>  [920,] -0.25321546 -0.3292715 #>  [921,]  1.22593167 -0.8074315 #>  [922,]  0.86198730 -1.0577784 #>  [923,] -0.25504030 -0.3310895 #>  [924,]  0.07130676  0.1398551 #>  [925,] -0.23707984 -0.3130602 #>  [926,]  1.17067022 -0.8364989 #>  [927,]  0.14506508  0.2410873 #>  [928,] -0.31939298 -0.3934335 #>  [929,]  0.19450369  0.3018796 #>  [930,] -1.36033194  0.8367323 #>  [931,]  0.24034325  0.3550609 #>  [932,]  0.07986985  0.1525609 #>  [933,]  1.36276569 -0.7445072 #>  [934,]  1.51425623 -0.6867010 #>  [935,] -0.19834493 -0.2730384 #>  [936,] -0.47220627  1.8833307 #>  [937,]  0.65840805  0.7689340 #>  [938,]  0.42529896  0.5499913 #>  [939,]  0.19908508  0.3073169 #>  [940,] -1.81626349  0.6703955 #>  [941,]  0.30012956  0.4209962 #>  [942,]  0.46268619 -1.7044585 #>  [943,]  1.08640571  1.1289085 #>  [944,] -4.93097408  0.3117041 #>  [945,]  0.45070302 -1.7391000 #>  [946,]  0.55306293  0.6727116 #>  [947,] -0.34903877 -0.4211423 #>  [948,]  0.83353194 -1.0853582 #>  [949,] -2.87480647  0.4714273 #>  [950,]  0.17333872  0.2763571 #>  [951,] -0.84698853  1.2032681 #>  [952,] -0.62315517  1.5225034 #>  [953,]  0.39763036  0.5223419 #>  [954,]  0.22480650  0.3373253 #>  [955,]  0.52081668  0.6424276 #>  [956,] -1.38557918  0.8250168 #>  [957,] -0.53105070 -0.5810076 #>  [958,]  1.32714734  1.3161691 #>  [959,] -0.28012595 -0.3557844 #>  [960,]  1.19260059 -0.8246789 #>  [961,]  0.24948381 -2.7369541 #>  [962,]  0.29549287  0.4160002 #>  [963,]  1.31152986  1.3042768 #>  [964,] -2.22267265  0.5742329 #>  [965,] -1.54937257 -1.3205178 #>  [966,] -0.32662726  2.4984480 #>  [967,]  0.17867533  0.2828578 #>  [968,] -0.45860140 -0.5192043 #>  [969,] -0.28458930 -0.3601231 #>  [970,]  0.11582486  0.2028683 #>  [971,] -0.34786873 -0.4200594 #>  [972,] -1.45258761 -1.2567948 #>  [973,] -0.36525667 -0.4360668 #>  [974,] -0.34696432 -0.4192218 #>  [975,]  0.16738601  0.2690505 #>  [976,] -1.18914412 -1.0780185 #>  [977,] -0.45882738  1.9252969 #>  [978,] -0.41654329 -0.4822879 #>  [979,] -0.25360880 -0.3296636 #>  [980,]  0.11180068  0.1974416 #>  [981,] -1.35866715 -1.1940037 #>  [982,]  0.24812536  0.3638433 #>  [983,]  0.34632979  0.4698472 #>  [984,]  0.34442265 -2.1373820 #>  [985,]  0.45444851  0.5786705 #>  [986,] -0.63926387  1.4929988 #>  [987,] -0.92154655  1.1278938 #>  [988,]  0.16731164  0.2689588 #>  [989,] -0.49776436 -0.5528742 #>  [990,]  0.39253918  0.5172061 #>  [991,] -0.97437505  1.0807012 #>  [992,] -1.12833140  0.9657271 #>  [993,]  1.16919138  1.1943008 #>  [994,]  0.54433688  0.6645582 #>  [995,]  0.14005117  0.2346719 #>  [996,]  0.34930931  0.4729435 #>  [997,]  0.75052928  0.8501530 #>  [998,]  0.25303596  0.3693519 #>  [999,]  0.23427855  0.3481707 #> [1000,]  0.55679066 -1.4788840 #> [1001,]  0.42986589  0.5545141 #> [1002,]  0.38634678  0.5109384 #> [1003,] -0.58905880 -0.6290770 #> [1004,] -0.50679787  1.7839574 #> [1005,]  0.11758817  0.2052323 #> [1006,]  0.28559338  0.4052716 #> [1007,]  0.10466176  0.1877007 #> [1008,]  0.49760021  0.6203530 #> [1009,]  0.54035767  0.6608300 #> [1010,]  0.61683981 -1.3671870 #> [1011,]  0.64903151 -1.3148840 #> [1012,] -1.88859102 -1.5369954 #> [1013,] -0.42465251  2.0430223 #> [1014,]  0.09415245  0.1730725 #> [1015,]  0.18576814  0.2914282 #> [1016,]  0.79606428  0.8894292 #> [1017,]  0.08548625  0.1607212 #> [1018,] -0.65905835  1.4584939 #> [1019,]  0.16169282  0.2620055 #> [1020,]  0.78907066  0.8834316 #> [1021,] -0.36806839 -0.4386384 #> [1022,]  0.12750326  0.2183753 #> [1023,]  0.13899756  0.2333170 #> [1024,] -0.62381653  1.5212656 #> [1025,] -0.50452616 -0.5586239 #> [1026,] -0.33353941 -0.4067272 #> [1027,]  0.45386293  0.5780987 #> [1028,] -0.19834493 -0.2730384 #> [1029,]  0.86448286 -1.0554362 #> [1030,]  0.84450590  0.9306416 #> [1031,]  0.20212945  0.3109139 #> [1032,] -0.30140157 -0.3763260 #> [1033,] -0.78944756  1.2699611 #> [1034,]  0.52472559 -1.5476966 #> [1035,]  0.11807745  0.2058867 #> [1036,] -0.48206989 -0.5394580 #> [1037,] -0.21162290 -0.2869470 #> [1038,] -0.24080148 -0.3168216 #> [1039,]  0.32584255  0.4483850 #> [1040,]  1.06388300  1.1109194 #> [1041,]  0.33633992  0.4594201 #> [1042,]  0.59310299  0.7097487 #> [1043,]  0.21596923  0.3271102 #> [1044,]  0.55538873 -1.4817456 #> [1045,]  0.81777883  0.9079735 #> [1046,] -1.37906788 -1.2077266 #> [1047,]  0.19003187  0.2965434 #> [1048,]  0.78352154  0.8786640 #> [1049,]  0.33455443  0.4575489 #> [1050,] -2.87453313  0.4714617 #> [1051,]  0.07130676  0.1398551 #> [1052,]  0.14876139  0.2457837 #> [1053,] -0.91914024  1.1301573 #> [1054,]  0.59396386 -1.4073834 #> [1055,]  0.57513301  0.6932010 #> [1056,] -0.30623188 -0.3809418 #> [1057,]  0.09741911  0.1776584 #> [1058,]  0.23419076  0.3480706 #> [1059,] -0.36554801 -0.4363335 #> [1060,]  0.26746232  0.3853935 #> [1061,]  0.35143353  0.4751473 #> [1062,] -0.71292368 -0.7282104 #> [1063,]  0.07075745  0.1390283 #> [1064,]  0.39941075 -1.9079081 #> [1065,]  0.35569424  0.4795581 #> [1066,] -2.16293207  0.5863555 #> [1067,] -0.49295780 -0.5487760 #> [1068,] -0.64919061  1.4754626 #> [1069,]  0.57125271 -1.4500906 #> [1070,] -2.34034005  0.5519629 #> [1071,]  0.52825936  0.6494553 #> [1072,]  0.34135674  0.4646654 #> [1073,]  0.32019827  0.4424174 #> [1074,]  0.34589316  0.4693930 #> [1075,]  1.64011327 -0.6459225 #> [1076,]  0.21939952 -3.0203572 #> [1077,]  2.08300027 -0.5377470 #> [1078,]  0.62696481  0.7406171 #> [1079,] -1.23183283  0.9028778 #> [1080,] -0.21199292 -0.2873317 #> [1081,] -1.20446257 -1.0886507 #> [1082,]  1.01449920 -0.9335664 #> [1083,] -0.94378184 -0.9029655 #> [1084,]  0.93448668 -0.9942656 #> [1085,]  0.11671497  0.2040627 #> [1086,] -0.49518751 -0.5506782 #> [1087,]  0.44713944  0.5715208 #> [1088,] -0.26991323 -0.3457957 #> [1089,] -0.54499731  1.6872740 #> [1090,]  1.11873175 -0.8661184 #> [1091,]  0.10307211  0.1855108 #> [1092,] -0.62573013 -0.6588930 #> [1093,] -0.35054065 -0.4225311 #> [1094,] -0.25685607 -0.3328954 #> [1095,]  0.78273689  0.8779892 #> [1096,]  0.08437203  0.1591125 #> [1097,] -0.24262841 -0.3186630 #> [1098,]  1.27306025 -0.7844115 #> [1099,]  0.08974641  0.1668277 #> [1100,]  0.90356898 -1.0202492 #> [1101,]  0.37084050  0.4951396 #> [1102,]  0.15184778  0.2496843 #> [1103,] -0.29680310 -0.3719156 #> [1104,]  0.08972580  0.1667983 #> [1105,]  0.15808804  0.2575150 #> [1106,]  1.17525124 -0.8339976 #> [1107,] -0.59824426 -0.6365850 #> [1108,] -1.23614055 -1.1105382 #> [1109,]  0.16409347  0.2649831 #> [1110,] -0.73472191  1.3418804 #> [1111,] -0.39924220 -0.4668524 #> [1112,]  1.00888616  1.0666139 #> [1113,]  0.28671349  0.4064899 #> [1114,] -0.25507154 -0.3311206 #> [1115,]  0.62971666  0.7431083 #> [1116,] -0.63469466 -0.6661190 #> [1117,] -1.57420164 -1.3367137 #> [1118,]  0.95970044  1.0265105 #> [1119,] -1.39839957 -1.2206868 #> [1120,] -0.49544890 -0.5509011 #> [1121,] -0.61809247  1.5320564 #> [1122,]  0.17995832  0.2844139 #> [1123,] -1.62589962  0.7297956 #> [1124,]  0.58617230  0.7033806 #> [1125,] -0.17123492 -0.2439393 #> [1126,] -0.67422094 -0.6977018 #> [1127,]  0.22286230  0.3350861 #> [1128,]  0.69047057 -1.2539412 #> [1129,]  1.26645421 -0.7875469 #> [1130,] -0.91493996  1.1341334 #> [1131,] -1.04148025  1.0268971 #> [1132,]  1.10205691  1.1413580 #> [1133,]  0.21377516  0.3245591 #> [1134,]  0.10715608  0.1911213 #> [1135,]  0.08862488  0.1652268 #> [1136,]  0.12692381  0.2176139 #> [1137,] -0.77775394  1.2845763 #> [1138,]  0.36256573  0.4866458 #> [1139,]  1.13784236  1.1696695 #> [1140,]  0.51784231  0.6396125 #> [1141,]  0.05840197  0.1200044 #> [1142,] -1.51785331 -1.2998704 #> [1143,]  0.51855403 -1.5618009 #> [1144,]  0.70768347 -1.2304882 #> [1145,]  0.23095057  0.3443720 #> [1146,]  0.05840197  0.1200044 #> [1147,]  0.60608448 -1.3857518 #> [1148,]  0.76942725 -1.1540427 #> [1149,]  0.08860430  0.1651973 #> [1150,]  1.08168385  1.1251444 #> [1151,]  0.25422054  0.3706770 #> [1152,] -0.68655724 -0.7074695 #> [1153,] -0.52764619  1.7296566 #> [1154,]  0.19030392  0.2968689 #> [1155,] -0.17123492 -0.2439393 #> [1156,]  0.45268581 -1.7332563 #> [1157,]  0.43780408  0.5623491 #> [1158,]  0.69518858  0.8016606 #> [1159,] -0.34667356 -0.4189524 #> [1160,] -1.08220753  0.9971327 #> [1161,] -0.49208863  1.8247046 #> [1162,]  0.07130676  0.1398551 #> [1163,] -0.42457864  2.0432948 #> [1164,] -0.22515583 -0.3009148 #> [1165,]  0.45835312  0.5824790 #> [1166,]  0.23514763  0.3491606 #> [1167,]  0.58153414  0.6991091 #> [1168,] -1.59809014 -1.3522400 #> [1169,]  0.21551731  0.3265852 #> [1170,]  0.05840197  0.1200044 #> [1171,] -0.40916745 -0.4757260 #> [1172,]  0.11705353  0.2045164 #> [1173,] -1.48706964  0.7814893 #> [1174,]  0.87768156 -1.0432448 #> [1175,]  0.10735333  0.1913910 #> [1176,]  0.19055092  0.2971643 #> [1177,]  0.09805691  0.1785496 #> [1178,] -0.99833112 -0.9427197 #> [1179,]  0.12634749  0.2168558 #> [1180,]  0.15797803  0.2573775 #> [1181,]  0.78443050  0.8794455 #> [1182,]  0.17259488  0.2754473 #> [1183,]  0.51163941  0.6337297 #> [1184,]  0.66112574 -1.2964007 #> [1185,] -3.35495824  0.4187753 #> [1186,]  0.39727547  0.5219844 #> [1187,] -0.71633366  1.3682143 #> [1188,] -1.30849934  0.8620312 #> [1189,]  0.06243018  0.1263014 #> [1190,] -1.16817490  0.9403690 #> [1191,]  0.85390796 -1.0654440 #> [1192,]  0.43243278  0.5570513 #> [1193,] -1.49387581  0.7787578 #> [1194,] -0.73740597  1.3381337 #> [1195,]  1.00857423  1.0663610 #> [1196,]  0.22217744  0.3342963 #> [1197,]  0.63572605  0.7485398 #> [1198,]  0.25674829  0.3734998 #> [1199,]  0.57439080  0.6925150 #> [1200,] -0.38201607 -0.4513280 #> [1201,]  0.44615356  0.5705543 #> [1202,]  0.05840197  0.1200044 #> [1203,]  1.24105774 -0.7998750 #> [1204,] -0.49769007 -0.5528109 #> [1205,] -0.40855524 -0.4751802 #> [1206,]  1.10147547  1.1408963 #> [1207,]  0.12240038  0.2116421 #> [1208,] -2.14139916  0.5908712 #> [1209,]  0.61181899  0.7268595 #> [1210,] -0.51778466 -0.5698460 #> [1211,]  0.56875743 -1.4549662 #> [1212,]  0.24837084  0.3641192 #> [1213,]  0.07986985  0.1525609 #> [1214,]  0.16091301  0.2610361 #> [1215,] -0.53043618 -0.5804920 #> [1216,] -0.25725113 -0.3332879 #> [1217,]  0.21761103  0.3290152 #> [1218,]  0.41181318  0.5365690 #> [1219,]  0.41828520  0.5430232 #> [1220,] -0.56330976 -0.6078827 #> [1221,]  0.96022953  1.0269444 #> [1222,] -0.65976667 -0.6862038 #> [1223,] -0.78332462  1.2775658 #> [1224,] -0.67093773  1.4386520 #> [1225,] -0.47427010  1.8770435 #> [1226,]  0.73198908 -1.1990364 #> [1227,]  0.19160830  0.2984279 #> [1228,] -0.73036556  1.3480132 #> [1229,]  0.86593674  0.9486971 #> [1230,]  0.09818912  0.1787341 #> [1231,]  0.21178123  0.3222353 #> [1232,]  0.17051394  0.2728972 #> [1233,]  0.09918886  0.1801279 #> [1234,]  1.20108186 -0.8202100 #> [1235,]  0.12999648  0.2216421 #> [1236,]  0.10753785  0.1916431 #> [1237,]  0.56515545  0.6839612 #> [1238,]  0.20050871  0.3090005 #> [1239,]  0.59326114  0.7098938 #> [1240,] -1.42754940 -1.2401504 #> [1241,] -0.21156015 -0.2868818 #> [1242,]  0.19636413  0.3040911 #> [1243,]  0.07499645  0.1453712 #> [1244,]  0.09741911  0.1776584 #> [1245,] -2.00306610  0.6219148 #> [1246,] -1.11654900  0.9735316 #> [1247,]  0.67038677  0.7796381 #> [1248,]  0.28308837  0.4025432 #> [1249,]  0.13920179  0.2335798 #> [1250,]  0.58695683  0.7041023 #> [1251,]  0.08972580  0.1667983 #> [1252,]  0.50141423  0.6239956 #> [1253,]  0.29803973  0.4187467 #> [1254,]  0.10307211  0.1855108 #> [1255,]  0.05840197  0.1200044 #> [1256,] -1.49161758  0.7796616 #> [1257,] -0.62889062 -0.6614433 #> [1258,]  0.62406332  0.7379876 #> [1259,]  0.66672071 -1.2880508 #> [1260,]  0.30938908  0.4309200 #> [1261,]  0.54381294 -1.5058707 #> [1262,]  0.11579021  0.2028218 #> [1263,] -0.57589797 -0.6182718 #> [1264,] -0.37875663 -0.4483724 #> [1265,]  0.16098511 -3.8295722 #> [1266,]  0.39519086 -1.9235099 #> [1267,] -0.38078585 -0.4502132 #> [1268,] -0.69629982 -0.7151547 #> [1269,] -1.16706636  0.9410538 #> [1270,] -1.53324279  0.7633798 #> [1271,] -0.90156753  1.1470097 #> [1272,]  0.11979426  0.2081782 #> [1273,]  0.48179647 -1.6523760 #> [1274,]  0.47619189  0.5997837 #> [1275,]  0.33338022  0.4563170 #> [1276,]  1.60693332 -0.6561244 #> [1277,]  0.54823990  0.6682088 #> [1278,]  0.08915320  0.1659815 #> [1279,] -0.25678907 -0.3328288 #> [1280,]  0.08918744  0.1660304 #> [1281,]  0.45237044 -1.7341828 #> [1282,]  0.19223405  0.2991749 #> [1283,]  0.80746958 -1.1121196 #> [1284,] -0.60867105 -0.6450751 #> [1285,]  0.45865641  0.5827745 #> [1286,] -0.55946111 -0.6046956 #> [1287,] -3.53042899 -2.4831072 #> [1288,] -0.78718371 -0.7856937 #> [1289,] -0.31152072  2.5908321 #> [1290,] -0.47757151 -0.5355940 #> [1291,]  1.20754334  1.2242260 #> [1292,] -1.08282360  0.9966977 #> [1293,]  0.66293181 -1.2936917 #> [1294,] -0.73761238  1.3378466 #> [1295,]  0.61652687  0.7311443 #> [1296,]  0.19551640 -3.2994150 #> [1297,] -0.46189493 -0.5220610 #> [1298,]  0.17663372  0.2803763 #> [1299,]  0.41628584 -1.8483200 #> [1300,]  0.63198007  0.7451555 #> [1301,] -0.34896668 -0.4210756 #> [1302,]  0.57982843  0.6975363 #> [1303,]  1.06360387  1.1106959 #> [1304,] -4.27532432  0.3477397 #> [1305,]  0.11137886  0.1968702 #> [1306,]  0.15741970  0.2566798 #> [1307,]  1.69164632 -0.6307806 #> [1308,] -0.49208863  1.8247046 #> [1309,] -0.65638039  1.4630543 #> [1310,] -0.53189590 -0.5817165 #> [1311,] -0.47466077 -0.5330892 #> [1312,]  0.09889530  0.1797190 #> [1313,]  0.38439236  0.5089554 #> [1314,]  0.20734425 -3.1541156 #> [1315,] -0.44805796 -0.5100268 #> [1316,]  0.58265652 -1.4282786 #> [1317,] -0.31581324 -0.3900479 #> [1318,] -0.48132877 -0.5388220 #> [1319,]  0.20415179  0.3132963 #> [1320,] -0.75369840 -0.7599374 #> [1321,]  1.11504509 -0.8683133 #> [1322,]  1.96105536 -0.5632055 #> [1323,] -0.32948124 -0.4029273 #> [1324,]  1.07505454 -0.8929742 #> [1325,]  0.09797301  0.1784324 #> [1326,] -0.72291085  1.3586592 #> [1327,]  1.72089692 -0.6225432 #> [1328,] -0.48192485 -0.5393336 #> [1329,] -1.55747642  0.7542556 #> [1330,] -0.80797552 -0.8015575 #> [1331,]  0.41830888  0.5430467 #> [1332,]  0.74782204  0.8478006 #> [1333,]  0.40607956  0.5308315 #> [1334,]  0.40498159 -1.8877520 #> [1335,]  0.19263993  0.2996591 #> [1336,]  0.36863559 -2.0288887 #> [1337,]  0.28457196  0.4041598 #> [1338,]  0.50958321 -1.5828397 #> [1339,]  0.21216573  0.3226838 #> [1340,] -1.30126511  0.8657035 #> [1341,] -0.44849576 -0.5104089 #> [1342,] -0.26944463 -0.3453353 #> [1343,]  1.18336745  1.2053883 #> [1344,]  1.68134886 -0.6337407 #> [1345,]  0.29513448  0.4156132 #> [1346,] -2.22170756  0.5744242 #> [1347,]  1.04368011 -0.9134860 #> [1348,]  1.18963394  1.2102797 #> [1349,]  0.12620447  0.2166676 #> [1350,]  0.58048921  0.6981457 #> [1351,] -0.71892653  1.3644290 #> [1352,] -0.71072464  1.3764862 #> [1353,]  0.39778124 -1.9138981 #> [1354,]  0.30034745  0.4212306 #> [1355,]  0.69967816 -1.2412688 #> [1356,]  0.51902516  0.6407325 #> [1357,] -0.49773059 -0.5528454 #> [1358,]  0.26068547  0.3778837 #> [1359,]  0.31712789  0.4391609 #> [1360,]  0.23289624  0.3465944 #> [1361,]  0.15301273  0.2511518 #> [1362,]  0.50035845  0.6229879 #> [1363,] -1.73254805  0.6950962 #> [1364,] -0.42677348 -0.4913444 #> [1365,] -1.16396114  0.9429782 #> [1366,] -1.20989061 -1.0924105 #> [1367,]  0.21403202 -3.0782676 #> [1368,] -0.25360880 -0.3296636 #> [1369,] -0.31581324 -0.3900479 #> [1370,] -0.57559490  1.6180647 #> [1371,]  0.12590174  0.2162690 #> [1372,]  0.47085500 -1.6817386 #> [1373,] -1.01451623  1.0477604 #> [1374,] -2.47573519 -1.8915535 #> [1375,] -0.84632081 -0.8305676 #> [1376,] -1.92989240  0.6399168 #> [1377,]  0.30087752  0.4218005 #> [1378,]  0.11078804  0.1960689 #> [1379,]  0.15808779  0.2575147 #> [1380,]  0.08423110  0.1589087 #> [1381,]  0.12916176  0.2205500 #> [1382,]  0.31518770  0.4370993 #> [1383,]  0.10187460  0.1838560 #> [1384,]  0.09461838  0.1737288 #> [1385,]  0.08361492  0.1580166 #> [1386,]  0.40138680  0.5261214 #> [1387,] -0.54096141  1.6969177 #> [1388,]  0.15852735  0.2580635 #> [1389,]  1.64285707 -0.6450951 #> [1390,]  0.53797117 -1.5183931 #> [1391,] -0.89130881 -0.8642154 #> [1392,]  0.11796334  0.2057342 #> [1393,]  0.09302514  0.1714813 #> [1394,]  0.20133000  0.3099705 #> [1395,] -4.23986237  0.3499676 #> [1396,]  0.49156857  0.6145790 #> [1397,]  0.07557302  0.1462273 #> [1398,] -1.50046435  0.7761344 #> [1399,]  0.06243018  0.1263014 #> [1400,]  0.07557302  0.1462273 #> [1401,] -1.50356150  0.7749083 #> [1402,] -0.25314875 -0.3292050 #> [1403,] -1.28834914 -1.1463284 #> [1404,]  0.15774609  0.2570878 #> [1405,] -0.50532957  1.7879306 #> [1406,] -0.46438740 -0.5242197 #> [1407,]  0.15434828  0.2528309 #> [1408,] -0.25321546 -0.3292715 #> [1409,]  0.50902690  0.6312470 #> [1410,]  0.82125872 -1.0977737 #> [1411,]  1.60279996 -0.6574214 #> [1412,]  0.48003136  0.6034883 #> [1413,]  0.63696760 -1.3339372 #> [1414,]  0.63496835  0.7478556 #> [1415,]  0.51025674 -1.5812374 #> [1416,]  1.33386975 -0.7568430 #> [1417,]  0.65648667  0.7672128 #> [1418,]  0.09684199  0.1768508 #> [1419,]  0.15677426  0.2558724 #> [1420,]  0.14561323  0.2417855 #> [1421,]  0.72764472  0.8302051 #> [1422,]  0.21253244  0.3231114 #> [1423,]  0.32529221  0.4478042 #> [1424,] -0.87172455 -0.8496177 #> [1425,] -0.51109986 -0.5641964 #> [1426,]  0.13704721  0.2308026 #> [1427,]  1.01708328  1.0732526 #> [1428,]  0.25791174 -2.6681117 #> [1429,] -0.98704664  1.0700471 #> [1430,]  2.42293837 -0.4788917 #> [1431,] -0.65523358  1.4650174 #> [1432,] -0.49293764 -0.5487588 #> [1433,] -0.41147553 -0.4777823 #> [1434,] -0.31828821 -0.3923896 #> [1435,]  0.08548625  0.1607212 #> [1436,] -0.51251927 -0.5653974 #> [1437,]  0.13568306  0.2290390 #> [1438,] -1.28607178  0.8735346 #> [1439,] -0.54353241  1.6907597 #> [1440,]  0.57719644  0.6951072 #> [1441,] -1.15841911  0.9464355 #> [1442,]  1.32757327 -0.7595939 #> [1443,]  0.43879242  0.5633222 #> [1444,] -1.28993928  0.8715257 #> [1445,]  0.17192657  0.2746291 #> [1446,]  0.41550117  0.5402497 #> [1447,]  0.28230609  0.4016900 #> [1448,]  0.53648374  0.6571943 #> [1449,] -0.26991323 -0.3457957 #> [1450,]  0.32792604  0.4505817 #> [1451,]  0.33566973  0.4587180 #> [1452,]  0.75741560 -1.1680501 #> [1453,] -1.11618561  0.9737746 #> [1454,]  0.08534505  0.1605176 #> [1455,]  0.16697414  0.2685427 #> [1456,]  0.70605295  0.8112495 #> [1457,] -0.83466742  1.2168644 #> [1458,]  0.16162315  0.2619190 #> [1459,] -0.48963518  1.8317112 #> [1460,] -0.60758593 -0.6441931 #> [1461,]  0.20597842  0.3154435 #> [1462,]  1.88131600 -0.5814204 #> [1463,]  0.27517191  0.3938832 #> [1464,] -1.06335300 -0.9894509 #> [1465,]  0.27816104  0.3971598 #> [1466,]  1.14140031 -0.8528982 #> [1467,]  0.14937389  0.2465593 #> [1468,]  0.13968900  0.2342064 #> [1469,]  0.53465432 -1.5256106 #> [1470,]  0.29063371  0.4107447 #> [1471,] -0.25492917 -0.3309788 #> [1472,]  0.49540321 -1.6174642 #> [1473,] -0.42658215 -0.4911754 #> [1474,]  0.38681255  0.5114106 #> [1475,]  0.70206414 -1.2380329 #> [1476,]  0.92196046 -1.0046072 #> [1477,]  0.55655588  0.6759669 #> [1478,]  0.17718822  0.2810509 #> [1479,]  0.50408681 -1.5960564 #> [1480,]  0.16224806  0.2626951 #> [1481,] -0.21199292 -0.2873317 #> [1482,]  0.51070310 -1.5801776 #> [1483,]  0.07075745  0.1390283 #> [1484,] -0.69870815  1.3946018 #> [1485,] -0.63158401  1.5068994 #> [1486,]  0.97164613  1.0362936 #> [1487,]  0.56513680  0.6839439 #> [1488,]  1.18007170 -0.8313841 #> [1489,]  0.68840027 -1.2568317 #> [1490,]  0.05840197  0.1200044 #> [1491,]  0.56015229  0.6793137 #> [1492,]  0.13573385  0.2291048 #> [1493,] -0.40059679 -0.4680665 #> [1494,]  0.23836324  0.3528159 #> [1495,]  0.06243018  0.1263014 #> [1496,] -0.97466028  1.0804587 #> [1497,]  0.71173806  0.8162534 #> [1498,]  0.08915320  0.1659815 #> [1499,]  0.71846399  0.8221615 #> [1500,]  0.16162612  0.2619227 #> [1501,]  0.39346015  0.5181363 #> [1502,]  0.77444655 -1.1483033 #> [1503,] -1.73500191  0.6943423 #> [1504,] -0.40680760  2.1113937 #> [1505,] -0.19876709 -0.2734839 #> [1506,] -1.45584706  0.7943085 #> [1507,]  0.39727547  0.5219844 #> [1508,] -0.40703169 -0.4738208 #> [1509,]  0.18798942  0.2940965 #> [1510,]  0.38597350  0.5105598 #> [1511,]  0.84205126  0.9285668 #> [1512,]  0.47960845 -1.6581531 #> [1513,]  0.22980528  0.3430618 #> [1514,]  0.48724736  0.6104322 #> [1515,]  0.21277128  0.3233898 #> [1516,]  0.29181089  0.4120198 #> [1517,]  0.14497849  0.2409769 #> [1518,] -1.36864502  0.8328326 #> [1519,] -0.45493853 -0.5160216 #> [1520,]  0.69307912  0.7997947 #> [1521,] -2.54627057  0.5174001 #> [1522,] -1.35970066  0.8370302 #> [1523,]  0.39218437  0.5168476 #> [1524,]  0.36822018 -2.0306435 #> [1525,] -0.85909091 -0.8401602 #> [1526,] -0.39056275  2.1784102 #> [1527,]  0.07144320  0.1400603 #> [1528,]  0.15705767  0.2562270 #> [1529,]  0.18386738  0.2891391 #> [1530,]  0.60162532 -1.3936205 #> [1531,] -1.17462064  0.9364097 #> [1532,] -0.33596998 -0.4089979 #> [1533,]  0.15094773 -4.0233555 #> [1534,] -1.67796692 -1.4037687 #> [1535,]  1.19627974 -0.8227334 #> [1536,]  0.94051760 -0.9893733 #> [1537,]  0.14951382  0.2467363 #> [1538,]  0.17495496  0.2783307 #> [1539,]  1.45267576  1.4106101 #> [1540,]  0.30233998 -2.3619910 #> [1541,] -0.28458930 -0.3601231 #> [1542,]  0.21765952  0.3290715 #> [1543,] -0.34699797 -0.4192530 #> [1544,]  1.09562040 -0.8800933 #> [1545,]  0.24627025  0.3617556 #> [1546,]  0.16711285  0.2687138 #> [1547,] -0.39609170 -0.4640250 #> [1548,]  0.23239700  0.3460246 #> [1549,]  0.46436442  0.5883276 #> [1550,]  0.63545121  0.7482917 #> [1551,] -0.89708937  1.1513975 #> [1552,] -0.31443685 -0.3887438 #> [1553,]  0.54705129  0.6670977 #> [1554,]  0.23327613  0.3470278 #> [1555,] -0.56327607 -0.6078548 #> [1556,] -0.76850286  1.2964166 #> [1557,]  0.07075745  0.1390283 #> [1558,] -0.44314073 -0.5057294 #> [1559,] -0.19876709 -0.2734839 #> [1560,] -1.68326511  0.7106482 #> [1561,]  0.36934315  0.4936059 #> [1562,]  0.35579711  0.4796644 #> [1563,] -0.54899137 -0.5959996 #> [1564,]  0.34499585 -2.1346585 #> [1565,]  0.97713336 -0.9608197 #> [1566,]  0.08494043  0.1599338 #> [1567,]  0.61052307 -1.3780203 #> [1568,]  0.27580808  0.3945813 #> [1569,]  0.33338022  0.4563170 #> [1570,]  0.46210157  0.5861281 #> [1571,]  0.40905109  0.5338074 #> [1572,] -0.25546577 -0.3315129 #> [1573,]  0.23639786  0.3505831 #> [1574,] -1.18466909 -1.0749065 #> [1575,]  0.42927423 -1.8052861 #> [1576,]  0.12129799  0.2101790 #> [1577,]  1.16892533  1.1940924 #> [1578,]  1.36347963  1.3437098 #> [1579,]  0.86534005 -1.0546345 #> [1580,]  0.19340382  0.3005698 #> [1581,]  0.47727218 -1.6643732 #> [1582,]  0.59067819 -1.4133822 #> [1583,]  1.24448046 -0.7981876 #> [1584,] -0.79501667 -0.7916815 #> [1585,] -2.38228481  0.5444957 #> [1586,] -0.17123492 -0.2439393 #> [1587,]  0.09863452  0.1793555 #> [1588,]  0.51034839  0.6325032 #> [1589,] -0.31828821 -0.3923896 #> [1590,] -1.26227697 -1.1284985 #> [1591,] -1.39751176 -1.2200925 #> [1592,] -0.28791093 -0.3633416 #> [1593,]  0.11535274  0.2022340 #> [1594,] -0.74630443  1.3258828 #> [1595,]  1.68923516 -0.6314708 #> [1596,]  0.43305102 -1.7932014 #> [1597,]  0.19285132  0.2999112 #> [1598,]  0.74248367  0.8431562 #> [1599,]  0.52346721  0.6449330 #> [1600,] -0.60869865  1.5501532 #> [1601,]  0.32616592  0.4487262 #> [1602,]  0.35520815 -2.0874408 #> [1603,]  0.48466322  0.6079483 #> [1604,]  0.26312879  0.3805965 #> [1605,]  0.28953600  0.4095547 #> [1606,] -0.54372724 -0.5916127 #> [1607,] -1.67012071 -1.3987328 #> [1608,] -0.90365473  1.1449778 #> [1609,]  0.13817297  0.2322550 #> [1610,]  0.41899955  0.5437341 #> [1611,] -1.15287442 -1.0527161 #> [1612,] -0.82663555  1.2259200 #> [1613,]  0.77204018 -1.1510467 #> [1614,] -0.43227051 -0.4961898 #> [1615,] -1.65735533  0.7191513 #> [1616,]  0.31376055  0.4355809 #> [1617,]  1.09964625 -0.8776216 #> [1618,]  1.24903015 -0.7959573 #> [1619,] -0.47811578 -0.5360619 #> [1620,]  0.66119279 -1.2962999 #> [1621,]  0.37023974  0.4945244 #> [1622,]  0.59263990 -1.4097935 #> [1623,]  1.34846077 -0.7505557 #> [1624,]  0.57472693  0.6928257 #> [1625,] -0.42427953 -0.4891412 #> [1626,] -0.39146097 -0.4598596 #> [1627,] -0.45473253 -0.5158424 #> [1628,]  0.64686425  0.7585754 #> [1629,]  0.25446962  0.3709555 #> [1630,]  0.26820231  0.3862108 #> [1631,] -0.50886888 -0.5623071 #> [1632,]  0.11122099  0.1966562 #> [1633,] -0.64941268 -0.6779313 #> [1634,] -0.57871459  1.6113723 #> [1635,] -0.19834493 -0.2730384 #> [1636,]  0.52752649  0.6487643 #> [1637,] -0.35397437 -0.4257011 #> [1638,]  0.21470444  0.3256403 #> [1639,]  0.12240038  0.2116421 #> [1640,]  0.07075745  0.1390283 #> [1641,]  0.40527882  0.5300287 #> [1642,]  0.25881406  0.3758019 #> [1643,]  0.28350475  0.4029971 #> [1644,]  0.17481617 -3.5950348 #> [1645,]  0.41171801 -1.8640234 #> [1646,]  0.64436826 -1.3221742 #> [1647,] -0.42799463 -0.4924220 #> [1648,] -0.95252760 -0.9093746 #> [1649,]  0.16200166  0.2623892 #> [1650,]  0.68599918 -1.2602034 #> [1651,] -0.25546577 -0.3315129 #> [1652,] -0.64290932 -0.6727197 #> [1653,]  1.32387378 -0.7612209 #> [1654,]  0.06243018  0.1263014 #> [1655,]  0.80987780 -1.1095831 #> [1656,] -0.38404753 -0.4531672 #> [1657,] -0.19834493 -0.2730384 #> [1658,] -0.33054149 -0.4039212 #> [1659,]  0.17094553  0.2734267 #> [1660,] -0.38128950 -0.4506697 #> [1661,]  0.12251428  0.2117931 #> [1662,]  1.01640616  1.0727047 #> [1663,] -0.34699797 -0.4192530 #> [1664,]  0.11645358  0.2037122 #> [1665,] -0.28791093 -0.3633416 #> [1666,] -0.59067678 -0.6304014 #> [1667,]  0.46018953  0.5842676 #> [1668,] -1.54886792 -1.3201880 #> [1669,] -0.25553266 -0.3315794 #> [1670,] -0.51902620  1.7516405 #> [1671,]  0.15811648  0.2575505 #> [1672,] -0.55665929  1.6601032 #> [1673,]  0.24892267  0.3647394 #> [1674,]  0.16537526  0.2665688 #> [1675,] -0.46464564 -0.5244432 #> [1676,] -0.61534546 -0.6504920 #> [1677,] -0.24308235 -0.3191201 #> [1678,]  0.14950537  0.2467257 #> [1679,] -0.54325573 -0.5912192 #> [1680,]  0.57544936 -1.4419749 #> [1681,] -0.43227051 -0.4961898 #> [1682,]  0.30168842 -2.3659015 #> [1683,]  0.10333345  0.1858714 #> [1684,]  0.43885844  0.5633872 #> [1685,]  0.80016950  0.8929440 #> [1686,] -0.25725113 -0.3332879 #> [1687,]  0.10641550  0.1901076 #> [1688,]  0.39076058  0.5154082 #> [1689,]  0.58640230  0.7035922 #> [1690,]  0.13091234  0.2228384 #> [1691,]  0.14509873  0.2411302 #> [1692,] -1.61997530  0.7318412 #> [1693,] -0.33054149 -0.4039212 #> [1694,]  0.13627572  0.2298057 #> [1695,]  0.13912814  0.2334851 #> [1696,]  0.98680310  1.0486663 #> [1697,]  0.07499645  0.1453712 #> [1698,] -0.25492917 -0.3309788 #> [1699,] -1.90838772  0.6454387 #> [1700,]  0.08974641  0.1668277 #> [1701,]  0.18131055  0.2860511 #> [1702,]  0.19160830  0.2984279 #> [1703,]  0.55147713 -1.4897976 #> [1704,]  0.12998038  0.2216210 #> [1705,]  0.27643616  0.3952701 #> [1706,]  0.54875698  0.6686920 #> [1707,] -0.89777041 -0.8690153 #> [1708,]  0.18015685  0.2846544 #> [1709,]  0.80971549  0.9011009 #> [1710,]  0.51591305  0.6377846 #> [1711,]  0.34982829  0.4734822 #> [1712,]  0.75201955  0.8514470 #> [1713,] -0.30484461 -0.3796179 #> [1714,]  0.50292135  0.6254332 #> [1715,] -6.68785195  0.2467503 #> [1716,]  0.23059969 -2.9072237 #> [1717,] -0.57448425 -0.6171077 #> [1718,] -0.67289461  1.4354429 #> [1719,] -0.19664691 -0.2712443 #> [1720,]  0.15126493  0.2489491 #> [1721,]  0.51185037  0.6339300 #> [1722,]  0.18410400  0.2894244 #> [1723,]  0.72033832  0.8238056 #> [1724,] -2.25725900  0.5674744 #> [1725,]  0.11796334  0.2057342 #> [1726,] -1.50248332  0.7753346 #> [1727,]  0.27200126  0.3903985 #> [1728,]  0.19363174  0.3008414 #> [1729,] -0.25553266 -0.3315794 #> [1730,]  0.49601428  0.6188364 #> [1731,] -0.19997937 -0.2747619 #> [1732,]  0.43773831  0.5622843 #> [1733,]  0.57811537  0.6959556 #> [1734,]  0.34739819  0.4709582 #> [1735,]  0.39125925  0.5159125 #> [1736,]  0.80057637 -1.1194546 #> [1737,]  0.84257389 -1.0764162 #> [1738,]  0.39766907  0.5223809 #> [1739,] -0.64217254 -0.6721285 #> [1740,]  1.89600785 -0.5779627 #> [1741,] -0.42457864  2.0432948 #> [1742,] -0.30278517 -0.3776499 #> [1743,] -0.84363763  1.2069311 #> [1744,]  0.57877383  0.6965633 #> [1745,] -0.30125261 -0.3761833 #> [1746,]  0.37746810  0.5019107 #> [1747,] -1.11045295 -1.0228852 #> [1748,] -1.99957340  0.6227475 #> [1749,]  0.43636407  0.5609303 #> [1750,]  0.66733274  0.7769133 #> [1751,] -0.28595339 -0.3614459 #> [1752,] -0.50867307 -0.5621412 #> [1753,] -0.15916661 -0.2306452 #> [1754,]  0.18298934  0.2880798 #> [1755,]  0.74690244  0.8470011 #> [1756,] -7.16594747  0.2340263 #> [1757,] -0.29728376 -0.3723773 #> [1758,]  0.11180068  0.1974416 #> [1759,]  0.17952769  0.2838919 #> [1760,] -0.53662660  1.7074183 #> [1761,]  0.25758345  0.3744310 #> [1762,]  0.12487345  0.2149133 #> [1763,] -0.63398049  1.5025298 #> [1764,]  0.11685891  0.2042556 #> [1765,] -0.96459408 -0.9181946 #> [1766,]  0.15049864  0.2479816 #> [1767,] -0.35740088  2.3317782 #> [1768,]  0.11200810  0.1977224 #> [1769,] -0.92408374 -0.8884794 #> [1770,]  0.46349841 -1.7021678 #> [1771,]  0.67733871 -1.2725400 #> [1772,]  0.59678960  0.7131289 #> [1773,] -1.11738478  0.9729732 #> [1774,]  0.21214293  0.3226573 #> [1775,]  0.55436258  0.6739234 #> [1776,]  0.18824447  0.2944024 #> [1777,]  0.32756571  0.4502021 #> [1778,]  0.49392864  0.6168402 #> [1779,]  0.64958037  0.7610165 #> [1780,]  0.68263531  0.7905374 #> [1781,]  0.33983227  0.4630734 #> [1782,]  0.15076438  0.2483172 #> [1783,]  0.17814483  0.2822136 #> [1784,]  0.16025762 -3.8428948 #> [1785,]  0.09302514  0.1714813 #> [1786,] -2.95733304  0.4613068 #> [1787,]  0.38186055 -1.9747899 #> [1788,]  0.15357415  0.2518581 #> [1789,]  0.76069733  0.8589705 #> [1790,]  1.36346749 -0.7442134 #> [1791,] -0.39334229 -0.4615533 #> [1792,] -1.11732548 -1.0277358 #> [1793,] -0.31443685 -0.3887438 #> [1794,]  0.13625514  0.2297791 #> [1795,] -0.74512453 -0.7533000 #> [1796,]  0.14293998  0.2383746 #> [1797,]  0.06243018  0.1263014 #> [1798,] -0.43991212  1.9884599 #> [1799,] -3.75726728  0.3839437 #> [1800,] -0.46464564 -0.5244432 #> [1801,]  0.07183469  0.1406484 #> [1802,] -1.03509904  1.0317478 #> [1803,]  0.14874186  0.2457590 #> [1804,]  0.21360389  0.3243597 #> [1805,]  0.16598853  0.2673264 #> [1806,]  0.22256490  0.3347432 #> [1807,]  0.15688787  0.2560146 #> [1808,]  0.31210690  0.4338196 #> [1809,] -0.90618610 -0.8752547 #> [1810,]  0.29443328  0.4148559 #> [1811,]  0.55083618 -1.4911267 #> [1812,]  0.08494043  0.1599338 #> [1813,]  0.39862691  0.5233454 #> [1814,]  0.17003105  0.2723045 #> [1815,] -0.25113890 -0.3271990 #> [1816,] -0.41910223 -0.4845580 #> [1817,] -0.42603815 -0.4906951 #> [1818,]  0.92237391 -1.0042619 #> [1819,]  1.25421721 -0.7934320 #> [1820,]  0.24554224  0.3609353 #> [1821,] -1.23955293  0.8985629 #> [1822,]  0.77676342 -1.1456762 #> [1823,]  0.14449807  0.2403644 #> [1824,] -0.31182140 -0.3862620 #> [1825,]  0.61836926 -1.3645934 #> [1826,]  0.27200126  0.3903985 #> [1827,]  0.08860430  0.1651973 #> [1828,]  0.65125363  0.7625191 #> [1829,]  0.69406883 -1.2489535 #> [1830,]  0.95527541 -0.9776323 #> [1831,]  1.04933218  1.0992503 #> [1832,] -0.81436985  1.2400531 #> [1833,] -0.25360880 -0.3296636 #> [1834,]  1.25623339  1.2619007 #> [1835,]  0.66814869 -1.2859394 #> [1836,] -1.04764033 -0.9782208 #> [1837,] -0.45839501 -0.5190251 #> [1838,]  1.59339552 -0.6603946 #> [1839,]  0.81601108  0.9064681 #> [1840,]  0.07183469  0.1406484 #> [1841,]  0.91288084 -1.0122599 #> [1842,] -0.56262077 -0.6073125 #> [1843,]  0.08481026  0.1597458 #> [1844,] -0.25685607 -0.3328954 #> [1845,]  0.27771945  0.3966763 #> [1846,]  0.35710103  0.4810117 #> [1847,] -0.80138705  1.2554281 #> [1848,]  0.16651404  0.2679751 #> [1849,]  0.19623813  0.3039415 #> [1850,]  0.47780780 -1.6629424 #> [1851,] -0.45509750  1.9373845 #> [1852,]  0.28176513  0.4010996 #> [1853,] -0.40680760  2.1113937 #> [1854,] -0.80553379 -0.7996995 #> [1855,]  0.33581717  0.4588725 #> [1856,]  0.36036669  0.4843810 #> [1857,]  0.62686204 -1.3503952 #> [1858,]  0.28947558  0.4094891 #> [1859,] -0.19664691 -0.2712443 #> [1860,]  0.11774154  0.2054375 #> [1861,]  0.73461011  0.8362919 #> [1862,]  0.46250273 -1.7049769 #> [1863,]  0.19601460  0.3036760 #> [1864,]  0.44455800  0.5689891 #> [1865,]  0.31241889  0.4341520 #> [1866,] -0.45325115 -0.5145534 #> [1867,] -0.33167232 -0.4049803 #> [1868,]  0.07555298  0.1461976 #> [1869,] -0.25321546 -0.3292715 #> [1870,]  0.47887537  0.6023737 #> [1871,]  0.54856175  0.6685096 #> [1872,] -0.36806839 -0.4386384 #> [1873,] -0.52726284 -0.5778273 #> [1874,] -0.45777343  1.9286948 #> [1875,]  0.28988943  0.4099379 #> [1876,] -0.21323545 -0.2886221 #> [1877,] -0.46611295 -0.5257126 #> [1878,]  0.52648826  0.6477850 #> [1879,] -0.34786873 -0.4200594 #> [1880,]  0.58556360 -1.4228385 #> [1881,]  0.27837009  0.3973887 #> [1882,]  0.47977078  0.6032371 #> [1883,]  0.53080303  0.6518518 #> [1884,]  0.18410270  0.2894228 #> [1885,] -1.75426534  0.6884885 #> [1886,]  0.35478342  0.4786162 #> [1887,] -0.48395456 -0.5410744 #> [1888,] -1.38379686  0.8258314 #> [1889,] -0.44918813 -0.5110129 #> [1890,]  1.36611844  1.3457034 #> [1891,]  0.07144320  0.1400603 #> [1892,]  0.59780437 -1.4004454 #> [1893,]  0.13459099  0.2276242 #> [1894,]  1.37975290 -0.7374687 #> [1895,]  2.33631919 -0.4924477 #> [1896,]  0.32579739 -2.2304632 #> [1897,]  0.34372727  0.4671376 #> [1898,]  0.07183469  0.1406484 #> [1899,]  0.22396726  0.3363593 #> [1900,]  0.17374782  0.2768570 #> [1901,] -0.57412186 -0.6168092 #> [1902,]  0.38789084  0.5125034 #> [1903,]  1.09966468 -0.8776104 #> [1904,] -2.38736426  0.5436072 #> [1905,]  1.95542567 -0.5644484 #> [1906,]  0.63947385  0.7519211 #> [1907,] -0.70512554 -0.7220950 #> [1908,]  0.57255214  0.6908146 #> [1909,] -2.36251144 -1.8248620 #> [1910,]  0.45787095  0.5820091 #> [1911,] -0.50318982 -0.5574890 #> [1912,]  0.62633998 -1.3512581 #> [1913,] -0.37891207 -0.4485135 #> [1914,]  0.60823647  0.7235938 #> [1915,] -0.34516298 -0.4175519 #> [1916,]  0.53470440  0.6555223 #> [1917,]  0.16059115  0.2606357 #> [1918,]  0.17623734  0.2798937 #> [1919,]  0.12664030  0.2172411 #> [1920,]  0.16236138  0.2628358 #> [1921,]  0.82493694 -1.0940186 #> [1922,]  0.47691038  0.6004775 #> [1923,] -0.30140157 -0.3763260 #> [1924,]  0.18041224  0.2849638 #> [1925,] -0.67586864 -0.6990088 #> [1926,]  0.18268416 -3.4757061 #> [1927,]  2.17537045 -0.5201506 #> [1928,]  0.16964751  0.2718334 #> [1929,]  1.19640236 -0.8226688 #> [1930,]  0.09863452  0.1793555 #> [1931,]  0.44560425  0.5700156 #> [1932,]  0.97217104 -0.9645779 #> [1933,]  0.53968848  0.6602024 #> [1934,] -0.65961538  1.4575494 #> [1935,] -0.97562461  1.0796397 #> [1936,] -0.67178529 -0.6957683 #> [1937,]  0.08361492  0.1580166 #> [1938,] -0.65352757  1.4679489 #> [1939,] -3.31486730  0.4226534 #> [1940,]  0.84871044 -1.0704434 #> [1941,] -0.36597617 -0.4367253 #> [1942,] -0.66760009 -0.6924423 #> [1943,] -0.36993467 -0.4403427 #> [1944,] -0.30319807 -0.3780447 #> [1945,] -0.25685607 -0.3328954 #> [1946,]  0.30367493  0.4248043 #> [1947,]  0.79836073 -1.1218360 #> [1948,]  0.05840197  0.1200044 #> [1949,]  0.22379240  0.3361579 #> [1950,]  0.08361492  0.1580166 #> [1951,] -3.04242334  0.4513815 #> [1952,]  0.25344500  0.3698096 #> [1953,] -4.40973308  0.3395833 #> [1954,] -0.82856353  1.2237321 #> [1955,]  0.20981678  0.3199410 #> [1956,]  0.48974884 -1.6317639 #> [1957,]  0.22246354 -2.9884082 #> [1958,] -0.87975742 -0.8556144 #> [1959,]  0.25841169  0.3753539 #> [1960,] -1.35002954  0.8416240 #> [1961,] -0.42457864  2.0432948 #> [1962,] -0.38505929 -0.4540823 #> [1963,]  0.12240038  0.2116421 #> [1964,]  0.31254411  0.4342855 #> [1965,]  0.61172064  0.7267699 #> [1966,]  0.28407017 -2.4776195 #> [1967,]  0.41451214  0.5392634 #> [1968,] -0.25725113 -0.3332879 #> [1969,] -0.15916661 -0.2306452 #> [1970,] -2.01954459  0.6180201 #> [1971,] -0.66226674  1.4530730 #> [1972,] -0.57837543 -0.6203101 #> [1973,]  0.31466012  0.4365382 #> [1974,]  0.77803689 -1.1442381 #> [1975,]  0.22711275  0.3399756 #> [1976,]  0.25864309  0.3756115 #> [1977,] -0.28012595 -0.3557844 #> [1978,] -0.88298770 -0.8580223 #> [1979,]  0.41943780  0.5441701 #> [1980,]  0.07555298  0.1461976 #> [1981,] -0.19876709 -0.2734839 #> [1982,] -0.55573049 -0.6016014 #> [1983,]  1.20108186 -0.8202100 #> [1984,]  0.29708275  0.4177153 #> [1985,]  0.06243018  0.1263014 #> [1986,]  0.83752232  0.9247350 #> [1987,] -0.53156220 -0.5814367 #> [1988,] -0.42793711 -0.4923713 #> [1989,] -0.26991323 -0.3457957 #> [1990,]  0.25849196  0.3754432 #> [1991,] -0.58050039 -0.6220569 #> [1992,]  1.13727991  1.1692261 #> [1993,] -1.25799714  0.8884439 #> [1994,]  0.69223344  0.7990463 #> [1995,]  0.12474136  0.2147390 #> [1996,]  0.09415245  0.1730725 #> [1997,]  0.07555298  0.1461976 #> [1998,] -0.19876709 -0.2734839 #> [1999,]  0.74593344 -1.1818118 #> [2000,]  0.19707018  0.3049292 #>   #using precomputed Theta Theta <- fscores(x, method = 'MAP', full.scores = TRUE) head(personfit(x, Theta=Theta)) #>      outfit    z.outfit     infit    z.infit         Zh #> 1 2.6491304  4.49038856 1.8764135  4.7156923 -6.1421671 #> 2 1.7828235  2.87132551 1.4191231  2.4587600 -2.9646541 #> 3 1.0131906  0.21667856 1.1069103  0.5942755 -0.4322618 #> 4 0.9752658  0.03144039 1.0636063  0.4637990 -0.2675431 #> 5 0.6543701 -0.11418271 0.8869011 -0.4671270  0.6007619 #> 6 0.6970385 -1.02752175 0.7732412 -1.6329080  1.4394591  # multiple group Rasch model example set.seed(12345) a <- matrix(rep(1, 16), ncol=1) d <- matrix(rnorm(16,0,.7),ncol=1) itemtype <- rep('dich', nrow(a)) N <- 1000 dataset1 <- simdata(a, d, N, itemtype) dataset2 <- simdata(a, d, N, itemtype, sigma = matrix(1.5)) dat <- rbind(dataset1, dataset2)  # first observation responds 1 for most difficult, 0 for easiest dat[1,] <- ifelse(d > 0, 0, 1)  group <- c(rep('D1', N), rep('D2', N)) models <- 'F1 = 1-16' mod_Rasch <- multipleGroup(dat, models, itemtype = 'Rasch', group = group) #>  coef(mod_Rasch, simplify=TRUE) #> $D1 #> $items #>         a1      d g u #> Item_1   1  0.431 0 1 #> Item_2   1  0.446 0 1 #> Item_3   1 -0.039 0 1 #> Item_4   1 -0.217 0 1 #> Item_5   1  0.517 0 1 #> Item_6   1 -1.240 0 1 #> Item_7   1  0.492 0 1 #> Item_8   1 -0.138 0 1 #> Item_9   1 -0.113 0 1 #> Item_10  1 -0.709 0 1 #> Item_11  1  0.054 0 1 #> Item_12  1  1.346 0 1 #> Item_13  1  0.197 0 1 #> Item_14  1  0.436 0 1 #> Item_15  1 -0.456 0 1 #> Item_16  1  0.553 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>       F1 #> F1 1.099 #>  #>  #> $D2 #> $items #>         a1      d g u #> Item_1   1  0.407 0 1 #> Item_2   1  0.547 0 1 #> Item_3   1 -0.057 0 1 #> Item_4   1 -0.240 0 1 #> Item_5   1  0.290 0 1 #> Item_6   1 -1.293 0 1 #> Item_7   1  0.455 0 1 #> Item_8   1 -0.277 0 1 #> Item_9   1 -0.209 0 1 #> Item_10  1 -0.660 0 1 #> Item_11  1 -0.219 0 1 #> Item_12  1  1.230 0 1 #> Item_13  1  0.332 0 1 #> Item_14  1  0.322 0 1 #> Item_15  1 -0.496 0 1 #> Item_16  1  0.449 0 1 #>  #> $means #> F1  #>  0  #>  #> $cov #>       F1 #> F1 1.563 #>  #>  pf <- personfit(mod_Rasch, method='MAP') head(pf) #>      outfit   z.outfit     infit    z.infit         Zh #> 1 1.7020980  3.8601866 1.6168778  4.1292792 -4.7705221 #> 2 1.1927207  1.2391298 1.1583820  1.2242405 -1.2507554 #> 3 1.1600703  0.9795701 1.0933660  0.6952324 -0.7640134 #> 4 0.6421989 -1.2734374 0.7045519 -1.2639179  1.2138761 #> 5 1.0726731  0.3149890 1.0446560  0.2466146 -0.1792089 #> 6 0.8189958 -0.9216193 0.8518569 -0.8904852  0.9128864    # }"},{"path":"https://philchalmers.github.io/mirt/reference/plot-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot various test-implied functions from models — plot,MultipleGroupClass,missing-method","title":"Plot various test-implied functions from models — plot,MultipleGroupClass,missing-method","text":"Plot various test implied response functions models estimated mirt package.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/plot-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot various test-implied functions from models — plot,MultipleGroupClass,missing-method","text":"","code":"# S4 method for class 'MultipleGroupClass,missing' plot(   x,   y,   type = \"score\",   npts = 200,   drop2 = TRUE,   degrees = 45,   which.items = 1:extract.mirt(x, \"nitems\"),   rot = list(xaxis = -70, yaxis = 30, zaxis = 10),   facet_items = TRUE,   theta_lim = c(-6, 6),   par.strip.text = list(cex = 0.7),   par.settings = list(strip.background = list(col = \"#9ECAE1\"), strip.border = list(col =     \"black\")),   auto.key = list(space = \"right\", points = FALSE, lines = TRUE),   ... )  # S4 method for class 'SingleGroupClass,missing' plot(   x,   y,   type = \"score\",   npts = 200,   drop2 = TRUE,   degrees = 45,   theta_lim = c(-6, 6),   which.items = 1:extract.mirt(x, \"nitems\"),   MI = 0,   CI = 0.95,   rot = list(xaxis = -70, yaxis = 30, zaxis = 10),   facet_items = TRUE,   main = NULL,   drape = TRUE,   colorkey = TRUE,   ehist.cut = 1e-10,   add.ylab2 = TRUE,   par.strip.text = list(cex = 0.7),   par.settings = list(strip.background = list(col = \"#9ECAE1\"), strip.border = list(col =     \"black\")),   auto.key = list(space = \"right\", points = FALSE, lines = TRUE),   profile = FALSE,   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/plot-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot various test-implied functions from models — plot,MultipleGroupClass,missing-method","text":"x object class SingleGroupClass, MultipleGroupClass, DiscreteClass y arbitrary missing argument required R CMD check type type plot view. Can 'info' test information function 'rxx' reliability function 'infocontour' test information contours 'SE' test standard error function 'infotrace' item information traceline plots 'infoSE' combined test information standard error plot 'trace' item probability traceline plots 'itemscore' item scoring traceline plots 'score' expected total score surface 'scorecontour' expected total score contour plot 'posteriorTheta' posterior latent trait distribution 'EAPsum' compares sum-scores expected values based       EAP sum-scores method (see fscores) Note dentype = 'empiricalhist' used estimation   type 'empiricalhist'   also available generate empirical histogram plot,   dentype = 'Davidian-#' used type 'Davidian'   also available generate curve estimates quadrature   nodes used estimation npts number quadrature points used plotting features. Larger values make plots look smoother drop2 logical; appropriate, dichotomous response items drop lowest category provide information pertaining second response option? degrees numeric value ranging 0 90 used plot compute angle information-based plots respect first dimension. vector used bubble plot created summed information across angles specified (e.g., degrees = seq(0, 90, =10)) .items numeric vector indicating items used plotting. Default use available items rot allows rotation 3D graphics facet_items logical; apply grid plots across items? FALSE, items placed one plot group theta_lim lower upper limits latent trait (theta) evaluated, used conjunction npts par.strip.text plotting argument passed lattice par.settings plotting argument passed lattice auto.key plotting argument passed lattice ... additional arguments passed lattice MI single number indicating many imputations draw form bootstrapped confidence intervals selected test statistic. greater 0 plot drawn shaded region interval CI number 0 1 indicating confidence interval select MI input used. Default uses 95% confidence (CI = .95) main argument passed lattice. Default generated automatically drape logical argument passed lattice. Default generated automatically colorkey logical argument passed lattice. Default generated automatically ehist.cut probability value indicating threshold excluding cases empirical histogram plots. Values larger default include points tails plot, potentially squishing 'meat' plot take less area visually desired add.ylab2 logical argument passed lattice. Default generated automatically profile logical; provide profile plot response probabilities (objects returned mdirt )","code":""},{"path":"https://philchalmers.github.io/mirt/reference/plot-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot various test-implied functions from models — plot,MultipleGroupClass,missing-method","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/plot-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot various test-implied functions from models — plot,MultipleGroupClass,missing-method","text":"","code":"# \\donttest{ x <- mirt(Science, 1, SE=TRUE) #>  #>  #> Calculating information matrix... plot(x)  plot(x, type = 'info')  plot(x, type = 'infotrace')  plot(x, type = 'infotrace', facet_items = FALSE)  plot(x, type = 'infoSE')  plot(x, type = 'rxx')  plot(x, type = 'posteriorTheta')   # confidence interval plots when information matrix computed plot(x)  plot(x, MI=100)  plot(x, type='info', MI=100)  plot(x, type='SE', MI=100)  plot(x, type='rxx', MI=100)   # use the directlabels package to put labels on tracelines library(directlabels) plt <- plot(x, type = 'trace') direct.label(plt, 'top.points')   # additional modifications can be made via update(). # See ?update.trellis for further documentation plt  update(plt, ylab = expression(Prob(theta)),             main = \"Item Traceline Functions\") # ylab/main changed   set.seed(1234) group <- sample(c('g1','g2'), nrow(Science), TRUE) x2 <- multipleGroup(Science, 1, group) #>  plot(x2)  plot(x2, type = 'trace')  plot(x2, type = 'trace', which.items = 1:2)  plot(x2, type = 'itemscore', which.items = 1:2)  plot(x2, type = 'trace', which.items = 1, facet_items = FALSE) #facet by group  plot(x2, type = 'info')   x3 <- mirt(Science, 2) #>  plot(x3, type = 'info')  plot(x3, type = 'SE', theta_lim = c(-3,3))   # }"},{"path":"https://philchalmers.github.io/mirt/reference/poly2dich.html","id":null,"dir":"Reference","previous_headings":"","what":"Change polytomous items to dichotomous item format — poly2dich","title":"Change polytomous items to dichotomous item format — poly2dich","text":"Transforms matrix items new matrix select polytomous items converted comparable dichotomous items information.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/poly2dich.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change polytomous items to dichotomous item format — poly2dich","text":"","code":"poly2dich(data, which.items = 1:ncol(data), sep = \"_cat.\")"},{"path":"https://philchalmers.github.io/mirt/reference/poly2dich.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change polytomous items to dichotomous item format — poly2dich","text":"data object class data.frame matrix .items vector indicating items transformed dichotomous form. Default uses input items sep character vector pattern append item name data","code":""},{"path":"https://philchalmers.github.io/mirt/reference/poly2dich.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change polytomous items to dichotomous item format — poly2dich","text":"Returns integer matrix","code":""},{"path":"https://philchalmers.github.io/mirt/reference/poly2dich.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Change polytomous items to dichotomous item format — poly2dich","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/poly2dich.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Change polytomous items to dichotomous item format — poly2dich","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/poly2dich.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change polytomous items to dichotomous item format — poly2dich","text":"","code":"# \\donttest{ data(Science)  head(Science) #>   Comfort Work Future Benefit #> 1       4    4      3       2 #> 2       3    3      3       3 #> 3       3    2      2       3 #> 4       3    2      2       3 #> 5       3    4      4       1 #> 6       4    4      3       3 newScience <- poly2dich(Science) head(newScience) #>      Comfort_cat.1 Comfort_cat.2 Comfort_cat.3 Comfort_cat.4 Work_cat.1 #> [1,]             0             0             0             1          0 #> [2,]             0             0             1             0          0 #> [3,]             0             0             1             0          0 #> [4,]             0             0             1             0          0 #> [5,]             0             0             1             0          0 #> [6,]             0             0             0             1          0 #>      Work_cat.2 Work_cat.3 Work_cat.4 Future_cat.1 Future_cat.2 Future_cat.3 #> [1,]          0          0          1            0            0            1 #> [2,]          0          1          0            0            0            1 #> [3,]          1          0          0            0            1            0 #> [4,]          1          0          0            0            1            0 #> [5,]          0          0          1            0            0            0 #> [6,]          0          0          1            0            0            1 #>      Future_cat.4 Benefit_cat.1 Benefit_cat.2 Benefit_cat.3 Benefit_cat.4 #> [1,]            0             0             1             0             0 #> [2,]            0             0             0             1             0 #> [3,]            0             0             0             1             0 #> [4,]            0             0             0             1             0 #> [5,]            1             1             0             0             0 #> [6,]            0             0             0             1             0  newScience2 <- poly2dich(Science, which.items = 2) head(newScience2) #>   Comfort Work_cat.1 Work_cat.2 Work_cat.3 Work_cat.4 Future Benefit #> 1       4          0          0          0          1      3       2 #> 2       3          0          0          1          0      3       3 #> 3       3          0          1          0          0      2       3 #> 4       3          0          1          0          0      2       3 #> 5       3          0          0          0          1      4       1 #> 6       4          0          0          0          1      3       3  # }"},{"path":"https://philchalmers.github.io/mirt/reference/print-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the model objects — print-method","title":"Print the model objects — print-method","text":"Print model object summaries console.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/print-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the model objects — print-method","text":"","code":"# S4 method for class 'SingleGroupClass' print(x)"},{"path":"https://philchalmers.github.io/mirt/reference/print-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the model objects — print-method","text":"x object class SingleGroupClass, MultipleGroupClass, MixedClass","code":""},{"path":"https://philchalmers.github.io/mirt/reference/print-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Print the model objects — print-method","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/print-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print the model objects — print-method","text":"","code":"# \\donttest{ x <- mirt(Science, 1) #>  print(x) #>  #> Call: #> mirt(data = Science, model = 1) #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 1e-04 tolerance after 36 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Log-likelihood = -1608.87 #> Estimated parameters: 16  #> AIC = 3249.739 #> BIC = 3313.279; SABIC = 3262.512 #> G2 (239) = 213.56, p = 0.8804 #> RMSEA = 0, CFI = NaN, TLI = NaN # }"},{"path":"https://philchalmers.github.io/mirt/reference/print.mirt_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Print generic for customized data.frame console output — print.mirt_df","title":"Print generic for customized data.frame console output — print.mirt_df","text":"Provides nicer output printed data.frame objects defined functions mirt.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/print.mirt_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print generic for customized data.frame console output — print.mirt_df","text":"","code":"# S3 method for class 'mirt_df' print(x, digits = 3, ...)"},{"path":"https://philchalmers.github.io/mirt/reference/print.mirt_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print generic for customized data.frame console output — print.mirt_df","text":"x object class 'mirt_df' digits number digits round ... additional arguments passed print(...)","code":""},{"path":"https://philchalmers.github.io/mirt/reference/print.mirt_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Print generic for customized list console output — print.mirt_list","title":"Print generic for customized list console output — print.mirt_list","text":"Provides nicer output printed list objects defined functions mirt.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/print.mirt_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print generic for customized list console output — print.mirt_list","text":"","code":"# S3 method for class 'mirt_list' print(x, digits = 3, ...)"},{"path":"https://philchalmers.github.io/mirt/reference/print.mirt_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print generic for customized list console output — print.mirt_list","text":"x object class 'mirt_list' digits number digits round ... additional arguments passed print(...)","code":""},{"path":"https://philchalmers.github.io/mirt/reference/print.mirt_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Print generic for customized matrix console output — print.mirt_matrix","title":"Print generic for customized matrix console output — print.mirt_matrix","text":"Provides nicer output printed matrix objects defined functions mirt.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/print.mirt_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print generic for customized matrix console output — print.mirt_matrix","text":"","code":"# S3 method for class 'mirt_matrix' print(x, digits = 3, ...)  # S3 method for class 'matrix' print(x, ...)"},{"path":"https://philchalmers.github.io/mirt/reference/print.mirt_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print generic for customized matrix console output — print.mirt_matrix","text":"x object class 'mirt_matrix' digits number digits round ... additional arguments passed print(...)","code":""},{"path":"https://philchalmers.github.io/mirt/reference/probtrace.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate probability trace lines — probtrace","title":"Function to calculate probability trace lines — probtrace","text":"Given internal mirt object extracted estimated model, single-group estimated model , compute probability trace lines categories.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/probtrace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate probability trace lines — probtrace","text":"","code":"probtrace(x, Theta)"},{"path":"https://philchalmers.github.io/mirt/reference/probtrace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate probability trace lines — probtrace","text":"x either extracted internal mirt object containing item information (see extract.item) model class SingleGroupClass typically returned function mirt bfactor Theta vector (unidimensional) matrix (unidimensional/multidimensional) latent trait values","code":""},{"path":"https://philchalmers.github.io/mirt/reference/probtrace.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Function to calculate probability trace lines — probtrace","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/probtrace.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to calculate probability trace lines — probtrace","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/probtrace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to calculate probability trace lines — probtrace","text":"","code":"mod <- mirt(Science, 1) #>   # single item probabilty tracelines for Item 2 extr.2 <- extract.item(mod, 2) Theta <- matrix(seq(-4,4, by = .1)) traceline <- probtrace(extr.2, Theta) head(data.frame(traceline, Theta=Theta)) #>         P.1       P.2        P.3          P.4 Theta #> 1 0.8786646 0.1033965 0.01717048 0.0007684150  -4.0 #> 2 0.8649759 0.1147928 0.01936274 0.0008685506  -3.9 #> 3 0.8500065 0.1271837 0.02182811 0.0009817226  -3.8 #> 4 0.8336966 0.1405950 0.02459876 0.0011096245  -3.7 #> 5 0.8159972 0.1550385 0.02771018 0.0012541689  -3.6 #> 6 0.7968730 0.1705082 0.03120137 0.0014175155  -3.5  # probability tracelines for all items in test tracelines <- probtrace(mod, Theta) head(tracelines) #>      Comfort.P.1 Comfort.P.2 Comfort.P.3 Comfort.P.4  Work.P.1  Work.P.2 #> [1,]   0.3324476   0.4891306   0.1748568 0.003564956 0.8786646 0.1033965 #> [2,]   0.3097452   0.4960477   0.1902523 0.003954823 0.8649759 0.1147928 #> [3,]   0.2879244   0.5010453   0.2066432 0.004387139 0.8500065 0.1271837 #> [4,]   0.2670460   0.5040571   0.2240304 0.004866481 0.8336966 0.1405950 #> [5,]   0.2471562   0.5050429   0.2424030 0.005397913 0.8159972 0.1550385 #> [6,]   0.2282864   0.5039894   0.2617372 0.005987029 0.7968730 0.1705082 #>        Work.P.3     Work.P.4 Future.P.1 Future.P.2   Future.P.3   Future.P.4 #> [1,] 0.01717048 0.0007684150  0.9809133 0.01813820 0.0009339072 1.456036e-05 #> [2,] 0.01936274 0.0008685506  0.9761110 0.02269637 0.0011743453 1.831346e-05 #> [3,] 0.02182811 0.0009817226  0.9701371 0.02836330 0.0014765907 2.303394e-05 #> [4,] 0.02459876 0.0011096245  0.9627263 0.03538820 0.0018564770 2.897114e-05 #> [5,] 0.02771018 0.0012541689  0.9535646 0.04406509 0.0023338620 3.643864e-05 #> [6,] 0.03120137 0.0014175155  0.9422860 0.05473458 0.0029336324 4.583085e-05 #>      Benefit.P.1 Benefit.P.2 Benefit.P.3 Benefit.P.4 #> [1,]   0.7372533   0.2300751  0.03036097 0.002310633 #> [2,]   0.7155002   0.2481850  0.03373746 0.002577309 #> [3,]   0.6926969   0.2669559  0.03747256 0.002874673 #> [4,]   0.6689116   0.2862818  0.04160042 0.003206237 #> [5,]   0.6442308   0.3060358  0.04615750 0.003575906 #> [6,]   0.6187588   0.3260706  0.05118258 0.003988026"},{"path":"https://philchalmers.github.io/mirt/reference/randef.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute posterior estimates of random effect — randef","title":"Compute posterior estimates of random effect — randef","text":"Stochastically compute random effects MixedClass objects Metropolis-Hastings samplers averaging draws obtain expected posteriori predictions. Returns list estimated effects.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/randef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute posterior estimates of random effect — randef","text":"","code":"randef(x, ndraws = 1000, thin = 10, return.draws = FALSE)"},{"path":"https://philchalmers.github.io/mirt/reference/randef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute posterior estimates of random effect — randef","text":"x estimated model object mixedmirt function ndraws total number draws perform. Default 1000 thin amount thinning apply. Default use every 10th draw return.draws logical; return list containing thinned draws posterior?","code":""},{"path":"https://philchalmers.github.io/mirt/reference/randef.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute posterior estimates of random effect — randef","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. Chalmers, R. P. (2015). Extended Mixed-Effects Item Response Models MH-RM Algorithm. Journal Educational Measurement, 52, 200-222. doi:10.1111/jedm.12072  doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/randef.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute posterior estimates of random effect — randef","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/randef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute posterior estimates of random effect — randef","text":"","code":"# \\donttest{ # make an arbitrary groups covdat <- data.frame(group = rep(paste0('group', 1:49), each=nrow(Science)/49))  # partial credit model mod <- mixedmirt(Science, covdat, model=1, random = ~ 1|group) #> , Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.1915, Max-Change = 0.1573, Max-Change = 0.1007, Max-Change = 0.0881, Max-Change = 0.0682, Max-Change = 0.0656, Max-Change = 0.0356, Max-Change = 0.0255, Max-Change = 0.0751, Max-Change = 0.0268, Max-Change = 0.0304, Max-Change = 0.0229, Max-Change = 0.0200, Max-Change = 0.0445, Max-Change = 0.0308, Max-Change = 0.0444, Max-Change = 0.0135, Max-Change = 0.0410, Max-Change = 0.0253, Max-Change = 0.0290, Max-Change = 0.0157, Max-Change = 0.0171, Max-Change = 0.0140, Max-Change = 0.0117, Max-Change = 0.0350, Max-Change = 0.0598, Max-Change = 0.0187, Max-Change = 0.0132, Max-Change = 0.0261, Max-Change = 0.0297, Max-Change = 0.0074, Max-Change = 0.0052, Max-Change = 0.0281, Max-Change = 0.0186, Max-Change = 0.0302, Max-Change = 0.0417, Max-Change = 0.0215, Max-Change = 0.0501, Max-Change = 0.0178, Max-Change = 0.0388, Max-Change = 0.0248, Max-Change = 0.0528, Max-Change = 0.0227, Max-Change = 0.0224, Max-Change = 0.0226, Max-Change = 0.0182, Max-Change = 0.0037, Max-Change = 0.0091, Max-Change = 0.0254, Max-Change = 0.0213, Max-Change = 0.0231, Max-Change = 0.0188, Max-Change = 0.0261, Max-Change = 0.0165, Max-Change = 0.0136, Max-Change = 0.0445, Max-Change = 0.0255, Max-Change = 0.0269, Max-Change = 0.0198, Max-Change = 0.0410, Max-Change = 0.0160, Max-Change = 0.0145, Max-Change = 0.0096, Max-Change = 0.0160, Max-Change = 0.0495, Max-Change = 0.0382, Max-Change = 0.0194, Max-Change = 0.0273, Max-Change = 0.0555, Max-Change = 0.0118, Max-Change = 0.0238, Max-Change = 0.0052, Max-Change = 0.0371, Max-Change = 0.0250, Max-Change = 0.0414, Max-Change = 0.0157, Max-Change = 0.0294, Max-Change = 0.0270, Max-Change = 0.0228, Max-Change = 0.0059, Max-Change = 0.0323, Max-Change = 0.0277, Max-Change = 0.0092, Max-Change = 0.0094, Max-Change = 0.0214, Max-Change = 0.0300, Max-Change = 0.0302, Max-Change = 0.0401, Max-Change = 0.0091, Max-Change = 0.0820, Max-Change = 0.0138, Max-Change = 0.0163, Max-Change = 0.0619, Max-Change = 0.0539, Max-Change = 0.0059, Max-Change = 0.0250, Max-Change = 0.0126, Max-Change = 0.0472, Max-Change = 0.0278, Max-Change = 0.0999, Max-Change = 0.0248, Max-Change = 0.0933, Max-Change = 0.2000, Max-Change = 0.0784, Max-Change = 0.0183, Max-Change = 0.0312, Max-Change = 0.0170, Max-Change = 0.0667, Max-Change = 0.0366, Max-Change = 0.1640, Max-Change = 0.0398, Max-Change = 0.0143, Max-Change = 0.0223, Max-Change = 0.0374, Max-Change = 0.0143, Max-Change = 0.0153, Max-Change = 0.0348, Max-Change = 0.0118, Max-Change = 0.0261, Max-Change = 0.1477, Max-Change = 0.0443, Max-Change = 0.0091, Max-Change = 0.0144, Max-Change = 0.0168, Max-Change = 0.0444, Max-Change = 0.0190, Max-Change = 0.0157, Max-Change = 0.0231, Max-Change = 0.0213, Max-Change = 0.0231, Max-Change = 0.0278, Max-Change = 0.0082, Max-Change = 0.0440, Max-Change = 0.0320, Max-Change = 0.0238, Max-Change = 0.0408, Max-Change = 0.0082, Max-Change = 0.0251, Max-Change = 0.0223, Max-Change = 0.2000, Max-Change = 0.0111, Max-Change = 0.0245, Max-Change = 0.0052, Max-Change = 0.0256, Max-Change = 0.0124, Max-Change = 0.0316, Max-Change = 0.0363, Max-Change = 0.0302, Max-Change = 0.0088, Max-Change = 0.0356, Max-Change = 0.0298, Max-Change = 0.0329, Max-Change = 0.0517, Max-Change = 0.0219, Max-Change = 0.0085, Max-Change = 0.0108, Max-Change = 0.0283, Max-Change = 0.0234, Max-Change = 0.0235, Max-Change = 0.0381, Max-Change = 0.0311, Max-Change = 0.0693, Max-Change = 0.0397, Max-Change = 0.0596, Max-Change = 0.0471, Max-Change = 0.0343, Max-Change = 0.0371, Max-Change = 0.0371, Max-Change = 0.0160, Max-Change = 0.0327, Max-Change = 0.0152, Max-Change = 0.0242, Max-Change = 0.0370, Max-Change = 0.0250, Max-Change = 0.0365, Max-Change = 0.0145, Max-Change = 0.0242, Max-Change = 0.0182, Max-Change = 0.0203, Max-Change = 0.0343, Max-Change = 0.0251, Max-Change = 0.0231, Max-Change = 0.0061, Max-Change = 0.0145, Max-Change = 0.0328, Max-Change = 0.0212, Max-Change = 0.0181, Max-Change = 0.0260, Max-Change = 0.0101, Max-Change = 0.0139, Max-Change = 0.0107, Max-Change = 0.0053, Max-Change = 0.0552, Max-Change = 0.0186, Max-Change = 0.0305, Max-Change = 0.0174, Max-Change = 0.0232, Max-Change = 0.0176, Max-Change = 0.0055, Max-Change = 0.0257, Max-Change = 0.0202, Max-Change = 0.0191, Max-Change = 0.0085, Max-Change = 0.0236, Max-Change = 0.0117, Max-Change = 0.0123, Max-Change = 0.0412, Max-Change = 0.0324, Max-Change = 0.0294, Max-Change = 0.0184, Max-Change = 0.0159, Max-Change = 0.0174, Max-Change = 0.0132, Max-Change = 0.0290, Max-Change = 0.0222, Max-Change = 0.0331, Max-Change = 0.0446, Max-Change = 0.0547, Max-Change = 0.0381, Max-Change = 0.0320, Max-Change = 0.0527, Max-Change = 0.0478, Max-Change = 0.0351, Max-Change = 0.0380, Max-Change = 0.0211, Max-Change = 0.0213, Max-Change = 0.0547, Max-Change = 0.0155, Max-Change = 0.0092, Max-Change = 0.0178, Max-Change = 0.0393, Max-Change = 0.0074, Max-Change = 0.0178, Max-Change = 0.0199, Max-Change = 0.0740, Max-Change = 0.0120, Max-Change = 0.0230, Max-Change = 0.0285, Max-Change = 0.0158, Max-Change = 0.0081, Max-Change = 0.0257, Max-Change = 0.0076, Max-Change = 0.0203, Max-Change = 0.0119, Max-Change = 0.0317, Max-Change = 0.0153, Max-Change = 0.0327, Max-Change = 0.0362, Max-Change = 0.0118, Max-Change = 0.0187, Max-Change = 0.0571, Max-Change = 0.0288, Max-Change = 0.0133, Max-Change = 0.0365, Max-Change = 0.0157, Max-Change = 0.0135, Max-Change = 0.0211, Max-Change = 0.0368, Max-Change = 0.0104, Max-Change = 0.0265, Max-Change = 0.0138, Max-Change = 0.0203, Max-Change = 0.0366, Max-Change = 0.0227, Max-Change = 0.0356, Max-Change = 0.0329, Max-Change = 0.0566, Max-Change = 0.0124, Max-Change = 0.0127, Max-Change = 0.0163, Max-Change = 0.0133, Max-Change = 0.0307, Max-Change = 0.0247, Max-Change = 0.0069, Max-Change = 0.0221, Max-Change = 0.0158, Max-Change = 0.0242, Max-Change = 0.0052, Max-Change = 0.0228, Max-Change = 0.0170, Max-Change = 0.0107, Max-Change = 0.0293, Max-Change = 0.0277, Max-Change = 0.0145, Max-Change = 0.0471, Max-Change = 0.0053, Max-Change = 0.0236, Max-Change = 0.0284, Max-Change = 0.0147, Max-Change = 0.0189, Max-Change = 0.0147, Max-Change = 0.0253, Max-Change = 0.0429, Max-Change = 0.0081, Max-Change = 0.0276, Max-Change = 0.0364, Max-Change = 0.0184, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0217, gam = 0.1057, Max-Change = 0.0110, gam = 0.0780, Max-Change = 0.0088, gam = 0.0629, Max-Change = 0.0031, gam = 0.0532, Max-Change = 0.0044, gam = 0.0464, Max-Change = 0.0037, gam = 0.0413, Max-Change = 0.0045, gam = 0.0374, Max-Change = 0.0044, gam = 0.0342, Max-Change = 0.0029, gam = 0.0316, Max-Change = 0.0062, gam = 0.0294, Max-Change = 0.0045, gam = 0.0276, Max-Change = 0.0019, gam = 0.0260, Max-Change = 0.0010, gam = 0.0246, Max-Change = 0.0030, gam = 0.0233, Max-Change = 0.0011, gam = 0.0222, Max-Change = 0.0026, gam = 0.0212, Max-Change = 0.0026, gam = 0.0203, Max-Change = 0.0017, gam = 0.0195, Max-Change = 0.0023, gam = 0.0188, Max-Change = 0.0007, gam = 0.0181, Max-Change = 0.0036, gam = 0.0175, Max-Change = 0.0007, gam = 0.0169, Max-Change = 0.0025, gam = 0.0164, Max-Change = 0.0033, gam = 0.0159, Max-Change = 0.0020, gam = 0.0154, Max-Change = 0.0011, gam = 0.0150, Max-Change = 0.0030, gam = 0.0146, Max-Change = 0.0009, gam = 0.0142, Max-Change = 0.0022, gam = 0.0139, Max-Change = 0.0029, gam = 0.0135, Max-Change = 0.0014, gam = 0.0132, Max-Change = 0.0010, gam = 0.0129, Max-Change = 0.0010, gam = 0.0126, Max-Change = 0.0017, gam = 0.0124, Max-Change = 0.0010, gam = 0.0121, Max-Change = 0.0014, gam = 0.0119, Max-Change = 0.0025, gam = 0.0116, Max-Change = 0.0012, gam = 0.0114, Max-Change = 0.0010, gam = 0.0112, Max-Change = 0.0003, gam = 0.0110, Max-Change = 0.0009 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood... summary(mod) #>  #> Call: #> mixedmirt(data = Science, covdata = covdat, model = 1, random = ~1 |  #>     group) #>  #>  #> -------------- #> RANDOM EFFECT COVARIANCE(S): #> Correlations on upper diagonal #>  #> $Theta #>      F1 #> F1 0.95 #>  #> $group #>           COV_group #> COV_group    0.0185 #>   effects <- randef(mod, ndraws = 2000, thin = 20) head(effects$Theta) #>               F1 #> [1,]  0.41717667 #> [2,]  0.11141504 #> [3,] -0.64298403 #> [4,] -0.72588495 #> [5,] -0.01936533 #> [6,]  0.83546412 head(effects$group) #>               group #> group1 -0.005841588 #> group2  0.016840150 #> group3  0.006032207 #> group4  0.015091260 #> group5  0.034093949 #> group6 -0.011660087  # lr.random input mod2 <- mixedmirt(Science, covdat, model=1, lr.random = ~ 1|group) #> , Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.2000, Max-Change = 0.1915, Max-Change = 0.1573, Max-Change = 0.1007, Max-Change = 0.0881, Max-Change = 0.0682, Max-Change = 0.0656, Max-Change = 0.0356, Max-Change = 0.0255, Max-Change = 0.0751, Max-Change = 0.0268, Max-Change = 0.0304, Max-Change = 0.0229, Max-Change = 0.0200, Max-Change = 0.0445, Max-Change = 0.0308, Max-Change = 0.0444, Max-Change = 0.0135, Max-Change = 0.0410, Max-Change = 0.0253, Max-Change = 0.0290, Max-Change = 0.0157, Max-Change = 0.0171, Max-Change = 0.0140, Max-Change = 0.0117, Max-Change = 0.0350, Max-Change = 0.0598, Max-Change = 0.0187, Max-Change = 0.0132, Max-Change = 0.0261, Max-Change = 0.0297, Max-Change = 0.0074, Max-Change = 0.0052, Max-Change = 0.0281, Max-Change = 0.0186, Max-Change = 0.0302, Max-Change = 0.0417, Max-Change = 0.0215, Max-Change = 0.0501, Max-Change = 0.0178, Max-Change = 0.0388, Max-Change = 0.0248, Max-Change = 0.0528, Max-Change = 0.0227, Max-Change = 0.0224, Max-Change = 0.0226, Max-Change = 0.0182, Max-Change = 0.0037, Max-Change = 0.0091, Max-Change = 0.0254, Max-Change = 0.0213, Max-Change = 0.0231, Max-Change = 0.0188, Max-Change = 0.0261, Max-Change = 0.0165, Max-Change = 0.0136, Max-Change = 0.0445, Max-Change = 0.0255, Max-Change = 0.0269, Max-Change = 0.0198, Max-Change = 0.0410, Max-Change = 0.0160, Max-Change = 0.0145, Max-Change = 0.0096, Max-Change = 0.0160, Max-Change = 0.0495, Max-Change = 0.0382, Max-Change = 0.0194, Max-Change = 0.0273, Max-Change = 0.0555, Max-Change = 0.0118, Max-Change = 0.0238, Max-Change = 0.0052, Max-Change = 0.0371, Max-Change = 0.0250, Max-Change = 0.0414, Max-Change = 0.0157, Max-Change = 0.0294, Max-Change = 0.0270, Max-Change = 0.0228, Max-Change = 0.0059, Max-Change = 0.0323, Max-Change = 0.0277, Max-Change = 0.0092, Max-Change = 0.0094, Max-Change = 0.0214, Max-Change = 0.0300, Max-Change = 0.0302, Max-Change = 0.0401, Max-Change = 0.0091, Max-Change = 0.0820, Max-Change = 0.0138, Max-Change = 0.0163, Max-Change = 0.0619, Max-Change = 0.0539, Max-Change = 0.0059, Max-Change = 0.0250, Max-Change = 0.1899, Max-Change = 0.1933, Max-Change = 0.1280, Max-Change = 0.1086, Max-Change = 0.0546, Max-Change = 0.0750, Max-Change = 0.1542, Max-Change = 0.1966, Max-Change = 0.2000, Max-Change = 0.0711, Max-Change = 0.0324, Max-Change = 0.0147, Max-Change = 0.0462, Max-Change = 0.0279, Max-Change = 0.0309, Max-Change = 0.0194, Max-Change = 0.0733, Max-Change = 0.1374, Max-Change = 0.0180, Max-Change = 0.0347, Max-Change = 0.1197, Max-Change = 0.0132, Max-Change = 0.0149, Max-Change = 0.0380, Max-Change = 0.0629, Max-Change = 0.0111, Max-Change = 0.0315, Max-Change = 0.0404, Max-Change = 0.0238, Max-Change = 0.0206, Max-Change = 0.0161, Max-Change = 0.0327, Max-Change = 0.0365, Max-Change = 0.0163, Max-Change = 0.0540, Max-Change = 0.0262, Max-Change = 0.0420, Max-Change = 0.0280, Max-Change = 0.0219, Max-Change = 0.0658, Max-Change = 0.0245, Max-Change = 0.0234, Max-Change = 0.0276, Max-Change = 0.0224, Max-Change = 0.0245, Max-Change = 0.0237, Max-Change = 0.0184, Max-Change = 0.0427, Max-Change = 0.0290, Max-Change = 0.0313, Max-Change = 0.0370, Max-Change = 0.0373, Max-Change = 0.0347, Max-Change = 0.0522, Max-Change = 0.0189, Max-Change = 0.0250, Max-Change = 0.0195, Max-Change = 0.0284, Max-Change = 0.0366, Max-Change = 0.0176, Max-Change = 0.0289, Max-Change = 0.0262, Max-Change = 0.0490, Max-Change = 0.0336, Max-Change = 0.0446, Max-Change = 0.0192, Max-Change = 0.0195, Max-Change = 0.0348, Max-Change = 0.0537, Max-Change = 0.0329, Max-Change = 0.0317, Max-Change = 0.0398, Max-Change = 0.0264, Max-Change = 0.0277, Max-Change = 0.0317, Max-Change = 0.0294, Max-Change = 0.0340, Max-Change = 0.0406, Max-Change = 0.0338, Max-Change = 0.0178, Max-Change = 0.0254, Max-Change = 0.0089, Max-Change = 0.0878, Max-Change = 0.0468, Max-Change = 0.0329, Max-Change = 0.0246, Max-Change = 0.0071, Max-Change = 0.0205, Max-Change = 0.0308, Max-Change = 0.0178, Max-Change = 0.0359, Max-Change = 0.0225, Max-Change = 0.0100, Max-Change = 0.0261, Max-Change = 0.0228, Max-Change = 0.0223, Max-Change = 0.0326, Max-Change = 0.0343, Max-Change = 0.0368, Max-Change = 0.0338, Max-Change = 0.0122, Max-Change = 0.0081, Max-Change = 0.0109, Max-Change = 0.0453, Max-Change = 0.0249, Max-Change = 0.0423, Max-Change = 0.0133, Max-Change = 0.0187, Max-Change = 0.0289, Max-Change = 0.0234, Max-Change = 0.0390, Max-Change = 0.0520, Max-Change = 0.0172, Max-Change = 0.0222, Max-Change = 0.0316, Max-Change = 0.0104, Max-Change = 0.0097, Max-Change = 0.0311, Max-Change = 0.0140, Max-Change = 0.0150, Max-Change = 0.0247, Max-Change = 0.0106, Max-Change = 0.0261, Max-Change = 0.0283, Max-Change = 0.0419, Max-Change = 0.0289, Max-Change = 0.0121, Max-Change = 0.0154, Max-Change = 0.0470, Max-Change = 0.0236, Max-Change = 0.0899, Max-Change = 0.0252, Max-Change = 0.0080, Max-Change = 0.0071, Max-Change = 0.0292, Max-Change = 0.0153, Max-Change = 0.0314, Max-Change = 0.0378, Max-Change = 0.0465, Max-Change = 0.0288, Max-Change = 0.0138, Max-Change = 0.0226, Max-Change = 0.0142, Max-Change = 0.0498, Max-Change = 0.0157, Max-Change = 0.0099, Max-Change = 0.0156, Max-Change = 0.0520, Max-Change = 0.0221, Max-Change = 0.0362, Max-Change = 0.0481, gam = 0.0000, Max-Change = 0.0000, gam = 0.1778, Max-Change = 0.0163, gam = 0.1057, Max-Change = 0.0270, gam = 0.0780, Max-Change = 0.0130, gam = 0.0629, Max-Change = 0.0047, gam = 0.0532, Max-Change = 0.0046, gam = 0.0464, Max-Change = 0.0076, gam = 0.0413, Max-Change = 0.0048, gam = 0.0374, Max-Change = 0.0059, gam = 0.0342, Max-Change = 0.0076, gam = 0.0316, Max-Change = 0.0091, gam = 0.0294, Max-Change = 0.0013, gam = 0.0276, Max-Change = 0.0029, gam = 0.0260, Max-Change = 0.0009, gam = 0.0246, Max-Change = 0.0028, gam = 0.0233, Max-Change = 0.0025, gam = 0.0222, Max-Change = 0.0031, gam = 0.0212, Max-Change = 0.0024, gam = 0.0203, Max-Change = 0.0025, gam = 0.0195, Max-Change = 0.0061, gam = 0.0188, Max-Change = 0.0031, gam = 0.0181, Max-Change = 0.0017, gam = 0.0175, Max-Change = 0.0028, gam = 0.0169, Max-Change = 0.0032, gam = 0.0164, Max-Change = 0.0024, gam = 0.0159, Max-Change = 0.0015, gam = 0.0154, Max-Change = 0.0014, gam = 0.0150, Max-Change = 0.0011, gam = 0.0146, Max-Change = 0.0020, gam = 0.0142, Max-Change = 0.0023, gam = 0.0139, Max-Change = 0.0007, gam = 0.0135, Max-Change = 0.0029, gam = 0.0132, Max-Change = 0.0012, gam = 0.0129, Max-Change = 0.0026, gam = 0.0126, Max-Change = 0.0017, gam = 0.0124, Max-Change = 0.0004, gam = 0.0121, Max-Change = 0.0012, gam = 0.0119, Max-Change = 0.0013, gam = 0.0116, Max-Change = 0.0010, gam = 0.0114, Max-Change = 0.0014, gam = 0.0112, Max-Change = 0.0007, gam = 0.0110, Max-Change = 0.0017, gam = 0.0108, Max-Change = 0.0011, gam = 0.0106, Max-Change = 0.0008, gam = 0.0104, Max-Change = 0.0011, gam = 0.0102, Max-Change = 0.0021, gam = 0.0101, Max-Change = 0.0004, gam = 0.0099, Max-Change = 0.0005, gam = 0.0098, Max-Change = 0.0005 #>  #> Calculating information matrix... #>  #> Calculating log-likelihood... summary(mod2) #>  #> Call: #> mixedmirt(data = Science, covdata = covdat, model = 1, lr.random = ~1 |  #>     group) #>  #>  #> -------------- #> RANDOM EFFECT COVARIANCE(S): #> Correlations on upper diagonal #>  #> $Theta #>       F1 #> F1 0.969 #>  #>  #> -------------- #> RANDOM EFFECT COVARIANCE(S): #> Correlations on upper diagonal #>  #> $group #>           COV_group #> COV_group     0.284 #>   effects <- randef(mod2, ndraws = 2000) head(effects$Theta) #>              F1 #> [1,]  0.6040605 #> [2,]  0.1432009 #> [3,] -0.6731124 #> [4,] -0.6769949 #> [5,]  0.1430579 #> [6,]  1.0386274 head(effects$group) #>              group #> group1  0.06658787 #> group2 -0.09446543 #> group3 -0.41044888 #> group4 -0.32185126 #> group5  0.07960173 #> group6 -0.28382568  # }"},{"path":"https://philchalmers.github.io/mirt/reference/read.mirt.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate mirt parameters into suitable structure for plink package — read.mirt","title":"Translate mirt parameters into suitable structure for plink package — read.mirt","text":"function exports item parameters mirt package plink package.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/read.mirt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate mirt parameters into suitable structure for plink package — read.mirt","text":"","code":"read.mirt(x, as.irt.pars = TRUE, ...)"},{"path":"https://philchalmers.github.io/mirt/reference/read.mirt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate mirt parameters into suitable structure for plink package — read.mirt","text":"x single object (list objects) returned mirt, bfactor, single object returned multipleGroup .irt.pars TRUE, parameters output irt.pars object ... additional arguments passed coef()","code":""},{"path":"https://philchalmers.github.io/mirt/reference/read.mirt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Translate mirt parameters into suitable structure for plink package — read.mirt","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/read.mirt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate mirt parameters into suitable structure for plink package — read.mirt","text":"","code":"# \\donttest{  ## unidimensional library(plink)  data <- expand.table(LSAT7) (mod1 <- mirt(data, 1)) #>  #>  #> Call: #> mirt(data = data, model = 1) #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 1e-04 tolerance after 28 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Log-likelihood = -2658.805 #> Estimated parameters: 10  #> AIC = 5337.61 #> BIC = 5386.688; SABIC = 5354.927 #> G2 (21) = 31.7, p = 0.0628 #> RMSEA = 0.023, CFI = NaN, TLI = NaN plinkpars <- read.mirt(mod1) plot(plinkpars)  plot(mod1, type = 'trace')   # graded mod2 <- mirt(Science, 1) #>  plinkpars <- read.mirt(mod2) plot(plinkpars)  plot(mod2, type = 'trace')   # gpcm mod3 <- mirt(Science, 1, itemtype = 'gpcm') #>  plinkpars <- read.mirt(mod3) plot(plinkpars)  plot(mod3, type = 'trace')   # nominal mod4 <- mirt(Science, 1, itemtype = 'nominal') #>  plinkpars <- read.mirt(mod4) plot(plinkpars)  plot(mod4, type = 'trace')   ## multidimensional  data <- expand.table(LSAT7) (mod1 <- mirt(data, 2)) #>  #>  #> Call: #> mirt(data = data, model = 2) #>  #> Full-information item factor analysis with 2 factor(s). #> Converged within 1e-04 tolerance after 436 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 31 #> Latent density type: Gaussian  #>  #> Log-likelihood = -2653.52 #> Estimated parameters: 14  #> AIC = 5335.039 #> BIC = 5403.748; SABIC = 5359.283 #> G2 (17) = 21.13, p = 0.2205 #> RMSEA = 0.016, CFI = NaN, TLI = NaN plinkpars <- read.mirt(mod1) plinkpars #> An object of class \"irt.pars\" #> Slot \"pars\": #>              a1         a2             #> [1,] -2.0071991  0.8703411 2.6479286 0 #> [2,] -0.8488431 -0.5221152 0.7876390 0 #> [3,] -2.1529666 -1.8364974 2.4829603 0 #> [4,] -0.7559009 -0.0280359 0.4847286 0 #> [5,] -0.7572746  0.0000000 1.8640966 0 #>  #> Slot \"cat\": #> [1] 2 2 2 2 2 #>  #> Slot \"poly.mod\": #> An object of class \"poly.mod\" #> Slot \"model\": #> [1] \"drm\" #>  #> Slot \"items\": #> $drm #> [1] 1 2 3 4 5 #>  #>  #>  #> Slot \"common\": #> NULL #>  #> Slot \"location\": #> [1] FALSE #>  #> Slot \"groups\": #> [1] 1 #>  #> Slot \"dimensions\": #> [1] 2 #>  plot(plinkpars)  plot(mod1, type = 'trace')   cmod <- mirt.model('    F1 = 1,4,5    F2 = 2-4') model <- mirt(data, cmod) #>  plot(read.mirt(model))  itemplot(model, 1)   # graded mod2 <- mirt(Science, 2) #>  plinkpars <- read.mirt(mod2) plinkpars #> An object of class \"irt.pars\" #> Slot \"pars\": #>              a1         a2       b1       b2        b3 #> [1,] -1.3350281 0.09676376 5.210669 2.865549 -1.602826 #> [2,] -0.8789508 1.85253465 3.703802 1.153176 -2.904255 #> [3,] -1.4696076 1.16485648 4.663467 1.956626 -1.735796 #> [4,] -1.7220434 0.00000000 3.988789 1.195247 -2.043998 #>  #> Slot \"cat\": #> [1] 4 4 4 4 #>  #> Slot \"poly.mod\": #> An object of class \"poly.mod\" #> Slot \"model\": #> [1] \"grm\" #>  #> Slot \"items\": #> $grm #> [1] 1 2 3 4 #>  #>  #>  #> Slot \"common\": #> NULL #>  #> Slot \"location\": #> [1] FALSE #>  #> Slot \"groups\": #> [1] 1 #>  #> Slot \"dimensions\": #> [1] 2 #>  plot(plinkpars)  plot(mod2, type = 'trace')   ### multiple group equating example set.seed(1234) dat <- expand.table(LSAT7) group <- sample(c('g1', 'g2'), nrow(dat), TRUE) dat1 <- dat[group == 'g1', ] dat2 <- dat[group == 'g2', ] mod1 <- mirt(dat1, 1) #>  mod2 <- mirt(dat2, 1) #>   # convert and combine pars plinkMG <- read.mirt(list(g1=mod1, g2=mod2))  # equivalently: # mod <- multipleGroup(dat, 1, group) # plinkMG <- read.mirt(mod)  combine <- matrix(1:5, 5, 2) comb <- combine.pars(plinkMG, combine, grp.names=unique(group)) out <- plink(comb, rescale=\"SL\") equate(out) #> Maximum iterations reached for true score: 0  #> $tse #>         theta g2       g1 #> 1 -160.732949  0 0.000000 #> 2   -3.233741  1 0.973481 #> 3   -1.910192  2 2.023409 #> 4   -0.999050  3 3.021848 #> 5    0.048359  4 3.973672 #> 6   57.411786  5 5.000000 #>  #> $ose #> $ose$scores #>   eap.theta.g2 eap.sd.g2 g2        g1 #> 1    -1.896444  0.698843  0 0.0000000 #> 2    -1.474472  0.697610  1 0.9893317 #> 3    -1.002953  0.716007  2 1.9956600 #> 4    -0.455590  0.747730  3 2.9912425 #> 5     0.123384  0.782773  4 3.9901784 #> 6     0.678747  0.812793  5 4.9949444 #>  #> $ose$dist #> $ose$dist$g2 #>      score       pop1       pop2        syn #> [1,]     0 0.03273187 0.03273187 0.03273187 #> [2,]     1 0.17343742 0.17343742 0.17343742 #> [3,]     2 0.48733074 0.48733074 0.48733074 #> [4,]     3 0.99873451 0.99873451 0.99873451 #> [5,]     4 1.61799716 1.61799716 1.61799716 #> [6,]     5 1.56457520 1.56457520 1.56457520 #>  #> $ose$dist$g1 #>      score      pop1      pop2       syn #> [1,]     0 0.0338755 0.0338755 0.0338755 #> [2,]     1 0.1748815 0.1748815 0.1748815 #> [3,]     2 0.4863770 0.4863770 0.4863770 #> [4,]     3 1.0132130 1.0132130 1.0132130 #> [5,]     4 1.6175460 1.6175460 1.6175460 #> [6,]     5 1.5489139 1.5489139 1.5489139 #>  #>  #>  equate(out, method = 'OSE') #> $scores #>   eap.theta.g2 eap.sd.g2 g2        g1 #> 1    -1.896444  0.698843  0 0.0000000 #> 2    -1.474472  0.697610  1 0.9893317 #> 3    -1.002953  0.716007  2 1.9956600 #> 4    -0.455590  0.747730  3 2.9912425 #> 5     0.123384  0.782773  4 3.9901784 #> 6     0.678747  0.812793  5 4.9949444 #>  #> $dist #> $dist$g2 #>      score       pop1       pop2        syn #> [1,]     0 0.03273187 0.03273187 0.03273187 #> [2,]     1 0.17343742 0.17343742 0.17343742 #> [3,]     2 0.48733074 0.48733074 0.48733074 #> [4,]     3 0.99873451 0.99873451 0.99873451 #> [5,]     4 1.61799716 1.61799716 1.61799716 #> [6,]     5 1.56457520 1.56457520 1.56457520 #>  #> $dist$g1 #>      score      pop1      pop2       syn #> [1,]     0 0.0338755 0.0338755 0.0338755 #> [2,]     1 0.1748815 0.1748815 0.1748815 #> [3,]     2 0.4863770 0.4863770 0.4863770 #> [4,]     3 1.0132130 1.0132130 1.0132130 #> [5,]     4 1.6175460 1.6175460 1.6175460 #> [6,]     5 1.5489139 1.5489139 1.5489139 #>  #>   # }"},{"path":"https://philchalmers.github.io/mirt/reference/remap.distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Remap item categories to have integer distances of 1 — remap.distance","title":"Remap item categories to have integer distances of 1 — remap.distance","text":"mirt package's estimation setup requires item responses spaces equal 1 (e.g., Likert scale scored 1 5). event categories missing categories must re-coded. function automatically called package estimation functions (e.g., mirt), however convince function extracted users better understand remapping consequences.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/remap.distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remap item categories to have integer distances of 1 — remap.distance","text":"","code":"remap.distance(data, message = TRUE)"},{"path":"https://philchalmers.github.io/mirt/reference/remap.distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remap item categories to have integer distances of 1 — remap.distance","text":"data response data remap data.frame matrix message logical; print message information pertaining items remapped?","code":""},{"path":"https://philchalmers.github.io/mirt/reference/remap.distance.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Remap item categories to have integer distances of 1 — remap.distance","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/remap.distance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Remap item categories to have integer distances of 1 — remap.distance","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/remap.distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remap item categories to have integer distances of 1 — remap.distance","text":"","code":"# category 2 for item 1 missing dat <- Science dat[,1] <- ifelse(Science[,1] == 2, 1, Science[,1]) apply(dat, 2, table) #> $Comfort #>  #>   1   3   4  #>  37 266  89  #>  #> $Work #>  #>   1   2   3   4  #>  33  98 206  55  #>  #> $Future #>  #>   1   2   3   4  #>  14  72 210  96  #>  #> $Benefit #>  #>   1   2   3   4  #>  21 100 193  78  #>   # mirt() automatically remaps categories mod <- mirt(dat, 1) #> \"Comfort\" re-mapped to ensure all categories have a distance of 1 #>  coef(mod, simplify=TRUE) #> $items #>            a1    d1     d2     d3 #> Comfort 0.995 2.626 -1.447     NA #> Work    1.231 2.928  0.903 -2.271 #> Future  2.338 5.293  2.245 -1.989 #> Benefit 1.079 3.333  0.988 -1.681 #>  #> $means #> F1  #>  0  #>  #> $cov #>    F1 #> F1  1 #>   # this is the transformed data used by mirt() remap_dat <- remap.distance(dat) #> \"Comfort\" re-mapped to ensure all categories have a distance of 1 apply(remap_dat, 2, table) #> $Comfort #>  #>   1   2   3  #>  37 266  89  #>  #> $Work #>  #>   1   2   3   4  #>  33  98 206  55  #>  #> $Future #>  #>   1   2   3   4  #>  14  72 210  96  #>  #> $Benefit #>  #>   1   2   3   4  #>  21 100 193  78  #>"},{"path":"https://philchalmers.github.io/mirt/reference/residuals-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute model residuals — residuals-method","title":"Compute model residuals — residuals-method","text":"Return model implied residuals linear dependencies items person level. latent trait density approximated (e.g., Davidian curves, Empirical histograms, etc) passing use_dentype_estimate = TRUE use internally saved quadrature density components (applicable).","code":""},{"path":"https://philchalmers.github.io/mirt/reference/residuals-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute model residuals — residuals-method","text":"","code":"# S4 method for class 'SingleGroupClass' residuals(   object,   type = \"LD\",   p.adjust = \"none\",   df.p = FALSE,   approx.z = FALSE,   full.scores = FALSE,   QMC = FALSE,   printvalue = NULL,   tables = FALSE,   verbose = TRUE,   Theta = NULL,   suppress = NA,   theta_lim = c(-6, 6),   quadpts = NULL,   fold = TRUE,   upper = TRUE,   technical = list(),   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/residuals-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute model residuals — residuals-method","text":"object object class SingleGroupClass MultipleGroupClass. Bifactor models automatically detected utilized better accuracy type type residuals displayed. Can either 'LD' 'LDG2' local dependence matrix based X2 G2 statistics (Chen & Thissen, 1997), 'Q3' statistic proposed Yen (1984), 'JSI' jack-knife statistic proposed Edwards et al. (2018), 'exp' expected values frequencies every response pattern, 'expfull' expected values every theoretically observable response pattern. 'LD' 'LDG2' types, upper diagonal elements represent standardized residuals form signed Cramers V coefficients p.adjust method use adjusting p-values (see p.adjust available options). Default 'none' df.p logical; print degrees freedom p-values? approx.z logical; transform \\(\\chi^2(df)\\) information LD tests approximate z-ratios instead using transformation \\(z=\\sqrt{2 * \\chi^2} - \\sqrt{2 * df - 1}\\)? full.scores logical; compute relevant statistics subject original data? QMC logical; use quasi-Monte Carlo integration? quadpts omitted default number nodes 5000 printvalue numeric value specified using res='exp' option. prints patterns standardized residuals greater abs(printvalue). default (NULL) prints response patterns tables logical; LD type, return observed, expected, standardized residual tables item combination? verbose logical; allow information printed console? Theta matrix factor scores used statistics require empirical estimates (.e., Q3). supplied, arguments typically passed fscores() ignored values used instead suppress numeric value indicating parameter local dependency combinations flag high (LD, LDG2, Q3 standardize correlations used; JSI, z-ratios used). Absolute values standardized estimates greater value returned, values less value set missing theta_lim range integration grid quadpts number quadrature nodes use. default extracted model (available) generated automatically available fold logical; apply sum 'folding' described Edwards et al. (2018) JSI statistic? upper logical; portion matrix (upper versus lower triangle) suppress argument applied ? technical list technical arguments models re-estimated (see mirt details) ... additional arguments passed fscores()","code":""},{"path":"https://philchalmers.github.io/mirt/reference/residuals-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute model residuals — residuals-method","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06 Chen, W. H. & Thissen, D. (1997). Local dependence indices item pairs using item response theory. Journal Educational Behavioral Statistics, 22, 265-289. Edwards, M. C., Houts, C. R. & Cai, L. (2018). Diagnostic Procedure Detect Departures Local Independence Item Response Theory Models. Psychological Methods, 23, 138-149. Yen, W. (1984). Effects local item dependence fit equating performance three parameter logistic model. Applied Psychological Measurement, 8, 125-145.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/residuals-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute model residuals — residuals-method","text":"","code":"# \\donttest{  x <- mirt(Science, 1) #>  residuals(x) #> LD matrix (lower triangle) and standardized residual correlations (upper triangle) #>  #> Upper triangle summary: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  -0.147  -0.136  -0.111  -0.045   0.041   0.152  #>  #>         Comfort   Work Future Benefit #> Comfort         -0.147 -0.101   0.152 #> Work     25.512         0.088  -0.141 #> Future   12.002  9.208         -0.122 #> Benefit  27.321 23.235 17.461         residuals(x, tables = TRUE) #> $Comfort_Work #> $Comfort_Work$Obs #>     #>       1   2   3   4 #>   1   2   0   1   2 #>   2   2  11  15   4 #>   3  24  71 148  23 #>   4   5  16  42  26 #>  #> $Comfort_Work$Exp #>           [,1]      [,2]       [,3]      [,4] #> [1,]  1.046123  1.787854   1.922925  0.262908 #> [2,]  5.722535 11.386923  13.625623  1.972172 #> [3,] 23.322258 69.348472 140.029013 31.718143 #> [4,]  3.487224 14.109434  50.763258 21.495135 #>  #> $Comfort_Work$std_res #>     #>              1          2          3          4 #>   1  0.9326115 -1.3371066 -0.6655567  3.3878247 #>   2 -1.5561252 -0.1146625  0.3723298  1.4439717 #>   3  0.1403392  0.1983204  0.6736015 -1.5479971 #>   4  0.8100928  0.5033119 -1.2299596  0.9716541 #>  #>  #> $Comfort_Future #> $Comfort_Future$Obs #>     #>       1   2   3   4 #>   1   2   2   1   0 #>   2   3  11  11   7 #>   3   8  51 155  52 #>   4   1   8  43  37 #>  #> $Comfort_Future$Exp #>           [,1]      [,2]       [,3]       [,4] #> [1,] 0.7680477  1.812936   2.091572  0.3472546 #> [2,] 3.6749826 11.241583  15.084907  2.7057791 #> [3,] 9.1976778 52.384929 148.579175 54.2561060 #> [4,] 0.7527106  6.828614  42.541147 39.7325783 #>  #> $Comfort_Future$std_res #>     #>               1           2           3           4 #>   1  1.40572316  0.13893088 -0.75477217 -0.58928310 #>   2 -0.35209910 -0.07205318 -1.05174604  2.61058722 #>   3 -0.39491253 -0.19134814  0.52675890 -0.30629167 #>   4  0.28503062  0.44826372  0.07035076 -0.43351011 #>  #>  #> $Comfort_Benefit #> $Comfort_Benefit$Obs #>     #>       1   2   3   4 #>   1   4   0   1   0 #>   2   5  10  13   4 #>   3  11  81 133  41 #>   4   1   9  46  33 #>  #> $Comfort_Benefit$Exp #>            [,1]     [,2]       [,3]       [,4] #> [1,]  0.6710457  1.95217   1.959779  0.4368153 #> [2,]  3.6241191 12.16983  13.682082  3.2312240 #> [3,] 14.8454892 71.28246 131.343241 46.9466978 #> [4,]  2.3173267 14.55596  44.803655 28.1781067 #>  #> $Comfort_Benefit$std_res #>     #>              1          2          3          4 #>   1  4.0637950 -1.3972006 -0.6855953 -0.6609200 #>   2  0.7227359 -0.6219892 -0.1844000  0.4276774 #>   3 -0.9980547  1.1509727  0.1445624 -0.8679073 #>   4 -0.8653661 -1.4562597  0.1787310  0.9083677 #>  #>  #> $Work_Future #> $Work_Future$Obs #>     #>       1   2   3   4 #>   1   7  10  14   2 #>   2   3  28  57  10 #>   3   3  31 122  50 #>   4   1   3  17  34 #>  #> $Work_Future$Exp #>           [,1]      [,2]      [,3]      [,4] #> [1,] 4.6004355 12.483087  14.34426  2.150355 #> [2,] 5.8020446 27.786418  52.26417 10.780046 #> [3,] 3.6903551 28.936581 118.01439 55.699488 #> [4,] 0.3005835  3.061977  23.67397 28.411829 #>  #> $Work_Future$std_res #>     #>               1           2           3           4 #>   1  1.11874979 -0.70279865 -0.09089724 -0.10253275 #>   2 -1.16328067  0.04051800  0.65507895 -0.23757996 #>   3 -0.35936723  0.38358699  0.36688237 -0.76367799 #>   4  1.27571400 -0.03541829 -1.37166696  1.04838334 #>  #>  #> $Work_Benefit #> $Work_Benefit$Obs #>     #>       1   2   3   4 #>   1   4   8  12   9 #>   2   6  34  47  11 #>   3   8  52 111  35 #>   4   3   6  23  23 #>  #> $Work_Benefit$Exp #>          [,1]      [,2]      [,3]      [,4] #> [1,] 4.233251 13.170723  13.31610  2.858063 #> [2,] 7.660483 32.196149  44.96112 11.814929 #> [3,] 8.417022 46.931424 106.55195 44.440425 #> [4,] 1.147224  7.662122  26.95958 19.679427 #>  #> $Work_Benefit$std_res #>     #>              1          2          3          4 #>   1 -0.1133671 -1.4247756 -0.3606627  3.6330344 #>   2 -0.5999380  0.3179060  0.3040694 -0.2370851 #>   3 -0.1437407  0.7398678  0.4309125 -1.4161278 #>   4  1.7298113 -0.6004660 -0.7625934  0.7485258 #>  #>  #> $Future_Benefit #> $Future_Benefit$Obs #>     #>       1   2   3   4 #>   1   5   1   6   2 #>   2   5  32  30   5 #>   3   8  53 118  31 #>   4   3  14  39  40 #>  #> $Future_Benefit$Exp #>          [,1]      [,2]       [,3]       [,4] #> [1,] 2.960508  6.706374   4.143629  0.5829072 #> [2,] 7.760422 29.142832  29.887302  5.4775063 #> [3,] 9.227453 52.779344 109.948223 36.3417805 #> [4,] 1.509597 11.331867  47.809604 36.3906499 #>  #> $Future_Benefit$std_res #>     #>               1           2           3           4 #>   1  1.18532911 -2.20351681  0.91195681  1.85608815 #>   2 -0.99090687  0.52926095  0.02061456 -0.20402700 #>   3 -0.40407692  0.03037266  0.76788760 -0.88610042 #>   4  1.21303423  0.79260501 -1.27408623  0.59832081 #>  #>  residuals(x, type = 'exp') #>    Comfort Work Future Benefit freq    exp std.res #> 1        1    1      1       1    2  0.124   5.324 #> 2        1    3      2       1    1  0.067   3.605 #> 3        1    4      2       3    1  0.019   7.046 #> 4        1    4      3       1    1  0.006  12.642 #> 5        2    1      1       1    1  0.460   0.796 #> 6        2    1      2       4    1  0.095   2.930 #> 7        2    2      1       1    1  0.351   1.095 #> 8        2    2      2       2    4  2.147   1.264 #> 9        2    2      2       3    2  1.616   0.302 #> 10       2    2      3       1    1  0.377   1.015 #> 11       2    2      3       2    1  1.716  -0.547 #> 12       2    2      3       3    1  2.228  -0.823 #> 13       2    2      4       3    1  0.251   1.497 #> 14       2    3      1       3    1  0.213   1.707 #> 15       2    3      2       2    2  1.545   0.366 #> 16       2    3      2       3    1  1.489  -0.401 #> 17       2    3      3       2    3  2.248   0.502 #> 18       2    3      3       3    3  3.910  -0.460 #> 19       2    3      3       4    2  1.035   0.948 #> 20       2    3      4       1    1  0.041   4.763 #> 21       2    3      4       3    2  0.866   1.218 #> 22       2    4      2       1    1  0.029   5.690 #> 23       2    4      4       3    2  0.259   3.418 #> 24       2    4      4       4    1  0.184   1.902 #> 25       3    1      1       1    1  0.644   0.444 #> 26       3    1      1       3    2  0.638   1.705 #> 27       3    1      2       2    2  3.923  -0.971 #> 28       3    1      2       3    4  3.077   0.526 #> 29       3    1      3       2    5  3.567   0.759 #> 30       3    1      3       3    5  5.097  -0.043 #> 31       3    1      3       4    3  1.160   1.709 #> 32       3    1      4       3    1  0.764   0.269 #> 33       3    1      4       4    1  0.320   1.203 #> 34       3    2      1       2    1  1.781  -0.585 #> 35       3    2      1       4    1  0.154   2.157 #> 36       3    2      2       1    1  2.250  -0.833 #> 37       3    2      2       2   10  8.471   0.525 #> 38       3    2      2       3    7  8.067  -0.376 #> 39       3    2      3       1    1  2.221  -0.819 #> 40       3    2      3       2   16 11.743   1.242 #> 41       3    2      3       3   22 19.584   0.546 #> 42       3    2      3       4    5  4.950   0.023 #> 43       3    2      4       1    1  0.193   1.835 #> 44       3    2      4       2    1  1.293  -0.258 #> 45       3    2      4       3    3  3.778  -0.400 #> 46       3    2      4       4    2  1.716   0.217 #> 47       3    3      1       3    2  0.971   1.044 #> 48       3    3      2       1    1  1.764  -0.575 #> 49       3    3      2       2   13  7.852   1.837 #> 50       3    3      2       3   10  9.780   0.070 #> 51       3    3      2       4    2  1.975   0.018 #> 52       3    3      3       1    5  3.363   0.893 #> 53       3    3      3       2   23 20.447   0.565 #> 54       3    3      3       3   52 45.243   1.005 #> 55       3    3      3       4    8 14.757  -1.759 #> 56       3    3      4       2    7  4.389   1.246 #> 57       3    3      4       3   13 16.979  -0.966 #> 58       3    3      4       4   12 10.323   0.522 #> 59       3    4      1       3    1  0.090   3.030 #> 60       3    4      2       3    1  1.098  -0.093 #> 61       3    4      3       2    2  3.043  -0.598 #> 62       3    4      3       3    4  8.562  -1.559 #> 63       3    4      3       4    4  3.637   0.191 #> 64       3    4      4       1    1  0.160   2.100 #> 65       3    4      4       2    1  1.287  -0.253 #> 66       3    4      4       3    6  6.466  -0.183 #> 67       3    4      4       4    3  5.659  -1.118 #> 68       4    1      1       4    1  0.006  12.587 #> 69       4    1      2       2    1  0.325   1.183 #> 70       4    1      2       4    2  0.057   8.158 #> 71       4    1      3       4    1  0.300   1.278 #> 72       4    2      2       1    1  0.193   1.836 #> 73       4    2      2       3    3  1.017   1.967 #> 74       4    2      3       3    8  4.462   1.675 #> 75       4    2      3       4    2  1.448   0.459 #> 76       4    2      4       2    1  0.433   0.862 #> 77       4    2      4       4    1  1.080  -0.077 #> 78       4    3      2       3    1  1.665  -0.516 #> 79       4    3      3       2    2  4.874  -1.302 #> 80       4    3      3       3   21 14.002   1.870 #> 81       4    3      3       4    3  5.965  -1.214 #> 82       4    3      4       2    2  2.097  -0.067 #> 83       4    3      4       3    5 10.419  -1.679 #> 84       4    3      4       4    8  8.830  -0.279 #> 85       4    4      3       2    1  0.966   0.034 #> 86       4    4      3       3    2  3.571  -0.831 #> 87       4    4      3       4    3  2.063   0.652 #> 88       4    4      4       2    2  0.906   1.149 #> 89       4    4      4       3    6  5.780   0.092 #> 90       4    4      4       4   12  7.470   1.657 residuals(x, suppress = .15) #> LD matrix (lower triangle) and standardized residual correlations (upper triangle) #>  #> Upper triangle summary: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  -0.147  -0.136  -0.111  -0.045   0.041   0.152  #>  #>         Comfort Work Future Benefit #> Comfort                       0.152 #> Work                                #> Future                              #> Benefit  27.321                     residuals(x, df.p = TRUE) #> Degrees of freedom (lower triangle) and p-values: #>  #>         Comfort  Work Future Benefit #> Comfort         0.002  0.213   0.001 #> Work          9        0.418   0.006 #> Future        9 9.000          0.042 #> Benefit       9 9.000  9.000         #>  #> LD matrix (lower triangle) and standardized residual correlations (upper triangle) #>  #> Upper triangle summary: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  -0.147  -0.136  -0.111  -0.045   0.041   0.152  #>  #>         Comfort   Work Future Benefit #> Comfort         -0.147 -0.101   0.152 #> Work     25.512         0.088  -0.141 #> Future   12.002  9.208         -0.122 #> Benefit  27.321 23.235 17.461         residuals(x, df.p = TRUE, p.adjust = 'fdr') # apply FWE control #> Degrees of freedom (lower triangle) and p-values: #>  #>         Comfort  Work Future Benefit #> Comfort         0.007  0.256   0.007 #> Work          9        0.418   0.011 #> Future        9 9.000          0.063 #> Benefit       9 9.000  9.000         #>  #> LD matrix (lower triangle) and standardized residual correlations (upper triangle) #>  #> Upper triangle summary: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  -0.147  -0.136  -0.111  -0.045   0.041   0.152  #>  #>         Comfort   Work Future Benefit #> Comfort         -0.147 -0.101   0.152 #> Work     25.512         0.088  -0.141 #> Future   12.002  9.208         -0.122 #> Benefit  27.321 23.235 17.461          # Pearson's X2 estimate for goodness-of-fit full_table <- residuals(x, type = 'expfull') head(full_table) #>   Comfort Work Future Benefit freq   exp    res #> 1       1    1      1       1    2 0.124  5.324 #> 2       1    1      1       2    0 0.160 -0.400 #> 3       1    1      1       3    0 0.054 -0.233 #> 4       1    1      1       4    0 0.005 -0.073 #> 5       1    1      2       1    0 0.092 -0.303 #> 6       1    1      2       2    0 0.219 -0.468 X2 <- with(full_table, sum((freq - exp)^2 / exp)) df <- nrow(full_table) - extract.mirt(x, 'nest') - 1 p <- pchisq(X2, df = df, lower.tail=FALSE) data.frame(X2, df, p, row.names='Pearson-X2') #>                  X2  df            p #> Pearson-X2 689.3347 239 2.942933e-45  # above FOG test as a function PearsonX2 <- function(x){    full_table <- residuals(x, type = 'expfull')    X2 <- with(full_table, sum((freq - exp)^2 / exp))    df <- nrow(full_table) - extract.mirt(x, 'nest') - 1    p <- pchisq(X2, df = df, lower.tail=FALSE)    data.frame(X2, df, p, row.names='Pearson-X2') } PearsonX2(x) #>                  X2  df            p #> Pearson-X2 689.3347 239 2.942933e-45   # extract results manually out <- residuals(x, df.p = TRUE, verbose=FALSE) str(out) #> List of 2 #>  $ df.p: 'mirt_matrix' num [1:4, 1:4] NA 9 9 9 0.00245 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:4] \"Comfort\" \"Work\" \"Future\" \"Benefit\" #>   .. ..$ : chr [1:4] \"Comfort\" \"Work\" \"Future\" \"Benefit\" #>  $ LD  : 'mirt_matrix' num [1:4, 1:4] NA 25.512 12.002 27.321 -0.147 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:4] \"Comfort\" \"Work\" \"Future\" \"Benefit\" #>   .. ..$ : chr [1:4] \"Comfort\" \"Work\" \"Future\" \"Benefit\" out$df.p[1,2] #> [1] 0.002454207  # with and without supplied factor scores Theta <- fscores(x) residuals(x, type = 'Q3', Theta=Theta) #> Q3 summary statistics: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  -0.320  -0.249  -0.225  -0.190  -0.205   0.085  #>  #>         Comfort   Work Future Benefit #> Comfort   1.000 -0.203 -0.252   0.085 #> Work     -0.203  1.000 -0.208  -0.242 #> Future   -0.252 -0.208  1.000  -0.320 #> Benefit   0.085 -0.242 -0.320   1.000 residuals(x, type = 'Q3', method = 'ML') #> Q3 summary statistics: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  -0.514  -0.426  -0.357  -0.311  -0.270   0.053  #>  #>         Comfort   Work Future Benefit #> Comfort   1.000 -0.262 -0.419   0.053 #> Work     -0.262  1.000 -0.428  -0.295 #> Future   -0.419 -0.428  1.000  -0.514 #> Benefit   0.053 -0.295 -0.514   1.000  # Edwards et al. (2018) JSI statistic N <- 250 a <- rnorm(10, 1.7, 0.3) d <- rnorm(10) dat <- simdata(a, d, N=250, itemtype = '2PL')  mod <- mirt(dat, 1) #>  residuals(mod, type = 'JSI') #> JSI summary statistics: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  -0.751  -0.239  -0.057  -0.016   0.243   0.754  #>  #>         Item_1 Item_2 Item_3 Item_4 Item_5 Item_6 Item_7 Item_8 Item_9 Item_10 #> Item_1         -0.049 -0.222 -0.081 -0.751  0.108  0.355 -0.327 -0.018   0.703 #> Item_2  -0.049         0.245  0.754 -0.057  0.146 -0.531 -0.357 -0.339   0.370 #> Item_3  -0.222  0.245        -0.696  0.243 -0.059 -0.505  0.115  0.535  -0.027 #> Item_4  -0.081  0.754 -0.696         0.127  0.252 -0.088  0.318 -0.239  -0.249 #> Item_5  -0.751 -0.057  0.243  0.127         0.461 -0.156 -0.107  0.252  -0.249 #> Item_6   0.108  0.146 -0.059  0.252  0.461        -0.152 -0.356 -0.006  -0.310 #> Item_7   0.355 -0.531 -0.505 -0.088 -0.156 -0.152         0.234  0.188  -0.236 #> Item_8  -0.327 -0.357  0.115  0.318 -0.107 -0.356  0.234        -0.151   0.389 #> Item_9  -0.018 -0.339  0.535 -0.239  0.252 -0.006  0.188 -0.151         -0.215 #> Item_10  0.703  0.370 -0.027 -0.249 -0.249 -0.310 -0.236  0.389 -0.215         residuals(mod, type = 'JSI', fold=FALSE) # unfolded #> JSI summary statistics: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  -0.480  -0.121  -0.029  -0.008   0.107   0.419  #>  #>         Item_1 Item_2 Item_3 Item_4 Item_5 Item_6 Item_7 Item_8 Item_9 Item_10 #> Item_1         -0.058 -0.075 -0.038 -0.480  0.044  0.234 -0.168 -0.022   0.371 #> Item_2   0.009         0.166  0.419 -0.004  0.078 -0.250 -0.201 -0.196   0.197 #> Item_3  -0.148  0.079        -0.377  0.180 -0.054 -0.232  0.045  0.275  -0.017 #> Item_4  -0.043  0.335 -0.319         0.070  0.114 -0.035  0.152 -0.122  -0.115 #> Item_5  -0.272 -0.053  0.063  0.056         0.142 -0.089 -0.059  0.081  -0.093 #> Item_6   0.064  0.068 -0.005  0.139  0.319        -0.048 -0.195 -0.008  -0.175 #> Item_7   0.120 -0.281 -0.273 -0.052 -0.066 -0.104         0.109  0.099  -0.137 #> Item_8  -0.159 -0.155  0.071  0.166 -0.049 -0.161  0.125        -0.073   0.198 #> Item_9   0.004 -0.143  0.260 -0.117  0.171  0.003  0.089 -0.078         -0.098 #> Item_10  0.332  0.172 -0.010 -0.134 -0.155 -0.136 -0.099  0.191 -0.117          # LD between items 1-2 aLD <- numeric(10) aLD[1:2] <- rnorm(2, 2.55, 0.15) a2 <- cbind(a, aLD) dat <- simdata(a2, d, N=250, itemtype = '2PL')  mod <- mirt(dat, 1) #>   # JSI executed in parallel over multiple cores if(interactive()) mirtCluster() residuals(mod, type = 'JSI') #> JSI summary statistics: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  -1.142  -0.427  -0.071   0.032   0.437   2.777  #>  #>         Item_1 Item_2 Item_3 Item_4 Item_5 Item_6 Item_7 Item_8 Item_9 Item_10 #> Item_1          2.777 -0.427 -0.734 -0.783 -0.090 -0.312 -0.741 -0.860   0.740 #> Item_2   2.777        -0.121 -0.338 -0.624 -0.882 -0.071 -0.600 -0.698   0.418 #> Item_3  -0.427 -0.121         1.148  0.192 -1.142  0.589 -0.247  0.166   0.145 #> Item_4  -0.734 -0.338  1.148         0.517 -0.257 -0.010  0.038  0.496  -0.328 #> Item_5  -0.783 -0.624  0.192  0.517         0.576  0.281  0.092  0.482  -0.226 #> Item_6  -0.090 -0.882 -1.142 -0.257  0.576        -0.158  1.277  0.437   0.982 #> Item_7  -0.312 -0.071  0.589 -0.010  0.281 -0.158         0.398  0.118  -0.637 #> Item_8  -0.741 -0.600 -0.247  0.038  0.092  1.277  0.398         0.780  -0.274 #> Item_9  -0.860 -0.698  0.166  0.496  0.482  0.437  0.118  0.780         -0.672 #> Item_10  0.740  0.418  0.145 -0.328 -0.226  0.982 -0.637 -0.274 -0.672          # }"},{"path":"https://philchalmers.github.io/mirt/reference/reverse.score.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse score one or more items from a response matrix — reverse.score","title":"Reverse score one or more items from a response matrix — reverse.score","text":"Reverse score specific items given empirical range specific scoring range.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/reverse.score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse score one or more items from a response matrix — reverse.score","text":"","code":"reverse.score(data, which, range = NULL, append = \".RS\")"},{"path":"https://philchalmers.github.io/mirt/reference/reverse.score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse score one or more items from a response matrix — reverse.score","text":"data object class data.frame, matrix, table response patterns names items column integer location data rescored. missing columns data reverse scored range (optional) named list specify low high score ranges. Specified names must match names found data, element list contain two values. items specified omitted list empirical min/max information used instead append character vector indicating append item names rescored","code":""},{"path":"https://philchalmers.github.io/mirt/reference/reverse.score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse score one or more items from a response matrix — reverse.score","text":"returns original data object specified   items reverse scored replacing original scoring scheme","code":""},{"path":"https://philchalmers.github.io/mirt/reference/reverse.score.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Reverse score one or more items from a response matrix — reverse.score","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/reverse.score.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reverse score one or more items from a response matrix — reverse.score","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/reverse.score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverse score one or more items from a response matrix — reverse.score","text":"","code":"a <- rlnorm(20) a[c(1,5,10)] <- -a[c(1,5,10)] diffs <- t(apply(matrix(runif(20*4, .3, 1), 20), 1, cumsum)) diffs <- -(diffs - rowMeans(diffs)) d <- diffs + rnorm(20) dat <- simdata(a,d,itemtype='graded', N=300) head(dat) #>      Item_1 Item_2 Item_3 Item_4 Item_5 Item_6 Item_7 Item_8 Item_9 Item_10 #> [1,]      4      4      2      4      4      4      2      4      4       0 #> [2,]      4      4      1      2      4      0      4      0      4       0 #> [3,]      3      0      4      0      4      0      4      0      0       0 #> [4,]      0      4      3      4      4      4      4      4      4       0 #> [5,]      0      0      0      1      4      4      0      1      1       1 #> [6,]      1      0      0      0      3      1      3      0      0       0 #>      Item_11 Item_12 Item_13 Item_14 Item_15 Item_16 Item_17 Item_18 Item_19 #> [1,]       4       4       0       4       4       4       1       4       1 #> [2,]       4       0       2       4       4       2       0       1       4 #> [3,]       4       2       0       0       0       2       0       1       4 #> [4,]       4       4       3       4       4       4       4       4       4 #> [5,]       4       2       1       0       4       2       2       4       3 #> [6,]       0       4       3       3       1       1       0       1       2 #>      Item_20 #> [1,]       4 #> [2,]       4 #> [3,]       3 #> [4,]       4 #> [5,]       0 #> [6,]       4  # \\donttest{ # fitted model has negative slopes due to flipped scoring mod <- mirt(dat) #>  coef(mod, simplify=TRUE)$items #>                 a1         d1          d2          d3         d4 #> Item_1  -1.1171924  2.4296469  1.73288248  1.26067403  0.2297665 #> Item_2   7.7979262  0.6344815  0.10842378 -0.40343108 -0.5373447 #> Item_3   0.2629820  1.0227374  0.40406181  0.05877758 -0.7416570 #> Item_4   4.7612348  0.4181758  0.09659425 -0.39620617 -0.8081206 #> Item_5  -0.2508314  1.7270595  1.44413339  1.00569169  0.4374845 #> Item_6   0.2825226  0.6987403  0.33984035 -0.10978202 -0.5318410 #> Item_7   0.5483014  1.1687726  0.61066779 -0.17876210 -0.8428922 #> Item_8   0.2589735  0.1645560 -0.50937611 -0.97348674 -1.6301845 #> Item_9   4.7482498  0.4760300 -0.17069300 -1.25756806 -2.0364066 #> Item_10 -3.4544141 -0.9539374 -1.70812723 -1.99858134 -2.6710047 #> Item_11  4.5041025  1.3508597  0.82245138  0.38868246 -0.6469871 #> Item_12  0.6126098  2.0281560  1.23506017  0.35720032 -0.2322765 #> Item_13  0.9980961 -0.4148028 -1.06332972 -1.72305387 -2.4443652 #> Item_14  2.9404701  1.4499665  0.65492514  0.16151658 -0.1173663 #> Item_15  3.0592768  1.0422137  0.65828309  0.23004194 -0.8853085 #> Item_16  2.1588771  1.2437703  0.88064791 -0.61804921 -1.1362945 #> Item_17  0.9028578  1.2465837  0.38556807 -0.45153380 -0.9196150 #> Item_18  0.2863930  2.4301695  1.84214734  1.30810063  0.9140620 #> Item_19  1.3145920  1.6329817  0.90542889 -0.07961438 -0.6340161 #> Item_20  1.0298438  2.3208002  1.75183674  0.90002111  0.6407807 plot(mod, type = 'itemscore')  # }  # reverse the scoring for items 1, 5, and 10 only using empirical min/max revdat <- reverse.score(dat, c('Item_1', 'Item_5', 'Item_10')) head(revdat) #>      Item_1.RS Item_2 Item_3 Item_4 Item_5.RS Item_6 Item_7 Item_8 Item_9 #> [1,]         0      4      2      4         0      4      2      4      4 #> [2,]         0      4      1      2         0      0      4      0      4 #> [3,]         1      0      4      0         0      0      4      0      0 #> [4,]         4      4      3      4         0      4      4      4      4 #> [5,]         4      0      0      1         0      4      0      1      1 #> [6,]         3      0      0      0         1      1      3      0      0 #>      Item_10.RS Item_11 Item_12 Item_13 Item_14 Item_15 Item_16 Item_17 Item_18 #> [1,]          4       4       4       0       4       4       4       1       4 #> [2,]          4       4       0       2       4       4       2       0       1 #> [3,]          4       4       2       0       0       0       2       0       1 #> [4,]          4       4       4       3       4       4       4       4       4 #> [5,]          3       4       2       1       0       4       2       2       4 #> [6,]          4       0       4       3       3       1       1       0       1 #>      Item_19 Item_20 #> [1,]       1       4 #> [2,]       4       4 #> [3,]       4       3 #> [4,]       4       4 #> [5,]       3       0 #> [6,]       2       4  # compare apply(dat[,c(1,5,10)], 2, table) #>   Item_1 Item_5 Item_10 #> 0     35     46     179 #> 1     23     12      23 #> 2     21     23       8 #> 3     57     37      17 #> 4    164    182      73 apply(revdat[,c(1,5,10)], 2, table) #>   Item_1.RS Item_5.RS Item_10.RS #> 0       164       182         73 #> 1        57        37         17 #> 2        21        23          8 #> 3        23        12         23 #> 4        35        46        179  # \\donttest{ # slopes all positive now mod2 <- mirt(revdat) #>  coef(mod2, simplify=TRUE)$items #>                   a1         d1         d2          d3         d4 #> Item_1.RS  1.1182344 -0.2276345 -1.2585807 -1.73084542 -2.4277274 #> Item_2     7.8235698  0.6524445  0.1261525 -0.38602040 -0.5201021 #> Item_3     0.2632045  1.0232150  0.4045218  0.05926287 -0.7411866 #> Item_4     4.7761244  0.4286916  0.1068883 -0.38632467 -0.7986421 #> Item_5.RS  0.2510760 -0.4370332 -1.0052289 -1.44369998 -1.7266003 #> Item_6     0.2827955  0.6992590  0.3403556 -0.10926752 -0.5313230 #> Item_7     0.5487299  1.1697835  0.6116507 -0.17771403 -0.8418820 #> Item_8     0.2591667  0.1650238 -0.5089098 -0.97301720 -1.6297131 #> Item_9     4.7606067  0.4861014 -0.1609173 -1.24853436 -2.0280968 #> Item_10.RS 3.4634667  2.6802518  2.0073365  1.71669942  0.9620659 #> Item_11    4.5179204  1.3616041  0.8328228  0.39869560 -0.6378781 #> Item_12    0.6132529  2.0293027  1.2362469  0.35825699 -0.2310679 #> Item_13    0.9990765 -0.4129181 -1.0614558 -1.72125802 -2.4426937 #> Item_14    2.9461576  1.4563648  0.6611071  0.16754860 -0.1114038 #> Item_15    3.0649176  1.0485816  0.6646115  0.23628993 -0.8793653 #> Item_16    2.1617219  1.2479992  0.8848828 -0.61395520 -1.1322718 #> Item_17    0.9038909  1.2483193  0.3872151 -0.44980307 -0.9180791 #> Item_18    0.2866437  2.4306786  1.8426855  1.30858320  0.9146260 #> Item_19    1.3159613  1.6354544  0.9078839 -0.07718882 -0.6315840 #> Item_20    1.0310717  2.3228460  1.7538611  0.90199444  0.6427890 plot(mod2, type = 'itemscore')  # }  # use different empirical scoring information due to options not used   # 0 score not observed for item 1, though should have been rescored to a 4 dat[dat[,1] == 0, 1] <- 1 table(dat[,1]) #>  #>   1   2   3   4  #>  58  21  57 164   # 4 score not observed for item 5, though should have been rescored to a 0 dat[dat[,5] == 4, 5] <- 3 table(dat[,5]) #>  #>   0   1   2   3  #>  46  12  23 219   # specify theoretical scoring values in the range list revdat2 <- reverse.score(dat, c('Item_1', 'Item_5', 'Item_10'),                               range = list(Item_1 = c(0,4), Item_5 = c(0,4))) head(revdat2) #>      Item_1.RS Item_2 Item_3 Item_4 Item_5.RS Item_6 Item_7 Item_8 Item_9 #> [1,]         1      4      2      4         1      4      2      4      4 #> [2,]         1      4      1      2         1      0      4      0      4 #> [3,]         2      0      4      0         1      0      4      0      0 #> [4,]         4      4      3      4         1      4      4      4      4 #> [5,]         4      0      0      1         1      4      0      1      1 #> [6,]         4      0      0      0         1      1      3      0      0 #>      Item_10.RS Item_11 Item_12 Item_13 Item_14 Item_15 Item_16 Item_17 Item_18 #> [1,]          4       4       4       0       4       4       4       1       4 #> [2,]          4       4       0       2       4       4       2       0       1 #> [3,]          4       4       2       0       0       0       2       0       1 #> [4,]          4       4       4       3       4       4       4       4       4 #> [5,]          3       4       2       1       0       4       2       2       4 #> [6,]          4       0       4       3       3       1       1       0       1 #>      Item_19 Item_20 #> [1,]       1       4 #> [2,]       4       4 #> [3,]       4       3 #> [4,]       4       4 #> [5,]       3       0 #> [6,]       2       4 table(dat[,1]) #>  #>   1   2   3   4  #>  58  21  57 164  table(revdat2[,1]) #>  #>   1   2   3   4  #> 164  57  21  58   table(dat[,5]) #>  #>   0   1   2   3  #>  46  12  23 219  table(revdat2[,5]) #>  #>   1   2   3   4  #> 219  23  12  46"},{"path":"https://philchalmers.github.io/mirt/reference/secondOrderTest.html","id":null,"dir":"Reference","previous_headings":"","what":"Second-order test of convergence — secondOrderTest","title":"Second-order test of convergence — secondOrderTest","text":"Test whether terminated estimation criteria given model passes second order test checking positive definiteness resulting Hessian matrix. function, accepts symmetric Hessian/information matrix input, returns TRUE matrix positive definite FALSE otherwise.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/secondOrderTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Second-order test of convergence — secondOrderTest","text":"","code":"secondOrderTest(mat, ..., method = \"eigen\")"},{"path":"https://philchalmers.github.io/mirt/reference/secondOrderTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Second-order test of convergence — secondOrderTest","text":"mat symmetric matrix test positive definiteness (typically Hessian highest point model estimator, MLE MAP) ... arguments passed either eigen, chol, 'det' positiveness eigen values, positiveness leading minors via Cholesky decomposition, evaluation whether determinant greater 0 method method use test positive definiteness. Default 'eigen'","code":""},{"path":"https://philchalmers.github.io/mirt/reference/secondOrderTest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Second-order test of convergence — secondOrderTest","text":"matrix possible combinations","code":""},{"path":"https://philchalmers.github.io/mirt/reference/secondOrderTest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Second-order test of convergence — secondOrderTest","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/secondOrderTest.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Second-order test of convergence — secondOrderTest","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/secondOrderTest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Second-order test of convergence — secondOrderTest","text":"","code":"# \\donttest{  # PD matrix mod <- mirt(Science, 1, SE=TRUE) #>  #>  #> Calculating information matrix... info <- solve(vcov(mod))   ## observed information secondOrderTest(info) #> [1] TRUE secondOrderTest(info, method = 'chol') #> [1] TRUE secondOrderTest(info, method = 'det') #> [1] TRUE  # non-PD matrix mat <- matrix(c(1,0,0,0,1,1,0,1,1), ncol=3) mat #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    1 #> [3,]    0    1    1 secondOrderTest(mat) #> [1] FALSE secondOrderTest(mat, method = 'chol') #> [1] FALSE secondOrderTest(mat, method = 'det') #> [1] FALSE  # }"},{"path":"https://philchalmers.github.io/mirt/reference/show-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show model object — show-method","title":"Show model object — show-method","text":"Print model object summaries console.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/show-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show model object — show-method","text":"","code":"# S4 method for class 'SingleGroupClass' show(object)"},{"path":"https://philchalmers.github.io/mirt/reference/show-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show model object — show-method","text":"object object class SingleGroupClass, MultipleGroupClass, MixedClass","code":""},{"path":"https://philchalmers.github.io/mirt/reference/show-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Show model object — show-method","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/show-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show model object — show-method","text":"","code":"# \\donttest{ x <- mirt(Science, 1) #>  show(x) #>  #> Call: #> mirt(data = Science, model = 1) #>  #> Full-information item factor analysis with 1 factor(s). #> Converged within 1e-04 tolerance after 36 EM iterations. #> mirt version: 1.45.2  #> M-step optimizer: BFGS  #> EM acceleration: Ramsay  #> Number of rectangular quadrature: 61 #> Latent density type: Gaussian  #>  #> Log-likelihood = -1608.87 #> Estimated parameters: 16  #> AIC = 3249.739 #> BIC = 3313.279; SABIC = 3262.512 #> G2 (239) = 213.56, p = 0.8804 #> RMSEA = 0, CFI = NaN, TLI = NaN # }"},{"path":"https://philchalmers.github.io/mirt/reference/simdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate response patterns — simdata","title":"Simulate response patterns — simdata","text":"Simulates response patterns compensatory noncompensatory MIRT models multivariate normally distributed factor (\\(\\theta\\)) scores, user input matrix \\(\\theta\\)'s.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/simdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate response patterns — simdata","text":"","code":"simdata(   a,   d,   N,   itemtype,   sigma = NULL,   mu = NULL,   guess = 0,   upper = 1,   rho = NULL,   nominal = NULL,   t = NULL,   Theta = NULL,   gpcm_mats = list(),   returnList = FALSE,   model = NULL,   equal.K = TRUE,   which.items = NULL,   mins = 0,   lca_cats = NULL,   prob.list = NULL )"},{"path":"https://philchalmers.github.io/mirt/reference/simdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate response patterns — simdata","text":"matrix/vector slope parameters. slopes constrained zero use NA simply set equal 0 d matrix/vector intercepts. matrix many columns item largest number categories, filled empty locations NA. vector used test assumed consist dichotomous items (one intercept per item provided). itemtype = 'lca' intercepts used N sample size itemtype character vector length nrow() (1, item types   ) specifying type items simulate. Inputs can either   inputs found itemtype argument mirt   internal classes defined package. Typical itemtype inputs   passed mirt used converted   respective internal classes automatically. internal class object specified instead, inputs can   'dich', 'graded', 'gpcm', 'sequential', 'nominal', 'nestlogit', 'partcomp', 'gumm',   'lca', models Luo (2001) family (see mirt),   dichotomous, graded, generalized partial credit, sequential,   nominal, nested logit, partially compensatory,   generalized graded unfolding model, latent class analysis model, ordered unfolding models.   Note gpcm, nominal, nested logit models   many parameters desired categories, however parametrized meaningful   interpretation first category intercept   equal 0 models (second column 'nestlogit', since first column   correct item traceline). nested logit models 'correct' category always lowest   category (.e., == 1). may helpful use mod2values data-sets   already estimated understand itemtypes intimately sigma covariance matrix underlying distribution. Default identity matrix. Used Theta supplied mu mean vector underlying distribution. Default vector zeros. Used Theta supplied guess vector guessing parameters item; applicable dichotomous items. Must either scalar value affect dichotomous items, vector many values simulated items upper guess, upper bound parameters rho matrix rho values used Lui (2001) family ordered unfolding models (see mirt) control latitude acceptance. values must positive nominal matrix specific item category slopes nominal models. dimensions intercept specification one less column, NA locations applicable. Note estimation first slope constrained 0 last constrained number categories minus 1, best set values first last categories well t matrix t-values 'ggum' itemtype, row corresponds given item. Also determines number categories, NA can used non-applicable categories Theta user specified matrix underlying ability parameters, nrow(Theta) == N ncol(Theta) == ncol(). supplied N input required gpcm_mats list matrices specifying scoring scheme generalized partial credit models (see mirt details) returnList logical; return list containing data, item objects defined mirt containing population parameters item structure, latent trait matrix Theta? Default FALSE model single group object, typically returned functions mirt bfactor. Supplying render parameter elements (excluding Theta, N, mu, sigma inputs) redundant (unless explicitly provided). input can therefore used create parametric bootstrap data whereby plausible data implied estimated model can generated evaluated equal.K logical; model input supplied, generated data contain number categories original data indicated extract.mirt(model, 'K')? Default TRUE, redrawn data condition satisfied .items integer vector used indicate items simulate model input included. Default simulates items mins integer vector (single value used item) indicating lowest category . model supplied extracted slot(mod, 'Data')$mins, otherwise default 0 lca_cats vector indicating many categories lca item . supplied assumed 2 categories generated item prob.list optional list containing matrix/data.frames probabilities values category simulated. useful creating customized probability functions sampled ","code":""},{"path":"https://philchalmers.github.io/mirt/reference/simdata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate response patterns — simdata","text":"Returns data matrix simulated parameters, list containing data, item objects, Theta matrix.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/simdata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate response patterns — simdata","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06 Reckase, M. D. (2009). Multidimensional Item Response Theory. New York: Springer.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/simdata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate response patterns — simdata","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/simdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate response patterns — simdata","text":"","code":"### Parameters from Reckase (2009), p. 153  set.seed(1234)  a <- matrix(c(  .7471, .0250, .1428,  .4595, .0097, .0692,  .8613, .0067, .4040, 1.0141, .0080, .0470,  .5521, .0204, .1482, 1.3547, .0064, .5362, 1.3761, .0861, .4676,  .8525, .0383, .2574, 1.0113, .0055, .2024,  .9212, .0119, .3044,  .0026, .0119, .8036,  .0008, .1905,1.1945,  .0575, .0853, .7077,  .0182, .3307,2.1414,  .0256, .0478, .8551,  .0246, .1496, .9348,  .0262, .2872,1.3561,  .0038, .2229, .8993,  .0039, .4720, .7318,  .0068, .0949, .6416,  .3073, .9704, .0031,  .1819, .4980, .0020,  .4115,1.1136, .2008,  .1536,1.7251, .0345,  .1530, .6688, .0020,  .2890,1.2419, .0220,  .1341,1.4882, .0050,  .0524, .4754, .0012,  .2139, .4612, .0063,  .1761,1.1200, .0870),30,3,byrow=TRUE)*1.702  d <- matrix(c(.1826,-.1924,-.4656,-.4336,-.4428,-.5845,-1.0403,   .6431,.0122,.0912,.8082,-.1867,.4533,-1.8398,.4139,   -.3004,-.1824,.5125,1.1342,.0230,.6172,-.1955,-.3668,   -1.7590,-.2434,.4925,-.3410,.2896,.006,.0329),ncol=1)*1.702  mu <- c(-.4, -.7, .1) sigma <- matrix(c(1.21,.297,1.232,.297,.81,.252,1.232,.252,1.96),3,3)  dataset1 <- simdata(a, d, 2000, itemtype = '2PL') dataset2 <- simdata(a, d, 2000, itemtype = '2PL', mu = mu, sigma = sigma)  #mod <- mirt(dataset1, 3, method = 'MHRM') #coef(mod)  # \\donttest{  ### Unidimensional graded response model with 5 categories each  a <- matrix(rlnorm(20,.2,.3))  # for the graded model, ensure that there is enough space between the intercepts, # otherwise closer categories will not be selected often (minimum distance of 0.3 here) diffs <- t(apply(matrix(runif(20*4, .3, 1), 20), 1, cumsum)) diffs <- -(diffs - rowMeans(diffs)) d <- diffs + rnorm(20)  dat <- simdata(a, d, 500, itemtype = 'graded') # mod <- mirt(dat, 1)  ### An example of a mixed item, bifactor loadings pattern with correlated specific factors  a <- matrix(c( .8,.4,NA, .4,.4,NA, .7,.4,NA, .8,NA,.4, .4,NA,.4, .7,NA,.4),ncol=3,byrow=TRUE)  d <- matrix(c( -1.0,NA,NA,  1.5,NA,NA,  0.0,NA,NA, 0.0,-1.0,1.5,  #the first 0 here is the recommended constraint for nominal 0.0,1.0,-1, #the first 0 here is the recommended constraint for gpcm 2.0,0.0,NA),ncol=3,byrow=TRUE)  nominal <- matrix(NA, nrow(d), ncol(d)) # the first 0 and last (ncat - 1) = 2 values are the recommended constraints nominal[4, ] <- c(0,1.2,2)  sigma <- diag(3) sigma[2,3] <- sigma[3,2] <- .25 items <- c('2PL','2PL','2PL','nominal','gpcm','graded')  dataset <- simdata(a,d,2000,items,sigma=sigma,nominal=nominal)  #mod <- bfactor(dataset, c(1,1,1,2,2,2), itemtype=c(rep('2PL', 3), 'nominal', 'gpcm','graded')) #coef(mod)  #### Convert standardized factor loadings to slopes  F2a <- function(F, D=1.702){     h2 <- rowSums(F^2)     a <- (F / sqrt(1 - h2)) * D     a }  (F <- matrix(c(rep(.7, 5), rep(.5,5)))) #>       [,1] #>  [1,]  0.7 #>  [2,]  0.7 #>  [3,]  0.7 #>  [4,]  0.7 #>  [5,]  0.7 #>  [6,]  0.5 #>  [7,]  0.5 #>  [8,]  0.5 #>  [9,]  0.5 #> [10,]  0.5 (a <- F2a(F)) #>            [,1] #>  [1,] 1.6682937 #>  [2,] 1.6682937 #>  [3,] 1.6682937 #>  [4,] 1.6682937 #>  [5,] 1.6682937 #>  [6,] 0.9826502 #>  [7,] 0.9826502 #>  [8,] 0.9826502 #>  [9,] 0.9826502 #> [10,] 0.9826502 d <- rnorm(10)  dat <- simdata(a, d, 5000, itemtype = '2PL') mod <- mirt(dat, 1) #>  coef(mod, simplify=TRUE)$items #>                a1           d g u #> Item_1  1.5912124  0.09329250 0 1 #> Item_2  1.6611479  0.77704003 0 1 #> Item_3  1.6100289  0.04348744 0 1 #> Item_4  1.5251147 -0.39866322 0 1 #> Item_5  1.7126206 -0.69888431 0 1 #> Item_6  0.9352647 -1.71863199 0 1 #> Item_7  0.9211469  0.73522267 0 1 #> Item_8  0.9893392 -1.25501247 0 1 #> Item_9  0.9999014  0.41687594 0 1 #> Item_10 0.9416579 -1.00423353 0 1 summary(mod) #>            F1    h2 #> Item_1  0.683 0.466 #> Item_2  0.698 0.488 #> Item_3  0.687 0.472 #> Item_4  0.667 0.445 #> Item_5  0.709 0.503 #> Item_6  0.482 0.232 #> Item_7  0.476 0.227 #> Item_8  0.503 0.253 #> Item_9  0.507 0.257 #> Item_10 0.484 0.234 #>  #> SS loadings:  3.577  #> Proportion Var:  0.358  #>  #> Factor correlations:  #>  #>    F1 #> F1  1  mod2 <- mirt(dat, 'F1 = 1-10                    CONSTRAIN = (1-5, a1), (6-10, a1)') #>  summary(mod2) #>            F1    h2 #> Item_1  0.689 0.475 #> Item_2  0.689 0.475 #> Item_3  0.689 0.475 #> Item_4  0.689 0.475 #> Item_5  0.689 0.475 #> Item_6  0.491 0.241 #> Item_7  0.491 0.241 #> Item_8  0.491 0.241 #> Item_9  0.491 0.241 #> Item_10 0.491 0.241 #>  #> SS loadings:  3.576  #> Proportion Var:  0.358  #>  #> Factor correlations:  #>  #>    F1 #> F1  1 anova(mod2, mod) #>           AIC    SABIC       HQ      BIC    logLik    X2 df   p #> mod2 58058.43 58098.51 58085.85 58136.64 -29017.22              #> mod  58068.01 58134.80 58113.69 58198.35 -29014.01 6.425  8 0.6  #### Convert classical 3PL paramerization into slope-intercept form nitems <- 50 as <- rlnorm(nitems, .2, .2) bs <- rnorm(nitems, 0, 1) gs <- rbeta(nitems, 5, 17)  # convert first item (only intercepts differ in resulting transformation) traditional2mirt(c('a'=as[1], 'b'=bs[1], 'g'=gs[1], 'u'=1), cls='3PL') #>         a1          d          g          u  #>  1.2795115 -0.1107008  0.2525144  1.0000000   # convert all difficulties to intercepts ds <- numeric(nitems) for(i in 1:nitems)    ds[i] <- traditional2mirt(c('a'=as[i], 'b'=bs[i], 'g'=gs[i], 'u'=1),                              cls='3PL')[2]  dat <- simdata(as, ds, N=5000, guess=gs, itemtype = '3PL')  # estimate with beta prior for guessing parameters # mod <- mirt(dat, model=\"Theta = 1-50 #                         PRIOR = (1-50, g, expbeta, 5, 17)\", itemtype = '3PL') # coef(mod, simplify=TRUE, IRTpars=TRUE)$items # data.frame(as, bs, gs, us=1)   #### Unidimensional nonlinear factor pattern  theta <- rnorm(2000) Theta <- cbind(theta,theta^2)  a <- matrix(c( .8,.4, .4,.4, .7,.4, .8,NA, .4,NA, .7,NA),ncol=2,byrow=TRUE) d <- matrix(rnorm(6)) itemtype <- rep('2PL',6)  nonlindata <- simdata(a=a, d=d, itemtype=itemtype, Theta=Theta)  #model <- ' #F1 = 1-6 #(F1 * F1) = 1-3' #mod <- mirt(nonlindata, model) #coef(mod)  #### 2PLNRM model for item 4 (with 4 categories), 2PL otherwise  a <- matrix(rlnorm(4,0,.2))  # first column of item 4 is the intercept for the correct category of 2PL model, #    otherwise nominal model configuration d <- matrix(c( -1.0,NA,NA,NA,  1.5,NA,NA,NA,  0.0,NA,NA,NA,  1, 0.0,-0.5,0.5),ncol=4,byrow=TRUE)  nominal <- matrix(NA, nrow(d), ncol(d)) nominal[4, ] <- c(NA,0,.5,.6)  items <- c(rep('2PL',3),'nestlogit')  dataset <- simdata(a,d,2000,items,nominal=nominal)  #mod <- mirt(dataset, 1, itemtype = c('2PL', '2PL', '2PL', '2PLNRM'), key=c(NA,NA,NA,0)) #coef(mod) #itemplot(mod,4)  # return list of simulation parameters listobj <- simdata(a,d,2000,items,nominal=nominal, returnList=TRUE) str(listobj) #> List of 3 #>  $ itemobjects:List of 4 #>   ..$ :Formal class 'dich' [package \"mirt\"] with 23 slots #>   .. .. ..@ par          : num [1:4] 0.863 -1 -999 999 #>   .. .. .. ..- attr(*, \"na.action\")= 'omit' int [1:3] 3 4 5 #>   .. .. ..@ SEpar        : num(0)  #>   .. .. ..@ parnames     : chr(0)  #>   .. .. ..@ est          : logi(0)  #>   .. .. ..@ dps          :function ()   #>   .. .. ..@ dps2         :function ()   #>   .. .. ..@ constr       : logi(0)  #>   .. .. ..@ itemclass    : int(0)  #>   .. .. ..@ parnum       : num(0)  #>   .. .. ..@ nfact        : int 1 #>   .. .. ..@ nfixedeffects: num(0)  #>   .. .. ..@ fixed.design : num[0 , 0 ]  #>   .. .. ..@ dat          : num[0 , 0 ]  #>   .. .. ..@ ncat         : int 2 #>   .. .. ..@ gradient     : num(0)  #>   .. .. ..@ hessian      : num[0 , 0 ]  #>   .. .. ..@ itemtrace    : num[0 , 0 ]  #>   .. .. ..@ lbound       : num(0)  #>   .. .. ..@ ubound       : num(0)  #>   .. .. ..@ any.prior    : logi(0)  #>   .. .. ..@ prior.type   : int(0)  #>   .. .. ..@ prior_1      : num(0)  #>   .. .. ..@ prior_2      : num(0)  #>   ..$ :Formal class 'dich' [package \"mirt\"] with 23 slots #>   .. .. ..@ par          : num [1:4] 1.25 1.5 -999 999 #>   .. .. .. ..- attr(*, \"na.action\")= 'omit' int [1:3] 3 4 5 #>   .. .. ..@ SEpar        : num(0)  #>   .. .. ..@ parnames     : chr(0)  #>   .. .. ..@ est          : logi(0)  #>   .. .. ..@ dps          :function ()   #>   .. .. ..@ dps2         :function ()   #>   .. .. ..@ constr       : logi(0)  #>   .. .. ..@ itemclass    : int(0)  #>   .. .. ..@ parnum       : num(0)  #>   .. .. ..@ nfact        : int 1 #>   .. .. ..@ nfixedeffects: num(0)  #>   .. .. ..@ fixed.design : num[0 , 0 ]  #>   .. .. ..@ dat          : num[0 , 0 ]  #>   .. .. ..@ ncat         : int 2 #>   .. .. ..@ gradient     : num(0)  #>   .. .. ..@ hessian      : num[0 , 0 ]  #>   .. .. ..@ itemtrace    : num[0 , 0 ]  #>   .. .. ..@ lbound       : num(0)  #>   .. .. ..@ ubound       : num(0)  #>   .. .. ..@ any.prior    : logi(0)  #>   .. .. ..@ prior.type   : int(0)  #>   .. .. ..@ prior_1      : num(0)  #>   .. .. ..@ prior_2      : num(0)  #>   ..$ :Formal class 'dich' [package \"mirt\"] with 23 slots #>   .. .. ..@ par          : num [1:4] 1.02 0 -999 999 #>   .. .. .. ..- attr(*, \"na.action\")= 'omit' int [1:3] 3 4 5 #>   .. .. ..@ SEpar        : num(0)  #>   .. .. ..@ parnames     : chr(0)  #>   .. .. ..@ est          : logi(0)  #>   .. .. ..@ dps          :function ()   #>   .. .. ..@ dps2         :function ()   #>   .. .. ..@ constr       : logi(0)  #>   .. .. ..@ itemclass    : int(0)  #>   .. .. ..@ parnum       : num(0)  #>   .. .. ..@ nfact        : int 1 #>   .. .. ..@ nfixedeffects: num(0)  #>   .. .. ..@ fixed.design : num[0 , 0 ]  #>   .. .. ..@ dat          : num[0 , 0 ]  #>   .. .. ..@ ncat         : int 2 #>   .. .. ..@ gradient     : num(0)  #>   .. .. ..@ hessian      : num[0 , 0 ]  #>   .. .. ..@ itemtrace    : num[0 , 0 ]  #>   .. .. ..@ lbound       : num(0)  #>   .. .. ..@ ubound       : num(0)  #>   .. .. ..@ any.prior    : logi(0)  #>   .. .. ..@ prior.type   : int(0)  #>   .. .. ..@ prior_1      : num(0)  #>   .. .. ..@ prior_2      : num(0)  #>   ..$ :Formal class 'nestlogit' [package \"mirt\"] with 24 slots #>   .. .. ..@ correctcat   : int 1 #>   .. .. ..@ par          : num [1:10] 0.771 1 -999 999 0 ... #>   .. .. ..@ SEpar        : num(0)  #>   .. .. ..@ parnames     : chr(0)  #>   .. .. ..@ est          : logi(0)  #>   .. .. ..@ dps          :function ()   #>   .. .. ..@ dps2         :function ()   #>   .. .. ..@ constr       : logi(0)  #>   .. .. ..@ itemclass    : int(0)  #>   .. .. ..@ parnum       : num(0)  #>   .. .. ..@ nfact        : int 1 #>   .. .. ..@ nfixedeffects: num(0)  #>   .. .. ..@ fixed.design : num[0 , 0 ]  #>   .. .. ..@ dat          : num[0 , 0 ]  #>   .. .. ..@ ncat         : int 4 #>   .. .. ..@ gradient     : num(0)  #>   .. .. ..@ hessian      : num[0 , 0 ]  #>   .. .. ..@ itemtrace    : num[0 , 0 ]  #>   .. .. ..@ lbound       : num(0)  #>   .. .. ..@ ubound       : num(0)  #>   .. .. ..@ any.prior    : logi(0)  #>   .. .. ..@ prior.type   : int(0)  #>   .. .. ..@ prior_1      : num(0)  #>   .. .. ..@ prior_2      : num(0)  #>  $ data       : num [1:2000, 1:4] 1 1 1 0 0 1 0 1 0 1 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : NULL #>   .. ..$ : chr [1:4] \"Item_1\" \"Item_2\" \"Item_3\" \"Item_4\" #>  $ Theta      : num [1:2000, 1] -0.399 1.931 1.621 -0.424 1.343 ...  # generate dataset from converged model mod <- mirt(Science, 1, itemtype = c(rep('gpcm', 3), 'nominal')) #>  sim <- simdata(model=mod, N=1000) head(sim) #>      Comfort Work Future Benefit #> [1,]       4    3      3       4 #> [2,]       3    2      3       3 #> [3,]       3    2      4       2 #> [4,]       4    3      4       3 #> [5,]       3    3      2       3 #> [6,]       2    3      3       2  Theta <- matrix(rnorm(100)) sim <- simdata(model=mod, Theta=Theta) head(sim) #>      Comfort Work Future Benefit #> [1,]       3    3      4       4 #> [2,]       4    2      3       2 #> [3,]       3    2      3       2 #> [4,]       3    3      3       3 #> [5,]       3    3      3       3 #> [6,]       3    3      4       3  # alternatively, define a suitable object with functions from the mirtCAT package # help(generate.mirt_object) library(mirtCAT) #> Loading required package: shiny  nitems <- 50 a1 <- rlnorm(nitems, .2,.2) d <- rnorm(nitems) g <- rbeta(nitems, 20, 80) pars <- data.frame(a1=a1, d=d, g=g) head(pars) #>          a1          d         g #> 1 1.1271598 -0.6479570 0.2637693 #> 2 1.3539630 -1.4832170 0.1903528 #> 3 1.1640507  0.3390045 0.1782070 #> 4 0.9568311 -1.3578148 0.1389409 #> 5 1.0394247  0.3835373 0.2361323 #> 6 1.1479152  1.3522255 0.1990177  obj <- generate.mirt_object(pars, '3PL') dat <- simdata(N=200, model=obj)  #### 10 item GGUMs test with 4 categories each a <- rlnorm(10, .2, .2) b <- rnorm(10) #passed to d= input, but used as the b parameters diffs <- t(apply(matrix(runif(10*3, .3, 1), 10), 1, cumsum)) t <- -(diffs - rowMeans(diffs))  dat <- simdata(a, b, 1000, 'ggum', t=t) apply(dat, 2, table) #>   Item_1 Item_2 Item_3 Item_4 Item_5 Item_6 Item_7 Item_8 Item_9 Item_10 #> 0    477    496    674    332    438    417    558    458    475     513 #> 1    299    309    218    388    364    365    288    320    314     305 #> 2    153    155     79    232    158    175    109    167    162     138 #> 3     71     40     29     48     40     43     45     55     49      44 # mod <- mirt(dat, 1, 'ggum') # coef(mod)  ### 10 items with the hyperbolic cosine model with differing category lengths a <- matrix(1, 10) d <- rnorm(10) rho <- matrix(1:2, nrow=10, ncol=2, byrow=TRUE) rho[1:2,2] <- NA   # first two items have K=2 categories  dat <- simdata(a, d, 1000, 'hcm', rho=rho) itemstats(dat) #> $overall #>     N mean_total.score sd_total.score ave.r  sd.r alpha SEM.alpha #>  1000            8.522          2.709 0.015 0.212 0.119     2.543 #>  #> $itemstats #>            N K  mean    sd total.r total.r_if_rm alpha_if_rm #> Item_1  1000 2 0.475 0.500   0.128        -0.057       0.146 #> Item_2  1000 2 0.343 0.475   0.352         0.186       0.056 #> Item_3  1000 3 0.574 0.796   0.367         0.079       0.082 #> Item_4  1000 3 0.989 0.895   0.531         0.231      -0.038 #> Item_5  1000 3 1.159 0.867   0.163        -0.158       0.234 #> Item_6  1000 3 0.911 0.874   0.511         0.214      -0.021 #> Item_7  1000 3 1.001 0.884   0.525         0.228      -0.034 #> Item_8  1000 3 0.965 0.896   0.016        -0.300       0.323 #> Item_9  1000 3 0.886 0.895   0.517         0.213      -0.023 #> Item_10 1000 3 1.219 0.861   0.210        -0.110       0.204 #>  #> $proportions #>             0     1     2 #> Item_1  0.525 0.475    NA #> Item_2  0.657 0.343    NA #> Item_3  0.620 0.186 0.194 #> Item_4  0.406 0.199 0.395 #> Item_5  0.309 0.223 0.468 #> Item_6  0.430 0.229 0.341 #> Item_7  0.390 0.219 0.391 #> Item_8  0.419 0.197 0.384 #> Item_9  0.464 0.186 0.350 #> Item_10 0.285 0.211 0.504 #>  # mod <- mirt(dat, 1, 'hcm') # list(est=coef(mod, simplify=TRUE)$items, pop=cbind(a, d, log(rho)))   ###### # prob.list example  # custom probability function that returns a matrix fun <- function(a, b, theta){     P <- 1 / (1 + exp(-a * (theta-b)))     cbind(1-P, P) }  set.seed(1) theta <- matrix(rnorm(100)) prob.list <- list() nitems <- 5 a <- rlnorm(nitems, .2, .2); b <- rnorm(nitems, 0, 1/2) for(i in 1:nitems) prob.list[[i]] <- fun(a[i], b[i], theta) str(prob.list) #> List of 5 #>  $ : num [1:100, 1:2] 0.836 0.68 0.865 0.317 0.645 ... #>  $ : num [1:100, 1:2] 0.771 0.554 0.813 0.179 0.509 ... #>  $ : num [1:100, 1:2] 0.75 0.569 0.788 0.239 0.532 ... #>  $ : num [1:100, 1:2] 0.737 0.503 0.785 0.146 0.457 ... #>  $ : num [1:100, 1:2] 0.828 0.669 0.858 0.308 0.634 ...  dat <- simdata(prob.list=prob.list) head(dat) #>      Item_1 Item_2 Item_3 Item_4 Item_5 #> [1,]      0      0      0      1      1 #> [2,]      0      0      0      1      0 #> [3,]      0      0      0      0      0 #> [4,]      1      1      0      0      0 #> [5,]      1      1      0      0      0 #> [6,]      0      1      0      1      0  # prob.list input is useful when defining custom items as well name <- 'old2PL' par <- c(a = .5, b = -2) est <- c(TRUE, TRUE) P.old2PL <- function(par,Theta, ncat){      a <- par[1]      b <- par[2]      P1 <- 1 / (1 + exp(-1*a*(Theta - b)))      cbind(1-P1, P1) }  x <- createItem(name, par=par, est=est, P=P.old2PL)  prob.list[[1]] <- x@P(x@par, theta)   # }"},{"path":"https://philchalmers.github.io/mirt/reference/summary-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of model object — summary-method","title":"Summary of model object — summary-method","text":"Transforms coefficients standardized factor loading's metric. MixedClass objects, fixed random coefficients printed. Note output console rounded three digits, returned list objects . simulations, use output <- summary(mod, verbose = FALSE) suppress console messages.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/summary-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of model object — summary-method","text":"","code":"# S4 method for class 'SingleGroupClass' summary(   object,   SE = TRUE,   rotate = \"oblimin\",   Target = NULL,   suppress = 0,   suppress.cor = 0,   verbose = TRUE,   ... )"},{"path":"https://philchalmers.github.io/mirt/reference/summary-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of model object — summary-method","text":"object object class SingleGroupClass, MultipleGroupClass, MixedClass SE logical; include standard errors standardized loadings? Requires initial model included estimated asymptotic covariance matrix (via, instance, mirt(..., SE = TRUE)). TRUE SEs computed using delta method rotate string indicating rotation use exploratory models, primarily   GPArotation package (see documentation therein). Rotations currently supported : 'promax', 'oblimin', 'varimax',   'quartimin', 'targetT', 'targetQ', 'pstT', 'pstQ',   'oblimax', 'entropy', 'quartimax', 'simplimax',   'bentlerT', 'bentlerQ', 'tandemI', 'tandemII',   'geominT', 'geominQ', 'cfT', 'cfQ', 'infomaxT',   'infomaxQ', 'mccammon', 'bifactorT', 'bifactorQ'. models exploratory input automatically set 'none' Target dummy variable matrix indicting target rotation pattern. required rotations 'targetT', 'targetQ', 'pstT', 'pstQ' suppress numeric value indicating (possibly rotated) factor loadings suppressed. Typical values around .3 statistical software. Default 0 suppression suppress.cor suppress, correlation matrix output verbose logical; allow information printed console? ... additional arguments passed","code":""},{"path":"https://philchalmers.github.io/mirt/reference/summary-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Summary of model object — summary-method","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":[]},{"path":"https://philchalmers.github.io/mirt/reference/summary-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of model object — summary-method","text":"","code":"# \\donttest{ x <- mirt(Science, 2) #>  summary(x) #>  #> Rotation:  oblimin  #>  #> Rotated factor loadings:  #>  #>              F1      F2    h2 #> Comfort  0.6016  0.0312 0.382 #> Work    -0.0573  0.7971 0.592 #> Future   0.3302  0.5153 0.548 #> Benefit  0.7231 -0.0239 0.506 #>  #> Rotated SS loadings:  0.997 0.902  #>  #> Factor correlations:  #>  #>       F1 F2 #> F1 1.000    #> F2 0.511  1 summary(x, rotate = 'varimax') #>  #> Rotation:  varimax  #>  #> Rotated factor loadings:  #>  #>            F1    F2    h2 #> Comfort 0.579 0.216 0.382 #> Work    0.121 0.760 0.592 #> Future  0.428 0.605 0.548 #> Benefit 0.683 0.200 0.506 #>  #> Rotated SS loadings:  0.999 1.03  #>  #> Factor correlations:  #>  #>    F1 F2 #> F1  1    #> F2  0  1  # }"},{"path":"https://philchalmers.github.io/mirt/reference/tail.mirt_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Tail generic for customized matrix console output — tail.mirt_matrix","title":"Tail generic for customized matrix console output — tail.mirt_matrix","text":"Provides nicer output printed matrix objects defined functions mirt.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/tail.mirt_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tail generic for customized matrix console output — tail.mirt_matrix","text":"","code":"# S3 method for class 'mirt_matrix' tail(x, digits = 3, ...)"},{"path":"https://philchalmers.github.io/mirt/reference/tail.mirt_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tail generic for customized matrix console output — tail.mirt_matrix","text":"x object class 'mirt_matrix' digits number digits round ... additional arguments passed print(...)","code":""},{"path":"https://philchalmers.github.io/mirt/reference/testinfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate test information — testinfo","title":"Function to calculate test information — testinfo","text":"Given estimated model compute test information.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/testinfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate test information — testinfo","text":"","code":"testinfo(   x,   Theta,   degrees = NULL,   group = NULL,   individual = FALSE,   which.items = 1:extract.mirt(x, \"nitems\") )"},{"path":"https://philchalmers.github.io/mirt/reference/testinfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate test information — testinfo","text":"x object class 'SingleGroupClass', object class 'MultipleGroupClass' suitable group input supplied Theta matrix latent trait values degrees vector angles degrees 0 90. applicable input object multidimensional group group argument pass extract.group function. Required input object multiple-group model individual logical; return data.frame information traceline item? .items integer vector indicating items include expected information function. Default uses possible items","code":""},{"path":"https://philchalmers.github.io/mirt/reference/testinfo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Function to calculate test information — testinfo","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/testinfo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to calculate test information — testinfo","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/testinfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to calculate test information — testinfo","text":"","code":"dat <- expand.table(deAyala) (mirt(dat, 1, '2PL', pars = 'values')) #>    group   item     class   name parnum  value lbound ubound   est const nconst #> 1    all Item.1      dich     a1      1  0.851   -Inf    Inf  TRUE  none   none #> 2    all Item.1      dich      d      2  2.384   -Inf    Inf  TRUE  none   none #> 3    all Item.1      dich      g      3  0.000      0      1 FALSE  none   none #> 4    all Item.1      dich      u      4  1.000      0      1 FALSE  none   none #> 5    all Item.2      dich     a1      5  0.851   -Inf    Inf  TRUE  none   none #> 6    all Item.2      dich      d      6  0.726   -Inf    Inf  TRUE  none   none #> 7    all Item.2      dich      g      7  0.000      0      1 FALSE  none   none #> 8    all Item.2      dich      u      8  1.000      0      1 FALSE  none   none #> 9    all Item.3      dich     a1      9  0.851   -Inf    Inf  TRUE  none   none #> 10   all Item.3      dich      d     10  0.327   -Inf    Inf  TRUE  none   none #> 11   all Item.3      dich      g     11  0.000      0      1 FALSE  none   none #> 12   all Item.3      dich      u     12  1.000      0      1 FALSE  none   none #> 13   all Item.4      dich     a1     13  0.851   -Inf    Inf  TRUE  none   none #> 14   all Item.4      dich      d     14 -0.362   -Inf    Inf  TRUE  none   none #> 15   all Item.4      dich      g     15  0.000      0      1 FALSE  none   none #> 16   all Item.4      dich      u     16  1.000      0      1 FALSE  none   none #> 17   all Item.5      dich     a1     17  0.851   -Inf    Inf  TRUE  none   none #> 18   all Item.5      dich      d     18 -0.563   -Inf    Inf  TRUE  none   none #> 19   all Item.5      dich      g     19  0.000      0      1 FALSE  none   none #> 20   all Item.5      dich      u     20  1.000      0      1 FALSE  none   none #> 21   all  GROUP GroupPars MEAN_1     21  0.000   -Inf    Inf FALSE  none   none #> 22   all  GROUP GroupPars COV_11     22  1.000      0    Inf FALSE  none   none #>    prior.type prior_1 prior_2 #> 1        none     NaN     NaN #> 2        none     NaN     NaN #> 3        none     NaN     NaN #> 4        none     NaN     NaN #> 5        none     NaN     NaN #> 6        none     NaN     NaN #> 7        none     NaN     NaN #> 8        none     NaN     NaN #> 9        none     NaN     NaN #> 10       none     NaN     NaN #> 11       none     NaN     NaN #> 12       none     NaN     NaN #> 13       none     NaN     NaN #> 14       none     NaN     NaN #> 15       none     NaN     NaN #> 16       none     NaN     NaN #> 17       none     NaN     NaN #> 18       none     NaN     NaN #> 19       none     NaN     NaN #> 20       none     NaN     NaN #> 21       none     NaN     NaN #> 22       none     NaN     NaN mod <- mirt(dat, 1, '2PL', constrain = list(c(1,5,9,13,17))) #>   Theta <- matrix(seq(-4,4,.01)) tinfo <- testinfo(mod, Theta) plot(Theta, tinfo, type = 'l')   # \\donttest{  # compare information loss between two tests tinfo_smaller <- testinfo(mod, Theta, which.items = 3:5)  # removed item informations plot(Theta, iteminfo(extract.item(mod, 1), Theta), type = 'l')  plot(Theta, iteminfo(extract.item(mod, 2), Theta), type = 'l')   # most loss of info around -1 when removing items 1 and 2; expected given item info functions plot(Theta, tinfo_smaller - tinfo, type = 'l')    # }"},{"path":"https://philchalmers.github.io/mirt/reference/thetaComb.html","id":null,"dir":"Reference","previous_headings":"","what":"Create all possible combinations of vector input — thetaComb","title":"Create all possible combinations of vector input — thetaComb","text":"function constructs possible k-way combinations input vector. primarily useful used conjunction mdirt function, though users may uses well. See expand.grid flexible combination formats.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/thetaComb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create all possible combinations of vector input — thetaComb","text":"","code":"thetaComb(theta, nfact, intercept = FALSE)"},{"path":"https://philchalmers.github.io/mirt/reference/thetaComb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create all possible combinations of vector input — thetaComb","text":"theta vector possible combinations obtained nfact number observations (therefore number columns return matrix combinations) intercept logical; vector 1's appended first column result include intercept design component? Default FALSE","code":""},{"path":"https://philchalmers.github.io/mirt/reference/thetaComb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create all possible combinations of vector input — thetaComb","text":"matrix possible combinations","code":""},{"path":"https://philchalmers.github.io/mirt/reference/thetaComb.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create all possible combinations of vector input — thetaComb","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/thetaComb.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create all possible combinations of vector input — thetaComb","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/thetaComb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create all possible combinations of vector input — thetaComb","text":"","code":"# all possible joint combinations for the vector -4 to 4 thetaComb(-4:4, 2) #>       [,1] [,2] #>  [1,]   -4   -4 #>  [2,]   -3   -4 #>  [3,]   -2   -4 #>  [4,]   -1   -4 #>  [5,]    0   -4 #>  [6,]    1   -4 #>  [7,]    2   -4 #>  [8,]    3   -4 #>  [9,]    4   -4 #> [10,]   -4   -3 #> [11,]   -3   -3 #> [12,]   -2   -3 #> [13,]   -1   -3 #> [14,]    0   -3 #> [15,]    1   -3 #> [16,]    2   -3 #> [17,]    3   -3 #> [18,]    4   -3 #> [19,]   -4   -2 #> [20,]   -3   -2 #> [21,]   -2   -2 #> [22,]   -1   -2 #> [23,]    0   -2 #> [24,]    1   -2 #> [25,]    2   -2 #> [26,]    3   -2 #> [27,]    4   -2 #> [28,]   -4   -1 #> [29,]   -3   -1 #> [30,]   -2   -1 #> [31,]   -1   -1 #> [32,]    0   -1 #> [33,]    1   -1 #> [34,]    2   -1 #> [35,]    3   -1 #> [36,]    4   -1 #> [37,]   -4    0 #> [38,]   -3    0 #> [39,]   -2    0 #> [40,]   -1    0 #> [41,]    0    0 #> [42,]    1    0 #> [43,]    2    0 #> [44,]    3    0 #> [45,]    4    0 #> [46,]   -4    1 #> [47,]   -3    1 #> [48,]   -2    1 #> [49,]   -1    1 #> [50,]    0    1 #> [51,]    1    1 #> [52,]    2    1 #> [53,]    3    1 #> [54,]    4    1 #> [55,]   -4    2 #> [56,]   -3    2 #> [57,]   -2    2 #> [58,]   -1    2 #> [59,]    0    2 #> [60,]    1    2 #> [61,]    2    2 #> [62,]    3    2 #> [63,]    4    2 #> [64,]   -4    3 #> [65,]   -3    3 #> [66,]   -2    3 #> [67,]   -1    3 #> [68,]    0    3 #> [69,]    1    3 #> [70,]    2    3 #> [71,]    3    3 #> [72,]    4    3 #> [73,]   -4    4 #> [74,]   -3    4 #> [75,]   -2    4 #> [76,]   -1    4 #> [77,]    0    4 #> [78,]    1    4 #> [79,]    2    4 #> [80,]    3    4 #> [81,]    4    4  # all possible binary combinations for four observations thetaComb(c(0,1), 4) #>       [,1] [,2] [,3] [,4] #>  [1,]    0    0    0    0 #>  [2,]    1    0    0    0 #>  [3,]    0    1    0    0 #>  [4,]    1    1    0    0 #>  [5,]    0    0    1    0 #>  [6,]    1    0    1    0 #>  [7,]    0    1    1    0 #>  [8,]    1    1    1    0 #>  [9,]    0    0    0    1 #> [10,]    1    0    0    1 #> [11,]    0    1    0    1 #> [12,]    1    1    0    1 #> [13,]    0    0    1    1 #> [14,]    1    0    1    1 #> [15,]    0    1    1    1 #> [16,]    1    1    1    1  # all possible binary combinations for four observations (with intercept) thetaComb(c(0,1), 4, intercept=TRUE) #>       [,1] [,2] [,3] [,4] [,5] #>  [1,]    1    0    0    0    0 #>  [2,]    1    1    0    0    0 #>  [3,]    1    0    1    0    0 #>  [4,]    1    1    1    0    0 #>  [5,]    1    0    0    1    0 #>  [6,]    1    1    0    1    0 #>  [7,]    1    0    1    1    0 #>  [8,]    1    1    1    1    0 #>  [9,]    1    0    0    0    1 #> [10,]    1    1    0    0    1 #> [11,]    1    0    1    0    1 #> [12,]    1    1    1    0    1 #> [13,]    1    0    0    1    1 #> [14,]    1    1    0    1    1 #> [15,]    1    0    1    1    1 #> [16,]    1    1    1    1    1"},{"path":"https://philchalmers.github.io/mirt/reference/traditional2mirt.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert traditional IRT metric into slope-intercept form used in mirt — traditional2mirt","title":"Convert traditional IRT metric into slope-intercept form used in mirt — traditional2mirt","text":"helper function users previously available traditional/classical IRT parameters want know equivalent slope-intercept translation used mirt. Note function assumes supplied models unidimensional definition (.e., one slope/discrimination) logistic metric (.e., logistic-ogive scaling coefficient D=1). supported slope-intercept transformation available original vector parameters returned default.","code":""},{"path":"https://philchalmers.github.io/mirt/reference/traditional2mirt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert traditional IRT metric into slope-intercept form used in mirt — traditional2mirt","text":"","code":"traditional2mirt(x, cls, ncat)"},{"path":"https://philchalmers.github.io/mirt/reference/traditional2mirt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert traditional IRT metric into slope-intercept form used in mirt — traditional2mirt","text":"x vector parameters transform cls class itemtype supplied model ncat number categories implied IRT model","code":""},{"path":"https://philchalmers.github.io/mirt/reference/traditional2mirt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert traditional IRT metric into slope-intercept form used in mirt — traditional2mirt","text":"named vector slope-intercept parameters (supported)","code":""},{"path":"https://philchalmers.github.io/mirt/reference/traditional2mirt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert traditional IRT metric into slope-intercept form used in mirt — traditional2mirt","text":"Supported class transformations cls input : Rasch, 2PL, 3PL, 3PLu, 4PL Form must : (discrimination, difficulty, lower-bound, upper-bound) graded Form must : (discrimination, difficulty 1, difficulty 2, ..., difficulty k-1) gpcm Form must : (discrimination, difficulty 1, difficulty 2, ..., difficulty k-1) nominal Form must : (discrimination 1, discrimination 2, ..., discrimination k,       difficulty 1, difficulty 2, ..., difficulty k)","code":""},{"path":"https://philchalmers.github.io/mirt/reference/traditional2mirt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert traditional IRT metric into slope-intercept form used in mirt — traditional2mirt","text":"","code":"# classical 3PL model vec <- c(a=1.5, b=-1, g=.1, u=1) slopeint <- traditional2mirt(vec, '3PL', ncat=2) slopeint #>  a1   d   g   u  #> 1.5 1.5 0.1 1.0   # classical graded model (four category) vec <- c(a=1.5, b1=-1, b2=0, b3=1.5) slopeint <- traditional2mirt(vec, 'graded', ncat=4) slopeint #>    a1    d1    d2    d3  #>  1.50  1.50  0.00 -2.25   # classical generalize partial credit model (four category) vec <- c(a=1.5, b1=-1, b2=0, b3=1.5) slopeint <- traditional2mirt(vec, 'gpcm', ncat=4) slopeint #>    a1   ak0   ak1   ak2   ak3    d0    d1    d2    d3  #>  1.50  0.00  1.00  2.00  3.00  0.00  1.50  1.50 -0.75   # classical nominal model (4 category) vec <- c(a1=.5, a2 = -1, a3=1, a4=-.5, d1=1, d2=-1, d3=-.5, d4=.5) slopeint <- traditional2mirt(vec, 'nominal', ncat=4) slopeint #>         a1        ak0        ak1        ak2        ak3         d0         d1  #> -0.3333333  0.0000000  4.5000000 -1.5000000  3.0000000  0.0000000 -2.0000000  #>         d2         d3  #> -1.5000000 -0.5000000"},{"path":"https://philchalmers.github.io/mirt/reference/vcov-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract parameter variance covariance matrix — vcov-method","title":"Extract parameter variance covariance matrix — vcov-method","text":"Extract parameter variance covariance matrix","code":""},{"path":"https://philchalmers.github.io/mirt/reference/vcov-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract parameter variance covariance matrix — vcov-method","text":"","code":"# S4 method for class 'SingleGroupClass' vcov(object)"},{"path":"https://philchalmers.github.io/mirt/reference/vcov-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract parameter variance covariance matrix — vcov-method","text":"object object class SingleGroupClass, MultipleGroupClass, MixedClass","code":""},{"path":"https://philchalmers.github.io/mirt/reference/vcov-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract parameter variance covariance matrix — vcov-method","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/vcov-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract parameter variance covariance matrix — vcov-method","text":"","code":"# \\donttest{ x <- mirt(Science, 1, SE=TRUE) #>  #>  #> Calculating information matrix... vcov(x) #>                a1.1         d1.2          d2.3          d3.4          a1.5 #> a1.1   0.0354557222  0.031747211  0.0218991330 -1.337062e-02 -0.0020114572 #> d1.2   0.0317472109  0.240747985  0.0496914145 -7.728604e-03 -0.0039962941 #> d2.3   0.0218991330  0.049691414  0.0495440979 -3.353138e-03 -0.0026118813 #> d3.4  -0.0133706166 -0.007728604 -0.0033531385  2.516506e-02  0.0016239413 #> a1.5  -0.0020114572 -0.003996294 -0.0026118813  1.623941e-03  0.0330717252 #> d1.6  -0.0027776758  0.000321554  0.0013455096  4.475090e-03  0.0222002454 #> d2.7  -0.0008339773  0.002234984  0.0026641307  3.634982e-03  0.0084726682 #> d3.8   0.0025280813  0.006109937  0.0050768040  2.151939e-03 -0.0194002583 #> a1.9  -0.0292529857 -0.032667514 -0.0224516013  1.338132e-02  0.0001401001 #> d1.10 -0.0438210135 -0.037345358 -0.0240181907  2.417470e-02 -0.0060425885 #> d2.11 -0.0206416044 -0.015080644 -0.0081996180  1.457986e-02 -0.0023410675 #> d3.12  0.0177727573  0.023980089  0.0183114800 -1.142724e-03  0.0022121845 #> a1.13  0.0096842437  0.008486325  0.0055838516 -3.358253e-03 -0.0026345430 #> d1.14  0.0070930997  0.010415451  0.0077963642  4.886260e-06 -0.0038164066 #> d2.15  0.0021935448  0.005091505  0.0044161993  2.013700e-03 -0.0013475415 #> d3.16 -0.0040629009 -0.001253710  0.0001366316  4.584220e-03  0.0020482028 #>                d1.6          d2.7         d3.8          a1.9         d1.10 #> a1.1  -0.0027776758 -0.0008339773  0.002528081 -0.0292529857 -0.0438210135 #> d1.2   0.0003215540  0.0022349842  0.006109937 -0.0326675141 -0.0373453579 #> d2.3   0.0013455096  0.0026641307  0.005076804 -0.0224516013 -0.0240181907 #> d3.4   0.0044750896  0.0036349818  0.002151939  0.0133813229  0.0241746980 #> a1.5   0.0222002454  0.0084726682 -0.019400258  0.0001401001 -0.0060425885 #> d1.6   0.0572478298  0.0178719080 -0.008242431 -0.0042731331  0.0008943475 #> d2.7   0.0178719080  0.0204197987  0.001805256 -0.0022635445  0.0034073931 #> d3.8  -0.0082424309  0.0018052557  0.041235925  0.0021523979  0.0112367277 #> a1.9  -0.0042731331 -0.0022635445  0.002152398  0.2343596829  0.3068823432 #> d1.10  0.0008943475  0.0034073931  0.011236728  0.3068823432  0.5333187949 #> d2.11  0.0043839472  0.0058509494  0.008542531  0.1425287134  0.2140840706 #> d3.12  0.0095948178  0.0084870680  0.005845643 -0.1227407708 -0.1520698557 #> a1.13 -0.0031158076 -0.0007826477  0.003057944 -0.0316626320 -0.0478697496 #> d1.14  0.0007925371  0.0027067338  0.006134230 -0.0304997627 -0.0348586852 #> d2.15  0.0024475628  0.0032306664  0.004352544 -0.0097796669 -0.0072522805 #> d3.16  0.0048748828  0.0037848620  0.002008196  0.0177300358  0.0307235701 #>               d2.11        d3.12         a1.13         d1.14         d2.15 #> a1.1  -0.0206416044  0.017772757  0.0096842437  7.093100e-03  0.0021935448 #> d1.2  -0.0150806437  0.023980089  0.0084863254  1.041545e-02  0.0050915045 #> d2.3  -0.0081996180  0.018311480  0.0055838516  7.796364e-03  0.0044161993 #> d3.4   0.0145798573 -0.001142724 -0.0033582533  4.886260e-06  0.0020137003 #> a1.5  -0.0023410675  0.002212184 -0.0026345430 -3.816407e-03 -0.0013475415 #> d1.6   0.0043839472  0.009594818 -0.0031158076  7.925371e-04  0.0024475628 #> d2.7   0.0058509494  0.008487068 -0.0007826477  2.706734e-03  0.0032306664 #> d3.8   0.0085425306  0.005845643  0.0030579443  6.134230e-03  0.0043525441 #> a1.9   0.1425287134 -0.122740771 -0.0316626320 -3.049976e-02 -0.0097796669 #> d1.10  0.2140840706 -0.152069856 -0.0478697496 -3.485869e-02 -0.0072522805 #> d2.11  0.1276826104 -0.062018021 -0.0219424374 -1.277452e-02  0.0003957921 #> d3.12 -0.0620180212  0.104233499  0.0192987094  2.313630e-02  0.0117967217 #> a1.13 -0.0219424374  0.019298709  0.0335900564  2.461211e-02  0.0088923418 #> d1.14 -0.0127745164  0.023136304  0.0246121055  7.645466e-02  0.0179733534 #> d2.15  0.0003957921  0.011796722  0.0088923418  1.797335e-02  0.0197363548 #> d3.16  0.0175005019 -0.003280364 -0.0143630948 -5.930600e-03  0.0028978863 #>               d3.16 #> a1.1  -0.0040629009 #> d1.2  -0.0012537103 #> d2.3   0.0001366316 #> d3.4   0.0045842200 #> a1.5   0.0020482028 #> d1.6   0.0048748828 #> d2.7   0.0037848620 #> d3.8   0.0020081962 #> a1.9   0.0177300358 #> d1.10  0.0307235701 #> d2.11  0.0175005019 #> d3.12 -0.0032803641 #> a1.13 -0.0143630948 #> d1.14 -0.0059305999 #> d2.15  0.0028978863 #> d3.16  0.0284229583  # }"},{"path":"https://philchalmers.github.io/mirt/reference/wald.html","id":null,"dir":"Reference","previous_headings":"","what":"Wald statistics for mirt models — wald","title":"Wald statistics for mirt models — wald","text":"Compute Wald test given L vector matrix numeric contrasts. Requires model information matrix computed (passing SE = TRUE estimating model). Use wald(model) observe information matrix columns named, especially estimated model contains constrained parameters (e.g., 1PL).","code":""},{"path":"https://philchalmers.github.io/mirt/reference/wald.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wald statistics for mirt models — wald","text":"","code":"wald(object, L, C = NULL)"},{"path":"https://philchalmers.github.io/mirt/reference/wald.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wald statistics for mirt models — wald","text":"object estimated object mirt, bfactor, multipleGroup, mixedmirt, mdirt L coefficient matrix dimensions nconstrasts x npars.estimated, character vector giving hypothesis symbolic form (syntax format borrowed car package; see Details ). Omitting value return column names information matrix used identify (potentially constrained) parameters C constant vector population parameters compared along side L,   length(C) == row(L). default vector 0's constructed. Note using   syntax input L argument ignored following description borrowed car package documentation pertaining character vector input argument L: \"hypothesis matrix can supplied numeric matrix (vector), rows specify linear combinations model coefficients, tested equal corresponding entries right-hand-side vector, defaults vector zeroes. Alternatively, hypothesis can specified symbolically character vector one elements, gives either linear combination coefficients, linear equation coefficients (.e., left right side separated equals sign). Components linear expression linear equation can consist numeric constants, numeric constants multiplying coefficient names (case number precedes coefficient, may separated spaces asterisk); constants 1 -1 may omitted. Spaces always optional. Components separated plus minus signs. Newlines tabs hypotheses treated spaces. See examples .\"","code":""},{"path":"https://philchalmers.github.io/mirt/reference/wald.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Wald statistics for mirt models — wald","text":"Chalmers, R., P. (2012). mirt: Multidimensional Item Response Theory Package R Environment. Journal Statistical Software, 48(6), 1-29. doi:10.18637/jss.v048.i06","code":""},{"path":"https://philchalmers.github.io/mirt/reference/wald.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Wald statistics for mirt models — wald","text":"Phil Chalmers rphilip.chalmers@gmail.com","code":""},{"path":"https://philchalmers.github.io/mirt/reference/wald.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wald statistics for mirt models — wald","text":"","code":"# \\donttest{  # View parnumber index data(LSAT7) data <- expand.table(LSAT7) mod <- mirt(data, 1, SE = TRUE) #>  #>  #> Calculating information matrix... coef(mod) #> $Item.1 #>            a1     d  g  u #> par     0.988 1.856  0  1 #> CI_2.5  0.641 1.598 NA NA #> CI_97.5 1.335 2.114 NA NA #>  #> $Item.2 #>            a1     d  g  u #> par     1.081 0.808  0  1 #> CI_2.5  0.750 0.629 NA NA #> CI_97.5 1.412 0.987 NA NA #>  #> $Item.3 #>            a1     d  g  u #> par     1.706 1.804  0  1 #> CI_2.5  1.078 1.404 NA NA #> CI_97.5 2.334 2.205 NA NA #>  #> $Item.4 #>            a1     d  g  u #> par     0.765 0.486  0  1 #> CI_2.5  0.502 0.339 NA NA #> CI_97.5 1.028 0.633 NA NA #>  #> $Item.5 #>            a1     d  g  u #> par     0.736 1.855  0  1 #> CI_2.5  0.440 1.630 NA NA #> CI_97.5 1.032 2.079 NA NA #>  #> $GroupPars #>         MEAN_1 COV_11 #> par          0      1 #> CI_2.5      NA     NA #> CI_97.5     NA     NA #>   # see how the information matrix relates to estimated parameters, and how it lines up #   with the parameter index (infonames <- wald(mod)) #>  a1.1   d.2  a1.5   d.6  a1.9  d.10 a1.13  d.14 a1.17  d.18  #> 0.988 1.856 1.081 0.808 1.706 1.804 0.765 0.486 0.736 1.855  index <- mod2values(mod) index[index$est, ] #>    group   item class name parnum value lbound ubound  est const nconst #> 1    all Item.1  dich   a1      1 0.988   -Inf    Inf TRUE  none   none #> 2    all Item.1  dich    d      2 1.856   -Inf    Inf TRUE  none   none #> 5    all Item.2  dich   a1      5 1.081   -Inf    Inf TRUE  none   none #> 6    all Item.2  dich    d      6 0.808   -Inf    Inf TRUE  none   none #> 9    all Item.3  dich   a1      9 1.706   -Inf    Inf TRUE  none   none #> 10   all Item.3  dich    d     10 1.804   -Inf    Inf TRUE  none   none #> 13   all Item.4  dich   a1     13 0.765   -Inf    Inf TRUE  none   none #> 14   all Item.4  dich    d     14 0.486   -Inf    Inf TRUE  none   none #> 17   all Item.5  dich   a1     17 0.736   -Inf    Inf TRUE  none   none #> 18   all Item.5  dich    d     18 1.855   -Inf    Inf TRUE  none   none #>    prior.type prior_1 prior_2 #> 1        none     NaN     NaN #> 2        none     NaN     NaN #> 5        none     NaN     NaN #> 6        none     NaN     NaN #> 9        none     NaN     NaN #> 10       none     NaN     NaN #> 13       none     NaN     NaN #> 14       none     NaN     NaN #> 17       none     NaN     NaN #> 18       none     NaN     NaN  # second item slope equal to 0? L <- matrix(0, 1, 10) L[1,3] <- 1 wald(mod, L) #>         W df            p #> 1 41.0005  1 1.521906e-10  # same as above using character syntax input infonames #>  a1.1   d.2  a1.5   d.6  a1.9  d.10 a1.13  d.14 a1.17  d.18  #> 0.988 1.856 1.081 0.808 1.706 1.804 0.765 0.486 0.736 1.855  wald(mod, \"a1.5 = 0\") #>         W df            p #> 1 41.0005  1 1.521906e-10  # simultaneously test equal factor slopes for item 1 and 2, and 4 and 5 L <- matrix(0, 2, 10) L[1,1] <- L[2, 7] <- 1 L[1,3] <- L[2, 9] <- -1 L #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #> [1,]    1    0   -1    0    0    0    0    0    0     0 #> [2,]    0    0    0    0    0    0    1    0   -1     0 wald(mod, L) #>           W df         p #> 1 0.1528867  2 0.9264054  # Again, using more efficient syntax infonames #>  a1.1   d.2  a1.5   d.6  a1.9  d.10 a1.13  d.14 a1.17  d.18  #> 0.988 1.856 1.081 0.808 1.706 1.804 0.765 0.486 0.736 1.855  wald(mod, c(\"a1.1 = a1.5\", \"a1.13 = a1.17\")) #>           W df         p #> 1 0.1528867  2 0.9264054  # log-Liklihood tests (requires estimating a new model) cmodel <- 'theta = 1-5            CONSTRAIN = (1,2, a1), (4,5, a1)' mod2 <- mirt(data, cmodel) #>  # or, equivalently #mod2 <- mirt(data, 1, constrain = list(c(1,5), c(13,17))) anova(mod2, mod) #>           AIC    SABIC       HQ      BIC    logLik    X2 df     p #> mod2 5333.763 5347.616 5348.685 5373.025 -2658.881                #> mod  5337.610 5354.927 5356.263 5386.688 -2658.805 0.152  2 0.927  ##### # test equality of means in multi-group model: #    H0: (mu1 - mu2) = (mu3 - mu4)  set.seed(12345) a <- matrix(abs(rnorm(15,1,.3)), ncol=1) d <- matrix(rnorm(15,0,.7),ncol=1) itemtype <- rep('2PL', nrow(a)) N <- 500 dataset1 <- simdata(a, d, N, itemtype) dataset2 <- simdata(a, d, N, itemtype, mu = .5) dataset3 <- simdata(a, d, N, itemtype, mu = -1) dataset4 <- simdata(a, d, N, itemtype, mu = -.5) dat <- rbind(dataset1, dataset2, dataset3, dataset4) group <- factor(rep(paste0('D', 1:4), each=N)) levels(group) #> [1] \"D1\" \"D2\" \"D3\" \"D4\" models <- 'F1 = 1-15'  # 3 means estimated mod_free <- multipleGroup(dat, models, group = group, SE=TRUE,                           invariance=c('slopes', 'intercepts', 'free_var','free_means')) #>  #>  #> Calculating information matrix... wald(mod_free) # obtain parameter names #>   a1.1.63.125.187    d.2.64.126.188   a1.5.67.129.191    d.6.68.130.192  #>             1.234             0.643             1.189            -0.573  #>   a1.9.71.133.195   d.10.72.134.196  a1.13.75.137.199   d.14.76.138.200  #>             0.981            -0.141             1.058             0.864  #>  a1.17.79.141.203   d.18.80.142.204  a1.21.83.145.207   d.22.84.146.208  #>             1.146             0.248             0.499             0.537  #>  a1.25.87.149.211   d.26.88.150.212  a1.29.91.153.215   d.30.92.154.216  #>             1.274             1.204             0.997            -0.368  #>  a1.33.95.157.219   d.34.96.158.220  a1.37.99.161.223  d.38.100.162.224  #>             0.899            -1.032             0.735            -1.087  #> a1.41.103.165.227  d.42.104.166.228 a1.45.107.169.231  d.46.108.170.232  #>             1.031             1.345             1.603            -0.160  #> a1.49.111.173.235  d.50.112.174.236 a1.53.115.177.239  d.54.116.178.240  #>             1.272             0.578             1.228             0.501  #> a1.57.119.181.243  d.58.120.182.244        MEAN_1.123        COV_11.124  #>             0.850            -0.080             0.382             0.865  #>        MEAN_1.185        COV_11.186        MEAN_1.247        COV_11.248  #>            -1.062             0.864            -0.594             0.936  # View(mod2values(mod_free))  # reference group mean = 0 by default wald(mod_free, c(\"0 - MEAN_1.123 = MEAN_1.185 - MEAN_1.247\")) #>           W df         p #> 1 0.7142209  1 0.3980461   # }"},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-1451","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.45.1","title":"Changes in mirt 1.45.1","text":"CRAN release: 2025-09-06 Added argument fscores(..., expected.info = FALSE) allow computation expected vs observed information Fixed extraction bug randef() lr.random structures used extract.item() extract.group() now support objects class MixtureClass RMSD_DIF() now works single group models investigate goodness fit Number response options (K) per item added itemstats() output, well option report raw counts instead proportions","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-144","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.44","title":"Changes in mirt 1.44","text":"Added Attitude dataset Andrich (1988) publication demonstrate constrained hyperbolic cosine model (HCM) model estimated latitude acceptance parameters Added several itemtype inputs specify family unfolding models dichotomous polytomous data. currently include unidimensional multidimensional versions (generalized) hyperbolic cosine model, (generalized) absolute logistic model, (generalized) simple squared logistic model, (generalized) parallellogram analysis model. simdata() also gained support Luo (2001) family generating models, among secondary functions summary() now automatically outputs delta-method SEs standardized factor loadings. applied non-EFA models include estimate ACOV (e.g., via mirt(..., SE=TRUE)) Standardized factor loadings multidimensional nominal response model now report consistent values regardless category ordering Exported general-purpose DeltaMethod() function numerical version delta method Fixed M2() computations large amounts missing data, particularly prevalent C2 statistic (reported Hynek Cigler) Fixed minor coef(..., IRTpars=TRUE) issue output reported constant SE term 0.0 converting Rasch models (bk = -dk correctly tracked)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-143","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.43","title":"Changes in mirt 1.43","text":"CRAN release: 2024-11-14 M2() family longer requires row-wise removal missing data behave correctly. , na.rm argument removed longer required (requested Ulrich Schroeders) Added support latent regression ACOV/SE estimation Oakes method mirt() Related points , general MLTM (Embretson, 1984) added itemtype specified PC1PL itemdesign set used, formula must include name factor formula expressions. See examples mirt documentation (requested Susan Embretson) Added PC1PL itemtype easily specify conjunctive models slopes fixed 1 estimation latent variance term, mimicking Rasch itemtype family mirt() multipleGroup() gain itemdesign item.formula arguments fit fixed item design characteristics (e.g. LLTMs; Fischer, 1983) subset items. Arguments similar mixedmirt(), though currently flexible Partially-compensatory family itemtypes now behave consistently loading structures specified trace lines products computed dimensions non-zero slopes RCI() gains shiny logical create interactive scoring interface","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-142","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.42","title":"Changes in mirt 1.42","text":"CRAN release: 2024-07-14 model argument bfactor() can now specified using mirt.model() syntax include cognitively friendly tracking item names respective locations (requested Afshin Khosravi) Add reverse.score() function reverse scoring specific items within matrix data.frame Fixed issue related missing data patterns resulted bias estimating hyper-parameters single multi-group models (reported Paul Jewsbury) mirt.model() syntax gains negation operator omitting specific observed/latent groups specifications. example, following omit “Group3” identifies groups equality constraint definitions CONSTRAINB[-Group3] = ... RMSD_DIF() now supports datasets follow vertical scaling structures (.e., groups answer items others). Requested Alexandre Jaloto M2() functions now compute null model SRMR fall models whenever possible, including latent class variance (reported Hynek Cigler) VCOV memory leak bugfix mixture models (see Github issue #247) Standardized residuals point estimates now returned personfit() passing return.resids=TRUE (requested Raymond Hernandez)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-141","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.41","title":"Changes in mirt 1.41","text":"CRAN release: 2023-10-17 Fix DIF() sparse data included mixed item formats (reported Heather Leigh Kayton) computing category-level information curves include negative Hessian computations (reported Milica Kabic) Allow missing data patterns personfit(), well new option return raw item person residuals (requested George Karabatsos) Fix Zero-inflated model example multipleGroup(), required discontinuous trait location populated explicitly customTheta syntax (reported Brooke Magnus) Empirical reliability estimates fscores() empirical_rxx() include option use true score variance estimate observed score variance (suggested Hynek Cigler)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-140","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.40","title":"Changes in mirt 1.40","text":"CRAN release: 2023-08-10 technical list gains nconstrain argument specifying equality constraints negative relationships (e.g., a12 = -a21). Requested Berend Terluin Added unipolar log‑logistic model (Lucke, 2015) itemtype, specified itemtype = 'ULL'. Note automatically changes number internal defaults, using log-normal(0,1) density latent traits, theta_lim specified positive Added complementary log‑log model (Shim, Bonifay, Wiedermann, 2022) itemtype, specified itemtype = 'CLL' Added itemtype = '5PL' model unidimensional dichotomous data included asymmetric response functions. Example help(mirt) also demonstrates asymmetric 2PL model 5PL unstable requires strong priors Methods using Quasi-Monte Carlo integration post-convergence respecting correlated latent variable structures (reported George Kephart using M2()) Bugfix fscores() supplying mixture models introduced changing previous classification default latent class models (reported Karel Veldkamp) residuals() gains p.adjust argument FWE control DRF() gains DIF.cat argument compute statistics per-category basis studying polytomous items expected.test() gains probs.logical return probability functions category (used individual = TRUE) Small bug fixes C++ code resulted memory leaks","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-139","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.39","title":"Changes in mirt 1.39","text":"CRAN release: 2023-05-30 models fit using mdirt() fscores() EAP EAPsum methods now always returns classification probabilities default (reported Matthew Madison) SIBTEST() gains DIF logical perform DIF tests across suspect_set DIF() SIBTEST() gain pairwise logical input perform pairwise post-hoc comparisons multi-group applications DRF() gains groups2test argument friends multi-group models","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-1381","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.38.1","title":"Changes in mirt 1.38.1","text":"CRAN release: 2023-02-28 infit outfit statistics can now computed itemfit() missing data present (requested Hanif mirt-package forum: https://groups.google.com/g/mirt-package/c/_mA3YbMmbzM/m/CydOl-F4BQAJ?utm_medium=email&utm_source=footer) coef(..., IRTpars=TRUE) now applied multidimensional IRT models, provided item contains simple structure (suggested Sverre Ofstad) Fixed match() bug SIBTEST() total score missing (reported Ziying Li) fscores(..., method ='EAPsum') now supports returning ACOV matrices, matching behaviour estimators Store previously defined customItems customGroup lists use secondary functions (e.g., DIF(), boot.mirt(), etc). Reported Nataly Beribisky Combining priors equality constraints longer uses multiple prior definitions likelihood computations. Hence, constrained parameters now treated though single parameter one prior distribution (reported Matthias von Davier context multiple-group models group item priors) Added groups2test argument DIF() isolate individual grouping variable specification using 2 groups Implicit argument ‘invariance’ stored multiple-group objects now automatically used boot.mirt() (previously manually passed) Bugfix using items2test DIF input character vector (reported @jbuncher) Bug fixes multiple-group DIF testing DIF() using two groups (reported Ruben Neda Davin Díaz García)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-1371","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.37.1","title":"Changes in mirt 1.37.1","text":"CRAN release: 2022-08-10 boot.mirt() gains boot.fun argument accept user-defined functions extracting associated statistics bootstrap verbose = TRUE residuals() set summary statistics reported easier flagging itemfit() arguments changed accommodate outputting tables consistently. Now single return.tables argument used specify tables return anova() removes support verbose flag, instead labels rows resulting output identify models X2 G2 classes item-fit statistics now better deal large missing value vectors per-item basis better consistency technical list gains storeEMhistory flag store EM history (requested @netique) DRF() gains best-fitting prior support (currently limited Gaussian distributions) Correct index subset caused tmp row removals MG objects (fixes #227)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-136","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.36","title":"Changes in mirt 1.36","text":"CRAN release: 2022-03-21 Progress bar added automatically (controlled via verbose argument) using several package’s secondary functions (e.g., fscores(), DIF(), 'DRF(), mdirt(), etc) Added itemstats() function give basic item information statistics Item-EFA models now automatically flips negative signs rotate solutions (e.g., via summary()) according sign largest observed loading (allows easier interpretation resulting correlation matrix) response.pattern deals completely missing vectors now (issue #220) residuals() gains approx.z logical transform LD values approximate z-ratios mirt(), mixedmirt(), multipleGroup() now model = 1 fit unidimensional IRT model default","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-1351","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.35.1","title":"Changes in mirt 1.35.1","text":"CRAN release: 2021-12-08 Added covdata argument fscores() allow latent regression covariate information well. Example added fscores() documentation demonstrate addition Added RCI() function compute reliable change index via IRT modelling Added delta method SE coef(., IRTpars = TRUE) nominal nested-logit models itemfit() gains S_X2.plot argument visualize expected-observed probability differences based S-X2 conditional sum-score strategy Added type = 'EAPsum' plot() generic view expected vs observed sum-scores plot itemfit() gains p.adjust argument allow p-value adjustments output methods anova() generic now supports ... input compare many nested models, compared sequence Added type = 'threshold' itemplot() plot cumulative probability information (requested Azman Sami) Fixed Bug Error ((SEtmp < 0)) appeared due new R 4.0+ behaviour (reported Ziying Li Caroline Böhm) Fix bug itemfit() plotting multiple-group objects Bugfix fscores() report row failed converge datsets contain response patterns completely missing","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-134","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.34","title":"Changes in mirt 1.34","text":"CRAN release: 2021-06-28 Previous technical = list(removeEmptyRows = TRUE) input now deprecated. Response patterns now completely missing supplied NA placeholders within estimation post-estimation supporting functions (e.g., fscores(), personfit(), fixed(), etc) Added converged element DIF() output evaluate whether nested model iteration converged Added support plausible-value draws fscores() using response.pattern argument Fix SE.type = 'Fisher' computation multi-group models (reported Felix Zimmer) Switch par f inputs numerical_deriv()","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-1331","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.33.1","title":"Changes in mirt 1.33.1","text":"Added gen.difficulty() compute generalized difficulty statistics described Ali, Chang, Anderson (2015) polytomous response models (suggested Alexander Freund) Added RMSD_DIF() compute marginal effect size measure recently used PISA anlayses investigating ‘badness--fit’ DIF effects using constrained multiple-group models extract.group() now explicitly requires group name passed rather group number (far natural route) plot(..., type =) now supports 'trace', 'infotrace', 'itemscore', '' two-dimensional models create faceted graphics Added read.mirt() function back package now plink available CRAN Syntax input car package’s lht() function adopted within mirt’s wald() function easier specifications (see examples) Better cope syntax definitions models DIF(), particularly CONSTRAINB form (reported Hao Wu) Corrected outer-product summation SE.type = 'Fisher' computation (reported Felix Zimmer) Added fixedCalib() function perform five fixed-calibration methods describe Kim (2006) Empirical histogram dentype convergence tolerance longer modified (default now Gaussian dentype criteria) Fix GGUMs using model syntax input (ignoring slope loading specifications; reported Ben Listyg) fixed traditional2mirt() math gpcm 5 category items supplied (reported Aiden Loe)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-1321","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.32.1","title":"Changes in mirt 1.32.1","text":"CRAN release: 2020-04-25 OpenMP support added E-step portion package, number threads can specified via mirtCluster() function argument omp_threads. Special thanks Matthias von Davier providing omp reduction code Estep.cpp file Behaviour mirt(..., large) now modified, large = TRUE now skips computing unique response patterns datasets likely contain little repeated response patterns (suggested Matthias von Davier). previous two-step behaviour now achieved passing large = 'return', storing list object, passing back large input argument Positive/negative sign remove chi-square components residuals(type = 'LD') (requested Cengiz Zopluoglu help avoid confusion). Sign still however present standardized correlation estimates itemtype = 'rsm' reported incorrect information functions due use - instead + traditional2mirt() (reported Nasser Hasan) column names fscores() results now correspond model syntax definition names instead previous F# convention fix method = 'classify' option fscores() two mixtures fitted (reported Lisa Limeri) fix bug 'drop_sequential' scheme DIF() introduced previous version mirt due internal organization changes (reported Balal Izanloo) allow infit/outfit statistics computed non-Rasch models (suggested Alexander Freund use GGUMs) added p.adjust argument DRF() (requested Keri J. S. Brady) support computation ACOV matrix variance specific factors freely estimated bfactor() fix invariance = 'free_var' argument multipleGroup() multidimensional models correlated traits, previously fixed correlation parameters inadvertently (reported Ruoyi Zhu) use proper mins internal using extract.group() keep original minimum response scoring pattern (reported Adam Ťápal) bugfix single-group models draw_parameters() (reported Keri Brady @ddueber) numeric model specification bfactor() bug patched intervals 1 unit apart due NA placeholders (reported Luis Manuel Lozano) latent trait/class names now forced different data column names (bug reported Nathan Carter) fixed X2*_df PV_Q1* missing data pattern resulted dropped categories (reported Mac Pank)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-131","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.31","title":"Changes in mirt 1.31","text":"CRAN release: 2019-09-14 added likert2int() convert Likert-type character/factor responses integer data estfun() gains centering argument center scores (contributed Rudolf Debelak) impute argument itemfit() M2() deprecated favour removing data row-wise via na.rm=TRUE Acceptance ratio using MH samplers now returned prior ‘Stage 2’ estimation ratios better behaved. well, heuristic improved method increasing/decreasing acceptance ratios now implemented Added return_seq_model DIF() return final MG model last iteration sequential search schemes Bugfix DIF() sequential scheme selected items contained DIF first iteration (reported Scott Withrow) SIBTEST() gains plot argument create various plots depicting (weighted) differences focal subtest versus matched subtest information residuals() gains 'JSI' type compute JSI statistics proposed Edwards et al. (2018) residuals() gains 'expfull' type compute expected value table possible response patterns (just observed data) Fix key variable nested-logit models data collapsed equal intervals (reported Emil Kirkegaard) Added delta method IRT parameter transformations using multiple-group models (reported Alex Miller)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-130","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.30","title":"Changes in mirt 1.30","text":"CRAN release: 2019-01-29 empirical.poly.collapse argument added itemfit() plot expected score functions polytomous items (suggested Keri Brady) SRMSR now reported M2() GGUMs (suggested Bo mirt-package forum) weights argument added estfun.AllModelClass allow inclusion survey.weights calculate scores DIF() now simplifies output default rather returning lists anova(). Wald tests always simplified applicable, RMSEA statistics reported itemfit() tests return suitable X2 df components Fix negative TLI CFI values using C2 statistic M2() function (reported Jake Kraska Charlie Iaconangelo) Fix delta method SEs 'gpcm' itemtype (reported Lennart Schneider)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-129","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.29","title":"Changes in mirt 1.29","text":"CRAN release: 2018-08-12 lower/upper bounded parameters included default optimizer now ‘nlminb’ rather ‘L-BFGS-B’. mainly due instability ‘L-BFGS-B’ algorithm prone converging instantly unknown reasons mdirt() gains item.Q list specify Q-matrices item-category level item createItem() functions gain optional argument function definitions allow list-specified data functions mirt() via silent mirt(..., customItemsData) argument lattice auto.key default now reports lines rather points. now consistent , example, color theme changed black white trellis window Added Differential Response Function (DRF) statistics upcoming publication (Chalmers, accepted) new function entitled DRF(). related compensatory non-compensatory measures response bias DIF, DBF, DTF available SIBTEST framework IRT model fitted within multiple-group estimation framework structure argument added mdirt() function allow log-linear models simplifying profile probability model computations export internally used traditional2mirt() function transform small selection classical IRT parameterizations slope-intercept form fix survey.weights input multiple group models (reported Leigh Allison) fix itemtype = \"rsm\" block restriction items contain unequal category lengths (reported Aiden Loe) SIBTEST() computation beta coefficient changed match Shealy Stout’s (1993) form p_k * (Y_R - Y_F) (previously p_k * (Y_F - Y_R); reported Craig Wells). well, Jmin default increased 5 avoid conservative Type error behavior longer tests Fix negative chi-square differences DIF() function due non-converged sub-models (reported Daniel McKelvey)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-128","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.28","title":"Changes in mirt 1.28","text":"CRAN release: 2018-05-20 M2() function gains type input distinguish univariate-bivariate collapsed M2* statistic bivariate collapsed C2 statistic (Cai Monro, 2014). C2 can useful polytomous items degrees freedom compute fully collapsed M2* multipleGroup() gains dentype argument allow mixture IRT models fitted (e.g., dentype = 'mixture-3' fits three-class mixture model). also allow modifications zero-inflated IRT model fitted technical gains zeroExtreme logical flag assign survey weights 0 extreme response patterns (FALSE default). may required Woods’ extrapolation-interpolation method used empirical histograms avoid ill defined extrapolated densities fscores(), itemfit(), M2(), residuals() gain use_dentype_estimate argument compute EAP-based scores whenever latent trait density estimated (e.g., via empirical histograms) Empirical histograms can now now scaled [0,1] using Woods’ extrapolation-interpolation method via input dentype = 'empiricalhist_Woods'. Degrees freedom updated reflect change, 121 quadrature points used instead previous 199 better stability Semi-parametric Davidian curve estimation shape latent trait distribution unidimensional IRT models contributed Oguzhan Ogreden, well associated components used within framework (interpolation-extrapolation method described Woods, 2006). estimation method available new dentype input. mirt also now links dcurver package obtain associated computation functions EM algorithm M2(), itemfit(), SIBTEST(), fscores() gain na.rm logical remove rows missing data fscores() gains append_response.pattern logical indicate whether response patterns via response.pattern input appended factor score results new dentype argument added estimation-based functions specify density structure latent traits (default 'Gaussian'). update breaks previous empiricalhist logical option anova() accept single fitted model object return information related AIC, BIC, log-likelihood, etc Hannan–Quinn (HQ) Criterion added anova()","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-127","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.27","title":"Changes in mirt 1.27","text":"Added multidimensional version sequential response model (e.g., Tutz, 1990). Includes itemtype = 'sequential' multidimensional 2PL variant, itemtype = 'Tutz' Rasch variant Printing IRT parameters via coef(mod, IRTpars = TRUE) now computes delta method g u terms well. Interpreting generally recommended due bounded parameter nature (CIs can outside range [0,1]), included posterity createItem() gains bytecompile flag indicate whether internal functions byte-compiled using (default TRUE) Special GROUP location holder mirt.model() index group-level hyper-parameter terms key2binary() gains score_missing flag indicate whether missing values scored 0 left NA createItem() gains support derivType = 'symbolic' derivType.hss = 'symbolic' symbolically compute gradient/Hessian functions (template code-base contributed Chen-Wei Liu) createItem() gains derivType.hss argument distinguish gradient Hessian numerical computations mdirt() gains support createItem() inputs plotting points added default plot() itemplot() generics create smoother traceline functions","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fixes-1-27","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"Changes in mirt 1.27","text":"fix simdata() bug new ggum itemtype fix new grouping syntax specification mirt.model() combining START FIXED (reported Garron Gianopulos) fix IRTpars = TRUE input itemtype Rasch (reported Benjamin Shear)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-1263","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.26.3","title":"Changes in mirt 1.26.3","text":"CRAN release: 2017-11-29 mod2values() passing pars = 'values' now return data.frame objects without factor variables (previously defaults data.frame() used, created factors categorical variables default) Add monopoly itemtype fit unidimensional monotonic polynomial item response model polytomous data (see Falk Cai, 2016) Add ggum itemtype fit unidimensional/multidimensional graded unfolding model (e.g., Roberts & Laughlin, 1996). Special thanks David King providing necessary C++ derivative functions starting values Square brackets can now included mirt.model() syntax indicate group-specific constraints, priors, starting/fixed values, . general form \"CONSTRAIN [group1, group2] = ...\" \"FIXED [group1] = ...\" Added delta method several classical IRT parameterization (via coef(model, IRTpars = TRUE)) suitable information matrix previously estimated numDeriv dependency removed numerical_deriv() now supports local Richardson extrapolation type. best accuracy, now used default throughout package createItem() lagrange() now use Richardson extrapolation default instead less accurate forward/central difference method estfun() function added extract gradient information directly fitted objects (contributed Lennart Schneider) simdata() gains equal.K argument redraw data KK categories populated given item Fix initialization fscores() using ‘MH’ plausible value imputations (reported Charlie Iaconangelo) Various small bug fixes performance improvements, fixes Solaris compatibility, run small number examples R CMD check","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-125","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.25","title":"Changes in mirt 1.25","text":"CRAN release: 2017-07-23 mdirt() now supports latent regression covariate predictors. Associated function (e.g., fscores()) also include latent regression information discrete models default SIBTEST() replaced asymptotic sampling distribution version CSIBTEST described Chalmers (accepted) calcNull set FALSE default Sandwich ACOV estimate now uses Oakes estimate computations rather intensive Louis form (require low-level coding item-level Hessian terms). Added new SE.type = 'sandwich.Louis' original sandwich VCOV estimate previous version mirt fix latent regression models QMCEM MCEM algorithms (reported Seongho Bae) fscores() gains max_theta argument apply upper/lower bounds iterative searching algorithms (issue reported Sebastian Born), start input set starting values well (primarily useful mirtCAT reduce iterations) alabama package optimizer longer used. Replaced generic interface nloptr package support numerous optimizers greater control instead. Associated inputs (e.g., alabama_args) replaced well Export missing S4 methods external R packages import","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-124","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.24","title":"Changes in mirt 1.24","text":"CRAN release: 2017-05-04 MDIFF MDISC longer normal ogive metric (1.702 scaling value removed) added QMC option residuals() LD LDG2 methods. Also globally set number QMC points 5000 throughout package consistency info_if_converged logLik_if_converged added technical list indicate whether information matrix stochastic log-likelihood computed model converges. Default now TRUE added 'MCEM' method Monte Carlo EM. associated MCEM_draws function added technical list well control number draws throughout EM cycles support information matrix computations QMCEM method added (e.g., Oakes, crossprod, Louis) globally improve numerical efficiency QMC methods, including QMCEM estimator include missing data values itemfit() parametric bootstrap methods replicate missing data pattern ensure nest-logit models least 3 categories (reported Seongho Bae) convergence set FALSE g > u found 4PL model verbose console output log-posterior printed priors included EM (previously marginal likelihood) various bug fixes SIBTEST, particularly small sample sizes","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-123","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.23","title":"Changes in mirt 1.23","text":"CRAN release: 2017-03-02 anova() LRT comparison gains bounded logical indicate whether bounded parameter compared, well mix argument indicate mixture chi-squared distributions MH-RM estimation optimizer argument can now modified BFGS, L-BFGS-B, NR instead default NR1 distinction NR optimizer EM MH-RM applications included, MH-RM now defaults NR1 indicate single Newton-Raphson update uses RM filtered Hessian term method = 'SEM' added perform stochastic EM algorithm (first two stages MH-RM algorithm setup). Alternatively, setting technical = list(NCYCLES = NA) using MH-RM algorithm now returns stochastic EM results added multidim_matrix option iteminfo() expose computation information matrices bounded parameter spaces handled better using NR optimizer various bug fixes performance improvements","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-122","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.22","title":"Changes in mirt 1.22","text":"CRAN release: 2017-02-01 SE.type = 'Oakes' set new default computing standard errors via ACOV matrix using EM algorithm new SE.type = 'Oakes' compute Oakes’ 1999 form observed information matrix using central difference approximation. Applicable IRT models (including customized IRT types) added support gpcmIRT rsm itemtypes traditional generalized partial credit model Rasch rating scale model (may modified generalized rating scale model freeing slope parameters) SE.type = 'Fisher' now supports inclusion latent distribution hyper-parameters. Officially, SE-types now provide proper hyper-parameter influence information matrices wrapped various output objects mirt_df, mirt_matrix, mirt_list class avoid need passing digits argument rounding output console. Now, returned objects never rounded, makes writing Monte Carlo simulation code safer rounded results appear results added Stone’s (2000) fit statistics forthcoming PV-Q1 fit statistics itemfit()","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fixes-1-22","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"Changes in mirt 1.22","text":"patched underflow bug fscores() EAP estimates used extremely long (1000+ item) tests. Error now reported happens. Using MAP estimates extreme situations essentially equivalent now recommended","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-121","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.21","title":"Changes in mirt 1.21","text":"CRAN release: 2016-12-01 add information number freely estimated parameters print() generic plot(), auto.key disabled facet_items = FALSE dichotomous items. Also, adjusted ordering plot(mod, type = 'itemscore') reflect actual item ordering data Stretched theoretical bounds y-axis score-based functions plot() itemplot() (e.g., 3PL models now always stretch S(theta) = 0) plot(mod, type = 'score') supports .items input make expected score plots bundles items penalized term added EM algorithm estimation subroutines help keep covariance matrix latent trait parameters positive definite M-step (helps convergence properties optimizers, especially ‘L-BFGS-B’). turn penalized term use technical = list(keep_vcov_PD = FALSE) added type = 'itemscore' plot() generic plot faceted version item scoring functions. Particularly useful investigating DIF multipleGroup() better support splines itemtype multiple-group models","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fixes-1-21","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"Changes in mirt 1.21","text":"fix problem ‘EAPsum’ fscores() response.pattern input supplied (reported Eva de Schipper) plot(mod, type = 'rxx') now uses latent variance computations (reported Amin Mousavi) fix syntax input customized IRT models supplied","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-1201","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.20.1","title":"Changes in mirt 1.20.1","text":"CRAN release: 2016-10-05 df adjustment S_X2 item-fit statistic models latent trait hyper-parameters estimated itemfit() personfit() properly detect dichotomous Rasch models defined constrained slopes approach argument 'fit_stats' now used itemfit() replace longer list logicals (e.g., itemfit(mod, S_X2 = FALSE, X2 = TRUE, infit = FALSE, ...)). Now fit stats explicitly requested character vector input. Default still uses S_X2 statistic using 'lnorm' prior lower bound automatically set 0, 'beta' prior lower upper bounds set [0,1] mdirt() now uses optimizer = 'nlminb' default revert using default ‘penalized version BFGS algorithm’ instead L-BFGS-B box-constraints used (introduced version 1.19) Neale & Miller 1997 approximation added PLCI() (default still computes exact PL CIs) type = 'score' supported multiple group models itemplot() added poly2dich function quickly change polytomous response data comparable matrix dichotomous response data","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-119","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.19","title":"Changes in mirt 1.19","text":"CRAN release: 2016-08-18 penalized version BFGS algorithm now used instead L-BFGS-B upper lower bounds included (provides robust estimates) variances orthogonal factors bfactor() can now freely estimated. allows modeling designs testlet response model (example included documentation) new spline itemtype model B-spline response functions dichotomous models. Useful diagnostic purposes detecting item-misfit. Additional arguments can passed spline_args list input control behaviour splines item. Currently limited unidimensional models fscores() gains plausible.type argument select normal approximation PVs Metropolis-Hastings samples (suggested Yang Liu) mdirt() modified support DINA, DINO, located latent class, diagnostic classification models. Additionally, customTheta input required build customized latent class patterns changed previously cumbersomemdirt(..., technical = list(customTheta = Theta)) simply mdirt(..., customTheta = Theta) simdata() gains prob.list input supply list matrices probability values sampled (useful specialized response functions outside package required) simdata() supports ‘lca’ itemtypes latent class model generation improved M2 accuracy latent trait variances estimated corrected behaviour M2() linear constraints applied (M2 test previously conservative constraints used). affects single well multiple-group models (reported Rudolf Debelak) add plausible values latent class related models estimated mdirt()","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fixes-1-19","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Changes in mirt 1.19","text":"multipleGroup() throws proper error vertical scaling identified correctly due NAs S-X2 itemfit statistic fix rare expected categories appear (reported Seongho Bae)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-118","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.18","title":"Changes in mirt 1.18","text":"CRAN release: 2016-06-24 mdirt() function now includes explicit parameters latent class intercepts (log-form). implies correct standard errors can computed using various methods (e.g., SEM, Richardson, etc) new customGroup() function define hyper-parameter objects latent trait distributions (generally assumed Gaussian mean covariance structure) new boot.LR() function perform parametric bootstrap likelihood-ratio test nested models. Useful testing nested models contain bounded parameters (e.g., testing 3PL versus 2PL model) adjust lagrange() function use full information matrix (previously quasi-lagrange approximation) greatly improved speed simdata(), consequently changes default seed","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fixes-1-18","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Changes in mirt 1.18","text":"fix crash error mirtmirt() multidimensional models lr.random effects (reported Diah Wihardini) expbeta prior starting values fix setting mean prior rather mode (reported Insu Paek)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-1171","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.17.1","title":"Changes in mirt 1.17.1","text":"CRAN release: 2016-04-27 itemfit() function reworked statistics input flag (e.g., Zh = TRUE, infit = TRUE, etc). Additionally, S-X2 computed default X2/G2 (associated graphics tables) computed using 10 fixed bins added empirical.table argument return tables expected/observed values X2 G2 group.bins group.fun argument added itemfit() control size bins central tendancy function X2 G2 computations 'expbeta' option added implement beta prior specifically g u parameters internally transformed logits (performes back transformation computing values) check whether multiple-group models contain enough data estimate parameters uniquely constraints applied set starting values using parprior list mirt.model() syntax (reported Insu Paek) empirical_ES() function added effect size estimates DIF/DBF/DTF analyses (contributed Adam Meade)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fixes-1-17-1","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Changes in mirt 1.17.1","text":"standardized loadings correct factor correlations included confirmatory models (reported Seongho Bae) MDISC MDIFF values missing 1.702 multiplicitive constant (reported Yi-Ling Cheng) fix information trace-lines multiple-group plots (reported Conal Monaghan) suppress standard errors exploratory models rotate != 'none' (suggested Hao Wu) sequential schemes DIF() generated wrong results (reported Adam Meade) M2() properly accounting latent variance terms (reported Ismail Cuhadar)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-116","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.16","title":"Changes in mirt 1.16","text":"CRAN release: 2016-03-07 enable lr.random input mixedmirt() multilevel-IRT models Rasch family add common vcov() logLik() methods latent regression EM models now standard error computation supporte ‘complete’, ‘forward’, ‘central’, ‘Richardson’ methods new areainfo() function compute area information curves within specified ranges (suggested Conal Monaghan) method = 'BL' supported multiple-group models. well, SE.type = 'numerical' included return observed-data ACOV matrix call optim() (can used BL method selected) new SE.type = 'FMHRM' compute information matrix based fixed number MHRM draws, associated technical = list(MHRM_SE_draws) argument added control number draws added lagrange (.e., score) test function testing whether parameters freed single multiple group models estimated EM algorithm numerical_deriv function made available simple numerical derivatives, may useful defining fast custom itemtype derivative terms SE.type used compute ACOV matrix gained three numerical estimates forward difference (‘forward’), central difference (‘central’), Richardson extropolation (‘Richardson’)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fixes-1-16","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Changes in mirt 1.16","text":"SE methods based Louis (1982) computations longer contain NA placeholders latent trait hyper-parameters","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-115","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.15","title":"Changes in mirt 1.15","text":"CRAN release: 2016-01-21","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"minor-changes-1-15","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"Changes in mirt 1.15","text":"added SIBTEST crossed-SIBTEST procedures new function SIBTEST() added empirical_plot function building empirical plots (potential smoothing) conditioning total score low-level elements included extract.mirt() function added grsmIRT itemtype classical graded rating scale form (contributed KwonHyun Kim) added missing analytic Hessian terms gpcm_mats used (contributed Carl Falk)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fixes-1-15","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Changes in mirt 1.15","text":"fixed row-removal bug using technical = list(removeEmptyRows = TRUE) (reported Aaron Kaat)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-114","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.14","title":"Changes in mirt 1.14","text":"CRAN release: 2015-11-19","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"major-changes-1-14","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"Changes in mirt 1.14","text":"structure output objects now contains considerably fewer S4 slots, instead organized structured list elements Data, Model, Fit, . Additionally, information matrix slot removed favour providing asymptotic covariance matrix (.k.., inverse information matrix)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"minor-changes-1-14","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"Changes in mirt 1.14","text":"added extract.mirt() function allow convenient extracting internal elements crossprod SE.type now incorporates latent variable information (replaces NA placeholders) changed default full.scores = FALSE argument TRUE fscores() added profile argument plot() mdirt() objects profile plots can generated converge_info option added fscores() return convergence information add removeEmptyRows option technical list","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fixes-1-14","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Changes in mirt 1.14","text":"return vector NAs WLE estimation Fisher information matrix determinant 0 (reported Christopher Gess) fix df multiple-group models crossed /within constrains (reported Leah Feuerstahler) compute residuals responses sparse, return NaN residual computed (reported Aaron Kaat)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-113","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.13","title":"Changes in mirt 1.13","text":"CRAN release: 2015-09-10 adjust plausible values format multiple group objects simdata() gains model input impute data pre-organized models (useful conjunction mirtCAT generate datasets already converged models). Also gains mins argument specify lowest category item model supplied (default 0) number SEMCYCLES increased 50 100 MH-RM algorithm, RM gain rate changed c(.15, .65) c(.1, .75) improve item fit statistics using imputations facet plots now try keep items respective order panel theme lattice plots changed default lighter blue colour, legend now automatically placed right hand side rather top","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fixes-1-13","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Changes in mirt 1.13","text":"fix Q3 computations (noticed Katherine Castellano)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-110","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.10","title":"Changes in mirt 1.10","text":"CRAN release: 2015-06-16 using prior distributions, starting values now automatically set equal mode prior distribution, appropriate lower upper parameter bounds supplied added NEXPLORE term mirt.model() specify exploratory models via syntax add itemGAM() function provide non-linear smoother better understanding mis-functioning items (without loosing established precision reverting purely non-parametric IRT methods) category scores now automatically recoded spaces 1, message printed /occurs added MDISC() MDIFF() functions inclusion prior parameter distributions now report log-posterior rather log-likelihood. Functions anova() also report Bayesian criteria rather previous likelihood-based model comparison statistics impute argument itemfit() M2() now use plausible values instead point estimates START syntax element mirt.model() now supports multiple parameters, FIXED argument added declare parameters ‘fixed’ staring values added LBOUND UBOUND syntax support mirt.model() report proper lower upper bounds starting values data frame mod2values() invariance argument bfactor() now automatically indexes second-tier factors make multiple-group testing bfactor() easier remove rotate Target arguments model objects, pass axillary functions summary(), fscores(), etc model based arguments now can strings, passed mirt.model(). now preferred method defining models syntactically, though previous methods still work integration range (theta_lim) globally set c(-6, 6), number default quadrature nodes systematically increased parameter estimation functions. slightly change numerical results, provides consistence throughout package add theta_lim arguments various functions better control QMC grid, effective usage higher dimensions internal code organization now makes easier add user defined itemtypes (can natively added package, requested)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fixes-1-10","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Changes in mirt 1.10","text":"fix conservative imputation standard errors itemfit() M2() (reported Irshad Mujawar) fixed plausible value draws multidimensional latent regression models (reported Tongyun Li) don’t allow crossprod, Louis, sandwich information matrices using custom item types (reported Charlie Rutgers)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-19","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.9","title":"Changes in mirt 1.9","text":"CRAN release: 2015-03-29 using coef(mod, printSE=TRUE) g u parameters relabeled logit(g) logit(u) represent internal labels added various facet plots three dimensional models plot() generic support optimizer = 'nlminb', pass optimizer control arguments contol list added fixef() function extract expected values implied fixed effect parameters latent regression models added gpcm_mats argument estimation functions specifying customize scoring pattern multidimensional generalized partial credit models added custom_theta input fscores() including customized integration grids add suppress argument residuals() M2() suppress local dependence values less specific value print message DIF() DTF() hyper-parameters freely estimated focal groups constraits hetorogenous item names added mirt.model() syntax WLE support multidimensional models added added 'SEcontour' argument plot() generic use NA’s fscores() response patterns contain NA responses (suggested Tomasz Zoltak)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fix-1-9","dir":"Changelog","previous_headings":"","what":"BUG FIX","title":"Changes in mirt 1.9","text":"S-X2 itemfit() now returns appropriate values multiple-group models multidimensional plausible value imputation fix (reported KK Sasa) plot(..., type = 'infotrace') multiple group objects fixed (reported Danilo Pereira)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-18","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.8","title":"Changes in mirt 1.8","text":"CRAN release: 2015-01-22 fscores() nows accepts method = \"plausible\" draw single plausible value set plot() default type now score, accept rotation arguments exploratory models (default rotation 'none') imputeMissing() supports list plausible values generate multiple complete datasets new custom_den input fscores() use custom prior density functions Bayesian estimates optimized version ‘WLE’ estimator fscores() empirical reliability added method = 'EAPsum' fscores() new START argument mirt.model() specifying simple starting values one parameter time","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fix-1-8","dir":"Changelog","previous_headings":"","what":"BUG FIX","title":"Changes in mirt 1.8","text":"fix carryover print-error summary() confirmatory models estimated bound contraints included group hyper-parameters (reported KK Sasa)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-17","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.7","title":"Changes in mirt 1.7","text":"CRAN release: 2014-12-15","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"major-changes-1-7","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"Changes in mirt 1.7","text":"improved estimation efficiency using MH-RM algorithm. result, default seed changed, therefore results previous versions slightly different objects class ‘ExploratoryClass’ ‘ConfirmatoryClass’ merged single class ‘SingleGroupClass’ exploratory logical slot technical = list(SEtol) criteria approximating information matrix lowered 1e-4 mixedmirt() provide better standard error estiamtes","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"new-features-1-7","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"Changes in mirt 1.7","text":"boot.mirt now uses optimizer used estimate model (default previously EM) mixedmirt now supports interaction effects random intercepts, including cross-level interactions added averageMI() function compute multiple imputation averages plausible values methodology using Rubin’s 1987 method plausible value imputation now available fscores() using new plausible.draws numeric input add return.models argument DIF() return estimated models free/constrained parameters latent regression models added mixedmirt() non-Rasch models using new lr.formula input mirt.model() syntax can now define within individual item equality constraints using 1 parameter specification name syntax latent regression models added mirt() function using new covdata formula inputs added confidence envelope plots PLCI.mirt, throw warnings intervals located coef() now accepts simplify logical, indicating whether items collapsed matrix returned list length 2 (suggested Michael Friendly)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fixes-1-7","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Changes in mirt 1.7","text":"bias correction variance estimates mixedmirt random effects included (reported KK Sasa) fix missing data imputation bug itemfit() (reported KK Sasa) M2 statistic bifactor/two-tier models overly conservative better checks numerical underflow issues use triangle 0’s identifying exploratory IFA models. , standard errors/condition numbers exploratory models can estimated ","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-161","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.6.1","title":"Changes in mirt 1.6.1","text":"CRAN release: 2014-10-10","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"major-changes-1-6-1","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"Changes in mirt 1.6.1","text":"sirt package added suggests list. Special thanks Alexander Robitzsch (author sirt) developing useful wrapper functions mirt mirt.wrapper.coef(), tam2mirt(), andlavaan2mirt(). well, many examples sirt demonstrate possibility estimating specialized IRT models mirt, : Ramsay quotient, latent class, mixed Rasch, located latent class, probabilistic Guttman, nonparametric, discrete graded membership, multidimensional IRT discrete traits, DINA, Rasch copula models. exploratory IRT models longer rotated default coef(), now requires explicit rotate argument computation S_X2 statistic itemfit now much stable polytomous item types support plink package now unofficially dropped removed CRAN data inputs now required category spacing codings exactly equal 1 (e.g., [0, 1, 2, …]; patterns [0, 2, 3] implicitly missing spaces now invalid)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"new-features-1-6-1","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"Changes in mirt 1.6.1","text":"mdirt function added model discrete latent variables latent class analysis dichotomous polytomous items. Can used model several discrete IRT models well, located latent class model, multidimensional IRT discrete traits, DINA models, etc. See examples documentation details axillary support DiscreteClass objects added itemfit(), M2(), fscores(), wald(), boot.mirt() S-X2 statistic available itemfit() generalized include multidimensional models method 'QMCEM' added quasi-Monte Carlo integration mirt() multipleGroup() estimating higher dimensional models greater accuracy (suggested Alexander Robitzsch). Several axillary function fscores(), itemfit(), M2() also now contain QMC argument (accept one … argument) use integration scheme better accuracy higher dimensional models nonlinear parameter constraints EM estimation can specified using Rsolnp alabama packages passing optimizer = 'solnp' optimizer = 'alabama', well relevant package arguments solnp_ags alabama_ags list inputs itemnames argument added mirt.model() allow model specifications using raw item names rather location indicators accelerate argument changed logical character vector, now allowing three potential options: ‘Ramsay’ (default), ‘squarem’, ‘none’ modifying EM acceleration approach","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fixes-1-6-1","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Changes in mirt 1.6.1","text":"fixed bug bfactor() starting values NAs specified model argument adjust overly optimistic termination criteria EM algorithm","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-15","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.5","title":"Changes in mirt 1.5","text":"CRAN release: 2014-08-14","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"major-changes-1-5","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"Changes in mirt 1.5","text":"efficiency, Hessian longer computed fscores() unless required returned object estimation method = 'MHRM' now requires explicitly SE=TRUE call compute information matrix. matrix now computed using ML estimates rather approximated sequentially iteration (unstable), therefore separate stage performed. provides much better accuracy computations","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"new-features-1-5","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"Changes in mirt 1.5","text":"new extract.group() function extract single group object objects previously returned multipleGroup() return SRMSR statistic M2() along residual matrix (suggested Dave Flora) accept Etable default input customPriorFun (suggested Alexander Robitzsch) vignette files package examples now hosted Github can accessed following link mentioned vignette location index ?mirt help file E-step now computed parallel (available) following mirtCluster() definition run M-step optimizations passing TOL = NaN. Useful model converge instantly parameters exactly equal starting values confidence envelope plots itemplot() generate shaded regions instead dotted lines, confidence interval plots added plot() generic MI input passes fscores() slightly optimized upcoming mirtCAT package release method = 'EAPsum' argument fscores() support multidimensional models","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fixes-1-5","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Changes in mirt 1.5","text":"fix forcing SEs MHRM information matrix computations positive imputeMissing() crash fix multiple-group models fix divide--0 bug E-step number items large fix crash EM estimation SE.type = 'MHRM'","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-14","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.4","title":"Changes in mirt 1.4","text":"CRAN release: 2014-06-22","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"major-changes-1-4","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"Changes in mirt 1.4","text":"calculating information matrix exploratory item factor analysis models disabled since rotational indeterminacy model results improper parameter variation changed default theta_lim c(-6,6) number quadrature defaults increased well @Data slot added organizing data based arguments. Removed several data slots estimated objects consequence removed ‘Freq’ column passing response.pattern argument fscores() increase number Mstep iterations proportionally quasi-Newton algorithms estimation approaches ML location ‘rsm’ itemtype removed now optimized version implemented","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"new-features-1-4","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"Changes in mirt 1.4","text":"link mirt vignettes Github registered knitr package now available package index optimizer argument added estimation function switch default optimizer. Multiple optimizers now available, including BFGS (EM default), L-BFGS-B, Newton-Raphson, Nelder-Mead, SANN new survey.weights argument can passed parameter estimation functions (.e., mirt()) apply -called stratification/survey-weights estimation returnList argument added simdata() return list containing S4 item objects, Theta matrix, simulated data support custom item type fscores() computations response.pattern passed instead original data impute option itemfit() M2() estimate statistics via plausible imputation missing data present multidimensional ideal-point models added dichotomous items M2* statistic added polytomous item types Bock Lieberman ('BL') method argument added (recommend serious use)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fixes-1-4","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Changes in mirt 1.4","text":"large bias correction information matrix standard errors models contain equality constraints (standard errors high) drop dimensions fix nested logit models","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-13","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.3","title":"Changes in mirt 1.3","text":"CRAN release: 2014-04-23","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"major-changes-1-3","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"Changes in mirt 1.3","text":"default SE.type changed crossprod since better detecting models identified compared SEM, generally much cheaper compute larger models M-step optimizer now automatically selected ‘BFGS’ bounded parameters, ‘L-BFGS-B’ otherwise. models notably different parameter estimates , nearly identical model log-likelihoods better shiny UI adapts itemtype specifically, allows classical parameter inputs (special thanks Jonathan Lehrfeld providing code inspired changes) scores.option now set TRUE fscores() type = 'score' plot generics longer adjusts categories expected test scores M-step optimizer EM now deters --order graded response model intercepts (problem startvalues far ML estimate graded models)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"new-features-1-3","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"Changes in mirt 1.3","text":"return.acov logical added fscores() return list matrices containing ACOV theta values used compute SEs (suggested Shiyang Su) printCI logical option summary() print confidence intervals standardized loadings new expected.test() function, extension expected.item() whole test mirt.model() syntax supports multiple * combinations COV = easily specifying covariation blocks factors. Also allows variances freed specifying factor name, e.g., F*F full.scores.SE logical option fscores() return standard errors respondent multiple imputation (MI) option fscores(), useful obtaining less biased factor score estimates model parameter variability large (usually due smaller sample size) group-level (.e., means/covariances) equality constrains now available EM algorithm theta_lim input plot(), itemplot(), fscores() modifying range latent values evaluated","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fixes-1-3","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Changes in mirt 1.3","text":"personfit() crash multipleGroup objects since itemtype slot filled (reported Michael Hunter) fix crash two-tier models correlations estimated (reported David Wu) R 3.1.0 appears evaluate List objects differently c level causing strange behaviour, therefore slower R versions internal function (mirt:::reloadPars()) used patch formed behaviour mvtnorm::dmvnorm changed version 0.9-9999, causing widely different convergence results. Similar versions older mvtnorm functions now implemented instead","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-121-1","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.2.1","title":"Changes in mirt 1.2.1","text":"CRAN release: 2014-02-21","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"major-changes-1-2-1","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"Changes in mirt 1.2.1","text":"fitIndices() replaced M2() function, currently limited dichotomous items class ‘dich’ bfactor() default SE.type set ‘crossprod’ rather ‘SEM’ generalized partial credit models now display fixed scoring coefs TOL convergence criteria moved outside technical input argument restype argument residuals() changed type consistent package removed fitted() since residuals(model, type = 'exp') gives essentially output mixedmirt SE set TRUE default help construct accurate information matrix specified, S-EM TOL dropped 1e-6 EM, SEtol = .001 parameter better approximate information matrix","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"new-features-1-2-1","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"Changes in mirt 1.2.1","text":"two new SE.type inputs: ‘Louis’ ‘sandwich’ computing Louis’ 1982 computation observed information matrix, sandwich estimate covariance matrix .data.frame logical option coef() convert list row-stacked data.frame type = 'scorecontour' added plot() contour plot expected total scores type = 'infotrace' added itemplot() plot trace lines information plot, type = 'tracecontour' contour plot using trace lines (suggested Armi Lantano) mirt.model() support multi-line inputs new type = 'LDG2' input residuals() compute local dependence stat based G2 instead X2, type = 'Q3' added well S-EM computation information matrix support latent parameters, previously effective estimation item-level parameters. technical option also added force information matrix symmetric (default set TRUE better numerical stability) new empirical.CI argument itemfit() used plotting confidence intervals dichotomous items (suggested Okan Bulut) printSE argument can now passed coef() printing standard errors instead confidence intervals. consequence, rawug automatically set TRUE (suggested Olivia Bertelli) second-order test condition number added estimated objects information matrix computed tables argument can passed residuals() return observed expected tables used computing LD statistics","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fixes-1-2-1","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Changes in mirt 1.2.1","text":"using scores.= TRUE multipleGroup objects returns correct person ordering (reported Mateusz Zoltak) read.mirt() crash fix multiple group analyses objects (reported Felix Hansen) updated math SE.type = 'crossprod'","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-11","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.1","title":"Changes in mirt 1.1","text":"CRAN release: 2013-12-20","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"new-features-1-1","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"Changes in mirt 1.1","text":"facet_items argument added plot() control whether separate plots constructed item merge onto single plot three dimensional models supported itemplot() types trace, score, info, SE new DIF() function quicky calculate common differential item functioning routines, similar IRTLRDIF worked. Supports likelihood ratio testings well Wald approach, includes forward backword sequential DIF searching methods added shiny = TRUE option itemplot() run interactive shiny applet. Useful instructive purposes, well understanding internal parameters mirt behave type = 'trace' type = 'infotrace' support added plot generic multiple group objects fscores(..., method = 'EAPsum') returns observed expected values, along general fit statistics printed console returned ‘fit’ attribute removed multinomial constant log-likelihood since influence nested model comparisons SE.type = 'crossprod' Fisher added computing parameter information matrix based variance Fisher scoring vector complete Fisher information matrix, respectively customPriorFun input technical list now available utilizing user defined prior distribution functions EM algorithm empirical histogram estimation now available mirt() multipleGroup() unidimensional models. Additional plot type = 'empiricalhist' also added plot() generic re-implement read.mirt() better consistency checking plink package","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fixes-1-1","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Changes in mirt 1.1","text":"starting values multipleGroup() now returns proper estimated parameter information invariance input argument remove .integer() MultipleGroup df slot pass proper item type using custom pattern calles fscores() return proper object personfit gpcm models used","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-10","dir":"Changelog","previous_headings":"","what":"Changes in mirt 1.0","title":"Changes in mirt 1.0","text":"CRAN release: 2013-11-01","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"new-features-1-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"Changes in mirt 1.0","text":"GenRandomPars logical argument now supported technical = list() input. generate random starting values freely estimated parameters, can helpful determine obtained solutions local minimums seperate free_var free_cov invariance options available multipleGroup new CONSTRAIN CONSTRAINB arguments mirt.model() syntax specifying equality constraints explicitly parameters accross items groups. Also PRIOR = ... specification brought back uses similar format new CONSTRAIN options plot(..., type = 'trace') now supports polytomous dichotomous tracelines, type = 'infotrace' better y-axis range removed ‘1PL’ itemtype since name ambiguous. Still possible obtain however applying slope constraints 2PL/graded response models plot() contains .items argument specify items plot aggregate type, 'infotrace' 'trace' fitIndicies() return CFI.M2 TLI.M2 argument calcNull = TRUE passed. CFI stats also normed fall 0 1 data.frame returned mod2values() pars = 'values' now contains column indicating internal item class use ginv() MASS package improve accuracy fitIndices() calculation M2","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fixes-1-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Changes in mirt 1.0","text":"fix error thrown PLCI.mirt parameter value equal bound fix global df values, restrict G2 statistic tables sparse","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-090","dir":"Changelog","previous_headings":"","what":"Changes in mirt 0.9.0","title":"Changes in mirt 0.9.0","text":"CRAN release: 2013-08-31","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"new-features-0-9-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"Changes in mirt 0.9.0","text":"PLCI.mirt() function added computing profiled likelihood standard errors. Currently applicable unidimensional models prior distributions returned pars = 'values' data.frame along input parameters, can edited returned well full.scores option residuals() compute residuals row original data bfactor() can include additional model argument modeling two-tier structures introduced Cai (2010), now supports 'group' input multiple group analyses added general Ramsey (1975) acceleration EM estimation default. Can disable accelerate = FALSE (done automatically estimating SEM standard errors) renamed response.vector response.pattern fscores(), now supports matrix input computing factor scores larger data sets (suggested Felix Hansen) total.info logical added iteminfo() return either total item information information category mirt.model() supports -called Q-matrix input format, along matrix input covariance terms MH-RM algorithm now accessible passing mirt(..., method = 'MHRM'), confmirt() function removed completely. confmirt.model() also renamed mirt.model() support polynomial interaction terms EM estimation lognormal priors may now passed parprior iterative computations fscores() can now run parallel automatically following mirtCluster() definition mirtCluster() function added make utilizing parallel cores convenient. Globally removed cl argument multi-core objects updated documentation data sets adding relevant examples, added Bock1997 data set replicating table 3 van der Linden, W. J. & Hambleton, R. K. (1997) Handbook modern item response theory general speed improvements functions","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fixes-0-9-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Changes in mirt 0.9.0","text":"WLE estimation fixed now estimates extreme response patterns exploratory starting values longer crash datasets huge number NAs, caused standard deviations zero math fix beta priors","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-080","dir":"Changelog","previous_headings":"","what":"Changes in mirt 0.8.0","title":"Changes in mirt 0.8.0","text":"CRAN release: 2013-07-02","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"new-features-0-8-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"Changes in mirt 0.8.0","text":"support random effect predictors now available mixedmirt(), along randef() function computing MAP predictions random parameters EAPsum support fscores() mixed item types consistency current IRT software (rather TESTFACT POLYFACT), scaling constant set D = 1 fixed value nominal.highlow option added specify categories highest lowest nominal models. Often provide better numerical stability utilized. Default still use highest lowest categories increase number draws Monte Carlo calculation log-likelihood 3000 5000 itemtype equal ‘Rasch’ ‘rsm’ models latent variance parameter(s) automatically freed estimated mixedmirt() supportive user defined R formulas, now includes internal ‘items’ argument create item design matrix used estimate intercepts. closely mirrors results lme4 Rasch models well (special thanks Kevin Joldersma testing debugging) drop.zeros option added extract.item itemplot reduce dimensionality factor structures contain slopes equal zero EM tolerance (TOL argument) default dropped .0001 (originally .001) type = 'score' type = 'infoSE' added plot() generic expected total score joint test standard error/information custom latent mean covariance matrix can passed fscores() EAP, MAP, EAPsum methods. Also applies personfit() itemfit() diagnostics scores.option fscores() returning just estimated factor scores bfactor can include NA values model omit estimation specific factors corresponding item","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fixes-0-8-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Changes in mirt 0.8.0","text":"limiting values z.outfit z.infit statistics small sample sizes (fix suggested Mike Linacre) missing data gradient bug fix MH-RM dichotomous item models global df fix multidimensional confirmatory models SEM information matrix computed accuracy (M-step identical original EM), fixed equality constrains imposed","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-070","dir":"Changelog","previous_headings":"","what":"Changes in mirt 0.7.0","title":"Changes in mirt 0.7.0","text":"CRAN release: 2013-04-21","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"new-features-0-7-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"Changes in mirt 0.7.0","text":"new '#PLNRM' models fit Suh & Bolt (2010) nested logistic models 'large' option added estimation functions. Useful datasets analysed large organizing data becomes computationally burdensome task avoided fitting new models. Also, overall faster handling datasets plot(), fitted(), residuals() generic support added MultipleGroup objects CFI X2 model statistics added, output now includes fit stats w.r.t. G2 X2 z stats added itemfit/personfit infit outfit statistics supplemented EM (‘SEM’) added calculating information matrix EM history. default TOL value dropped help make EM iterations longer stable. Supports parallel computing added return empirical reliability (returnER) option fscores() plot() supports individual item information trace lines graph (dichotomous items ) option type = 'infotrace' createItem() function available defining item types can passed estimation functions. can used model items available package (anywhere matter) EM MHRM. Derivatives computed numerically default using numDeriv package defining item types fly Mstep EM moved quasi-Newton instead home grown MV Newton-Raphson approach. Gives stability estimation Hessian ill-conditioned, provide easier front-end defining user rolled IRT models","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fixes-0-7-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Changes in mirt 0.7.0","text":"small bias fix Hessian gradients mirt() implementation causing likelihood always increasing near maximum fix input itemplot() object list model objects fixed implementation infit outfit Rasch statistics order nominal category intercepts sometimes backwards. Fixed now S_X2 collapsed cells much caused negative df response.vector input now supports NA inputs (reported Neil Rubens)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-060","dir":"Changelog","previous_headings":"","what":"Changes in mirt 0.6.0","title":"Changes in mirt 0.6.0","text":"CRAN release: 2013-03-19","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"new-features-0-6-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"Changes in mirt 0.6.0","text":"S-X2 statistic computed automatically unidimensional models via itemfit() EAP sum-scores added fscores() method = ‘EAPsum’. Works full.scores option well improve speed estimation multipleGroup() latent means/variances estimated multipleGroup(invariance = ’’) can include item names specify items considered invariant across groups. Useful anchoring DIF testing type = ‘trace’ option added plot() display item trace lines single graph (dichotomous items ) default estimation method multipleGroup() switched ‘EM’ boot.mirt() function added computing bootstrapped standard errors via boot package (supports parallel computing well), well new option SE.type = ’’ choosing Bock Lieberman MHRM type information matrix computations indexing items itemplot, itemfit, extract.item can called using either number original item name added probtrace() function front end users generate probability trace functions models plotting item tracelines two categories now omits lowest category (common) parallel option passed calcLogLik compute Monte Carlo log-likelihood quickly. Can also passed call stack confmirt, multipleGroup, mixedmirt Confidence envelopes option added itemplot() trace lines information plots lbound ubound parameter bounds now available user restricting parameter estimation space mod2values() function added convert estimated mirt model appropriate data.frame used determine parameter estimation characteristics (starting values, group names, etc) added imputeMissing() function impute missing values given estimated mirt model. Useful checking item person fit diagnostics obtaining overall model fit statistics allow Rasch itemtype multidimensional confirmatory models oblimin new default exploratory rotation (suggested Dave Flora) flexible calculation M2 statistic fitIndicies(), user prompt option internal variables grow large cause time/RAM problems","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"bug-fixes-0-6-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Changes in mirt 0.6.0","text":"read.mirt() fixed objects contain standard errors (didn’t properly line ) mixedmirt() fix COV argument supplied (reported Aaron Kaat) fix multipleGroup independent groups don’t contain potential response options (reported Scot McNary) prevent using ‘free_means’ ‘free_varcov’ multipleGroup since identified without constraints (reported Ken Beath)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-050","dir":"Changelog","previous_headings":"","what":"Changes in mirt 0.5.0","title":"Changes in mirt 0.5.0","text":"CRAN release: 2013-01-17 dichotomous, graded rating scale, (generalized) partial credit, rating scale, nominal models better optimized wald() now support information matrices contain constrained parameters confmirt.model() can accept string inputs, may useful knitr/sweave documents since scan() function tends hang multipleGroup() now logical options bfactor = TRUE use dimensional reduction algorithm factor pattern structured like bifactor model new fitIndices() function added compute additional model fit statistics M2 testinfo() function added test information lower bound parameters stringent control estimation bounded never higher .6 infit outfit stats itemfit() now work Rasch partial credit rating scale models Rasch rating scale models can now estimated potential rsm.blocks (grsm model). “Generalized” rating scale models can also estimated, though requires manipulating starting values directly added sample size adjusted BIC (SABIC) information statistics new mixedmirt() function estimating IRT models person item level (e.g., LLTM) covariates. Currently supports fixed effect predictors, random effect predictors developed structured output using anova() generic","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-042","dir":"Changelog","previous_headings":"","what":"Changes in mirt 0.4.2","title":"Changes in mirt 0.4.2","text":"CRAN release: 2012-11-25 item probability functions now permit permissible values, models may converge even log-likelihood decreases estimation. EM model strictly increasing log-likelihood warning message printed infit outfit statistics now applicable Rasch models (), itemfit/personfit() ‘method’ argument added specify factor score estimates used read.mirt() re-added package allow translating estimated models format usable plink package test standard error added plot() generic using type = ‘SE’, expected score plot added itemplot() using type = ‘score’ weighted likelihood estimation (WLE) factor scores now available (without standard errors) removed allpars option coef() generics return named list (possibly rotated) item group coefficients information functions slightly positively biased due logistic constant adjustment, fixed models. Also, information functions now available almost item response models (mcm items missing) constant (D) used estimating logistic functions can now modified (default still 1.702) partcomp models recently broken, fixed now one parameter can now passed parprior make specifying identical priors convenient","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-041","dir":"Changelog","previous_headings":"","what":"Changes in mirt 0.4.1","title":"Changes in mirt 0.4.1","text":"CRAN release: 2012-10-23 relative efficiency plots added itemplot(). Works directly multipleGroup analysis comparing different item types (e.g., 1PL vs 2PL) can wrapped named list infit outfit statistics added personfit() itemfit() empirical reliability printed dimension fscores(…, fulldata = FALSE) called better system specify fixed/free parameters starting values using pars = ‘values’. allow much better simulation based work graded model type rating scale added (Muraki, 1990) optional estimation ‘blocks’. Use itemtype = ‘grsm’, grsm.block option multipleGroup(), optional input added change current freely estimated parameters values previously computed model. save needless iterations EM MHRM since parameters much closer new ML estimates itemplot() supports multipleGroup objects now analytical derivatives much stable, although yet optimized estimation bug fix bfactor(), slight bias fix mirt() estimation (introduced version 0.4.0 multipleGroup() added) updated documentation beamer slide show included background MIRT packages capabilities labels added coef() standard errors computed. Also allpars = TRUE now default kernel estimation moved entirely one method. Much easier maintain guarantees consistency across methods (.e., quasi-Newton algorithms used)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-040","dir":"Changelog","previous_headings":"","what":"Changes in mirt 0.4.0","title":"Changes in mirt 0.4.0","text":"CRAN release: 2012-09-22 Added itemfit() personfit() functions uni multidimensional models. Within itemfit empirical response curves can also plotted unidimensional models Wrapped itemplot() fscores() S3 function better documentation. Also response curve now contained individual plots Added free.start list option estimation functions. Allows quicker way specify free fixed parameters Added iteminfo() extract.item() calculate item information extract desired items Multiple group estimation available multipleGroup() function. Uses EM MHRM estimation engines. MHRM seems faster two factors+ though naturally accurate, therefore set default wald() function added testing linear constraints. Useful situations testing sets parameters rather estimating new model likelihood ratio test Methods use MHRM can now estimate nominal, gpcm, mcm, 4PL models fscores computable multiple group objects general play nicer missing data (reported Judith Conijn). Also, using options full.scores = TRUE optimized Rcpp Oblique rotation bug fix fscores coef (reported Pedro . Barbetta) Added item probability equations ?mirt documentation reference General bug fixes usual spawned added features. Overall, stay frosty.","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-031","dir":"Changelog","previous_headings":"","what":"Changes in mirt 0.3.1","title":"Changes in mirt 0.3.1","text":"Individual classes now correspond type methods: ExploratoryClass, ConfirmatoryClass, MultipleGroupClass plot itemplot now works confmirt objects mirt can now make use confmirt.model specified objects hence confirmatory well stochastic estimation factor scores removed entirely, now quadrature based methods objects. Also, bfactor returned objects now estimate factors scores instead just general dimension Standard errors mirt now automatically calculated (borrowed running tweaked MHRM run)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-030","dir":"Changelog","previous_headings":"","what":"Changes in mirt 0.3.0","title":"Changes in mirt 0.3.0","text":"CRAN release: 2012-08-23 radically changed underlying mechanisms estimation functions decided polymirt() redundant replaced completely calling confmirt(data, number_of_factors). reason change facilitate wider range MIRT models allow easier extensions future multiple group analysis multilevel modelling new univariate MV models available, including 1-4 parameter logistic generalized partial credit, nominal, multiple choice models. called specifying character vector called ‘itemtype’ length nitems options ‘2PL’,‘3PL’,‘4PL’,‘graded’,‘gpcm’, ‘nominal’, ‘mcm’; use ‘PC2PL’ ‘PC3PL’ partially-compensatory items. itemtype = ‘1PL’ ‘Rasch’, 1-parameter logistic/1-parameter ordinal Rasch/partial credit models estimated data. default assumes items either ‘2PL’ ‘graded’, . flexible user defined linear equality restrictions may imposed estimation functions, can prior parameter distributions, start values, choice parameters estimate. follow general 2 steps: Call function normally use, example, mirt(data, 1, startvalues = ‘index’) return start values indexed Edit please (without changing structure), input back function mirt(data, 1, startvalues = editedstartvalues). true parprior (MAP priors), constrain (linear equality constraints), freepars (parameters freely estimated), little quirk. inputs lists named parameters easy identification manipulation. Note means partial credit model Rasch models may calculated well modifying either start values constraints accordingly (e.g., constrain slopes equal 1/1.702 freely estimated classical Rasch model, equal estimated 1PL model) number confmirt.model() options decreased due new way specify item types, startvalues, prior parameter distributions, constraints plink package kept item information curves, ’ll implement now. Replaced plink item plots ‘itemplots’ function ones rolled package descriptions documentation updated coef() now prints slightly different output, new option ‘allpars = TRUE’ display item group parameters, returned list simdata() updated support new item types accurate standard errors MAP ML factor scores, specific factors bfactorClass objects can now estimated methods","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-026-1","dir":"Changelog","previous_headings":"","what":"Changes in mirt 0.2.6-1","title":"Changes in mirt 0.2.6-1","text":"dropped ball lots bug fixes round. Future commits avoid problem utilizing testthat package test code extensively release internal change confmirt function move MHRM engine outside function better maintenance theta_angle added mirt polymirt plots changing viewing angle w.r.t theta_1 null model longer calculated missing data present fixed item slope models estimated mirt() associated standard errors","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-026","dir":"Changelog","previous_headings":"","what":"Changes in mirt 0.2.6","title":"Changes in mirt 0.2.6","text":"CRAN release: 2012-07-15 null model computed, allowing model statistics TLI documentation changes many back end technical details estimation moved technical lists support GPArotation methods options, including Target rotations polymirt() uses confmirt() estimation engine 4PL support mirt() bfactor(), treating upper bound fixed coef() now rotate option returning rotated IRT parameters","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-025","dir":"Changelog","previous_headings":"","what":"Changes in mirt 0.2.5","title":"Changes in mirt 0.2.5","text":"CRAN release: 2012-06-07 Fixed translation bug C++ code bfactor() causing illegal vector length throw Fixed fscores() bug using polychotomous items mirt() bfactor() pass rotate=‘rotation’ mirt polymirt override default ‘varimax’ rotation estimation time (suggested Niels Waller) RMSEA, G^2, p set NaN instead internal placeholder missing data df adjusted missing data present oblique rotations return invisible factor correlation matrix","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-024","dir":"Changelog","previous_headings":"","what":"Changes in mirt 0.2.4","title":"Changes in mirt 0.2.4","text":"CRAN release: 2012-05-09 degrees freedom correctly adjusted using noncompensatory items confmirtClass reorganized work S4 methods, now work consistently methods. fixed G^2 log-likelihood logLik() product terms included bugfix drawThetas noncompensatory items used","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-023","dir":"Changelog","previous_headings":"","what":"Changes in mirt 0.2.3","title":"Changes in mirt 0.2.3","text":"CRAN release: 2012-05-02 bugfixes fscores, itemplot, generic functions read.mirt() added creating suitable plink object mirt() bfactor() can now accommodate polychotomous items using ordinal IRT scheme itemplot() now makes use handy plink package plots, giving good deal flexibility. Generic plot()’s now use lattice plots extensively","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-022","dir":"Changelog","previous_headings":"","what":"Changes in mirt 0.2.2","title":"Changes in mirt 0.2.2","text":"Ported src code Rcpp future tweaking. Added better fitted() function missing data exist (noticed Erin Horn)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-021","dir":"Changelog","previous_headings":"","what":"Changes in mirt 0.2.1","title":"Changes in mirt 0.2.1","text":"CRAN release: 2012-04-06 ML estimation factor scores mirt bfactor RMSEA statistic added fitted models Nonlinear polynomial estimation specification confmirt models, now consistent returned labels Provide better identification criteria confmirt() (suggested Hendrik Lohse)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-020","dir":"Changelog","previous_headings":"","what":"Changes in mirt 0.2.0","title":"Changes in mirt 0.2.0","text":"CRAN release: 2012-02-15 parameter standard errors added mirt() (1 factor ) bfactor() models bfactor() values ommited recoded NA summary coef better viewing ‘technical’ added confmirt function, allowing various tweaks varying beta prior weights product relations added confmirt.model(). Specified enclosing brackets using asterisk documentation fixes roxygenize","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-0120","dir":"Changelog","previous_headings":"","what":"Changes in mirt 0.1.20","title":"Changes in mirt 0.1.20","text":"allow lower bound beta priors vary items (suggested James Lee)","code":""},{"path":"https://philchalmers.github.io/mirt/news/index.html","id":"changes-in-mirt-016","dir":"Changelog","previous_headings":"","what":"Changes in mirt 0.1.6","title":"Changes in mirt 0.1.6","text":"bias fix mirt() function (noticed Pedro Barbetta)","code":""}]
