% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PLCI.mirt.R
\name{PLCI.mirt}
\alias{PLCI.mirt}
\title{Compute profiled-likelihood (or posterior) confidence intervals}
\usage{
PLCI.mirt(mod, alpha = 0.05, parnum = NULL, fun = NULL, inv.fun = NULL,
  fun.lower = -Inf, fun.upper = Inf, ...)
}
\arguments{
\item{mod}{a converged mirt model}

\item{alpha}{two-tailed alpha critical level}

\item{parnum}{a numeric vector indicating which parameters to estimate.
Use \code{\link{mod2values}} to determine parameter numbers. If \code{NULL}, all possible
parameters are used}

\item{fun}{a function used to define a transformation of 1 or more parameters of the
form \code{fun(par)}, where \code{par} is one or more parameters indicated by
the \code{parnum} input. This function must return a single numeric value}

\item{inv.fun}{the inverse transformation function of \code{fun} of the form
\code{inv.fun(newpar, par)}, where \code{par} is defined as before, however
\code{newpar} is the the transformed parameter(s) (e.g., returned from \code{fun(par)}).
Note that the length of the returned vector should be the same as the original length
of \code{par}}

\item{fun.lower}{lower bound used when \code{fun} is supplied. Default is -Inf}

\item{fun.upper}{upper bound used when \code{fun} is supplied. Default is Inf}

\item{...}{additional arguments to pass to the estimation functions}
}
\description{
Computes profiled-likelihood based confidence intervals. Supports the inclusion of
equality constraints. Object returns the confidence intervals
and whether the respective interval could be found.
}
\examples{

\dontrun{
mirtCluster() #use all available cores to estimate CI's in parallel
dat <- expand.table(LSAT7)
mod <- mirt(dat, 1)

result <- PLCI.mirt(mod)
result

mod2 <- mirt(Science, 1)
result2 <- PLCI.mirt(mod2)
result2

#only estimate CI's slopes
sv <- mod2values(mod2)
parnum <- sv$parnum[sv$name == 'a1']
result3 <- PLCI.mirt(mod2, parnum=parnum)
result3

#####
# transformation example for computing PL CI of difficulty parameter
dat <- expand.table(LSAT7)
mod <- mirt(dat, 1)

fun <- function(par) -par[2]/par[1]
inv.fun <- function(newpar, par) c(par[1], -newpar * par[1])

PLCI.mirt(mod, parnum=c(1,2), fun=fun, inv.fun=inv.fun)

}
}
\author{
Phil Chalmers \email{rphilip.chalmers@gmail.com}
}
\seealso{
\code{\link{boot.mirt}}
}
\keyword{likelihood}
\keyword{profiled}

